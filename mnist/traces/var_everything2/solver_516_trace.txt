I0428 19:47:28.438462 26201 caffe.cpp:218] Using GPUs 0
I0428 19:47:28.477902 26201 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:28.998443 26201 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test516.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:28.998585 26201 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test516.prototxt
I0428 19:47:28.998952 26201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:28.998970 26201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:28.999055 26201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:28.999124 26201 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:28.999228 26201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:28.999251 26201 net.cpp:86] Creating Layer mnist
I0428 19:47:28.999258 26201 net.cpp:382] mnist -> data
I0428 19:47:28.999281 26201 net.cpp:382] mnist -> label
I0428 19:47:29.000375 26201 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:29.002840 26201 net.cpp:124] Setting up mnist
I0428 19:47:29.002857 26201 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:29.002863 26201 net.cpp:131] Top shape: 64 (64)
I0428 19:47:29.002867 26201 net.cpp:139] Memory required for data: 200960
I0428 19:47:29.002876 26201 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:29.002890 26201 net.cpp:86] Creating Layer conv0
I0428 19:47:29.002897 26201 net.cpp:408] conv0 <- data
I0428 19:47:29.002907 26201 net.cpp:382] conv0 -> conv0
I0428 19:47:29.286495 26201 net.cpp:124] Setting up conv0
I0428 19:47:29.286523 26201 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:29.286527 26201 net.cpp:139] Memory required for data: 938240
I0428 19:47:29.286559 26201 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:29.286572 26201 net.cpp:86] Creating Layer pool0
I0428 19:47:29.286576 26201 net.cpp:408] pool0 <- conv0
I0428 19:47:29.286582 26201 net.cpp:382] pool0 -> pool0
I0428 19:47:29.286628 26201 net.cpp:124] Setting up pool0
I0428 19:47:29.286633 26201 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:29.286636 26201 net.cpp:139] Memory required for data: 1122560
I0428 19:47:29.286639 26201 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:29.286650 26201 net.cpp:86] Creating Layer conv1
I0428 19:47:29.286653 26201 net.cpp:408] conv1 <- pool0
I0428 19:47:29.286659 26201 net.cpp:382] conv1 -> conv1
I0428 19:47:29.288498 26201 net.cpp:124] Setting up conv1
I0428 19:47:29.288513 26201 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:29.288532 26201 net.cpp:139] Memory required for data: 1155328
I0428 19:47:29.288542 26201 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:29.288550 26201 net.cpp:86] Creating Layer pool1
I0428 19:47:29.288554 26201 net.cpp:408] pool1 <- conv1
I0428 19:47:29.288559 26201 net.cpp:382] pool1 -> pool1
I0428 19:47:29.288599 26201 net.cpp:124] Setting up pool1
I0428 19:47:29.288604 26201 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:29.288607 26201 net.cpp:139] Memory required for data: 1163520
I0428 19:47:29.288625 26201 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:29.288632 26201 net.cpp:86] Creating Layer ip1
I0428 19:47:29.288636 26201 net.cpp:408] ip1 <- pool1
I0428 19:47:29.288640 26201 net.cpp:382] ip1 -> ip1
I0428 19:47:29.289633 26201 net.cpp:124] Setting up ip1
I0428 19:47:29.289644 26201 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:29.289647 26201 net.cpp:139] Memory required for data: 1176320
I0428 19:47:29.289655 26201 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:29.289662 26201 net.cpp:86] Creating Layer relu1
I0428 19:47:29.289666 26201 net.cpp:408] relu1 <- ip1
I0428 19:47:29.289686 26201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:29.289904 26201 net.cpp:124] Setting up relu1
I0428 19:47:29.289913 26201 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:29.289916 26201 net.cpp:139] Memory required for data: 1189120
I0428 19:47:29.289919 26201 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:29.289927 26201 net.cpp:86] Creating Layer ip2
I0428 19:47:29.289930 26201 net.cpp:408] ip2 <- ip1
I0428 19:47:29.289935 26201 net.cpp:382] ip2 -> ip2
I0428 19:47:29.290050 26201 net.cpp:124] Setting up ip2
I0428 19:47:29.290057 26201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:29.290060 26201 net.cpp:139] Memory required for data: 1191680
I0428 19:47:29.290066 26201 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:29.290071 26201 net.cpp:86] Creating Layer relu2
I0428 19:47:29.290074 26201 net.cpp:408] relu2 <- ip2
I0428 19:47:29.290078 26201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:29.290892 26201 net.cpp:124] Setting up relu2
I0428 19:47:29.290904 26201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:29.290923 26201 net.cpp:139] Memory required for data: 1194240
I0428 19:47:29.290926 26201 layer_factory.hpp:77] Creating layer loss
I0428 19:47:29.290935 26201 net.cpp:86] Creating Layer loss
I0428 19:47:29.290938 26201 net.cpp:408] loss <- ip2
I0428 19:47:29.290942 26201 net.cpp:408] loss <- label
I0428 19:47:29.290948 26201 net.cpp:382] loss -> loss
I0428 19:47:29.290967 26201 layer_factory.hpp:77] Creating layer loss
I0428 19:47:29.291225 26201 net.cpp:124] Setting up loss
I0428 19:47:29.291234 26201 net.cpp:131] Top shape: (1)
I0428 19:47:29.291239 26201 net.cpp:134]     with loss weight 1
I0428 19:47:29.291251 26201 net.cpp:139] Memory required for data: 1194244
I0428 19:47:29.291254 26201 net.cpp:200] loss needs backward computation.
I0428 19:47:29.291259 26201 net.cpp:200] relu2 needs backward computation.
I0428 19:47:29.291260 26201 net.cpp:200] ip2 needs backward computation.
I0428 19:47:29.291263 26201 net.cpp:200] relu1 needs backward computation.
I0428 19:47:29.291265 26201 net.cpp:200] ip1 needs backward computation.
I0428 19:47:29.291268 26201 net.cpp:200] pool1 needs backward computation.
I0428 19:47:29.291281 26201 net.cpp:200] conv1 needs backward computation.
I0428 19:47:29.291285 26201 net.cpp:200] pool0 needs backward computation.
I0428 19:47:29.291287 26201 net.cpp:200] conv0 needs backward computation.
I0428 19:47:29.291291 26201 net.cpp:202] mnist does not need backward computation.
I0428 19:47:29.291295 26201 net.cpp:244] This network produces output loss
I0428 19:47:29.291302 26201 net.cpp:257] Network initialization done.
I0428 19:47:29.291585 26201 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test516.prototxt
I0428 19:47:29.291610 26201 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:29.291713 26201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:29.291797 26201 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:29.291839 26201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:29.291857 26201 net.cpp:86] Creating Layer mnist
I0428 19:47:29.291862 26201 net.cpp:382] mnist -> data
I0428 19:47:29.291869 26201 net.cpp:382] mnist -> label
I0428 19:47:29.291975 26201 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:29.293953 26201 net.cpp:124] Setting up mnist
I0428 19:47:29.293983 26201 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:29.293989 26201 net.cpp:131] Top shape: 100 (100)
I0428 19:47:29.294008 26201 net.cpp:139] Memory required for data: 314000
I0428 19:47:29.294013 26201 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:29.294018 26201 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:29.294023 26201 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:29.294028 26201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:29.294034 26201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:29.294081 26201 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:29.294111 26201 net.cpp:131] Top shape: 100 (100)
I0428 19:47:29.294116 26201 net.cpp:131] Top shape: 100 (100)
I0428 19:47:29.294118 26201 net.cpp:139] Memory required for data: 314800
I0428 19:47:29.294121 26201 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:29.294131 26201 net.cpp:86] Creating Layer conv0
I0428 19:47:29.294133 26201 net.cpp:408] conv0 <- data
I0428 19:47:29.294139 26201 net.cpp:382] conv0 -> conv0
I0428 19:47:29.295835 26201 net.cpp:124] Setting up conv0
I0428 19:47:29.295850 26201 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:29.295853 26201 net.cpp:139] Memory required for data: 1466800
I0428 19:47:29.295862 26201 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:29.295869 26201 net.cpp:86] Creating Layer pool0
I0428 19:47:29.295872 26201 net.cpp:408] pool0 <- conv0
I0428 19:47:29.295877 26201 net.cpp:382] pool0 -> pool0
I0428 19:47:29.295913 26201 net.cpp:124] Setting up pool0
I0428 19:47:29.295918 26201 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:29.295922 26201 net.cpp:139] Memory required for data: 1754800
I0428 19:47:29.295924 26201 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:29.295933 26201 net.cpp:86] Creating Layer conv1
I0428 19:47:29.295936 26201 net.cpp:408] conv1 <- pool0
I0428 19:47:29.295943 26201 net.cpp:382] conv1 -> conv1
I0428 19:47:29.298025 26201 net.cpp:124] Setting up conv1
I0428 19:47:29.298038 26201 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:29.298041 26201 net.cpp:139] Memory required for data: 1806000
I0428 19:47:29.298050 26201 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:29.298058 26201 net.cpp:86] Creating Layer pool1
I0428 19:47:29.298063 26201 net.cpp:408] pool1 <- conv1
I0428 19:47:29.298066 26201 net.cpp:382] pool1 -> pool1
I0428 19:47:29.298123 26201 net.cpp:124] Setting up pool1
I0428 19:47:29.298143 26201 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:29.298146 26201 net.cpp:139] Memory required for data: 1818800
I0428 19:47:29.298149 26201 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:29.298156 26201 net.cpp:86] Creating Layer ip1
I0428 19:47:29.298159 26201 net.cpp:408] ip1 <- pool1
I0428 19:47:29.298171 26201 net.cpp:382] ip1 -> ip1
I0428 19:47:29.298280 26201 net.cpp:124] Setting up ip1
I0428 19:47:29.298288 26201 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:29.298292 26201 net.cpp:139] Memory required for data: 1838800
I0428 19:47:29.298298 26201 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:29.298305 26201 net.cpp:86] Creating Layer relu1
I0428 19:47:29.298307 26201 net.cpp:408] relu1 <- ip1
I0428 19:47:29.298311 26201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:29.298527 26201 net.cpp:124] Setting up relu1
I0428 19:47:29.298537 26201 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:29.298540 26201 net.cpp:139] Memory required for data: 1858800
I0428 19:47:29.298544 26201 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:29.298552 26201 net.cpp:86] Creating Layer ip2
I0428 19:47:29.298557 26201 net.cpp:408] ip2 <- ip1
I0428 19:47:29.298563 26201 net.cpp:382] ip2 -> ip2
I0428 19:47:29.298701 26201 net.cpp:124] Setting up ip2
I0428 19:47:29.298707 26201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:29.298710 26201 net.cpp:139] Memory required for data: 1862800
I0428 19:47:29.298717 26201 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:29.298722 26201 net.cpp:86] Creating Layer relu2
I0428 19:47:29.298724 26201 net.cpp:408] relu2 <- ip2
I0428 19:47:29.298728 26201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:29.298912 26201 net.cpp:124] Setting up relu2
I0428 19:47:29.298921 26201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:29.298924 26201 net.cpp:139] Memory required for data: 1866800
I0428 19:47:29.298928 26201 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:47:29.298931 26201 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:47:29.298934 26201 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:47:29.298938 26201 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:47:29.298954 26201 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:47:29.298997 26201 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:47:29.299003 26201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:29.299007 26201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:29.299010 26201 net.cpp:139] Memory required for data: 1874800
I0428 19:47:29.299013 26201 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:29.299021 26201 net.cpp:86] Creating Layer accuracy
I0428 19:47:29.299024 26201 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:47:29.299031 26201 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:29.299034 26201 net.cpp:382] accuracy -> accuracy
I0428 19:47:29.299041 26201 net.cpp:124] Setting up accuracy
I0428 19:47:29.299044 26201 net.cpp:131] Top shape: (1)
I0428 19:47:29.299047 26201 net.cpp:139] Memory required for data: 1874804
I0428 19:47:29.299049 26201 layer_factory.hpp:77] Creating layer loss
I0428 19:47:29.299055 26201 net.cpp:86] Creating Layer loss
I0428 19:47:29.299058 26201 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:47:29.299062 26201 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:29.299065 26201 net.cpp:382] loss -> loss
I0428 19:47:29.299072 26201 layer_factory.hpp:77] Creating layer loss
I0428 19:47:29.299365 26201 net.cpp:124] Setting up loss
I0428 19:47:29.299374 26201 net.cpp:131] Top shape: (1)
I0428 19:47:29.299378 26201 net.cpp:134]     with loss weight 1
I0428 19:47:29.299386 26201 net.cpp:139] Memory required for data: 1874808
I0428 19:47:29.299389 26201 net.cpp:200] loss needs backward computation.
I0428 19:47:29.299393 26201 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:29.299397 26201 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:47:29.299401 26201 net.cpp:200] relu2 needs backward computation.
I0428 19:47:29.299403 26201 net.cpp:200] ip2 needs backward computation.
I0428 19:47:29.299413 26201 net.cpp:200] relu1 needs backward computation.
I0428 19:47:29.299417 26201 net.cpp:200] ip1 needs backward computation.
I0428 19:47:29.299420 26201 net.cpp:200] pool1 needs backward computation.
I0428 19:47:29.299423 26201 net.cpp:200] conv1 needs backward computation.
I0428 19:47:29.299427 26201 net.cpp:200] pool0 needs backward computation.
I0428 19:47:29.299432 26201 net.cpp:200] conv0 needs backward computation.
I0428 19:47:29.299434 26201 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:29.299438 26201 net.cpp:202] mnist does not need backward computation.
I0428 19:47:29.299441 26201 net.cpp:244] This network produces output accuracy
I0428 19:47:29.299451 26201 net.cpp:244] This network produces output loss
I0428 19:47:29.299463 26201 net.cpp:257] Network initialization done.
I0428 19:47:29.299504 26201 solver.cpp:56] Solver scaffolding done.
I0428 19:47:29.299816 26201 caffe.cpp:248] Starting Optimization
I0428 19:47:29.299823 26201 solver.cpp:273] Solving LeNet
I0428 19:47:29.299824 26201 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:29.300578 26201 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:29.303653 26201 blocking_queue.cpp:49] Waiting for data
I0428 19:47:29.376896 26210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:29.377487 26201 solver.cpp:398]     Test net output #0: accuracy = 0.1398
I0428 19:47:29.377524 26201 solver.cpp:398]     Test net output #1: loss = 2.34666 (* 1 = 2.34666 loss)
I0428 19:47:29.379948 26201 solver.cpp:219] Iteration 0 (0 iter/s, 0.0800942s/100 iters), loss = 2.37341
I0428 19:47:29.379987 26201 solver.cpp:238]     Train net output #0: loss = 2.37341 (* 1 = 2.37341 loss)
I0428 19:47:29.380003 26201 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:29.452186 26201 solver.cpp:219] Iteration 100 (1385.25 iter/s, 0.0721889s/100 iters), loss = 1.25155
I0428 19:47:29.452217 26201 solver.cpp:238]     Train net output #0: loss = 1.25155 (* 1 = 1.25155 loss)
I0428 19:47:29.452225 26201 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:29.516489 26201 solver.cpp:219] Iteration 200 (1556.18 iter/s, 0.0642601s/100 iters), loss = 1.48426
I0428 19:47:29.516526 26201 solver.cpp:238]     Train net output #0: loss = 1.48426 (* 1 = 1.48426 loss)
I0428 19:47:29.516533 26201 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:29.577280 26201 solver.cpp:219] Iteration 300 (1646.21 iter/s, 0.0607457s/100 iters), loss = 1.16499
I0428 19:47:29.577316 26201 solver.cpp:238]     Train net output #0: loss = 1.16499 (* 1 = 1.16499 loss)
I0428 19:47:29.577322 26201 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:29.639053 26201 solver.cpp:219] Iteration 400 (1619.59 iter/s, 0.0617441s/100 iters), loss = 1.14561
I0428 19:47:29.639091 26201 solver.cpp:238]     Train net output #0: loss = 1.14561 (* 1 = 1.14561 loss)
I0428 19:47:29.639098 26201 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:29.699810 26201 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:29.753444 26210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:29.754914 26201 solver.cpp:398]     Test net output #0: accuracy = 0.789
I0428 19:47:29.754978 26201 solver.cpp:398]     Test net output #1: loss = 0.728874 (* 1 = 0.728874 loss)
I0428 19:47:29.756017 26201 solver.cpp:219] Iteration 500 (855.253 iter/s, 0.116924s/100 iters), loss = 0.909531
I0428 19:47:29.756073 26201 solver.cpp:238]     Train net output #0: loss = 0.909531 (* 1 = 0.909531 loss)
I0428 19:47:29.756088 26201 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:29.839367 26201 solver.cpp:219] Iteration 600 (1200.67 iter/s, 0.083287s/100 iters), loss = 0.51716
I0428 19:47:29.839403 26201 solver.cpp:238]     Train net output #0: loss = 0.51716 (* 1 = 0.51716 loss)
I0428 19:47:29.839412 26201 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:29.920650 26201 solver.cpp:219] Iteration 700 (1231 iter/s, 0.0812349s/100 iters), loss = 0.665776
I0428 19:47:29.920698 26201 solver.cpp:238]     Train net output #0: loss = 0.665776 (* 1 = 0.665776 loss)
I0428 19:47:29.920711 26201 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:29.996551 26201 solver.cpp:219] Iteration 800 (1318.47 iter/s, 0.0758457s/100 iters), loss = 0.625636
I0428 19:47:29.996584 26201 solver.cpp:238]     Train net output #0: loss = 0.625636 (* 1 = 0.625636 loss)
I0428 19:47:29.996593 26201 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:30.064005 26201 solver.cpp:219] Iteration 900 (1483.39 iter/s, 0.067413s/100 iters), loss = 0.496376
I0428 19:47:30.064036 26201 solver.cpp:238]     Train net output #0: loss = 0.496376 (* 1 = 0.496376 loss)
I0428 19:47:30.064044 26201 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:30.086532 26207 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:30.130700 26201 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:30.131351 26201 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:30.131770 26201 solver.cpp:311] Iteration 1000, loss = 0.599148
I0428 19:47:30.131788 26201 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:30.184438 26210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:30.184916 26201 solver.cpp:398]     Test net output #0: accuracy = 0.8519
I0428 19:47:30.184938 26201 solver.cpp:398]     Test net output #1: loss = 0.609451 (* 1 = 0.609451 loss)
I0428 19:47:30.184944 26201 solver.cpp:316] Optimization Done.
I0428 19:47:30.184948 26201 caffe.cpp:259] Optimization Done.
