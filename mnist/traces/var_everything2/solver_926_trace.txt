I0428 20:02:20.289206 29922 caffe.cpp:218] Using GPUs 0
I0428 20:02:20.323544 29922 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:20.771910 29922 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test926.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:20.772037 29922 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test926.prototxt
I0428 20:02:20.772362 29922 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:20.772378 29922 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:20.772474 29922 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:20.772555 29922 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:20.772639 29922 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:20.772675 29922 net.cpp:86] Creating Layer mnist
I0428 20:02:20.772682 29922 net.cpp:382] mnist -> data
I0428 20:02:20.772701 29922 net.cpp:382] mnist -> label
I0428 20:02:20.773707 29922 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:20.775992 29922 net.cpp:124] Setting up mnist
I0428 20:02:20.776007 29922 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:20.776011 29922 net.cpp:131] Top shape: 64 (64)
I0428 20:02:20.776015 29922 net.cpp:139] Memory required for data: 200960
I0428 20:02:20.776021 29922 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:20.776036 29922 net.cpp:86] Creating Layer conv0
I0428 20:02:20.776051 29922 net.cpp:408] conv0 <- data
I0428 20:02:20.776063 29922 net.cpp:382] conv0 -> conv0
I0428 20:02:21.010254 29922 net.cpp:124] Setting up conv0
I0428 20:02:21.010280 29922 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:21.010284 29922 net.cpp:139] Memory required for data: 1675520
I0428 20:02:21.010299 29922 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:21.010327 29922 net.cpp:86] Creating Layer pool0
I0428 20:02:21.010331 29922 net.cpp:408] pool0 <- conv0
I0428 20:02:21.010336 29922 net.cpp:382] pool0 -> pool0
I0428 20:02:21.010382 29922 net.cpp:124] Setting up pool0
I0428 20:02:21.010390 29922 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:21.010392 29922 net.cpp:139] Memory required for data: 2044160
I0428 20:02:21.010396 29922 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:21.010406 29922 net.cpp:86] Creating Layer conv1
I0428 20:02:21.010409 29922 net.cpp:408] conv1 <- pool0
I0428 20:02:21.010414 29922 net.cpp:382] conv1 -> conv1
I0428 20:02:21.013355 29922 net.cpp:124] Setting up conv1
I0428 20:02:21.013370 29922 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:21.013372 29922 net.cpp:139] Memory required for data: 2863360
I0428 20:02:21.013397 29922 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:21.013406 29922 net.cpp:86] Creating Layer pool1
I0428 20:02:21.013409 29922 net.cpp:408] pool1 <- conv1
I0428 20:02:21.013414 29922 net.cpp:382] pool1 -> pool1
I0428 20:02:21.013453 29922 net.cpp:124] Setting up pool1
I0428 20:02:21.013459 29922 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:21.013463 29922 net.cpp:139] Memory required for data: 3068160
I0428 20:02:21.013465 29922 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:21.013473 29922 net.cpp:86] Creating Layer ip1
I0428 20:02:21.013476 29922 net.cpp:408] ip1 <- pool1
I0428 20:02:21.013480 29922 net.cpp:382] ip1 -> ip1
I0428 20:02:21.013716 29922 net.cpp:124] Setting up ip1
I0428 20:02:21.013723 29922 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:21.013726 29922 net.cpp:139] Memory required for data: 3074560
I0428 20:02:21.013733 29922 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:21.013739 29922 net.cpp:86] Creating Layer relu1
I0428 20:02:21.013742 29922 net.cpp:408] relu1 <- ip1
I0428 20:02:21.013746 29922 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:21.013898 29922 net.cpp:124] Setting up relu1
I0428 20:02:21.013906 29922 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:21.013909 29922 net.cpp:139] Memory required for data: 3080960
I0428 20:02:21.013912 29922 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:21.013918 29922 net.cpp:86] Creating Layer ip2
I0428 20:02:21.013921 29922 net.cpp:408] ip2 <- ip1
I0428 20:02:21.013926 29922 net.cpp:382] ip2 -> ip2
I0428 20:02:21.014885 29922 net.cpp:124] Setting up ip2
I0428 20:02:21.014897 29922 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:21.014901 29922 net.cpp:139] Memory required for data: 3093760
I0428 20:02:21.014906 29922 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:21.014914 29922 net.cpp:86] Creating Layer relu2
I0428 20:02:21.014916 29922 net.cpp:408] relu2 <- ip2
I0428 20:02:21.014921 29922 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:21.015662 29922 net.cpp:124] Setting up relu2
I0428 20:02:21.015674 29922 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:21.015678 29922 net.cpp:139] Memory required for data: 3106560
I0428 20:02:21.015681 29922 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:21.015689 29922 net.cpp:86] Creating Layer ip3
I0428 20:02:21.015693 29922 net.cpp:408] ip3 <- ip2
I0428 20:02:21.015698 29922 net.cpp:382] ip3 -> ip3
I0428 20:02:21.015817 29922 net.cpp:124] Setting up ip3
I0428 20:02:21.015825 29922 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:21.015828 29922 net.cpp:139] Memory required for data: 3109120
I0428 20:02:21.015836 29922 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:21.015841 29922 net.cpp:86] Creating Layer relu3
I0428 20:02:21.015844 29922 net.cpp:408] relu3 <- ip3
I0428 20:02:21.015848 29922 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:21.016037 29922 net.cpp:124] Setting up relu3
I0428 20:02:21.016046 29922 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:21.016048 29922 net.cpp:139] Memory required for data: 3111680
I0428 20:02:21.016052 29922 layer_factory.hpp:77] Creating layer loss
I0428 20:02:21.016057 29922 net.cpp:86] Creating Layer loss
I0428 20:02:21.016059 29922 net.cpp:408] loss <- ip3
I0428 20:02:21.016063 29922 net.cpp:408] loss <- label
I0428 20:02:21.016068 29922 net.cpp:382] loss -> loss
I0428 20:02:21.016083 29922 layer_factory.hpp:77] Creating layer loss
I0428 20:02:21.016295 29922 net.cpp:124] Setting up loss
I0428 20:02:21.016304 29922 net.cpp:131] Top shape: (1)
I0428 20:02:21.016307 29922 net.cpp:134]     with loss weight 1
I0428 20:02:21.016320 29922 net.cpp:139] Memory required for data: 3111684
I0428 20:02:21.016324 29922 net.cpp:200] loss needs backward computation.
I0428 20:02:21.016326 29922 net.cpp:200] relu3 needs backward computation.
I0428 20:02:21.016330 29922 net.cpp:200] ip3 needs backward computation.
I0428 20:02:21.016332 29922 net.cpp:200] relu2 needs backward computation.
I0428 20:02:21.016335 29922 net.cpp:200] ip2 needs backward computation.
I0428 20:02:21.016337 29922 net.cpp:200] relu1 needs backward computation.
I0428 20:02:21.016340 29922 net.cpp:200] ip1 needs backward computation.
I0428 20:02:21.016343 29922 net.cpp:200] pool1 needs backward computation.
I0428 20:02:21.016346 29922 net.cpp:200] conv1 needs backward computation.
I0428 20:02:21.016350 29922 net.cpp:200] pool0 needs backward computation.
I0428 20:02:21.016352 29922 net.cpp:200] conv0 needs backward computation.
I0428 20:02:21.016355 29922 net.cpp:202] mnist does not need backward computation.
I0428 20:02:21.016358 29922 net.cpp:244] This network produces output loss
I0428 20:02:21.016366 29922 net.cpp:257] Network initialization done.
I0428 20:02:21.016715 29922 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test926.prototxt
I0428 20:02:21.016741 29922 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:21.016847 29922 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:21.016929 29922 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:21.016991 29922 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:21.017019 29922 net.cpp:86] Creating Layer mnist
I0428 20:02:21.017022 29922 net.cpp:382] mnist -> data
I0428 20:02:21.017030 29922 net.cpp:382] mnist -> label
I0428 20:02:21.017109 29922 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:21.019037 29922 net.cpp:124] Setting up mnist
I0428 20:02:21.019050 29922 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:21.019054 29922 net.cpp:131] Top shape: 100 (100)
I0428 20:02:21.019057 29922 net.cpp:139] Memory required for data: 314000
I0428 20:02:21.019062 29922 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:21.019068 29922 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:21.019071 29922 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:21.019075 29922 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:21.019083 29922 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:21.019170 29922 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:21.019177 29922 net.cpp:131] Top shape: 100 (100)
I0428 20:02:21.019181 29922 net.cpp:131] Top shape: 100 (100)
I0428 20:02:21.019184 29922 net.cpp:139] Memory required for data: 314800
I0428 20:02:21.019186 29922 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:21.019196 29922 net.cpp:86] Creating Layer conv0
I0428 20:02:21.019214 29922 net.cpp:408] conv0 <- data
I0428 20:02:21.019219 29922 net.cpp:382] conv0 -> conv0
I0428 20:02:21.020964 29922 net.cpp:124] Setting up conv0
I0428 20:02:21.020979 29922 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:21.020983 29922 net.cpp:139] Memory required for data: 2618800
I0428 20:02:21.020992 29922 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:21.021014 29922 net.cpp:86] Creating Layer pool0
I0428 20:02:21.021018 29922 net.cpp:408] pool0 <- conv0
I0428 20:02:21.021023 29922 net.cpp:382] pool0 -> pool0
I0428 20:02:21.021061 29922 net.cpp:124] Setting up pool0
I0428 20:02:21.021069 29922 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:21.021071 29922 net.cpp:139] Memory required for data: 3194800
I0428 20:02:21.021075 29922 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:21.021083 29922 net.cpp:86] Creating Layer conv1
I0428 20:02:21.021086 29922 net.cpp:408] conv1 <- pool0
I0428 20:02:21.021092 29922 net.cpp:382] conv1 -> conv1
I0428 20:02:21.022723 29922 net.cpp:124] Setting up conv1
I0428 20:02:21.022739 29922 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:21.022743 29922 net.cpp:139] Memory required for data: 4474800
I0428 20:02:21.022753 29922 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:21.022759 29922 net.cpp:86] Creating Layer pool1
I0428 20:02:21.022763 29922 net.cpp:408] pool1 <- conv1
I0428 20:02:21.022768 29922 net.cpp:382] pool1 -> pool1
I0428 20:02:21.022804 29922 net.cpp:124] Setting up pool1
I0428 20:02:21.022811 29922 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:21.022814 29922 net.cpp:139] Memory required for data: 4794800
I0428 20:02:21.022817 29922 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:21.022824 29922 net.cpp:86] Creating Layer ip1
I0428 20:02:21.022827 29922 net.cpp:408] ip1 <- pool1
I0428 20:02:21.022831 29922 net.cpp:382] ip1 -> ip1
I0428 20:02:21.023083 29922 net.cpp:124] Setting up ip1
I0428 20:02:21.023092 29922 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:21.023108 29922 net.cpp:139] Memory required for data: 4804800
I0428 20:02:21.023115 29922 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:21.023121 29922 net.cpp:86] Creating Layer relu1
I0428 20:02:21.023124 29922 net.cpp:408] relu1 <- ip1
I0428 20:02:21.023129 29922 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:21.023298 29922 net.cpp:124] Setting up relu1
I0428 20:02:21.023322 29922 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:21.023325 29922 net.cpp:139] Memory required for data: 4814800
I0428 20:02:21.023329 29922 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:21.023337 29922 net.cpp:86] Creating Layer ip2
I0428 20:02:21.023342 29922 net.cpp:408] ip2 <- ip1
I0428 20:02:21.023347 29922 net.cpp:382] ip2 -> ip2
I0428 20:02:21.023473 29922 net.cpp:124] Setting up ip2
I0428 20:02:21.023480 29922 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:21.023483 29922 net.cpp:139] Memory required for data: 4834800
I0428 20:02:21.023488 29922 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:21.023494 29922 net.cpp:86] Creating Layer relu2
I0428 20:02:21.023496 29922 net.cpp:408] relu2 <- ip2
I0428 20:02:21.023500 29922 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:21.023715 29922 net.cpp:124] Setting up relu2
I0428 20:02:21.023723 29922 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:21.023727 29922 net.cpp:139] Memory required for data: 4854800
I0428 20:02:21.023730 29922 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:21.023736 29922 net.cpp:86] Creating Layer ip3
I0428 20:02:21.023741 29922 net.cpp:408] ip3 <- ip2
I0428 20:02:21.023746 29922 net.cpp:382] ip3 -> ip3
I0428 20:02:21.023843 29922 net.cpp:124] Setting up ip3
I0428 20:02:21.023849 29922 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:21.023852 29922 net.cpp:139] Memory required for data: 4858800
I0428 20:02:21.023860 29922 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:21.023864 29922 net.cpp:86] Creating Layer relu3
I0428 20:02:21.023867 29922 net.cpp:408] relu3 <- ip3
I0428 20:02:21.023872 29922 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:21.024693 29922 net.cpp:124] Setting up relu3
I0428 20:02:21.024705 29922 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:21.024709 29922 net.cpp:139] Memory required for data: 4862800
I0428 20:02:21.024713 29922 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:21.024718 29922 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:21.024721 29922 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:21.024726 29922 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:21.024732 29922 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:21.024787 29922 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:21.024793 29922 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:21.024797 29922 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:21.024801 29922 net.cpp:139] Memory required for data: 4870800
I0428 20:02:21.024803 29922 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:21.024816 29922 net.cpp:86] Creating Layer accuracy
I0428 20:02:21.024837 29922 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:21.024843 29922 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:21.024852 29922 net.cpp:382] accuracy -> accuracy
I0428 20:02:21.024859 29922 net.cpp:124] Setting up accuracy
I0428 20:02:21.024863 29922 net.cpp:131] Top shape: (1)
I0428 20:02:21.024866 29922 net.cpp:139] Memory required for data: 4870804
I0428 20:02:21.024875 29922 layer_factory.hpp:77] Creating layer loss
I0428 20:02:21.024880 29922 net.cpp:86] Creating Layer loss
I0428 20:02:21.024883 29922 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:21.024888 29922 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:21.024893 29922 net.cpp:382] loss -> loss
I0428 20:02:21.024899 29922 layer_factory.hpp:77] Creating layer loss
I0428 20:02:21.025135 29922 net.cpp:124] Setting up loss
I0428 20:02:21.025146 29922 net.cpp:131] Top shape: (1)
I0428 20:02:21.025149 29922 net.cpp:134]     with loss weight 1
I0428 20:02:21.025166 29922 net.cpp:139] Memory required for data: 4870808
I0428 20:02:21.025169 29922 net.cpp:200] loss needs backward computation.
I0428 20:02:21.025173 29922 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:21.025177 29922 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:21.025195 29922 net.cpp:200] relu3 needs backward computation.
I0428 20:02:21.025198 29922 net.cpp:200] ip3 needs backward computation.
I0428 20:02:21.025202 29922 net.cpp:200] relu2 needs backward computation.
I0428 20:02:21.025205 29922 net.cpp:200] ip2 needs backward computation.
I0428 20:02:21.025208 29922 net.cpp:200] relu1 needs backward computation.
I0428 20:02:21.025210 29922 net.cpp:200] ip1 needs backward computation.
I0428 20:02:21.025214 29922 net.cpp:200] pool1 needs backward computation.
I0428 20:02:21.025218 29922 net.cpp:200] conv1 needs backward computation.
I0428 20:02:21.025220 29922 net.cpp:200] pool0 needs backward computation.
I0428 20:02:21.025224 29922 net.cpp:200] conv0 needs backward computation.
I0428 20:02:21.025228 29922 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:21.025231 29922 net.cpp:202] mnist does not need backward computation.
I0428 20:02:21.025234 29922 net.cpp:244] This network produces output accuracy
I0428 20:02:21.025238 29922 net.cpp:244] This network produces output loss
I0428 20:02:21.025269 29922 net.cpp:257] Network initialization done.
I0428 20:02:21.025307 29922 solver.cpp:56] Solver scaffolding done.
I0428 20:02:21.025668 29922 caffe.cpp:248] Starting Optimization
I0428 20:02:21.025674 29922 solver.cpp:273] Solving LeNet
I0428 20:02:21.025677 29922 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:21.026587 29922 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:21.030745 29922 blocking_queue.cpp:49] Waiting for data
I0428 20:02:21.101789 29929 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:21.102331 29922 solver.cpp:398]     Test net output #0: accuracy = 0.0729
I0428 20:02:21.102350 29922 solver.cpp:398]     Test net output #1: loss = 2.33166 (* 1 = 2.33166 loss)
I0428 20:02:21.105432 29922 solver.cpp:219] Iteration 0 (-4.92246e-31 iter/s, 0.0797195s/100 iters), loss = 2.30808
I0428 20:02:21.105454 29922 solver.cpp:238]     Train net output #0: loss = 2.30808 (* 1 = 2.30808 loss)
I0428 20:02:21.105464 29922 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:21.223297 29922 solver.cpp:219] Iteration 100 (848.771 iter/s, 0.117817s/100 iters), loss = 0.472005
I0428 20:02:21.223325 29922 solver.cpp:238]     Train net output #0: loss = 0.472005 (* 1 = 0.472005 loss)
I0428 20:02:21.223332 29922 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:21.330154 29922 solver.cpp:219] Iteration 200 (936.175 iter/s, 0.106818s/100 iters), loss = 0.31578
I0428 20:02:21.330178 29922 solver.cpp:238]     Train net output #0: loss = 0.31578 (* 1 = 0.31578 loss)
I0428 20:02:21.330200 29922 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:21.436009 29922 solver.cpp:219] Iteration 300 (945.009 iter/s, 0.105819s/100 iters), loss = 0.454072
I0428 20:02:21.436036 29922 solver.cpp:238]     Train net output #0: loss = 0.454072 (* 1 = 0.454072 loss)
I0428 20:02:21.436043 29922 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:21.541955 29922 solver.cpp:219] Iteration 400 (944.214 iter/s, 0.105908s/100 iters), loss = 0.270867
I0428 20:02:21.541980 29922 solver.cpp:238]     Train net output #0: loss = 0.270867 (* 1 = 0.270867 loss)
I0428 20:02:21.542001 29922 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:21.649935 29922 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:21.725982 29929 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:21.726512 29922 solver.cpp:398]     Test net output #0: accuracy = 0.873
I0428 20:02:21.726533 29922 solver.cpp:398]     Test net output #1: loss = 0.338693 (* 1 = 0.338693 loss)
I0428 20:02:21.727638 29922 solver.cpp:219] Iteration 500 (538.668 iter/s, 0.185643s/100 iters), loss = 0.364238
I0428 20:02:21.727687 29922 solver.cpp:238]     Train net output #0: loss = 0.364238 (* 1 = 0.364238 loss)
I0428 20:02:21.727697 29922 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:21.841791 29922 solver.cpp:219] Iteration 600 (876.457 iter/s, 0.114096s/100 iters), loss = 0.434376
I0428 20:02:21.841816 29922 solver.cpp:238]     Train net output #0: loss = 0.434376 (* 1 = 0.434376 loss)
I0428 20:02:21.841823 29922 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:21.947471 29922 solver.cpp:219] Iteration 700 (946.566 iter/s, 0.105645s/100 iters), loss = 0.372859
I0428 20:02:21.947495 29922 solver.cpp:238]     Train net output #0: loss = 0.372859 (* 1 = 0.372859 loss)
I0428 20:02:21.947518 29922 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:22.053429 29922 solver.cpp:219] Iteration 800 (944.078 iter/s, 0.105923s/100 iters), loss = 0.555164
I0428 20:02:22.053452 29922 solver.cpp:238]     Train net output #0: loss = 0.555164 (* 1 = 0.555164 loss)
I0428 20:02:22.053458 29922 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:22.163831 29922 solver.cpp:219] Iteration 900 (906.055 iter/s, 0.110369s/100 iters), loss = 0.470609
I0428 20:02:22.163853 29922 solver.cpp:238]     Train net output #0: loss = 0.470609 (* 1 = 0.470609 loss)
I0428 20:02:22.163859 29922 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:22.200654 29928 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:22.272071 29922 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:22.273428 29922 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:22.274132 29922 solver.cpp:311] Iteration 1000, loss = 0.393006
I0428 20:02:22.274147 29922 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:22.349925 29929 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:22.350463 29922 solver.cpp:398]     Test net output #0: accuracy = 0.8833
I0428 20:02:22.350483 29922 solver.cpp:398]     Test net output #1: loss = 0.300992 (* 1 = 0.300992 loss)
I0428 20:02:22.350492 29922 solver.cpp:316] Optimization Done.
I0428 20:02:22.350494 29922 caffe.cpp:259] Optimization Done.
