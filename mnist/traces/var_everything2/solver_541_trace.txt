I0428 19:48:19.524199 26453 caffe.cpp:218] Using GPUs 0
I0428 19:48:19.560201 26453 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:20.007314 26453 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test541.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:20.008018 26453 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test541.prototxt
I0428 19:48:20.008800 26453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:20.008862 26453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:20.009066 26453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:20.009197 26453 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:20.009380 26453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:20.009423 26453 net.cpp:86] Creating Layer mnist
I0428 19:48:20.009438 26453 net.cpp:382] mnist -> data
I0428 19:48:20.009471 26453 net.cpp:382] mnist -> label
I0428 19:48:20.011219 26453 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:20.015276 26453 net.cpp:124] Setting up mnist
I0428 19:48:20.015317 26453 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:20.015329 26453 net.cpp:131] Top shape: 64 (64)
I0428 19:48:20.015337 26453 net.cpp:139] Memory required for data: 200960
I0428 19:48:20.015350 26453 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:20.015379 26453 net.cpp:86] Creating Layer conv0
I0428 19:48:20.015413 26453 net.cpp:408] conv0 <- data
I0428 19:48:20.015437 26453 net.cpp:382] conv0 -> conv0
I0428 19:48:20.329360 26453 net.cpp:124] Setting up conv0
I0428 19:48:20.329390 26453 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:20.329394 26453 net.cpp:139] Memory required for data: 938240
I0428 19:48:20.329411 26453 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:20.329427 26453 net.cpp:86] Creating Layer pool0
I0428 19:48:20.329432 26453 net.cpp:408] pool0 <- conv0
I0428 19:48:20.329438 26453 net.cpp:382] pool0 -> pool0
I0428 19:48:20.329493 26453 net.cpp:124] Setting up pool0
I0428 19:48:20.329502 26453 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:20.329505 26453 net.cpp:139] Memory required for data: 1122560
I0428 19:48:20.329509 26453 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:20.329522 26453 net.cpp:86] Creating Layer conv1
I0428 19:48:20.329527 26453 net.cpp:408] conv1 <- pool0
I0428 19:48:20.329533 26453 net.cpp:382] conv1 -> conv1
I0428 19:48:20.331660 26453 net.cpp:124] Setting up conv1
I0428 19:48:20.331676 26453 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:48:20.331681 26453 net.cpp:139] Memory required for data: 1155328
I0428 19:48:20.331691 26453 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:20.331701 26453 net.cpp:86] Creating Layer pool1
I0428 19:48:20.331704 26453 net.cpp:408] pool1 <- conv1
I0428 19:48:20.331710 26453 net.cpp:382] pool1 -> pool1
I0428 19:48:20.331754 26453 net.cpp:124] Setting up pool1
I0428 19:48:20.331763 26453 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:48:20.331765 26453 net.cpp:139] Memory required for data: 1163520
I0428 19:48:20.331769 26453 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:20.331778 26453 net.cpp:86] Creating Layer ip1
I0428 19:48:20.331781 26453 net.cpp:408] ip1 <- pool1
I0428 19:48:20.331787 26453 net.cpp:382] ip1 -> ip1
I0428 19:48:20.332921 26453 net.cpp:124] Setting up ip1
I0428 19:48:20.332936 26453 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:20.332939 26453 net.cpp:139] Memory required for data: 1176320
I0428 19:48:20.332949 26453 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:20.332957 26453 net.cpp:86] Creating Layer relu1
I0428 19:48:20.332962 26453 net.cpp:408] relu1 <- ip1
I0428 19:48:20.332967 26453 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:20.333173 26453 net.cpp:124] Setting up relu1
I0428 19:48:20.333184 26453 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:20.333187 26453 net.cpp:139] Memory required for data: 1189120
I0428 19:48:20.333191 26453 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:20.333199 26453 net.cpp:86] Creating Layer ip2
I0428 19:48:20.333204 26453 net.cpp:408] ip2 <- ip1
I0428 19:48:20.333210 26453 net.cpp:382] ip2 -> ip2
I0428 19:48:20.333333 26453 net.cpp:124] Setting up ip2
I0428 19:48:20.333340 26453 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:20.333343 26453 net.cpp:139] Memory required for data: 1195520
I0428 19:48:20.333349 26453 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:20.333358 26453 net.cpp:86] Creating Layer relu2
I0428 19:48:20.333362 26453 net.cpp:408] relu2 <- ip2
I0428 19:48:20.333367 26453 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:20.334224 26453 net.cpp:124] Setting up relu2
I0428 19:48:20.334239 26453 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:20.334244 26453 net.cpp:139] Memory required for data: 1201920
I0428 19:48:20.334247 26453 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:20.334255 26453 net.cpp:86] Creating Layer ip3
I0428 19:48:20.334259 26453 net.cpp:408] ip3 <- ip2
I0428 19:48:20.334266 26453 net.cpp:382] ip3 -> ip3
I0428 19:48:20.334389 26453 net.cpp:124] Setting up ip3
I0428 19:48:20.334401 26453 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:20.334405 26453 net.cpp:139] Memory required for data: 1204480
I0428 19:48:20.334414 26453 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:20.334421 26453 net.cpp:86] Creating Layer relu3
I0428 19:48:20.334425 26453 net.cpp:408] relu3 <- ip3
I0428 19:48:20.334430 26453 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:20.334632 26453 net.cpp:124] Setting up relu3
I0428 19:48:20.334642 26453 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:20.334646 26453 net.cpp:139] Memory required for data: 1207040
I0428 19:48:20.334650 26453 layer_factory.hpp:77] Creating layer loss
I0428 19:48:20.334656 26453 net.cpp:86] Creating Layer loss
I0428 19:48:20.334661 26453 net.cpp:408] loss <- ip3
I0428 19:48:20.334666 26453 net.cpp:408] loss <- label
I0428 19:48:20.334671 26453 net.cpp:382] loss -> loss
I0428 19:48:20.334692 26453 layer_factory.hpp:77] Creating layer loss
I0428 19:48:20.334990 26453 net.cpp:124] Setting up loss
I0428 19:48:20.335000 26453 net.cpp:131] Top shape: (1)
I0428 19:48:20.335003 26453 net.cpp:134]     with loss weight 1
I0428 19:48:20.335021 26453 net.cpp:139] Memory required for data: 1207044
I0428 19:48:20.335024 26453 net.cpp:200] loss needs backward computation.
I0428 19:48:20.335028 26453 net.cpp:200] relu3 needs backward computation.
I0428 19:48:20.335032 26453 net.cpp:200] ip3 needs backward computation.
I0428 19:48:20.335036 26453 net.cpp:200] relu2 needs backward computation.
I0428 19:48:20.335039 26453 net.cpp:200] ip2 needs backward computation.
I0428 19:48:20.335042 26453 net.cpp:200] relu1 needs backward computation.
I0428 19:48:20.335045 26453 net.cpp:200] ip1 needs backward computation.
I0428 19:48:20.335049 26453 net.cpp:200] pool1 needs backward computation.
I0428 19:48:20.335052 26453 net.cpp:200] conv1 needs backward computation.
I0428 19:48:20.335057 26453 net.cpp:200] pool0 needs backward computation.
I0428 19:48:20.335059 26453 net.cpp:200] conv0 needs backward computation.
I0428 19:48:20.335063 26453 net.cpp:202] mnist does not need backward computation.
I0428 19:48:20.335067 26453 net.cpp:244] This network produces output loss
I0428 19:48:20.335078 26453 net.cpp:257] Network initialization done.
I0428 19:48:20.335459 26453 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test541.prototxt
I0428 19:48:20.335490 26453 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:20.335598 26453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:20.335698 26453 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:20.335748 26453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:20.335763 26453 net.cpp:86] Creating Layer mnist
I0428 19:48:20.335770 26453 net.cpp:382] mnist -> data
I0428 19:48:20.335779 26453 net.cpp:382] mnist -> label
I0428 19:48:20.335886 26453 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:20.338093 26453 net.cpp:124] Setting up mnist
I0428 19:48:20.338109 26453 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:20.338115 26453 net.cpp:131] Top shape: 100 (100)
I0428 19:48:20.338119 26453 net.cpp:139] Memory required for data: 314000
I0428 19:48:20.338122 26453 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:20.338130 26453 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:20.338135 26453 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:20.338141 26453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:20.338150 26453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:20.338273 26453 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:20.338282 26453 net.cpp:131] Top shape: 100 (100)
I0428 19:48:20.338286 26453 net.cpp:131] Top shape: 100 (100)
I0428 19:48:20.338290 26453 net.cpp:139] Memory required for data: 314800
I0428 19:48:20.338294 26453 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:20.338305 26453 net.cpp:86] Creating Layer conv0
I0428 19:48:20.338310 26453 net.cpp:408] conv0 <- data
I0428 19:48:20.338327 26453 net.cpp:382] conv0 -> conv0
I0428 19:48:20.340203 26453 net.cpp:124] Setting up conv0
I0428 19:48:20.340219 26453 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:20.340224 26453 net.cpp:139] Memory required for data: 1466800
I0428 19:48:20.340234 26453 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:20.340241 26453 net.cpp:86] Creating Layer pool0
I0428 19:48:20.340245 26453 net.cpp:408] pool0 <- conv0
I0428 19:48:20.340252 26453 net.cpp:382] pool0 -> pool0
I0428 19:48:20.340296 26453 net.cpp:124] Setting up pool0
I0428 19:48:20.340306 26453 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:20.340308 26453 net.cpp:139] Memory required for data: 1754800
I0428 19:48:20.340312 26453 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:20.340337 26453 net.cpp:86] Creating Layer conv1
I0428 19:48:20.340343 26453 net.cpp:408] conv1 <- pool0
I0428 19:48:20.340349 26453 net.cpp:382] conv1 -> conv1
I0428 19:48:20.342789 26453 net.cpp:124] Setting up conv1
I0428 19:48:20.342806 26453 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:48:20.342813 26453 net.cpp:139] Memory required for data: 1806000
I0428 19:48:20.342823 26453 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:20.342840 26453 net.cpp:86] Creating Layer pool1
I0428 19:48:20.342844 26453 net.cpp:408] pool1 <- conv1
I0428 19:48:20.342850 26453 net.cpp:382] pool1 -> pool1
I0428 19:48:20.342921 26453 net.cpp:124] Setting up pool1
I0428 19:48:20.342929 26453 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:48:20.342933 26453 net.cpp:139] Memory required for data: 1818800
I0428 19:48:20.342936 26453 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:20.342955 26453 net.cpp:86] Creating Layer ip1
I0428 19:48:20.342959 26453 net.cpp:408] ip1 <- pool1
I0428 19:48:20.342965 26453 net.cpp:382] ip1 -> ip1
I0428 19:48:20.343138 26453 net.cpp:124] Setting up ip1
I0428 19:48:20.343148 26453 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:20.343164 26453 net.cpp:139] Memory required for data: 1838800
I0428 19:48:20.343174 26453 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:20.343184 26453 net.cpp:86] Creating Layer relu1
I0428 19:48:20.343189 26453 net.cpp:408] relu1 <- ip1
I0428 19:48:20.343195 26453 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:20.343403 26453 net.cpp:124] Setting up relu1
I0428 19:48:20.343413 26453 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:20.343417 26453 net.cpp:139] Memory required for data: 1858800
I0428 19:48:20.343420 26453 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:20.343430 26453 net.cpp:86] Creating Layer ip2
I0428 19:48:20.343436 26453 net.cpp:408] ip2 <- ip1
I0428 19:48:20.343442 26453 net.cpp:382] ip2 -> ip2
I0428 19:48:20.343575 26453 net.cpp:124] Setting up ip2
I0428 19:48:20.343583 26453 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:20.343586 26453 net.cpp:139] Memory required for data: 1868800
I0428 19:48:20.343595 26453 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:20.343601 26453 net.cpp:86] Creating Layer relu2
I0428 19:48:20.343605 26453 net.cpp:408] relu2 <- ip2
I0428 19:48:20.343611 26453 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:20.343798 26453 net.cpp:124] Setting up relu2
I0428 19:48:20.343811 26453 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:20.343813 26453 net.cpp:139] Memory required for data: 1878800
I0428 19:48:20.343825 26453 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:20.343833 26453 net.cpp:86] Creating Layer ip3
I0428 19:48:20.343837 26453 net.cpp:408] ip3 <- ip2
I0428 19:48:20.343844 26453 net.cpp:382] ip3 -> ip3
I0428 19:48:20.344007 26453 net.cpp:124] Setting up ip3
I0428 19:48:20.344017 26453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:20.344020 26453 net.cpp:139] Memory required for data: 1882800
I0428 19:48:20.344030 26453 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:20.344036 26453 net.cpp:86] Creating Layer relu3
I0428 19:48:20.344040 26453 net.cpp:408] relu3 <- ip3
I0428 19:48:20.344046 26453 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:20.344965 26453 net.cpp:124] Setting up relu3
I0428 19:48:20.344980 26453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:20.344985 26453 net.cpp:139] Memory required for data: 1886800
I0428 19:48:20.344988 26453 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:20.344995 26453 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:20.345000 26453 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:20.345005 26453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:20.345015 26453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:20.345062 26453 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:20.345070 26453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:20.345075 26453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:20.345079 26453 net.cpp:139] Memory required for data: 1894800
I0428 19:48:20.345082 26453 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:20.345090 26453 net.cpp:86] Creating Layer accuracy
I0428 19:48:20.345094 26453 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:20.345099 26453 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:20.345104 26453 net.cpp:382] accuracy -> accuracy
I0428 19:48:20.345113 26453 net.cpp:124] Setting up accuracy
I0428 19:48:20.345119 26453 net.cpp:131] Top shape: (1)
I0428 19:48:20.345124 26453 net.cpp:139] Memory required for data: 1894804
I0428 19:48:20.345126 26453 layer_factory.hpp:77] Creating layer loss
I0428 19:48:20.345134 26453 net.cpp:86] Creating Layer loss
I0428 19:48:20.345137 26453 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:20.345141 26453 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:20.345146 26453 net.cpp:382] loss -> loss
I0428 19:48:20.345154 26453 layer_factory.hpp:77] Creating layer loss
I0428 19:48:20.345445 26453 net.cpp:124] Setting up loss
I0428 19:48:20.345456 26453 net.cpp:131] Top shape: (1)
I0428 19:48:20.345460 26453 net.cpp:134]     with loss weight 1
I0428 19:48:20.345468 26453 net.cpp:139] Memory required for data: 1894808
I0428 19:48:20.345494 26453 net.cpp:200] loss needs backward computation.
I0428 19:48:20.345499 26453 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:20.345502 26453 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:20.345506 26453 net.cpp:200] relu3 needs backward computation.
I0428 19:48:20.345510 26453 net.cpp:200] ip3 needs backward computation.
I0428 19:48:20.345513 26453 net.cpp:200] relu2 needs backward computation.
I0428 19:48:20.345516 26453 net.cpp:200] ip2 needs backward computation.
I0428 19:48:20.345520 26453 net.cpp:200] relu1 needs backward computation.
I0428 19:48:20.345523 26453 net.cpp:200] ip1 needs backward computation.
I0428 19:48:20.345535 26453 net.cpp:200] pool1 needs backward computation.
I0428 19:48:20.345538 26453 net.cpp:200] conv1 needs backward computation.
I0428 19:48:20.345544 26453 net.cpp:200] pool0 needs backward computation.
I0428 19:48:20.345548 26453 net.cpp:200] conv0 needs backward computation.
I0428 19:48:20.345552 26453 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:20.345557 26453 net.cpp:202] mnist does not need backward computation.
I0428 19:48:20.345561 26453 net.cpp:244] This network produces output accuracy
I0428 19:48:20.345566 26453 net.cpp:244] This network produces output loss
I0428 19:48:20.345578 26453 net.cpp:257] Network initialization done.
I0428 19:48:20.345628 26453 solver.cpp:56] Solver scaffolding done.
I0428 19:48:20.346179 26453 caffe.cpp:248] Starting Optimization
I0428 19:48:20.346187 26453 solver.cpp:273] Solving LeNet
I0428 19:48:20.346190 26453 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:20.346463 26453 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:20.350981 26453 blocking_queue.cpp:49] Waiting for data
I0428 19:48:20.421721 26460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:20.422261 26453 solver.cpp:398]     Test net output #0: accuracy = 0.1175
I0428 19:48:20.422284 26453 solver.cpp:398]     Test net output #1: loss = 2.30231 (* 1 = 2.30231 loss)
I0428 19:48:20.424343 26453 solver.cpp:219] Iteration 0 (-3.72995e-31 iter/s, 0.0781169s/100 iters), loss = 2.3174
I0428 19:48:20.424373 26453 solver.cpp:238]     Train net output #0: loss = 2.3174 (* 1 = 2.3174 loss)
I0428 19:48:20.424387 26453 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:20.499156 26453 solver.cpp:219] Iteration 100 (1337.43 iter/s, 0.0747703s/100 iters), loss = 0.741793
I0428 19:48:20.499186 26453 solver.cpp:238]     Train net output #0: loss = 0.741793 (* 1 = 0.741793 loss)
I0428 19:48:20.499194 26453 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:20.573959 26453 solver.cpp:219] Iteration 200 (1337.56 iter/s, 0.0747633s/100 iters), loss = 0.846664
I0428 19:48:20.573989 26453 solver.cpp:238]     Train net output #0: loss = 0.846664 (* 1 = 0.846664 loss)
I0428 19:48:20.573997 26453 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:20.648207 26453 solver.cpp:219] Iteration 300 (1347.54 iter/s, 0.0742093s/100 iters), loss = 0.457436
I0428 19:48:20.648237 26453 solver.cpp:238]     Train net output #0: loss = 0.457436 (* 1 = 0.457436 loss)
I0428 19:48:20.648244 26453 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:20.722565 26453 solver.cpp:219] Iteration 400 (1345.55 iter/s, 0.0743188s/100 iters), loss = 0.214919
I0428 19:48:20.722595 26453 solver.cpp:238]     Train net output #0: loss = 0.214919 (* 1 = 0.214919 loss)
I0428 19:48:20.722602 26453 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:20.795243 26453 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:20.869606 26460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:20.870127 26453 solver.cpp:398]     Test net output #0: accuracy = 0.9221
I0428 19:48:20.870152 26453 solver.cpp:398]     Test net output #1: loss = 0.268715 (* 1 = 0.268715 loss)
I0428 19:48:20.870968 26453 solver.cpp:219] Iteration 500 (674.031 iter/s, 0.148361s/100 iters), loss = 0.274892
I0428 19:48:20.870992 26453 solver.cpp:238]     Train net output #0: loss = 0.274892 (* 1 = 0.274892 loss)
I0428 19:48:20.871016 26453 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:20.945798 26453 solver.cpp:219] Iteration 600 (1336.97 iter/s, 0.074796s/100 iters), loss = 0.327339
I0428 19:48:20.945823 26453 solver.cpp:238]     Train net output #0: loss = 0.327339 (* 1 = 0.327339 loss)
I0428 19:48:20.945830 26453 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:21.014864 26453 solver.cpp:219] Iteration 700 (1448.6 iter/s, 0.0690319s/100 iters), loss = 0.419418
I0428 19:48:21.014889 26453 solver.cpp:238]     Train net output #0: loss = 0.419418 (* 1 = 0.419418 loss)
I0428 19:48:21.014895 26453 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:21.083619 26453 solver.cpp:219] Iteration 800 (1455.15 iter/s, 0.0687216s/100 iters), loss = 0.274005
I0428 19:48:21.083659 26453 solver.cpp:238]     Train net output #0: loss = 0.274005 (* 1 = 0.274005 loss)
I0428 19:48:21.083665 26453 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:21.152777 26453 solver.cpp:219] Iteration 900 (1446.97 iter/s, 0.0691098s/100 iters), loss = 0.315753
I0428 19:48:21.152802 26453 solver.cpp:238]     Train net output #0: loss = 0.315753 (* 1 = 0.315753 loss)
I0428 19:48:21.152813 26453 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:21.176026 26459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:21.221400 26453 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:21.222092 26453 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:21.222529 26453 solver.cpp:311] Iteration 1000, loss = 0.17161
I0428 19:48:21.222545 26453 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:21.297793 26460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:21.298297 26453 solver.cpp:398]     Test net output #0: accuracy = 0.9424
I0428 19:48:21.298333 26453 solver.cpp:398]     Test net output #1: loss = 0.188146 (* 1 = 0.188146 loss)
I0428 19:48:21.298338 26453 solver.cpp:316] Optimization Done.
I0428 19:48:21.298341 26453 caffe.cpp:259] Optimization Done.
