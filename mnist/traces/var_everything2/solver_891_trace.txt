I0428 20:00:59.466670 29626 caffe.cpp:218] Using GPUs 0
I0428 20:00:59.507990 29626 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:59.971038 29626 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test891.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:59.971168 29626 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test891.prototxt
I0428 20:00:59.971496 29626 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:59.971521 29626 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:59.971616 29626 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:59.971678 29626 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:59.971777 29626 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:59.971813 29626 net.cpp:86] Creating Layer mnist
I0428 20:00:59.971822 29626 net.cpp:382] mnist -> data
I0428 20:00:59.971858 29626 net.cpp:382] mnist -> label
I0428 20:00:59.972956 29626 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:59.975208 29626 net.cpp:124] Setting up mnist
I0428 20:00:59.975236 29626 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:59.975244 29626 net.cpp:131] Top shape: 64 (64)
I0428 20:00:59.975246 29626 net.cpp:139] Memory required for data: 200960
I0428 20:00:59.975252 29626 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:59.975265 29626 net.cpp:86] Creating Layer conv0
I0428 20:00:59.975286 29626 net.cpp:408] conv0 <- data
I0428 20:00:59.975296 29626 net.cpp:382] conv0 -> conv0
I0428 20:01:00.202977 29626 net.cpp:124] Setting up conv0
I0428 20:01:00.203003 29626 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:00.203006 29626 net.cpp:139] Memory required for data: 1675520
I0428 20:01:00.203022 29626 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:00.203049 29626 net.cpp:86] Creating Layer pool0
I0428 20:01:00.203053 29626 net.cpp:408] pool0 <- conv0
I0428 20:01:00.203058 29626 net.cpp:382] pool0 -> pool0
I0428 20:01:00.203133 29626 net.cpp:124] Setting up pool0
I0428 20:01:00.203141 29626 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:00.203145 29626 net.cpp:139] Memory required for data: 2044160
I0428 20:01:00.203147 29626 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:00.203158 29626 net.cpp:86] Creating Layer conv1
I0428 20:01:00.203163 29626 net.cpp:408] conv1 <- pool0
I0428 20:01:00.203184 29626 net.cpp:382] conv1 -> conv1
I0428 20:01:00.205974 29626 net.cpp:124] Setting up conv1
I0428 20:01:00.205988 29626 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:01:00.206008 29626 net.cpp:139] Memory required for data: 2453760
I0428 20:01:00.206017 29626 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:00.206023 29626 net.cpp:86] Creating Layer pool1
I0428 20:01:00.206027 29626 net.cpp:408] pool1 <- conv1
I0428 20:01:00.206032 29626 net.cpp:382] pool1 -> pool1
I0428 20:01:00.206084 29626 net.cpp:124] Setting up pool1
I0428 20:01:00.206090 29626 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:01:00.206094 29626 net.cpp:139] Memory required for data: 2556160
I0428 20:01:00.206096 29626 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:00.206104 29626 net.cpp:86] Creating Layer ip1
I0428 20:01:00.206123 29626 net.cpp:408] ip1 <- pool1
I0428 20:01:00.206128 29626 net.cpp:382] ip1 -> ip1
I0428 20:01:00.206348 29626 net.cpp:124] Setting up ip1
I0428 20:01:00.206356 29626 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:00.206358 29626 net.cpp:139] Memory required for data: 2568960
I0428 20:01:00.206365 29626 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:00.206370 29626 net.cpp:86] Creating Layer relu1
I0428 20:01:00.206374 29626 net.cpp:408] relu1 <- ip1
I0428 20:01:00.206378 29626 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:00.206557 29626 net.cpp:124] Setting up relu1
I0428 20:01:00.206565 29626 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:00.206568 29626 net.cpp:139] Memory required for data: 2581760
I0428 20:01:00.206570 29626 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:00.206576 29626 net.cpp:86] Creating Layer ip2
I0428 20:01:00.206579 29626 net.cpp:408] ip2 <- ip1
I0428 20:01:00.206583 29626 net.cpp:382] ip2 -> ip2
I0428 20:01:00.207569 29626 net.cpp:124] Setting up ip2
I0428 20:01:00.207581 29626 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:00.207599 29626 net.cpp:139] Memory required for data: 2588160
I0428 20:01:00.207605 29626 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:00.207612 29626 net.cpp:86] Creating Layer relu2
I0428 20:01:00.207615 29626 net.cpp:408] relu2 <- ip2
I0428 20:01:00.207619 29626 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:00.208447 29626 net.cpp:124] Setting up relu2
I0428 20:01:00.208461 29626 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:00.208464 29626 net.cpp:139] Memory required for data: 2594560
I0428 20:01:00.208468 29626 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:00.208475 29626 net.cpp:86] Creating Layer ip3
I0428 20:01:00.208479 29626 net.cpp:408] ip3 <- ip2
I0428 20:01:00.208484 29626 net.cpp:382] ip3 -> ip3
I0428 20:01:00.208591 29626 net.cpp:124] Setting up ip3
I0428 20:01:00.208600 29626 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:00.208602 29626 net.cpp:139] Memory required for data: 2597120
I0428 20:01:00.208611 29626 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:00.208617 29626 net.cpp:86] Creating Layer relu3
I0428 20:01:00.208621 29626 net.cpp:408] relu3 <- ip3
I0428 20:01:00.208626 29626 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:00.208873 29626 net.cpp:124] Setting up relu3
I0428 20:01:00.208883 29626 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:00.208885 29626 net.cpp:139] Memory required for data: 2599680
I0428 20:01:00.208889 29626 layer_factory.hpp:77] Creating layer loss
I0428 20:01:00.208894 29626 net.cpp:86] Creating Layer loss
I0428 20:01:00.208897 29626 net.cpp:408] loss <- ip3
I0428 20:01:00.208901 29626 net.cpp:408] loss <- label
I0428 20:01:00.208909 29626 net.cpp:382] loss -> loss
I0428 20:01:00.208925 29626 layer_factory.hpp:77] Creating layer loss
I0428 20:01:00.209208 29626 net.cpp:124] Setting up loss
I0428 20:01:00.209216 29626 net.cpp:131] Top shape: (1)
I0428 20:01:00.209219 29626 net.cpp:134]     with loss weight 1
I0428 20:01:00.209236 29626 net.cpp:139] Memory required for data: 2599684
I0428 20:01:00.209240 29626 net.cpp:200] loss needs backward computation.
I0428 20:01:00.209260 29626 net.cpp:200] relu3 needs backward computation.
I0428 20:01:00.209264 29626 net.cpp:200] ip3 needs backward computation.
I0428 20:01:00.209266 29626 net.cpp:200] relu2 needs backward computation.
I0428 20:01:00.209269 29626 net.cpp:200] ip2 needs backward computation.
I0428 20:01:00.209271 29626 net.cpp:200] relu1 needs backward computation.
I0428 20:01:00.209275 29626 net.cpp:200] ip1 needs backward computation.
I0428 20:01:00.209277 29626 net.cpp:200] pool1 needs backward computation.
I0428 20:01:00.209280 29626 net.cpp:200] conv1 needs backward computation.
I0428 20:01:00.209285 29626 net.cpp:200] pool0 needs backward computation.
I0428 20:01:00.209287 29626 net.cpp:200] conv0 needs backward computation.
I0428 20:01:00.209290 29626 net.cpp:202] mnist does not need backward computation.
I0428 20:01:00.209293 29626 net.cpp:244] This network produces output loss
I0428 20:01:00.209302 29626 net.cpp:257] Network initialization done.
I0428 20:01:00.209677 29626 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test891.prototxt
I0428 20:01:00.209725 29626 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:00.209812 29626 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:00.209889 29626 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:00.209931 29626 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:00.209949 29626 net.cpp:86] Creating Layer mnist
I0428 20:01:00.209954 29626 net.cpp:382] mnist -> data
I0428 20:01:00.209962 29626 net.cpp:382] mnist -> label
I0428 20:01:00.210055 29626 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:00.212061 29626 net.cpp:124] Setting up mnist
I0428 20:01:00.212106 29626 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:00.212111 29626 net.cpp:131] Top shape: 100 (100)
I0428 20:01:00.212128 29626 net.cpp:139] Memory required for data: 314000
I0428 20:01:00.212132 29626 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:00.212152 29626 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:00.212155 29626 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:00.212160 29626 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:00.212167 29626 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:00.212270 29626 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:00.212277 29626 net.cpp:131] Top shape: 100 (100)
I0428 20:01:00.212281 29626 net.cpp:131] Top shape: 100 (100)
I0428 20:01:00.212285 29626 net.cpp:139] Memory required for data: 314800
I0428 20:01:00.212287 29626 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:00.212296 29626 net.cpp:86] Creating Layer conv0
I0428 20:01:00.212301 29626 net.cpp:408] conv0 <- data
I0428 20:01:00.212306 29626 net.cpp:382] conv0 -> conv0
I0428 20:01:00.213994 29626 net.cpp:124] Setting up conv0
I0428 20:01:00.214022 29626 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:00.214026 29626 net.cpp:139] Memory required for data: 2618800
I0428 20:01:00.214035 29626 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:00.214040 29626 net.cpp:86] Creating Layer pool0
I0428 20:01:00.214045 29626 net.cpp:408] pool0 <- conv0
I0428 20:01:00.214064 29626 net.cpp:382] pool0 -> pool0
I0428 20:01:00.214114 29626 net.cpp:124] Setting up pool0
I0428 20:01:00.214121 29626 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:00.214124 29626 net.cpp:139] Memory required for data: 3194800
I0428 20:01:00.214126 29626 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:00.214135 29626 net.cpp:86] Creating Layer conv1
I0428 20:01:00.214138 29626 net.cpp:408] conv1 <- pool0
I0428 20:01:00.214143 29626 net.cpp:382] conv1 -> conv1
I0428 20:01:00.216228 29626 net.cpp:124] Setting up conv1
I0428 20:01:00.216255 29626 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:01:00.216274 29626 net.cpp:139] Memory required for data: 3834800
I0428 20:01:00.216285 29626 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:00.216291 29626 net.cpp:86] Creating Layer pool1
I0428 20:01:00.216295 29626 net.cpp:408] pool1 <- conv1
I0428 20:01:00.216300 29626 net.cpp:382] pool1 -> pool1
I0428 20:01:00.216356 29626 net.cpp:124] Setting up pool1
I0428 20:01:00.216363 29626 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:01:00.216367 29626 net.cpp:139] Memory required for data: 3994800
I0428 20:01:00.216369 29626 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:00.216390 29626 net.cpp:86] Creating Layer ip1
I0428 20:01:00.216397 29626 net.cpp:408] ip1 <- pool1
I0428 20:01:00.216418 29626 net.cpp:382] ip1 -> ip1
I0428 20:01:00.216702 29626 net.cpp:124] Setting up ip1
I0428 20:01:00.216711 29626 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:00.216725 29626 net.cpp:139] Memory required for data: 4014800
I0428 20:01:00.216733 29626 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:00.216740 29626 net.cpp:86] Creating Layer relu1
I0428 20:01:00.216747 29626 net.cpp:408] relu1 <- ip1
I0428 20:01:00.216751 29626 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:00.216961 29626 net.cpp:124] Setting up relu1
I0428 20:01:00.216972 29626 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:00.216975 29626 net.cpp:139] Memory required for data: 4034800
I0428 20:01:00.216979 29626 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:00.216989 29626 net.cpp:86] Creating Layer ip2
I0428 20:01:00.216992 29626 net.cpp:408] ip2 <- ip1
I0428 20:01:00.217000 29626 net.cpp:382] ip2 -> ip2
I0428 20:01:00.217162 29626 net.cpp:124] Setting up ip2
I0428 20:01:00.217175 29626 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:00.217177 29626 net.cpp:139] Memory required for data: 4044800
I0428 20:01:00.217183 29626 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:00.217190 29626 net.cpp:86] Creating Layer relu2
I0428 20:01:00.217195 29626 net.cpp:408] relu2 <- ip2
I0428 20:01:00.217214 29626 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:00.217375 29626 net.cpp:124] Setting up relu2
I0428 20:01:00.217383 29626 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:00.217386 29626 net.cpp:139] Memory required for data: 4054800
I0428 20:01:00.217391 29626 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:00.217397 29626 net.cpp:86] Creating Layer ip3
I0428 20:01:00.217401 29626 net.cpp:408] ip3 <- ip2
I0428 20:01:00.217406 29626 net.cpp:382] ip3 -> ip3
I0428 20:01:00.217520 29626 net.cpp:124] Setting up ip3
I0428 20:01:00.217527 29626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:00.217530 29626 net.cpp:139] Memory required for data: 4058800
I0428 20:01:00.217537 29626 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:00.217545 29626 net.cpp:86] Creating Layer relu3
I0428 20:01:00.217548 29626 net.cpp:408] relu3 <- ip3
I0428 20:01:00.217552 29626 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:00.218448 29626 net.cpp:124] Setting up relu3
I0428 20:01:00.218472 29626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:00.218475 29626 net.cpp:139] Memory required for data: 4062800
I0428 20:01:00.218478 29626 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:00.218483 29626 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:00.218487 29626 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:00.218492 29626 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:00.218498 29626 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:00.218554 29626 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:00.218560 29626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:00.218564 29626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:00.218566 29626 net.cpp:139] Memory required for data: 4070800
I0428 20:01:00.218569 29626 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:00.218575 29626 net.cpp:86] Creating Layer accuracy
I0428 20:01:00.218578 29626 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:00.218582 29626 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:00.218586 29626 net.cpp:382] accuracy -> accuracy
I0428 20:01:00.218593 29626 net.cpp:124] Setting up accuracy
I0428 20:01:00.218597 29626 net.cpp:131] Top shape: (1)
I0428 20:01:00.218600 29626 net.cpp:139] Memory required for data: 4070804
I0428 20:01:00.218603 29626 layer_factory.hpp:77] Creating layer loss
I0428 20:01:00.218608 29626 net.cpp:86] Creating Layer loss
I0428 20:01:00.218618 29626 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:00.218637 29626 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:00.218642 29626 net.cpp:382] loss -> loss
I0428 20:01:00.218648 29626 layer_factory.hpp:77] Creating layer loss
I0428 20:01:00.218950 29626 net.cpp:124] Setting up loss
I0428 20:01:00.218958 29626 net.cpp:131] Top shape: (1)
I0428 20:01:00.218961 29626 net.cpp:134]     with loss weight 1
I0428 20:01:00.218978 29626 net.cpp:139] Memory required for data: 4070808
I0428 20:01:00.218983 29626 net.cpp:200] loss needs backward computation.
I0428 20:01:00.218986 29626 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:00.218991 29626 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:00.218994 29626 net.cpp:200] relu3 needs backward computation.
I0428 20:01:00.218998 29626 net.cpp:200] ip3 needs backward computation.
I0428 20:01:00.219002 29626 net.cpp:200] relu2 needs backward computation.
I0428 20:01:00.219004 29626 net.cpp:200] ip2 needs backward computation.
I0428 20:01:00.219008 29626 net.cpp:200] relu1 needs backward computation.
I0428 20:01:00.219010 29626 net.cpp:200] ip1 needs backward computation.
I0428 20:01:00.219014 29626 net.cpp:200] pool1 needs backward computation.
I0428 20:01:00.219017 29626 net.cpp:200] conv1 needs backward computation.
I0428 20:01:00.219022 29626 net.cpp:200] pool0 needs backward computation.
I0428 20:01:00.219024 29626 net.cpp:200] conv0 needs backward computation.
I0428 20:01:00.219028 29626 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:00.219034 29626 net.cpp:202] mnist does not need backward computation.
I0428 20:01:00.219038 29626 net.cpp:244] This network produces output accuracy
I0428 20:01:00.219041 29626 net.cpp:244] This network produces output loss
I0428 20:01:00.219053 29626 net.cpp:257] Network initialization done.
I0428 20:01:00.219130 29626 solver.cpp:56] Solver scaffolding done.
I0428 20:01:00.219564 29626 caffe.cpp:248] Starting Optimization
I0428 20:01:00.219569 29626 solver.cpp:273] Solving LeNet
I0428 20:01:00.219573 29626 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:00.219883 29626 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:00.224303 29626 blocking_queue.cpp:49] Waiting for data
I0428 20:01:00.294476 29633 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:00.295034 29626 solver.cpp:398]     Test net output #0: accuracy = 0.1153
I0428 20:01:00.295070 29626 solver.cpp:398]     Test net output #1: loss = 2.3048 (* 1 = 2.3048 loss)
I0428 20:01:00.297631 29626 solver.cpp:219] Iteration 0 (-2.06364e-31 iter/s, 0.0780093s/100 iters), loss = 2.30272
I0428 20:01:00.297684 29626 solver.cpp:238]     Train net output #0: loss = 2.30272 (* 1 = 2.30272 loss)
I0428 20:01:00.297696 29626 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:00.389742 29626 solver.cpp:219] Iteration 100 (1086.24 iter/s, 0.0920607s/100 iters), loss = 1.12706
I0428 20:01:00.389783 29626 solver.cpp:238]     Train net output #0: loss = 1.12706 (* 1 = 1.12706 loss)
I0428 20:01:00.389791 29626 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:00.486917 29626 solver.cpp:219] Iteration 200 (1029.74 iter/s, 0.0971121s/100 iters), loss = 0.813366
I0428 20:01:00.486976 29626 solver.cpp:238]     Train net output #0: loss = 0.813366 (* 1 = 0.813366 loss)
I0428 20:01:00.486999 29626 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:00.594509 29626 solver.cpp:219] Iteration 300 (929.953 iter/s, 0.107532s/100 iters), loss = 0.797412
I0428 20:01:00.594552 29626 solver.cpp:238]     Train net output #0: loss = 0.797412 (* 1 = 0.797412 loss)
I0428 20:01:00.594563 29626 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:00.689615 29626 solver.cpp:219] Iteration 400 (1052.01 iter/s, 0.0950559s/100 iters), loss = 0.607545
I0428 20:01:00.689647 29626 solver.cpp:238]     Train net output #0: loss = 0.607545 (* 1 = 0.607545 loss)
I0428 20:01:00.689657 29626 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:00.782577 29626 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:00.836076 29633 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:00.836632 29626 solver.cpp:398]     Test net output #0: accuracy = 0.7742
I0428 20:01:00.836654 29626 solver.cpp:398]     Test net output #1: loss = 0.567817 (* 1 = 0.567817 loss)
I0428 20:01:00.837601 29626 solver.cpp:219] Iteration 500 (675.943 iter/s, 0.147942s/100 iters), loss = 0.55152
I0428 20:01:00.837664 29626 solver.cpp:238]     Train net output #0: loss = 0.55152 (* 1 = 0.55152 loss)
I0428 20:01:00.837676 29626 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:00.944196 29626 solver.cpp:219] Iteration 600 (938.758 iter/s, 0.106524s/100 iters), loss = 0.576946
I0428 20:01:00.944236 29626 solver.cpp:238]     Train net output #0: loss = 0.576946 (* 1 = 0.576946 loss)
I0428 20:01:00.944247 29626 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:01.041179 29626 solver.cpp:219] Iteration 700 (1031.67 iter/s, 0.0969298s/100 iters), loss = 0.309843
I0428 20:01:01.041235 29626 solver.cpp:238]     Train net output #0: loss = 0.309843 (* 1 = 0.309843 loss)
I0428 20:01:01.041254 29626 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:01.142969 29626 solver.cpp:219] Iteration 800 (983.011 iter/s, 0.101728s/100 iters), loss = 0.90944
I0428 20:01:01.143004 29626 solver.cpp:238]     Train net output #0: loss = 0.90944 (* 1 = 0.90944 loss)
I0428 20:01:01.143016 29626 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:01.237254 29626 solver.cpp:219] Iteration 900 (1061.12 iter/s, 0.0942397s/100 iters), loss = 0.813276
I0428 20:01:01.237287 29626 solver.cpp:238]     Train net output #0: loss = 0.813276 (* 1 = 0.813276 loss)
I0428 20:01:01.237296 29626 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:01.268607 29632 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:01.327425 29626 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:01.328642 29626 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:01.329320 29626 solver.cpp:311] Iteration 1000, loss = 0.487471
I0428 20:01:01.329337 29626 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:01.406139 29633 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:01.406723 29626 solver.cpp:398]     Test net output #0: accuracy = 0.7799
I0428 20:01:01.406757 29626 solver.cpp:398]     Test net output #1: loss = 0.539197 (* 1 = 0.539197 loss)
I0428 20:01:01.406764 29626 solver.cpp:316] Optimization Done.
I0428 20:01:01.406766 29626 caffe.cpp:259] Optimization Done.
