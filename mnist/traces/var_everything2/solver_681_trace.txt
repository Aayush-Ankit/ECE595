I0428 19:53:11.470504 27713 caffe.cpp:218] Using GPUs 0
I0428 19:53:11.503198 27713 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:11.953845 27713 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test681.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:11.953984 27713 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test681.prototxt
I0428 19:53:11.954325 27713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:11.954340 27713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:11.954421 27713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:11.954483 27713 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:11.954563 27713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:11.954582 27713 net.cpp:86] Creating Layer mnist
I0428 19:53:11.954587 27713 net.cpp:382] mnist -> data
I0428 19:53:11.954607 27713 net.cpp:382] mnist -> label
I0428 19:53:11.955581 27713 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:11.957798 27713 net.cpp:124] Setting up mnist
I0428 19:53:11.957829 27713 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:11.957835 27713 net.cpp:131] Top shape: 64 (64)
I0428 19:53:11.957839 27713 net.cpp:139] Memory required for data: 200960
I0428 19:53:11.957844 27713 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:11.957856 27713 net.cpp:86] Creating Layer conv0
I0428 19:53:11.957873 27713 net.cpp:408] conv0 <- data
I0428 19:53:11.957882 27713 net.cpp:382] conv0 -> conv0
I0428 19:53:12.186697 27713 net.cpp:124] Setting up conv0
I0428 19:53:12.186722 27713 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:12.186725 27713 net.cpp:139] Memory required for data: 938240
I0428 19:53:12.186740 27713 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:12.186753 27713 net.cpp:86] Creating Layer pool0
I0428 19:53:12.186756 27713 net.cpp:408] pool0 <- conv0
I0428 19:53:12.186761 27713 net.cpp:382] pool0 -> pool0
I0428 19:53:12.186836 27713 net.cpp:124] Setting up pool0
I0428 19:53:12.186841 27713 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:12.186843 27713 net.cpp:139] Memory required for data: 1122560
I0428 19:53:12.186846 27713 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:12.186857 27713 net.cpp:86] Creating Layer conv1
I0428 19:53:12.186859 27713 net.cpp:408] conv1 <- pool0
I0428 19:53:12.186864 27713 net.cpp:382] conv1 -> conv1
I0428 19:53:12.189573 27713 net.cpp:124] Setting up conv1
I0428 19:53:12.189586 27713 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:12.189590 27713 net.cpp:139] Memory required for data: 1941760
I0428 19:53:12.189597 27713 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:12.189604 27713 net.cpp:86] Creating Layer pool1
I0428 19:53:12.189607 27713 net.cpp:408] pool1 <- conv1
I0428 19:53:12.189612 27713 net.cpp:382] pool1 -> pool1
I0428 19:53:12.189663 27713 net.cpp:124] Setting up pool1
I0428 19:53:12.189671 27713 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:12.189672 27713 net.cpp:139] Memory required for data: 2146560
I0428 19:53:12.189676 27713 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:12.189682 27713 net.cpp:86] Creating Layer ip1
I0428 19:53:12.189684 27713 net.cpp:408] ip1 <- pool1
I0428 19:53:12.189689 27713 net.cpp:382] ip1 -> ip1
I0428 19:53:12.189820 27713 net.cpp:124] Setting up ip1
I0428 19:53:12.189826 27713 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:12.189829 27713 net.cpp:139] Memory required for data: 2149120
I0428 19:53:12.189836 27713 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:12.189841 27713 net.cpp:86] Creating Layer relu1
I0428 19:53:12.189844 27713 net.cpp:408] relu1 <- ip1
I0428 19:53:12.189848 27713 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:12.189997 27713 net.cpp:124] Setting up relu1
I0428 19:53:12.190006 27713 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:12.190008 27713 net.cpp:139] Memory required for data: 2151680
I0428 19:53:12.190012 27713 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:12.190017 27713 net.cpp:86] Creating Layer ip2
I0428 19:53:12.190021 27713 net.cpp:408] ip2 <- ip1
I0428 19:53:12.190026 27713 net.cpp:382] ip2 -> ip2
I0428 19:53:12.190127 27713 net.cpp:124] Setting up ip2
I0428 19:53:12.190135 27713 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:12.190137 27713 net.cpp:139] Memory required for data: 2164480
I0428 19:53:12.190143 27713 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:12.190148 27713 net.cpp:86] Creating Layer relu2
I0428 19:53:12.190151 27713 net.cpp:408] relu2 <- ip2
I0428 19:53:12.190155 27713 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:12.190896 27713 net.cpp:124] Setting up relu2
I0428 19:53:12.190924 27713 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:12.190928 27713 net.cpp:139] Memory required for data: 2177280
I0428 19:53:12.190932 27713 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:12.190938 27713 net.cpp:86] Creating Layer ip3
I0428 19:53:12.190942 27713 net.cpp:408] ip3 <- ip2
I0428 19:53:12.190946 27713 net.cpp:382] ip3 -> ip3
I0428 19:53:12.191042 27713 net.cpp:124] Setting up ip3
I0428 19:53:12.191051 27713 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:12.191053 27713 net.cpp:139] Memory required for data: 2179840
I0428 19:53:12.191061 27713 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:12.191066 27713 net.cpp:86] Creating Layer relu3
I0428 19:53:12.191068 27713 net.cpp:408] relu3 <- ip3
I0428 19:53:12.191072 27713 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:12.191244 27713 net.cpp:124] Setting up relu3
I0428 19:53:12.191253 27713 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:12.191256 27713 net.cpp:139] Memory required for data: 2182400
I0428 19:53:12.191259 27713 layer_factory.hpp:77] Creating layer loss
I0428 19:53:12.191270 27713 net.cpp:86] Creating Layer loss
I0428 19:53:12.191277 27713 net.cpp:408] loss <- ip3
I0428 19:53:12.191283 27713 net.cpp:408] loss <- label
I0428 19:53:12.191292 27713 net.cpp:382] loss -> loss
I0428 19:53:12.191304 27713 layer_factory.hpp:77] Creating layer loss
I0428 19:53:12.191537 27713 net.cpp:124] Setting up loss
I0428 19:53:12.191548 27713 net.cpp:131] Top shape: (1)
I0428 19:53:12.191551 27713 net.cpp:134]     with loss weight 1
I0428 19:53:12.191566 27713 net.cpp:139] Memory required for data: 2182404
I0428 19:53:12.191570 27713 net.cpp:200] loss needs backward computation.
I0428 19:53:12.191573 27713 net.cpp:200] relu3 needs backward computation.
I0428 19:53:12.191576 27713 net.cpp:200] ip3 needs backward computation.
I0428 19:53:12.191578 27713 net.cpp:200] relu2 needs backward computation.
I0428 19:53:12.191581 27713 net.cpp:200] ip2 needs backward computation.
I0428 19:53:12.191584 27713 net.cpp:200] relu1 needs backward computation.
I0428 19:53:12.191586 27713 net.cpp:200] ip1 needs backward computation.
I0428 19:53:12.191589 27713 net.cpp:200] pool1 needs backward computation.
I0428 19:53:12.191592 27713 net.cpp:200] conv1 needs backward computation.
I0428 19:53:12.191596 27713 net.cpp:200] pool0 needs backward computation.
I0428 19:53:12.191598 27713 net.cpp:200] conv0 needs backward computation.
I0428 19:53:12.191601 27713 net.cpp:202] mnist does not need backward computation.
I0428 19:53:12.191604 27713 net.cpp:244] This network produces output loss
I0428 19:53:12.191612 27713 net.cpp:257] Network initialization done.
I0428 19:53:12.191990 27713 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test681.prototxt
I0428 19:53:12.192039 27713 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:12.192126 27713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:12.192201 27713 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:12.192242 27713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:12.192255 27713 net.cpp:86] Creating Layer mnist
I0428 19:53:12.192260 27713 net.cpp:382] mnist -> data
I0428 19:53:12.192268 27713 net.cpp:382] mnist -> label
I0428 19:53:12.192364 27713 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:12.194501 27713 net.cpp:124] Setting up mnist
I0428 19:53:12.194531 27713 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:12.194536 27713 net.cpp:131] Top shape: 100 (100)
I0428 19:53:12.194540 27713 net.cpp:139] Memory required for data: 314000
I0428 19:53:12.194542 27713 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:12.194550 27713 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:12.194552 27713 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:12.194557 27713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:12.194564 27713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:12.194659 27713 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:12.194666 27713 net.cpp:131] Top shape: 100 (100)
I0428 19:53:12.194685 27713 net.cpp:131] Top shape: 100 (100)
I0428 19:53:12.194689 27713 net.cpp:139] Memory required for data: 314800
I0428 19:53:12.194691 27713 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:12.194700 27713 net.cpp:86] Creating Layer conv0
I0428 19:53:12.194703 27713 net.cpp:408] conv0 <- data
I0428 19:53:12.194708 27713 net.cpp:382] conv0 -> conv0
I0428 19:53:12.196225 27713 net.cpp:124] Setting up conv0
I0428 19:53:12.196238 27713 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:12.196241 27713 net.cpp:139] Memory required for data: 1466800
I0428 19:53:12.196265 27713 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:12.196271 27713 net.cpp:86] Creating Layer pool0
I0428 19:53:12.196274 27713 net.cpp:408] pool0 <- conv0
I0428 19:53:12.196280 27713 net.cpp:382] pool0 -> pool0
I0428 19:53:12.196312 27713 net.cpp:124] Setting up pool0
I0428 19:53:12.196319 27713 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:12.196322 27713 net.cpp:139] Memory required for data: 1754800
I0428 19:53:12.196324 27713 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:12.196332 27713 net.cpp:86] Creating Layer conv1
I0428 19:53:12.196336 27713 net.cpp:408] conv1 <- pool0
I0428 19:53:12.196339 27713 net.cpp:382] conv1 -> conv1
I0428 19:53:12.197959 27713 net.cpp:124] Setting up conv1
I0428 19:53:12.197973 27713 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:12.197976 27713 net.cpp:139] Memory required for data: 3034800
I0428 19:53:12.197985 27713 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:12.197993 27713 net.cpp:86] Creating Layer pool1
I0428 19:53:12.197995 27713 net.cpp:408] pool1 <- conv1
I0428 19:53:12.198001 27713 net.cpp:382] pool1 -> pool1
I0428 19:53:12.198036 27713 net.cpp:124] Setting up pool1
I0428 19:53:12.198042 27713 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:12.198045 27713 net.cpp:139] Memory required for data: 3354800
I0428 19:53:12.198048 27713 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:12.198055 27713 net.cpp:86] Creating Layer ip1
I0428 19:53:12.198057 27713 net.cpp:408] ip1 <- pool1
I0428 19:53:12.198061 27713 net.cpp:382] ip1 -> ip1
I0428 19:53:12.198215 27713 net.cpp:124] Setting up ip1
I0428 19:53:12.198223 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.198237 27713 net.cpp:139] Memory required for data: 3358800
I0428 19:53:12.198251 27713 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:12.198256 27713 net.cpp:86] Creating Layer relu1
I0428 19:53:12.198259 27713 net.cpp:408] relu1 <- ip1
I0428 19:53:12.198263 27713 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:12.198529 27713 net.cpp:124] Setting up relu1
I0428 19:53:12.198539 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.198544 27713 net.cpp:139] Memory required for data: 3362800
I0428 19:53:12.198546 27713 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:12.198554 27713 net.cpp:86] Creating Layer ip2
I0428 19:53:12.198556 27713 net.cpp:408] ip2 <- ip1
I0428 19:53:12.198561 27713 net.cpp:382] ip2 -> ip2
I0428 19:53:12.198658 27713 net.cpp:124] Setting up ip2
I0428 19:53:12.198665 27713 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:12.198668 27713 net.cpp:139] Memory required for data: 3382800
I0428 19:53:12.198674 27713 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:12.198678 27713 net.cpp:86] Creating Layer relu2
I0428 19:53:12.198681 27713 net.cpp:408] relu2 <- ip2
I0428 19:53:12.198685 27713 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:12.198827 27713 net.cpp:124] Setting up relu2
I0428 19:53:12.198834 27713 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:12.198838 27713 net.cpp:139] Memory required for data: 3402800
I0428 19:53:12.198842 27713 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:12.198846 27713 net.cpp:86] Creating Layer ip3
I0428 19:53:12.198849 27713 net.cpp:408] ip3 <- ip2
I0428 19:53:12.198853 27713 net.cpp:382] ip3 -> ip3
I0428 19:53:12.198961 27713 net.cpp:124] Setting up ip3
I0428 19:53:12.198969 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.198972 27713 net.cpp:139] Memory required for data: 3406800
I0428 19:53:12.198981 27713 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:12.198985 27713 net.cpp:86] Creating Layer relu3
I0428 19:53:12.198988 27713 net.cpp:408] relu3 <- ip3
I0428 19:53:12.198992 27713 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:12.199832 27713 net.cpp:124] Setting up relu3
I0428 19:53:12.199844 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.199848 27713 net.cpp:139] Memory required for data: 3410800
I0428 19:53:12.199852 27713 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:12.199857 27713 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:12.199862 27713 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:12.199867 27713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:12.199872 27713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:12.199908 27713 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:12.199915 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.199923 27713 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:12.199926 27713 net.cpp:139] Memory required for data: 3418800
I0428 19:53:12.199929 27713 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:12.199934 27713 net.cpp:86] Creating Layer accuracy
I0428 19:53:12.199937 27713 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:12.199941 27713 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:12.199946 27713 net.cpp:382] accuracy -> accuracy
I0428 19:53:12.199954 27713 net.cpp:124] Setting up accuracy
I0428 19:53:12.199957 27713 net.cpp:131] Top shape: (1)
I0428 19:53:12.199960 27713 net.cpp:139] Memory required for data: 3418804
I0428 19:53:12.199964 27713 layer_factory.hpp:77] Creating layer loss
I0428 19:53:12.199967 27713 net.cpp:86] Creating Layer loss
I0428 19:53:12.199970 27713 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:12.199973 27713 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:12.199993 27713 net.cpp:382] loss -> loss
I0428 19:53:12.200000 27713 layer_factory.hpp:77] Creating layer loss
I0428 19:53:12.200258 27713 net.cpp:124] Setting up loss
I0428 19:53:12.200273 27713 net.cpp:131] Top shape: (1)
I0428 19:53:12.200278 27713 net.cpp:134]     with loss weight 1
I0428 19:53:12.200287 27713 net.cpp:139] Memory required for data: 3418808
I0428 19:53:12.200320 27713 net.cpp:200] loss needs backward computation.
I0428 19:53:12.200325 27713 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:12.200330 27713 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:12.200332 27713 net.cpp:200] relu3 needs backward computation.
I0428 19:53:12.200335 27713 net.cpp:200] ip3 needs backward computation.
I0428 19:53:12.200338 27713 net.cpp:200] relu2 needs backward computation.
I0428 19:53:12.200341 27713 net.cpp:200] ip2 needs backward computation.
I0428 19:53:12.200345 27713 net.cpp:200] relu1 needs backward computation.
I0428 19:53:12.200347 27713 net.cpp:200] ip1 needs backward computation.
I0428 19:53:12.200351 27713 net.cpp:200] pool1 needs backward computation.
I0428 19:53:12.200354 27713 net.cpp:200] conv1 needs backward computation.
I0428 19:53:12.200362 27713 net.cpp:200] pool0 needs backward computation.
I0428 19:53:12.200369 27713 net.cpp:200] conv0 needs backward computation.
I0428 19:53:12.200373 27713 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:12.200377 27713 net.cpp:202] mnist does not need backward computation.
I0428 19:53:12.200381 27713 net.cpp:244] This network produces output accuracy
I0428 19:53:12.200383 27713 net.cpp:244] This network produces output loss
I0428 19:53:12.200394 27713 net.cpp:257] Network initialization done.
I0428 19:53:12.200438 27713 solver.cpp:56] Solver scaffolding done.
I0428 19:53:12.200815 27713 caffe.cpp:248] Starting Optimization
I0428 19:53:12.200834 27713 solver.cpp:273] Solving LeNet
I0428 19:53:12.200836 27713 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:12.201578 27713 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:12.207433 27713 blocking_queue.cpp:49] Waiting for data
I0428 19:53:12.248471 27720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:12.248991 27713 solver.cpp:398]     Test net output #0: accuracy = 0.0833
I0428 19:53:12.249011 27713 solver.cpp:398]     Test net output #1: loss = 2.29437 (* 1 = 2.29437 loss)
I0428 19:53:12.251464 27713 solver.cpp:219] Iteration 0 (-6.41078e-31 iter/s, 0.050602s/100 iters), loss = 2.28348
I0428 19:53:12.251488 27713 solver.cpp:238]     Train net output #0: loss = 2.28348 (* 1 = 2.28348 loss)
I0428 19:53:12.251534 27713 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:12.361295 27713 solver.cpp:219] Iteration 100 (910.828 iter/s, 0.10979s/100 iters), loss = 1.12009
I0428 19:53:12.361335 27713 solver.cpp:238]     Train net output #0: loss = 1.12009 (* 1 = 1.12009 loss)
I0428 19:53:12.361356 27713 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:12.473083 27713 solver.cpp:219] Iteration 200 (894.969 iter/s, 0.111736s/100 iters), loss = 0.69029
I0428 19:53:12.473129 27713 solver.cpp:238]     Train net output #0: loss = 0.69029 (* 1 = 0.69029 loss)
I0428 19:53:12.473147 27713 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:12.578347 27713 solver.cpp:219] Iteration 300 (950.481 iter/s, 0.10521s/100 iters), loss = 0.443928
I0428 19:53:12.578373 27713 solver.cpp:238]     Train net output #0: loss = 0.443928 (* 1 = 0.443928 loss)
I0428 19:53:12.578379 27713 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:12.683665 27713 solver.cpp:219] Iteration 400 (949.844 iter/s, 0.10528s/100 iters), loss = 0.401983
I0428 19:53:12.683701 27713 solver.cpp:238]     Train net output #0: loss = 0.401983 (* 1 = 0.401983 loss)
I0428 19:53:12.683708 27713 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:12.788288 27713 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:12.833606 27720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:12.834092 27713 solver.cpp:398]     Test net output #0: accuracy = 0.8602
I0428 19:53:12.834113 27713 solver.cpp:398]     Test net output #1: loss = 0.383281 (* 1 = 0.383281 loss)
I0428 19:53:12.835150 27713 solver.cpp:219] Iteration 500 (660.331 iter/s, 0.151439s/100 iters), loss = 0.32018
I0428 19:53:12.835213 27713 solver.cpp:238]     Train net output #0: loss = 0.32018 (* 1 = 0.32018 loss)
I0428 19:53:12.835237 27713 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:12.945876 27713 solver.cpp:219] Iteration 600 (903.713 iter/s, 0.110655s/100 iters), loss = 0.381142
I0428 19:53:12.945904 27713 solver.cpp:238]     Train net output #0: loss = 0.381142 (* 1 = 0.381142 loss)
I0428 19:53:12.945926 27713 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:13.054520 27713 solver.cpp:219] Iteration 700 (920.773 iter/s, 0.108604s/100 iters), loss = 0.393083
I0428 19:53:13.054556 27713 solver.cpp:238]     Train net output #0: loss = 0.393083 (* 1 = 0.393083 loss)
I0428 19:53:13.054567 27713 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:13.162257 27713 solver.cpp:219] Iteration 800 (928.574 iter/s, 0.107692s/100 iters), loss = 0.61833
I0428 19:53:13.162286 27713 solver.cpp:238]     Train net output #0: loss = 0.61833 (* 1 = 0.61833 loss)
I0428 19:53:13.162310 27713 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:13.260442 27713 solver.cpp:219] Iteration 900 (1018.89 iter/s, 0.0981463s/100 iters), loss = 0.230711
I0428 19:53:13.260468 27713 solver.cpp:238]     Train net output #0: loss = 0.230711 (* 1 = 0.230711 loss)
I0428 19:53:13.260496 27713 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:13.293263 27719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:13.363847 27713 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:13.365264 27713 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:13.366116 27713 solver.cpp:311] Iteration 1000, loss = 0.267102
I0428 19:53:13.366139 27713 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:13.417377 27720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:13.419018 27713 solver.cpp:398]     Test net output #0: accuracy = 0.8788
I0428 19:53:13.419044 27713 solver.cpp:398]     Test net output #1: loss = 0.320959 (* 1 = 0.320959 loss)
I0428 19:53:13.419050 27713 solver.cpp:316] Optimization Done.
I0428 19:53:13.419064 27713 caffe.cpp:259] Optimization Done.
