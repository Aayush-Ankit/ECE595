I0428 20:19:16.669131  1329 caffe.cpp:218] Using GPUs 0
I0428 20:19:16.707327  1329 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:17.220474  1329 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1338.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:17.220616  1329 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1338.prototxt
I0428 20:19:17.221035  1329 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:17.221052  1329 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:17.221150  1329 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:17.221223  1329 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:17.221328  1329 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:17.221354  1329 net.cpp:86] Creating Layer mnist
I0428 20:19:17.221362  1329 net.cpp:382] mnist -> data
I0428 20:19:17.221385  1329 net.cpp:382] mnist -> label
I0428 20:19:17.222486  1329 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:17.224936  1329 net.cpp:124] Setting up mnist
I0428 20:19:17.224953  1329 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:17.224959  1329 net.cpp:131] Top shape: 64 (64)
I0428 20:19:17.224963  1329 net.cpp:139] Memory required for data: 200960
I0428 20:19:17.224970  1329 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:17.224987  1329 net.cpp:86] Creating Layer conv0
I0428 20:19:17.225014  1329 net.cpp:408] conv0 <- data
I0428 20:19:17.225033  1329 net.cpp:382] conv0 -> conv0
I0428 20:19:17.497210  1329 net.cpp:124] Setting up conv0
I0428 20:19:17.497236  1329 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:17.497239  1329 net.cpp:139] Memory required for data: 7573760
I0428 20:19:17.497252  1329 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:17.497264  1329 net.cpp:86] Creating Layer pool0
I0428 20:19:17.497284  1329 net.cpp:408] pool0 <- conv0
I0428 20:19:17.497289  1329 net.cpp:382] pool0 -> pool0
I0428 20:19:17.497349  1329 net.cpp:124] Setting up pool0
I0428 20:19:17.497357  1329 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:17.497360  1329 net.cpp:139] Memory required for data: 9416960
I0428 20:19:17.497362  1329 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:17.497375  1329 net.cpp:86] Creating Layer conv1
I0428 20:19:17.497377  1329 net.cpp:408] conv1 <- pool0
I0428 20:19:17.497382  1329 net.cpp:382] conv1 -> conv1
I0428 20:19:17.499601  1329 net.cpp:124] Setting up conv1
I0428 20:19:17.499631  1329 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:17.499635  1329 net.cpp:139] Memory required for data: 9826560
I0428 20:19:17.499644  1329 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:17.499652  1329 net.cpp:86] Creating Layer pool1
I0428 20:19:17.499655  1329 net.cpp:408] pool1 <- conv1
I0428 20:19:17.499660  1329 net.cpp:382] pool1 -> pool1
I0428 20:19:17.499713  1329 net.cpp:124] Setting up pool1
I0428 20:19:17.499718  1329 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:17.499722  1329 net.cpp:139] Memory required for data: 9928960
I0428 20:19:17.499725  1329 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:17.499732  1329 net.cpp:86] Creating Layer ip1
I0428 20:19:17.499735  1329 net.cpp:408] ip1 <- pool1
I0428 20:19:17.499740  1329 net.cpp:382] ip1 -> ip1
I0428 20:19:17.499877  1329 net.cpp:124] Setting up ip1
I0428 20:19:17.499886  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.499888  1329 net.cpp:139] Memory required for data: 9931520
I0428 20:19:17.499896  1329 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:17.499902  1329 net.cpp:86] Creating Layer relu1
I0428 20:19:17.499904  1329 net.cpp:408] relu1 <- ip1
I0428 20:19:17.499908  1329 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:17.500069  1329 net.cpp:124] Setting up relu1
I0428 20:19:17.500078  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.500082  1329 net.cpp:139] Memory required for data: 9934080
I0428 20:19:17.500084  1329 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:17.500090  1329 net.cpp:86] Creating Layer ip2
I0428 20:19:17.500093  1329 net.cpp:408] ip2 <- ip1
I0428 20:19:17.500097  1329 net.cpp:382] ip2 -> ip2
I0428 20:19:17.500188  1329 net.cpp:124] Setting up ip2
I0428 20:19:17.500195  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.500198  1329 net.cpp:139] Memory required for data: 9936640
I0428 20:19:17.500203  1329 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:17.500208  1329 net.cpp:86] Creating Layer relu2
I0428 20:19:17.500211  1329 net.cpp:408] relu2 <- ip2
I0428 20:19:17.500216  1329 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:17.500996  1329 net.cpp:124] Setting up relu2
I0428 20:19:17.501009  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.501029  1329 net.cpp:139] Memory required for data: 9939200
I0428 20:19:17.501032  1329 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:17.501054  1329 net.cpp:86] Creating Layer ip3
I0428 20:19:17.501056  1329 net.cpp:408] ip3 <- ip2
I0428 20:19:17.501062  1329 net.cpp:382] ip3 -> ip3
I0428 20:19:17.501200  1329 net.cpp:124] Setting up ip3
I0428 20:19:17.501209  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.501211  1329 net.cpp:139] Memory required for data: 9941760
I0428 20:19:17.501219  1329 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:17.501224  1329 net.cpp:86] Creating Layer relu3
I0428 20:19:17.501226  1329 net.cpp:408] relu3 <- ip3
I0428 20:19:17.501247  1329 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:17.501408  1329 net.cpp:124] Setting up relu3
I0428 20:19:17.501418  1329 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:17.501422  1329 net.cpp:139] Memory required for data: 9944320
I0428 20:19:17.501425  1329 layer_factory.hpp:77] Creating layer loss
I0428 20:19:17.501430  1329 net.cpp:86] Creating Layer loss
I0428 20:19:17.501433  1329 net.cpp:408] loss <- ip3
I0428 20:19:17.501437  1329 net.cpp:408] loss <- label
I0428 20:19:17.501443  1329 net.cpp:382] loss -> loss
I0428 20:19:17.501457  1329 layer_factory.hpp:77] Creating layer loss
I0428 20:19:17.501687  1329 net.cpp:124] Setting up loss
I0428 20:19:17.501695  1329 net.cpp:131] Top shape: (1)
I0428 20:19:17.501699  1329 net.cpp:134]     with loss weight 1
I0428 20:19:17.501711  1329 net.cpp:139] Memory required for data: 9944324
I0428 20:19:17.501730  1329 net.cpp:200] loss needs backward computation.
I0428 20:19:17.501734  1329 net.cpp:200] relu3 needs backward computation.
I0428 20:19:17.501737  1329 net.cpp:200] ip3 needs backward computation.
I0428 20:19:17.501740  1329 net.cpp:200] relu2 needs backward computation.
I0428 20:19:17.501742  1329 net.cpp:200] ip2 needs backward computation.
I0428 20:19:17.501745  1329 net.cpp:200] relu1 needs backward computation.
I0428 20:19:17.501749  1329 net.cpp:200] ip1 needs backward computation.
I0428 20:19:17.501751  1329 net.cpp:200] pool1 needs backward computation.
I0428 20:19:17.501754  1329 net.cpp:200] conv1 needs backward computation.
I0428 20:19:17.501756  1329 net.cpp:200] pool0 needs backward computation.
I0428 20:19:17.501760  1329 net.cpp:200] conv0 needs backward computation.
I0428 20:19:17.501763  1329 net.cpp:202] mnist does not need backward computation.
I0428 20:19:17.501766  1329 net.cpp:244] This network produces output loss
I0428 20:19:17.501775  1329 net.cpp:257] Network initialization done.
I0428 20:19:17.502140  1329 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1338.prototxt
I0428 20:19:17.502182  1329 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:17.502270  1329 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:17.502348  1329 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:17.502394  1329 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:17.502406  1329 net.cpp:86] Creating Layer mnist
I0428 20:19:17.502411  1329 net.cpp:382] mnist -> data
I0428 20:19:17.502418  1329 net.cpp:382] mnist -> label
I0428 20:19:17.502501  1329 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:17.504472  1329 net.cpp:124] Setting up mnist
I0428 20:19:17.504500  1329 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:17.504521  1329 net.cpp:131] Top shape: 100 (100)
I0428 20:19:17.504524  1329 net.cpp:139] Memory required for data: 314000
I0428 20:19:17.504528  1329 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:17.504534  1329 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:17.504537  1329 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:17.504542  1329 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:17.504549  1329 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:17.504593  1329 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:17.504601  1329 net.cpp:131] Top shape: 100 (100)
I0428 20:19:17.504613  1329 net.cpp:131] Top shape: 100 (100)
I0428 20:19:17.504616  1329 net.cpp:139] Memory required for data: 314800
I0428 20:19:17.504619  1329 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:17.504627  1329 net.cpp:86] Creating Layer conv0
I0428 20:19:17.504631  1329 net.cpp:408] conv0 <- data
I0428 20:19:17.504634  1329 net.cpp:382] conv0 -> conv0
I0428 20:19:17.506460  1329 net.cpp:124] Setting up conv0
I0428 20:19:17.506490  1329 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:17.506494  1329 net.cpp:139] Memory required for data: 11834800
I0428 20:19:17.506502  1329 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:17.506508  1329 net.cpp:86] Creating Layer pool0
I0428 20:19:17.506511  1329 net.cpp:408] pool0 <- conv0
I0428 20:19:17.506531  1329 net.cpp:382] pool0 -> pool0
I0428 20:19:17.506566  1329 net.cpp:124] Setting up pool0
I0428 20:19:17.506572  1329 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:17.506575  1329 net.cpp:139] Memory required for data: 14714800
I0428 20:19:17.506578  1329 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:17.506587  1329 net.cpp:86] Creating Layer conv1
I0428 20:19:17.506589  1329 net.cpp:408] conv1 <- pool0
I0428 20:19:17.506594  1329 net.cpp:382] conv1 -> conv1
I0428 20:19:17.508252  1329 net.cpp:124] Setting up conv1
I0428 20:19:17.508265  1329 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:17.508285  1329 net.cpp:139] Memory required for data: 15354800
I0428 20:19:17.508293  1329 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:17.508314  1329 net.cpp:86] Creating Layer pool1
I0428 20:19:17.508319  1329 net.cpp:408] pool1 <- conv1
I0428 20:19:17.508339  1329 net.cpp:382] pool1 -> pool1
I0428 20:19:17.508376  1329 net.cpp:124] Setting up pool1
I0428 20:19:17.508384  1329 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:17.508388  1329 net.cpp:139] Memory required for data: 15514800
I0428 20:19:17.508391  1329 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:17.508399  1329 net.cpp:86] Creating Layer ip1
I0428 20:19:17.508401  1329 net.cpp:408] ip1 <- pool1
I0428 20:19:17.508406  1329 net.cpp:382] ip1 -> ip1
I0428 20:19:17.508532  1329 net.cpp:124] Setting up ip1
I0428 20:19:17.508539  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.508554  1329 net.cpp:139] Memory required for data: 15518800
I0428 20:19:17.508563  1329 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:17.508569  1329 net.cpp:86] Creating Layer relu1
I0428 20:19:17.508572  1329 net.cpp:408] relu1 <- ip1
I0428 20:19:17.508577  1329 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:17.508793  1329 net.cpp:124] Setting up relu1
I0428 20:19:17.508803  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.508807  1329 net.cpp:139] Memory required for data: 15522800
I0428 20:19:17.508818  1329 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:17.508826  1329 net.cpp:86] Creating Layer ip2
I0428 20:19:17.508831  1329 net.cpp:408] ip2 <- ip1
I0428 20:19:17.508836  1329 net.cpp:382] ip2 -> ip2
I0428 20:19:17.508967  1329 net.cpp:124] Setting up ip2
I0428 20:19:17.508975  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.508980  1329 net.cpp:139] Memory required for data: 15526800
I0428 20:19:17.508985  1329 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:17.509001  1329 net.cpp:86] Creating Layer relu2
I0428 20:19:17.509004  1329 net.cpp:408] relu2 <- ip2
I0428 20:19:17.509009  1329 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:17.509222  1329 net.cpp:124] Setting up relu2
I0428 20:19:17.509232  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.509234  1329 net.cpp:139] Memory required for data: 15530800
I0428 20:19:17.509238  1329 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:17.509243  1329 net.cpp:86] Creating Layer ip3
I0428 20:19:17.509248  1329 net.cpp:408] ip3 <- ip2
I0428 20:19:17.509258  1329 net.cpp:382] ip3 -> ip3
I0428 20:19:17.509372  1329 net.cpp:124] Setting up ip3
I0428 20:19:17.509379  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.509383  1329 net.cpp:139] Memory required for data: 15534800
I0428 20:19:17.509392  1329 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:17.509397  1329 net.cpp:86] Creating Layer relu3
I0428 20:19:17.509404  1329 net.cpp:408] relu3 <- ip3
I0428 20:19:17.509409  1329 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:17.510253  1329 net.cpp:124] Setting up relu3
I0428 20:19:17.510264  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.510284  1329 net.cpp:139] Memory required for data: 15538800
I0428 20:19:17.510288  1329 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:17.510293  1329 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:17.510296  1329 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:17.510303  1329 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:17.510308  1329 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:17.510357  1329 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:17.510365  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.510370  1329 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:17.510372  1329 net.cpp:139] Memory required for data: 15546800
I0428 20:19:17.510375  1329 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:17.510381  1329 net.cpp:86] Creating Layer accuracy
I0428 20:19:17.510385  1329 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:17.510390  1329 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:17.510393  1329 net.cpp:382] accuracy -> accuracy
I0428 20:19:17.510401  1329 net.cpp:124] Setting up accuracy
I0428 20:19:17.510406  1329 net.cpp:131] Top shape: (1)
I0428 20:19:17.510408  1329 net.cpp:139] Memory required for data: 15546804
I0428 20:19:17.510411  1329 layer_factory.hpp:77] Creating layer loss
I0428 20:19:17.510416  1329 net.cpp:86] Creating Layer loss
I0428 20:19:17.510424  1329 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:17.510428  1329 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:17.510433  1329 net.cpp:382] loss -> loss
I0428 20:19:17.510439  1329 layer_factory.hpp:77] Creating layer loss
I0428 20:19:17.510704  1329 net.cpp:124] Setting up loss
I0428 20:19:17.510712  1329 net.cpp:131] Top shape: (1)
I0428 20:19:17.510716  1329 net.cpp:134]     with loss weight 1
I0428 20:19:17.510733  1329 net.cpp:139] Memory required for data: 15546808
I0428 20:19:17.510737  1329 net.cpp:200] loss needs backward computation.
I0428 20:19:17.510742  1329 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:17.510746  1329 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:17.510749  1329 net.cpp:200] relu3 needs backward computation.
I0428 20:19:17.510752  1329 net.cpp:200] ip3 needs backward computation.
I0428 20:19:17.510756  1329 net.cpp:200] relu2 needs backward computation.
I0428 20:19:17.510764  1329 net.cpp:200] ip2 needs backward computation.
I0428 20:19:17.510767  1329 net.cpp:200] relu1 needs backward computation.
I0428 20:19:17.510771  1329 net.cpp:200] ip1 needs backward computation.
I0428 20:19:17.510773  1329 net.cpp:200] pool1 needs backward computation.
I0428 20:19:17.510777  1329 net.cpp:200] conv1 needs backward computation.
I0428 20:19:17.510781  1329 net.cpp:200] pool0 needs backward computation.
I0428 20:19:17.510783  1329 net.cpp:200] conv0 needs backward computation.
I0428 20:19:17.510802  1329 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:17.510807  1329 net.cpp:202] mnist does not need backward computation.
I0428 20:19:17.510828  1329 net.cpp:244] This network produces output accuracy
I0428 20:19:17.510830  1329 net.cpp:244] This network produces output loss
I0428 20:19:17.510845  1329 net.cpp:257] Network initialization done.
I0428 20:19:17.510900  1329 solver.cpp:56] Solver scaffolding done.
I0428 20:19:17.511301  1329 caffe.cpp:248] Starting Optimization
I0428 20:19:17.511307  1329 solver.cpp:273] Solving LeNet
I0428 20:19:17.511309  1329 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:17.511646  1329 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:17.518673  1329 blocking_queue.cpp:49] Waiting for data
I0428 20:19:17.589336  1336 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:17.590185  1329 solver.cpp:398]     Test net output #0: accuracy = 0.0875
I0428 20:19:17.590236  1329 solver.cpp:398]     Test net output #1: loss = 2.30771 (* 1 = 2.30771 loss)
I0428 20:19:17.594452  1329 solver.cpp:219] Iteration 0 (0 iter/s, 0.0830925s/100 iters), loss = 2.32025
I0428 20:19:17.594492  1329 solver.cpp:238]     Train net output #0: loss = 2.32025 (* 1 = 2.32025 loss)
I0428 20:19:17.594506  1329 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:17.725318  1329 solver.cpp:219] Iteration 100 (764.349 iter/s, 0.13083s/100 iters), loss = 0.782534
I0428 20:19:17.725358  1329 solver.cpp:238]     Train net output #0: loss = 0.782534 (* 1 = 0.782534 loss)
I0428 20:19:17.725364  1329 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:17.863957  1329 solver.cpp:219] Iteration 200 (721.504 iter/s, 0.138599s/100 iters), loss = 0.342807
I0428 20:19:17.863993  1329 solver.cpp:238]     Train net output #0: loss = 0.342807 (* 1 = 0.342807 loss)
I0428 20:19:17.864002  1329 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:18.006988  1329 solver.cpp:219] Iteration 300 (699.393 iter/s, 0.142981s/100 iters), loss = 0.302835
I0428 20:19:18.007025  1329 solver.cpp:238]     Train net output #0: loss = 0.302835 (* 1 = 0.302835 loss)
I0428 20:19:18.007035  1329 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:18.158232  1329 solver.cpp:219] Iteration 400 (661.407 iter/s, 0.151193s/100 iters), loss = 0.21569
I0428 20:19:18.158277  1329 solver.cpp:238]     Train net output #0: loss = 0.21569 (* 1 = 0.21569 loss)
I0428 20:19:18.158288  1329 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:18.310655  1329 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:18.386478  1336 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:18.388928  1329 solver.cpp:398]     Test net output #0: accuracy = 0.9454
I0428 20:19:18.388954  1329 solver.cpp:398]     Test net output #1: loss = 0.168101 (* 1 = 0.168101 loss)
I0428 20:19:18.390264  1329 solver.cpp:219] Iteration 500 (431.085 iter/s, 0.231973s/100 iters), loss = 0.208284
I0428 20:19:18.390312  1329 solver.cpp:238]     Train net output #0: loss = 0.208284 (* 1 = 0.208284 loss)
I0428 20:19:18.390321  1329 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:18.534107  1329 solver.cpp:219] Iteration 600 (695.508 iter/s, 0.14378s/100 iters), loss = 0.113539
I0428 20:19:18.534150  1329 solver.cpp:238]     Train net output #0: loss = 0.113539 (* 1 = 0.113539 loss)
I0428 20:19:18.534159  1329 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:18.681479  1329 solver.cpp:219] Iteration 700 (678.814 iter/s, 0.147316s/100 iters), loss = 0.204528
I0428 20:19:18.681521  1329 solver.cpp:238]     Train net output #0: loss = 0.204528 (* 1 = 0.204528 loss)
I0428 20:19:18.681532  1329 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:18.828217  1329 solver.cpp:219] Iteration 800 (681.733 iter/s, 0.146685s/100 iters), loss = 0.363356
I0428 20:19:18.828255  1329 solver.cpp:238]     Train net output #0: loss = 0.363356 (* 1 = 0.363356 loss)
I0428 20:19:18.828264  1329 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:18.967759  1329 solver.cpp:219] Iteration 900 (716.88 iter/s, 0.139493s/100 iters), loss = 0.211837
I0428 20:19:18.967800  1329 solver.cpp:238]     Train net output #0: loss = 0.211837 (* 1 = 0.211837 loss)
I0428 20:19:18.967808  1329 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:19.014171  1335 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:19.107026  1329 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:19.108563  1329 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:19.109536  1329 solver.cpp:311] Iteration 1000, loss = 0.140962
I0428 20:19:19.109555  1329 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:19.178510  1336 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:19.180944  1329 solver.cpp:398]     Test net output #0: accuracy = 0.965
I0428 20:19:19.180968  1329 solver.cpp:398]     Test net output #1: loss = 0.111916 (* 1 = 0.111916 loss)
I0428 20:19:19.180981  1329 solver.cpp:316] Optimization Done.
I0428 20:19:19.180985  1329 caffe.cpp:259] Optimization Done.
