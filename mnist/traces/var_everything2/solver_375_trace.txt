I0428 19:41:47.684859 24915 caffe.cpp:218] Using GPUs 0
I0428 19:41:47.726259 24915 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:48.246613 24915 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test375.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:48.246801 24915 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test375.prototxt
I0428 19:41:48.247658 24915 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:48.247681 24915 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:48.247783 24915 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:48.247866 24915 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:48.247967 24915 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:48.247989 24915 net.cpp:86] Creating Layer mnist
I0428 19:41:48.247999 24915 net.cpp:382] mnist -> data
I0428 19:41:48.248021 24915 net.cpp:382] mnist -> label
I0428 19:41:48.249128 24915 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:48.251581 24915 net.cpp:124] Setting up mnist
I0428 19:41:48.251598 24915 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:48.251605 24915 net.cpp:131] Top shape: 64 (64)
I0428 19:41:48.251608 24915 net.cpp:139] Memory required for data: 200960
I0428 19:41:48.251616 24915 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:48.251632 24915 net.cpp:86] Creating Layer conv0
I0428 19:41:48.251653 24915 net.cpp:408] conv0 <- data
I0428 19:41:48.251667 24915 net.cpp:382] conv0 -> conv0
I0428 19:41:48.540093 24915 net.cpp:124] Setting up conv0
I0428 19:41:48.540124 24915 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:48.540129 24915 net.cpp:139] Memory required for data: 495872
I0428 19:41:48.540146 24915 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:48.540159 24915 net.cpp:86] Creating Layer pool0
I0428 19:41:48.540164 24915 net.cpp:408] pool0 <- conv0
I0428 19:41:48.540170 24915 net.cpp:382] pool0 -> pool0
I0428 19:41:48.540222 24915 net.cpp:124] Setting up pool0
I0428 19:41:48.540230 24915 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:48.540232 24915 net.cpp:139] Memory required for data: 569600
I0428 19:41:48.540236 24915 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:48.540248 24915 net.cpp:86] Creating Layer conv1
I0428 19:41:48.540251 24915 net.cpp:408] conv1 <- pool0
I0428 19:41:48.540257 24915 net.cpp:382] conv1 -> conv1
I0428 19:41:48.542222 24915 net.cpp:124] Setting up conv1
I0428 19:41:48.542237 24915 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:48.542243 24915 net.cpp:139] Memory required for data: 733440
I0428 19:41:48.542253 24915 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:48.542260 24915 net.cpp:86] Creating Layer pool1
I0428 19:41:48.542264 24915 net.cpp:408] pool1 <- conv1
I0428 19:41:48.542270 24915 net.cpp:382] pool1 -> pool1
I0428 19:41:48.542309 24915 net.cpp:124] Setting up pool1
I0428 19:41:48.542315 24915 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:48.542320 24915 net.cpp:139] Memory required for data: 774400
I0428 19:41:48.542322 24915 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:48.542330 24915 net.cpp:86] Creating Layer ip1
I0428 19:41:48.542335 24915 net.cpp:408] ip1 <- pool1
I0428 19:41:48.542340 24915 net.cpp:382] ip1 -> ip1
I0428 19:41:48.543371 24915 net.cpp:124] Setting up ip1
I0428 19:41:48.543385 24915 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:48.543390 24915 net.cpp:139] Memory required for data: 780800
I0428 19:41:48.543400 24915 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:48.543406 24915 net.cpp:86] Creating Layer relu1
I0428 19:41:48.543409 24915 net.cpp:408] relu1 <- ip1
I0428 19:41:48.543416 24915 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:48.543592 24915 net.cpp:124] Setting up relu1
I0428 19:41:48.543603 24915 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:48.543607 24915 net.cpp:139] Memory required for data: 787200
I0428 19:41:48.543611 24915 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:48.543619 24915 net.cpp:86] Creating Layer ip2
I0428 19:41:48.543622 24915 net.cpp:408] ip2 <- ip1
I0428 19:41:48.543628 24915 net.cpp:382] ip2 -> ip2
I0428 19:41:48.543735 24915 net.cpp:124] Setting up ip2
I0428 19:41:48.543742 24915 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:48.543746 24915 net.cpp:139] Memory required for data: 793600
I0428 19:41:48.543752 24915 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:48.543758 24915 net.cpp:86] Creating Layer relu2
I0428 19:41:48.543762 24915 net.cpp:408] relu2 <- ip2
I0428 19:41:48.543767 24915 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:48.544548 24915 net.cpp:124] Setting up relu2
I0428 19:41:48.544564 24915 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:48.544567 24915 net.cpp:139] Memory required for data: 800000
I0428 19:41:48.544571 24915 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:48.544579 24915 net.cpp:86] Creating Layer ip3
I0428 19:41:48.544582 24915 net.cpp:408] ip3 <- ip2
I0428 19:41:48.544589 24915 net.cpp:382] ip3 -> ip3
I0428 19:41:48.544703 24915 net.cpp:124] Setting up ip3
I0428 19:41:48.544711 24915 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:48.544714 24915 net.cpp:139] Memory required for data: 802560
I0428 19:41:48.544723 24915 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:48.544729 24915 net.cpp:86] Creating Layer relu3
I0428 19:41:48.544733 24915 net.cpp:408] relu3 <- ip3
I0428 19:41:48.544739 24915 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:48.544930 24915 net.cpp:124] Setting up relu3
I0428 19:41:48.544941 24915 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:48.544945 24915 net.cpp:139] Memory required for data: 805120
I0428 19:41:48.544948 24915 layer_factory.hpp:77] Creating layer loss
I0428 19:41:48.544955 24915 net.cpp:86] Creating Layer loss
I0428 19:41:48.544958 24915 net.cpp:408] loss <- ip3
I0428 19:41:48.544963 24915 net.cpp:408] loss <- label
I0428 19:41:48.544970 24915 net.cpp:382] loss -> loss
I0428 19:41:48.544991 24915 layer_factory.hpp:77] Creating layer loss
I0428 19:41:48.545243 24915 net.cpp:124] Setting up loss
I0428 19:41:48.545253 24915 net.cpp:131] Top shape: (1)
I0428 19:41:48.545258 24915 net.cpp:134]     with loss weight 1
I0428 19:41:48.545272 24915 net.cpp:139] Memory required for data: 805124
I0428 19:41:48.545276 24915 net.cpp:200] loss needs backward computation.
I0428 19:41:48.545280 24915 net.cpp:200] relu3 needs backward computation.
I0428 19:41:48.545284 24915 net.cpp:200] ip3 needs backward computation.
I0428 19:41:48.545287 24915 net.cpp:200] relu2 needs backward computation.
I0428 19:41:48.545290 24915 net.cpp:200] ip2 needs backward computation.
I0428 19:41:48.545294 24915 net.cpp:200] relu1 needs backward computation.
I0428 19:41:48.545296 24915 net.cpp:200] ip1 needs backward computation.
I0428 19:41:48.545300 24915 net.cpp:200] pool1 needs backward computation.
I0428 19:41:48.545302 24915 net.cpp:200] conv1 needs backward computation.
I0428 19:41:48.545306 24915 net.cpp:200] pool0 needs backward computation.
I0428 19:41:48.545310 24915 net.cpp:200] conv0 needs backward computation.
I0428 19:41:48.545313 24915 net.cpp:202] mnist does not need backward computation.
I0428 19:41:48.545316 24915 net.cpp:244] This network produces output loss
I0428 19:41:48.545327 24915 net.cpp:257] Network initialization done.
I0428 19:41:48.545683 24915 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test375.prototxt
I0428 19:41:48.545713 24915 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:48.545814 24915 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:48.545904 24915 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:48.545953 24915 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:48.545969 24915 net.cpp:86] Creating Layer mnist
I0428 19:41:48.545975 24915 net.cpp:382] mnist -> data
I0428 19:41:48.545984 24915 net.cpp:382] mnist -> label
I0428 19:41:48.546082 24915 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:48.548312 24915 net.cpp:124] Setting up mnist
I0428 19:41:48.548327 24915 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:48.548332 24915 net.cpp:131] Top shape: 100 (100)
I0428 19:41:48.548336 24915 net.cpp:139] Memory required for data: 314000
I0428 19:41:48.548339 24915 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:48.548365 24915 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:48.548370 24915 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:48.548375 24915 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:48.548383 24915 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:48.548444 24915 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:48.548454 24915 net.cpp:131] Top shape: 100 (100)
I0428 19:41:48.548457 24915 net.cpp:131] Top shape: 100 (100)
I0428 19:41:48.548460 24915 net.cpp:139] Memory required for data: 314800
I0428 19:41:48.548465 24915 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:48.548475 24915 net.cpp:86] Creating Layer conv0
I0428 19:41:48.548478 24915 net.cpp:408] conv0 <- data
I0428 19:41:48.548485 24915 net.cpp:382] conv0 -> conv0
I0428 19:41:48.550324 24915 net.cpp:124] Setting up conv0
I0428 19:41:48.550350 24915 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:48.550354 24915 net.cpp:139] Memory required for data: 775600
I0428 19:41:48.550366 24915 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:48.550374 24915 net.cpp:86] Creating Layer pool0
I0428 19:41:48.550377 24915 net.cpp:408] pool0 <- conv0
I0428 19:41:48.550382 24915 net.cpp:382] pool0 -> pool0
I0428 19:41:48.550424 24915 net.cpp:124] Setting up pool0
I0428 19:41:48.550432 24915 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:48.550436 24915 net.cpp:139] Memory required for data: 890800
I0428 19:41:48.550438 24915 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:48.550448 24915 net.cpp:86] Creating Layer conv1
I0428 19:41:48.550452 24915 net.cpp:408] conv1 <- pool0
I0428 19:41:48.550459 24915 net.cpp:382] conv1 -> conv1
I0428 19:41:48.552078 24915 net.cpp:124] Setting up conv1
I0428 19:41:48.552093 24915 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:48.552096 24915 net.cpp:139] Memory required for data: 1146800
I0428 19:41:48.552108 24915 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:48.552114 24915 net.cpp:86] Creating Layer pool1
I0428 19:41:48.552119 24915 net.cpp:408] pool1 <- conv1
I0428 19:41:48.552126 24915 net.cpp:382] pool1 -> pool1
I0428 19:41:48.552182 24915 net.cpp:124] Setting up pool1
I0428 19:41:48.552188 24915 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:48.552192 24915 net.cpp:139] Memory required for data: 1210800
I0428 19:41:48.552196 24915 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:48.552203 24915 net.cpp:86] Creating Layer ip1
I0428 19:41:48.552207 24915 net.cpp:408] ip1 <- pool1
I0428 19:41:48.552212 24915 net.cpp:382] ip1 -> ip1
I0428 19:41:48.552343 24915 net.cpp:124] Setting up ip1
I0428 19:41:48.552353 24915 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:48.552367 24915 net.cpp:139] Memory required for data: 1220800
I0428 19:41:48.552376 24915 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:48.552383 24915 net.cpp:86] Creating Layer relu1
I0428 19:41:48.552386 24915 net.cpp:408] relu1 <- ip1
I0428 19:41:48.552392 24915 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:48.552584 24915 net.cpp:124] Setting up relu1
I0428 19:41:48.552595 24915 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:48.552606 24915 net.cpp:139] Memory required for data: 1230800
I0428 19:41:48.552610 24915 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:48.552619 24915 net.cpp:86] Creating Layer ip2
I0428 19:41:48.552623 24915 net.cpp:408] ip2 <- ip1
I0428 19:41:48.552630 24915 net.cpp:382] ip2 -> ip2
I0428 19:41:48.552742 24915 net.cpp:124] Setting up ip2
I0428 19:41:48.552750 24915 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:48.552759 24915 net.cpp:139] Memory required for data: 1240800
I0428 19:41:48.552765 24915 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:48.552770 24915 net.cpp:86] Creating Layer relu2
I0428 19:41:48.552773 24915 net.cpp:408] relu2 <- ip2
I0428 19:41:48.552778 24915 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:48.552956 24915 net.cpp:124] Setting up relu2
I0428 19:41:48.552966 24915 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:48.552969 24915 net.cpp:139] Memory required for data: 1250800
I0428 19:41:48.552973 24915 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:48.552978 24915 net.cpp:86] Creating Layer ip3
I0428 19:41:48.552983 24915 net.cpp:408] ip3 <- ip2
I0428 19:41:48.552989 24915 net.cpp:382] ip3 -> ip3
I0428 19:41:48.553117 24915 net.cpp:124] Setting up ip3
I0428 19:41:48.553125 24915 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:48.553128 24915 net.cpp:139] Memory required for data: 1254800
I0428 19:41:48.553136 24915 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:48.553143 24915 net.cpp:86] Creating Layer relu3
I0428 19:41:48.553146 24915 net.cpp:408] relu3 <- ip3
I0428 19:41:48.553150 24915 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:48.553995 24915 net.cpp:124] Setting up relu3
I0428 19:41:48.554008 24915 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:48.554030 24915 net.cpp:139] Memory required for data: 1258800
I0428 19:41:48.554034 24915 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:48.554040 24915 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:48.554045 24915 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:48.554052 24915 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:48.554059 24915 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:48.554111 24915 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:48.554117 24915 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:48.554121 24915 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:48.554124 24915 net.cpp:139] Memory required for data: 1266800
I0428 19:41:48.554128 24915 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:48.554133 24915 net.cpp:86] Creating Layer accuracy
I0428 19:41:48.554136 24915 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:48.554141 24915 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:48.554147 24915 net.cpp:382] accuracy -> accuracy
I0428 19:41:48.554155 24915 net.cpp:124] Setting up accuracy
I0428 19:41:48.554159 24915 net.cpp:131] Top shape: (1)
I0428 19:41:48.554162 24915 net.cpp:139] Memory required for data: 1266804
I0428 19:41:48.554165 24915 layer_factory.hpp:77] Creating layer loss
I0428 19:41:48.554170 24915 net.cpp:86] Creating Layer loss
I0428 19:41:48.554174 24915 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:48.554178 24915 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:48.554183 24915 net.cpp:382] loss -> loss
I0428 19:41:48.554188 24915 layer_factory.hpp:77] Creating layer loss
I0428 19:41:48.554440 24915 net.cpp:124] Setting up loss
I0428 19:41:48.554452 24915 net.cpp:131] Top shape: (1)
I0428 19:41:48.554456 24915 net.cpp:134]     with loss weight 1
I0428 19:41:48.554463 24915 net.cpp:139] Memory required for data: 1266808
I0428 19:41:48.554489 24915 net.cpp:200] loss needs backward computation.
I0428 19:41:48.554496 24915 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:48.554507 24915 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:48.554517 24915 net.cpp:200] relu3 needs backward computation.
I0428 19:41:48.554519 24915 net.cpp:200] ip3 needs backward computation.
I0428 19:41:48.554523 24915 net.cpp:200] relu2 needs backward computation.
I0428 19:41:48.554527 24915 net.cpp:200] ip2 needs backward computation.
I0428 19:41:48.554529 24915 net.cpp:200] relu1 needs backward computation.
I0428 19:41:48.554533 24915 net.cpp:200] ip1 needs backward computation.
I0428 19:41:48.554536 24915 net.cpp:200] pool1 needs backward computation.
I0428 19:41:48.554540 24915 net.cpp:200] conv1 needs backward computation.
I0428 19:41:48.554543 24915 net.cpp:200] pool0 needs backward computation.
I0428 19:41:48.554548 24915 net.cpp:200] conv0 needs backward computation.
I0428 19:41:48.554551 24915 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:48.554556 24915 net.cpp:202] mnist does not need backward computation.
I0428 19:41:48.554559 24915 net.cpp:244] This network produces output accuracy
I0428 19:41:48.554563 24915 net.cpp:244] This network produces output loss
I0428 19:41:48.554576 24915 net.cpp:257] Network initialization done.
I0428 19:41:48.554623 24915 solver.cpp:56] Solver scaffolding done.
I0428 19:41:48.555018 24915 caffe.cpp:248] Starting Optimization
I0428 19:41:48.555024 24915 solver.cpp:273] Solving LeNet
I0428 19:41:48.555027 24915 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:48.555917 24915 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:48.558253 24915 blocking_queue.cpp:49] Waiting for data
I0428 19:41:48.630682 24922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:48.631333 24915 solver.cpp:398]     Test net output #0: accuracy = 0.0919
I0428 19:41:48.631368 24915 solver.cpp:398]     Test net output #1: loss = 2.30537 (* 1 = 2.30537 loss)
I0428 19:41:48.634179 24915 solver.cpp:219] Iteration 0 (-1.08553e-30 iter/s, 0.0791081s/100 iters), loss = 2.31859
I0428 19:41:48.634224 24915 solver.cpp:238]     Train net output #0: loss = 2.31859 (* 1 = 2.31859 loss)
I0428 19:41:48.634243 24915 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:48.725759 24915 solver.cpp:219] Iteration 100 (1092.6 iter/s, 0.0915251s/100 iters), loss = 1.10475
I0428 19:41:48.725792 24915 solver.cpp:238]     Train net output #0: loss = 1.10475 (* 1 = 1.10475 loss)
I0428 19:41:48.725800 24915 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:48.802356 24915 solver.cpp:219] Iteration 200 (1306.31 iter/s, 0.0765512s/100 iters), loss = 0.402224
I0428 19:41:48.802381 24915 solver.cpp:238]     Train net output #0: loss = 0.402224 (* 1 = 0.402224 loss)
I0428 19:41:48.802387 24915 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:48.874719 24915 solver.cpp:219] Iteration 300 (1382.78 iter/s, 0.072318s/100 iters), loss = 0.339917
I0428 19:41:48.874759 24915 solver.cpp:238]     Train net output #0: loss = 0.339917 (* 1 = 0.339917 loss)
I0428 19:41:48.874765 24915 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:48.947433 24915 solver.cpp:219] Iteration 400 (1375.87 iter/s, 0.0726815s/100 iters), loss = 0.134563
I0428 19:41:48.947474 24915 solver.cpp:238]     Train net output #0: loss = 0.134564 (* 1 = 0.134564 loss)
I0428 19:41:48.947481 24915 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:49.019512 24915 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:49.072512 24922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:49.072958 24915 solver.cpp:398]     Test net output #0: accuracy = 0.948
I0428 19:41:49.072979 24915 solver.cpp:398]     Test net output #1: loss = 0.169935 (* 1 = 0.169935 loss)
I0428 19:41:49.073786 24915 solver.cpp:219] Iteration 500 (791.674 iter/s, 0.126315s/100 iters), loss = 0.0940584
I0428 19:41:49.073809 24915 solver.cpp:238]     Train net output #0: loss = 0.0940584 (* 1 = 0.0940584 loss)
I0428 19:41:49.073830 24915 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:49.155128 24915 solver.cpp:219] Iteration 600 (1229.88 iter/s, 0.0813087s/100 iters), loss = 0.144806
I0428 19:41:49.155166 24915 solver.cpp:238]     Train net output #0: loss = 0.144806 (* 1 = 0.144806 loss)
I0428 19:41:49.155174 24915 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:49.236171 24915 solver.cpp:219] Iteration 700 (1234.56 iter/s, 0.0810004s/100 iters), loss = 0.141359
I0428 19:41:49.236217 24915 solver.cpp:238]     Train net output #0: loss = 0.141359 (* 1 = 0.141359 loss)
I0428 19:41:49.236225 24915 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:49.314148 24915 solver.cpp:219] Iteration 800 (1283.18 iter/s, 0.0779315s/100 iters), loss = 0.363891
I0428 19:41:49.314177 24915 solver.cpp:238]     Train net output #0: loss = 0.363892 (* 1 = 0.363892 loss)
I0428 19:41:49.314190 24915 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:49.391139 24915 solver.cpp:219] Iteration 900 (1299.62 iter/s, 0.0769454s/100 iters), loss = 0.252923
I0428 19:41:49.391167 24915 solver.cpp:238]     Train net output #0: loss = 0.252923 (* 1 = 0.252923 loss)
I0428 19:41:49.391175 24915 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:49.416930 24921 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:49.467651 24915 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:49.468408 24915 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:49.468884 24915 solver.cpp:311] Iteration 1000, loss = 0.125785
I0428 19:41:49.468902 24915 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:49.542404 24922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:49.542872 24915 solver.cpp:398]     Test net output #0: accuracy = 0.9627
I0428 19:41:49.542894 24915 solver.cpp:398]     Test net output #1: loss = 0.114922 (* 1 = 0.114922 loss)
I0428 19:41:49.542908 24915 solver.cpp:316] Optimization Done.
I0428 19:41:49.542913 24915 caffe.cpp:259] Optimization Done.
