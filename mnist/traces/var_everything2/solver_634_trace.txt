I0428 19:51:27.260421 27286 caffe.cpp:218] Using GPUs 0
I0428 19:51:27.295936 27286 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:27.751770 27286 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test634.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:27.751926 27286 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test634.prototxt
I0428 19:51:27.752239 27286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:27.752269 27286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:27.752338 27286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:27.752398 27286 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:27.752478 27286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:27.752497 27286 net.cpp:86] Creating Layer mnist
I0428 19:51:27.752504 27286 net.cpp:382] mnist -> data
I0428 19:51:27.752522 27286 net.cpp:382] mnist -> label
I0428 19:51:27.753451 27286 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:27.755538 27286 net.cpp:124] Setting up mnist
I0428 19:51:27.755568 27286 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:27.755571 27286 net.cpp:131] Top shape: 64 (64)
I0428 19:51:27.755574 27286 net.cpp:139] Memory required for data: 200960
I0428 19:51:27.755579 27286 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:27.755633 27286 net.cpp:86] Creating Layer conv0
I0428 19:51:27.755638 27286 net.cpp:408] conv0 <- data
I0428 19:51:27.755656 27286 net.cpp:382] conv0 -> conv0
I0428 19:51:27.983793 27286 net.cpp:124] Setting up conv0
I0428 19:51:27.983817 27286 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:27.983821 27286 net.cpp:139] Memory required for data: 938240
I0428 19:51:27.983852 27286 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:27.983880 27286 net.cpp:86] Creating Layer pool0
I0428 19:51:27.983883 27286 net.cpp:408] pool0 <- conv0
I0428 19:51:27.983888 27286 net.cpp:382] pool0 -> pool0
I0428 19:51:27.983932 27286 net.cpp:124] Setting up pool0
I0428 19:51:27.983939 27286 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:27.983942 27286 net.cpp:139] Memory required for data: 1122560
I0428 19:51:27.983945 27286 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:27.983956 27286 net.cpp:86] Creating Layer conv1
I0428 19:51:27.983959 27286 net.cpp:408] conv1 <- pool0
I0428 19:51:27.983964 27286 net.cpp:382] conv1 -> conv1
I0428 19:51:27.986618 27286 net.cpp:124] Setting up conv1
I0428 19:51:27.986632 27286 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:27.986635 27286 net.cpp:139] Memory required for data: 1532160
I0428 19:51:27.986644 27286 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:27.986652 27286 net.cpp:86] Creating Layer pool1
I0428 19:51:27.986655 27286 net.cpp:408] pool1 <- conv1
I0428 19:51:27.986660 27286 net.cpp:382] pool1 -> pool1
I0428 19:51:27.986696 27286 net.cpp:124] Setting up pool1
I0428 19:51:27.986701 27286 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:27.986704 27286 net.cpp:139] Memory required for data: 1634560
I0428 19:51:27.986707 27286 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:27.986713 27286 net.cpp:86] Creating Layer ip1
I0428 19:51:27.986716 27286 net.cpp:408] ip1 <- pool1
I0428 19:51:27.986721 27286 net.cpp:382] ip1 -> ip1
I0428 19:51:27.986917 27286 net.cpp:124] Setting up ip1
I0428 19:51:27.986923 27286 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:27.986927 27286 net.cpp:139] Memory required for data: 1647360
I0428 19:51:27.986933 27286 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:27.986938 27286 net.cpp:86] Creating Layer relu1
I0428 19:51:27.986941 27286 net.cpp:408] relu1 <- ip1
I0428 19:51:27.986945 27286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:27.987097 27286 net.cpp:124] Setting up relu1
I0428 19:51:27.987104 27286 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:27.987107 27286 net.cpp:139] Memory required for data: 1660160
I0428 19:51:27.987110 27286 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:27.987116 27286 net.cpp:86] Creating Layer ip2
I0428 19:51:27.987119 27286 net.cpp:408] ip2 <- ip1
I0428 19:51:27.987123 27286 net.cpp:382] ip2 -> ip2
I0428 19:51:27.987228 27286 net.cpp:124] Setting up ip2
I0428 19:51:27.987236 27286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:27.987237 27286 net.cpp:139] Memory required for data: 1662720
I0428 19:51:27.987242 27286 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:27.987248 27286 net.cpp:86] Creating Layer relu2
I0428 19:51:27.987251 27286 net.cpp:408] relu2 <- ip2
I0428 19:51:27.987254 27286 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:27.987982 27286 net.cpp:124] Setting up relu2
I0428 19:51:27.987994 27286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:27.987998 27286 net.cpp:139] Memory required for data: 1665280
I0428 19:51:27.988000 27286 layer_factory.hpp:77] Creating layer loss
I0428 19:51:27.988011 27286 net.cpp:86] Creating Layer loss
I0428 19:51:27.988014 27286 net.cpp:408] loss <- ip2
I0428 19:51:27.988018 27286 net.cpp:408] loss <- label
I0428 19:51:27.988023 27286 net.cpp:382] loss -> loss
I0428 19:51:27.988037 27286 layer_factory.hpp:77] Creating layer loss
I0428 19:51:27.988248 27286 net.cpp:124] Setting up loss
I0428 19:51:27.988257 27286 net.cpp:131] Top shape: (1)
I0428 19:51:27.988260 27286 net.cpp:134]     with loss weight 1
I0428 19:51:27.988273 27286 net.cpp:139] Memory required for data: 1665284
I0428 19:51:27.988276 27286 net.cpp:200] loss needs backward computation.
I0428 19:51:27.988279 27286 net.cpp:200] relu2 needs backward computation.
I0428 19:51:27.988282 27286 net.cpp:200] ip2 needs backward computation.
I0428 19:51:27.988301 27286 net.cpp:200] relu1 needs backward computation.
I0428 19:51:27.988303 27286 net.cpp:200] ip1 needs backward computation.
I0428 19:51:27.988317 27286 net.cpp:200] pool1 needs backward computation.
I0428 19:51:27.988319 27286 net.cpp:200] conv1 needs backward computation.
I0428 19:51:27.988322 27286 net.cpp:200] pool0 needs backward computation.
I0428 19:51:27.988325 27286 net.cpp:200] conv0 needs backward computation.
I0428 19:51:27.988328 27286 net.cpp:202] mnist does not need backward computation.
I0428 19:51:27.988332 27286 net.cpp:244] This network produces output loss
I0428 19:51:27.988339 27286 net.cpp:257] Network initialization done.
I0428 19:51:27.988620 27286 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test634.prototxt
I0428 19:51:27.988642 27286 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:27.988723 27286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:27.988781 27286 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:27.988847 27286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:27.988858 27286 net.cpp:86] Creating Layer mnist
I0428 19:51:27.988863 27286 net.cpp:382] mnist -> data
I0428 19:51:27.988888 27286 net.cpp:382] mnist -> label
I0428 19:51:27.988998 27286 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:27.990957 27286 net.cpp:124] Setting up mnist
I0428 19:51:27.990970 27286 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:27.990993 27286 net.cpp:131] Top shape: 100 (100)
I0428 19:51:27.990995 27286 net.cpp:139] Memory required for data: 314000
I0428 19:51:27.990998 27286 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:27.991005 27286 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:27.991008 27286 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:27.991014 27286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:27.991027 27286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:27.991067 27286 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:27.991082 27286 net.cpp:131] Top shape: 100 (100)
I0428 19:51:27.991086 27286 net.cpp:131] Top shape: 100 (100)
I0428 19:51:27.991089 27286 net.cpp:139] Memory required for data: 314800
I0428 19:51:27.991092 27286 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:27.991101 27286 net.cpp:86] Creating Layer conv0
I0428 19:51:27.991104 27286 net.cpp:408] conv0 <- data
I0428 19:51:27.991108 27286 net.cpp:382] conv0 -> conv0
I0428 19:51:27.992745 27286 net.cpp:124] Setting up conv0
I0428 19:51:27.992774 27286 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:27.992779 27286 net.cpp:139] Memory required for data: 1466800
I0428 19:51:27.992787 27286 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:27.992794 27286 net.cpp:86] Creating Layer pool0
I0428 19:51:27.992796 27286 net.cpp:408] pool0 <- conv0
I0428 19:51:27.992800 27286 net.cpp:382] pool0 -> pool0
I0428 19:51:27.992857 27286 net.cpp:124] Setting up pool0
I0428 19:51:27.992864 27286 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:27.992867 27286 net.cpp:139] Memory required for data: 1754800
I0428 19:51:27.992871 27286 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:27.992879 27286 net.cpp:86] Creating Layer conv1
I0428 19:51:27.992885 27286 net.cpp:408] conv1 <- pool0
I0428 19:51:27.992890 27286 net.cpp:382] conv1 -> conv1
I0428 19:51:27.994865 27286 net.cpp:124] Setting up conv1
I0428 19:51:27.994877 27286 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:27.994897 27286 net.cpp:139] Memory required for data: 2394800
I0428 19:51:27.994905 27286 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:27.994912 27286 net.cpp:86] Creating Layer pool1
I0428 19:51:27.994915 27286 net.cpp:408] pool1 <- conv1
I0428 19:51:27.994937 27286 net.cpp:382] pool1 -> pool1
I0428 19:51:27.995007 27286 net.cpp:124] Setting up pool1
I0428 19:51:27.995013 27286 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:27.995018 27286 net.cpp:139] Memory required for data: 2554800
I0428 19:51:27.995020 27286 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:27.995025 27286 net.cpp:86] Creating Layer ip1
I0428 19:51:27.995028 27286 net.cpp:408] ip1 <- pool1
I0428 19:51:27.995033 27286 net.cpp:382] ip1 -> ip1
I0428 19:51:27.995239 27286 net.cpp:124] Setting up ip1
I0428 19:51:27.995247 27286 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:27.995250 27286 net.cpp:139] Memory required for data: 2574800
I0428 19:51:27.995257 27286 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:27.995265 27286 net.cpp:86] Creating Layer relu1
I0428 19:51:27.995268 27286 net.cpp:408] relu1 <- ip1
I0428 19:51:27.995272 27286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:27.995427 27286 net.cpp:124] Setting up relu1
I0428 19:51:27.995435 27286 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:27.995438 27286 net.cpp:139] Memory required for data: 2594800
I0428 19:51:27.995441 27286 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:27.995448 27286 net.cpp:86] Creating Layer ip2
I0428 19:51:27.995452 27286 net.cpp:408] ip2 <- ip1
I0428 19:51:27.995457 27286 net.cpp:382] ip2 -> ip2
I0428 19:51:27.995553 27286 net.cpp:124] Setting up ip2
I0428 19:51:27.995559 27286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:27.995563 27286 net.cpp:139] Memory required for data: 2598800
I0428 19:51:27.995568 27286 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:27.995573 27286 net.cpp:86] Creating Layer relu2
I0428 19:51:27.995575 27286 net.cpp:408] relu2 <- ip2
I0428 19:51:27.995579 27286 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:27.995750 27286 net.cpp:124] Setting up relu2
I0428 19:51:27.995759 27286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:27.995761 27286 net.cpp:139] Memory required for data: 2602800
I0428 19:51:27.995764 27286 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:27.995769 27286 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:27.995771 27286 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:27.995776 27286 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:27.995795 27286 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:27.995831 27286 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:27.995837 27286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:27.995841 27286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:27.995844 27286 net.cpp:139] Memory required for data: 2610800
I0428 19:51:27.995847 27286 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:27.995852 27286 net.cpp:86] Creating Layer accuracy
I0428 19:51:27.995856 27286 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:27.995859 27286 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:27.995863 27286 net.cpp:382] accuracy -> accuracy
I0428 19:51:27.995869 27286 net.cpp:124] Setting up accuracy
I0428 19:51:27.995873 27286 net.cpp:131] Top shape: (1)
I0428 19:51:27.995877 27286 net.cpp:139] Memory required for data: 2610804
I0428 19:51:27.995878 27286 layer_factory.hpp:77] Creating layer loss
I0428 19:51:27.995882 27286 net.cpp:86] Creating Layer loss
I0428 19:51:27.995887 27286 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:27.995889 27286 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:27.995893 27286 net.cpp:382] loss -> loss
I0428 19:51:27.995898 27286 layer_factory.hpp:77] Creating layer loss
I0428 19:51:27.996107 27286 net.cpp:124] Setting up loss
I0428 19:51:27.996115 27286 net.cpp:131] Top shape: (1)
I0428 19:51:27.996119 27286 net.cpp:134]     with loss weight 1
I0428 19:51:27.996126 27286 net.cpp:139] Memory required for data: 2610808
I0428 19:51:27.996130 27286 net.cpp:200] loss needs backward computation.
I0428 19:51:27.996134 27286 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:27.996137 27286 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:27.996141 27286 net.cpp:200] relu2 needs backward computation.
I0428 19:51:27.996143 27286 net.cpp:200] ip2 needs backward computation.
I0428 19:51:27.996147 27286 net.cpp:200] relu1 needs backward computation.
I0428 19:51:27.996150 27286 net.cpp:200] ip1 needs backward computation.
I0428 19:51:27.996153 27286 net.cpp:200] pool1 needs backward computation.
I0428 19:51:27.996156 27286 net.cpp:200] conv1 needs backward computation.
I0428 19:51:27.996160 27286 net.cpp:200] pool0 needs backward computation.
I0428 19:51:27.996162 27286 net.cpp:200] conv0 needs backward computation.
I0428 19:51:27.996166 27286 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:27.996170 27286 net.cpp:202] mnist does not need backward computation.
I0428 19:51:27.996173 27286 net.cpp:244] This network produces output accuracy
I0428 19:51:27.996176 27286 net.cpp:244] This network produces output loss
I0428 19:51:27.996186 27286 net.cpp:257] Network initialization done.
I0428 19:51:27.996222 27286 solver.cpp:56] Solver scaffolding done.
I0428 19:51:27.996467 27286 caffe.cpp:248] Starting Optimization
I0428 19:51:27.996474 27286 solver.cpp:273] Solving LeNet
I0428 19:51:27.996476 27286 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:27.997339 27286 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:28.000411 27286 blocking_queue.cpp:49] Waiting for data
I0428 19:51:28.072192 27293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:28.072690 27286 solver.cpp:398]     Test net output #0: accuracy = 0.1031
I0428 19:51:28.072726 27286 solver.cpp:398]     Test net output #1: loss = 2.3538 (* 1 = 2.3538 loss)
I0428 19:51:28.075119 27286 solver.cpp:219] Iteration 0 (-1.10005e-31 iter/s, 0.0786094s/100 iters), loss = 2.31575
I0428 19:51:28.075160 27286 solver.cpp:238]     Train net output #0: loss = 2.31575 (* 1 = 2.31575 loss)
I0428 19:51:28.075172 27286 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:28.162175 27286 solver.cpp:219] Iteration 100 (1149.14 iter/s, 0.0870216s/100 iters), loss = 0.463418
I0428 19:51:28.162209 27286 solver.cpp:238]     Train net output #0: loss = 0.463418 (* 1 = 0.463418 loss)
I0428 19:51:28.162215 27286 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:28.244011 27286 solver.cpp:219] Iteration 200 (1222.6 iter/s, 0.081793s/100 iters), loss = 0.20117
I0428 19:51:28.244048 27286 solver.cpp:238]     Train net output #0: loss = 0.20117 (* 1 = 0.20117 loss)
I0428 19:51:28.244072 27286 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:28.322070 27286 solver.cpp:219] Iteration 300 (1281.83 iter/s, 0.0780134s/100 iters), loss = 0.246793
I0428 19:51:28.322095 27286 solver.cpp:238]     Train net output #0: loss = 0.246793 (* 1 = 0.246793 loss)
I0428 19:51:28.322101 27286 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:28.399960 27286 solver.cpp:219] Iteration 400 (1284.41 iter/s, 0.0778568s/100 iters), loss = 0.101827
I0428 19:51:28.399986 27286 solver.cpp:238]     Train net output #0: loss = 0.101827 (* 1 = 0.101827 loss)
I0428 19:51:28.400007 27286 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:28.476793 27286 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:28.551014 27293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:28.551610 27286 solver.cpp:398]     Test net output #0: accuracy = 0.9564
I0428 19:51:28.551640 27286 solver.cpp:398]     Test net output #1: loss = 0.137571 (* 1 = 0.137571 loss)
I0428 19:51:28.552650 27286 solver.cpp:219] Iteration 500 (655.099 iter/s, 0.152649s/100 iters), loss = 0.168759
I0428 19:51:28.552682 27286 solver.cpp:238]     Train net output #0: loss = 0.168759 (* 1 = 0.168759 loss)
I0428 19:51:28.552692 27286 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:28.638332 27286 solver.cpp:219] Iteration 600 (1167.66 iter/s, 0.0856416s/100 iters), loss = 0.10438
I0428 19:51:28.638360 27286 solver.cpp:238]     Train net output #0: loss = 0.10438 (* 1 = 0.10438 loss)
I0428 19:51:28.638367 27286 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:28.727391 27286 solver.cpp:219] Iteration 700 (1123.36 iter/s, 0.0890184s/100 iters), loss = 0.166111
I0428 19:51:28.727432 27286 solver.cpp:238]     Train net output #0: loss = 0.166111 (* 1 = 0.166111 loss)
I0428 19:51:28.727443 27286 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:28.815389 27286 solver.cpp:219] Iteration 800 (1137.01 iter/s, 0.0879503s/100 iters), loss = 0.205345
I0428 19:51:28.815421 27286 solver.cpp:238]     Train net output #0: loss = 0.205346 (* 1 = 0.205346 loss)
I0428 19:51:28.815433 27286 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:28.904168 27286 solver.cpp:219] Iteration 900 (1126.89 iter/s, 0.0887398s/100 iters), loss = 0.116659
I0428 19:51:28.904194 27286 solver.cpp:238]     Train net output #0: loss = 0.116659 (* 1 = 0.116659 loss)
I0428 19:51:28.904201 27286 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:28.932499 27292 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:28.984899 27286 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:28.985847 27286 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:28.986385 27286 solver.cpp:311] Iteration 1000, loss = 0.119705
I0428 19:51:28.986400 27286 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:29.039371 27293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:29.039845 27286 solver.cpp:398]     Test net output #0: accuracy = 0.9736
I0428 19:51:29.039863 27286 solver.cpp:398]     Test net output #1: loss = 0.0803996 (* 1 = 0.0803996 loss)
I0428 19:51:29.039867 27286 solver.cpp:316] Optimization Done.
I0428 19:51:29.039870 27286 caffe.cpp:259] Optimization Done.
