I0428 20:32:27.588557  4103 caffe.cpp:218] Using GPUs 0
I0428 20:32:27.629732  4103 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:28.154505  4103 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1572.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:28.154645  4103 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1572.prototxt
I0428 20:32:28.155053  4103 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:28.155071  4103 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:28.155174  4103 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:28.155256  4103 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:28.155357  4103 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:28.155382  4103 net.cpp:86] Creating Layer mnist
I0428 20:32:28.155391  4103 net.cpp:382] mnist -> data
I0428 20:32:28.155413  4103 net.cpp:382] mnist -> label
I0428 20:32:28.156509  4103 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:28.158978  4103 net.cpp:124] Setting up mnist
I0428 20:32:28.158996  4103 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:28.159004  4103 net.cpp:131] Top shape: 64 (64)
I0428 20:32:28.159008  4103 net.cpp:139] Memory required for data: 200960
I0428 20:32:28.159014  4103 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:28.159031  4103 net.cpp:86] Creating Layer conv0
I0428 20:32:28.159052  4103 net.cpp:408] conv0 <- data
I0428 20:32:28.159066  4103 net.cpp:382] conv0 -> conv0
I0428 20:32:28.452729  4103 net.cpp:124] Setting up conv0
I0428 20:32:28.452761  4103 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:28.452766  4103 net.cpp:139] Memory required for data: 14946560
I0428 20:32:28.452785  4103 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:28.452801  4103 net.cpp:86] Creating Layer pool0
I0428 20:32:28.452805  4103 net.cpp:408] pool0 <- conv0
I0428 20:32:28.452819  4103 net.cpp:382] pool0 -> pool0
I0428 20:32:28.452878  4103 net.cpp:124] Setting up pool0
I0428 20:32:28.452888  4103 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:28.452890  4103 net.cpp:139] Memory required for data: 18632960
I0428 20:32:28.452894  4103 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:28.452908  4103 net.cpp:86] Creating Layer conv1
I0428 20:32:28.452913  4103 net.cpp:408] conv1 <- pool0
I0428 20:32:28.452919  4103 net.cpp:382] conv1 -> conv1
I0428 20:32:28.455478  4103 net.cpp:124] Setting up conv1
I0428 20:32:28.455497  4103 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:28.455502  4103 net.cpp:139] Memory required for data: 19042560
I0428 20:32:28.455512  4103 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:28.455520  4103 net.cpp:86] Creating Layer pool1
I0428 20:32:28.455525  4103 net.cpp:408] pool1 <- conv1
I0428 20:32:28.455531  4103 net.cpp:382] pool1 -> pool1
I0428 20:32:28.455575  4103 net.cpp:124] Setting up pool1
I0428 20:32:28.455582  4103 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:28.455586  4103 net.cpp:139] Memory required for data: 19144960
I0428 20:32:28.455590  4103 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:28.455597  4103 net.cpp:86] Creating Layer ip1
I0428 20:32:28.455601  4103 net.cpp:408] ip1 <- pool1
I0428 20:32:28.455607  4103 net.cpp:382] ip1 -> ip1
I0428 20:32:28.455749  4103 net.cpp:124] Setting up ip1
I0428 20:32:28.455757  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.455760  4103 net.cpp:139] Memory required for data: 19147520
I0428 20:32:28.455770  4103 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:28.455776  4103 net.cpp:86] Creating Layer relu1
I0428 20:32:28.455780  4103 net.cpp:408] relu1 <- ip1
I0428 20:32:28.455785  4103 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:28.455978  4103 net.cpp:124] Setting up relu1
I0428 20:32:28.455989  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.455993  4103 net.cpp:139] Memory required for data: 19150080
I0428 20:32:28.455997  4103 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:28.456006  4103 net.cpp:86] Creating Layer ip2
I0428 20:32:28.456008  4103 net.cpp:408] ip2 <- ip1
I0428 20:32:28.456014  4103 net.cpp:382] ip2 -> ip2
I0428 20:32:28.456120  4103 net.cpp:124] Setting up ip2
I0428 20:32:28.456130  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.456133  4103 net.cpp:139] Memory required for data: 19152640
I0428 20:32:28.456140  4103 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:28.456146  4103 net.cpp:86] Creating Layer relu2
I0428 20:32:28.456151  4103 net.cpp:408] relu2 <- ip2
I0428 20:32:28.456156  4103 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:28.457005  4103 net.cpp:124] Setting up relu2
I0428 20:32:28.457020  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.457025  4103 net.cpp:139] Memory required for data: 19155200
I0428 20:32:28.457029  4103 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:28.457037  4103 net.cpp:86] Creating Layer ip3
I0428 20:32:28.457041  4103 net.cpp:408] ip3 <- ip2
I0428 20:32:28.457047  4103 net.cpp:382] ip3 -> ip3
I0428 20:32:28.457161  4103 net.cpp:124] Setting up ip3
I0428 20:32:28.457171  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.457175  4103 net.cpp:139] Memory required for data: 19157760
I0428 20:32:28.457185  4103 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:28.457191  4103 net.cpp:86] Creating Layer relu3
I0428 20:32:28.457195  4103 net.cpp:408] relu3 <- ip3
I0428 20:32:28.457201  4103 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:28.457398  4103 net.cpp:124] Setting up relu3
I0428 20:32:28.457408  4103 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:28.457412  4103 net.cpp:139] Memory required for data: 19160320
I0428 20:32:28.457417  4103 layer_factory.hpp:77] Creating layer loss
I0428 20:32:28.457423  4103 net.cpp:86] Creating Layer loss
I0428 20:32:28.457427  4103 net.cpp:408] loss <- ip3
I0428 20:32:28.457432  4103 net.cpp:408] loss <- label
I0428 20:32:28.457437  4103 net.cpp:382] loss -> loss
I0428 20:32:28.457458  4103 layer_factory.hpp:77] Creating layer loss
I0428 20:32:28.457722  4103 net.cpp:124] Setting up loss
I0428 20:32:28.457733  4103 net.cpp:131] Top shape: (1)
I0428 20:32:28.457737  4103 net.cpp:134]     with loss weight 1
I0428 20:32:28.457753  4103 net.cpp:139] Memory required for data: 19160324
I0428 20:32:28.457757  4103 net.cpp:200] loss needs backward computation.
I0428 20:32:28.457762  4103 net.cpp:200] relu3 needs backward computation.
I0428 20:32:28.457765  4103 net.cpp:200] ip3 needs backward computation.
I0428 20:32:28.457769  4103 net.cpp:200] relu2 needs backward computation.
I0428 20:32:28.457772  4103 net.cpp:200] ip2 needs backward computation.
I0428 20:32:28.457777  4103 net.cpp:200] relu1 needs backward computation.
I0428 20:32:28.457779  4103 net.cpp:200] ip1 needs backward computation.
I0428 20:32:28.457783  4103 net.cpp:200] pool1 needs backward computation.
I0428 20:32:28.457787  4103 net.cpp:200] conv1 needs backward computation.
I0428 20:32:28.457792  4103 net.cpp:200] pool0 needs backward computation.
I0428 20:32:28.457794  4103 net.cpp:200] conv0 needs backward computation.
I0428 20:32:28.457798  4103 net.cpp:202] mnist does not need backward computation.
I0428 20:32:28.457803  4103 net.cpp:244] This network produces output loss
I0428 20:32:28.457813  4103 net.cpp:257] Network initialization done.
I0428 20:32:28.458194  4103 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1572.prototxt
I0428 20:32:28.458225  4103 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:28.458333  4103 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:28.458425  4103 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:28.458477  4103 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:28.458490  4103 net.cpp:86] Creating Layer mnist
I0428 20:32:28.458497  4103 net.cpp:382] mnist -> data
I0428 20:32:28.458505  4103 net.cpp:382] mnist -> label
I0428 20:32:28.458606  4103 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:28.461019  4103 net.cpp:124] Setting up mnist
I0428 20:32:28.461035  4103 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:28.461041  4103 net.cpp:131] Top shape: 100 (100)
I0428 20:32:28.461045  4103 net.cpp:139] Memory required for data: 314000
I0428 20:32:28.461050  4103 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:28.461057  4103 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:28.461063  4103 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:28.461069  4103 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:28.461077  4103 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:28.461172  4103 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:28.461182  4103 net.cpp:131] Top shape: 100 (100)
I0428 20:32:28.461186  4103 net.cpp:131] Top shape: 100 (100)
I0428 20:32:28.461190  4103 net.cpp:139] Memory required for data: 314800
I0428 20:32:28.461194  4103 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:28.461203  4103 net.cpp:86] Creating Layer conv0
I0428 20:32:28.461207  4103 net.cpp:408] conv0 <- data
I0428 20:32:28.461213  4103 net.cpp:382] conv0 -> conv0
I0428 20:32:28.462996  4103 net.cpp:124] Setting up conv0
I0428 20:32:28.463013  4103 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:28.463018  4103 net.cpp:139] Memory required for data: 23354800
I0428 20:32:28.463029  4103 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:28.463037  4103 net.cpp:86] Creating Layer pool0
I0428 20:32:28.463042  4103 net.cpp:408] pool0 <- conv0
I0428 20:32:28.463047  4103 net.cpp:382] pool0 -> pool0
I0428 20:32:28.463088  4103 net.cpp:124] Setting up pool0
I0428 20:32:28.463098  4103 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:28.463101  4103 net.cpp:139] Memory required for data: 29114800
I0428 20:32:28.463104  4103 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:28.463114  4103 net.cpp:86] Creating Layer conv1
I0428 20:32:28.463119  4103 net.cpp:408] conv1 <- pool0
I0428 20:32:28.463124  4103 net.cpp:382] conv1 -> conv1
I0428 20:32:28.465224  4103 net.cpp:124] Setting up conv1
I0428 20:32:28.465243  4103 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:28.465247  4103 net.cpp:139] Memory required for data: 29754800
I0428 20:32:28.465260  4103 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:28.465267  4103 net.cpp:86] Creating Layer pool1
I0428 20:32:28.465273  4103 net.cpp:408] pool1 <- conv1
I0428 20:32:28.465279  4103 net.cpp:382] pool1 -> pool1
I0428 20:32:28.465322  4103 net.cpp:124] Setting up pool1
I0428 20:32:28.465328  4103 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:28.465332  4103 net.cpp:139] Memory required for data: 29914800
I0428 20:32:28.465337  4103 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:28.465343  4103 net.cpp:86] Creating Layer ip1
I0428 20:32:28.465347  4103 net.cpp:408] ip1 <- pool1
I0428 20:32:28.465353  4103 net.cpp:382] ip1 -> ip1
I0428 20:32:28.465492  4103 net.cpp:124] Setting up ip1
I0428 20:32:28.465515  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.465519  4103 net.cpp:139] Memory required for data: 29918800
I0428 20:32:28.465528  4103 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:28.465534  4103 net.cpp:86] Creating Layer relu1
I0428 20:32:28.465539  4103 net.cpp:408] relu1 <- ip1
I0428 20:32:28.465544  4103 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:28.465731  4103 net.cpp:124] Setting up relu1
I0428 20:32:28.465741  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.465745  4103 net.cpp:139] Memory required for data: 29922800
I0428 20:32:28.465749  4103 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:28.465759  4103 net.cpp:86] Creating Layer ip2
I0428 20:32:28.465764  4103 net.cpp:408] ip2 <- ip1
I0428 20:32:28.465775  4103 net.cpp:382] ip2 -> ip2
I0428 20:32:28.465894  4103 net.cpp:124] Setting up ip2
I0428 20:32:28.465903  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.465906  4103 net.cpp:139] Memory required for data: 29926800
I0428 20:32:28.465914  4103 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:28.465919  4103 net.cpp:86] Creating Layer relu2
I0428 20:32:28.465922  4103 net.cpp:408] relu2 <- ip2
I0428 20:32:28.465926  4103 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:28.466162  4103 net.cpp:124] Setting up relu2
I0428 20:32:28.466173  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.466177  4103 net.cpp:139] Memory required for data: 29930800
I0428 20:32:28.466181  4103 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:28.466189  4103 net.cpp:86] Creating Layer ip3
I0428 20:32:28.466192  4103 net.cpp:408] ip3 <- ip2
I0428 20:32:28.466198  4103 net.cpp:382] ip3 -> ip3
I0428 20:32:28.466323  4103 net.cpp:124] Setting up ip3
I0428 20:32:28.466333  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.466336  4103 net.cpp:139] Memory required for data: 29934800
I0428 20:32:28.466346  4103 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:28.466351  4103 net.cpp:86] Creating Layer relu3
I0428 20:32:28.466354  4103 net.cpp:408] relu3 <- ip3
I0428 20:32:28.466362  4103 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:28.467330  4103 net.cpp:124] Setting up relu3
I0428 20:32:28.467345  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.467350  4103 net.cpp:139] Memory required for data: 29938800
I0428 20:32:28.467353  4103 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:32:28.467362  4103 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:32:28.467366  4103 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:32:28.467373  4103 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:32:28.467381  4103 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:32:28.467428  4103 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:32:28.467435  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.467440  4103 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:28.467444  4103 net.cpp:139] Memory required for data: 29946800
I0428 20:32:28.467448  4103 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:28.467454  4103 net.cpp:86] Creating Layer accuracy
I0428 20:32:28.467458  4103 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:32:28.467463  4103 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:28.467469  4103 net.cpp:382] accuracy -> accuracy
I0428 20:32:28.467483  4103 net.cpp:124] Setting up accuracy
I0428 20:32:28.467489  4103 net.cpp:131] Top shape: (1)
I0428 20:32:28.467492  4103 net.cpp:139] Memory required for data: 29946804
I0428 20:32:28.467495  4103 layer_factory.hpp:77] Creating layer loss
I0428 20:32:28.467501  4103 net.cpp:86] Creating Layer loss
I0428 20:32:28.467504  4103 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:32:28.467509  4103 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:28.467515  4103 net.cpp:382] loss -> loss
I0428 20:32:28.467522  4103 layer_factory.hpp:77] Creating layer loss
I0428 20:32:28.467813  4103 net.cpp:124] Setting up loss
I0428 20:32:28.467824  4103 net.cpp:131] Top shape: (1)
I0428 20:32:28.467828  4103 net.cpp:134]     with loss weight 1
I0428 20:32:28.467846  4103 net.cpp:139] Memory required for data: 29946808
I0428 20:32:28.467851  4103 net.cpp:200] loss needs backward computation.
I0428 20:32:28.467857  4103 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:28.467861  4103 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:32:28.467865  4103 net.cpp:200] relu3 needs backward computation.
I0428 20:32:28.467869  4103 net.cpp:200] ip3 needs backward computation.
I0428 20:32:28.467872  4103 net.cpp:200] relu2 needs backward computation.
I0428 20:32:28.467875  4103 net.cpp:200] ip2 needs backward computation.
I0428 20:32:28.467878  4103 net.cpp:200] relu1 needs backward computation.
I0428 20:32:28.467881  4103 net.cpp:200] ip1 needs backward computation.
I0428 20:32:28.467885  4103 net.cpp:200] pool1 needs backward computation.
I0428 20:32:28.467888  4103 net.cpp:200] conv1 needs backward computation.
I0428 20:32:28.467891  4103 net.cpp:200] pool0 needs backward computation.
I0428 20:32:28.467895  4103 net.cpp:200] conv0 needs backward computation.
I0428 20:32:28.467900  4103 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:28.467905  4103 net.cpp:202] mnist does not need backward computation.
I0428 20:32:28.467908  4103 net.cpp:244] This network produces output accuracy
I0428 20:32:28.467912  4103 net.cpp:244] This network produces output loss
I0428 20:32:28.467926  4103 net.cpp:257] Network initialization done.
I0428 20:32:28.467975  4103 solver.cpp:56] Solver scaffolding done.
I0428 20:32:28.468420  4103 caffe.cpp:248] Starting Optimization
I0428 20:32:28.468427  4103 solver.cpp:273] Solving LeNet
I0428 20:32:28.468430  4103 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:28.468638  4103 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:28.569350  4110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:28.572594  4103 solver.cpp:398]     Test net output #0: accuracy = 0.0845
I0428 20:32:28.572614  4103 solver.cpp:398]     Test net output #1: loss = 2.30682 (* 1 = 2.30682 loss)
I0428 20:32:28.576938  4103 solver.cpp:219] Iteration 0 (0 iter/s, 0.108475s/100 iters), loss = 2.30267
I0428 20:32:28.576963  4103 solver.cpp:238]     Train net output #0: loss = 2.30267 (* 1 = 2.30267 loss)
I0428 20:32:28.576974  4103 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:28.787240  4103 solver.cpp:219] Iteration 100 (475.623 iter/s, 0.210251s/100 iters), loss = 1.79295
I0428 20:32:28.787286  4103 solver.cpp:238]     Train net output #0: loss = 1.79295 (* 1 = 1.79295 loss)
I0428 20:32:28.787297  4103 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:29.005153  4103 solver.cpp:219] Iteration 200 (459.031 iter/s, 0.21785s/100 iters), loss = 1.71392
I0428 20:32:29.005198  4103 solver.cpp:238]     Train net output #0: loss = 1.71392 (* 1 = 1.71392 loss)
I0428 20:32:29.005210  4103 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:29.220819  4103 solver.cpp:219] Iteration 300 (463.824 iter/s, 0.215599s/100 iters), loss = 1.92326
I0428 20:32:29.220859  4103 solver.cpp:238]     Train net output #0: loss = 1.92326 (* 1 = 1.92326 loss)
I0428 20:32:29.220868  4103 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:29.440424  4103 solver.cpp:219] Iteration 400 (455.48 iter/s, 0.219549s/100 iters), loss = 1.61446
I0428 20:32:29.440464  4103 solver.cpp:238]     Train net output #0: loss = 1.61446 (* 1 = 1.61446 loss)
I0428 20:32:29.440474  4103 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:29.653462  4103 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:29.752979  4110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:29.756477  4103 solver.cpp:398]     Test net output #0: accuracy = 0.3767
I0428 20:32:29.756513  4103 solver.cpp:398]     Test net output #1: loss = 1.69071 (* 1 = 1.69071 loss)
I0428 20:32:29.758500  4103 solver.cpp:219] Iteration 500 (314.447 iter/s, 0.318019s/100 iters), loss = 1.49491
I0428 20:32:29.758536  4103 solver.cpp:238]     Train net output #0: loss = 1.49491 (* 1 = 1.49491 loss)
I0428 20:32:29.758559  4103 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:29.971961  4103 solver.cpp:219] Iteration 600 (468.566 iter/s, 0.213417s/100 iters), loss = 1.76858
I0428 20:32:29.971993  4103 solver.cpp:238]     Train net output #0: loss = 1.76858 (* 1 = 1.76858 loss)
I0428 20:32:29.972002  4103 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:30.184957  4103 solver.cpp:219] Iteration 700 (469.596 iter/s, 0.212949s/100 iters), loss = 1.57546
I0428 20:32:30.184999  4103 solver.cpp:238]     Train net output #0: loss = 1.57546 (* 1 = 1.57546 loss)
I0428 20:32:30.185006  4103 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:30.397063  4103 solver.cpp:219] Iteration 800 (471.592 iter/s, 0.212048s/100 iters), loss = 1.84726
I0428 20:32:30.397107  4103 solver.cpp:238]     Train net output #0: loss = 1.84726 (* 1 = 1.84726 loss)
I0428 20:32:30.397115  4103 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:30.608532  4103 solver.cpp:219] Iteration 900 (473.019 iter/s, 0.211408s/100 iters), loss = 2.10054
I0428 20:32:30.608580  4103 solver.cpp:238]     Train net output #0: loss = 2.10054 (* 1 = 2.10054 loss)
I0428 20:32:30.608588  4103 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:30.679832  4109 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:30.820057  4103 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:30.822501  4103 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:30.823952  4103 solver.cpp:311] Iteration 1000, loss = 1.73716
I0428 20:32:30.823971  4103 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:30.921254  4110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:30.924594  4103 solver.cpp:398]     Test net output #0: accuracy = 0.3773
I0428 20:32:30.924628  4103 solver.cpp:398]     Test net output #1: loss = 1.68474 (* 1 = 1.68474 loss)
I0428 20:32:30.924633  4103 solver.cpp:316] Optimization Done.
I0428 20:32:30.924634  4103 caffe.cpp:259] Optimization Done.
