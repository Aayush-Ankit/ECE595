I0428 19:30:59.067329 22461 caffe.cpp:218] Using GPUs 0
I0428 19:30:59.105012 22461 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:59.615402 22461 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test108.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:59.615545 22461 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test108.prototxt
I0428 19:30:59.615916 22461 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:59.615934 22461 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:59.616022 22461 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:59.616097 22461 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:59.616195 22461 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:59.616219 22461 net.cpp:86] Creating Layer mnist
I0428 19:30:59.616228 22461 net.cpp:382] mnist -> data
I0428 19:30:59.616250 22461 net.cpp:382] mnist -> label
I0428 19:30:59.617358 22461 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:59.619846 22461 net.cpp:124] Setting up mnist
I0428 19:30:59.619865 22461 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:59.619871 22461 net.cpp:131] Top shape: 64 (64)
I0428 19:30:59.619875 22461 net.cpp:139] Memory required for data: 200960
I0428 19:30:59.619882 22461 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:59.619900 22461 net.cpp:86] Creating Layer conv0
I0428 19:30:59.619906 22461 net.cpp:408] conv0 <- data
I0428 19:30:59.619920 22461 net.cpp:382] conv0 -> conv0
I0428 19:30:59.898294 22461 net.cpp:124] Setting up conv0
I0428 19:30:59.898321 22461 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:59.898325 22461 net.cpp:139] Memory required for data: 938240
I0428 19:30:59.898339 22461 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:59.898351 22461 net.cpp:86] Creating Layer pool0
I0428 19:30:59.898372 22461 net.cpp:408] pool0 <- conv0
I0428 19:30:59.898378 22461 net.cpp:382] pool0 -> pool0
I0428 19:30:59.898423 22461 net.cpp:124] Setting up pool0
I0428 19:30:59.898432 22461 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:59.898434 22461 net.cpp:139] Memory required for data: 1122560
I0428 19:30:59.898437 22461 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:59.898444 22461 net.cpp:86] Creating Layer ip1
I0428 19:30:59.898447 22461 net.cpp:408] ip1 <- pool0
I0428 19:30:59.898453 22461 net.cpp:382] ip1 -> ip1
I0428 19:30:59.898736 22461 net.cpp:124] Setting up ip1
I0428 19:30:59.898744 22461 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:59.898747 22461 net.cpp:139] Memory required for data: 1135360
I0428 19:30:59.898753 22461 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:59.898759 22461 net.cpp:86] Creating Layer relu1
I0428 19:30:59.898762 22461 net.cpp:408] relu1 <- ip1
I0428 19:30:59.898766 22461 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:59.898936 22461 net.cpp:124] Setting up relu1
I0428 19:30:59.898947 22461 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:59.898949 22461 net.cpp:139] Memory required for data: 1148160
I0428 19:30:59.898952 22461 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:59.898958 22461 net.cpp:86] Creating Layer ip2
I0428 19:30:59.898962 22461 net.cpp:408] ip2 <- ip1
I0428 19:30:59.898967 22461 net.cpp:382] ip2 -> ip2
I0428 19:30:59.899056 22461 net.cpp:124] Setting up ip2
I0428 19:30:59.899065 22461 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:59.899067 22461 net.cpp:139] Memory required for data: 1150720
I0428 19:30:59.899075 22461 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:59.899080 22461 net.cpp:86] Creating Layer relu2
I0428 19:30:59.899082 22461 net.cpp:408] relu2 <- ip2
I0428 19:30:59.899086 22461 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:59.899775 22461 net.cpp:124] Setting up relu2
I0428 19:30:59.899787 22461 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:59.899791 22461 net.cpp:139] Memory required for data: 1153280
I0428 19:30:59.899794 22461 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:59.899801 22461 net.cpp:86] Creating Layer ip3
I0428 19:30:59.899803 22461 net.cpp:408] ip3 <- ip2
I0428 19:30:59.899808 22461 net.cpp:382] ip3 -> ip3
I0428 19:30:59.899926 22461 net.cpp:124] Setting up ip3
I0428 19:30:59.899935 22461 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:59.899937 22461 net.cpp:139] Memory required for data: 1155840
I0428 19:30:59.899958 22461 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:59.899967 22461 net.cpp:86] Creating Layer relu3
I0428 19:30:59.899987 22461 net.cpp:408] relu3 <- ip3
I0428 19:30:59.899992 22461 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:59.900146 22461 net.cpp:124] Setting up relu3
I0428 19:30:59.900156 22461 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:59.900158 22461 net.cpp:139] Memory required for data: 1158400
I0428 19:30:59.900162 22461 layer_factory.hpp:77] Creating layer loss
I0428 19:30:59.900168 22461 net.cpp:86] Creating Layer loss
I0428 19:30:59.900171 22461 net.cpp:408] loss <- ip3
I0428 19:30:59.900177 22461 net.cpp:408] loss <- label
I0428 19:30:59.900182 22461 net.cpp:382] loss -> loss
I0428 19:30:59.900195 22461 layer_factory.hpp:77] Creating layer loss
I0428 19:30:59.900452 22461 net.cpp:124] Setting up loss
I0428 19:30:59.900461 22461 net.cpp:131] Top shape: (1)
I0428 19:30:59.900465 22461 net.cpp:134]     with loss weight 1
I0428 19:30:59.900478 22461 net.cpp:139] Memory required for data: 1158404
I0428 19:30:59.900481 22461 net.cpp:200] loss needs backward computation.
I0428 19:30:59.900485 22461 net.cpp:200] relu3 needs backward computation.
I0428 19:30:59.900487 22461 net.cpp:200] ip3 needs backward computation.
I0428 19:30:59.900490 22461 net.cpp:200] relu2 needs backward computation.
I0428 19:30:59.900492 22461 net.cpp:200] ip2 needs backward computation.
I0428 19:30:59.900496 22461 net.cpp:200] relu1 needs backward computation.
I0428 19:30:59.900497 22461 net.cpp:200] ip1 needs backward computation.
I0428 19:30:59.900511 22461 net.cpp:200] pool0 needs backward computation.
I0428 19:30:59.900513 22461 net.cpp:200] conv0 needs backward computation.
I0428 19:30:59.900516 22461 net.cpp:202] mnist does not need backward computation.
I0428 19:30:59.900519 22461 net.cpp:244] This network produces output loss
I0428 19:30:59.900527 22461 net.cpp:257] Network initialization done.
I0428 19:30:59.900854 22461 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test108.prototxt
I0428 19:30:59.900910 22461 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:59.900993 22461 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:59.901059 22461 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:59.901116 22461 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:59.901131 22461 net.cpp:86] Creating Layer mnist
I0428 19:30:59.901136 22461 net.cpp:382] mnist -> data
I0428 19:30:59.901157 22461 net.cpp:382] mnist -> label
I0428 19:30:59.901237 22461 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:59.903223 22461 net.cpp:124] Setting up mnist
I0428 19:30:59.903252 22461 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:59.903259 22461 net.cpp:131] Top shape: 100 (100)
I0428 19:30:59.903261 22461 net.cpp:139] Memory required for data: 314000
I0428 19:30:59.903265 22461 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:59.903272 22461 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:59.903276 22461 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:59.903281 22461 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:59.903288 22461 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:59.903383 22461 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:59.903391 22461 net.cpp:131] Top shape: 100 (100)
I0428 19:30:59.903396 22461 net.cpp:131] Top shape: 100 (100)
I0428 19:30:59.903398 22461 net.cpp:139] Memory required for data: 314800
I0428 19:30:59.903412 22461 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:59.903421 22461 net.cpp:86] Creating Layer conv0
I0428 19:30:59.903439 22461 net.cpp:408] conv0 <- data
I0428 19:30:59.903445 22461 net.cpp:382] conv0 -> conv0
I0428 19:30:59.904906 22461 net.cpp:124] Setting up conv0
I0428 19:30:59.904920 22461 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:59.904924 22461 net.cpp:139] Memory required for data: 1466800
I0428 19:30:59.904932 22461 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:59.904953 22461 net.cpp:86] Creating Layer pool0
I0428 19:30:59.904958 22461 net.cpp:408] pool0 <- conv0
I0428 19:30:59.904963 22461 net.cpp:382] pool0 -> pool0
I0428 19:30:59.905030 22461 net.cpp:124] Setting up pool0
I0428 19:30:59.905038 22461 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:59.905042 22461 net.cpp:139] Memory required for data: 1754800
I0428 19:30:59.905045 22461 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:59.905052 22461 net.cpp:86] Creating Layer ip1
I0428 19:30:59.905055 22461 net.cpp:408] ip1 <- pool0
I0428 19:30:59.905061 22461 net.cpp:382] ip1 -> ip1
I0428 19:30:59.905457 22461 net.cpp:124] Setting up ip1
I0428 19:30:59.905467 22461 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:59.905478 22461 net.cpp:139] Memory required for data: 1774800
I0428 19:30:59.905484 22461 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:59.905489 22461 net.cpp:86] Creating Layer relu1
I0428 19:30:59.905493 22461 net.cpp:408] relu1 <- ip1
I0428 19:30:59.905496 22461 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:59.905658 22461 net.cpp:124] Setting up relu1
I0428 19:30:59.905666 22461 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:59.905669 22461 net.cpp:139] Memory required for data: 1794800
I0428 19:30:59.905673 22461 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:59.905684 22461 net.cpp:86] Creating Layer ip2
I0428 19:30:59.905688 22461 net.cpp:408] ip2 <- ip1
I0428 19:30:59.905692 22461 net.cpp:382] ip2 -> ip2
I0428 19:30:59.905789 22461 net.cpp:124] Setting up ip2
I0428 19:30:59.905797 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.905800 22461 net.cpp:139] Memory required for data: 1798800
I0428 19:30:59.905807 22461 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:59.905812 22461 net.cpp:86] Creating Layer relu2
I0428 19:30:59.905813 22461 net.cpp:408] relu2 <- ip2
I0428 19:30:59.905817 22461 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:59.906757 22461 net.cpp:124] Setting up relu2
I0428 19:30:59.906785 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.906788 22461 net.cpp:139] Memory required for data: 1802800
I0428 19:30:59.906792 22461 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:59.906800 22461 net.cpp:86] Creating Layer ip3
I0428 19:30:59.906803 22461 net.cpp:408] ip3 <- ip2
I0428 19:30:59.906810 22461 net.cpp:382] ip3 -> ip3
I0428 19:30:59.906919 22461 net.cpp:124] Setting up ip3
I0428 19:30:59.906926 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.906930 22461 net.cpp:139] Memory required for data: 1806800
I0428 19:30:59.906935 22461 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:59.906940 22461 net.cpp:86] Creating Layer relu3
I0428 19:30:59.906944 22461 net.cpp:408] relu3 <- ip3
I0428 19:30:59.906947 22461 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:59.907160 22461 net.cpp:124] Setting up relu3
I0428 19:30:59.907169 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.907173 22461 net.cpp:139] Memory required for data: 1810800
I0428 19:30:59.907177 22461 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:59.907182 22461 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:59.907186 22461 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:59.907191 22461 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:59.907210 22461 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:59.907261 22461 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:59.907268 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.907286 22461 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:59.907300 22461 net.cpp:139] Memory required for data: 1818800
I0428 19:30:59.907304 22461 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:59.907310 22461 net.cpp:86] Creating Layer accuracy
I0428 19:30:59.907312 22461 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:59.907317 22461 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:59.907322 22461 net.cpp:382] accuracy -> accuracy
I0428 19:30:59.907330 22461 net.cpp:124] Setting up accuracy
I0428 19:30:59.907340 22461 net.cpp:131] Top shape: (1)
I0428 19:30:59.907342 22461 net.cpp:139] Memory required for data: 1818804
I0428 19:30:59.907361 22461 layer_factory.hpp:77] Creating layer loss
I0428 19:30:59.907367 22461 net.cpp:86] Creating Layer loss
I0428 19:30:59.907371 22461 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:59.907376 22461 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:59.907394 22461 net.cpp:382] loss -> loss
I0428 19:30:59.907402 22461 layer_factory.hpp:77] Creating layer loss
I0428 19:30:59.907685 22461 net.cpp:124] Setting up loss
I0428 19:30:59.907712 22461 net.cpp:131] Top shape: (1)
I0428 19:30:59.907716 22461 net.cpp:134]     with loss weight 1
I0428 19:30:59.907721 22461 net.cpp:139] Memory required for data: 1818808
I0428 19:30:59.907724 22461 net.cpp:200] loss needs backward computation.
I0428 19:30:59.907728 22461 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:59.907732 22461 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:59.907734 22461 net.cpp:200] relu3 needs backward computation.
I0428 19:30:59.907737 22461 net.cpp:200] ip3 needs backward computation.
I0428 19:30:59.907740 22461 net.cpp:200] relu2 needs backward computation.
I0428 19:30:59.907742 22461 net.cpp:200] ip2 needs backward computation.
I0428 19:30:59.907745 22461 net.cpp:200] relu1 needs backward computation.
I0428 19:30:59.907748 22461 net.cpp:200] ip1 needs backward computation.
I0428 19:30:59.907752 22461 net.cpp:200] pool0 needs backward computation.
I0428 19:30:59.907754 22461 net.cpp:200] conv0 needs backward computation.
I0428 19:30:59.907760 22461 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:59.907764 22461 net.cpp:202] mnist does not need backward computation.
I0428 19:30:59.907766 22461 net.cpp:244] This network produces output accuracy
I0428 19:30:59.907770 22461 net.cpp:244] This network produces output loss
I0428 19:30:59.907780 22461 net.cpp:257] Network initialization done.
I0428 19:30:59.907815 22461 solver.cpp:56] Solver scaffolding done.
I0428 19:30:59.908110 22461 caffe.cpp:248] Starting Optimization
I0428 19:30:59.908118 22461 solver.cpp:273] Solving LeNet
I0428 19:30:59.908120 22461 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:59.909077 22461 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:59.911947 22461 blocking_queue.cpp:49] Waiting for data
I0428 19:30:59.984156 22468 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:59.984613 22461 solver.cpp:398]     Test net output #0: accuracy = 0.0576
I0428 19:30:59.984647 22461 solver.cpp:398]     Test net output #1: loss = 2.31647 (* 1 = 2.31647 loss)
I0428 19:30:59.986991 22461 solver.cpp:219] Iteration 0 (-1.03509e-30 iter/s, 0.0788193s/100 iters), loss = 2.32554
I0428 19:30:59.987036 22461 solver.cpp:238]     Train net output #0: loss = 2.32554 (* 1 = 2.32554 loss)
I0428 19:30:59.987062 22461 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:00.056982 22461 solver.cpp:219] Iteration 100 (1429.88 iter/s, 0.0699359s/100 iters), loss = 1.30995
I0428 19:31:00.057023 22461 solver.cpp:238]     Train net output #0: loss = 1.30995 (* 1 = 1.30995 loss)
I0428 19:31:00.057029 22461 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:00.119750 22461 solver.cpp:219] Iteration 200 (1594.62 iter/s, 0.0627108s/100 iters), loss = 1.14567
I0428 19:31:00.119786 22461 solver.cpp:238]     Train net output #0: loss = 1.14567 (* 1 = 1.14567 loss)
I0428 19:31:00.119796 22461 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:00.184203 22461 solver.cpp:219] Iteration 300 (1552.54 iter/s, 0.0644106s/100 iters), loss = 0.67862
I0428 19:31:00.184233 22461 solver.cpp:238]     Train net output #0: loss = 0.67862 (* 1 = 0.67862 loss)
I0428 19:31:00.184242 22461 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:00.250267 22461 solver.cpp:219] Iteration 400 (1514.73 iter/s, 0.0660183s/100 iters), loss = 0.590393
I0428 19:31:00.250310 22461 solver.cpp:238]     Train net output #0: loss = 0.590393 (* 1 = 0.590393 loss)
I0428 19:31:00.250319 22461 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:00.314014 22461 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:00.366668 22468 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:00.367128 22461 solver.cpp:398]     Test net output #0: accuracy = 0.7237
I0428 19:31:00.367153 22461 solver.cpp:398]     Test net output #1: loss = 0.732406 (* 1 = 0.732406 loss)
I0428 19:31:00.367838 22461 solver.cpp:219] Iteration 500 (850.924 iter/s, 0.117519s/100 iters), loss = 0.915325
I0428 19:31:00.367883 22461 solver.cpp:238]     Train net output #0: loss = 0.915325 (* 1 = 0.915325 loss)
I0428 19:31:00.367892 22461 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:00.434679 22461 solver.cpp:219] Iteration 600 (1497.31 iter/s, 0.0667863s/100 iters), loss = 0.705159
I0428 19:31:00.434725 22461 solver.cpp:238]     Train net output #0: loss = 0.705159 (* 1 = 0.705159 loss)
I0428 19:31:00.434736 22461 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:00.499120 22461 solver.cpp:219] Iteration 700 (1553.07 iter/s, 0.0643885s/100 iters), loss = 0.545884
I0428 19:31:00.499150 22461 solver.cpp:238]     Train net output #0: loss = 0.545884 (* 1 = 0.545884 loss)
I0428 19:31:00.499157 22461 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:00.563453 22461 solver.cpp:219] Iteration 800 (1555.33 iter/s, 0.0642949s/100 iters), loss = 0.478622
I0428 19:31:00.563485 22461 solver.cpp:238]     Train net output #0: loss = 0.478622 (* 1 = 0.478622 loss)
I0428 19:31:00.563493 22461 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:00.627761 22461 solver.cpp:219] Iteration 900 (1556.03 iter/s, 0.0642663s/100 iters), loss = 0.626819
I0428 19:31:00.627791 22461 solver.cpp:238]     Train net output #0: loss = 0.626819 (* 1 = 0.626819 loss)
I0428 19:31:00.627799 22461 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:00.649358 22467 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:00.691486 22461 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:00.692692 22461 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:00.693385 22461 solver.cpp:311] Iteration 1000, loss = 0.516509
I0428 19:31:00.693408 22461 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:00.746043 22468 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:00.746484 22461 solver.cpp:398]     Test net output #0: accuracy = 0.8324
I0428 19:31:00.746506 22461 solver.cpp:398]     Test net output #1: loss = 0.441284 (* 1 = 0.441284 loss)
I0428 19:31:00.746512 22461 solver.cpp:316] Optimization Done.
I0428 19:31:00.746516 22461 caffe.cpp:259] Optimization Done.
