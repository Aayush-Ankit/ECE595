I0428 19:47:46.581821 26322 caffe.cpp:218] Using GPUs 0
I0428 19:47:46.621811 26322 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:47.153887 26322 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test525.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:47.154027 26322 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test525.prototxt
I0428 19:47:47.154443 26322 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:47.154464 26322 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:47.154563 26322 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:47.154644 26322 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:47.154742 26322 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:47.154767 26322 net.cpp:86] Creating Layer mnist
I0428 19:47:47.154775 26322 net.cpp:382] mnist -> data
I0428 19:47:47.154798 26322 net.cpp:382] mnist -> label
I0428 19:47:47.155889 26322 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:47.158354 26322 net.cpp:124] Setting up mnist
I0428 19:47:47.158372 26322 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:47.158380 26322 net.cpp:131] Top shape: 64 (64)
I0428 19:47:47.158382 26322 net.cpp:139] Memory required for data: 200960
I0428 19:47:47.158390 26322 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:47.158406 26322 net.cpp:86] Creating Layer conv0
I0428 19:47:47.158428 26322 net.cpp:408] conv0 <- data
I0428 19:47:47.158440 26322 net.cpp:382] conv0 -> conv0
I0428 19:47:47.449204 26322 net.cpp:124] Setting up conv0
I0428 19:47:47.449232 26322 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:47.449237 26322 net.cpp:139] Memory required for data: 938240
I0428 19:47:47.449252 26322 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:47.449266 26322 net.cpp:86] Creating Layer pool0
I0428 19:47:47.449271 26322 net.cpp:408] pool0 <- conv0
I0428 19:47:47.449276 26322 net.cpp:382] pool0 -> pool0
I0428 19:47:47.449331 26322 net.cpp:124] Setting up pool0
I0428 19:47:47.449337 26322 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:47.449339 26322 net.cpp:139] Memory required for data: 1122560
I0428 19:47:47.449342 26322 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:47.449353 26322 net.cpp:86] Creating Layer conv1
I0428 19:47:47.449357 26322 net.cpp:408] conv1 <- pool0
I0428 19:47:47.449362 26322 net.cpp:382] conv1 -> conv1
I0428 19:47:47.451259 26322 net.cpp:124] Setting up conv1
I0428 19:47:47.451274 26322 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:47.451278 26322 net.cpp:139] Memory required for data: 1155328
I0428 19:47:47.451287 26322 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:47.451295 26322 net.cpp:86] Creating Layer pool1
I0428 19:47:47.451299 26322 net.cpp:408] pool1 <- conv1
I0428 19:47:47.451304 26322 net.cpp:382] pool1 -> pool1
I0428 19:47:47.451344 26322 net.cpp:124] Setting up pool1
I0428 19:47:47.451362 26322 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:47.451365 26322 net.cpp:139] Memory required for data: 1163520
I0428 19:47:47.451369 26322 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:47.451376 26322 net.cpp:86] Creating Layer ip1
I0428 19:47:47.451380 26322 net.cpp:408] ip1 <- pool1
I0428 19:47:47.451385 26322 net.cpp:382] ip1 -> ip1
I0428 19:47:47.451486 26322 net.cpp:124] Setting up ip1
I0428 19:47:47.451494 26322 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:47.451498 26322 net.cpp:139] Memory required for data: 1166080
I0428 19:47:47.451505 26322 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:47.451511 26322 net.cpp:86] Creating Layer relu1
I0428 19:47:47.451514 26322 net.cpp:408] relu1 <- ip1
I0428 19:47:47.451519 26322 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:47.451691 26322 net.cpp:124] Setting up relu1
I0428 19:47:47.451700 26322 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:47.451704 26322 net.cpp:139] Memory required for data: 1168640
I0428 19:47:47.451707 26322 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:47.451714 26322 net.cpp:86] Creating Layer ip2
I0428 19:47:47.451717 26322 net.cpp:408] ip2 <- ip1
I0428 19:47:47.451723 26322 net.cpp:382] ip2 -> ip2
I0428 19:47:47.451825 26322 net.cpp:124] Setting up ip2
I0428 19:47:47.451833 26322 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:47.451836 26322 net.cpp:139] Memory required for data: 1181440
I0428 19:47:47.451841 26322 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:47.451848 26322 net.cpp:86] Creating Layer relu2
I0428 19:47:47.451851 26322 net.cpp:408] relu2 <- ip2
I0428 19:47:47.451855 26322 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:47.452610 26322 net.cpp:124] Setting up relu2
I0428 19:47:47.452622 26322 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:47.452626 26322 net.cpp:139] Memory required for data: 1194240
I0428 19:47:47.452630 26322 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:47.452637 26322 net.cpp:86] Creating Layer ip3
I0428 19:47:47.452641 26322 net.cpp:408] ip3 <- ip2
I0428 19:47:47.452647 26322 net.cpp:382] ip3 -> ip3
I0428 19:47:47.452755 26322 net.cpp:124] Setting up ip3
I0428 19:47:47.452764 26322 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:47.452767 26322 net.cpp:139] Memory required for data: 1196800
I0428 19:47:47.452775 26322 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:47.452780 26322 net.cpp:86] Creating Layer relu3
I0428 19:47:47.452785 26322 net.cpp:408] relu3 <- ip3
I0428 19:47:47.452788 26322 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:47.452972 26322 net.cpp:124] Setting up relu3
I0428 19:47:47.452982 26322 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:47.452986 26322 net.cpp:139] Memory required for data: 1199360
I0428 19:47:47.452989 26322 layer_factory.hpp:77] Creating layer loss
I0428 19:47:47.452996 26322 net.cpp:86] Creating Layer loss
I0428 19:47:47.452999 26322 net.cpp:408] loss <- ip3
I0428 19:47:47.453003 26322 net.cpp:408] loss <- label
I0428 19:47:47.453009 26322 net.cpp:382] loss -> loss
I0428 19:47:47.453028 26322 layer_factory.hpp:77] Creating layer loss
I0428 19:47:47.453261 26322 net.cpp:124] Setting up loss
I0428 19:47:47.453270 26322 net.cpp:131] Top shape: (1)
I0428 19:47:47.453274 26322 net.cpp:134]     with loss weight 1
I0428 19:47:47.453289 26322 net.cpp:139] Memory required for data: 1199364
I0428 19:47:47.453292 26322 net.cpp:200] loss needs backward computation.
I0428 19:47:47.453296 26322 net.cpp:200] relu3 needs backward computation.
I0428 19:47:47.453300 26322 net.cpp:200] ip3 needs backward computation.
I0428 19:47:47.453303 26322 net.cpp:200] relu2 needs backward computation.
I0428 19:47:47.453306 26322 net.cpp:200] ip2 needs backward computation.
I0428 19:47:47.453310 26322 net.cpp:200] relu1 needs backward computation.
I0428 19:47:47.453313 26322 net.cpp:200] ip1 needs backward computation.
I0428 19:47:47.453316 26322 net.cpp:200] pool1 needs backward computation.
I0428 19:47:47.453320 26322 net.cpp:200] conv1 needs backward computation.
I0428 19:47:47.453323 26322 net.cpp:200] pool0 needs backward computation.
I0428 19:47:47.453326 26322 net.cpp:200] conv0 needs backward computation.
I0428 19:47:47.453330 26322 net.cpp:202] mnist does not need backward computation.
I0428 19:47:47.453333 26322 net.cpp:244] This network produces output loss
I0428 19:47:47.453342 26322 net.cpp:257] Network initialization done.
I0428 19:47:47.453678 26322 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test525.prototxt
I0428 19:47:47.453706 26322 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:47.453804 26322 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:47.453886 26322 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:47.453930 26322 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:47.453944 26322 net.cpp:86] Creating Layer mnist
I0428 19:47:47.453949 26322 net.cpp:382] mnist -> data
I0428 19:47:47.453958 26322 net.cpp:382] mnist -> label
I0428 19:47:47.454046 26322 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:47.456009 26322 net.cpp:124] Setting up mnist
I0428 19:47:47.456023 26322 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:47.456028 26322 net.cpp:131] Top shape: 100 (100)
I0428 19:47:47.456032 26322 net.cpp:139] Memory required for data: 314000
I0428 19:47:47.456037 26322 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:47.456048 26322 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:47.456050 26322 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:47.456055 26322 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:47.456063 26322 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:47.456166 26322 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:47.456176 26322 net.cpp:131] Top shape: 100 (100)
I0428 19:47:47.456179 26322 net.cpp:131] Top shape: 100 (100)
I0428 19:47:47.456182 26322 net.cpp:139] Memory required for data: 314800
I0428 19:47:47.456185 26322 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:47.456194 26322 net.cpp:86] Creating Layer conv0
I0428 19:47:47.456198 26322 net.cpp:408] conv0 <- data
I0428 19:47:47.456203 26322 net.cpp:382] conv0 -> conv0
I0428 19:47:47.457875 26322 net.cpp:124] Setting up conv0
I0428 19:47:47.457890 26322 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:47.457895 26322 net.cpp:139] Memory required for data: 1466800
I0428 19:47:47.457904 26322 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:47.457911 26322 net.cpp:86] Creating Layer pool0
I0428 19:47:47.457916 26322 net.cpp:408] pool0 <- conv0
I0428 19:47:47.457921 26322 net.cpp:382] pool0 -> pool0
I0428 19:47:47.457957 26322 net.cpp:124] Setting up pool0
I0428 19:47:47.457963 26322 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:47.457967 26322 net.cpp:139] Memory required for data: 1754800
I0428 19:47:47.457969 26322 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:47.457978 26322 net.cpp:86] Creating Layer conv1
I0428 19:47:47.457981 26322 net.cpp:408] conv1 <- pool0
I0428 19:47:47.457988 26322 net.cpp:382] conv1 -> conv1
I0428 19:47:47.460036 26322 net.cpp:124] Setting up conv1
I0428 19:47:47.460052 26322 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:47.460057 26322 net.cpp:139] Memory required for data: 1806000
I0428 19:47:47.460065 26322 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:47.460072 26322 net.cpp:86] Creating Layer pool1
I0428 19:47:47.460077 26322 net.cpp:408] pool1 <- conv1
I0428 19:47:47.460083 26322 net.cpp:382] pool1 -> pool1
I0428 19:47:47.460124 26322 net.cpp:124] Setting up pool1
I0428 19:47:47.460139 26322 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:47.460141 26322 net.cpp:139] Memory required for data: 1818800
I0428 19:47:47.460144 26322 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:47.460150 26322 net.cpp:86] Creating Layer ip1
I0428 19:47:47.460155 26322 net.cpp:408] ip1 <- pool1
I0428 19:47:47.460160 26322 net.cpp:382] ip1 -> ip1
I0428 19:47:47.460312 26322 net.cpp:124] Setting up ip1
I0428 19:47:47.460322 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.460336 26322 net.cpp:139] Memory required for data: 1822800
I0428 19:47:47.460345 26322 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:47.460350 26322 net.cpp:86] Creating Layer relu1
I0428 19:47:47.460353 26322 net.cpp:408] relu1 <- ip1
I0428 19:47:47.460358 26322 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:47.460561 26322 net.cpp:124] Setting up relu1
I0428 19:47:47.460571 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.460573 26322 net.cpp:139] Memory required for data: 1826800
I0428 19:47:47.460577 26322 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:47.460585 26322 net.cpp:86] Creating Layer ip2
I0428 19:47:47.460597 26322 net.cpp:408] ip2 <- ip1
I0428 19:47:47.460602 26322 net.cpp:382] ip2 -> ip2
I0428 19:47:47.460707 26322 net.cpp:124] Setting up ip2
I0428 19:47:47.460716 26322 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:47.460726 26322 net.cpp:139] Memory required for data: 1846800
I0428 19:47:47.460737 26322 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:47.460742 26322 net.cpp:86] Creating Layer relu2
I0428 19:47:47.460747 26322 net.cpp:408] relu2 <- ip2
I0428 19:47:47.460750 26322 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:47.460913 26322 net.cpp:124] Setting up relu2
I0428 19:47:47.460923 26322 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:47.460927 26322 net.cpp:139] Memory required for data: 1866800
I0428 19:47:47.460930 26322 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:47.460937 26322 net.cpp:86] Creating Layer ip3
I0428 19:47:47.460939 26322 net.cpp:408] ip3 <- ip2
I0428 19:47:47.460945 26322 net.cpp:382] ip3 -> ip3
I0428 19:47:47.461048 26322 net.cpp:124] Setting up ip3
I0428 19:47:47.461056 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.461061 26322 net.cpp:139] Memory required for data: 1870800
I0428 19:47:47.461068 26322 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:47.461074 26322 net.cpp:86] Creating Layer relu3
I0428 19:47:47.461077 26322 net.cpp:408] relu3 <- ip3
I0428 19:47:47.461081 26322 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:47.461863 26322 net.cpp:124] Setting up relu3
I0428 19:47:47.461874 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.461877 26322 net.cpp:139] Memory required for data: 1874800
I0428 19:47:47.461881 26322 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:47.461887 26322 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:47.461890 26322 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:47.461896 26322 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:47.461902 26322 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:47.461944 26322 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:47.461951 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.461956 26322 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:47.461957 26322 net.cpp:139] Memory required for data: 1882800
I0428 19:47:47.461961 26322 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:47.461966 26322 net.cpp:86] Creating Layer accuracy
I0428 19:47:47.461968 26322 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:47.461972 26322 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:47.461977 26322 net.cpp:382] accuracy -> accuracy
I0428 19:47:47.461984 26322 net.cpp:124] Setting up accuracy
I0428 19:47:47.461988 26322 net.cpp:131] Top shape: (1)
I0428 19:47:47.461990 26322 net.cpp:139] Memory required for data: 1882804
I0428 19:47:47.461993 26322 layer_factory.hpp:77] Creating layer loss
I0428 19:47:47.461997 26322 net.cpp:86] Creating Layer loss
I0428 19:47:47.462000 26322 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:47.462005 26322 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:47.462009 26322 net.cpp:382] loss -> loss
I0428 19:47:47.462015 26322 layer_factory.hpp:77] Creating layer loss
I0428 19:47:47.462241 26322 net.cpp:124] Setting up loss
I0428 19:47:47.462250 26322 net.cpp:131] Top shape: (1)
I0428 19:47:47.462255 26322 net.cpp:134]     with loss weight 1
I0428 19:47:47.462261 26322 net.cpp:139] Memory required for data: 1882808
I0428 19:47:47.462275 26322 net.cpp:200] loss needs backward computation.
I0428 19:47:47.462280 26322 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:47.462283 26322 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:47.462286 26322 net.cpp:200] relu3 needs backward computation.
I0428 19:47:47.462290 26322 net.cpp:200] ip3 needs backward computation.
I0428 19:47:47.462293 26322 net.cpp:200] relu2 needs backward computation.
I0428 19:47:47.462296 26322 net.cpp:200] ip2 needs backward computation.
I0428 19:47:47.462299 26322 net.cpp:200] relu1 needs backward computation.
I0428 19:47:47.462302 26322 net.cpp:200] ip1 needs backward computation.
I0428 19:47:47.462306 26322 net.cpp:200] pool1 needs backward computation.
I0428 19:47:47.462308 26322 net.cpp:200] conv1 needs backward computation.
I0428 19:47:47.462312 26322 net.cpp:200] pool0 needs backward computation.
I0428 19:47:47.462316 26322 net.cpp:200] conv0 needs backward computation.
I0428 19:47:47.462321 26322 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:47.462324 26322 net.cpp:202] mnist does not need backward computation.
I0428 19:47:47.462327 26322 net.cpp:244] This network produces output accuracy
I0428 19:47:47.462330 26322 net.cpp:244] This network produces output loss
I0428 19:47:47.462342 26322 net.cpp:257] Network initialization done.
I0428 19:47:47.462383 26322 solver.cpp:56] Solver scaffolding done.
I0428 19:47:47.462708 26322 caffe.cpp:248] Starting Optimization
I0428 19:47:47.462715 26322 solver.cpp:273] Solving LeNet
I0428 19:47:47.462719 26322 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:47.463546 26322 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:47.467077 26322 blocking_queue.cpp:49] Waiting for data
I0428 19:47:47.537434 26329 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:47.537921 26322 solver.cpp:398]     Test net output #0: accuracy = 0.0709
I0428 19:47:47.537957 26322 solver.cpp:398]     Test net output #1: loss = 2.33385 (* 1 = 2.33385 loss)
I0428 19:47:47.539711 26322 solver.cpp:219] Iteration 0 (-1.39892e-31 iter/s, 0.0769679s/100 iters), loss = 2.32662
I0428 19:47:47.539746 26322 solver.cpp:238]     Train net output #0: loss = 2.32662 (* 1 = 2.32662 loss)
I0428 19:47:47.539773 26322 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:47.613241 26322 solver.cpp:219] Iteration 100 (1360.78 iter/s, 0.0734875s/100 iters), loss = 1.57734
I0428 19:47:47.613289 26322 solver.cpp:238]     Train net output #0: loss = 1.57734 (* 1 = 1.57734 loss)
I0428 19:47:47.613296 26322 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:47.683491 26322 solver.cpp:219] Iteration 200 (1424.31 iter/s, 0.0702095s/100 iters), loss = 1.11281
I0428 19:47:47.683531 26322 solver.cpp:238]     Train net output #0: loss = 1.11281 (* 1 = 1.11281 loss)
I0428 19:47:47.683537 26322 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:47.755733 26322 solver.cpp:219] Iteration 300 (1384.88 iter/s, 0.0722084s/100 iters), loss = 0.902671
I0428 19:47:47.755774 26322 solver.cpp:238]     Train net output #0: loss = 0.902671 (* 1 = 0.902671 loss)
I0428 19:47:47.755779 26322 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:47.829149 26322 solver.cpp:219] Iteration 400 (1363 iter/s, 0.0733676s/100 iters), loss = 0.795005
I0428 19:47:47.829190 26322 solver.cpp:238]     Train net output #0: loss = 0.795005 (* 1 = 0.795005 loss)
I0428 19:47:47.829210 26322 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:47.899127 26322 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:47.974212 26329 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:47.974750 26322 solver.cpp:398]     Test net output #0: accuracy = 0.8161
I0428 19:47:47.974768 26322 solver.cpp:398]     Test net output #1: loss = 0.597055 (* 1 = 0.597055 loss)
I0428 19:47:47.975550 26322 solver.cpp:219] Iteration 500 (683.231 iter/s, 0.146363s/100 iters), loss = 0.899818
I0428 19:47:47.975574 26322 solver.cpp:238]     Train net output #0: loss = 0.899818 (* 1 = 0.899818 loss)
I0428 19:47:47.975594 26322 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:48.056543 26322 solver.cpp:219] Iteration 600 (1235.14 iter/s, 0.0809624s/100 iters), loss = 0.427224
I0428 19:47:48.056582 26322 solver.cpp:238]     Train net output #0: loss = 0.427224 (* 1 = 0.427224 loss)
I0428 19:47:48.056588 26322 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:48.125047 26322 solver.cpp:219] Iteration 700 (1460.44 iter/s, 0.0684727s/100 iters), loss = 0.492478
I0428 19:47:48.125092 26322 solver.cpp:238]     Train net output #0: loss = 0.492478 (* 1 = 0.492478 loss)
I0428 19:47:48.125099 26322 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:48.195942 26322 solver.cpp:219] Iteration 800 (1411.58 iter/s, 0.0708424s/100 iters), loss = 0.400373
I0428 19:47:48.195991 26322 solver.cpp:238]     Train net output #0: loss = 0.400373 (* 1 = 0.400373 loss)
I0428 19:47:48.195997 26322 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:48.267030 26322 solver.cpp:219] Iteration 900 (1407.81 iter/s, 0.0710321s/100 iters), loss = 0.262997
I0428 19:47:48.267071 26322 solver.cpp:238]     Train net output #0: loss = 0.262997 (* 1 = 0.262997 loss)
I0428 19:47:48.267076 26322 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:48.290762 26328 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:48.337363 26322 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:48.338011 26322 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:48.338439 26322 solver.cpp:311] Iteration 1000, loss = 0.235421
I0428 19:47:48.338456 26322 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:48.413461 26329 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:48.413961 26322 solver.cpp:398]     Test net output #0: accuracy = 0.9286
I0428 19:47:48.413996 26322 solver.cpp:398]     Test net output #1: loss = 0.233886 (* 1 = 0.233886 loss)
I0428 19:47:48.414001 26322 solver.cpp:316] Optimization Done.
I0428 19:47:48.414005 26322 caffe.cpp:259] Optimization Done.
