I0428 19:50:29.371481 27026 caffe.cpp:218] Using GPUs 0
I0428 19:50:29.401760 27026 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:29.849789 27026 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test606.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:29.849918 27026 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test606.prototxt
I0428 19:50:29.850256 27026 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:29.850271 27026 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:29.850360 27026 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:29.850419 27026 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:29.850498 27026 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:29.850517 27026 net.cpp:86] Creating Layer mnist
I0428 19:50:29.850523 27026 net.cpp:382] mnist -> data
I0428 19:50:29.850541 27026 net.cpp:382] mnist -> label
I0428 19:50:29.851502 27026 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:29.853799 27026 net.cpp:124] Setting up mnist
I0428 19:50:29.853844 27026 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:29.853849 27026 net.cpp:131] Top shape: 64 (64)
I0428 19:50:29.853853 27026 net.cpp:139] Memory required for data: 200960
I0428 19:50:29.853858 27026 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:29.853873 27026 net.cpp:86] Creating Layer conv0
I0428 19:50:29.853889 27026 net.cpp:408] conv0 <- data
I0428 19:50:29.853899 27026 net.cpp:382] conv0 -> conv0
I0428 19:50:30.084908 27026 net.cpp:124] Setting up conv0
I0428 19:50:30.084949 27026 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:30.084954 27026 net.cpp:139] Memory required for data: 938240
I0428 19:50:30.084985 27026 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:30.084997 27026 net.cpp:86] Creating Layer pool0
I0428 19:50:30.085001 27026 net.cpp:408] pool0 <- conv0
I0428 19:50:30.085022 27026 net.cpp:382] pool0 -> pool0
I0428 19:50:30.085070 27026 net.cpp:124] Setting up pool0
I0428 19:50:30.085088 27026 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:30.085090 27026 net.cpp:139] Memory required for data: 1122560
I0428 19:50:30.085094 27026 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:30.085105 27026 net.cpp:86] Creating Layer conv1
I0428 19:50:30.085108 27026 net.cpp:408] conv1 <- pool0
I0428 19:50:30.085114 27026 net.cpp:382] conv1 -> conv1
I0428 19:50:30.087849 27026 net.cpp:124] Setting up conv1
I0428 19:50:30.087879 27026 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:30.087882 27026 net.cpp:139] Memory required for data: 1286400
I0428 19:50:30.087890 27026 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:30.087898 27026 net.cpp:86] Creating Layer pool1
I0428 19:50:30.087901 27026 net.cpp:408] pool1 <- conv1
I0428 19:50:30.087906 27026 net.cpp:382] pool1 -> pool1
I0428 19:50:30.087941 27026 net.cpp:124] Setting up pool1
I0428 19:50:30.087946 27026 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:30.087949 27026 net.cpp:139] Memory required for data: 1327360
I0428 19:50:30.087952 27026 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:30.087960 27026 net.cpp:86] Creating Layer ip1
I0428 19:50:30.087962 27026 net.cpp:408] ip1 <- pool1
I0428 19:50:30.087967 27026 net.cpp:382] ip1 -> ip1
I0428 19:50:30.088086 27026 net.cpp:124] Setting up ip1
I0428 19:50:30.088094 27026 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:30.088098 27026 net.cpp:139] Memory required for data: 1333760
I0428 19:50:30.088104 27026 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:30.088109 27026 net.cpp:86] Creating Layer relu1
I0428 19:50:30.088112 27026 net.cpp:408] relu1 <- ip1
I0428 19:50:30.088116 27026 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:30.088281 27026 net.cpp:124] Setting up relu1
I0428 19:50:30.088289 27026 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:30.088292 27026 net.cpp:139] Memory required for data: 1340160
I0428 19:50:30.088295 27026 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:30.088301 27026 net.cpp:86] Creating Layer ip2
I0428 19:50:30.088304 27026 net.cpp:408] ip2 <- ip1
I0428 19:50:30.088310 27026 net.cpp:382] ip2 -> ip2
I0428 19:50:30.088397 27026 net.cpp:124] Setting up ip2
I0428 19:50:30.088403 27026 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:30.088407 27026 net.cpp:139] Memory required for data: 1342720
I0428 19:50:30.088412 27026 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:30.088416 27026 net.cpp:86] Creating Layer relu2
I0428 19:50:30.088420 27026 net.cpp:408] relu2 <- ip2
I0428 19:50:30.088423 27026 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:30.089242 27026 net.cpp:124] Setting up relu2
I0428 19:50:30.089254 27026 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:30.089273 27026 net.cpp:139] Memory required for data: 1345280
I0428 19:50:30.089277 27026 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:30.089283 27026 net.cpp:86] Creating Layer ip3
I0428 19:50:30.089287 27026 net.cpp:408] ip3 <- ip2
I0428 19:50:30.089293 27026 net.cpp:382] ip3 -> ip3
I0428 19:50:30.089401 27026 net.cpp:124] Setting up ip3
I0428 19:50:30.089407 27026 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:30.089411 27026 net.cpp:139] Memory required for data: 1347840
I0428 19:50:30.089418 27026 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:30.089423 27026 net.cpp:86] Creating Layer relu3
I0428 19:50:30.089426 27026 net.cpp:408] relu3 <- ip3
I0428 19:50:30.089431 27026 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:30.089589 27026 net.cpp:124] Setting up relu3
I0428 19:50:30.089598 27026 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:30.089601 27026 net.cpp:139] Memory required for data: 1350400
I0428 19:50:30.089604 27026 layer_factory.hpp:77] Creating layer loss
I0428 19:50:30.089609 27026 net.cpp:86] Creating Layer loss
I0428 19:50:30.089613 27026 net.cpp:408] loss <- ip3
I0428 19:50:30.089617 27026 net.cpp:408] loss <- label
I0428 19:50:30.089622 27026 net.cpp:382] loss -> loss
I0428 19:50:30.089639 27026 layer_factory.hpp:77] Creating layer loss
I0428 19:50:30.089869 27026 net.cpp:124] Setting up loss
I0428 19:50:30.089879 27026 net.cpp:131] Top shape: (1)
I0428 19:50:30.089882 27026 net.cpp:134]     with loss weight 1
I0428 19:50:30.089895 27026 net.cpp:139] Memory required for data: 1350404
I0428 19:50:30.089898 27026 net.cpp:200] loss needs backward computation.
I0428 19:50:30.089902 27026 net.cpp:200] relu3 needs backward computation.
I0428 19:50:30.089905 27026 net.cpp:200] ip3 needs backward computation.
I0428 19:50:30.089907 27026 net.cpp:200] relu2 needs backward computation.
I0428 19:50:30.089910 27026 net.cpp:200] ip2 needs backward computation.
I0428 19:50:30.089912 27026 net.cpp:200] relu1 needs backward computation.
I0428 19:50:30.089915 27026 net.cpp:200] ip1 needs backward computation.
I0428 19:50:30.089918 27026 net.cpp:200] pool1 needs backward computation.
I0428 19:50:30.089921 27026 net.cpp:200] conv1 needs backward computation.
I0428 19:50:30.089923 27026 net.cpp:200] pool0 needs backward computation.
I0428 19:50:30.089926 27026 net.cpp:200] conv0 needs backward computation.
I0428 19:50:30.089929 27026 net.cpp:202] mnist does not need backward computation.
I0428 19:50:30.089932 27026 net.cpp:244] This network produces output loss
I0428 19:50:30.089941 27026 net.cpp:257] Network initialization done.
I0428 19:50:30.090288 27026 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test606.prototxt
I0428 19:50:30.090330 27026 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:30.090473 27026 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:30.090574 27026 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:30.090616 27026 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:30.090631 27026 net.cpp:86] Creating Layer mnist
I0428 19:50:30.090636 27026 net.cpp:382] mnist -> data
I0428 19:50:30.090659 27026 net.cpp:382] mnist -> label
I0428 19:50:30.090771 27026 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:30.092715 27026 net.cpp:124] Setting up mnist
I0428 19:50:30.092742 27026 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:30.092747 27026 net.cpp:131] Top shape: 100 (100)
I0428 19:50:30.092751 27026 net.cpp:139] Memory required for data: 314000
I0428 19:50:30.092768 27026 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:30.092792 27026 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:30.092797 27026 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:30.092802 27026 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:30.092808 27026 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:30.092957 27026 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:30.092965 27026 net.cpp:131] Top shape: 100 (100)
I0428 19:50:30.092969 27026 net.cpp:131] Top shape: 100 (100)
I0428 19:50:30.092972 27026 net.cpp:139] Memory required for data: 314800
I0428 19:50:30.092977 27026 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:30.092985 27026 net.cpp:86] Creating Layer conv0
I0428 19:50:30.092988 27026 net.cpp:408] conv0 <- data
I0428 19:50:30.092994 27026 net.cpp:382] conv0 -> conv0
I0428 19:50:30.094708 27026 net.cpp:124] Setting up conv0
I0428 19:50:30.094738 27026 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:30.094740 27026 net.cpp:139] Memory required for data: 1466800
I0428 19:50:30.094749 27026 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:30.094755 27026 net.cpp:86] Creating Layer pool0
I0428 19:50:30.094758 27026 net.cpp:408] pool0 <- conv0
I0428 19:50:30.094763 27026 net.cpp:382] pool0 -> pool0
I0428 19:50:30.094796 27026 net.cpp:124] Setting up pool0
I0428 19:50:30.094801 27026 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:30.094805 27026 net.cpp:139] Memory required for data: 1754800
I0428 19:50:30.094807 27026 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:30.094815 27026 net.cpp:86] Creating Layer conv1
I0428 19:50:30.094818 27026 net.cpp:408] conv1 <- pool0
I0428 19:50:30.094823 27026 net.cpp:382] conv1 -> conv1
I0428 19:50:30.096904 27026 net.cpp:124] Setting up conv1
I0428 19:50:30.096935 27026 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:30.096940 27026 net.cpp:139] Memory required for data: 2010800
I0428 19:50:30.096949 27026 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:30.096972 27026 net.cpp:86] Creating Layer pool1
I0428 19:50:30.096976 27026 net.cpp:408] pool1 <- conv1
I0428 19:50:30.096982 27026 net.cpp:382] pool1 -> pool1
I0428 19:50:30.097025 27026 net.cpp:124] Setting up pool1
I0428 19:50:30.097056 27026 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:30.097059 27026 net.cpp:139] Memory required for data: 2074800
I0428 19:50:30.097062 27026 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:30.097070 27026 net.cpp:86] Creating Layer ip1
I0428 19:50:30.097074 27026 net.cpp:408] ip1 <- pool1
I0428 19:50:30.097079 27026 net.cpp:382] ip1 -> ip1
I0428 19:50:30.097234 27026 net.cpp:124] Setting up ip1
I0428 19:50:30.097242 27026 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:30.097256 27026 net.cpp:139] Memory required for data: 2084800
I0428 19:50:30.097264 27026 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:30.097270 27026 net.cpp:86] Creating Layer relu1
I0428 19:50:30.097288 27026 net.cpp:408] relu1 <- ip1
I0428 19:50:30.097293 27026 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:30.097476 27026 net.cpp:124] Setting up relu1
I0428 19:50:30.097484 27026 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:30.097488 27026 net.cpp:139] Memory required for data: 2094800
I0428 19:50:30.097491 27026 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:30.097499 27026 net.cpp:86] Creating Layer ip2
I0428 19:50:30.097503 27026 net.cpp:408] ip2 <- ip1
I0428 19:50:30.097509 27026 net.cpp:382] ip2 -> ip2
I0428 19:50:30.097609 27026 net.cpp:124] Setting up ip2
I0428 19:50:30.097616 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.097620 27026 net.cpp:139] Memory required for data: 2098800
I0428 19:50:30.097625 27026 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:30.097645 27026 net.cpp:86] Creating Layer relu2
I0428 19:50:30.097648 27026 net.cpp:408] relu2 <- ip2
I0428 19:50:30.097653 27026 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:30.097821 27026 net.cpp:124] Setting up relu2
I0428 19:50:30.097831 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.097841 27026 net.cpp:139] Memory required for data: 2102800
I0428 19:50:30.097846 27026 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:30.097851 27026 net.cpp:86] Creating Layer ip3
I0428 19:50:30.097858 27026 net.cpp:408] ip3 <- ip2
I0428 19:50:30.097864 27026 net.cpp:382] ip3 -> ip3
I0428 19:50:30.097992 27026 net.cpp:124] Setting up ip3
I0428 19:50:30.098001 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.098003 27026 net.cpp:139] Memory required for data: 2106800
I0428 19:50:30.098011 27026 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:30.098016 27026 net.cpp:86] Creating Layer relu3
I0428 19:50:30.098019 27026 net.cpp:408] relu3 <- ip3
I0428 19:50:30.098024 27026 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:30.098831 27026 net.cpp:124] Setting up relu3
I0428 19:50:30.098842 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.098861 27026 net.cpp:139] Memory required for data: 2110800
I0428 19:50:30.098865 27026 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:30.098870 27026 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:30.098873 27026 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:30.098881 27026 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:30.098886 27026 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:30.098937 27026 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:30.098943 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.098948 27026 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:30.098949 27026 net.cpp:139] Memory required for data: 2118800
I0428 19:50:30.098953 27026 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:30.098959 27026 net.cpp:86] Creating Layer accuracy
I0428 19:50:30.098963 27026 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:30.098981 27026 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:30.098985 27026 net.cpp:382] accuracy -> accuracy
I0428 19:50:30.098994 27026 net.cpp:124] Setting up accuracy
I0428 19:50:30.099004 27026 net.cpp:131] Top shape: (1)
I0428 19:50:30.099005 27026 net.cpp:139] Memory required for data: 2118804
I0428 19:50:30.099009 27026 layer_factory.hpp:77] Creating layer loss
I0428 19:50:30.099012 27026 net.cpp:86] Creating Layer loss
I0428 19:50:30.099015 27026 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:30.099020 27026 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:30.099023 27026 net.cpp:382] loss -> loss
I0428 19:50:30.099030 27026 layer_factory.hpp:77] Creating layer loss
I0428 19:50:30.099256 27026 net.cpp:124] Setting up loss
I0428 19:50:30.099267 27026 net.cpp:131] Top shape: (1)
I0428 19:50:30.099269 27026 net.cpp:134]     with loss weight 1
I0428 19:50:30.099275 27026 net.cpp:139] Memory required for data: 2118808
I0428 19:50:30.099287 27026 net.cpp:200] loss needs backward computation.
I0428 19:50:30.099292 27026 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:30.099294 27026 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:30.099298 27026 net.cpp:200] relu3 needs backward computation.
I0428 19:50:30.099300 27026 net.cpp:200] ip3 needs backward computation.
I0428 19:50:30.099303 27026 net.cpp:200] relu2 needs backward computation.
I0428 19:50:30.099305 27026 net.cpp:200] ip2 needs backward computation.
I0428 19:50:30.099308 27026 net.cpp:200] relu1 needs backward computation.
I0428 19:50:30.099311 27026 net.cpp:200] ip1 needs backward computation.
I0428 19:50:30.099314 27026 net.cpp:200] pool1 needs backward computation.
I0428 19:50:30.099318 27026 net.cpp:200] conv1 needs backward computation.
I0428 19:50:30.099326 27026 net.cpp:200] pool0 needs backward computation.
I0428 19:50:30.099334 27026 net.cpp:200] conv0 needs backward computation.
I0428 19:50:30.099337 27026 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:30.099341 27026 net.cpp:202] mnist does not need backward computation.
I0428 19:50:30.099344 27026 net.cpp:244] This network produces output accuracy
I0428 19:50:30.099346 27026 net.cpp:244] This network produces output loss
I0428 19:50:30.099357 27026 net.cpp:257] Network initialization done.
I0428 19:50:30.099396 27026 solver.cpp:56] Solver scaffolding done.
I0428 19:50:30.099791 27026 caffe.cpp:248] Starting Optimization
I0428 19:50:30.099797 27026 solver.cpp:273] Solving LeNet
I0428 19:50:30.099799 27026 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:30.100106 27026 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:30.103806 27026 blocking_queue.cpp:49] Waiting for data
I0428 19:50:30.174077 27033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:30.174593 27026 solver.cpp:398]     Test net output #0: accuracy = 0.0905
I0428 19:50:30.174626 27026 solver.cpp:398]     Test net output #1: loss = 2.31102 (* 1 = 2.31102 loss)
I0428 19:50:30.176558 27026 solver.cpp:219] Iteration 0 (-1.05938e-42 iter/s, 0.0766853s/100 iters), loss = 2.30443
I0428 19:50:30.176595 27026 solver.cpp:238]     Train net output #0: loss = 2.30443 (* 1 = 2.30443 loss)
I0428 19:50:30.176621 27026 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:30.260751 27026 solver.cpp:219] Iteration 100 (1188.25 iter/s, 0.0841574s/100 iters), loss = 1.18887
I0428 19:50:30.260776 27026 solver.cpp:238]     Train net output #0: loss = 1.18887 (* 1 = 1.18887 loss)
I0428 19:50:30.260782 27026 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:30.337373 27026 solver.cpp:219] Iteration 200 (1305.72 iter/s, 0.076586s/100 iters), loss = 0.380343
I0428 19:50:30.337414 27026 solver.cpp:238]     Train net output #0: loss = 0.380343 (* 1 = 0.380343 loss)
I0428 19:50:30.337420 27026 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:30.417184 27026 solver.cpp:219] Iteration 300 (1253.51 iter/s, 0.0797757s/100 iters), loss = 0.407716
I0428 19:50:30.417225 27026 solver.cpp:238]     Train net output #0: loss = 0.407716 (* 1 = 0.407716 loss)
I0428 19:50:30.417232 27026 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:30.494791 27026 solver.cpp:219] Iteration 400 (1289.4 iter/s, 0.0775557s/100 iters), loss = 0.259912
I0428 19:50:30.494830 27026 solver.cpp:238]     Train net output #0: loss = 0.259912 (* 1 = 0.259912 loss)
I0428 19:50:30.494837 27026 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:30.576807 27026 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:30.630900 27033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:30.631423 27026 solver.cpp:398]     Test net output #0: accuracy = 0.9327
I0428 19:50:30.631458 27026 solver.cpp:398]     Test net output #1: loss = 0.229022 (* 1 = 0.229022 loss)
I0428 19:50:30.632313 27026 solver.cpp:219] Iteration 500 (727.339 iter/s, 0.137488s/100 iters), loss = 0.276237
I0428 19:50:30.632367 27026 solver.cpp:238]     Train net output #0: loss = 0.276237 (* 1 = 0.276237 loss)
I0428 19:50:30.632375 27026 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:30.714370 27026 solver.cpp:219] Iteration 600 (1219.38 iter/s, 0.0820091s/100 iters), loss = 0.163702
I0428 19:50:30.714408 27026 solver.cpp:238]     Train net output #0: loss = 0.163702 (* 1 = 0.163702 loss)
I0428 19:50:30.714414 27026 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:30.790954 27026 solver.cpp:219] Iteration 700 (1306.3 iter/s, 0.0765522s/100 iters), loss = 0.265706
I0428 19:50:30.790998 27026 solver.cpp:238]     Train net output #0: loss = 0.265707 (* 1 = 0.265707 loss)
I0428 19:50:30.791007 27026 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:30.868320 27026 solver.cpp:219] Iteration 800 (1293.24 iter/s, 0.0773253s/100 iters), loss = 0.288845
I0428 19:50:30.868350 27026 solver.cpp:238]     Train net output #0: loss = 0.288845 (* 1 = 0.288845 loss)
I0428 19:50:30.868362 27026 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:30.945502 27026 solver.cpp:219] Iteration 900 (1296.31 iter/s, 0.077142s/100 iters), loss = 0.177615
I0428 19:50:30.945530 27026 solver.cpp:238]     Train net output #0: loss = 0.177615 (* 1 = 0.177615 loss)
I0428 19:50:30.945541 27026 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:30.971282 27032 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:31.032104 27026 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:31.033232 27026 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:31.033872 27026 solver.cpp:311] Iteration 1000, loss = 0.183327
I0428 19:50:31.033896 27026 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:31.108211 27033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:31.108779 27026 solver.cpp:398]     Test net output #0: accuracy = 0.9549
I0428 19:50:31.108824 27026 solver.cpp:398]     Test net output #1: loss = 0.141464 (* 1 = 0.141464 loss)
I0428 19:50:31.108831 27026 solver.cpp:316] Optimization Done.
I0428 19:50:31.108837 27026 caffe.cpp:259] Optimization Done.
