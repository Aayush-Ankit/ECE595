I0428 19:33:11.435093 23047 caffe.cpp:218] Using GPUs 0
I0428 19:33:11.474869 23047 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:11.997164 23047 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test173.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:11.997309 23047 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test173.prototxt
I0428 19:33:11.997678 23047 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:11.997695 23047 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:11.997786 23047 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:11.997861 23047 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:11.997966 23047 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:11.997990 23047 net.cpp:86] Creating Layer mnist
I0428 19:33:11.998000 23047 net.cpp:382] mnist -> data
I0428 19:33:11.998023 23047 net.cpp:382] mnist -> label
I0428 19:33:11.999128 23047 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:12.001611 23047 net.cpp:124] Setting up mnist
I0428 19:33:12.001629 23047 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:12.001636 23047 net.cpp:131] Top shape: 64 (64)
I0428 19:33:12.001639 23047 net.cpp:139] Memory required for data: 200960
I0428 19:33:12.001647 23047 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:12.001703 23047 net.cpp:86] Creating Layer conv0
I0428 19:33:12.001709 23047 net.cpp:408] conv0 <- data
I0428 19:33:12.001724 23047 net.cpp:382] conv0 -> conv0
I0428 19:33:12.294608 23047 net.cpp:124] Setting up conv0
I0428 19:33:12.294641 23047 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:12.294646 23047 net.cpp:139] Memory required for data: 3887360
I0428 19:33:12.294663 23047 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:12.294678 23047 net.cpp:86] Creating Layer pool0
I0428 19:33:12.294706 23047 net.cpp:408] pool0 <- conv0
I0428 19:33:12.294714 23047 net.cpp:382] pool0 -> pool0
I0428 19:33:12.294778 23047 net.cpp:124] Setting up pool0
I0428 19:33:12.294786 23047 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:12.294790 23047 net.cpp:139] Memory required for data: 4808960
I0428 19:33:12.294795 23047 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:12.294803 23047 net.cpp:86] Creating Layer ip1
I0428 19:33:12.294807 23047 net.cpp:408] ip1 <- pool0
I0428 19:33:12.294813 23047 net.cpp:382] ip1 -> ip1
I0428 19:33:12.295178 23047 net.cpp:124] Setting up ip1
I0428 19:33:12.295188 23047 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:12.295192 23047 net.cpp:139] Memory required for data: 4811520
I0428 19:33:12.295200 23047 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:12.295208 23047 net.cpp:86] Creating Layer relu1
I0428 19:33:12.295213 23047 net.cpp:408] relu1 <- ip1
I0428 19:33:12.295218 23047 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:12.295411 23047 net.cpp:124] Setting up relu1
I0428 19:33:12.295423 23047 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:12.295426 23047 net.cpp:139] Memory required for data: 4814080
I0428 19:33:12.295430 23047 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:12.295439 23047 net.cpp:86] Creating Layer ip2
I0428 19:33:12.295442 23047 net.cpp:408] ip2 <- ip1
I0428 19:33:12.295449 23047 net.cpp:382] ip2 -> ip2
I0428 19:33:12.295562 23047 net.cpp:124] Setting up ip2
I0428 19:33:12.295570 23047 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:12.295573 23047 net.cpp:139] Memory required for data: 4820480
I0428 19:33:12.295583 23047 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:12.295589 23047 net.cpp:86] Creating Layer relu2
I0428 19:33:12.295593 23047 net.cpp:408] relu2 <- ip2
I0428 19:33:12.295598 23047 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:12.296444 23047 net.cpp:124] Setting up relu2
I0428 19:33:12.296459 23047 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:12.296463 23047 net.cpp:139] Memory required for data: 4826880
I0428 19:33:12.296468 23047 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:12.296475 23047 net.cpp:86] Creating Layer ip3
I0428 19:33:12.296479 23047 net.cpp:408] ip3 <- ip2
I0428 19:33:12.296485 23047 net.cpp:382] ip3 -> ip3
I0428 19:33:12.296596 23047 net.cpp:124] Setting up ip3
I0428 19:33:12.296604 23047 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:12.296608 23047 net.cpp:139] Memory required for data: 4829440
I0428 19:33:12.296615 23047 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:12.296622 23047 net.cpp:86] Creating Layer relu3
I0428 19:33:12.296627 23047 net.cpp:408] relu3 <- ip3
I0428 19:33:12.296632 23047 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:12.296805 23047 net.cpp:124] Setting up relu3
I0428 19:33:12.296823 23047 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:12.296826 23047 net.cpp:139] Memory required for data: 4832000
I0428 19:33:12.296830 23047 layer_factory.hpp:77] Creating layer loss
I0428 19:33:12.296838 23047 net.cpp:86] Creating Layer loss
I0428 19:33:12.296841 23047 net.cpp:408] loss <- ip3
I0428 19:33:12.296845 23047 net.cpp:408] loss <- label
I0428 19:33:12.296854 23047 net.cpp:382] loss -> loss
I0428 19:33:12.296876 23047 layer_factory.hpp:77] Creating layer loss
I0428 19:33:12.297147 23047 net.cpp:124] Setting up loss
I0428 19:33:12.297158 23047 net.cpp:131] Top shape: (1)
I0428 19:33:12.297161 23047 net.cpp:134]     with loss weight 1
I0428 19:33:12.297178 23047 net.cpp:139] Memory required for data: 4832004
I0428 19:33:12.297181 23047 net.cpp:200] loss needs backward computation.
I0428 19:33:12.297186 23047 net.cpp:200] relu3 needs backward computation.
I0428 19:33:12.297190 23047 net.cpp:200] ip3 needs backward computation.
I0428 19:33:12.297194 23047 net.cpp:200] relu2 needs backward computation.
I0428 19:33:12.297197 23047 net.cpp:200] ip2 needs backward computation.
I0428 19:33:12.297200 23047 net.cpp:200] relu1 needs backward computation.
I0428 19:33:12.297204 23047 net.cpp:200] ip1 needs backward computation.
I0428 19:33:12.297219 23047 net.cpp:200] pool0 needs backward computation.
I0428 19:33:12.297224 23047 net.cpp:200] conv0 needs backward computation.
I0428 19:33:12.297227 23047 net.cpp:202] mnist does not need backward computation.
I0428 19:33:12.297230 23047 net.cpp:244] This network produces output loss
I0428 19:33:12.297240 23047 net.cpp:257] Network initialization done.
I0428 19:33:12.297574 23047 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test173.prototxt
I0428 19:33:12.297605 23047 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:12.297703 23047 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:12.297781 23047 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:12.297832 23047 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:12.297852 23047 net.cpp:86] Creating Layer mnist
I0428 19:33:12.297857 23047 net.cpp:382] mnist -> data
I0428 19:33:12.297866 23047 net.cpp:382] mnist -> label
I0428 19:33:12.297967 23047 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:12.300165 23047 net.cpp:124] Setting up mnist
I0428 19:33:12.300181 23047 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:12.300187 23047 net.cpp:131] Top shape: 100 (100)
I0428 19:33:12.300190 23047 net.cpp:139] Memory required for data: 314000
I0428 19:33:12.300195 23047 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:12.300207 23047 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:12.300211 23047 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:12.300217 23047 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:12.300225 23047 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:12.300274 23047 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:12.300282 23047 net.cpp:131] Top shape: 100 (100)
I0428 19:33:12.300287 23047 net.cpp:131] Top shape: 100 (100)
I0428 19:33:12.300289 23047 net.cpp:139] Memory required for data: 314800
I0428 19:33:12.300304 23047 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:12.300314 23047 net.cpp:86] Creating Layer conv0
I0428 19:33:12.300318 23047 net.cpp:408] conv0 <- data
I0428 19:33:12.300325 23047 net.cpp:382] conv0 -> conv0
I0428 19:33:12.302207 23047 net.cpp:124] Setting up conv0
I0428 19:33:12.302224 23047 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:12.302229 23047 net.cpp:139] Memory required for data: 6074800
I0428 19:33:12.302240 23047 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:12.302248 23047 net.cpp:86] Creating Layer pool0
I0428 19:33:12.302253 23047 net.cpp:408] pool0 <- conv0
I0428 19:33:12.302258 23047 net.cpp:382] pool0 -> pool0
I0428 19:33:12.302300 23047 net.cpp:124] Setting up pool0
I0428 19:33:12.302307 23047 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:12.302310 23047 net.cpp:139] Memory required for data: 7514800
I0428 19:33:12.302314 23047 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:12.302322 23047 net.cpp:86] Creating Layer ip1
I0428 19:33:12.302325 23047 net.cpp:408] ip1 <- pool0
I0428 19:33:12.302331 23047 net.cpp:382] ip1 -> ip1
I0428 19:33:12.302717 23047 net.cpp:124] Setting up ip1
I0428 19:33:12.302726 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.302731 23047 net.cpp:139] Memory required for data: 7518800
I0428 19:33:12.302739 23047 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:12.302745 23047 net.cpp:86] Creating Layer relu1
I0428 19:33:12.302749 23047 net.cpp:408] relu1 <- ip1
I0428 19:33:12.302754 23047 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:12.303014 23047 net.cpp:124] Setting up relu1
I0428 19:33:12.303025 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.303030 23047 net.cpp:139] Memory required for data: 7522800
I0428 19:33:12.303033 23047 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:12.303040 23047 net.cpp:86] Creating Layer ip2
I0428 19:33:12.303045 23047 net.cpp:408] ip2 <- ip1
I0428 19:33:12.303050 23047 net.cpp:382] ip2 -> ip2
I0428 19:33:12.303166 23047 net.cpp:124] Setting up ip2
I0428 19:33:12.303174 23047 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:12.303179 23047 net.cpp:139] Memory required for data: 7532800
I0428 19:33:12.303189 23047 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:12.303194 23047 net.cpp:86] Creating Layer relu2
I0428 19:33:12.303198 23047 net.cpp:408] relu2 <- ip2
I0428 19:33:12.303205 23047 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:12.304137 23047 net.cpp:124] Setting up relu2
I0428 19:33:12.304152 23047 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:12.304155 23047 net.cpp:139] Memory required for data: 7542800
I0428 19:33:12.304159 23047 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:12.304168 23047 net.cpp:86] Creating Layer ip3
I0428 19:33:12.304173 23047 net.cpp:408] ip3 <- ip2
I0428 19:33:12.304179 23047 net.cpp:382] ip3 -> ip3
I0428 19:33:12.304308 23047 net.cpp:124] Setting up ip3
I0428 19:33:12.304318 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.304322 23047 net.cpp:139] Memory required for data: 7546800
I0428 19:33:12.304329 23047 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:12.304335 23047 net.cpp:86] Creating Layer relu3
I0428 19:33:12.304339 23047 net.cpp:408] relu3 <- ip3
I0428 19:33:12.304344 23047 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:12.304523 23047 net.cpp:124] Setting up relu3
I0428 19:33:12.304533 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.304538 23047 net.cpp:139] Memory required for data: 7550800
I0428 19:33:12.304543 23047 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:12.304548 23047 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:12.304553 23047 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:12.304558 23047 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:12.304565 23047 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:12.304605 23047 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:12.304613 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.304618 23047 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:12.304633 23047 net.cpp:139] Memory required for data: 7558800
I0428 19:33:12.304637 23047 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:12.304643 23047 net.cpp:86] Creating Layer accuracy
I0428 19:33:12.304647 23047 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:12.304652 23047 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:12.304657 23047 net.cpp:382] accuracy -> accuracy
I0428 19:33:12.304666 23047 net.cpp:124] Setting up accuracy
I0428 19:33:12.304672 23047 net.cpp:131] Top shape: (1)
I0428 19:33:12.304674 23047 net.cpp:139] Memory required for data: 7558804
I0428 19:33:12.304678 23047 layer_factory.hpp:77] Creating layer loss
I0428 19:33:12.304684 23047 net.cpp:86] Creating Layer loss
I0428 19:33:12.304687 23047 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:12.304693 23047 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:12.304698 23047 net.cpp:382] loss -> loss
I0428 19:33:12.304705 23047 layer_factory.hpp:77] Creating layer loss
I0428 19:33:12.304989 23047 net.cpp:124] Setting up loss
I0428 19:33:12.305001 23047 net.cpp:131] Top shape: (1)
I0428 19:33:12.305006 23047 net.cpp:134]     with loss weight 1
I0428 19:33:12.305012 23047 net.cpp:139] Memory required for data: 7558808
I0428 19:33:12.305017 23047 net.cpp:200] loss needs backward computation.
I0428 19:33:12.305022 23047 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:12.305025 23047 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:12.305029 23047 net.cpp:200] relu3 needs backward computation.
I0428 19:33:12.305032 23047 net.cpp:200] ip3 needs backward computation.
I0428 19:33:12.305037 23047 net.cpp:200] relu2 needs backward computation.
I0428 19:33:12.305039 23047 net.cpp:200] ip2 needs backward computation.
I0428 19:33:12.305043 23047 net.cpp:200] relu1 needs backward computation.
I0428 19:33:12.305047 23047 net.cpp:200] ip1 needs backward computation.
I0428 19:33:12.305049 23047 net.cpp:200] pool0 needs backward computation.
I0428 19:33:12.305053 23047 net.cpp:200] conv0 needs backward computation.
I0428 19:33:12.305058 23047 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:12.305063 23047 net.cpp:202] mnist does not need backward computation.
I0428 19:33:12.305065 23047 net.cpp:244] This network produces output accuracy
I0428 19:33:12.305070 23047 net.cpp:244] This network produces output loss
I0428 19:33:12.305083 23047 net.cpp:257] Network initialization done.
I0428 19:33:12.305124 23047 solver.cpp:56] Solver scaffolding done.
I0428 19:33:12.305439 23047 caffe.cpp:248] Starting Optimization
I0428 19:33:12.305446 23047 solver.cpp:273] Solving LeNet
I0428 19:33:12.305450 23047 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:12.306427 23047 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:12.314644 23047 blocking_queue.cpp:49] Waiting for data
I0428 19:33:12.383750 23054 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:12.384526 23047 solver.cpp:398]     Test net output #0: accuracy = 0.0817
I0428 19:33:12.384546 23047 solver.cpp:398]     Test net output #1: loss = 2.32107 (* 1 = 2.32107 loss)
I0428 19:33:12.388121 23047 solver.cpp:219] Iteration 0 (0 iter/s, 0.0826452s/100 iters), loss = 2.31115
I0428 19:33:12.388147 23047 solver.cpp:238]     Train net output #0: loss = 2.31115 (* 1 = 2.31115 loss)
I0428 19:33:12.388159 23047 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:12.486856 23047 solver.cpp:219] Iteration 100 (1013.21 iter/s, 0.0986962s/100 iters), loss = 0.765746
I0428 19:33:12.486897 23047 solver.cpp:238]     Train net output #0: loss = 0.765746 (* 1 = 0.765746 loss)
I0428 19:33:12.486904 23047 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:12.586026 23047 solver.cpp:219] Iteration 200 (1008.73 iter/s, 0.0991346s/100 iters), loss = 0.879911
I0428 19:33:12.586067 23047 solver.cpp:238]     Train net output #0: loss = 0.879911 (* 1 = 0.879911 loss)
I0428 19:33:12.586074 23047 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:12.685250 23047 solver.cpp:219] Iteration 300 (1008.35 iter/s, 0.0991724s/100 iters), loss = 0.532356
I0428 19:33:12.685290 23047 solver.cpp:238]     Train net output #0: loss = 0.532356 (* 1 = 0.532356 loss)
I0428 19:33:12.685297 23047 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:12.779814 23047 solver.cpp:219] Iteration 400 (1057.86 iter/s, 0.0945306s/100 iters), loss = 0.725204
I0428 19:33:12.779855 23047 solver.cpp:238]     Train net output #0: loss = 0.725204 (* 1 = 0.725204 loss)
I0428 19:33:12.779860 23047 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:12.872792 23047 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:12.935039 23054 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:12.937202 23047 solver.cpp:398]     Test net output #0: accuracy = 0.8258
I0428 19:33:12.937238 23047 solver.cpp:398]     Test net output #1: loss = 0.661851 (* 1 = 0.661851 loss)
I0428 19:33:12.938146 23047 solver.cpp:219] Iteration 500 (631.731 iter/s, 0.158295s/100 iters), loss = 0.737407
I0428 19:33:12.938184 23047 solver.cpp:238]     Train net output #0: loss = 0.737407 (* 1 = 0.737407 loss)
I0428 19:33:12.938190 23047 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:13.032068 23047 solver.cpp:219] Iteration 600 (1065.07 iter/s, 0.0938906s/100 iters), loss = 0.494201
I0428 19:33:13.032109 23047 solver.cpp:238]     Train net output #0: loss = 0.494201 (* 1 = 0.494201 loss)
I0428 19:33:13.032115 23047 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:13.126569 23047 solver.cpp:219] Iteration 700 (1058.75 iter/s, 0.0944507s/100 iters), loss = 0.891333
I0428 19:33:13.126610 23047 solver.cpp:238]     Train net output #0: loss = 0.891333 (* 1 = 0.891333 loss)
I0428 19:33:13.126616 23047 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:13.221289 23047 solver.cpp:219] Iteration 800 (1056.29 iter/s, 0.094671s/100 iters), loss = 0.724658
I0428 19:33:13.221329 23047 solver.cpp:238]     Train net output #0: loss = 0.724658 (* 1 = 0.724658 loss)
I0428 19:33:13.221335 23047 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:13.316062 23047 solver.cpp:219] Iteration 900 (1055.54 iter/s, 0.0947386s/100 iters), loss = 0.576579
I0428 19:33:13.316102 23047 solver.cpp:238]     Train net output #0: loss = 0.576579 (* 1 = 0.576579 loss)
I0428 19:33:13.316109 23047 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:13.347554 23053 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:13.409266 23047 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:13.410411 23047 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:13.411614 23047 solver.cpp:311] Iteration 1000, loss = 0.793151
I0428 19:33:13.411662 23047 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:13.490439 23054 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:13.493065 23047 solver.cpp:398]     Test net output #0: accuracy = 0.8617
I0428 19:33:13.493095 23047 solver.cpp:398]     Test net output #1: loss = 0.580435 (* 1 = 0.580435 loss)
I0428 19:33:13.493103 23047 solver.cpp:316] Optimization Done.
I0428 19:33:13.493108 23047 caffe.cpp:259] Optimization Done.
