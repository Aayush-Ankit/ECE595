I0428 19:41:01.294414 24721 caffe.cpp:218] Using GPUs 0
I0428 19:41:01.334561 24721 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:01.834316 24721 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test352.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:01.834436 24721 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test352.prototxt
I0428 19:41:01.834718 24721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:01.834730 24721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:01.834795 24721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:41:01.834851 24721 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:01.834936 24721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:01.834959 24721 net.cpp:86] Creating Layer mnist
I0428 19:41:01.834965 24721 net.cpp:382] mnist -> data
I0428 19:41:01.834983 24721 net.cpp:382] mnist -> label
I0428 19:41:01.835974 24721 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:01.838309 24721 net.cpp:124] Setting up mnist
I0428 19:41:01.838323 24721 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:01.838328 24721 net.cpp:131] Top shape: 64 (64)
I0428 19:41:01.838330 24721 net.cpp:139] Memory required for data: 200960
I0428 19:41:01.838336 24721 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:01.838351 24721 net.cpp:86] Creating Layer conv0
I0428 19:41:01.838354 24721 net.cpp:408] conv0 <- data
I0428 19:41:01.838366 24721 net.cpp:382] conv0 -> conv0
I0428 19:41:02.072481 24721 net.cpp:124] Setting up conv0
I0428 19:41:02.072525 24721 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:02.072531 24721 net.cpp:139] Memory required for data: 495872
I0428 19:41:02.072546 24721 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:02.072573 24721 net.cpp:86] Creating Layer pool0
I0428 19:41:02.072578 24721 net.cpp:408] pool0 <- conv0
I0428 19:41:02.072583 24721 net.cpp:382] pool0 -> pool0
I0428 19:41:02.072631 24721 net.cpp:124] Setting up pool0
I0428 19:41:02.072638 24721 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:02.072655 24721 net.cpp:139] Memory required for data: 569600
I0428 19:41:02.072659 24721 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:02.072670 24721 net.cpp:86] Creating Layer conv1
I0428 19:41:02.072674 24721 net.cpp:408] conv1 <- pool0
I0428 19:41:02.072679 24721 net.cpp:382] conv1 -> conv1
I0428 19:41:02.074812 24721 net.cpp:124] Setting up conv1
I0428 19:41:02.074841 24721 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:02.074846 24721 net.cpp:139] Memory required for data: 733440
I0428 19:41:02.074870 24721 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:02.074878 24721 net.cpp:86] Creating Layer pool1
I0428 19:41:02.074882 24721 net.cpp:408] pool1 <- conv1
I0428 19:41:02.074901 24721 net.cpp:382] pool1 -> pool1
I0428 19:41:02.074936 24721 net.cpp:124] Setting up pool1
I0428 19:41:02.074944 24721 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:02.074946 24721 net.cpp:139] Memory required for data: 774400
I0428 19:41:02.074949 24721 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:02.074961 24721 net.cpp:86] Creating Layer ip1
I0428 19:41:02.074967 24721 net.cpp:408] ip1 <- pool1
I0428 19:41:02.074971 24721 net.cpp:382] ip1 -> ip1
I0428 19:41:02.075958 24721 net.cpp:124] Setting up ip1
I0428 19:41:02.075987 24721 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:02.075991 24721 net.cpp:139] Memory required for data: 776960
I0428 19:41:02.076000 24721 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:02.076006 24721 net.cpp:86] Creating Layer relu1
I0428 19:41:02.076010 24721 net.cpp:408] relu1 <- ip1
I0428 19:41:02.076015 24721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:02.076220 24721 net.cpp:124] Setting up relu1
I0428 19:41:02.076230 24721 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:02.076233 24721 net.cpp:139] Memory required for data: 779520
I0428 19:41:02.076236 24721 layer_factory.hpp:77] Creating layer loss
I0428 19:41:02.076242 24721 net.cpp:86] Creating Layer loss
I0428 19:41:02.076246 24721 net.cpp:408] loss <- ip1
I0428 19:41:02.076249 24721 net.cpp:408] loss <- label
I0428 19:41:02.076254 24721 net.cpp:382] loss -> loss
I0428 19:41:02.076273 24721 layer_factory.hpp:77] Creating layer loss
I0428 19:41:02.077162 24721 net.cpp:124] Setting up loss
I0428 19:41:02.077175 24721 net.cpp:131] Top shape: (1)
I0428 19:41:02.077196 24721 net.cpp:134]     with loss weight 1
I0428 19:41:02.077210 24721 net.cpp:139] Memory required for data: 779524
I0428 19:41:02.077214 24721 net.cpp:200] loss needs backward computation.
I0428 19:41:02.077219 24721 net.cpp:200] relu1 needs backward computation.
I0428 19:41:02.077221 24721 net.cpp:200] ip1 needs backward computation.
I0428 19:41:02.077225 24721 net.cpp:200] pool1 needs backward computation.
I0428 19:41:02.077229 24721 net.cpp:200] conv1 needs backward computation.
I0428 19:41:02.077231 24721 net.cpp:200] pool0 needs backward computation.
I0428 19:41:02.077234 24721 net.cpp:200] conv0 needs backward computation.
I0428 19:41:02.077239 24721 net.cpp:202] mnist does not need backward computation.
I0428 19:41:02.077241 24721 net.cpp:244] This network produces output loss
I0428 19:41:02.077250 24721 net.cpp:257] Network initialization done.
I0428 19:41:02.077541 24721 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test352.prototxt
I0428 19:41:02.077597 24721 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:02.077668 24721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:41:02.077736 24721 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:02.077780 24721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:02.077790 24721 net.cpp:86] Creating Layer mnist
I0428 19:41:02.077795 24721 net.cpp:382] mnist -> data
I0428 19:41:02.077802 24721 net.cpp:382] mnist -> label
I0428 19:41:02.077919 24721 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:02.080020 24721 net.cpp:124] Setting up mnist
I0428 19:41:02.080032 24721 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:02.080055 24721 net.cpp:131] Top shape: 100 (100)
I0428 19:41:02.080059 24721 net.cpp:139] Memory required for data: 314000
I0428 19:41:02.080062 24721 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:02.080072 24721 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:02.080075 24721 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:02.080080 24721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:02.080086 24721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:02.080127 24721 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:02.080133 24721 net.cpp:131] Top shape: 100 (100)
I0428 19:41:02.080137 24721 net.cpp:131] Top shape: 100 (100)
I0428 19:41:02.080140 24721 net.cpp:139] Memory required for data: 314800
I0428 19:41:02.080143 24721 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:02.080152 24721 net.cpp:86] Creating Layer conv0
I0428 19:41:02.080154 24721 net.cpp:408] conv0 <- data
I0428 19:41:02.080159 24721 net.cpp:382] conv0 -> conv0
I0428 19:41:02.081218 24721 net.cpp:124] Setting up conv0
I0428 19:41:02.081229 24721 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:02.081249 24721 net.cpp:139] Memory required for data: 775600
I0428 19:41:02.081259 24721 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:02.081264 24721 net.cpp:86] Creating Layer pool0
I0428 19:41:02.081267 24721 net.cpp:408] pool0 <- conv0
I0428 19:41:02.081271 24721 net.cpp:382] pool0 -> pool0
I0428 19:41:02.081305 24721 net.cpp:124] Setting up pool0
I0428 19:41:02.081311 24721 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:02.081315 24721 net.cpp:139] Memory required for data: 890800
I0428 19:41:02.081317 24721 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:02.081324 24721 net.cpp:86] Creating Layer conv1
I0428 19:41:02.081329 24721 net.cpp:408] conv1 <- pool0
I0428 19:41:02.081333 24721 net.cpp:382] conv1 -> conv1
I0428 19:41:02.082962 24721 net.cpp:124] Setting up conv1
I0428 19:41:02.082976 24721 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:02.082996 24721 net.cpp:139] Memory required for data: 1146800
I0428 19:41:02.083005 24721 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:02.083011 24721 net.cpp:86] Creating Layer pool1
I0428 19:41:02.083025 24721 net.cpp:408] pool1 <- conv1
I0428 19:41:02.083031 24721 net.cpp:382] pool1 -> pool1
I0428 19:41:02.083067 24721 net.cpp:124] Setting up pool1
I0428 19:41:02.083075 24721 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:02.083077 24721 net.cpp:139] Memory required for data: 1210800
I0428 19:41:02.083081 24721 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:02.083086 24721 net.cpp:86] Creating Layer ip1
I0428 19:41:02.083089 24721 net.cpp:408] ip1 <- pool1
I0428 19:41:02.083094 24721 net.cpp:382] ip1 -> ip1
I0428 19:41:02.083196 24721 net.cpp:124] Setting up ip1
I0428 19:41:02.083204 24721 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:02.083207 24721 net.cpp:139] Memory required for data: 1214800
I0428 19:41:02.083214 24721 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:02.083220 24721 net.cpp:86] Creating Layer relu1
I0428 19:41:02.083222 24721 net.cpp:408] relu1 <- ip1
I0428 19:41:02.083226 24721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:02.084137 24721 net.cpp:124] Setting up relu1
I0428 19:41:02.084156 24721 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:02.084177 24721 net.cpp:139] Memory required for data: 1218800
I0428 19:41:02.084180 24721 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:41:02.084187 24721 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:41:02.084190 24721 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:41:02.084195 24721 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:41:02.084202 24721 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:41:02.084269 24721 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:41:02.084290 24721 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:02.084295 24721 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:02.084298 24721 net.cpp:139] Memory required for data: 1226800
I0428 19:41:02.084301 24721 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:02.084306 24721 net.cpp:86] Creating Layer accuracy
I0428 19:41:02.084309 24721 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:41:02.084313 24721 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:02.084318 24721 net.cpp:382] accuracy -> accuracy
I0428 19:41:02.084326 24721 net.cpp:124] Setting up accuracy
I0428 19:41:02.084347 24721 net.cpp:131] Top shape: (1)
I0428 19:41:02.084349 24721 net.cpp:139] Memory required for data: 1226804
I0428 19:41:02.084352 24721 layer_factory.hpp:77] Creating layer loss
I0428 19:41:02.084357 24721 net.cpp:86] Creating Layer loss
I0428 19:41:02.084359 24721 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:41:02.084370 24721 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:02.084375 24721 net.cpp:382] loss -> loss
I0428 19:41:02.084404 24721 layer_factory.hpp:77] Creating layer loss
I0428 19:41:02.084641 24721 net.cpp:124] Setting up loss
I0428 19:41:02.084650 24721 net.cpp:131] Top shape: (1)
I0428 19:41:02.084656 24721 net.cpp:134]     with loss weight 1
I0428 19:41:02.084664 24721 net.cpp:139] Memory required for data: 1226808
I0428 19:41:02.084668 24721 net.cpp:200] loss needs backward computation.
I0428 19:41:02.084672 24721 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:02.084676 24721 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:41:02.084681 24721 net.cpp:200] relu1 needs backward computation.
I0428 19:41:02.084683 24721 net.cpp:200] ip1 needs backward computation.
I0428 19:41:02.084686 24721 net.cpp:200] pool1 needs backward computation.
I0428 19:41:02.084698 24721 net.cpp:200] conv1 needs backward computation.
I0428 19:41:02.084702 24721 net.cpp:200] pool0 needs backward computation.
I0428 19:41:02.084705 24721 net.cpp:200] conv0 needs backward computation.
I0428 19:41:02.084717 24721 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:02.084720 24721 net.cpp:202] mnist does not need backward computation.
I0428 19:41:02.084745 24721 net.cpp:244] This network produces output accuracy
I0428 19:41:02.084748 24721 net.cpp:244] This network produces output loss
I0428 19:41:02.084758 24721 net.cpp:257] Network initialization done.
I0428 19:41:02.084806 24721 solver.cpp:56] Solver scaffolding done.
I0428 19:41:02.085050 24721 caffe.cpp:248] Starting Optimization
I0428 19:41:02.085058 24721 solver.cpp:273] Solving LeNet
I0428 19:41:02.085062 24721 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:02.085796 24721 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:02.085886 24721 blocking_queue.cpp:49] Waiting for data
I0428 19:41:02.162669 24728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:02.163049 24721 solver.cpp:398]     Test net output #0: accuracy = 0.0858
I0428 19:41:02.163070 24721 solver.cpp:398]     Test net output #1: loss = 2.33257 (* 1 = 2.33257 loss)
I0428 19:41:02.164566 24721 solver.cpp:219] Iteration 0 (-1.02295e-42 iter/s, 0.0794798s/100 iters), loss = 2.35252
I0428 19:41:02.164618 24721 solver.cpp:238]     Train net output #0: loss = 2.35252 (* 1 = 2.35252 loss)
I0428 19:41:02.164629 24721 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:02.236917 24721 solver.cpp:219] Iteration 100 (1383.29 iter/s, 0.0722916s/100 iters), loss = 0.573641
I0428 19:41:02.236943 24721 solver.cpp:238]     Train net output #0: loss = 0.573641 (* 1 = 0.573641 loss)
I0428 19:41:02.236949 24721 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:02.302913 24721 solver.cpp:219] Iteration 200 (1516.01 iter/s, 0.0659628s/100 iters), loss = 0.282977
I0428 19:41:02.302937 24721 solver.cpp:238]     Train net output #0: loss = 0.282977 (* 1 = 0.282977 loss)
I0428 19:41:02.302945 24721 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:02.360724 24721 solver.cpp:219] Iteration 300 (1730.76 iter/s, 0.057778s/100 iters), loss = 0.260529
I0428 19:41:02.360749 24721 solver.cpp:238]     Train net output #0: loss = 0.260529 (* 1 = 0.260529 loss)
I0428 19:41:02.360770 24721 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:02.419360 24721 solver.cpp:219] Iteration 400 (1706.35 iter/s, 0.0586045s/100 iters), loss = 0.164264
I0428 19:41:02.419384 24721 solver.cpp:238]     Train net output #0: loss = 0.164264 (* 1 = 0.164264 loss)
I0428 19:41:02.419405 24721 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:02.476390 24721 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:02.533119 24728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:02.533516 24721 solver.cpp:398]     Test net output #0: accuracy = 0.9456
I0428 19:41:02.533551 24721 solver.cpp:398]     Test net output #1: loss = 0.172598 (* 1 = 0.172598 loss)
I0428 19:41:02.534232 24721 solver.cpp:219] Iteration 500 (870.802 iter/s, 0.114837s/100 iters), loss = 0.161671
I0428 19:41:02.534278 24721 solver.cpp:238]     Train net output #0: loss = 0.161671 (* 1 = 0.161671 loss)
I0428 19:41:02.534288 24721 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:02.605845 24721 solver.cpp:219] Iteration 600 (1397.15 iter/s, 0.0715745s/100 iters), loss = 0.231544
I0428 19:41:02.605902 24721 solver.cpp:238]     Train net output #0: loss = 0.231544 (* 1 = 0.231544 loss)
I0428 19:41:02.605909 24721 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:02.667240 24721 solver.cpp:219] Iteration 700 (1630.51 iter/s, 0.0613304s/100 iters), loss = 0.153676
I0428 19:41:02.667281 24721 solver.cpp:238]     Train net output #0: loss = 0.153676 (* 1 = 0.153676 loss)
I0428 19:41:02.667287 24721 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:02.724858 24721 solver.cpp:219] Iteration 800 (1736.54 iter/s, 0.0575857s/100 iters), loss = 0.263224
I0428 19:41:02.724884 24721 solver.cpp:238]     Train net output #0: loss = 0.263224 (* 1 = 0.263224 loss)
I0428 19:41:02.724906 24721 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:02.782357 24721 solver.cpp:219] Iteration 900 (1740.16 iter/s, 0.0574659s/100 iters), loss = 0.163675
I0428 19:41:02.782397 24721 solver.cpp:238]     Train net output #0: loss = 0.163675 (* 1 = 0.163675 loss)
I0428 19:41:02.782403 24721 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:02.801826 24727 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:02.838966 24721 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:02.839524 24721 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:02.839941 24721 solver.cpp:311] Iteration 1000, loss = 0.213054
I0428 19:41:02.839959 24721 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:02.918701 24728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:02.919270 24721 solver.cpp:398]     Test net output #0: accuracy = 0.9661
I0428 19:41:02.919311 24721 solver.cpp:398]     Test net output #1: loss = 0.11172 (* 1 = 0.11172 loss)
I0428 19:41:02.919327 24721 solver.cpp:316] Optimization Done.
I0428 19:41:02.919332 24721 caffe.cpp:259] Optimization Done.
