I0428 20:28:51.145697  3439 caffe.cpp:218] Using GPUs 0
I0428 20:28:51.186539  3439 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:51.706987  3439 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1512.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:51.707137  3439 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1512.prototxt
I0428 20:28:51.707541  3439 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:51.707558  3439 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:51.707654  3439 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:51.707728  3439 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:51.707830  3439 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:51.707854  3439 net.cpp:86] Creating Layer mnist
I0428 20:28:51.707862  3439 net.cpp:382] mnist -> data
I0428 20:28:51.707885  3439 net.cpp:382] mnist -> label
I0428 20:28:51.709004  3439 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:51.711464  3439 net.cpp:124] Setting up mnist
I0428 20:28:51.711480  3439 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:51.711486  3439 net.cpp:131] Top shape: 64 (64)
I0428 20:28:51.711490  3439 net.cpp:139] Memory required for data: 200960
I0428 20:28:51.711498  3439 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:51.711514  3439 net.cpp:86] Creating Layer conv0
I0428 20:28:51.711535  3439 net.cpp:408] conv0 <- data
I0428 20:28:51.711547  3439 net.cpp:382] conv0 -> conv0
I0428 20:28:52.002863  3439 net.cpp:124] Setting up conv0
I0428 20:28:52.002895  3439 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:52.002899  3439 net.cpp:139] Memory required for data: 14946560
I0428 20:28:52.002918  3439 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:52.002933  3439 net.cpp:86] Creating Layer pool0
I0428 20:28:52.002938  3439 net.cpp:408] pool0 <- conv0
I0428 20:28:52.002944  3439 net.cpp:382] pool0 -> pool0
I0428 20:28:52.003000  3439 net.cpp:124] Setting up pool0
I0428 20:28:52.003007  3439 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:52.003010  3439 net.cpp:139] Memory required for data: 18632960
I0428 20:28:52.003015  3439 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:52.003027  3439 net.cpp:86] Creating Layer conv1
I0428 20:28:52.003031  3439 net.cpp:408] conv1 <- pool0
I0428 20:28:52.003036  3439 net.cpp:382] conv1 -> conv1
I0428 20:28:52.006230  3439 net.cpp:124] Setting up conv1
I0428 20:28:52.006248  3439 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:52.006253  3439 net.cpp:139] Memory required for data: 18714880
I0428 20:28:52.006263  3439 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:52.006273  3439 net.cpp:86] Creating Layer pool1
I0428 20:28:52.006276  3439 net.cpp:408] pool1 <- conv1
I0428 20:28:52.006283  3439 net.cpp:382] pool1 -> pool1
I0428 20:28:52.006328  3439 net.cpp:124] Setting up pool1
I0428 20:28:52.006335  3439 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:52.006338  3439 net.cpp:139] Memory required for data: 18735360
I0428 20:28:52.006342  3439 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:52.006350  3439 net.cpp:86] Creating Layer ip1
I0428 20:28:52.006355  3439 net.cpp:408] ip1 <- pool1
I0428 20:28:52.006359  3439 net.cpp:382] ip1 -> ip1
I0428 20:28:52.006511  3439 net.cpp:124] Setting up ip1
I0428 20:28:52.006520  3439 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:52.006525  3439 net.cpp:139] Memory required for data: 18748160
I0428 20:28:52.006532  3439 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:52.006539  3439 net.cpp:86] Creating Layer relu1
I0428 20:28:52.006543  3439 net.cpp:408] relu1 <- ip1
I0428 20:28:52.006548  3439 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:52.006747  3439 net.cpp:124] Setting up relu1
I0428 20:28:52.006757  3439 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:52.006760  3439 net.cpp:139] Memory required for data: 18760960
I0428 20:28:52.006764  3439 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:52.006772  3439 net.cpp:86] Creating Layer ip2
I0428 20:28:52.006775  3439 net.cpp:408] ip2 <- ip1
I0428 20:28:52.006781  3439 net.cpp:382] ip2 -> ip2
I0428 20:28:52.006894  3439 net.cpp:124] Setting up ip2
I0428 20:28:52.006902  3439 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:52.006906  3439 net.cpp:139] Memory required for data: 18763520
I0428 20:28:52.006912  3439 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:52.006919  3439 net.cpp:86] Creating Layer relu2
I0428 20:28:52.006923  3439 net.cpp:408] relu2 <- ip2
I0428 20:28:52.006928  3439 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:52.007767  3439 net.cpp:124] Setting up relu2
I0428 20:28:52.007782  3439 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:52.007786  3439 net.cpp:139] Memory required for data: 18766080
I0428 20:28:52.007791  3439 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:52.007799  3439 net.cpp:86] Creating Layer ip3
I0428 20:28:52.007803  3439 net.cpp:408] ip3 <- ip2
I0428 20:28:52.007809  3439 net.cpp:382] ip3 -> ip3
I0428 20:28:52.007925  3439 net.cpp:124] Setting up ip3
I0428 20:28:52.007932  3439 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:52.007936  3439 net.cpp:139] Memory required for data: 18768640
I0428 20:28:52.007946  3439 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:52.007951  3439 net.cpp:86] Creating Layer relu3
I0428 20:28:52.007956  3439 net.cpp:408] relu3 <- ip3
I0428 20:28:52.007961  3439 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:52.008153  3439 net.cpp:124] Setting up relu3
I0428 20:28:52.008163  3439 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:52.008167  3439 net.cpp:139] Memory required for data: 18771200
I0428 20:28:52.008172  3439 layer_factory.hpp:77] Creating layer loss
I0428 20:28:52.008179  3439 net.cpp:86] Creating Layer loss
I0428 20:28:52.008183  3439 net.cpp:408] loss <- ip3
I0428 20:28:52.008188  3439 net.cpp:408] loss <- label
I0428 20:28:52.008194  3439 net.cpp:382] loss -> loss
I0428 20:28:52.008210  3439 layer_factory.hpp:77] Creating layer loss
I0428 20:28:52.008477  3439 net.cpp:124] Setting up loss
I0428 20:28:52.008487  3439 net.cpp:131] Top shape: (1)
I0428 20:28:52.008491  3439 net.cpp:134]     with loss weight 1
I0428 20:28:52.008507  3439 net.cpp:139] Memory required for data: 18771204
I0428 20:28:52.008510  3439 net.cpp:200] loss needs backward computation.
I0428 20:28:52.008514  3439 net.cpp:200] relu3 needs backward computation.
I0428 20:28:52.008518  3439 net.cpp:200] ip3 needs backward computation.
I0428 20:28:52.008523  3439 net.cpp:200] relu2 needs backward computation.
I0428 20:28:52.008527  3439 net.cpp:200] ip2 needs backward computation.
I0428 20:28:52.008530  3439 net.cpp:200] relu1 needs backward computation.
I0428 20:28:52.008533  3439 net.cpp:200] ip1 needs backward computation.
I0428 20:28:52.008538  3439 net.cpp:200] pool1 needs backward computation.
I0428 20:28:52.008540  3439 net.cpp:200] conv1 needs backward computation.
I0428 20:28:52.008544  3439 net.cpp:200] pool0 needs backward computation.
I0428 20:28:52.008548  3439 net.cpp:200] conv0 needs backward computation.
I0428 20:28:52.008553  3439 net.cpp:202] mnist does not need backward computation.
I0428 20:28:52.008556  3439 net.cpp:244] This network produces output loss
I0428 20:28:52.008568  3439 net.cpp:257] Network initialization done.
I0428 20:28:52.008960  3439 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1512.prototxt
I0428 20:28:52.008993  3439 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:52.009101  3439 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:52.009196  3439 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:52.009248  3439 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:52.009260  3439 net.cpp:86] Creating Layer mnist
I0428 20:28:52.009266  3439 net.cpp:382] mnist -> data
I0428 20:28:52.009275  3439 net.cpp:382] mnist -> label
I0428 20:28:52.009374  3439 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:52.011551  3439 net.cpp:124] Setting up mnist
I0428 20:28:52.011566  3439 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:52.011572  3439 net.cpp:131] Top shape: 100 (100)
I0428 20:28:52.011576  3439 net.cpp:139] Memory required for data: 314000
I0428 20:28:52.011580  3439 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:52.011598  3439 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:52.011602  3439 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:52.011608  3439 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:52.011616  3439 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:52.011687  3439 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:52.011694  3439 net.cpp:131] Top shape: 100 (100)
I0428 20:28:52.011698  3439 net.cpp:131] Top shape: 100 (100)
I0428 20:28:52.011701  3439 net.cpp:139] Memory required for data: 314800
I0428 20:28:52.011705  3439 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:52.011715  3439 net.cpp:86] Creating Layer conv0
I0428 20:28:52.011719  3439 net.cpp:408] conv0 <- data
I0428 20:28:52.011725  3439 net.cpp:382] conv0 -> conv0
I0428 20:28:52.013639  3439 net.cpp:124] Setting up conv0
I0428 20:28:52.013656  3439 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:52.013661  3439 net.cpp:139] Memory required for data: 23354800
I0428 20:28:52.013672  3439 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:52.013680  3439 net.cpp:86] Creating Layer pool0
I0428 20:28:52.013684  3439 net.cpp:408] pool0 <- conv0
I0428 20:28:52.013690  3439 net.cpp:382] pool0 -> pool0
I0428 20:28:52.013734  3439 net.cpp:124] Setting up pool0
I0428 20:28:52.013741  3439 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:52.013744  3439 net.cpp:139] Memory required for data: 29114800
I0428 20:28:52.013747  3439 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:52.013757  3439 net.cpp:86] Creating Layer conv1
I0428 20:28:52.013761  3439 net.cpp:408] conv1 <- pool0
I0428 20:28:52.013767  3439 net.cpp:382] conv1 -> conv1
I0428 20:28:52.015525  3439 net.cpp:124] Setting up conv1
I0428 20:28:52.015542  3439 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:52.015545  3439 net.cpp:139] Memory required for data: 29242800
I0428 20:28:52.015557  3439 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:52.015563  3439 net.cpp:86] Creating Layer pool1
I0428 20:28:52.015568  3439 net.cpp:408] pool1 <- conv1
I0428 20:28:52.015574  3439 net.cpp:382] pool1 -> pool1
I0428 20:28:52.015616  3439 net.cpp:124] Setting up pool1
I0428 20:28:52.015624  3439 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:52.015627  3439 net.cpp:139] Memory required for data: 29274800
I0428 20:28:52.015640  3439 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:52.015647  3439 net.cpp:86] Creating Layer ip1
I0428 20:28:52.015651  3439 net.cpp:408] ip1 <- pool1
I0428 20:28:52.015657  3439 net.cpp:382] ip1 -> ip1
I0428 20:28:52.015800  3439 net.cpp:124] Setting up ip1
I0428 20:28:52.015812  3439 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:52.015828  3439 net.cpp:139] Memory required for data: 29294800
I0428 20:28:52.015837  3439 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:52.015843  3439 net.cpp:86] Creating Layer relu1
I0428 20:28:52.015848  3439 net.cpp:408] relu1 <- ip1
I0428 20:28:52.015853  3439 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:52.016047  3439 net.cpp:124] Setting up relu1
I0428 20:28:52.016057  3439 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:52.016062  3439 net.cpp:139] Memory required for data: 29314800
I0428 20:28:52.016067  3439 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:52.016074  3439 net.cpp:86] Creating Layer ip2
I0428 20:28:52.016082  3439 net.cpp:408] ip2 <- ip1
I0428 20:28:52.016088  3439 net.cpp:382] ip2 -> ip2
I0428 20:28:52.016228  3439 net.cpp:124] Setting up ip2
I0428 20:28:52.016237  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.016240  3439 net.cpp:139] Memory required for data: 29318800
I0428 20:28:52.016247  3439 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:52.016253  3439 net.cpp:86] Creating Layer relu2
I0428 20:28:52.016258  3439 net.cpp:408] relu2 <- ip2
I0428 20:28:52.016263  3439 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:52.016480  3439 net.cpp:124] Setting up relu2
I0428 20:28:52.016490  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.016494  3439 net.cpp:139] Memory required for data: 29322800
I0428 20:28:52.016497  3439 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:52.016505  3439 net.cpp:86] Creating Layer ip3
I0428 20:28:52.016508  3439 net.cpp:408] ip3 <- ip2
I0428 20:28:52.016515  3439 net.cpp:382] ip3 -> ip3
I0428 20:28:52.016624  3439 net.cpp:124] Setting up ip3
I0428 20:28:52.016633  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.016635  3439 net.cpp:139] Memory required for data: 29326800
I0428 20:28:52.016645  3439 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:52.016650  3439 net.cpp:86] Creating Layer relu3
I0428 20:28:52.016654  3439 net.cpp:408] relu3 <- ip3
I0428 20:28:52.016659  3439 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:52.017592  3439 net.cpp:124] Setting up relu3
I0428 20:28:52.017607  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.017611  3439 net.cpp:139] Memory required for data: 29330800
I0428 20:28:52.017616  3439 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:52.017622  3439 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:52.017627  3439 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:52.017632  3439 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:52.017639  3439 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:52.017683  3439 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:52.017689  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.017694  3439 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:52.017698  3439 net.cpp:139] Memory required for data: 29338800
I0428 20:28:52.017701  3439 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:52.017707  3439 net.cpp:86] Creating Layer accuracy
I0428 20:28:52.017711  3439 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:52.017716  3439 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:52.017721  3439 net.cpp:382] accuracy -> accuracy
I0428 20:28:52.017731  3439 net.cpp:124] Setting up accuracy
I0428 20:28:52.017736  3439 net.cpp:131] Top shape: (1)
I0428 20:28:52.017740  3439 net.cpp:139] Memory required for data: 29338804
I0428 20:28:52.017745  3439 layer_factory.hpp:77] Creating layer loss
I0428 20:28:52.017750  3439 net.cpp:86] Creating Layer loss
I0428 20:28:52.017752  3439 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:52.017757  3439 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:52.017762  3439 net.cpp:382] loss -> loss
I0428 20:28:52.017771  3439 layer_factory.hpp:77] Creating layer loss
I0428 20:28:52.018036  3439 net.cpp:124] Setting up loss
I0428 20:28:52.018048  3439 net.cpp:131] Top shape: (1)
I0428 20:28:52.018052  3439 net.cpp:134]     with loss weight 1
I0428 20:28:52.018072  3439 net.cpp:139] Memory required for data: 29338808
I0428 20:28:52.018080  3439 net.cpp:200] loss needs backward computation.
I0428 20:28:52.018085  3439 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:52.018090  3439 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:52.018095  3439 net.cpp:200] relu3 needs backward computation.
I0428 20:28:52.018098  3439 net.cpp:200] ip3 needs backward computation.
I0428 20:28:52.018102  3439 net.cpp:200] relu2 needs backward computation.
I0428 20:28:52.018106  3439 net.cpp:200] ip2 needs backward computation.
I0428 20:28:52.018110  3439 net.cpp:200] relu1 needs backward computation.
I0428 20:28:52.018113  3439 net.cpp:200] ip1 needs backward computation.
I0428 20:28:52.018117  3439 net.cpp:200] pool1 needs backward computation.
I0428 20:28:52.018121  3439 net.cpp:200] conv1 needs backward computation.
I0428 20:28:52.018126  3439 net.cpp:200] pool0 needs backward computation.
I0428 20:28:52.018129  3439 net.cpp:200] conv0 needs backward computation.
I0428 20:28:52.018134  3439 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:52.018139  3439 net.cpp:202] mnist does not need backward computation.
I0428 20:28:52.018151  3439 net.cpp:244] This network produces output accuracy
I0428 20:28:52.018154  3439 net.cpp:244] This network produces output loss
I0428 20:28:52.018167  3439 net.cpp:257] Network initialization done.
I0428 20:28:52.018218  3439 solver.cpp:56] Solver scaffolding done.
I0428 20:28:52.018646  3439 caffe.cpp:248] Starting Optimization
I0428 20:28:52.018651  3439 solver.cpp:273] Solving LeNet
I0428 20:28:52.018656  3439 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:52.019644  3439 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:52.117681  3446 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:52.120342  3439 solver.cpp:398]     Test net output #0: accuracy = 0.1077
I0428 20:28:52.120362  3439 solver.cpp:398]     Test net output #1: loss = 2.30235 (* 1 = 2.30235 loss)
I0428 20:28:52.124778  3439 solver.cpp:219] Iteration 0 (2.14578 iter/s, 0.106092s/100 iters), loss = 2.3033
I0428 20:28:52.124802  3439 solver.cpp:238]     Train net output #0: loss = 2.3033 (* 1 = 2.3033 loss)
I0428 20:28:52.124824  3439 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:52.343302  3439 solver.cpp:219] Iteration 100 (457.709 iter/s, 0.21848s/100 iters), loss = 1.25902
I0428 20:28:52.343355  3439 solver.cpp:238]     Train net output #0: loss = 1.25902 (* 1 = 1.25902 loss)
I0428 20:28:52.343367  3439 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:52.564388  3439 solver.cpp:219] Iteration 200 (452.441 iter/s, 0.221023s/100 iters), loss = 0.464138
I0428 20:28:52.564440  3439 solver.cpp:238]     Train net output #0: loss = 0.464138 (* 1 = 0.464138 loss)
I0428 20:28:52.564453  3439 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:28:52.778949  3439 solver.cpp:219] Iteration 300 (466.202 iter/s, 0.214499s/100 iters), loss = 0.859836
I0428 20:28:52.778987  3439 solver.cpp:238]     Train net output #0: loss = 0.859836 (* 1 = 0.859836 loss)
I0428 20:28:52.778997  3439 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:28:52.987748  3439 solver.cpp:219] Iteration 400 (479.059 iter/s, 0.208742s/100 iters), loss = 0.484487
I0428 20:28:52.987802  3439 solver.cpp:238]     Train net output #0: loss = 0.484487 (* 1 = 0.484487 loss)
I0428 20:28:52.987814  3439 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:28:53.204644  3439 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:28:53.304335  3446 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:53.307142  3439 solver.cpp:398]     Test net output #0: accuracy = 0.8505
I0428 20:28:53.307169  3439 solver.cpp:398]     Test net output #1: loss = 0.411816 (* 1 = 0.411816 loss)
I0428 20:28:53.309118  3439 solver.cpp:219] Iteration 500 (311.244 iter/s, 0.321291s/100 iters), loss = 0.295456
I0428 20:28:53.309145  3439 solver.cpp:238]     Train net output #0: loss = 0.295456 (* 1 = 0.295456 loss)
I0428 20:28:53.309173  3439 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:28:53.520772  3439 solver.cpp:219] Iteration 600 (472.566 iter/s, 0.211611s/100 iters), loss = 0.418121
I0428 20:28:53.520817  3439 solver.cpp:238]     Train net output #0: loss = 0.418121 (* 1 = 0.418121 loss)
I0428 20:28:53.520828  3439 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:28:53.729679  3439 solver.cpp:219] Iteration 700 (478.81 iter/s, 0.208851s/100 iters), loss = 0.506561
I0428 20:28:53.729732  3439 solver.cpp:238]     Train net output #0: loss = 0.506561 (* 1 = 0.506561 loss)
I0428 20:28:53.729746  3439 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:28:53.948976  3439 solver.cpp:219] Iteration 800 (456.142 iter/s, 0.21923s/100 iters), loss = 0.363764
I0428 20:28:53.949012  3439 solver.cpp:238]     Train net output #0: loss = 0.363764 (* 1 = 0.363764 loss)
I0428 20:28:53.949021  3439 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:28:54.166213  3439 solver.cpp:219] Iteration 900 (460.445 iter/s, 0.217181s/100 iters), loss = 0.431289
I0428 20:28:54.166259  3439 solver.cpp:238]     Train net output #0: loss = 0.431289 (* 1 = 0.431289 loss)
I0428 20:28:54.166270  3439 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:28:54.238320  3445 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:54.381304  3439 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:28:54.383273  3439 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:28:54.384649  3439 solver.cpp:311] Iteration 1000, loss = 0.392727
I0428 20:28:54.384686  3439 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:28:54.491647  3446 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:54.495209  3439 solver.cpp:398]     Test net output #0: accuracy = 0.8747
I0428 20:28:54.495234  3439 solver.cpp:398]     Test net output #1: loss = 0.321867 (* 1 = 0.321867 loss)
I0428 20:28:54.495241  3439 solver.cpp:316] Optimization Done.
I0428 20:28:54.495244  3439 caffe.cpp:259] Optimization Done.
