I0428 19:50:41.896185 27076 caffe.cpp:218] Using GPUs 0
I0428 19:50:41.926002 27076 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:42.431344 27076 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test612.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:42.431471 27076 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test612.prototxt
I0428 19:50:42.431864 27076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:42.431880 27076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:42.431974 27076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:42.432045 27076 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:42.432138 27076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:42.432160 27076 net.cpp:86] Creating Layer mnist
I0428 19:50:42.432168 27076 net.cpp:382] mnist -> data
I0428 19:50:42.432189 27076 net.cpp:382] mnist -> label
I0428 19:50:42.433239 27076 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:42.435614 27076 net.cpp:124] Setting up mnist
I0428 19:50:42.435631 27076 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:42.435637 27076 net.cpp:131] Top shape: 64 (64)
I0428 19:50:42.435642 27076 net.cpp:139] Memory required for data: 200960
I0428 19:50:42.435647 27076 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:42.435662 27076 net.cpp:86] Creating Layer conv0
I0428 19:50:42.435683 27076 net.cpp:408] conv0 <- data
I0428 19:50:42.435694 27076 net.cpp:382] conv0 -> conv0
I0428 19:50:42.742626 27076 net.cpp:124] Setting up conv0
I0428 19:50:42.742661 27076 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:42.742667 27076 net.cpp:139] Memory required for data: 938240
I0428 19:50:42.742687 27076 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:42.742703 27076 net.cpp:86] Creating Layer pool0
I0428 19:50:42.742708 27076 net.cpp:408] pool0 <- conv0
I0428 19:50:42.742717 27076 net.cpp:382] pool0 -> pool0
I0428 19:50:42.742779 27076 net.cpp:124] Setting up pool0
I0428 19:50:42.742789 27076 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:42.742794 27076 net.cpp:139] Memory required for data: 1122560
I0428 19:50:42.742799 27076 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:42.742813 27076 net.cpp:86] Creating Layer conv1
I0428 19:50:42.742820 27076 net.cpp:408] conv1 <- pool0
I0428 19:50:42.742826 27076 net.cpp:382] conv1 -> conv1
I0428 19:50:42.746454 27076 net.cpp:124] Setting up conv1
I0428 19:50:42.746476 27076 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:42.746481 27076 net.cpp:139] Memory required for data: 1286400
I0428 19:50:42.746493 27076 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:42.746505 27076 net.cpp:86] Creating Layer pool1
I0428 19:50:42.746510 27076 net.cpp:408] pool1 <- conv1
I0428 19:50:42.746516 27076 net.cpp:382] pool1 -> pool1
I0428 19:50:42.746569 27076 net.cpp:124] Setting up pool1
I0428 19:50:42.746579 27076 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:42.746584 27076 net.cpp:139] Memory required for data: 1327360
I0428 19:50:42.746588 27076 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:42.746598 27076 net.cpp:86] Creating Layer ip1
I0428 19:50:42.746605 27076 net.cpp:408] ip1 <- pool1
I0428 19:50:42.746613 27076 net.cpp:382] ip1 -> ip1
I0428 19:50:42.746781 27076 net.cpp:124] Setting up ip1
I0428 19:50:42.746791 27076 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:42.746795 27076 net.cpp:139] Memory required for data: 1333760
I0428 19:50:42.746805 27076 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:42.746814 27076 net.cpp:86] Creating Layer relu1
I0428 19:50:42.746819 27076 net.cpp:408] relu1 <- ip1
I0428 19:50:42.746824 27076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:42.747057 27076 net.cpp:124] Setting up relu1
I0428 19:50:42.747069 27076 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:42.747073 27076 net.cpp:139] Memory required for data: 1340160
I0428 19:50:42.747078 27076 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:42.747087 27076 net.cpp:86] Creating Layer ip2
I0428 19:50:42.747093 27076 net.cpp:408] ip2 <- ip1
I0428 19:50:42.747099 27076 net.cpp:382] ip2 -> ip2
I0428 19:50:42.747246 27076 net.cpp:124] Setting up ip2
I0428 19:50:42.747256 27076 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:42.747261 27076 net.cpp:139] Memory required for data: 1352960
I0428 19:50:42.747268 27076 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:42.747277 27076 net.cpp:86] Creating Layer relu2
I0428 19:50:42.747283 27076 net.cpp:408] relu2 <- ip2
I0428 19:50:42.747289 27076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:42.748281 27076 net.cpp:124] Setting up relu2
I0428 19:50:42.748298 27076 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:42.748304 27076 net.cpp:139] Memory required for data: 1365760
I0428 19:50:42.748311 27076 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:42.748319 27076 net.cpp:86] Creating Layer ip3
I0428 19:50:42.748325 27076 net.cpp:408] ip3 <- ip2
I0428 19:50:42.748333 27076 net.cpp:382] ip3 -> ip3
I0428 19:50:42.748477 27076 net.cpp:124] Setting up ip3
I0428 19:50:42.748488 27076 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:42.748494 27076 net.cpp:139] Memory required for data: 1368320
I0428 19:50:42.748507 27076 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:42.748514 27076 net.cpp:86] Creating Layer relu3
I0428 19:50:42.748519 27076 net.cpp:408] relu3 <- ip3
I0428 19:50:42.748525 27076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:42.748759 27076 net.cpp:124] Setting up relu3
I0428 19:50:42.748772 27076 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:42.748778 27076 net.cpp:139] Memory required for data: 1370880
I0428 19:50:42.748783 27076 layer_factory.hpp:77] Creating layer loss
I0428 19:50:42.748790 27076 net.cpp:86] Creating Layer loss
I0428 19:50:42.748795 27076 net.cpp:408] loss <- ip3
I0428 19:50:42.748800 27076 net.cpp:408] loss <- label
I0428 19:50:42.748808 27076 net.cpp:382] loss -> loss
I0428 19:50:42.748847 27076 layer_factory.hpp:77] Creating layer loss
I0428 19:50:42.749176 27076 net.cpp:124] Setting up loss
I0428 19:50:42.749187 27076 net.cpp:131] Top shape: (1)
I0428 19:50:42.749192 27076 net.cpp:134]     with loss weight 1
I0428 19:50:42.749212 27076 net.cpp:139] Memory required for data: 1370884
I0428 19:50:42.749217 27076 net.cpp:200] loss needs backward computation.
I0428 19:50:42.749222 27076 net.cpp:200] relu3 needs backward computation.
I0428 19:50:42.749228 27076 net.cpp:200] ip3 needs backward computation.
I0428 19:50:42.749231 27076 net.cpp:200] relu2 needs backward computation.
I0428 19:50:42.749234 27076 net.cpp:200] ip2 needs backward computation.
I0428 19:50:42.749238 27076 net.cpp:200] relu1 needs backward computation.
I0428 19:50:42.749243 27076 net.cpp:200] ip1 needs backward computation.
I0428 19:50:42.749246 27076 net.cpp:200] pool1 needs backward computation.
I0428 19:50:42.749250 27076 net.cpp:200] conv1 needs backward computation.
I0428 19:50:42.749254 27076 net.cpp:200] pool0 needs backward computation.
I0428 19:50:42.749258 27076 net.cpp:200] conv0 needs backward computation.
I0428 19:50:42.749264 27076 net.cpp:202] mnist does not need backward computation.
I0428 19:50:42.749267 27076 net.cpp:244] This network produces output loss
I0428 19:50:42.749279 27076 net.cpp:257] Network initialization done.
I0428 19:50:42.749712 27076 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test612.prototxt
I0428 19:50:42.749750 27076 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:42.749871 27076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:42.749976 27076 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:42.750035 27076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:42.750051 27076 net.cpp:86] Creating Layer mnist
I0428 19:50:42.750056 27076 net.cpp:382] mnist -> data
I0428 19:50:42.750067 27076 net.cpp:382] mnist -> label
I0428 19:50:42.750182 27076 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:42.752570 27076 net.cpp:124] Setting up mnist
I0428 19:50:42.752588 27076 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:42.752595 27076 net.cpp:131] Top shape: 100 (100)
I0428 19:50:42.752599 27076 net.cpp:139] Memory required for data: 314000
I0428 19:50:42.752604 27076 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:42.752631 27076 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:42.752637 27076 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:42.752645 27076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:42.752653 27076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:42.752708 27076 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:42.752718 27076 net.cpp:131] Top shape: 100 (100)
I0428 19:50:42.752723 27076 net.cpp:131] Top shape: 100 (100)
I0428 19:50:42.752727 27076 net.cpp:139] Memory required for data: 314800
I0428 19:50:42.752732 27076 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:42.752743 27076 net.cpp:86] Creating Layer conv0
I0428 19:50:42.752746 27076 net.cpp:408] conv0 <- data
I0428 19:50:42.752753 27076 net.cpp:382] conv0 -> conv0
I0428 19:50:42.754847 27076 net.cpp:124] Setting up conv0
I0428 19:50:42.754865 27076 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:42.754870 27076 net.cpp:139] Memory required for data: 1466800
I0428 19:50:42.754884 27076 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:42.754891 27076 net.cpp:86] Creating Layer pool0
I0428 19:50:42.754896 27076 net.cpp:408] pool0 <- conv0
I0428 19:50:42.754904 27076 net.cpp:382] pool0 -> pool0
I0428 19:50:42.754951 27076 net.cpp:124] Setting up pool0
I0428 19:50:42.754959 27076 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:42.754963 27076 net.cpp:139] Memory required for data: 1754800
I0428 19:50:42.754967 27076 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:42.754978 27076 net.cpp:86] Creating Layer conv1
I0428 19:50:42.754982 27076 net.cpp:408] conv1 <- pool0
I0428 19:50:42.754989 27076 net.cpp:382] conv1 -> conv1
I0428 19:50:42.757560 27076 net.cpp:124] Setting up conv1
I0428 19:50:42.757578 27076 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:42.757583 27076 net.cpp:139] Memory required for data: 2010800
I0428 19:50:42.757594 27076 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:42.757603 27076 net.cpp:86] Creating Layer pool1
I0428 19:50:42.757608 27076 net.cpp:408] pool1 <- conv1
I0428 19:50:42.757614 27076 net.cpp:382] pool1 -> pool1
I0428 19:50:42.757671 27076 net.cpp:124] Setting up pool1
I0428 19:50:42.757679 27076 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:42.757683 27076 net.cpp:139] Memory required for data: 2074800
I0428 19:50:42.757688 27076 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:42.757695 27076 net.cpp:86] Creating Layer ip1
I0428 19:50:42.757700 27076 net.cpp:408] ip1 <- pool1
I0428 19:50:42.757706 27076 net.cpp:382] ip1 -> ip1
I0428 19:50:42.757872 27076 net.cpp:124] Setting up ip1
I0428 19:50:42.757884 27076 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:42.757901 27076 net.cpp:139] Memory required for data: 2084800
I0428 19:50:42.757912 27076 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:42.757920 27076 net.cpp:86] Creating Layer relu1
I0428 19:50:42.757923 27076 net.cpp:408] relu1 <- ip1
I0428 19:50:42.757930 27076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:42.758165 27076 net.cpp:124] Setting up relu1
I0428 19:50:42.758177 27076 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:42.758183 27076 net.cpp:139] Memory required for data: 2094800
I0428 19:50:42.758186 27076 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:42.758196 27076 net.cpp:86] Creating Layer ip2
I0428 19:50:42.758200 27076 net.cpp:408] ip2 <- ip1
I0428 19:50:42.758208 27076 net.cpp:382] ip2 -> ip2
I0428 19:50:42.758348 27076 net.cpp:124] Setting up ip2
I0428 19:50:42.758358 27076 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:42.758363 27076 net.cpp:139] Memory required for data: 2114800
I0428 19:50:42.758369 27076 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:42.758375 27076 net.cpp:86] Creating Layer relu2
I0428 19:50:42.758379 27076 net.cpp:408] relu2 <- ip2
I0428 19:50:42.758385 27076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:42.758630 27076 net.cpp:124] Setting up relu2
I0428 19:50:42.758641 27076 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:42.758644 27076 net.cpp:139] Memory required for data: 2134800
I0428 19:50:42.758649 27076 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:42.758656 27076 net.cpp:86] Creating Layer ip3
I0428 19:50:42.758661 27076 net.cpp:408] ip3 <- ip2
I0428 19:50:42.758667 27076 net.cpp:382] ip3 -> ip3
I0428 19:50:42.758826 27076 net.cpp:124] Setting up ip3
I0428 19:50:42.758836 27076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:42.758841 27076 net.cpp:139] Memory required for data: 2138800
I0428 19:50:42.758851 27076 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:42.758857 27076 net.cpp:86] Creating Layer relu3
I0428 19:50:42.758862 27076 net.cpp:408] relu3 <- ip3
I0428 19:50:42.758867 27076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:42.759948 27076 net.cpp:124] Setting up relu3
I0428 19:50:42.759963 27076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:42.759968 27076 net.cpp:139] Memory required for data: 2142800
I0428 19:50:42.759973 27076 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:42.759979 27076 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:42.759984 27076 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:42.759991 27076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:42.760001 27076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:42.760051 27076 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:42.760057 27076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:42.760063 27076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:42.760068 27076 net.cpp:139] Memory required for data: 2150800
I0428 19:50:42.760072 27076 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:42.760079 27076 net.cpp:86] Creating Layer accuracy
I0428 19:50:42.760084 27076 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:42.760089 27076 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:42.760095 27076 net.cpp:382] accuracy -> accuracy
I0428 19:50:42.760104 27076 net.cpp:124] Setting up accuracy
I0428 19:50:42.760110 27076 net.cpp:131] Top shape: (1)
I0428 19:50:42.760113 27076 net.cpp:139] Memory required for data: 2150804
I0428 19:50:42.760118 27076 layer_factory.hpp:77] Creating layer loss
I0428 19:50:42.760123 27076 net.cpp:86] Creating Layer loss
I0428 19:50:42.760128 27076 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:42.760133 27076 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:42.760138 27076 net.cpp:382] loss -> loss
I0428 19:50:42.760146 27076 layer_factory.hpp:77] Creating layer loss
I0428 19:50:42.760452 27076 net.cpp:124] Setting up loss
I0428 19:50:42.760465 27076 net.cpp:131] Top shape: (1)
I0428 19:50:42.760470 27076 net.cpp:134]     with loss weight 1
I0428 19:50:42.760479 27076 net.cpp:139] Memory required for data: 2150808
I0428 19:50:42.760496 27076 net.cpp:200] loss needs backward computation.
I0428 19:50:42.760502 27076 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:42.760509 27076 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:42.760514 27076 net.cpp:200] relu3 needs backward computation.
I0428 19:50:42.760517 27076 net.cpp:200] ip3 needs backward computation.
I0428 19:50:42.760521 27076 net.cpp:200] relu2 needs backward computation.
I0428 19:50:42.760525 27076 net.cpp:200] ip2 needs backward computation.
I0428 19:50:42.760529 27076 net.cpp:200] relu1 needs backward computation.
I0428 19:50:42.760534 27076 net.cpp:200] ip1 needs backward computation.
I0428 19:50:42.760538 27076 net.cpp:200] pool1 needs backward computation.
I0428 19:50:42.760543 27076 net.cpp:200] conv1 needs backward computation.
I0428 19:50:42.760547 27076 net.cpp:200] pool0 needs backward computation.
I0428 19:50:42.760552 27076 net.cpp:200] conv0 needs backward computation.
I0428 19:50:42.760565 27076 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:42.760571 27076 net.cpp:202] mnist does not need backward computation.
I0428 19:50:42.760576 27076 net.cpp:244] This network produces output accuracy
I0428 19:50:42.760581 27076 net.cpp:244] This network produces output loss
I0428 19:50:42.760596 27076 net.cpp:257] Network initialization done.
I0428 19:50:42.760651 27076 solver.cpp:56] Solver scaffolding done.
I0428 19:50:42.761165 27076 caffe.cpp:248] Starting Optimization
I0428 19:50:42.761174 27076 solver.cpp:273] Solving LeNet
I0428 19:50:42.761178 27076 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:42.762127 27076 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:42.766037 27076 blocking_queue.cpp:49] Waiting for data
I0428 19:50:42.835825 27083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:42.836329 27076 solver.cpp:398]     Test net output #0: accuracy = 0.1313
I0428 19:50:42.836350 27076 solver.cpp:398]     Test net output #1: loss = 2.29735 (* 1 = 2.29735 loss)
I0428 19:50:42.838201 27076 solver.cpp:219] Iteration 0 (0 iter/s, 0.0769874s/100 iters), loss = 2.29026
I0428 19:50:42.838225 27076 solver.cpp:238]     Train net output #0: loss = 2.29026 (* 1 = 2.29026 loss)
I0428 19:50:42.838238 27076 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:42.937887 27076 solver.cpp:219] Iteration 100 (1003.52 iter/s, 0.0996495s/100 iters), loss = 0.846987
I0428 19:50:42.937918 27076 solver.cpp:238]     Train net output #0: loss = 0.846987 (* 1 = 0.846987 loss)
I0428 19:50:42.937927 27076 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:43.038688 27076 solver.cpp:219] Iteration 200 (992.472 iter/s, 0.100759s/100 iters), loss = 0.743231
I0428 19:50:43.038719 27076 solver.cpp:238]     Train net output #0: loss = 0.743231 (* 1 = 0.743231 loss)
I0428 19:50:43.038727 27076 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:43.139773 27076 solver.cpp:219] Iteration 300 (989.674 iter/s, 0.101043s/100 iters), loss = 0.460827
I0428 19:50:43.139803 27076 solver.cpp:238]     Train net output #0: loss = 0.460827 (* 1 = 0.460827 loss)
I0428 19:50:43.139811 27076 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:43.225829 27076 solver.cpp:219] Iteration 400 (1162.57 iter/s, 0.086016s/100 iters), loss = 0.701187
I0428 19:50:43.225862 27076 solver.cpp:238]     Train net output #0: loss = 0.701187 (* 1 = 0.701187 loss)
I0428 19:50:43.225868 27076 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:43.304695 27076 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:43.357421 27083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:43.357892 27076 solver.cpp:398]     Test net output #0: accuracy = 0.8626
I0428 19:50:43.357910 27076 solver.cpp:398]     Test net output #1: loss = 0.416476 (* 1 = 0.416476 loss)
I0428 19:50:43.358654 27076 solver.cpp:219] Iteration 500 (753.114 iter/s, 0.132782s/100 iters), loss = 0.487719
I0428 19:50:43.358691 27076 solver.cpp:238]     Train net output #0: loss = 0.487719 (* 1 = 0.487719 loss)
I0428 19:50:43.358714 27076 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:43.435678 27076 solver.cpp:219] Iteration 600 (1298.83 iter/s, 0.0769925s/100 iters), loss = 0.271387
I0428 19:50:43.435719 27076 solver.cpp:238]     Train net output #0: loss = 0.271387 (* 1 = 0.271387 loss)
I0428 19:50:43.435724 27076 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:43.518077 27076 solver.cpp:219] Iteration 700 (1214.33 iter/s, 0.0823501s/100 iters), loss = 0.152135
I0428 19:50:43.518117 27076 solver.cpp:238]     Train net output #0: loss = 0.152135 (* 1 = 0.152135 loss)
I0428 19:50:43.518123 27076 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:43.597523 27076 solver.cpp:219] Iteration 800 (1259.27 iter/s, 0.0794114s/100 iters), loss = 0.30131
I0428 19:50:43.597563 27076 solver.cpp:238]     Train net output #0: loss = 0.30131 (* 1 = 0.30131 loss)
I0428 19:50:43.597568 27076 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:43.678412 27076 solver.cpp:219] Iteration 900 (1236.76 iter/s, 0.0808562s/100 iters), loss = 0.193187
I0428 19:50:43.678436 27076 solver.cpp:238]     Train net output #0: loss = 0.193187 (* 1 = 0.193187 loss)
I0428 19:50:43.678442 27076 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:43.704450 27082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:43.756422 27076 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:43.757236 27076 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:43.757678 27076 solver.cpp:311] Iteration 1000, loss = 0.13685
I0428 19:50:43.757692 27076 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:43.810487 27083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:43.811002 27076 solver.cpp:398]     Test net output #0: accuracy = 0.964
I0428 19:50:43.811035 27076 solver.cpp:398]     Test net output #1: loss = 0.115925 (* 1 = 0.115925 loss)
I0428 19:50:43.811040 27076 solver.cpp:316] Optimization Done.
I0428 19:50:43.811043 27076 caffe.cpp:259] Optimization Done.
