I0428 19:40:45.407568 24627 caffe.cpp:218] Using GPUs 0
I0428 19:40:45.442963 24627 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:45.909685 24627 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test344.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:45.909838 24627 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test344.prototxt
I0428 19:40:45.910185 24627 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:45.910207 24627 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:45.910295 24627 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:45.910385 24627 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:45.910492 24627 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:45.910518 24627 net.cpp:86] Creating Layer mnist
I0428 19:40:45.910529 24627 net.cpp:382] mnist -> data
I0428 19:40:45.910554 24627 net.cpp:382] mnist -> label
I0428 19:40:45.911602 24627 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:45.913851 24627 net.cpp:124] Setting up mnist
I0428 19:40:45.913884 24627 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:45.913893 24627 net.cpp:131] Top shape: 64 (64)
I0428 19:40:45.913898 24627 net.cpp:139] Memory required for data: 200960
I0428 19:40:45.913908 24627 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:45.913928 24627 net.cpp:86] Creating Layer conv0
I0428 19:40:45.913950 24627 net.cpp:408] conv0 <- data
I0428 19:40:45.913969 24627 net.cpp:382] conv0 -> conv0
I0428 19:40:46.163998 24627 net.cpp:124] Setting up conv0
I0428 19:40:46.164024 24627 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:46.164031 24627 net.cpp:139] Memory required for data: 495872
I0428 19:40:46.164064 24627 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:46.164083 24627 net.cpp:86] Creating Layer pool0
I0428 19:40:46.164096 24627 net.cpp:408] pool0 <- conv0
I0428 19:40:46.164105 24627 net.cpp:382] pool0 -> pool0
I0428 19:40:46.164175 24627 net.cpp:124] Setting up pool0
I0428 19:40:46.164197 24627 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:46.164202 24627 net.cpp:139] Memory required for data: 569600
I0428 19:40:46.164207 24627 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:46.164223 24627 net.cpp:86] Creating Layer conv1
I0428 19:40:46.164229 24627 net.cpp:408] conv1 <- pool0
I0428 19:40:46.164238 24627 net.cpp:382] conv1 -> conv1
I0428 19:40:46.166306 24627 net.cpp:124] Setting up conv1
I0428 19:40:46.166321 24627 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:46.166327 24627 net.cpp:139] Memory required for data: 651520
I0428 19:40:46.166340 24627 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:46.166352 24627 net.cpp:86] Creating Layer pool1
I0428 19:40:46.166358 24627 net.cpp:408] pool1 <- conv1
I0428 19:40:46.166368 24627 net.cpp:382] pool1 -> pool1
I0428 19:40:46.166410 24627 net.cpp:124] Setting up pool1
I0428 19:40:46.166419 24627 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:46.166424 24627 net.cpp:139] Memory required for data: 672000
I0428 19:40:46.166429 24627 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:46.166440 24627 net.cpp:86] Creating Layer ip1
I0428 19:40:46.166450 24627 net.cpp:408] ip1 <- pool1
I0428 19:40:46.166460 24627 net.cpp:382] ip1 -> ip1
I0428 19:40:46.167472 24627 net.cpp:124] Setting up ip1
I0428 19:40:46.167487 24627 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:46.167492 24627 net.cpp:139] Memory required for data: 684800
I0428 19:40:46.167505 24627 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:46.167529 24627 net.cpp:86] Creating Layer relu1
I0428 19:40:46.167541 24627 net.cpp:408] relu1 <- ip1
I0428 19:40:46.167548 24627 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:46.167771 24627 net.cpp:124] Setting up relu1
I0428 19:40:46.167783 24627 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:46.167788 24627 net.cpp:139] Memory required for data: 697600
I0428 19:40:46.167793 24627 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:46.167820 24627 net.cpp:86] Creating Layer ip2
I0428 19:40:46.167826 24627 net.cpp:408] ip2 <- ip1
I0428 19:40:46.167836 24627 net.cpp:382] ip2 -> ip2
I0428 19:40:46.167966 24627 net.cpp:124] Setting up ip2
I0428 19:40:46.167990 24627 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:46.167996 24627 net.cpp:139] Memory required for data: 700160
I0428 19:40:46.168006 24627 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:46.168017 24627 net.cpp:86] Creating Layer relu2
I0428 19:40:46.168025 24627 net.cpp:408] relu2 <- ip2
I0428 19:40:46.168032 24627 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:46.168988 24627 net.cpp:124] Setting up relu2
I0428 19:40:46.169003 24627 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:46.169008 24627 net.cpp:139] Memory required for data: 702720
I0428 19:40:46.169014 24627 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:46.169025 24627 net.cpp:86] Creating Layer ip3
I0428 19:40:46.169031 24627 net.cpp:408] ip3 <- ip2
I0428 19:40:46.169041 24627 net.cpp:382] ip3 -> ip3
I0428 19:40:46.169149 24627 net.cpp:124] Setting up ip3
I0428 19:40:46.169173 24627 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:46.169178 24627 net.cpp:139] Memory required for data: 705280
I0428 19:40:46.169191 24627 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:46.169201 24627 net.cpp:86] Creating Layer relu3
I0428 19:40:46.169222 24627 net.cpp:408] relu3 <- ip3
I0428 19:40:46.169229 24627 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:46.169402 24627 net.cpp:124] Setting up relu3
I0428 19:40:46.169411 24627 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:46.169416 24627 net.cpp:139] Memory required for data: 707840
I0428 19:40:46.169421 24627 layer_factory.hpp:77] Creating layer loss
I0428 19:40:46.169435 24627 net.cpp:86] Creating Layer loss
I0428 19:40:46.169442 24627 net.cpp:408] loss <- ip3
I0428 19:40:46.169448 24627 net.cpp:408] loss <- label
I0428 19:40:46.169456 24627 net.cpp:382] loss -> loss
I0428 19:40:46.169473 24627 layer_factory.hpp:77] Creating layer loss
I0428 19:40:46.169687 24627 net.cpp:124] Setting up loss
I0428 19:40:46.169697 24627 net.cpp:131] Top shape: (1)
I0428 19:40:46.169701 24627 net.cpp:134]     with loss weight 1
I0428 19:40:46.169719 24627 net.cpp:139] Memory required for data: 707844
I0428 19:40:46.169724 24627 net.cpp:200] loss needs backward computation.
I0428 19:40:46.169730 24627 net.cpp:200] relu3 needs backward computation.
I0428 19:40:46.169735 24627 net.cpp:200] ip3 needs backward computation.
I0428 19:40:46.169740 24627 net.cpp:200] relu2 needs backward computation.
I0428 19:40:46.169744 24627 net.cpp:200] ip2 needs backward computation.
I0428 19:40:46.169749 24627 net.cpp:200] relu1 needs backward computation.
I0428 19:40:46.169754 24627 net.cpp:200] ip1 needs backward computation.
I0428 19:40:46.169759 24627 net.cpp:200] pool1 needs backward computation.
I0428 19:40:46.169764 24627 net.cpp:200] conv1 needs backward computation.
I0428 19:40:46.169769 24627 net.cpp:200] pool0 needs backward computation.
I0428 19:40:46.169773 24627 net.cpp:200] conv0 needs backward computation.
I0428 19:40:46.169780 24627 net.cpp:202] mnist does not need backward computation.
I0428 19:40:46.169783 24627 net.cpp:244] This network produces output loss
I0428 19:40:46.169796 24627 net.cpp:257] Network initialization done.
I0428 19:40:46.170120 24627 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test344.prototxt
I0428 19:40:46.170153 24627 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:46.170248 24627 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:46.170387 24627 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:46.170444 24627 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:46.170461 24627 net.cpp:86] Creating Layer mnist
I0428 19:40:46.170469 24627 net.cpp:382] mnist -> data
I0428 19:40:46.170481 24627 net.cpp:382] mnist -> label
I0428 19:40:46.170660 24627 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:46.172829 24627 net.cpp:124] Setting up mnist
I0428 19:40:46.172847 24627 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:46.172857 24627 net.cpp:131] Top shape: 100 (100)
I0428 19:40:46.172863 24627 net.cpp:139] Memory required for data: 314000
I0428 19:40:46.172868 24627 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:46.172879 24627 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:46.172886 24627 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:46.172895 24627 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:46.172907 24627 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:46.172960 24627 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:46.172968 24627 net.cpp:131] Top shape: 100 (100)
I0428 19:40:46.172976 24627 net.cpp:131] Top shape: 100 (100)
I0428 19:40:46.172981 24627 net.cpp:139] Memory required for data: 314800
I0428 19:40:46.172987 24627 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:46.173002 24627 net.cpp:86] Creating Layer conv0
I0428 19:40:46.173009 24627 net.cpp:408] conv0 <- data
I0428 19:40:46.173019 24627 net.cpp:382] conv0 -> conv0
I0428 19:40:46.174827 24627 net.cpp:124] Setting up conv0
I0428 19:40:46.174844 24627 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:46.174849 24627 net.cpp:139] Memory required for data: 775600
I0428 19:40:46.174865 24627 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:46.174875 24627 net.cpp:86] Creating Layer pool0
I0428 19:40:46.174880 24627 net.cpp:408] pool0 <- conv0
I0428 19:40:46.174888 24627 net.cpp:382] pool0 -> pool0
I0428 19:40:46.174932 24627 net.cpp:124] Setting up pool0
I0428 19:40:46.174940 24627 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:46.174945 24627 net.cpp:139] Memory required for data: 890800
I0428 19:40:46.174950 24627 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:46.174964 24627 net.cpp:86] Creating Layer conv1
I0428 19:40:46.174971 24627 net.cpp:408] conv1 <- pool0
I0428 19:40:46.174980 24627 net.cpp:382] conv1 -> conv1
I0428 19:40:46.176605 24627 net.cpp:124] Setting up conv1
I0428 19:40:46.176622 24627 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:46.176628 24627 net.cpp:139] Memory required for data: 1018800
I0428 19:40:46.176642 24627 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:46.176654 24627 net.cpp:86] Creating Layer pool1
I0428 19:40:46.176663 24627 net.cpp:408] pool1 <- conv1
I0428 19:40:46.176672 24627 net.cpp:382] pool1 -> pool1
I0428 19:40:46.176717 24627 net.cpp:124] Setting up pool1
I0428 19:40:46.176725 24627 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:46.176730 24627 net.cpp:139] Memory required for data: 1050800
I0428 19:40:46.176735 24627 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:46.176745 24627 net.cpp:86] Creating Layer ip1
I0428 19:40:46.176751 24627 net.cpp:408] ip1 <- pool1
I0428 19:40:46.176761 24627 net.cpp:382] ip1 -> ip1
I0428 19:40:46.176942 24627 net.cpp:124] Setting up ip1
I0428 19:40:46.176952 24627 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:46.176972 24627 net.cpp:139] Memory required for data: 1070800
I0428 19:40:46.176990 24627 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:46.177000 24627 net.cpp:86] Creating Layer relu1
I0428 19:40:46.177006 24627 net.cpp:408] relu1 <- ip1
I0428 19:40:46.177019 24627 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:46.177304 24627 net.cpp:124] Setting up relu1
I0428 19:40:46.177314 24627 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:46.177320 24627 net.cpp:139] Memory required for data: 1090800
I0428 19:40:46.177340 24627 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:46.177355 24627 net.cpp:86] Creating Layer ip2
I0428 19:40:46.177362 24627 net.cpp:408] ip2 <- ip1
I0428 19:40:46.177372 24627 net.cpp:382] ip2 -> ip2
I0428 19:40:46.177515 24627 net.cpp:124] Setting up ip2
I0428 19:40:46.177525 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.177531 24627 net.cpp:139] Memory required for data: 1094800
I0428 19:40:46.177541 24627 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:46.177549 24627 net.cpp:86] Creating Layer relu2
I0428 19:40:46.177559 24627 net.cpp:408] relu2 <- ip2
I0428 19:40:46.177569 24627 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:46.177763 24627 net.cpp:124] Setting up relu2
I0428 19:40:46.177776 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.177783 24627 net.cpp:139] Memory required for data: 1098800
I0428 19:40:46.177788 24627 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:46.177800 24627 net.cpp:86] Creating Layer ip3
I0428 19:40:46.177809 24627 net.cpp:408] ip3 <- ip2
I0428 19:40:46.177819 24627 net.cpp:382] ip3 -> ip3
I0428 19:40:46.177945 24627 net.cpp:124] Setting up ip3
I0428 19:40:46.177954 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.177960 24627 net.cpp:139] Memory required for data: 1102800
I0428 19:40:46.177976 24627 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:46.177986 24627 net.cpp:86] Creating Layer relu3
I0428 19:40:46.177992 24627 net.cpp:408] relu3 <- ip3
I0428 19:40:46.178002 24627 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:46.178949 24627 net.cpp:124] Setting up relu3
I0428 19:40:46.178966 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.178974 24627 net.cpp:139] Memory required for data: 1106800
I0428 19:40:46.178980 24627 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:46.178992 24627 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:46.179002 24627 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:46.179028 24627 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:46.179054 24627 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:46.179102 24627 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:46.179111 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.179118 24627 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:46.179123 24627 net.cpp:139] Memory required for data: 1114800
I0428 19:40:46.179131 24627 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:46.179141 24627 net.cpp:86] Creating Layer accuracy
I0428 19:40:46.179147 24627 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:46.179153 24627 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:46.179164 24627 net.cpp:382] accuracy -> accuracy
I0428 19:40:46.179177 24627 net.cpp:124] Setting up accuracy
I0428 19:40:46.179196 24627 net.cpp:131] Top shape: (1)
I0428 19:40:46.179201 24627 net.cpp:139] Memory required for data: 1114804
I0428 19:40:46.179206 24627 layer_factory.hpp:77] Creating layer loss
I0428 19:40:46.179214 24627 net.cpp:86] Creating Layer loss
I0428 19:40:46.179222 24627 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:46.179229 24627 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:46.179252 24627 net.cpp:382] loss -> loss
I0428 19:40:46.179263 24627 layer_factory.hpp:77] Creating layer loss
I0428 19:40:46.179524 24627 net.cpp:124] Setting up loss
I0428 19:40:46.179534 24627 net.cpp:131] Top shape: (1)
I0428 19:40:46.179539 24627 net.cpp:134]     with loss weight 1
I0428 19:40:46.179548 24627 net.cpp:139] Memory required for data: 1114808
I0428 19:40:46.179566 24627 net.cpp:200] loss needs backward computation.
I0428 19:40:46.179574 24627 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:46.179579 24627 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:46.179584 24627 net.cpp:200] relu3 needs backward computation.
I0428 19:40:46.179589 24627 net.cpp:200] ip3 needs backward computation.
I0428 19:40:46.179594 24627 net.cpp:200] relu2 needs backward computation.
I0428 19:40:46.179599 24627 net.cpp:200] ip2 needs backward computation.
I0428 19:40:46.179605 24627 net.cpp:200] relu1 needs backward computation.
I0428 19:40:46.179608 24627 net.cpp:200] ip1 needs backward computation.
I0428 19:40:46.179613 24627 net.cpp:200] pool1 needs backward computation.
I0428 19:40:46.179618 24627 net.cpp:200] conv1 needs backward computation.
I0428 19:40:46.179623 24627 net.cpp:200] pool0 needs backward computation.
I0428 19:40:46.179628 24627 net.cpp:200] conv0 needs backward computation.
I0428 19:40:46.179635 24627 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:46.179656 24627 net.cpp:202] mnist does not need backward computation.
I0428 19:40:46.179659 24627 net.cpp:244] This network produces output accuracy
I0428 19:40:46.179666 24627 net.cpp:244] This network produces output loss
I0428 19:40:46.179683 24627 net.cpp:257] Network initialization done.
I0428 19:40:46.179730 24627 solver.cpp:56] Solver scaffolding done.
I0428 19:40:46.180068 24627 caffe.cpp:248] Starting Optimization
I0428 19:40:46.180074 24627 solver.cpp:273] Solving LeNet
I0428 19:40:46.180078 24627 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:46.180845 24627 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:46.183737 24627 blocking_queue.cpp:49] Waiting for data
I0428 19:40:46.235337 24661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:46.235751 24627 solver.cpp:398]     Test net output #0: accuracy = 0.0998
I0428 19:40:46.235772 24627 solver.cpp:398]     Test net output #1: loss = 2.35256 (* 1 = 2.35256 loss)
I0428 19:40:46.237587 24627 solver.cpp:219] Iteration 0 (0 iter/s, 0.0574812s/100 iters), loss = 2.33083
I0428 19:40:46.237614 24627 solver.cpp:238]     Train net output #0: loss = 2.33083 (* 1 = 2.33083 loss)
I0428 19:40:46.237630 24627 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:46.307845 24627 solver.cpp:219] Iteration 100 (1424.08 iter/s, 0.0702208s/100 iters), loss = 1.01093
I0428 19:40:46.307874 24627 solver.cpp:238]     Train net output #0: loss = 1.01093 (* 1 = 1.01093 loss)
I0428 19:40:46.307899 24627 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:46.378437 24627 solver.cpp:219] Iteration 200 (1417.32 iter/s, 0.0705556s/100 iters), loss = 0.414157
I0428 19:40:46.378464 24627 solver.cpp:238]     Train net output #0: loss = 0.414157 (* 1 = 0.414157 loss)
I0428 19:40:46.378489 24627 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:46.447244 24627 solver.cpp:219] Iteration 300 (1454.04 iter/s, 0.0687739s/100 iters), loss = 0.490554
I0428 19:40:46.447273 24627 solver.cpp:238]     Train net output #0: loss = 0.490554 (* 1 = 0.490554 loss)
I0428 19:40:46.447296 24627 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:46.516541 24627 solver.cpp:219] Iteration 400 (1443.77 iter/s, 0.0692633s/100 iters), loss = 0.248405
I0428 19:40:46.516568 24627 solver.cpp:238]     Train net output #0: loss = 0.248405 (* 1 = 0.248405 loss)
I0428 19:40:46.516592 24627 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:46.585299 24627 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:46.655730 24661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:46.656158 24627 solver.cpp:398]     Test net output #0: accuracy = 0.9181
I0428 19:40:46.656179 24627 solver.cpp:398]     Test net output #1: loss = 0.271317 (* 1 = 0.271317 loss)
I0428 19:40:46.656939 24627 solver.cpp:219] Iteration 500 (712.445 iter/s, 0.140362s/100 iters), loss = 0.43603
I0428 19:40:46.656968 24627 solver.cpp:238]     Train net output #0: loss = 0.43603 (* 1 = 0.43603 loss)
I0428 19:40:46.656997 24627 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:46.726457 24627 solver.cpp:219] Iteration 600 (1439.19 iter/s, 0.0694834s/100 iters), loss = 0.127689
I0428 19:40:46.726500 24627 solver.cpp:238]     Train net output #0: loss = 0.127689 (* 1 = 0.127689 loss)
I0428 19:40:46.726511 24627 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:46.796064 24627 solver.cpp:219] Iteration 700 (1437.64 iter/s, 0.0695583s/100 iters), loss = 0.331084
I0428 19:40:46.796092 24627 solver.cpp:238]     Train net output #0: loss = 0.331084 (* 1 = 0.331084 loss)
I0428 19:40:46.796102 24627 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:46.864672 24627 solver.cpp:219] Iteration 800 (1458.3 iter/s, 0.0685732s/100 iters), loss = 0.303224
I0428 19:40:46.864699 24627 solver.cpp:238]     Train net output #0: loss = 0.303224 (* 1 = 0.303224 loss)
I0428 19:40:46.864708 24627 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:46.933152 24627 solver.cpp:219] Iteration 900 (1460.98 iter/s, 0.068447s/100 iters), loss = 0.226004
I0428 19:40:46.933193 24627 solver.cpp:238]     Train net output #0: loss = 0.226004 (* 1 = 0.226004 loss)
I0428 19:40:46.933203 24627 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:46.955926 24635 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:47.000519 24627 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:47.001240 24627 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:47.001771 24627 solver.cpp:311] Iteration 1000, loss = 0.161311
I0428 19:40:47.001786 24627 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:47.065465 24661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:47.066067 24627 solver.cpp:398]     Test net output #0: accuracy = 0.9458
I0428 19:40:47.066110 24627 solver.cpp:398]     Test net output #1: loss = 0.167926 (* 1 = 0.167926 loss)
I0428 19:40:47.066120 24627 solver.cpp:316] Optimization Done.
I0428 19:40:47.066125 24627 caffe.cpp:259] Optimization Done.
