I0428 20:18:02.495329  1043 caffe.cpp:218] Using GPUs 0
I0428 20:18:02.532028  1043 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:02.987933  1043 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1309.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:02.988082  1043 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1309.prototxt
I0428 20:18:02.988420  1043 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:02.988451  1043 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:02.988548  1043 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:02.988611  1043 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:02.988692  1043 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:02.988713  1043 net.cpp:86] Creating Layer mnist
I0428 20:18:02.988719  1043 net.cpp:382] mnist -> data
I0428 20:18:02.988737  1043 net.cpp:382] mnist -> label
I0428 20:18:02.989794  1043 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:02.991971  1043 net.cpp:124] Setting up mnist
I0428 20:18:02.992000  1043 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:02.992007  1043 net.cpp:131] Top shape: 64 (64)
I0428 20:18:02.992009  1043 net.cpp:139] Memory required for data: 200960
I0428 20:18:02.992017  1043 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:02.992029  1043 net.cpp:86] Creating Layer conv0
I0428 20:18:02.992045  1043 net.cpp:408] conv0 <- data
I0428 20:18:02.992056  1043 net.cpp:382] conv0 -> conv0
I0428 20:18:03.224033  1043 net.cpp:124] Setting up conv0
I0428 20:18:03.224059  1043 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:03.224063  1043 net.cpp:139] Memory required for data: 7573760
I0428 20:18:03.224078  1043 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:03.224090  1043 net.cpp:86] Creating Layer pool0
I0428 20:18:03.224094  1043 net.cpp:408] pool0 <- conv0
I0428 20:18:03.224099  1043 net.cpp:382] pool0 -> pool0
I0428 20:18:03.224161  1043 net.cpp:124] Setting up pool0
I0428 20:18:03.224166  1043 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:03.224169  1043 net.cpp:139] Memory required for data: 9416960
I0428 20:18:03.224172  1043 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:03.224184  1043 net.cpp:86] Creating Layer conv1
I0428 20:18:03.224186  1043 net.cpp:408] conv1 <- pool0
I0428 20:18:03.224191  1043 net.cpp:382] conv1 -> conv1
I0428 20:18:03.227103  1043 net.cpp:124] Setting up conv1
I0428 20:18:03.227133  1043 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:03.227138  1043 net.cpp:139] Memory required for data: 9580800
I0428 20:18:03.227145  1043 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:03.227155  1043 net.cpp:86] Creating Layer pool1
I0428 20:18:03.227159  1043 net.cpp:408] pool1 <- conv1
I0428 20:18:03.227164  1043 net.cpp:382] pool1 -> pool1
I0428 20:18:03.227218  1043 net.cpp:124] Setting up pool1
I0428 20:18:03.227223  1043 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:03.227226  1043 net.cpp:139] Memory required for data: 9621760
I0428 20:18:03.227231  1043 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:03.227237  1043 net.cpp:86] Creating Layer ip1
I0428 20:18:03.227241  1043 net.cpp:408] ip1 <- pool1
I0428 20:18:03.227246  1043 net.cpp:382] ip1 -> ip1
I0428 20:18:03.227399  1043 net.cpp:124] Setting up ip1
I0428 20:18:03.227406  1043 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:03.227409  1043 net.cpp:139] Memory required for data: 9628160
I0428 20:18:03.227416  1043 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:03.227423  1043 net.cpp:86] Creating Layer relu1
I0428 20:18:03.227427  1043 net.cpp:408] relu1 <- ip1
I0428 20:18:03.227432  1043 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:03.227594  1043 net.cpp:124] Setting up relu1
I0428 20:18:03.227602  1043 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:03.227605  1043 net.cpp:139] Memory required for data: 9634560
I0428 20:18:03.227608  1043 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:03.227614  1043 net.cpp:86] Creating Layer ip2
I0428 20:18:03.227617  1043 net.cpp:408] ip2 <- ip1
I0428 20:18:03.227623  1043 net.cpp:382] ip2 -> ip2
I0428 20:18:03.227715  1043 net.cpp:124] Setting up ip2
I0428 20:18:03.227721  1043 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:03.227725  1043 net.cpp:139] Memory required for data: 9637120
I0428 20:18:03.227730  1043 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:03.227737  1043 net.cpp:86] Creating Layer relu2
I0428 20:18:03.227741  1043 net.cpp:408] relu2 <- ip2
I0428 20:18:03.227743  1043 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:03.228571  1043 net.cpp:124] Setting up relu2
I0428 20:18:03.228582  1043 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:03.228601  1043 net.cpp:139] Memory required for data: 9639680
I0428 20:18:03.228605  1043 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:03.228612  1043 net.cpp:86] Creating Layer ip3
I0428 20:18:03.228615  1043 net.cpp:408] ip3 <- ip2
I0428 20:18:03.228621  1043 net.cpp:382] ip3 -> ip3
I0428 20:18:03.228718  1043 net.cpp:124] Setting up ip3
I0428 20:18:03.228726  1043 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:03.228729  1043 net.cpp:139] Memory required for data: 9642240
I0428 20:18:03.228736  1043 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:03.228757  1043 net.cpp:86] Creating Layer relu3
I0428 20:18:03.228760  1043 net.cpp:408] relu3 <- ip3
I0428 20:18:03.228765  1043 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:03.228981  1043 net.cpp:124] Setting up relu3
I0428 20:18:03.228991  1043 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:03.228994  1043 net.cpp:139] Memory required for data: 9644800
I0428 20:18:03.228997  1043 layer_factory.hpp:77] Creating layer loss
I0428 20:18:03.229003  1043 net.cpp:86] Creating Layer loss
I0428 20:18:03.229007  1043 net.cpp:408] loss <- ip3
I0428 20:18:03.229012  1043 net.cpp:408] loss <- label
I0428 20:18:03.229017  1043 net.cpp:382] loss -> loss
I0428 20:18:03.229034  1043 layer_factory.hpp:77] Creating layer loss
I0428 20:18:03.229348  1043 net.cpp:124] Setting up loss
I0428 20:18:03.229357  1043 net.cpp:131] Top shape: (1)
I0428 20:18:03.229375  1043 net.cpp:134]     with loss weight 1
I0428 20:18:03.229389  1043 net.cpp:139] Memory required for data: 9644804
I0428 20:18:03.229393  1043 net.cpp:200] loss needs backward computation.
I0428 20:18:03.229396  1043 net.cpp:200] relu3 needs backward computation.
I0428 20:18:03.229399  1043 net.cpp:200] ip3 needs backward computation.
I0428 20:18:03.229403  1043 net.cpp:200] relu2 needs backward computation.
I0428 20:18:03.229405  1043 net.cpp:200] ip2 needs backward computation.
I0428 20:18:03.229423  1043 net.cpp:200] relu1 needs backward computation.
I0428 20:18:03.229426  1043 net.cpp:200] ip1 needs backward computation.
I0428 20:18:03.229429  1043 net.cpp:200] pool1 needs backward computation.
I0428 20:18:03.229432  1043 net.cpp:200] conv1 needs backward computation.
I0428 20:18:03.229435  1043 net.cpp:200] pool0 needs backward computation.
I0428 20:18:03.229439  1043 net.cpp:200] conv0 needs backward computation.
I0428 20:18:03.229441  1043 net.cpp:202] mnist does not need backward computation.
I0428 20:18:03.229444  1043 net.cpp:244] This network produces output loss
I0428 20:18:03.229454  1043 net.cpp:257] Network initialization done.
I0428 20:18:03.229823  1043 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1309.prototxt
I0428 20:18:03.229897  1043 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:03.229990  1043 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:03.230089  1043 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:03.230149  1043 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:03.230160  1043 net.cpp:86] Creating Layer mnist
I0428 20:18:03.230166  1043 net.cpp:382] mnist -> data
I0428 20:18:03.230188  1043 net.cpp:382] mnist -> label
I0428 20:18:03.230289  1043 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:03.232341  1043 net.cpp:124] Setting up mnist
I0428 20:18:03.232384  1043 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:03.232390  1043 net.cpp:131] Top shape: 100 (100)
I0428 20:18:03.232393  1043 net.cpp:139] Memory required for data: 314000
I0428 20:18:03.232398  1043 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:03.232429  1043 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:03.232432  1043 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:03.232437  1043 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:03.232445  1043 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:03.232491  1043 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:03.232498  1043 net.cpp:131] Top shape: 100 (100)
I0428 20:18:03.232502  1043 net.cpp:131] Top shape: 100 (100)
I0428 20:18:03.232504  1043 net.cpp:139] Memory required for data: 314800
I0428 20:18:03.232507  1043 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:03.232517  1043 net.cpp:86] Creating Layer conv0
I0428 20:18:03.232520  1043 net.cpp:408] conv0 <- data
I0428 20:18:03.232527  1043 net.cpp:382] conv0 -> conv0
I0428 20:18:03.234122  1043 net.cpp:124] Setting up conv0
I0428 20:18:03.234136  1043 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:03.234155  1043 net.cpp:139] Memory required for data: 11834800
I0428 20:18:03.234164  1043 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:03.234174  1043 net.cpp:86] Creating Layer pool0
I0428 20:18:03.234176  1043 net.cpp:408] pool0 <- conv0
I0428 20:18:03.234181  1043 net.cpp:382] pool0 -> pool0
I0428 20:18:03.234217  1043 net.cpp:124] Setting up pool0
I0428 20:18:03.234222  1043 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:03.234225  1043 net.cpp:139] Memory required for data: 14714800
I0428 20:18:03.234228  1043 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:03.234237  1043 net.cpp:86] Creating Layer conv1
I0428 20:18:03.234241  1043 net.cpp:408] conv1 <- pool0
I0428 20:18:03.234246  1043 net.cpp:382] conv1 -> conv1
I0428 20:18:03.235993  1043 net.cpp:124] Setting up conv1
I0428 20:18:03.236023  1043 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:03.236027  1043 net.cpp:139] Memory required for data: 14970800
I0428 20:18:03.236037  1043 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:03.236044  1043 net.cpp:86] Creating Layer pool1
I0428 20:18:03.236048  1043 net.cpp:408] pool1 <- conv1
I0428 20:18:03.236053  1043 net.cpp:382] pool1 -> pool1
I0428 20:18:03.236109  1043 net.cpp:124] Setting up pool1
I0428 20:18:03.236138  1043 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:03.236155  1043 net.cpp:139] Memory required for data: 15034800
I0428 20:18:03.236158  1043 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:03.236166  1043 net.cpp:86] Creating Layer ip1
I0428 20:18:03.236168  1043 net.cpp:408] ip1 <- pool1
I0428 20:18:03.236174  1043 net.cpp:382] ip1 -> ip1
I0428 20:18:03.236304  1043 net.cpp:124] Setting up ip1
I0428 20:18:03.236311  1043 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:03.236325  1043 net.cpp:139] Memory required for data: 15044800
I0428 20:18:03.236333  1043 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:03.236340  1043 net.cpp:86] Creating Layer relu1
I0428 20:18:03.236344  1043 net.cpp:408] relu1 <- ip1
I0428 20:18:03.236348  1043 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:03.236515  1043 net.cpp:124] Setting up relu1
I0428 20:18:03.236527  1043 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:03.236531  1043 net.cpp:139] Memory required for data: 15054800
I0428 20:18:03.236534  1043 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:03.236542  1043 net.cpp:86] Creating Layer ip2
I0428 20:18:03.236546  1043 net.cpp:408] ip2 <- ip1
I0428 20:18:03.236552  1043 net.cpp:382] ip2 -> ip2
I0428 20:18:03.236660  1043 net.cpp:124] Setting up ip2
I0428 20:18:03.236667  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.236670  1043 net.cpp:139] Memory required for data: 15058800
I0428 20:18:03.236675  1043 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:03.236681  1043 net.cpp:86] Creating Layer relu2
I0428 20:18:03.236685  1043 net.cpp:408] relu2 <- ip2
I0428 20:18:03.236688  1043 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:03.236953  1043 net.cpp:124] Setting up relu2
I0428 20:18:03.236961  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.236965  1043 net.cpp:139] Memory required for data: 15062800
I0428 20:18:03.236969  1043 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:03.236990  1043 net.cpp:86] Creating Layer ip3
I0428 20:18:03.236994  1043 net.cpp:408] ip3 <- ip2
I0428 20:18:03.236999  1043 net.cpp:382] ip3 -> ip3
I0428 20:18:03.237118  1043 net.cpp:124] Setting up ip3
I0428 20:18:03.237124  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.237128  1043 net.cpp:139] Memory required for data: 15066800
I0428 20:18:03.237146  1043 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:03.237151  1043 net.cpp:86] Creating Layer relu3
I0428 20:18:03.237154  1043 net.cpp:408] relu3 <- ip3
I0428 20:18:03.237160  1043 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:03.237993  1043 net.cpp:124] Setting up relu3
I0428 20:18:03.238005  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.238024  1043 net.cpp:139] Memory required for data: 15070800
I0428 20:18:03.238028  1043 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:03.238032  1043 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:03.238035  1043 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:03.238042  1043 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:03.238049  1043 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:03.238106  1043 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:03.238112  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.238116  1043 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:03.238119  1043 net.cpp:139] Memory required for data: 15078800
I0428 20:18:03.238122  1043 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:03.238127  1043 net.cpp:86] Creating Layer accuracy
I0428 20:18:03.238142  1043 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:03.238147  1043 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:03.238152  1043 net.cpp:382] accuracy -> accuracy
I0428 20:18:03.238157  1043 net.cpp:124] Setting up accuracy
I0428 20:18:03.238162  1043 net.cpp:131] Top shape: (1)
I0428 20:18:03.238164  1043 net.cpp:139] Memory required for data: 15078804
I0428 20:18:03.238168  1043 layer_factory.hpp:77] Creating layer loss
I0428 20:18:03.238173  1043 net.cpp:86] Creating Layer loss
I0428 20:18:03.238175  1043 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:03.238179  1043 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:03.238183  1043 net.cpp:382] loss -> loss
I0428 20:18:03.238189  1043 layer_factory.hpp:77] Creating layer loss
I0428 20:18:03.238445  1043 net.cpp:124] Setting up loss
I0428 20:18:03.238464  1043 net.cpp:131] Top shape: (1)
I0428 20:18:03.238467  1043 net.cpp:134]     with loss weight 1
I0428 20:18:03.238484  1043 net.cpp:139] Memory required for data: 15078808
I0428 20:18:03.238488  1043 net.cpp:200] loss needs backward computation.
I0428 20:18:03.238492  1043 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:03.238497  1043 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:03.238500  1043 net.cpp:200] relu3 needs backward computation.
I0428 20:18:03.238503  1043 net.cpp:200] ip3 needs backward computation.
I0428 20:18:03.238507  1043 net.cpp:200] relu2 needs backward computation.
I0428 20:18:03.238517  1043 net.cpp:200] ip2 needs backward computation.
I0428 20:18:03.238519  1043 net.cpp:200] relu1 needs backward computation.
I0428 20:18:03.238523  1043 net.cpp:200] ip1 needs backward computation.
I0428 20:18:03.238525  1043 net.cpp:200] pool1 needs backward computation.
I0428 20:18:03.238528  1043 net.cpp:200] conv1 needs backward computation.
I0428 20:18:03.238533  1043 net.cpp:200] pool0 needs backward computation.
I0428 20:18:03.238535  1043 net.cpp:200] conv0 needs backward computation.
I0428 20:18:03.238541  1043 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:03.238546  1043 net.cpp:202] mnist does not need backward computation.
I0428 20:18:03.238548  1043 net.cpp:244] This network produces output accuracy
I0428 20:18:03.238553  1043 net.cpp:244] This network produces output loss
I0428 20:18:03.238564  1043 net.cpp:257] Network initialization done.
I0428 20:18:03.238608  1043 solver.cpp:56] Solver scaffolding done.
I0428 20:18:03.239038  1043 caffe.cpp:248] Starting Optimization
I0428 20:18:03.239044  1043 solver.cpp:273] Solving LeNet
I0428 20:18:03.239047  1043 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:03.239323  1043 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:03.246119  1043 blocking_queue.cpp:49] Waiting for data
I0428 20:18:03.313614  1050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:03.314483  1043 solver.cpp:398]     Test net output #0: accuracy = 0.0974
I0428 20:18:03.314517  1043 solver.cpp:398]     Test net output #1: loss = 2.29587 (* 1 = 2.29587 loss)
I0428 20:18:03.318701  1043 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796068s/100 iters), loss = 2.31096
I0428 20:18:03.318739  1043 solver.cpp:238]     Train net output #0: loss = 2.31096 (* 1 = 2.31096 loss)
I0428 20:18:03.318750  1043 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:03.438524  1043 solver.cpp:219] Iteration 100 (834.812 iter/s, 0.119788s/100 iters), loss = 0.607032
I0428 20:18:03.438563  1043 solver.cpp:238]     Train net output #0: loss = 0.607032 (* 1 = 0.607032 loss)
I0428 20:18:03.438570  1043 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:03.557096  1043 solver.cpp:219] Iteration 200 (843.645 iter/s, 0.118533s/100 iters), loss = 0.20506
I0428 20:18:03.557140  1043 solver.cpp:238]     Train net output #0: loss = 0.20506 (* 1 = 0.20506 loss)
I0428 20:18:03.557147  1043 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:03.674980  1043 solver.cpp:219] Iteration 300 (848.58 iter/s, 0.117844s/100 iters), loss = 0.265694
I0428 20:18:03.675019  1043 solver.cpp:238]     Train net output #0: loss = 0.265694 (* 1 = 0.265694 loss)
I0428 20:18:03.675025  1043 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:03.793450  1043 solver.cpp:219] Iteration 400 (844.339 iter/s, 0.118436s/100 iters), loss = 0.187355
I0428 20:18:03.793489  1043 solver.cpp:238]     Train net output #0: loss = 0.187355 (* 1 = 0.187355 loss)
I0428 20:18:03.793495  1043 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:03.911236  1043 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:03.974738  1050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:03.976447  1043 solver.cpp:398]     Test net output #0: accuracy = 0.9494
I0428 20:18:03.976481  1043 solver.cpp:398]     Test net output #1: loss = 0.172536 (* 1 = 0.172536 loss)
I0428 20:18:03.977632  1043 solver.cpp:219] Iteration 500 (543.099 iter/s, 0.184129s/100 iters), loss = 0.193714
I0428 20:18:03.977685  1043 solver.cpp:238]     Train net output #0: loss = 0.193715 (* 1 = 0.193715 loss)
I0428 20:18:03.977692  1043 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:04.103813  1043 solver.cpp:219] Iteration 600 (792.91 iter/s, 0.126118s/100 iters), loss = 0.0709603
I0428 20:18:04.103839  1043 solver.cpp:238]     Train net output #0: loss = 0.0709604 (* 1 = 0.0709604 loss)
I0428 20:18:04.103847  1043 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:04.222126  1043 solver.cpp:219] Iteration 700 (845.479 iter/s, 0.118276s/100 iters), loss = 0.230315
I0428 20:18:04.222165  1043 solver.cpp:238]     Train net output #0: loss = 0.230315 (* 1 = 0.230315 loss)
I0428 20:18:04.222172  1043 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:04.341655  1043 solver.cpp:219] Iteration 800 (836.865 iter/s, 0.119494s/100 iters), loss = 0.37313
I0428 20:18:04.341696  1043 solver.cpp:238]     Train net output #0: loss = 0.37313 (* 1 = 0.37313 loss)
I0428 20:18:04.341702  1043 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:04.460635  1043 solver.cpp:219] Iteration 900 (840.726 iter/s, 0.118945s/100 iters), loss = 0.123993
I0428 20:18:04.460677  1043 solver.cpp:238]     Train net output #0: loss = 0.123994 (* 1 = 0.123994 loss)
I0428 20:18:04.460683  1043 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:04.500938  1049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:04.579473  1043 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:04.580747  1043 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:04.581544  1043 solver.cpp:311] Iteration 1000, loss = 0.141283
I0428 20:18:04.581560  1043 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:04.646216  1050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:04.647918  1043 solver.cpp:398]     Test net output #0: accuracy = 0.9715
I0428 20:18:04.647953  1043 solver.cpp:398]     Test net output #1: loss = 0.0827002 (* 1 = 0.0827002 loss)
I0428 20:18:04.647958  1043 solver.cpp:316] Optimization Done.
I0428 20:18:04.647963  1043 caffe.cpp:259] Optimization Done.
