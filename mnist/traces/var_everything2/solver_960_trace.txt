I0428 20:03:51.407881 30279 caffe.cpp:218] Using GPUs 0
I0428 20:03:51.439831 30279 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:51.921514 30279 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test960.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:51.921648 30279 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test960.prototxt
I0428 20:03:51.922013 30279 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:51.922041 30279 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:51.922138 30279 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:51.922201 30279 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:51.922284 30279 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:51.922304 30279 net.cpp:86] Creating Layer mnist
I0428 20:03:51.922310 30279 net.cpp:382] mnist -> data
I0428 20:03:51.922330 30279 net.cpp:382] mnist -> label
I0428 20:03:51.923344 30279 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:51.925565 30279 net.cpp:124] Setting up mnist
I0428 20:03:51.925595 30279 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:51.925601 30279 net.cpp:131] Top shape: 64 (64)
I0428 20:03:51.925603 30279 net.cpp:139] Memory required for data: 200960
I0428 20:03:51.925609 30279 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:51.925621 30279 net.cpp:86] Creating Layer conv0
I0428 20:03:51.925637 30279 net.cpp:408] conv0 <- data
I0428 20:03:51.925647 30279 net.cpp:382] conv0 -> conv0
I0428 20:03:52.155454 30279 net.cpp:124] Setting up conv0
I0428 20:03:52.155495 30279 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:52.155499 30279 net.cpp:139] Memory required for data: 1675520
I0428 20:03:52.155529 30279 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:52.155541 30279 net.cpp:86] Creating Layer pool0
I0428 20:03:52.155545 30279 net.cpp:408] pool0 <- conv0
I0428 20:03:52.155566 30279 net.cpp:382] pool0 -> pool0
I0428 20:03:52.155611 30279 net.cpp:124] Setting up pool0
I0428 20:03:52.155616 30279 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:52.155619 30279 net.cpp:139] Memory required for data: 2044160
I0428 20:03:52.155622 30279 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:52.155633 30279 net.cpp:86] Creating Layer conv1
I0428 20:03:52.155637 30279 net.cpp:408] conv1 <- pool0
I0428 20:03:52.155642 30279 net.cpp:382] conv1 -> conv1
I0428 20:03:52.157738 30279 net.cpp:124] Setting up conv1
I0428 20:03:52.157768 30279 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:52.157773 30279 net.cpp:139] Memory required for data: 3682560
I0428 20:03:52.157780 30279 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:52.157788 30279 net.cpp:86] Creating Layer pool1
I0428 20:03:52.157793 30279 net.cpp:408] pool1 <- conv1
I0428 20:03:52.157796 30279 net.cpp:382] pool1 -> pool1
I0428 20:03:52.157831 30279 net.cpp:124] Setting up pool1
I0428 20:03:52.157836 30279 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:52.157840 30279 net.cpp:139] Memory required for data: 4092160
I0428 20:03:52.157842 30279 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:52.157850 30279 net.cpp:86] Creating Layer ip1
I0428 20:03:52.157852 30279 net.cpp:408] ip1 <- pool1
I0428 20:03:52.157856 30279 net.cpp:382] ip1 -> ip1
I0428 20:03:52.158219 30279 net.cpp:124] Setting up ip1
I0428 20:03:52.158226 30279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:52.158244 30279 net.cpp:139] Memory required for data: 4098560
I0428 20:03:52.158252 30279 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:52.158257 30279 net.cpp:86] Creating Layer relu1
I0428 20:03:52.158259 30279 net.cpp:408] relu1 <- ip1
I0428 20:03:52.158264 30279 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:52.158421 30279 net.cpp:124] Setting up relu1
I0428 20:03:52.158430 30279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:52.158433 30279 net.cpp:139] Memory required for data: 4104960
I0428 20:03:52.158437 30279 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:52.158443 30279 net.cpp:86] Creating Layer ip2
I0428 20:03:52.158447 30279 net.cpp:408] ip2 <- ip1
I0428 20:03:52.158452 30279 net.cpp:382] ip2 -> ip2
I0428 20:03:52.158555 30279 net.cpp:124] Setting up ip2
I0428 20:03:52.158560 30279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:52.158563 30279 net.cpp:139] Memory required for data: 4111360
I0428 20:03:52.158583 30279 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:52.158589 30279 net.cpp:86] Creating Layer relu2
I0428 20:03:52.158592 30279 net.cpp:408] relu2 <- ip2
I0428 20:03:52.158596 30279 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:52.159377 30279 net.cpp:124] Setting up relu2
I0428 20:03:52.159389 30279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:52.159409 30279 net.cpp:139] Memory required for data: 4117760
I0428 20:03:52.159411 30279 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:52.159418 30279 net.cpp:86] Creating Layer ip3
I0428 20:03:52.159423 30279 net.cpp:408] ip3 <- ip2
I0428 20:03:52.159428 30279 net.cpp:382] ip3 -> ip3
I0428 20:03:52.159518 30279 net.cpp:124] Setting up ip3
I0428 20:03:52.159524 30279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:52.159528 30279 net.cpp:139] Memory required for data: 4120320
I0428 20:03:52.159534 30279 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:52.159539 30279 net.cpp:86] Creating Layer relu3
I0428 20:03:52.159543 30279 net.cpp:408] relu3 <- ip3
I0428 20:03:52.159545 30279 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:52.159723 30279 net.cpp:124] Setting up relu3
I0428 20:03:52.159731 30279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:52.159734 30279 net.cpp:139] Memory required for data: 4122880
I0428 20:03:52.159737 30279 layer_factory.hpp:77] Creating layer loss
I0428 20:03:52.159744 30279 net.cpp:86] Creating Layer loss
I0428 20:03:52.159746 30279 net.cpp:408] loss <- ip3
I0428 20:03:52.159750 30279 net.cpp:408] loss <- label
I0428 20:03:52.159755 30279 net.cpp:382] loss -> loss
I0428 20:03:52.159773 30279 layer_factory.hpp:77] Creating layer loss
I0428 20:03:52.160022 30279 net.cpp:124] Setting up loss
I0428 20:03:52.160032 30279 net.cpp:131] Top shape: (1)
I0428 20:03:52.160034 30279 net.cpp:134]     with loss weight 1
I0428 20:03:52.160048 30279 net.cpp:139] Memory required for data: 4122884
I0428 20:03:52.160053 30279 net.cpp:200] loss needs backward computation.
I0428 20:03:52.160056 30279 net.cpp:200] relu3 needs backward computation.
I0428 20:03:52.160059 30279 net.cpp:200] ip3 needs backward computation.
I0428 20:03:52.160063 30279 net.cpp:200] relu2 needs backward computation.
I0428 20:03:52.160064 30279 net.cpp:200] ip2 needs backward computation.
I0428 20:03:52.160068 30279 net.cpp:200] relu1 needs backward computation.
I0428 20:03:52.160070 30279 net.cpp:200] ip1 needs backward computation.
I0428 20:03:52.160073 30279 net.cpp:200] pool1 needs backward computation.
I0428 20:03:52.160076 30279 net.cpp:200] conv1 needs backward computation.
I0428 20:03:52.160079 30279 net.cpp:200] pool0 needs backward computation.
I0428 20:03:52.160082 30279 net.cpp:200] conv0 needs backward computation.
I0428 20:03:52.160086 30279 net.cpp:202] mnist does not need backward computation.
I0428 20:03:52.160089 30279 net.cpp:244] This network produces output loss
I0428 20:03:52.160097 30279 net.cpp:257] Network initialization done.
I0428 20:03:52.160428 30279 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test960.prototxt
I0428 20:03:52.160481 30279 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:52.160564 30279 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:52.160637 30279 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:52.160681 30279 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:52.160692 30279 net.cpp:86] Creating Layer mnist
I0428 20:03:52.160696 30279 net.cpp:382] mnist -> data
I0428 20:03:52.160703 30279 net.cpp:382] mnist -> label
I0428 20:03:52.160779 30279 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:52.163117 30279 net.cpp:124] Setting up mnist
I0428 20:03:52.163161 30279 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:52.163166 30279 net.cpp:131] Top shape: 100 (100)
I0428 20:03:52.163183 30279 net.cpp:139] Memory required for data: 314000
I0428 20:03:52.163187 30279 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:52.163193 30279 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:52.163197 30279 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:52.163202 30279 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:52.163208 30279 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:52.163257 30279 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:52.163262 30279 net.cpp:131] Top shape: 100 (100)
I0428 20:03:52.163265 30279 net.cpp:131] Top shape: 100 (100)
I0428 20:03:52.163269 30279 net.cpp:139] Memory required for data: 314800
I0428 20:03:52.163271 30279 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:52.163278 30279 net.cpp:86] Creating Layer conv0
I0428 20:03:52.163281 30279 net.cpp:408] conv0 <- data
I0428 20:03:52.163286 30279 net.cpp:382] conv0 -> conv0
I0428 20:03:52.165149 30279 net.cpp:124] Setting up conv0
I0428 20:03:52.165164 30279 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:52.165169 30279 net.cpp:139] Memory required for data: 2618800
I0428 20:03:52.165177 30279 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:52.165184 30279 net.cpp:86] Creating Layer pool0
I0428 20:03:52.165186 30279 net.cpp:408] pool0 <- conv0
I0428 20:03:52.165191 30279 net.cpp:382] pool0 -> pool0
I0428 20:03:52.165225 30279 net.cpp:124] Setting up pool0
I0428 20:03:52.165228 30279 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:52.165231 30279 net.cpp:139] Memory required for data: 3194800
I0428 20:03:52.165235 30279 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:52.165256 30279 net.cpp:86] Creating Layer conv1
I0428 20:03:52.165259 30279 net.cpp:408] conv1 <- pool0
I0428 20:03:52.165264 30279 net.cpp:382] conv1 -> conv1
I0428 20:03:52.166904 30279 net.cpp:124] Setting up conv1
I0428 20:03:52.166918 30279 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:52.166921 30279 net.cpp:139] Memory required for data: 5754800
I0428 20:03:52.166929 30279 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:52.166936 30279 net.cpp:86] Creating Layer pool1
I0428 20:03:52.166939 30279 net.cpp:408] pool1 <- conv1
I0428 20:03:52.166945 30279 net.cpp:382] pool1 -> pool1
I0428 20:03:52.166980 30279 net.cpp:124] Setting up pool1
I0428 20:03:52.166985 30279 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:52.166988 30279 net.cpp:139] Memory required for data: 6394800
I0428 20:03:52.166991 30279 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:52.166997 30279 net.cpp:86] Creating Layer ip1
I0428 20:03:52.167007 30279 net.cpp:408] ip1 <- pool1
I0428 20:03:52.167013 30279 net.cpp:382] ip1 -> ip1
I0428 20:03:52.167362 30279 net.cpp:124] Setting up ip1
I0428 20:03:52.167371 30279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:52.167384 30279 net.cpp:139] Memory required for data: 6404800
I0428 20:03:52.167392 30279 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:52.167397 30279 net.cpp:86] Creating Layer relu1
I0428 20:03:52.167400 30279 net.cpp:408] relu1 <- ip1
I0428 20:03:52.167404 30279 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:52.167572 30279 net.cpp:124] Setting up relu1
I0428 20:03:52.167580 30279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:52.167583 30279 net.cpp:139] Memory required for data: 6414800
I0428 20:03:52.167587 30279 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:52.167593 30279 net.cpp:86] Creating Layer ip2
I0428 20:03:52.167595 30279 net.cpp:408] ip2 <- ip1
I0428 20:03:52.167601 30279 net.cpp:382] ip2 -> ip2
I0428 20:03:52.167717 30279 net.cpp:124] Setting up ip2
I0428 20:03:52.167724 30279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:52.167727 30279 net.cpp:139] Memory required for data: 6424800
I0428 20:03:52.167732 30279 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:52.167737 30279 net.cpp:86] Creating Layer relu2
I0428 20:03:52.167740 30279 net.cpp:408] relu2 <- ip2
I0428 20:03:52.167744 30279 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:52.167963 30279 net.cpp:124] Setting up relu2
I0428 20:03:52.167973 30279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:52.167975 30279 net.cpp:139] Memory required for data: 6434800
I0428 20:03:52.167979 30279 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:52.167984 30279 net.cpp:86] Creating Layer ip3
I0428 20:03:52.167987 30279 net.cpp:408] ip3 <- ip2
I0428 20:03:52.167991 30279 net.cpp:382] ip3 -> ip3
I0428 20:03:52.168126 30279 net.cpp:124] Setting up ip3
I0428 20:03:52.168148 30279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:52.168151 30279 net.cpp:139] Memory required for data: 6438800
I0428 20:03:52.168174 30279 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:52.168179 30279 net.cpp:86] Creating Layer relu3
I0428 20:03:52.168180 30279 net.cpp:408] relu3 <- ip3
I0428 20:03:52.168192 30279 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:52.169021 30279 net.cpp:124] Setting up relu3
I0428 20:03:52.169037 30279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:52.169049 30279 net.cpp:139] Memory required for data: 6442800
I0428 20:03:52.169051 30279 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:52.169059 30279 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:52.169062 30279 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:52.169067 30279 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:52.169073 30279 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:52.169116 30279 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:52.169122 30279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:52.169126 30279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:52.169128 30279 net.cpp:139] Memory required for data: 6450800
I0428 20:03:52.169131 30279 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:52.169137 30279 net.cpp:86] Creating Layer accuracy
I0428 20:03:52.169139 30279 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:52.169143 30279 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:52.169149 30279 net.cpp:382] accuracy -> accuracy
I0428 20:03:52.169172 30279 net.cpp:124] Setting up accuracy
I0428 20:03:52.169175 30279 net.cpp:131] Top shape: (1)
I0428 20:03:52.169178 30279 net.cpp:139] Memory required for data: 6450804
I0428 20:03:52.169181 30279 layer_factory.hpp:77] Creating layer loss
I0428 20:03:52.169186 30279 net.cpp:86] Creating Layer loss
I0428 20:03:52.169189 30279 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:52.169193 30279 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:52.169198 30279 net.cpp:382] loss -> loss
I0428 20:03:52.169204 30279 layer_factory.hpp:77] Creating layer loss
I0428 20:03:52.169523 30279 net.cpp:124] Setting up loss
I0428 20:03:52.169533 30279 net.cpp:131] Top shape: (1)
I0428 20:03:52.169535 30279 net.cpp:134]     with loss weight 1
I0428 20:03:52.169549 30279 net.cpp:139] Memory required for data: 6450808
I0428 20:03:52.169553 30279 net.cpp:200] loss needs backward computation.
I0428 20:03:52.169556 30279 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:52.169560 30279 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:52.169562 30279 net.cpp:200] relu3 needs backward computation.
I0428 20:03:52.169572 30279 net.cpp:200] ip3 needs backward computation.
I0428 20:03:52.169574 30279 net.cpp:200] relu2 needs backward computation.
I0428 20:03:52.169577 30279 net.cpp:200] ip2 needs backward computation.
I0428 20:03:52.169579 30279 net.cpp:200] relu1 needs backward computation.
I0428 20:03:52.169581 30279 net.cpp:200] ip1 needs backward computation.
I0428 20:03:52.169590 30279 net.cpp:200] pool1 needs backward computation.
I0428 20:03:52.169592 30279 net.cpp:200] conv1 needs backward computation.
I0428 20:03:52.169595 30279 net.cpp:200] pool0 needs backward computation.
I0428 20:03:52.169598 30279 net.cpp:200] conv0 needs backward computation.
I0428 20:03:52.169601 30279 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:52.169605 30279 net.cpp:202] mnist does not need backward computation.
I0428 20:03:52.169613 30279 net.cpp:244] This network produces output accuracy
I0428 20:03:52.169616 30279 net.cpp:244] This network produces output loss
I0428 20:03:52.169626 30279 net.cpp:257] Network initialization done.
I0428 20:03:52.169665 30279 solver.cpp:56] Solver scaffolding done.
I0428 20:03:52.169981 30279 caffe.cpp:248] Starting Optimization
I0428 20:03:52.169988 30279 solver.cpp:273] Solving LeNet
I0428 20:03:52.169991 30279 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:52.170780 30279 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:52.176182 30279 blocking_queue.cpp:49] Waiting for data
I0428 20:03:52.246316 30286 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:52.246985 30279 solver.cpp:398]     Test net output #0: accuracy = 0.0944
I0428 20:03:52.247004 30279 solver.cpp:398]     Test net output #1: loss = 2.30109 (* 1 = 2.30109 loss)
I0428 20:03:52.250869 30279 solver.cpp:219] Iteration 0 (0 iter/s, 0.080853s/100 iters), loss = 2.29533
I0428 20:03:52.250892 30279 solver.cpp:238]     Train net output #0: loss = 2.29533 (* 1 = 2.29533 loss)
I0428 20:03:52.250919 30279 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:52.406958 30279 solver.cpp:219] Iteration 100 (640.823 iter/s, 0.156049s/100 iters), loss = 0.511832
I0428 20:03:52.406982 30279 solver.cpp:238]     Train net output #0: loss = 0.511832 (* 1 = 0.511832 loss)
I0428 20:03:52.406988 30279 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:52.560762 30279 solver.cpp:219] Iteration 200 (650.344 iter/s, 0.153765s/100 iters), loss = 0.432932
I0428 20:03:52.560787 30279 solver.cpp:238]     Train net output #0: loss = 0.432932 (* 1 = 0.432932 loss)
I0428 20:03:52.560813 30279 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:52.713537 30279 solver.cpp:219] Iteration 300 (654.726 iter/s, 0.152736s/100 iters), loss = 0.356233
I0428 20:03:52.713563 30279 solver.cpp:238]     Train net output #0: loss = 0.356233 (* 1 = 0.356233 loss)
I0428 20:03:52.713570 30279 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:52.866235 30279 solver.cpp:219] Iteration 400 (655.051 iter/s, 0.15266s/100 iters), loss = 0.377569
I0428 20:03:52.866258 30279 solver.cpp:238]     Train net output #0: loss = 0.377569 (* 1 = 0.377569 loss)
I0428 20:03:52.866279 30279 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:53.018214 30279 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:53.075517 30286 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:53.077332 30279 solver.cpp:398]     Test net output #0: accuracy = 0.8647
I0428 20:03:53.077375 30279 solver.cpp:398]     Test net output #1: loss = 0.363338 (* 1 = 0.363338 loss)
I0428 20:03:53.079236 30279 solver.cpp:219] Iteration 500 (469.607 iter/s, 0.212944s/100 iters), loss = 0.299969
I0428 20:03:53.079324 30279 solver.cpp:238]     Train net output #0: loss = 0.299969 (* 1 = 0.299969 loss)
I0428 20:03:53.079340 30279 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:53.273805 30279 solver.cpp:219] Iteration 600 (514.224 iter/s, 0.194468s/100 iters), loss = 0.363217
I0428 20:03:53.273857 30279 solver.cpp:238]     Train net output #0: loss = 0.363217 (* 1 = 0.363217 loss)
I0428 20:03:53.273870 30279 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:53.467633 30279 solver.cpp:219] Iteration 700 (516.107 iter/s, 0.193758s/100 iters), loss = 0.369327
I0428 20:03:53.467689 30279 solver.cpp:238]     Train net output #0: loss = 0.369327 (* 1 = 0.369327 loss)
I0428 20:03:53.467702 30279 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:53.663983 30279 solver.cpp:219] Iteration 800 (509.475 iter/s, 0.19628s/100 iters), loss = 0.471113
I0428 20:03:53.664038 30279 solver.cpp:238]     Train net output #0: loss = 0.471113 (* 1 = 0.471113 loss)
I0428 20:03:53.664053 30279 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:53.858976 30279 solver.cpp:219] Iteration 900 (513.027 iter/s, 0.194921s/100 iters), loss = 0.169298
I0428 20:03:53.859030 30279 solver.cpp:238]     Train net output #0: loss = 0.169298 (* 1 = 0.169298 loss)
I0428 20:03:53.859043 30279 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:53.923815 30285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:54.043771 30279 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:54.046481 30279 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:54.047797 30279 solver.cpp:311] Iteration 1000, loss = 0.275326
I0428 20:03:54.047823 30279 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:54.123564 30286 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:54.124235 30279 solver.cpp:398]     Test net output #0: accuracy = 0.8847
I0428 20:03:54.124260 30279 solver.cpp:398]     Test net output #1: loss = 0.295459 (* 1 = 0.295459 loss)
I0428 20:03:54.124267 30279 solver.cpp:316] Optimization Done.
I0428 20:03:54.124270 30279 caffe.cpp:259] Optimization Done.
