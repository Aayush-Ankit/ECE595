I0428 20:11:37.759259 32107 caffe.cpp:218] Using GPUs 0
I0428 20:11:37.792019 32107 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:38.247378 32107 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1163.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:38.247514 32107 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1163.prototxt
I0428 20:11:38.247838 32107 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:38.247853 32107 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:38.247931 32107 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:38.247990 32107 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:38.248075 32107 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:38.248093 32107 net.cpp:86] Creating Layer mnist
I0428 20:11:38.248100 32107 net.cpp:382] mnist -> data
I0428 20:11:38.248118 32107 net.cpp:382] mnist -> label
I0428 20:11:38.249114 32107 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:38.251498 32107 net.cpp:124] Setting up mnist
I0428 20:11:38.251544 32107 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:38.251549 32107 net.cpp:131] Top shape: 64 (64)
I0428 20:11:38.251552 32107 net.cpp:139] Memory required for data: 200960
I0428 20:11:38.251560 32107 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:38.251574 32107 net.cpp:86] Creating Layer conv0
I0428 20:11:38.251592 32107 net.cpp:408] conv0 <- data
I0428 20:11:38.251603 32107 net.cpp:382] conv0 -> conv0
I0428 20:11:38.478369 32107 net.cpp:124] Setting up conv0
I0428 20:11:38.478412 32107 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:38.478416 32107 net.cpp:139] Memory required for data: 3887360
I0428 20:11:38.478430 32107 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:38.478442 32107 net.cpp:86] Creating Layer pool0
I0428 20:11:38.478446 32107 net.cpp:408] pool0 <- conv0
I0428 20:11:38.478451 32107 net.cpp:382] pool0 -> pool0
I0428 20:11:38.478509 32107 net.cpp:124] Setting up pool0
I0428 20:11:38.478515 32107 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:38.478518 32107 net.cpp:139] Memory required for data: 4808960
I0428 20:11:38.478520 32107 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:38.478531 32107 net.cpp:86] Creating Layer conv1
I0428 20:11:38.478534 32107 net.cpp:408] conv1 <- pool0
I0428 20:11:38.478539 32107 net.cpp:382] conv1 -> conv1
I0428 20:11:38.480696 32107 net.cpp:124] Setting up conv1
I0428 20:11:38.480710 32107 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:38.480729 32107 net.cpp:139] Memory required for data: 5628160
I0428 20:11:38.480737 32107 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:38.480744 32107 net.cpp:86] Creating Layer pool1
I0428 20:11:38.480747 32107 net.cpp:408] pool1 <- conv1
I0428 20:11:38.480752 32107 net.cpp:382] pool1 -> pool1
I0428 20:11:38.480803 32107 net.cpp:124] Setting up pool1
I0428 20:11:38.480829 32107 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:38.480831 32107 net.cpp:139] Memory required for data: 5832960
I0428 20:11:38.480834 32107 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:38.480857 32107 net.cpp:86] Creating Layer ip1
I0428 20:11:38.480860 32107 net.cpp:408] ip1 <- pool1
I0428 20:11:38.480865 32107 net.cpp:382] ip1 -> ip1
I0428 20:11:38.481257 32107 net.cpp:124] Setting up ip1
I0428 20:11:38.481266 32107 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:38.481283 32107 net.cpp:139] Memory required for data: 5845760
I0428 20:11:38.481292 32107 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:38.481297 32107 net.cpp:86] Creating Layer relu1
I0428 20:11:38.481314 32107 net.cpp:408] relu1 <- ip1
I0428 20:11:38.481318 32107 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:38.481506 32107 net.cpp:124] Setting up relu1
I0428 20:11:38.481515 32107 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:38.481518 32107 net.cpp:139] Memory required for data: 5858560
I0428 20:11:38.481521 32107 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:38.481528 32107 net.cpp:86] Creating Layer ip2
I0428 20:11:38.481530 32107 net.cpp:408] ip2 <- ip1
I0428 20:11:38.481534 32107 net.cpp:382] ip2 -> ip2
I0428 20:11:38.481628 32107 net.cpp:124] Setting up ip2
I0428 20:11:38.481636 32107 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:38.481638 32107 net.cpp:139] Memory required for data: 5861120
I0428 20:11:38.481643 32107 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:38.481648 32107 net.cpp:86] Creating Layer relu2
I0428 20:11:38.481652 32107 net.cpp:408] relu2 <- ip2
I0428 20:11:38.481655 32107 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:38.482409 32107 net.cpp:124] Setting up relu2
I0428 20:11:38.482419 32107 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:38.482437 32107 net.cpp:139] Memory required for data: 5863680
I0428 20:11:38.482441 32107 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:38.482447 32107 net.cpp:86] Creating Layer ip3
I0428 20:11:38.482450 32107 net.cpp:408] ip3 <- ip2
I0428 20:11:38.482455 32107 net.cpp:382] ip3 -> ip3
I0428 20:11:38.482571 32107 net.cpp:124] Setting up ip3
I0428 20:11:38.482579 32107 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:38.482583 32107 net.cpp:139] Memory required for data: 5866240
I0428 20:11:38.482590 32107 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:38.482595 32107 net.cpp:86] Creating Layer relu3
I0428 20:11:38.482597 32107 net.cpp:408] relu3 <- ip3
I0428 20:11:38.482601 32107 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:38.482764 32107 net.cpp:124] Setting up relu3
I0428 20:11:38.482784 32107 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:38.482786 32107 net.cpp:139] Memory required for data: 5868800
I0428 20:11:38.482789 32107 layer_factory.hpp:77] Creating layer loss
I0428 20:11:38.482795 32107 net.cpp:86] Creating Layer loss
I0428 20:11:38.482798 32107 net.cpp:408] loss <- ip3
I0428 20:11:38.482801 32107 net.cpp:408] loss <- label
I0428 20:11:38.482820 32107 net.cpp:382] loss -> loss
I0428 20:11:38.482837 32107 layer_factory.hpp:77] Creating layer loss
I0428 20:11:38.483047 32107 net.cpp:124] Setting up loss
I0428 20:11:38.483054 32107 net.cpp:131] Top shape: (1)
I0428 20:11:38.483057 32107 net.cpp:134]     with loss weight 1
I0428 20:11:38.483070 32107 net.cpp:139] Memory required for data: 5868804
I0428 20:11:38.483073 32107 net.cpp:200] loss needs backward computation.
I0428 20:11:38.483078 32107 net.cpp:200] relu3 needs backward computation.
I0428 20:11:38.483080 32107 net.cpp:200] ip3 needs backward computation.
I0428 20:11:38.483083 32107 net.cpp:200] relu2 needs backward computation.
I0428 20:11:38.483085 32107 net.cpp:200] ip2 needs backward computation.
I0428 20:11:38.483088 32107 net.cpp:200] relu1 needs backward computation.
I0428 20:11:38.483090 32107 net.cpp:200] ip1 needs backward computation.
I0428 20:11:38.483093 32107 net.cpp:200] pool1 needs backward computation.
I0428 20:11:38.483095 32107 net.cpp:200] conv1 needs backward computation.
I0428 20:11:38.483098 32107 net.cpp:200] pool0 needs backward computation.
I0428 20:11:38.483101 32107 net.cpp:200] conv0 needs backward computation.
I0428 20:11:38.483104 32107 net.cpp:202] mnist does not need backward computation.
I0428 20:11:38.483108 32107 net.cpp:244] This network produces output loss
I0428 20:11:38.483131 32107 net.cpp:257] Network initialization done.
I0428 20:11:38.483521 32107 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1163.prototxt
I0428 20:11:38.483563 32107 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:38.483654 32107 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:38.483763 32107 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:38.483805 32107 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:38.483817 32107 net.cpp:86] Creating Layer mnist
I0428 20:11:38.483821 32107 net.cpp:382] mnist -> data
I0428 20:11:38.483829 32107 net.cpp:382] mnist -> label
I0428 20:11:38.483909 32107 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:38.486062 32107 net.cpp:124] Setting up mnist
I0428 20:11:38.486105 32107 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:38.486110 32107 net.cpp:131] Top shape: 100 (100)
I0428 20:11:38.486114 32107 net.cpp:139] Memory required for data: 314000
I0428 20:11:38.486117 32107 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:38.486137 32107 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:38.486141 32107 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:38.486161 32107 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:38.486168 32107 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:38.486213 32107 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:38.486218 32107 net.cpp:131] Top shape: 100 (100)
I0428 20:11:38.486222 32107 net.cpp:131] Top shape: 100 (100)
I0428 20:11:38.486225 32107 net.cpp:139] Memory required for data: 314800
I0428 20:11:38.486228 32107 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:38.486237 32107 net.cpp:86] Creating Layer conv0
I0428 20:11:38.486239 32107 net.cpp:408] conv0 <- data
I0428 20:11:38.486244 32107 net.cpp:382] conv0 -> conv0
I0428 20:11:38.488083 32107 net.cpp:124] Setting up conv0
I0428 20:11:38.488112 32107 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:38.488116 32107 net.cpp:139] Memory required for data: 6074800
I0428 20:11:38.488124 32107 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:38.488131 32107 net.cpp:86] Creating Layer pool0
I0428 20:11:38.488134 32107 net.cpp:408] pool0 <- conv0
I0428 20:11:38.488139 32107 net.cpp:382] pool0 -> pool0
I0428 20:11:38.488190 32107 net.cpp:124] Setting up pool0
I0428 20:11:38.488196 32107 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:38.488199 32107 net.cpp:139] Memory required for data: 7514800
I0428 20:11:38.488203 32107 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:38.488211 32107 net.cpp:86] Creating Layer conv1
I0428 20:11:38.488214 32107 net.cpp:408] conv1 <- pool0
I0428 20:11:38.488219 32107 net.cpp:382] conv1 -> conv1
I0428 20:11:38.490181 32107 net.cpp:124] Setting up conv1
I0428 20:11:38.490195 32107 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:38.490200 32107 net.cpp:139] Memory required for data: 8794800
I0428 20:11:38.490223 32107 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:38.490245 32107 net.cpp:86] Creating Layer pool1
I0428 20:11:38.490248 32107 net.cpp:408] pool1 <- conv1
I0428 20:11:38.490253 32107 net.cpp:382] pool1 -> pool1
I0428 20:11:38.490289 32107 net.cpp:124] Setting up pool1
I0428 20:11:38.490295 32107 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:38.490298 32107 net.cpp:139] Memory required for data: 9114800
I0428 20:11:38.490303 32107 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:38.490308 32107 net.cpp:86] Creating Layer ip1
I0428 20:11:38.490317 32107 net.cpp:408] ip1 <- pool1
I0428 20:11:38.490322 32107 net.cpp:382] ip1 -> ip1
I0428 20:11:38.490684 32107 net.cpp:124] Setting up ip1
I0428 20:11:38.490692 32107 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:38.490720 32107 net.cpp:139] Memory required for data: 9134800
I0428 20:11:38.490728 32107 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:38.490733 32107 net.cpp:86] Creating Layer relu1
I0428 20:11:38.490736 32107 net.cpp:408] relu1 <- ip1
I0428 20:11:38.490741 32107 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:38.491024 32107 net.cpp:124] Setting up relu1
I0428 20:11:38.491044 32107 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:38.491047 32107 net.cpp:139] Memory required for data: 9154800
I0428 20:11:38.491051 32107 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:38.491060 32107 net.cpp:86] Creating Layer ip2
I0428 20:11:38.491062 32107 net.cpp:408] ip2 <- ip1
I0428 20:11:38.491067 32107 net.cpp:382] ip2 -> ip2
I0428 20:11:38.491189 32107 net.cpp:124] Setting up ip2
I0428 20:11:38.491195 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.491199 32107 net.cpp:139] Memory required for data: 9158800
I0428 20:11:38.491204 32107 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:38.491209 32107 net.cpp:86] Creating Layer relu2
I0428 20:11:38.491211 32107 net.cpp:408] relu2 <- ip2
I0428 20:11:38.491224 32107 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:38.491387 32107 net.cpp:124] Setting up relu2
I0428 20:11:38.491395 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.491400 32107 net.cpp:139] Memory required for data: 9162800
I0428 20:11:38.491402 32107 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:38.491407 32107 net.cpp:86] Creating Layer ip3
I0428 20:11:38.491411 32107 net.cpp:408] ip3 <- ip2
I0428 20:11:38.491416 32107 net.cpp:382] ip3 -> ip3
I0428 20:11:38.491509 32107 net.cpp:124] Setting up ip3
I0428 20:11:38.491516 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.491534 32107 net.cpp:139] Memory required for data: 9166800
I0428 20:11:38.491541 32107 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:38.491546 32107 net.cpp:86] Creating Layer relu3
I0428 20:11:38.491549 32107 net.cpp:408] relu3 <- ip3
I0428 20:11:38.491554 32107 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:38.492409 32107 net.cpp:124] Setting up relu3
I0428 20:11:38.492435 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.492439 32107 net.cpp:139] Memory required for data: 9170800
I0428 20:11:38.492444 32107 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:38.492449 32107 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:38.492451 32107 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:38.492457 32107 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:38.492463 32107 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:38.492504 32107 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:38.492509 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.492513 32107 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:38.492516 32107 net.cpp:139] Memory required for data: 9178800
I0428 20:11:38.492519 32107 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:38.492524 32107 net.cpp:86] Creating Layer accuracy
I0428 20:11:38.492527 32107 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:38.492532 32107 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:38.492535 32107 net.cpp:382] accuracy -> accuracy
I0428 20:11:38.492543 32107 net.cpp:124] Setting up accuracy
I0428 20:11:38.492547 32107 net.cpp:131] Top shape: (1)
I0428 20:11:38.492550 32107 net.cpp:139] Memory required for data: 9178804
I0428 20:11:38.492553 32107 layer_factory.hpp:77] Creating layer loss
I0428 20:11:38.492558 32107 net.cpp:86] Creating Layer loss
I0428 20:11:38.492561 32107 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:38.492565 32107 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:38.492569 32107 net.cpp:382] loss -> loss
I0428 20:11:38.492575 32107 layer_factory.hpp:77] Creating layer loss
I0428 20:11:38.492805 32107 net.cpp:124] Setting up loss
I0428 20:11:38.492836 32107 net.cpp:131] Top shape: (1)
I0428 20:11:38.492856 32107 net.cpp:134]     with loss weight 1
I0428 20:11:38.492877 32107 net.cpp:139] Memory required for data: 9178808
I0428 20:11:38.492880 32107 net.cpp:200] loss needs backward computation.
I0428 20:11:38.492884 32107 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:38.492888 32107 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:38.492892 32107 net.cpp:200] relu3 needs backward computation.
I0428 20:11:38.492893 32107 net.cpp:200] ip3 needs backward computation.
I0428 20:11:38.492897 32107 net.cpp:200] relu2 needs backward computation.
I0428 20:11:38.492900 32107 net.cpp:200] ip2 needs backward computation.
I0428 20:11:38.492903 32107 net.cpp:200] relu1 needs backward computation.
I0428 20:11:38.492907 32107 net.cpp:200] ip1 needs backward computation.
I0428 20:11:38.492909 32107 net.cpp:200] pool1 needs backward computation.
I0428 20:11:38.492913 32107 net.cpp:200] conv1 needs backward computation.
I0428 20:11:38.492916 32107 net.cpp:200] pool0 needs backward computation.
I0428 20:11:38.492919 32107 net.cpp:200] conv0 needs backward computation.
I0428 20:11:38.492923 32107 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:38.492926 32107 net.cpp:202] mnist does not need backward computation.
I0428 20:11:38.492929 32107 net.cpp:244] This network produces output accuracy
I0428 20:11:38.492933 32107 net.cpp:244] This network produces output loss
I0428 20:11:38.492944 32107 net.cpp:257] Network initialization done.
I0428 20:11:38.492985 32107 solver.cpp:56] Solver scaffolding done.
I0428 20:11:38.493407 32107 caffe.cpp:248] Starting Optimization
I0428 20:11:38.493424 32107 solver.cpp:273] Solving LeNet
I0428 20:11:38.493427 32107 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:38.494377 32107 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:38.500746 32107 blocking_queue.cpp:49] Waiting for data
I0428 20:11:38.568732 32114 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:38.569450 32107 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0428 20:11:38.569484 32107 solver.cpp:398]     Test net output #1: loss = 2.3383 (* 1 = 2.3383 loss)
I0428 20:11:38.573287 32107 solver.cpp:219] Iteration 0 (0 iter/s, 0.0798136s/100 iters), loss = 2.33565
I0428 20:11:38.573323 32107 solver.cpp:238]     Train net output #0: loss = 2.33565 (* 1 = 2.33565 loss)
I0428 20:11:38.573333 32107 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:38.699872 32107 solver.cpp:219] Iteration 100 (790.189 iter/s, 0.126552s/100 iters), loss = 0.505403
I0428 20:11:38.699913 32107 solver.cpp:238]     Train net output #0: loss = 0.505403 (* 1 = 0.505403 loss)
I0428 20:11:38.699919 32107 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:38.839825 32107 solver.cpp:219] Iteration 200 (714.818 iter/s, 0.139896s/100 iters), loss = 0.209712
I0428 20:11:38.839869 32107 solver.cpp:238]     Train net output #0: loss = 0.209712 (* 1 = 0.209712 loss)
I0428 20:11:38.839879 32107 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:38.968741 32107 solver.cpp:219] Iteration 300 (776.023 iter/s, 0.128862s/100 iters), loss = 0.192904
I0428 20:11:38.968775 32107 solver.cpp:238]     Train net output #0: loss = 0.192904 (* 1 = 0.192904 loss)
I0428 20:11:38.968783 32107 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:39.096786 32107 solver.cpp:219] Iteration 400 (781.269 iter/s, 0.127997s/100 iters), loss = 0.120138
I0428 20:11:39.096832 32107 solver.cpp:238]     Train net output #0: loss = 0.120138 (* 1 = 0.120138 loss)
I0428 20:11:39.096840 32107 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:39.224187 32107 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:39.285176 32114 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:39.286779 32107 solver.cpp:398]     Test net output #0: accuracy = 0.9632
I0428 20:11:39.286806 32107 solver.cpp:398]     Test net output #1: loss = 0.113931 (* 1 = 0.113931 loss)
I0428 20:11:39.287961 32107 solver.cpp:219] Iteration 500 (523.242 iter/s, 0.191116s/100 iters), loss = 0.0625677
I0428 20:11:39.288009 32107 solver.cpp:238]     Train net output #0: loss = 0.0625676 (* 1 = 0.0625676 loss)
I0428 20:11:39.288017 32107 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:39.416997 32107 solver.cpp:219] Iteration 600 (775.333 iter/s, 0.128977s/100 iters), loss = 0.0971484
I0428 20:11:39.417032 32107 solver.cpp:238]     Train net output #0: loss = 0.0971484 (* 1 = 0.0971484 loss)
I0428 20:11:39.417039 32107 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:39.546828 32107 solver.cpp:219] Iteration 700 (770.543 iter/s, 0.129779s/100 iters), loss = 0.126178
I0428 20:11:39.546881 32107 solver.cpp:238]     Train net output #0: loss = 0.126178 (* 1 = 0.126178 loss)
I0428 20:11:39.546893 32107 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:39.685362 32107 solver.cpp:219] Iteration 800 (722.181 iter/s, 0.138469s/100 iters), loss = 0.21034
I0428 20:11:39.685412 32107 solver.cpp:238]     Train net output #0: loss = 0.21034 (* 1 = 0.21034 loss)
I0428 20:11:39.685425 32107 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:39.822825 32107 solver.cpp:219] Iteration 900 (727.789 iter/s, 0.137402s/100 iters), loss = 0.185458
I0428 20:11:39.822863 32107 solver.cpp:238]     Train net output #0: loss = 0.185458 (* 1 = 0.185458 loss)
I0428 20:11:39.822872 32107 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:39.865618 32113 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:39.959537 32107 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:39.961807 32107 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:39.963135 32107 solver.cpp:311] Iteration 1000, loss = 0.130116
I0428 20:11:39.963160 32107 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:40.039088 32114 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:40.039743 32107 solver.cpp:398]     Test net output #0: accuracy = 0.9738
I0428 20:11:40.039767 32107 solver.cpp:398]     Test net output #1: loss = 0.0796324 (* 1 = 0.0796324 loss)
I0428 20:11:40.039773 32107 solver.cpp:316] Optimization Done.
I0428 20:11:40.039777 32107 caffe.cpp:259] Optimization Done.
