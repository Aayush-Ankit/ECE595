I0428 20:14:39.011530 32721 caffe.cpp:218] Using GPUs 0
I0428 20:14:39.049000 32721 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:39.575194 32721 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1227.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:39.575337 32721 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1227.prototxt
I0428 20:14:39.575740 32721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:39.575759 32721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:39.575860 32721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:39.575934 32721 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:39.576031 32721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:39.576055 32721 net.cpp:86] Creating Layer mnist
I0428 20:14:39.576062 32721 net.cpp:382] mnist -> data
I0428 20:14:39.576086 32721 net.cpp:382] mnist -> label
I0428 20:14:39.577179 32721 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:39.579612 32721 net.cpp:124] Setting up mnist
I0428 20:14:39.579630 32721 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:39.579638 32721 net.cpp:131] Top shape: 64 (64)
I0428 20:14:39.579641 32721 net.cpp:139] Memory required for data: 200960
I0428 20:14:39.579648 32721 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:39.579664 32721 net.cpp:86] Creating Layer conv0
I0428 20:14:39.579685 32721 net.cpp:408] conv0 <- data
I0428 20:14:39.579697 32721 net.cpp:382] conv0 -> conv0
I0428 20:14:39.866586 32721 net.cpp:124] Setting up conv0
I0428 20:14:39.866617 32721 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:39.866621 32721 net.cpp:139] Memory required for data: 7573760
I0428 20:14:39.866637 32721 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:39.866650 32721 net.cpp:86] Creating Layer pool0
I0428 20:14:39.866655 32721 net.cpp:408] pool0 <- conv0
I0428 20:14:39.866660 32721 net.cpp:382] pool0 -> pool0
I0428 20:14:39.866711 32721 net.cpp:124] Setting up pool0
I0428 20:14:39.866717 32721 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:39.866720 32721 net.cpp:139] Memory required for data: 9416960
I0428 20:14:39.866724 32721 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:39.866736 32721 net.cpp:86] Creating Layer conv1
I0428 20:14:39.866739 32721 net.cpp:408] conv1 <- pool0
I0428 20:14:39.866746 32721 net.cpp:382] conv1 -> conv1
I0428 20:14:39.868661 32721 net.cpp:124] Setting up conv1
I0428 20:14:39.868676 32721 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:39.868681 32721 net.cpp:139] Memory required for data: 9449728
I0428 20:14:39.868690 32721 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:39.868700 32721 net.cpp:86] Creating Layer pool1
I0428 20:14:39.868703 32721 net.cpp:408] pool1 <- conv1
I0428 20:14:39.868708 32721 net.cpp:382] pool1 -> pool1
I0428 20:14:39.868748 32721 net.cpp:124] Setting up pool1
I0428 20:14:39.868754 32721 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:39.868757 32721 net.cpp:139] Memory required for data: 9457920
I0428 20:14:39.868760 32721 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:39.868769 32721 net.cpp:86] Creating Layer ip1
I0428 20:14:39.868772 32721 net.cpp:408] ip1 <- pool1
I0428 20:14:39.868778 32721 net.cpp:382] ip1 -> ip1
I0428 20:14:39.868896 32721 net.cpp:124] Setting up ip1
I0428 20:14:39.868906 32721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:39.868908 32721 net.cpp:139] Memory required for data: 9460480
I0428 20:14:39.868916 32721 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:39.868922 32721 net.cpp:86] Creating Layer relu1
I0428 20:14:39.868927 32721 net.cpp:408] relu1 <- ip1
I0428 20:14:39.868932 32721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:39.869117 32721 net.cpp:124] Setting up relu1
I0428 20:14:39.869124 32721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:39.869128 32721 net.cpp:139] Memory required for data: 9463040
I0428 20:14:39.869132 32721 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:39.869138 32721 net.cpp:86] Creating Layer ip2
I0428 20:14:39.869143 32721 net.cpp:408] ip2 <- ip1
I0428 20:14:39.869148 32721 net.cpp:382] ip2 -> ip2
I0428 20:14:39.869247 32721 net.cpp:124] Setting up ip2
I0428 20:14:39.869256 32721 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:39.869258 32721 net.cpp:139] Memory required for data: 9475840
I0428 20:14:39.869263 32721 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:39.869269 32721 net.cpp:86] Creating Layer relu2
I0428 20:14:39.869272 32721 net.cpp:408] relu2 <- ip2
I0428 20:14:39.869278 32721 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:39.870054 32721 net.cpp:124] Setting up relu2
I0428 20:14:39.870067 32721 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:39.870071 32721 net.cpp:139] Memory required for data: 9488640
I0428 20:14:39.870074 32721 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:39.870084 32721 net.cpp:86] Creating Layer ip3
I0428 20:14:39.870086 32721 net.cpp:408] ip3 <- ip2
I0428 20:14:39.870091 32721 net.cpp:382] ip3 -> ip3
I0428 20:14:39.870195 32721 net.cpp:124] Setting up ip3
I0428 20:14:39.870203 32721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:39.870206 32721 net.cpp:139] Memory required for data: 9491200
I0428 20:14:39.870213 32721 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:39.870220 32721 net.cpp:86] Creating Layer relu3
I0428 20:14:39.870224 32721 net.cpp:408] relu3 <- ip3
I0428 20:14:39.870229 32721 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:39.870398 32721 net.cpp:124] Setting up relu3
I0428 20:14:39.870407 32721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:39.870410 32721 net.cpp:139] Memory required for data: 9493760
I0428 20:14:39.870414 32721 layer_factory.hpp:77] Creating layer loss
I0428 20:14:39.870420 32721 net.cpp:86] Creating Layer loss
I0428 20:14:39.870424 32721 net.cpp:408] loss <- ip3
I0428 20:14:39.870429 32721 net.cpp:408] loss <- label
I0428 20:14:39.870435 32721 net.cpp:382] loss -> loss
I0428 20:14:39.870452 32721 layer_factory.hpp:77] Creating layer loss
I0428 20:14:39.870685 32721 net.cpp:124] Setting up loss
I0428 20:14:39.870694 32721 net.cpp:131] Top shape: (1)
I0428 20:14:39.870697 32721 net.cpp:134]     with loss weight 1
I0428 20:14:39.870712 32721 net.cpp:139] Memory required for data: 9493764
I0428 20:14:39.870714 32721 net.cpp:200] loss needs backward computation.
I0428 20:14:39.870718 32721 net.cpp:200] relu3 needs backward computation.
I0428 20:14:39.870721 32721 net.cpp:200] ip3 needs backward computation.
I0428 20:14:39.870724 32721 net.cpp:200] relu2 needs backward computation.
I0428 20:14:39.870728 32721 net.cpp:200] ip2 needs backward computation.
I0428 20:14:39.870730 32721 net.cpp:200] relu1 needs backward computation.
I0428 20:14:39.870733 32721 net.cpp:200] ip1 needs backward computation.
I0428 20:14:39.870736 32721 net.cpp:200] pool1 needs backward computation.
I0428 20:14:39.870739 32721 net.cpp:200] conv1 needs backward computation.
I0428 20:14:39.870743 32721 net.cpp:200] pool0 needs backward computation.
I0428 20:14:39.870745 32721 net.cpp:200] conv0 needs backward computation.
I0428 20:14:39.870749 32721 net.cpp:202] mnist does not need backward computation.
I0428 20:14:39.870753 32721 net.cpp:244] This network produces output loss
I0428 20:14:39.870762 32721 net.cpp:257] Network initialization done.
I0428 20:14:39.871105 32721 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1227.prototxt
I0428 20:14:39.871148 32721 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:39.871258 32721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:39.871340 32721 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:39.871383 32721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:39.871395 32721 net.cpp:86] Creating Layer mnist
I0428 20:14:39.871402 32721 net.cpp:382] mnist -> data
I0428 20:14:39.871409 32721 net.cpp:382] mnist -> label
I0428 20:14:39.871497 32721 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:39.873385 32721 net.cpp:124] Setting up mnist
I0428 20:14:39.873399 32721 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:39.873404 32721 net.cpp:131] Top shape: 100 (100)
I0428 20:14:39.873407 32721 net.cpp:139] Memory required for data: 314000
I0428 20:14:39.873411 32721 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:39.873420 32721 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:39.873425 32721 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:39.873455 32721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:39.873464 32721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:39.873510 32721 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:39.873517 32721 net.cpp:131] Top shape: 100 (100)
I0428 20:14:39.873522 32721 net.cpp:131] Top shape: 100 (100)
I0428 20:14:39.873524 32721 net.cpp:139] Memory required for data: 314800
I0428 20:14:39.873528 32721 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:39.873538 32721 net.cpp:86] Creating Layer conv0
I0428 20:14:39.873540 32721 net.cpp:408] conv0 <- data
I0428 20:14:39.873545 32721 net.cpp:382] conv0 -> conv0
I0428 20:14:39.875226 32721 net.cpp:124] Setting up conv0
I0428 20:14:39.875239 32721 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:39.875243 32721 net.cpp:139] Memory required for data: 11834800
I0428 20:14:39.875252 32721 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:39.875260 32721 net.cpp:86] Creating Layer pool0
I0428 20:14:39.875264 32721 net.cpp:408] pool0 <- conv0
I0428 20:14:39.875269 32721 net.cpp:382] pool0 -> pool0
I0428 20:14:39.875305 32721 net.cpp:124] Setting up pool0
I0428 20:14:39.875311 32721 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:39.875314 32721 net.cpp:139] Memory required for data: 14714800
I0428 20:14:39.875316 32721 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:39.875326 32721 net.cpp:86] Creating Layer conv1
I0428 20:14:39.875329 32721 net.cpp:408] conv1 <- pool0
I0428 20:14:39.875336 32721 net.cpp:382] conv1 -> conv1
I0428 20:14:39.876791 32721 net.cpp:124] Setting up conv1
I0428 20:14:39.876804 32721 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:39.876813 32721 net.cpp:139] Memory required for data: 14766000
I0428 20:14:39.876845 32721 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:39.876854 32721 net.cpp:86] Creating Layer pool1
I0428 20:14:39.876858 32721 net.cpp:408] pool1 <- conv1
I0428 20:14:39.876879 32721 net.cpp:382] pool1 -> pool1
I0428 20:14:39.876934 32721 net.cpp:124] Setting up pool1
I0428 20:14:39.876945 32721 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:39.876955 32721 net.cpp:139] Memory required for data: 14778800
I0428 20:14:39.876957 32721 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:39.876967 32721 net.cpp:86] Creating Layer ip1
I0428 20:14:39.876971 32721 net.cpp:408] ip1 <- pool1
I0428 20:14:39.876977 32721 net.cpp:382] ip1 -> ip1
I0428 20:14:39.877076 32721 net.cpp:124] Setting up ip1
I0428 20:14:39.877084 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.877097 32721 net.cpp:139] Memory required for data: 14782800
I0428 20:14:39.877106 32721 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:39.877113 32721 net.cpp:86] Creating Layer relu1
I0428 20:14:39.877116 32721 net.cpp:408] relu1 <- ip1
I0428 20:14:39.877121 32721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:39.877321 32721 net.cpp:124] Setting up relu1
I0428 20:14:39.877331 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.877351 32721 net.cpp:139] Memory required for data: 14786800
I0428 20:14:39.877354 32721 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:39.877369 32721 net.cpp:86] Creating Layer ip2
I0428 20:14:39.877373 32721 net.cpp:408] ip2 <- ip1
I0428 20:14:39.877379 32721 net.cpp:382] ip2 -> ip2
I0428 20:14:39.877498 32721 net.cpp:124] Setting up ip2
I0428 20:14:39.877511 32721 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:39.877514 32721 net.cpp:139] Memory required for data: 14806800
I0428 20:14:39.877521 32721 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:39.877526 32721 net.cpp:86] Creating Layer relu2
I0428 20:14:39.877529 32721 net.cpp:408] relu2 <- ip2
I0428 20:14:39.877534 32721 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:39.877698 32721 net.cpp:124] Setting up relu2
I0428 20:14:39.877723 32721 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:39.877727 32721 net.cpp:139] Memory required for data: 14826800
I0428 20:14:39.877744 32721 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:39.877758 32721 net.cpp:86] Creating Layer ip3
I0428 20:14:39.877768 32721 net.cpp:408] ip3 <- ip2
I0428 20:14:39.877775 32721 net.cpp:382] ip3 -> ip3
I0428 20:14:39.877887 32721 net.cpp:124] Setting up ip3
I0428 20:14:39.877893 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.877897 32721 net.cpp:139] Memory required for data: 14830800
I0428 20:14:39.877904 32721 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:39.877909 32721 net.cpp:86] Creating Layer relu3
I0428 20:14:39.877912 32721 net.cpp:408] relu3 <- ip3
I0428 20:14:39.877919 32721 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:39.878727 32721 net.cpp:124] Setting up relu3
I0428 20:14:39.878739 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.878759 32721 net.cpp:139] Memory required for data: 14834800
I0428 20:14:39.878762 32721 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:14:39.878773 32721 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:14:39.878777 32721 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:14:39.878783 32721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:14:39.878790 32721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:14:39.878842 32721 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:14:39.878847 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.878851 32721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:39.878854 32721 net.cpp:139] Memory required for data: 14842800
I0428 20:14:39.878857 32721 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:39.878865 32721 net.cpp:86] Creating Layer accuracy
I0428 20:14:39.878867 32721 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:14:39.878872 32721 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:39.878877 32721 net.cpp:382] accuracy -> accuracy
I0428 20:14:39.878885 32721 net.cpp:124] Setting up accuracy
I0428 20:14:39.878888 32721 net.cpp:131] Top shape: (1)
I0428 20:14:39.878891 32721 net.cpp:139] Memory required for data: 14842804
I0428 20:14:39.878895 32721 layer_factory.hpp:77] Creating layer loss
I0428 20:14:39.878900 32721 net.cpp:86] Creating Layer loss
I0428 20:14:39.878902 32721 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:14:39.878906 32721 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:39.878911 32721 net.cpp:382] loss -> loss
I0428 20:14:39.878939 32721 layer_factory.hpp:77] Creating layer loss
I0428 20:14:39.879204 32721 net.cpp:124] Setting up loss
I0428 20:14:39.879215 32721 net.cpp:131] Top shape: (1)
I0428 20:14:39.879217 32721 net.cpp:134]     with loss weight 1
I0428 20:14:39.879233 32721 net.cpp:139] Memory required for data: 14842808
I0428 20:14:39.879240 32721 net.cpp:200] loss needs backward computation.
I0428 20:14:39.879243 32721 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:39.879248 32721 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:14:39.879251 32721 net.cpp:200] relu3 needs backward computation.
I0428 20:14:39.879256 32721 net.cpp:200] ip3 needs backward computation.
I0428 20:14:39.879269 32721 net.cpp:200] relu2 needs backward computation.
I0428 20:14:39.879273 32721 net.cpp:200] ip2 needs backward computation.
I0428 20:14:39.879276 32721 net.cpp:200] relu1 needs backward computation.
I0428 20:14:39.879293 32721 net.cpp:200] ip1 needs backward computation.
I0428 20:14:39.879297 32721 net.cpp:200] pool1 needs backward computation.
I0428 20:14:39.879300 32721 net.cpp:200] conv1 needs backward computation.
I0428 20:14:39.879303 32721 net.cpp:200] pool0 needs backward computation.
I0428 20:14:39.879307 32721 net.cpp:200] conv0 needs backward computation.
I0428 20:14:39.879312 32721 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:39.879315 32721 net.cpp:202] mnist does not need backward computation.
I0428 20:14:39.879318 32721 net.cpp:244] This network produces output accuracy
I0428 20:14:39.879323 32721 net.cpp:244] This network produces output loss
I0428 20:14:39.879333 32721 net.cpp:257] Network initialization done.
I0428 20:14:39.879374 32721 solver.cpp:56] Solver scaffolding done.
I0428 20:14:39.879747 32721 caffe.cpp:248] Starting Optimization
I0428 20:14:39.879755 32721 solver.cpp:273] Solving LeNet
I0428 20:14:39.879773 32721 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:39.880622 32721 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:39.886366 32721 blocking_queue.cpp:49] Waiting for data
I0428 20:14:39.957469 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:39.958248 32721 solver.cpp:398]     Test net output #0: accuracy = 0.1363
I0428 20:14:39.958283 32721 solver.cpp:398]     Test net output #1: loss = 2.31598 (* 1 = 2.31598 loss)
I0428 20:14:39.962553 32721 solver.cpp:219] Iteration 0 (-9.99126e-43 iter/s, 0.0827525s/100 iters), loss = 2.32994
I0428 20:14:39.962592 32721 solver.cpp:238]     Train net output #0: loss = 2.32994 (* 1 = 2.32994 loss)
I0428 20:14:39.962604 32721 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:40.075222 32721 solver.cpp:219] Iteration 100 (887.97 iter/s, 0.112616s/100 iters), loss = 0.752609
I0428 20:14:40.075263 32721 solver.cpp:238]     Train net output #0: loss = 0.752609 (* 1 = 0.752609 loss)
I0428 20:14:40.075269 32721 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:40.199132 32721 solver.cpp:219] Iteration 200 (807.377 iter/s, 0.123858s/100 iters), loss = 0.686309
I0428 20:14:40.199172 32721 solver.cpp:238]     Train net output #0: loss = 0.686309 (* 1 = 0.686309 loss)
I0428 20:14:40.199177 32721 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:40.321667 32721 solver.cpp:219] Iteration 300 (816.423 iter/s, 0.122486s/100 iters), loss = 0.486879
I0428 20:14:40.321707 32721 solver.cpp:238]     Train net output #0: loss = 0.486879 (* 1 = 0.486879 loss)
I0428 20:14:40.321713 32721 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:40.433589 32721 solver.cpp:219] Iteration 400 (893.879 iter/s, 0.111872s/100 iters), loss = 0.344016
I0428 20:14:40.433627 32721 solver.cpp:238]     Train net output #0: loss = 0.344016 (* 1 = 0.344016 loss)
I0428 20:14:40.433634 32721 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:40.544158 32721 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:40.620312 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:40.621112 32721 solver.cpp:398]     Test net output #0: accuracy = 0.9217
I0428 20:14:40.621162 32721 solver.cpp:398]     Test net output #1: loss = 0.255238 (* 1 = 0.255238 loss)
I0428 20:14:40.622385 32721 solver.cpp:219] Iteration 500 (529.802 iter/s, 0.18875s/100 iters), loss = 0.28653
I0428 20:14:40.622423 32721 solver.cpp:238]     Train net output #0: loss = 0.28653 (* 1 = 0.28653 loss)
I0428 20:14:40.622431 32721 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:40.739938 32721 solver.cpp:219] Iteration 600 (851.027 iter/s, 0.117505s/100 iters), loss = 0.156966
I0428 20:14:40.739979 32721 solver.cpp:238]     Train net output #0: loss = 0.156966 (* 1 = 0.156966 loss)
I0428 20:14:40.739984 32721 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:40.855041 32721 solver.cpp:219] Iteration 700 (869.059 iter/s, 0.115067s/100 iters), loss = 0.259204
I0428 20:14:40.855082 32721 solver.cpp:238]     Train net output #0: loss = 0.259204 (* 1 = 0.259204 loss)
I0428 20:14:40.855088 32721 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:40.965908 32721 solver.cpp:219] Iteration 800 (902.286 iter/s, 0.11083s/100 iters), loss = 0.393272
I0428 20:14:40.965948 32721 solver.cpp:238]     Train net output #0: loss = 0.393272 (* 1 = 0.393272 loss)
I0428 20:14:40.965955 32721 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:41.077220 32721 solver.cpp:219] Iteration 900 (898.774 iter/s, 0.111263s/100 iters), loss = 0.213378
I0428 20:14:41.077260 32721 solver.cpp:238]     Train net output #0: loss = 0.213378 (* 1 = 0.213378 loss)
I0428 20:14:41.077266 32721 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:41.114104 32727 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:41.186980 32721 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:41.187893 32721 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:41.188638 32721 solver.cpp:311] Iteration 1000, loss = 0.209107
I0428 20:14:41.188657 32721 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:41.264457 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:41.265225 32721 solver.cpp:398]     Test net output #0: accuracy = 0.9434
I0428 20:14:41.265259 32721 solver.cpp:398]     Test net output #1: loss = 0.189696 (* 1 = 0.189696 loss)
I0428 20:14:41.265264 32721 solver.cpp:316] Optimization Done.
I0428 20:14:41.265267 32721 caffe.cpp:259] Optimization Done.
