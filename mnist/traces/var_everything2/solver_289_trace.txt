I0428 19:38:56.518134 24174 caffe.cpp:218] Using GPUs 0
I0428 19:38:56.556242 24174 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:56.996129 24174 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test289.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:56.996284 24174 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test289.prototxt
I0428 19:38:56.996631 24174 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:56.996649 24174 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:56.996737 24174 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:56.996846 24174 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:56.996986 24174 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:56.997014 24174 net.cpp:86] Creating Layer mnist
I0428 19:38:56.997026 24174 net.cpp:382] mnist -> data
I0428 19:38:56.997052 24174 net.cpp:382] mnist -> label
I0428 19:38:56.998253 24174 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:57.000454 24174 net.cpp:124] Setting up mnist
I0428 19:38:57.000488 24174 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:57.000495 24174 net.cpp:131] Top shape: 64 (64)
I0428 19:38:57.000500 24174 net.cpp:139] Memory required for data: 200960
I0428 19:38:57.000509 24174 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:57.000533 24174 net.cpp:86] Creating Layer conv0
I0428 19:38:57.000552 24174 net.cpp:408] conv0 <- data
I0428 19:38:57.000567 24174 net.cpp:382] conv0 -> conv0
I0428 19:38:57.234117 24174 net.cpp:124] Setting up conv0
I0428 19:38:57.234146 24174 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:57.234151 24174 net.cpp:139] Memory required for data: 495872
I0428 19:38:57.234171 24174 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:57.234187 24174 net.cpp:86] Creating Layer pool0
I0428 19:38:57.234194 24174 net.cpp:408] pool0 <- conv0
I0428 19:38:57.234202 24174 net.cpp:382] pool0 -> pool0
I0428 19:38:57.234257 24174 net.cpp:124] Setting up pool0
I0428 19:38:57.234266 24174 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:57.234271 24174 net.cpp:139] Memory required for data: 569600
I0428 19:38:57.234275 24174 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:57.234290 24174 net.cpp:86] Creating Layer conv1
I0428 19:38:57.234297 24174 net.cpp:408] conv1 <- pool0
I0428 19:38:57.234304 24174 net.cpp:382] conv1 -> conv1
I0428 19:38:57.236230 24174 net.cpp:124] Setting up conv1
I0428 19:38:57.236248 24174 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:57.236253 24174 net.cpp:139] Memory required for data: 602368
I0428 19:38:57.236270 24174 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:57.236296 24174 net.cpp:86] Creating Layer pool1
I0428 19:38:57.236304 24174 net.cpp:408] pool1 <- conv1
I0428 19:38:57.236312 24174 net.cpp:382] pool1 -> pool1
I0428 19:38:57.236358 24174 net.cpp:124] Setting up pool1
I0428 19:38:57.236366 24174 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:57.236371 24174 net.cpp:139] Memory required for data: 610560
I0428 19:38:57.236377 24174 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:57.236387 24174 net.cpp:86] Creating Layer ip1
I0428 19:38:57.236397 24174 net.cpp:408] ip1 <- pool1
I0428 19:38:57.236407 24174 net.cpp:382] ip1 -> ip1
I0428 19:38:57.236512 24174 net.cpp:124] Setting up ip1
I0428 19:38:57.236521 24174 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:57.236526 24174 net.cpp:139] Memory required for data: 613120
I0428 19:38:57.236537 24174 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:57.236548 24174 net.cpp:86] Creating Layer relu1
I0428 19:38:57.236555 24174 net.cpp:408] relu1 <- ip1
I0428 19:38:57.236563 24174 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:57.236734 24174 net.cpp:124] Setting up relu1
I0428 19:38:57.236744 24174 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:57.236749 24174 net.cpp:139] Memory required for data: 615680
I0428 19:38:57.236755 24174 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:57.236768 24174 net.cpp:86] Creating Layer ip2
I0428 19:38:57.236773 24174 net.cpp:408] ip2 <- ip1
I0428 19:38:57.236781 24174 net.cpp:382] ip2 -> ip2
I0428 19:38:57.236912 24174 net.cpp:124] Setting up ip2
I0428 19:38:57.236922 24174 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:57.236927 24174 net.cpp:139] Memory required for data: 622080
I0428 19:38:57.236937 24174 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:57.236948 24174 net.cpp:86] Creating Layer relu2
I0428 19:38:57.236955 24174 net.cpp:408] relu2 <- ip2
I0428 19:38:57.236963 24174 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:57.237726 24174 net.cpp:124] Setting up relu2
I0428 19:38:57.237740 24174 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:57.237746 24174 net.cpp:139] Memory required for data: 628480
I0428 19:38:57.237751 24174 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:57.237763 24174 net.cpp:86] Creating Layer ip3
I0428 19:38:57.237769 24174 net.cpp:408] ip3 <- ip2
I0428 19:38:57.237779 24174 net.cpp:382] ip3 -> ip3
I0428 19:38:57.237884 24174 net.cpp:124] Setting up ip3
I0428 19:38:57.237892 24174 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:57.237897 24174 net.cpp:139] Memory required for data: 631040
I0428 19:38:57.237910 24174 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:57.237918 24174 net.cpp:86] Creating Layer relu3
I0428 19:38:57.237923 24174 net.cpp:408] relu3 <- ip3
I0428 19:38:57.237931 24174 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:57.238101 24174 net.cpp:124] Setting up relu3
I0428 19:38:57.238126 24174 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:57.238131 24174 net.cpp:139] Memory required for data: 633600
I0428 19:38:57.238137 24174 layer_factory.hpp:77] Creating layer loss
I0428 19:38:57.238145 24174 net.cpp:86] Creating Layer loss
I0428 19:38:57.238150 24174 net.cpp:408] loss <- ip3
I0428 19:38:57.238157 24174 net.cpp:408] loss <- label
I0428 19:38:57.238168 24174 net.cpp:382] loss -> loss
I0428 19:38:57.238186 24174 layer_factory.hpp:77] Creating layer loss
I0428 19:38:57.238471 24174 net.cpp:124] Setting up loss
I0428 19:38:57.238481 24174 net.cpp:131] Top shape: (1)
I0428 19:38:57.238486 24174 net.cpp:134]     with loss weight 1
I0428 19:38:57.238504 24174 net.cpp:139] Memory required for data: 633604
I0428 19:38:57.238510 24174 net.cpp:200] loss needs backward computation.
I0428 19:38:57.238517 24174 net.cpp:200] relu3 needs backward computation.
I0428 19:38:57.238536 24174 net.cpp:200] ip3 needs backward computation.
I0428 19:38:57.238541 24174 net.cpp:200] relu2 needs backward computation.
I0428 19:38:57.238546 24174 net.cpp:200] ip2 needs backward computation.
I0428 19:38:57.238551 24174 net.cpp:200] relu1 needs backward computation.
I0428 19:38:57.238556 24174 net.cpp:200] ip1 needs backward computation.
I0428 19:38:57.238562 24174 net.cpp:200] pool1 needs backward computation.
I0428 19:38:57.238567 24174 net.cpp:200] conv1 needs backward computation.
I0428 19:38:57.238572 24174 net.cpp:200] pool0 needs backward computation.
I0428 19:38:57.238577 24174 net.cpp:200] conv0 needs backward computation.
I0428 19:38:57.238582 24174 net.cpp:202] mnist does not need backward computation.
I0428 19:38:57.238587 24174 net.cpp:244] This network produces output loss
I0428 19:38:57.238603 24174 net.cpp:257] Network initialization done.
I0428 19:38:57.238945 24174 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test289.prototxt
I0428 19:38:57.238977 24174 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:57.239070 24174 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:57.239183 24174 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:57.239270 24174 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:57.239291 24174 net.cpp:86] Creating Layer mnist
I0428 19:38:57.239300 24174 net.cpp:382] mnist -> data
I0428 19:38:57.239310 24174 net.cpp:382] mnist -> label
I0428 19:38:57.239433 24174 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:57.241652 24174 net.cpp:124] Setting up mnist
I0428 19:38:57.241699 24174 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:57.241720 24174 net.cpp:131] Top shape: 100 (100)
I0428 19:38:57.241727 24174 net.cpp:139] Memory required for data: 314000
I0428 19:38:57.241734 24174 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:57.241744 24174 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:57.241750 24174 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:57.241758 24174 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:57.241770 24174 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:57.241825 24174 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:57.241834 24174 net.cpp:131] Top shape: 100 (100)
I0428 19:38:57.241842 24174 net.cpp:131] Top shape: 100 (100)
I0428 19:38:57.241847 24174 net.cpp:139] Memory required for data: 314800
I0428 19:38:57.241852 24174 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:57.241868 24174 net.cpp:86] Creating Layer conv0
I0428 19:38:57.241875 24174 net.cpp:408] conv0 <- data
I0428 19:38:57.241901 24174 net.cpp:382] conv0 -> conv0
I0428 19:38:57.243598 24174 net.cpp:124] Setting up conv0
I0428 19:38:57.243614 24174 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:57.243620 24174 net.cpp:139] Memory required for data: 775600
I0428 19:38:57.243634 24174 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:57.243646 24174 net.cpp:86] Creating Layer pool0
I0428 19:38:57.243654 24174 net.cpp:408] pool0 <- conv0
I0428 19:38:57.243661 24174 net.cpp:382] pool0 -> pool0
I0428 19:38:57.243706 24174 net.cpp:124] Setting up pool0
I0428 19:38:57.243715 24174 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:57.243719 24174 net.cpp:139] Memory required for data: 890800
I0428 19:38:57.243724 24174 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:57.243739 24174 net.cpp:86] Creating Layer conv1
I0428 19:38:57.243746 24174 net.cpp:408] conv1 <- pool0
I0428 19:38:57.243757 24174 net.cpp:382] conv1 -> conv1
I0428 19:38:57.245666 24174 net.cpp:124] Setting up conv1
I0428 19:38:57.245681 24174 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:57.245685 24174 net.cpp:139] Memory required for data: 942000
I0428 19:38:57.245714 24174 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:57.245724 24174 net.cpp:86] Creating Layer pool1
I0428 19:38:57.245730 24174 net.cpp:408] pool1 <- conv1
I0428 19:38:57.245740 24174 net.cpp:382] pool1 -> pool1
I0428 19:38:57.245800 24174 net.cpp:124] Setting up pool1
I0428 19:38:57.245810 24174 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:57.245815 24174 net.cpp:139] Memory required for data: 954800
I0428 19:38:57.245820 24174 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:57.245836 24174 net.cpp:86] Creating Layer ip1
I0428 19:38:57.245853 24174 net.cpp:408] ip1 <- pool1
I0428 19:38:57.245865 24174 net.cpp:382] ip1 -> ip1
I0428 19:38:57.245983 24174 net.cpp:124] Setting up ip1
I0428 19:38:57.245993 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.246011 24174 net.cpp:139] Memory required for data: 958800
I0428 19:38:57.246026 24174 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:57.246035 24174 net.cpp:86] Creating Layer relu1
I0428 19:38:57.246044 24174 net.cpp:408] relu1 <- ip1
I0428 19:38:57.246052 24174 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:57.246320 24174 net.cpp:124] Setting up relu1
I0428 19:38:57.246332 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.246338 24174 net.cpp:139] Memory required for data: 962800
I0428 19:38:57.246345 24174 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:57.246356 24174 net.cpp:86] Creating Layer ip2
I0428 19:38:57.246362 24174 net.cpp:408] ip2 <- ip1
I0428 19:38:57.246374 24174 net.cpp:382] ip2 -> ip2
I0428 19:38:57.246492 24174 net.cpp:124] Setting up ip2
I0428 19:38:57.246502 24174 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:57.246508 24174 net.cpp:139] Memory required for data: 972800
I0428 19:38:57.246518 24174 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:57.246527 24174 net.cpp:86] Creating Layer relu2
I0428 19:38:57.246533 24174 net.cpp:408] relu2 <- ip2
I0428 19:38:57.246543 24174 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:57.246845 24174 net.cpp:124] Setting up relu2
I0428 19:38:57.246855 24174 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:57.246861 24174 net.cpp:139] Memory required for data: 982800
I0428 19:38:57.246877 24174 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:57.246891 24174 net.cpp:86] Creating Layer ip3
I0428 19:38:57.246898 24174 net.cpp:408] ip3 <- ip2
I0428 19:38:57.246907 24174 net.cpp:382] ip3 -> ip3
I0428 19:38:57.247025 24174 net.cpp:124] Setting up ip3
I0428 19:38:57.247035 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.247041 24174 net.cpp:139] Memory required for data: 986800
I0428 19:38:57.247054 24174 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:57.247066 24174 net.cpp:86] Creating Layer relu3
I0428 19:38:57.247073 24174 net.cpp:408] relu3 <- ip3
I0428 19:38:57.247081 24174 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:57.247941 24174 net.cpp:124] Setting up relu3
I0428 19:38:57.247972 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.247979 24174 net.cpp:139] Memory required for data: 990800
I0428 19:38:57.247985 24174 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:57.247994 24174 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:57.248000 24174 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:57.248009 24174 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:57.248020 24174 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:57.248073 24174 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:57.248083 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.248091 24174 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:57.248096 24174 net.cpp:139] Memory required for data: 998800
I0428 19:38:57.248102 24174 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:57.248112 24174 net.cpp:86] Creating Layer accuracy
I0428 19:38:57.248119 24174 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:57.248126 24174 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:57.248137 24174 net.cpp:382] accuracy -> accuracy
I0428 19:38:57.248152 24174 net.cpp:124] Setting up accuracy
I0428 19:38:57.248162 24174 net.cpp:131] Top shape: (1)
I0428 19:38:57.248167 24174 net.cpp:139] Memory required for data: 998804
I0428 19:38:57.248173 24174 layer_factory.hpp:77] Creating layer loss
I0428 19:38:57.248181 24174 net.cpp:86] Creating Layer loss
I0428 19:38:57.248188 24174 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:57.248195 24174 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:57.248206 24174 net.cpp:382] loss -> loss
I0428 19:38:57.248217 24174 layer_factory.hpp:77] Creating layer loss
I0428 19:38:57.248515 24174 net.cpp:124] Setting up loss
I0428 19:38:57.248527 24174 net.cpp:131] Top shape: (1)
I0428 19:38:57.248536 24174 net.cpp:134]     with loss weight 1
I0428 19:38:57.248548 24174 net.cpp:139] Memory required for data: 998808
I0428 19:38:57.248564 24174 net.cpp:200] loss needs backward computation.
I0428 19:38:57.248571 24174 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:57.248579 24174 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:57.248585 24174 net.cpp:200] relu3 needs backward computation.
I0428 19:38:57.248590 24174 net.cpp:200] ip3 needs backward computation.
I0428 19:38:57.248596 24174 net.cpp:200] relu2 needs backward computation.
I0428 19:38:57.248601 24174 net.cpp:200] ip2 needs backward computation.
I0428 19:38:57.248606 24174 net.cpp:200] relu1 needs backward computation.
I0428 19:38:57.248612 24174 net.cpp:200] ip1 needs backward computation.
I0428 19:38:57.248621 24174 net.cpp:200] pool1 needs backward computation.
I0428 19:38:57.248626 24174 net.cpp:200] conv1 needs backward computation.
I0428 19:38:57.248632 24174 net.cpp:200] pool0 needs backward computation.
I0428 19:38:57.248638 24174 net.cpp:200] conv0 needs backward computation.
I0428 19:38:57.248646 24174 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:57.248651 24174 net.cpp:202] mnist does not need backward computation.
I0428 19:38:57.248656 24174 net.cpp:244] This network produces output accuracy
I0428 19:38:57.248663 24174 net.cpp:244] This network produces output loss
I0428 19:38:57.248685 24174 net.cpp:257] Network initialization done.
I0428 19:38:57.248740 24174 solver.cpp:56] Solver scaffolding done.
I0428 19:38:57.249168 24174 caffe.cpp:248] Starting Optimization
I0428 19:38:57.249176 24174 solver.cpp:273] Solving LeNet
I0428 19:38:57.249181 24174 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:57.249990 24174 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:57.252635 24174 blocking_queue.cpp:49] Waiting for data
I0428 19:38:57.309391 24181 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:57.309842 24174 solver.cpp:398]     Test net output #0: accuracy = 0.0987
I0428 19:38:57.309866 24174 solver.cpp:398]     Test net output #1: loss = 2.32816 (* 1 = 2.32816 loss)
I0428 19:38:57.311849 24174 solver.cpp:219] Iteration 0 (0 iter/s, 0.0626217s/100 iters), loss = 2.36016
I0428 19:38:57.311877 24174 solver.cpp:238]     Train net output #0: loss = 2.36016 (* 1 = 2.36016 loss)
I0428 19:38:57.311908 24174 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:57.377863 24174 solver.cpp:219] Iteration 100 (1515.67 iter/s, 0.0659773s/100 iters), loss = 1.51511
I0428 19:38:57.377892 24174 solver.cpp:238]     Train net output #0: loss = 1.51511 (* 1 = 1.51511 loss)
I0428 19:38:57.377917 24174 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:57.444473 24174 solver.cpp:219] Iteration 200 (1502.03 iter/s, 0.0665764s/100 iters), loss = 1.15174
I0428 19:38:57.444499 24174 solver.cpp:238]     Train net output #0: loss = 1.15174 (* 1 = 1.15174 loss)
I0428 19:38:57.444525 24174 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:57.511458 24174 solver.cpp:219] Iteration 300 (1493.6 iter/s, 0.0669522s/100 iters), loss = 0.647117
I0428 19:38:57.511485 24174 solver.cpp:238]     Train net output #0: loss = 0.647117 (* 1 = 0.647117 loss)
I0428 19:38:57.511494 24174 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:57.580019 24174 solver.cpp:219] Iteration 400 (1459.28 iter/s, 0.0685271s/100 iters), loss = 0.638655
I0428 19:38:57.580047 24174 solver.cpp:238]     Train net output #0: loss = 0.638655 (* 1 = 0.638655 loss)
I0428 19:38:57.580073 24174 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:57.648320 24174 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:57.722573 24181 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:57.723001 24174 solver.cpp:398]     Test net output #0: accuracy = 0.8802
I0428 19:38:57.723021 24174 solver.cpp:398]     Test net output #1: loss = 0.402842 (* 1 = 0.402842 loss)
I0428 19:38:57.723785 24174 solver.cpp:219] Iteration 500 (695.76 iter/s, 0.143728s/100 iters), loss = 0.634161
I0428 19:38:57.723811 24174 solver.cpp:238]     Train net output #0: loss = 0.634161 (* 1 = 0.634161 loss)
I0428 19:38:57.723839 24174 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:57.793717 24174 solver.cpp:219] Iteration 600 (1430.63 iter/s, 0.0698994s/100 iters), loss = 0.34328
I0428 19:38:57.793745 24174 solver.cpp:238]     Train net output #0: loss = 0.34328 (* 1 = 0.34328 loss)
I0428 19:38:57.793754 24174 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:57.861084 24174 solver.cpp:219] Iteration 700 (1485.13 iter/s, 0.0673341s/100 iters), loss = 0.606595
I0428 19:38:57.861125 24174 solver.cpp:238]     Train net output #0: loss = 0.606595 (* 1 = 0.606595 loss)
I0428 19:38:57.861150 24174 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:57.930402 24174 solver.cpp:219] Iteration 800 (1443.65 iter/s, 0.0692687s/100 iters), loss = 0.408581
I0428 19:38:57.930428 24174 solver.cpp:238]     Train net output #0: loss = 0.408581 (* 1 = 0.408581 loss)
I0428 19:38:57.930451 24174 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:57.998657 24174 solver.cpp:219] Iteration 900 (1465.76 iter/s, 0.068224s/100 iters), loss = 0.419235
I0428 19:38:57.998683 24174 solver.cpp:238]     Train net output #0: loss = 0.419235 (* 1 = 0.419235 loss)
I0428 19:38:57.998708 24174 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:58.021036 24180 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:58.064887 24174 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:58.065584 24174 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:58.066359 24174 solver.cpp:311] Iteration 1000, loss = 0.318816
I0428 19:38:58.066391 24174 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:58.141036 24181 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:58.141578 24174 solver.cpp:398]     Test net output #0: accuracy = 0.9215
I0428 19:38:58.141608 24174 solver.cpp:398]     Test net output #1: loss = 0.255148 (* 1 = 0.255148 loss)
I0428 19:38:58.141619 24174 solver.cpp:316] Optimization Done.
I0428 19:38:58.141625 24174 caffe.cpp:259] Optimization Done.
