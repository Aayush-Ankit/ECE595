I0428 20:15:57.145627   557 caffe.cpp:218] Using GPUs 0
I0428 20:15:57.184201   557 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:15:57.697203   557 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1259.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:15:57.697340   557 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1259.prototxt
I0428 20:15:57.697726   557 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:15:57.697744   557 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:15:57.697834   557 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:15:57.697916   557 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:57.698021   557 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:15:57.698047   557 net.cpp:86] Creating Layer mnist
I0428 20:15:57.698055   557 net.cpp:382] mnist -> data
I0428 20:15:57.698081   557 net.cpp:382] mnist -> label
I0428 20:15:57.699218   557 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:15:57.701807   557 net.cpp:124] Setting up mnist
I0428 20:15:57.701825   557 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:15:57.701831   557 net.cpp:131] Top shape: 64 (64)
I0428 20:15:57.701836   557 net.cpp:139] Memory required for data: 200960
I0428 20:15:57.701843   557 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:57.701887   557 net.cpp:86] Creating Layer conv0
I0428 20:15:57.701894   557 net.cpp:408] conv0 <- data
I0428 20:15:57.701906   557 net.cpp:382] conv0 -> conv0
I0428 20:15:57.988193   557 net.cpp:124] Setting up conv0
I0428 20:15:57.988219   557 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:15:57.988222   557 net.cpp:139] Memory required for data: 7573760
I0428 20:15:57.988255   557 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:57.988270   557 net.cpp:86] Creating Layer pool0
I0428 20:15:57.988275   557 net.cpp:408] pool0 <- conv0
I0428 20:15:57.988281   557 net.cpp:382] pool0 -> pool0
I0428 20:15:57.988332   557 net.cpp:124] Setting up pool0
I0428 20:15:57.988340   557 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:15:57.988343   557 net.cpp:139] Memory required for data: 9416960
I0428 20:15:57.988346   557 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:57.988359   557 net.cpp:86] Creating Layer conv1
I0428 20:15:57.988364   557 net.cpp:408] conv1 <- pool0
I0428 20:15:57.988369   557 net.cpp:382] conv1 -> conv1
I0428 20:15:57.991473   557 net.cpp:124] Setting up conv1
I0428 20:15:57.991490   557 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:15:57.991494   557 net.cpp:139] Memory required for data: 9498880
I0428 20:15:57.991503   557 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:57.991510   557 net.cpp:86] Creating Layer pool1
I0428 20:15:57.991513   557 net.cpp:408] pool1 <- conv1
I0428 20:15:57.991520   557 net.cpp:382] pool1 -> pool1
I0428 20:15:57.991559   557 net.cpp:124] Setting up pool1
I0428 20:15:57.991569   557 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:15:57.991571   557 net.cpp:139] Memory required for data: 9519360
I0428 20:15:57.991575   557 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:57.991582   557 net.cpp:86] Creating Layer ip1
I0428 20:15:57.991585   557 net.cpp:408] ip1 <- pool1
I0428 20:15:57.991591   557 net.cpp:382] ip1 -> ip1
I0428 20:15:57.991725   557 net.cpp:124] Setting up ip1
I0428 20:15:57.991734   557 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:57.991737   557 net.cpp:139] Memory required for data: 9532160
I0428 20:15:57.991745   557 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:57.991750   557 net.cpp:86] Creating Layer relu1
I0428 20:15:57.991755   557 net.cpp:408] relu1 <- ip1
I0428 20:15:57.991758   557 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:57.991937   557 net.cpp:124] Setting up relu1
I0428 20:15:57.991947   557 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:57.991950   557 net.cpp:139] Memory required for data: 9544960
I0428 20:15:57.991953   557 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:57.991961   557 net.cpp:86] Creating Layer ip2
I0428 20:15:57.991964   557 net.cpp:408] ip2 <- ip1
I0428 20:15:57.991971   557 net.cpp:382] ip2 -> ip2
I0428 20:15:57.992074   557 net.cpp:124] Setting up ip2
I0428 20:15:57.992081   557 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:57.992084   557 net.cpp:139] Memory required for data: 9547520
I0428 20:15:57.992089   557 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:57.992095   557 net.cpp:86] Creating Layer relu2
I0428 20:15:57.992100   557 net.cpp:408] relu2 <- ip2
I0428 20:15:57.992103   557 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:57.992871   557 net.cpp:124] Setting up relu2
I0428 20:15:57.992885   557 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:57.992889   557 net.cpp:139] Memory required for data: 9550080
I0428 20:15:57.992893   557 layer_factory.hpp:77] Creating layer loss
I0428 20:15:57.992899   557 net.cpp:86] Creating Layer loss
I0428 20:15:57.992918   557 net.cpp:408] loss <- ip2
I0428 20:15:57.992923   557 net.cpp:408] loss <- label
I0428 20:15:57.992930   557 net.cpp:382] loss -> loss
I0428 20:15:57.992947   557 layer_factory.hpp:77] Creating layer loss
I0428 20:15:57.993237   557 net.cpp:124] Setting up loss
I0428 20:15:57.993247   557 net.cpp:131] Top shape: (1)
I0428 20:15:57.993249   557 net.cpp:134]     with loss weight 1
I0428 20:15:57.993263   557 net.cpp:139] Memory required for data: 9550084
I0428 20:15:57.993265   557 net.cpp:200] loss needs backward computation.
I0428 20:15:57.993269   557 net.cpp:200] relu2 needs backward computation.
I0428 20:15:57.993273   557 net.cpp:200] ip2 needs backward computation.
I0428 20:15:57.993276   557 net.cpp:200] relu1 needs backward computation.
I0428 20:15:57.993280   557 net.cpp:200] ip1 needs backward computation.
I0428 20:15:57.993297   557 net.cpp:200] pool1 needs backward computation.
I0428 20:15:57.993301   557 net.cpp:200] conv1 needs backward computation.
I0428 20:15:57.993304   557 net.cpp:200] pool0 needs backward computation.
I0428 20:15:57.993306   557 net.cpp:200] conv0 needs backward computation.
I0428 20:15:57.993309   557 net.cpp:202] mnist does not need backward computation.
I0428 20:15:57.993312   557 net.cpp:244] This network produces output loss
I0428 20:15:57.993322   557 net.cpp:257] Network initialization done.
I0428 20:15:57.993618   557 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1259.prototxt
I0428 20:15:57.993644   557 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:15:57.993729   557 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:15:57.993795   557 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:57.993849   557 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:15:57.993872   557 net.cpp:86] Creating Layer mnist
I0428 20:15:57.993880   557 net.cpp:382] mnist -> data
I0428 20:15:57.993891   557 net.cpp:382] mnist -> label
I0428 20:15:57.993976   557 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:15:57.995854   557 net.cpp:124] Setting up mnist
I0428 20:15:57.995867   557 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:15:57.995872   557 net.cpp:131] Top shape: 100 (100)
I0428 20:15:57.995874   557 net.cpp:139] Memory required for data: 314000
I0428 20:15:57.995878   557 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:15:57.995884   557 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:15:57.995887   557 net.cpp:408] label_mnist_1_split <- label
I0428 20:15:57.995893   557 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:15:57.995899   557 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:15:57.995944   557 net.cpp:124] Setting up label_mnist_1_split
I0428 20:15:57.995966   557 net.cpp:131] Top shape: 100 (100)
I0428 20:15:57.995972   557 net.cpp:131] Top shape: 100 (100)
I0428 20:15:57.995977   557 net.cpp:139] Memory required for data: 314800
I0428 20:15:57.995982   557 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:57.996012   557 net.cpp:86] Creating Layer conv0
I0428 20:15:57.996017   557 net.cpp:408] conv0 <- data
I0428 20:15:57.996026   557 net.cpp:382] conv0 -> conv0
I0428 20:15:57.998034   557 net.cpp:124] Setting up conv0
I0428 20:15:57.998067   557 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:15:57.998087   557 net.cpp:139] Memory required for data: 11834800
I0428 20:15:57.998102   557 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:57.998112   557 net.cpp:86] Creating Layer pool0
I0428 20:15:57.998118   557 net.cpp:408] pool0 <- conv0
I0428 20:15:57.998129   557 net.cpp:382] pool0 -> pool0
I0428 20:15:57.998180   557 net.cpp:124] Setting up pool0
I0428 20:15:57.998193   557 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:15:57.998199   557 net.cpp:139] Memory required for data: 14714800
I0428 20:15:57.998206   557 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:57.998221   557 net.cpp:86] Creating Layer conv1
I0428 20:15:57.998226   557 net.cpp:408] conv1 <- pool0
I0428 20:15:57.998235   557 net.cpp:382] conv1 -> conv1
I0428 20:15:58.000207   557 net.cpp:124] Setting up conv1
I0428 20:15:58.000224   557 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:15:58.000231   557 net.cpp:139] Memory required for data: 14842800
I0428 20:15:58.000246   557 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:58.000257   557 net.cpp:86] Creating Layer pool1
I0428 20:15:58.000262   557 net.cpp:408] pool1 <- conv1
I0428 20:15:58.000269   557 net.cpp:382] pool1 -> pool1
I0428 20:15:58.000319   557 net.cpp:124] Setting up pool1
I0428 20:15:58.000339   557 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:15:58.000344   557 net.cpp:139] Memory required for data: 14874800
I0428 20:15:58.000349   557 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:58.000357   557 net.cpp:86] Creating Layer ip1
I0428 20:15:58.000370   557 net.cpp:408] ip1 <- pool1
I0428 20:15:58.000377   557 net.cpp:382] ip1 -> ip1
I0428 20:15:58.000560   557 net.cpp:124] Setting up ip1
I0428 20:15:58.000571   557 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:58.000576   557 net.cpp:139] Memory required for data: 14894800
I0428 20:15:58.000587   557 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:58.000596   557 net.cpp:86] Creating Layer relu1
I0428 20:15:58.000600   557 net.cpp:408] relu1 <- ip1
I0428 20:15:58.000608   557 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:58.000857   557 net.cpp:124] Setting up relu1
I0428 20:15:58.000888   557 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:58.000895   557 net.cpp:139] Memory required for data: 14914800
I0428 20:15:58.000900   557 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:58.000912   557 net.cpp:86] Creating Layer ip2
I0428 20:15:58.000918   557 net.cpp:408] ip2 <- ip1
I0428 20:15:58.000928   557 net.cpp:382] ip2 -> ip2
I0428 20:15:58.001092   557 net.cpp:124] Setting up ip2
I0428 20:15:58.001116   557 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:58.001121   557 net.cpp:139] Memory required for data: 14918800
I0428 20:15:58.001130   557 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:58.001137   557 net.cpp:86] Creating Layer relu2
I0428 20:15:58.001142   557 net.cpp:408] relu2 <- ip2
I0428 20:15:58.001148   557 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:58.001370   557 net.cpp:124] Setting up relu2
I0428 20:15:58.001382   557 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:58.001387   557 net.cpp:139] Memory required for data: 14922800
I0428 20:15:58.001392   557 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:15:58.001399   557 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:15:58.001407   557 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:15:58.001415   557 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:15:58.001437   557 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:15:58.001487   557 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:15:58.001498   557 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:58.001504   557 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:58.001508   557 net.cpp:139] Memory required for data: 14930800
I0428 20:15:58.001513   557 layer_factory.hpp:77] Creating layer accuracy
I0428 20:15:58.001520   557 net.cpp:86] Creating Layer accuracy
I0428 20:15:58.001525   557 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:15:58.001531   557 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:15:58.001543   557 net.cpp:382] accuracy -> accuracy
I0428 20:15:58.001559   557 net.cpp:124] Setting up accuracy
I0428 20:15:58.001566   557 net.cpp:131] Top shape: (1)
I0428 20:15:58.001571   557 net.cpp:139] Memory required for data: 14930804
I0428 20:15:58.001575   557 layer_factory.hpp:77] Creating layer loss
I0428 20:15:58.001582   557 net.cpp:86] Creating Layer loss
I0428 20:15:58.001587   557 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:15:58.001592   557 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:15:58.001600   557 net.cpp:382] loss -> loss
I0428 20:15:58.001610   557 layer_factory.hpp:77] Creating layer loss
I0428 20:15:58.001922   557 net.cpp:124] Setting up loss
I0428 20:15:58.001932   557 net.cpp:131] Top shape: (1)
I0428 20:15:58.001936   557 net.cpp:134]     with loss weight 1
I0428 20:15:58.001942   557 net.cpp:139] Memory required for data: 14930808
I0428 20:15:58.001945   557 net.cpp:200] loss needs backward computation.
I0428 20:15:58.001950   557 net.cpp:202] accuracy does not need backward computation.
I0428 20:15:58.001952   557 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:15:58.001955   557 net.cpp:200] relu2 needs backward computation.
I0428 20:15:58.001958   557 net.cpp:200] ip2 needs backward computation.
I0428 20:15:58.001961   557 net.cpp:200] relu1 needs backward computation.
I0428 20:15:58.001965   557 net.cpp:200] ip1 needs backward computation.
I0428 20:15:58.001966   557 net.cpp:200] pool1 needs backward computation.
I0428 20:15:58.001969   557 net.cpp:200] conv1 needs backward computation.
I0428 20:15:58.001972   557 net.cpp:200] pool0 needs backward computation.
I0428 20:15:58.001976   557 net.cpp:200] conv0 needs backward computation.
I0428 20:15:58.001979   557 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:15:58.001982   557 net.cpp:202] mnist does not need backward computation.
I0428 20:15:58.001986   557 net.cpp:244] This network produces output accuracy
I0428 20:15:58.001988   557 net.cpp:244] This network produces output loss
I0428 20:15:58.001999   557 net.cpp:257] Network initialization done.
I0428 20:15:58.002037   557 solver.cpp:56] Solver scaffolding done.
I0428 20:15:58.002305   557 caffe.cpp:248] Starting Optimization
I0428 20:15:58.002312   557 solver.cpp:273] Solving LeNet
I0428 20:15:58.002315   557 solver.cpp:274] Learning Rate Policy: inv
I0428 20:15:58.003098   557 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:15:58.009668   557 blocking_queue.cpp:49] Waiting for data
I0428 20:15:58.081892   564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:58.082594   557 solver.cpp:398]     Test net output #0: accuracy = 0.0881
I0428 20:15:58.082618   557 solver.cpp:398]     Test net output #1: loss = 2.31904 (* 1 = 2.31904 loss)
I0428 20:15:58.086869   557 solver.cpp:219] Iteration 0 (-3.7315e-31 iter/s, 0.0845292s/100 iters), loss = 2.31691
I0428 20:15:58.086907   557 solver.cpp:238]     Train net output #0: loss = 2.31691 (* 1 = 2.31691 loss)
I0428 20:15:58.086918   557 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:15:58.197037   557 solver.cpp:219] Iteration 100 (908.135 iter/s, 0.110116s/100 iters), loss = 0.286602
I0428 20:15:58.197077   557 solver.cpp:238]     Train net output #0: loss = 0.286602 (* 1 = 0.286602 loss)
I0428 20:15:58.197083   557 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:15:58.304091   557 solver.cpp:219] Iteration 200 (934.565 iter/s, 0.107002s/100 iters), loss = 0.205374
I0428 20:15:58.304131   557 solver.cpp:238]     Train net output #0: loss = 0.205374 (* 1 = 0.205374 loss)
I0428 20:15:58.304136   557 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:15:58.411936   557 solver.cpp:219] Iteration 300 (927.551 iter/s, 0.107811s/100 iters), loss = 0.275105
I0428 20:15:58.411975   557 solver.cpp:238]     Train net output #0: loss = 0.275105 (* 1 = 0.275105 loss)
I0428 20:15:58.411981   557 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:15:58.521987   557 solver.cpp:219] Iteration 400 (908.954 iter/s, 0.110017s/100 iters), loss = 0.123114
I0428 20:15:58.522028   557 solver.cpp:238]     Train net output #0: loss = 0.123114 (* 1 = 0.123114 loss)
I0428 20:15:58.522034   557 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:15:58.628877   557 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:15:58.691119   564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:58.693322   557 solver.cpp:398]     Test net output #0: accuracy = 0.9577
I0428 20:15:58.693356   557 solver.cpp:398]     Test net output #1: loss = 0.143002 (* 1 = 0.143002 loss)
I0428 20:15:58.694396   557 solver.cpp:219] Iteration 500 (580.203 iter/s, 0.172354s/100 iters), loss = 0.175655
I0428 20:15:58.694432   557 solver.cpp:238]     Train net output #0: loss = 0.175655 (* 1 = 0.175655 loss)
I0428 20:15:58.694437   557 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:15:58.804704   557 solver.cpp:219] Iteration 600 (906.809 iter/s, 0.110277s/100 iters), loss = 0.0832864
I0428 20:15:58.804745   557 solver.cpp:238]     Train net output #0: loss = 0.0832863 (* 1 = 0.0832863 loss)
I0428 20:15:58.804752   557 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:15:58.911659   557 solver.cpp:219] Iteration 700 (935.289 iter/s, 0.106919s/100 iters), loss = 0.228585
I0428 20:15:58.911700   557 solver.cpp:238]     Train net output #0: loss = 0.228585 (* 1 = 0.228585 loss)
I0428 20:15:58.911705   557 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:15:59.026898   557 solver.cpp:219] Iteration 800 (868.056 iter/s, 0.1152s/100 iters), loss = 0.352357
I0428 20:15:59.026939   557 solver.cpp:238]     Train net output #0: loss = 0.352357 (* 1 = 0.352357 loss)
I0428 20:15:59.026962   557 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:15:59.144232   557 solver.cpp:219] Iteration 900 (852.64 iter/s, 0.117283s/100 iters), loss = 0.248829
I0428 20:15:59.144273   557 solver.cpp:238]     Train net output #0: loss = 0.248829 (* 1 = 0.248829 loss)
I0428 20:15:59.144281   557 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:15:59.182644   563 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:59.259146   557 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:15:59.260121   557 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:15:59.260905   557 solver.cpp:311] Iteration 1000, loss = 0.0948128
I0428 20:15:59.260921   557 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:15:59.325587   564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:59.327857   557 solver.cpp:398]     Test net output #0: accuracy = 0.9711
I0428 20:15:59.327878   557 solver.cpp:398]     Test net output #1: loss = 0.0911944 (* 1 = 0.0911944 loss)
I0428 20:15:59.327893   557 solver.cpp:316] Optimization Done.
I0428 20:15:59.327896   557 caffe.cpp:259] Optimization Done.
