I0428 19:32:12.867816 22784 caffe.cpp:218] Using GPUs 0
I0428 19:32:12.903656 22784 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:13.341289 22784 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test146.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:13.341446 22784 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test146.prototxt
I0428 19:32:13.341743 22784 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:13.341760 22784 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:13.341835 22784 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:13.341919 22784 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:13.342025 22784 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:13.342051 22784 net.cpp:86] Creating Layer mnist
I0428 19:32:13.342061 22784 net.cpp:382] mnist -> data
I0428 19:32:13.342085 22784 net.cpp:382] mnist -> label
I0428 19:32:13.343114 22784 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:13.345389 22784 net.cpp:124] Setting up mnist
I0428 19:32:13.345407 22784 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:13.345414 22784 net.cpp:131] Top shape: 64 (64)
I0428 19:32:13.345419 22784 net.cpp:139] Memory required for data: 200960
I0428 19:32:13.345428 22784 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:13.345449 22784 net.cpp:86] Creating Layer conv0
I0428 19:32:13.345458 22784 net.cpp:408] conv0 <- data
I0428 19:32:13.345474 22784 net.cpp:382] conv0 -> conv0
I0428 19:32:13.575886 22784 net.cpp:124] Setting up conv0
I0428 19:32:13.575914 22784 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:13.575919 22784 net.cpp:139] Memory required for data: 1675520
I0428 19:32:13.575969 22784 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:13.576000 22784 net.cpp:86] Creating Layer pool0
I0428 19:32:13.576025 22784 net.cpp:408] pool0 <- conv0
I0428 19:32:13.576033 22784 net.cpp:382] pool0 -> pool0
I0428 19:32:13.576089 22784 net.cpp:124] Setting up pool0
I0428 19:32:13.576097 22784 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:13.576102 22784 net.cpp:139] Memory required for data: 2044160
I0428 19:32:13.576108 22784 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:13.576119 22784 net.cpp:86] Creating Layer ip1
I0428 19:32:13.576128 22784 net.cpp:408] ip1 <- pool0
I0428 19:32:13.576136 22784 net.cpp:382] ip1 -> ip1
I0428 19:32:13.576467 22784 net.cpp:124] Setting up ip1
I0428 19:32:13.576478 22784 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:13.576483 22784 net.cpp:139] Memory required for data: 2050560
I0428 19:32:13.576493 22784 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:13.576517 22784 net.cpp:86] Creating Layer relu1
I0428 19:32:13.576524 22784 net.cpp:408] relu1 <- ip1
I0428 19:32:13.576531 22784 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:13.576691 22784 net.cpp:124] Setting up relu1
I0428 19:32:13.576701 22784 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:13.576706 22784 net.cpp:139] Memory required for data: 2056960
I0428 19:32:13.576711 22784 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:13.576720 22784 net.cpp:86] Creating Layer ip2
I0428 19:32:13.576725 22784 net.cpp:408] ip2 <- ip1
I0428 19:32:13.576733 22784 net.cpp:382] ip2 -> ip2
I0428 19:32:13.577828 22784 net.cpp:124] Setting up ip2
I0428 19:32:13.577842 22784 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:13.577847 22784 net.cpp:139] Memory required for data: 2069760
I0428 19:32:13.577859 22784 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:13.577868 22784 net.cpp:86] Creating Layer relu2
I0428 19:32:13.577874 22784 net.cpp:408] relu2 <- ip2
I0428 19:32:13.577882 22784 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:13.578639 22784 net.cpp:124] Setting up relu2
I0428 19:32:13.578652 22784 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:13.578657 22784 net.cpp:139] Memory required for data: 2082560
I0428 19:32:13.578663 22784 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:13.578688 22784 net.cpp:86] Creating Layer ip3
I0428 19:32:13.578693 22784 net.cpp:408] ip3 <- ip2
I0428 19:32:13.578702 22784 net.cpp:382] ip3 -> ip3
I0428 19:32:13.578819 22784 net.cpp:124] Setting up ip3
I0428 19:32:13.578829 22784 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:13.578833 22784 net.cpp:139] Memory required for data: 2085120
I0428 19:32:13.578842 22784 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:13.578852 22784 net.cpp:86] Creating Layer relu3
I0428 19:32:13.578860 22784 net.cpp:408] relu3 <- ip3
I0428 19:32:13.578868 22784 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:13.579023 22784 net.cpp:124] Setting up relu3
I0428 19:32:13.579032 22784 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:13.579037 22784 net.cpp:139] Memory required for data: 2087680
I0428 19:32:13.579043 22784 layer_factory.hpp:77] Creating layer loss
I0428 19:32:13.579051 22784 net.cpp:86] Creating Layer loss
I0428 19:32:13.579057 22784 net.cpp:408] loss <- ip3
I0428 19:32:13.579063 22784 net.cpp:408] loss <- label
I0428 19:32:13.579072 22784 net.cpp:382] loss -> loss
I0428 19:32:13.579092 22784 layer_factory.hpp:77] Creating layer loss
I0428 19:32:13.579332 22784 net.cpp:124] Setting up loss
I0428 19:32:13.579342 22784 net.cpp:131] Top shape: (1)
I0428 19:32:13.579347 22784 net.cpp:134]     with loss weight 1
I0428 19:32:13.579366 22784 net.cpp:139] Memory required for data: 2087684
I0428 19:32:13.579372 22784 net.cpp:200] loss needs backward computation.
I0428 19:32:13.579378 22784 net.cpp:200] relu3 needs backward computation.
I0428 19:32:13.579383 22784 net.cpp:200] ip3 needs backward computation.
I0428 19:32:13.579388 22784 net.cpp:200] relu2 needs backward computation.
I0428 19:32:13.579392 22784 net.cpp:200] ip2 needs backward computation.
I0428 19:32:13.579397 22784 net.cpp:200] relu1 needs backward computation.
I0428 19:32:13.579401 22784 net.cpp:200] ip1 needs backward computation.
I0428 19:32:13.579417 22784 net.cpp:200] pool0 needs backward computation.
I0428 19:32:13.579423 22784 net.cpp:200] conv0 needs backward computation.
I0428 19:32:13.579428 22784 net.cpp:202] mnist does not need backward computation.
I0428 19:32:13.579433 22784 net.cpp:244] This network produces output loss
I0428 19:32:13.579445 22784 net.cpp:257] Network initialization done.
I0428 19:32:13.579805 22784 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test146.prototxt
I0428 19:32:13.579838 22784 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:13.579923 22784 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:13.580025 22784 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:13.580087 22784 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:13.580104 22784 net.cpp:86] Creating Layer mnist
I0428 19:32:13.580111 22784 net.cpp:382] mnist -> data
I0428 19:32:13.580122 22784 net.cpp:382] mnist -> label
I0428 19:32:13.580251 22784 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:13.582475 22784 net.cpp:124] Setting up mnist
I0428 19:32:13.582490 22784 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:13.582499 22784 net.cpp:131] Top shape: 100 (100)
I0428 19:32:13.582504 22784 net.cpp:139] Memory required for data: 314000
I0428 19:32:13.582509 22784 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:13.582520 22784 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:13.582525 22784 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:13.582533 22784 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:13.582543 22784 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:13.582613 22784 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:13.582623 22784 net.cpp:131] Top shape: 100 (100)
I0428 19:32:13.582629 22784 net.cpp:131] Top shape: 100 (100)
I0428 19:32:13.582634 22784 net.cpp:139] Memory required for data: 314800
I0428 19:32:13.582650 22784 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:13.582664 22784 net.cpp:86] Creating Layer conv0
I0428 19:32:13.582670 22784 net.cpp:408] conv0 <- data
I0428 19:32:13.582679 22784 net.cpp:382] conv0 -> conv0
I0428 19:32:13.584406 22784 net.cpp:124] Setting up conv0
I0428 19:32:13.584422 22784 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:13.584429 22784 net.cpp:139] Memory required for data: 2618800
I0428 19:32:13.584457 22784 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:13.584470 22784 net.cpp:86] Creating Layer pool0
I0428 19:32:13.584481 22784 net.cpp:408] pool0 <- conv0
I0428 19:32:13.584491 22784 net.cpp:382] pool0 -> pool0
I0428 19:32:13.584548 22784 net.cpp:124] Setting up pool0
I0428 19:32:13.584558 22784 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:13.584563 22784 net.cpp:139] Memory required for data: 3194800
I0428 19:32:13.584566 22784 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:13.584579 22784 net.cpp:86] Creating Layer ip1
I0428 19:32:13.584585 22784 net.cpp:408] ip1 <- pool0
I0428 19:32:13.584594 22784 net.cpp:382] ip1 -> ip1
I0428 19:32:13.584961 22784 net.cpp:124] Setting up ip1
I0428 19:32:13.584971 22784 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:13.584977 22784 net.cpp:139] Memory required for data: 3204800
I0428 19:32:13.584990 22784 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:13.585001 22784 net.cpp:86] Creating Layer relu1
I0428 19:32:13.585008 22784 net.cpp:408] relu1 <- ip1
I0428 19:32:13.585016 22784 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:13.585309 22784 net.cpp:124] Setting up relu1
I0428 19:32:13.585319 22784 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:13.585325 22784 net.cpp:139] Memory required for data: 3214800
I0428 19:32:13.585330 22784 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:13.585341 22784 net.cpp:86] Creating Layer ip2
I0428 19:32:13.585347 22784 net.cpp:408] ip2 <- ip1
I0428 19:32:13.585357 22784 net.cpp:382] ip2 -> ip2
I0428 19:32:13.585530 22784 net.cpp:124] Setting up ip2
I0428 19:32:13.585541 22784 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:13.585546 22784 net.cpp:139] Memory required for data: 3234800
I0428 19:32:13.585561 22784 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:13.585573 22784 net.cpp:86] Creating Layer relu2
I0428 19:32:13.585579 22784 net.cpp:408] relu2 <- ip2
I0428 19:32:13.585592 22784 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:13.586558 22784 net.cpp:124] Setting up relu2
I0428 19:32:13.586572 22784 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:13.586578 22784 net.cpp:139] Memory required for data: 3254800
I0428 19:32:13.586583 22784 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:13.586597 22784 net.cpp:86] Creating Layer ip3
I0428 19:32:13.586603 22784 net.cpp:408] ip3 <- ip2
I0428 19:32:13.586612 22784 net.cpp:382] ip3 -> ip3
I0428 19:32:13.586750 22784 net.cpp:124] Setting up ip3
I0428 19:32:13.586760 22784 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:13.586788 22784 net.cpp:139] Memory required for data: 3258800
I0428 19:32:13.586798 22784 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:13.586823 22784 net.cpp:86] Creating Layer relu3
I0428 19:32:13.586833 22784 net.cpp:408] relu3 <- ip3
I0428 19:32:13.586843 22784 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:13.587055 22784 net.cpp:124] Setting up relu3
I0428 19:32:13.587081 22784 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:13.587101 22784 net.cpp:139] Memory required for data: 3262800
I0428 19:32:13.587106 22784 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:13.587116 22784 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:13.587121 22784 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:13.587131 22784 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:13.587141 22784 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:13.587203 22784 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:13.587213 22784 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:13.587218 22784 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:13.587235 22784 net.cpp:139] Memory required for data: 3270800
I0428 19:32:13.587241 22784 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:13.587249 22784 net.cpp:86] Creating Layer accuracy
I0428 19:32:13.587255 22784 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:13.587262 22784 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:13.587271 22784 net.cpp:382] accuracy -> accuracy
I0428 19:32:13.587283 22784 net.cpp:124] Setting up accuracy
I0428 19:32:13.587291 22784 net.cpp:131] Top shape: (1)
I0428 19:32:13.587297 22784 net.cpp:139] Memory required for data: 3270804
I0428 19:32:13.587302 22784 layer_factory.hpp:77] Creating layer loss
I0428 19:32:13.587309 22784 net.cpp:86] Creating Layer loss
I0428 19:32:13.587316 22784 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:13.587321 22784 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:13.587329 22784 net.cpp:382] loss -> loss
I0428 19:32:13.587338 22784 layer_factory.hpp:77] Creating layer loss
I0428 19:32:13.587688 22784 net.cpp:124] Setting up loss
I0428 19:32:13.587699 22784 net.cpp:131] Top shape: (1)
I0428 19:32:13.587703 22784 net.cpp:134]     with loss weight 1
I0428 19:32:13.587713 22784 net.cpp:139] Memory required for data: 3270808
I0428 19:32:13.587718 22784 net.cpp:200] loss needs backward computation.
I0428 19:32:13.587724 22784 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:13.587729 22784 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:13.587734 22784 net.cpp:200] relu3 needs backward computation.
I0428 19:32:13.587739 22784 net.cpp:200] ip3 needs backward computation.
I0428 19:32:13.587744 22784 net.cpp:200] relu2 needs backward computation.
I0428 19:32:13.587749 22784 net.cpp:200] ip2 needs backward computation.
I0428 19:32:13.587754 22784 net.cpp:200] relu1 needs backward computation.
I0428 19:32:13.587759 22784 net.cpp:200] ip1 needs backward computation.
I0428 19:32:13.587764 22784 net.cpp:200] pool0 needs backward computation.
I0428 19:32:13.587769 22784 net.cpp:200] conv0 needs backward computation.
I0428 19:32:13.587775 22784 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:13.587781 22784 net.cpp:202] mnist does not need backward computation.
I0428 19:32:13.587785 22784 net.cpp:244] This network produces output accuracy
I0428 19:32:13.587792 22784 net.cpp:244] This network produces output loss
I0428 19:32:13.587808 22784 net.cpp:257] Network initialization done.
I0428 19:32:13.587867 22784 solver.cpp:56] Solver scaffolding done.
I0428 19:32:13.588162 22784 caffe.cpp:248] Starting Optimization
I0428 19:32:13.588171 22784 solver.cpp:273] Solving LeNet
I0428 19:32:13.588176 22784 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:13.589627 22784 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:13.593369 22784 blocking_queue.cpp:49] Waiting for data
I0428 19:32:13.660589 22791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:13.661092 22784 solver.cpp:398]     Test net output #0: accuracy = 0.061
I0428 19:32:13.661114 22784 solver.cpp:398]     Test net output #1: loss = 2.32029 (* 1 = 2.32029 loss)
I0428 19:32:13.663343 22784 solver.cpp:219] Iteration 0 (-1.47535e-31 iter/s, 0.0751385s/100 iters), loss = 2.32027
I0428 19:32:13.663398 22784 solver.cpp:238]     Train net output #0: loss = 2.32027 (* 1 = 2.32027 loss)
I0428 19:32:13.663431 22784 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:13.738876 22784 solver.cpp:219] Iteration 100 (1324.78 iter/s, 0.0754845s/100 iters), loss = 1.12842
I0428 19:32:13.738905 22784 solver.cpp:238]     Train net output #0: loss = 1.12842 (* 1 = 1.12842 loss)
I0428 19:32:13.738929 22784 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:13.805420 22784 solver.cpp:219] Iteration 200 (1503.63 iter/s, 0.0665057s/100 iters), loss = 0.559228
I0428 19:32:13.805450 22784 solver.cpp:238]     Train net output #0: loss = 0.559228 (* 1 = 0.559228 loss)
I0428 19:32:13.805460 22784 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:13.870504 22784 solver.cpp:219] Iteration 300 (1537.29 iter/s, 0.0650496s/100 iters), loss = 0.917112
I0428 19:32:13.870532 22784 solver.cpp:238]     Train net output #0: loss = 0.917112 (* 1 = 0.917112 loss)
I0428 19:32:13.870558 22784 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:13.935845 22784 solver.cpp:219] Iteration 400 (1531.24 iter/s, 0.0653068s/100 iters), loss = 0.496272
I0428 19:32:13.935873 22784 solver.cpp:238]     Train net output #0: loss = 0.496272 (* 1 = 0.496272 loss)
I0428 19:32:13.935896 22784 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:14.001049 22784 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:14.077401 22791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:14.077939 22784 solver.cpp:398]     Test net output #0: accuracy = 0.8431
I0428 19:32:14.077961 22784 solver.cpp:398]     Test net output #1: loss = 0.436291 (* 1 = 0.436291 loss)
I0428 19:32:14.078780 22784 solver.cpp:219] Iteration 500 (699.804 iter/s, 0.142897s/100 iters), loss = 0.504468
I0428 19:32:14.078807 22784 solver.cpp:238]     Train net output #0: loss = 0.504468 (* 1 = 0.504468 loss)
I0428 19:32:14.078817 22784 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:14.153426 22784 solver.cpp:219] Iteration 600 (1340.25 iter/s, 0.0746129s/100 iters), loss = 0.446888
I0428 19:32:14.153455 22784 solver.cpp:238]     Train net output #0: loss = 0.446888 (* 1 = 0.446888 loss)
I0428 19:32:14.153481 22784 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:14.219446 22784 solver.cpp:219] Iteration 700 (1515.51 iter/s, 0.0659845s/100 iters), loss = 0.535276
I0428 19:32:14.219475 22784 solver.cpp:238]     Train net output #0: loss = 0.535276 (* 1 = 0.535276 loss)
I0428 19:32:14.219499 22784 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:14.291872 22784 solver.cpp:219] Iteration 800 (1381.36 iter/s, 0.0723926s/100 iters), loss = 0.518632
I0428 19:32:14.291899 22784 solver.cpp:238]     Train net output #0: loss = 0.518632 (* 1 = 0.518632 loss)
I0428 19:32:14.291925 22784 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:14.360918 22784 solver.cpp:219] Iteration 900 (1449.03 iter/s, 0.0690115s/100 iters), loss = 0.502736
I0428 19:32:14.360944 22784 solver.cpp:238]     Train net output #0: loss = 0.502736 (* 1 = 0.502736 loss)
I0428 19:32:14.360970 22784 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:14.382984 22790 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:14.425436 22784 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:14.426549 22784 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:14.427306 22784 solver.cpp:311] Iteration 1000, loss = 0.441413
I0428 19:32:14.427325 22784 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:14.502593 22791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:14.503111 22784 solver.cpp:398]     Test net output #0: accuracy = 0.8648
I0428 19:32:14.503134 22784 solver.cpp:398]     Test net output #1: loss = 0.355897 (* 1 = 0.355897 loss)
I0428 19:32:14.503144 22784 solver.cpp:316] Optimization Done.
I0428 19:32:14.503150 22784 caffe.cpp:259] Optimization Done.
