I0428 19:51:07.141674 27199 caffe.cpp:218] Using GPUs 0
I0428 19:51:07.170500 27199 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:07.623687 27199 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test624.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:07.623852 27199 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test624.prototxt
I0428 19:51:07.624131 27199 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:07.624145 27199 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:07.624208 27199 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:07.624266 27199 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:07.624347 27199 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:07.624368 27199 net.cpp:86] Creating Layer mnist
I0428 19:51:07.624377 27199 net.cpp:382] mnist -> data
I0428 19:51:07.624394 27199 net.cpp:382] mnist -> label
I0428 19:51:07.625459 27199 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:07.627619 27199 net.cpp:124] Setting up mnist
I0428 19:51:07.627650 27199 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:07.627655 27199 net.cpp:131] Top shape: 64 (64)
I0428 19:51:07.627657 27199 net.cpp:139] Memory required for data: 200960
I0428 19:51:07.627663 27199 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:07.627677 27199 net.cpp:86] Creating Layer conv0
I0428 19:51:07.627682 27199 net.cpp:408] conv0 <- data
I0428 19:51:07.627692 27199 net.cpp:382] conv0 -> conv0
I0428 19:51:07.856850 27199 net.cpp:124] Setting up conv0
I0428 19:51:07.856891 27199 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:07.856895 27199 net.cpp:139] Memory required for data: 938240
I0428 19:51:07.856910 27199 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:07.856922 27199 net.cpp:86] Creating Layer pool0
I0428 19:51:07.856926 27199 net.cpp:408] pool0 <- conv0
I0428 19:51:07.856932 27199 net.cpp:382] pool0 -> pool0
I0428 19:51:07.856992 27199 net.cpp:124] Setting up pool0
I0428 19:51:07.856997 27199 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:07.857014 27199 net.cpp:139] Memory required for data: 1122560
I0428 19:51:07.857018 27199 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:07.857029 27199 net.cpp:86] Creating Layer conv1
I0428 19:51:07.857033 27199 net.cpp:408] conv1 <- pool0
I0428 19:51:07.857038 27199 net.cpp:382] conv1 -> conv1
I0428 19:51:07.859645 27199 net.cpp:124] Setting up conv1
I0428 19:51:07.859674 27199 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:07.859678 27199 net.cpp:139] Memory required for data: 1532160
I0428 19:51:07.859686 27199 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:07.859695 27199 net.cpp:86] Creating Layer pool1
I0428 19:51:07.859699 27199 net.cpp:408] pool1 <- conv1
I0428 19:51:07.859704 27199 net.cpp:382] pool1 -> pool1
I0428 19:51:07.859755 27199 net.cpp:124] Setting up pool1
I0428 19:51:07.859760 27199 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:07.859763 27199 net.cpp:139] Memory required for data: 1634560
I0428 19:51:07.859766 27199 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:07.859773 27199 net.cpp:86] Creating Layer ip1
I0428 19:51:07.859776 27199 net.cpp:408] ip1 <- pool1
I0428 19:51:07.859781 27199 net.cpp:382] ip1 -> ip1
I0428 19:51:07.859894 27199 net.cpp:124] Setting up ip1
I0428 19:51:07.859900 27199 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:07.859904 27199 net.cpp:139] Memory required for data: 1637120
I0428 19:51:07.859910 27199 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:07.859916 27199 net.cpp:86] Creating Layer relu1
I0428 19:51:07.859920 27199 net.cpp:408] relu1 <- ip1
I0428 19:51:07.859923 27199 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:07.860095 27199 net.cpp:124] Setting up relu1
I0428 19:51:07.860103 27199 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:07.860106 27199 net.cpp:139] Memory required for data: 1639680
I0428 19:51:07.860110 27199 layer_factory.hpp:77] Creating layer loss
I0428 19:51:07.860115 27199 net.cpp:86] Creating Layer loss
I0428 19:51:07.860117 27199 net.cpp:408] loss <- ip1
I0428 19:51:07.860121 27199 net.cpp:408] loss <- label
I0428 19:51:07.860126 27199 net.cpp:382] loss -> loss
I0428 19:51:07.860143 27199 layer_factory.hpp:77] Creating layer loss
I0428 19:51:07.860987 27199 net.cpp:124] Setting up loss
I0428 19:51:07.861001 27199 net.cpp:131] Top shape: (1)
I0428 19:51:07.861019 27199 net.cpp:134]     with loss weight 1
I0428 19:51:07.861034 27199 net.cpp:139] Memory required for data: 1639684
I0428 19:51:07.861038 27199 net.cpp:200] loss needs backward computation.
I0428 19:51:07.861042 27199 net.cpp:200] relu1 needs backward computation.
I0428 19:51:07.861045 27199 net.cpp:200] ip1 needs backward computation.
I0428 19:51:07.861048 27199 net.cpp:200] pool1 needs backward computation.
I0428 19:51:07.861052 27199 net.cpp:200] conv1 needs backward computation.
I0428 19:51:07.861054 27199 net.cpp:200] pool0 needs backward computation.
I0428 19:51:07.861057 27199 net.cpp:200] conv0 needs backward computation.
I0428 19:51:07.861060 27199 net.cpp:202] mnist does not need backward computation.
I0428 19:51:07.861063 27199 net.cpp:244] This network produces output loss
I0428 19:51:07.861071 27199 net.cpp:257] Network initialization done.
I0428 19:51:07.861348 27199 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test624.prototxt
I0428 19:51:07.861371 27199 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:07.861440 27199 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:07.861510 27199 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:07.861552 27199 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:07.861564 27199 net.cpp:86] Creating Layer mnist
I0428 19:51:07.861569 27199 net.cpp:382] mnist -> data
I0428 19:51:07.861577 27199 net.cpp:382] mnist -> label
I0428 19:51:07.861654 27199 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:07.863607 27199 net.cpp:124] Setting up mnist
I0428 19:51:07.863636 27199 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:07.863641 27199 net.cpp:131] Top shape: 100 (100)
I0428 19:51:07.863643 27199 net.cpp:139] Memory required for data: 314000
I0428 19:51:07.863647 27199 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:07.863653 27199 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:07.863657 27199 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:07.863662 27199 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:07.863667 27199 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:07.863703 27199 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:07.863708 27199 net.cpp:131] Top shape: 100 (100)
I0428 19:51:07.863710 27199 net.cpp:131] Top shape: 100 (100)
I0428 19:51:07.863713 27199 net.cpp:139] Memory required for data: 314800
I0428 19:51:07.863716 27199 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:07.863723 27199 net.cpp:86] Creating Layer conv0
I0428 19:51:07.863726 27199 net.cpp:408] conv0 <- data
I0428 19:51:07.863731 27199 net.cpp:382] conv0 -> conv0
I0428 19:51:07.864668 27199 net.cpp:124] Setting up conv0
I0428 19:51:07.864679 27199 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:07.864683 27199 net.cpp:139] Memory required for data: 1466800
I0428 19:51:07.864691 27199 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:07.864712 27199 net.cpp:86] Creating Layer pool0
I0428 19:51:07.864715 27199 net.cpp:408] pool0 <- conv0
I0428 19:51:07.864720 27199 net.cpp:382] pool0 -> pool0
I0428 19:51:07.864751 27199 net.cpp:124] Setting up pool0
I0428 19:51:07.864756 27199 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:07.864759 27199 net.cpp:139] Memory required for data: 1754800
I0428 19:51:07.864763 27199 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:07.864769 27199 net.cpp:86] Creating Layer conv1
I0428 19:51:07.864773 27199 net.cpp:408] conv1 <- pool0
I0428 19:51:07.864778 27199 net.cpp:382] conv1 -> conv1
I0428 19:51:07.866856 27199 net.cpp:124] Setting up conv1
I0428 19:51:07.866870 27199 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:07.866873 27199 net.cpp:139] Memory required for data: 2394800
I0428 19:51:07.866883 27199 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:07.866889 27199 net.cpp:86] Creating Layer pool1
I0428 19:51:07.866902 27199 net.cpp:408] pool1 <- conv1
I0428 19:51:07.866909 27199 net.cpp:382] pool1 -> pool1
I0428 19:51:07.866945 27199 net.cpp:124] Setting up pool1
I0428 19:51:07.866950 27199 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:07.866961 27199 net.cpp:139] Memory required for data: 2554800
I0428 19:51:07.866963 27199 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:07.866969 27199 net.cpp:86] Creating Layer ip1
I0428 19:51:07.866978 27199 net.cpp:408] ip1 <- pool1
I0428 19:51:07.866983 27199 net.cpp:382] ip1 -> ip1
I0428 19:51:07.867092 27199 net.cpp:124] Setting up ip1
I0428 19:51:07.867100 27199 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:07.867103 27199 net.cpp:139] Memory required for data: 2558800
I0428 19:51:07.867110 27199 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:07.867121 27199 net.cpp:86] Creating Layer relu1
I0428 19:51:07.867125 27199 net.cpp:408] relu1 <- ip1
I0428 19:51:07.867128 27199 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:07.867904 27199 net.cpp:124] Setting up relu1
I0428 19:51:07.867918 27199 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:07.867921 27199 net.cpp:139] Memory required for data: 2562800
I0428 19:51:07.867925 27199 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:51:07.867931 27199 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:51:07.867934 27199 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:51:07.867939 27199 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:51:07.867945 27199 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:51:07.867990 27199 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:51:07.867995 27199 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:07.867998 27199 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:07.868001 27199 net.cpp:139] Memory required for data: 2570800
I0428 19:51:07.868005 27199 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:07.868008 27199 net.cpp:86] Creating Layer accuracy
I0428 19:51:07.868011 27199 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:51:07.868016 27199 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:07.868021 27199 net.cpp:382] accuracy -> accuracy
I0428 19:51:07.868027 27199 net.cpp:124] Setting up accuracy
I0428 19:51:07.868031 27199 net.cpp:131] Top shape: (1)
I0428 19:51:07.868034 27199 net.cpp:139] Memory required for data: 2570804
I0428 19:51:07.868036 27199 layer_factory.hpp:77] Creating layer loss
I0428 19:51:07.868041 27199 net.cpp:86] Creating Layer loss
I0428 19:51:07.868043 27199 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:51:07.868053 27199 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:07.868057 27199 net.cpp:382] loss -> loss
I0428 19:51:07.868062 27199 layer_factory.hpp:77] Creating layer loss
I0428 19:51:07.868271 27199 net.cpp:124] Setting up loss
I0428 19:51:07.868280 27199 net.cpp:131] Top shape: (1)
I0428 19:51:07.868284 27199 net.cpp:134]     with loss weight 1
I0428 19:51:07.868289 27199 net.cpp:139] Memory required for data: 2570808
I0428 19:51:07.868294 27199 net.cpp:200] loss needs backward computation.
I0428 19:51:07.868296 27199 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:07.868306 27199 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:51:07.868309 27199 net.cpp:200] relu1 needs backward computation.
I0428 19:51:07.868312 27199 net.cpp:200] ip1 needs backward computation.
I0428 19:51:07.868314 27199 net.cpp:200] pool1 needs backward computation.
I0428 19:51:07.868319 27199 net.cpp:200] conv1 needs backward computation.
I0428 19:51:07.868321 27199 net.cpp:200] pool0 needs backward computation.
I0428 19:51:07.868324 27199 net.cpp:200] conv0 needs backward computation.
I0428 19:51:07.868327 27199 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:07.868331 27199 net.cpp:202] mnist does not need backward computation.
I0428 19:51:07.868340 27199 net.cpp:244] This network produces output accuracy
I0428 19:51:07.868342 27199 net.cpp:244] This network produces output loss
I0428 19:51:07.868360 27199 net.cpp:257] Network initialization done.
I0428 19:51:07.868391 27199 solver.cpp:56] Solver scaffolding done.
I0428 19:51:07.868597 27199 caffe.cpp:248] Starting Optimization
I0428 19:51:07.868604 27199 solver.cpp:273] Solving LeNet
I0428 19:51:07.868607 27199 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:07.868706 27199 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:07.871237 27199 blocking_queue.cpp:49] Waiting for data
I0428 19:51:07.945170 27206 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:07.945634 27199 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0428 19:51:07.945653 27199 solver.cpp:398]     Test net output #1: loss = 2.31843 (* 1 = 2.31843 loss)
I0428 19:51:07.947135 27199 solver.cpp:219] Iteration 0 (-1.10697e-31 iter/s, 0.078505s/100 iters), loss = 2.32081
I0428 19:51:07.947170 27199 solver.cpp:238]     Train net output #0: loss = 2.32081 (* 1 = 2.32081 loss)
I0428 19:51:07.947185 27199 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:08.030989 27199 solver.cpp:219] Iteration 100 (1193.16 iter/s, 0.0838108s/100 iters), loss = 0.598875
I0428 19:51:08.031029 27199 solver.cpp:238]     Train net output #0: loss = 0.598875 (* 1 = 0.598875 loss)
I0428 19:51:08.031035 27199 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:08.102241 27199 solver.cpp:219] Iteration 200 (1404.14 iter/s, 0.0712181s/100 iters), loss = 0.255485
I0428 19:51:08.102282 27199 solver.cpp:238]     Train net output #0: loss = 0.255485 (* 1 = 0.255485 loss)
I0428 19:51:08.102288 27199 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:08.171015 27199 solver.cpp:219] Iteration 300 (1454.76 iter/s, 0.0687401s/100 iters), loss = 0.196167
I0428 19:51:08.171056 27199 solver.cpp:238]     Train net output #0: loss = 0.196167 (* 1 = 0.196167 loss)
I0428 19:51:08.171062 27199 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:08.251632 27199 solver.cpp:219] Iteration 400 (1241.2 iter/s, 0.0805673s/100 iters), loss = 0.108755
I0428 19:51:08.251675 27199 solver.cpp:238]     Train net output #0: loss = 0.108755 (* 1 = 0.108755 loss)
I0428 19:51:08.251682 27199 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:08.334219 27199 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:08.409725 27206 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:08.410183 27199 solver.cpp:398]     Test net output #0: accuracy = 0.9606
I0428 19:51:08.410203 27199 solver.cpp:398]     Test net output #1: loss = 0.132406 (* 1 = 0.132406 loss)
I0428 19:51:08.411006 27199 solver.cpp:219] Iteration 500 (627.675 iter/s, 0.159318s/100 iters), loss = 0.158415
I0428 19:51:08.411029 27199 solver.cpp:238]     Train net output #0: loss = 0.158415 (* 1 = 0.158415 loss)
I0428 19:51:08.411036 27199 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:08.495681 27199 solver.cpp:219] Iteration 600 (1181.45 iter/s, 0.0846418s/100 iters), loss = 0.171553
I0428 19:51:08.495723 27199 solver.cpp:238]     Train net output #0: loss = 0.171553 (* 1 = 0.171553 loss)
I0428 19:51:08.495729 27199 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:08.580502 27199 solver.cpp:219] Iteration 700 (1179.45 iter/s, 0.0847853s/100 iters), loss = 0.237335
I0428 19:51:08.580526 27199 solver.cpp:238]     Train net output #0: loss = 0.237335 (* 1 = 0.237335 loss)
I0428 19:51:08.580533 27199 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:08.661972 27199 solver.cpp:219] Iteration 800 (1227.96 iter/s, 0.0814358s/100 iters), loss = 0.287138
I0428 19:51:08.661995 27199 solver.cpp:238]     Train net output #0: loss = 0.287138 (* 1 = 0.287138 loss)
I0428 19:51:08.662000 27199 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:08.734369 27199 solver.cpp:219] Iteration 900 (1381.94 iter/s, 0.072362s/100 iters), loss = 0.259691
I0428 19:51:08.734407 27199 solver.cpp:238]     Train net output #0: loss = 0.259692 (* 1 = 0.259692 loss)
I0428 19:51:08.734416 27199 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:08.760746 27205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:08.813051 27199 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:08.813789 27199 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:08.814216 27199 solver.cpp:311] Iteration 1000, loss = 0.101142
I0428 19:51:08.814234 27199 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:08.889142 27206 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:08.889595 27199 solver.cpp:398]     Test net output #0: accuracy = 0.9706
I0428 19:51:08.889614 27199 solver.cpp:398]     Test net output #1: loss = 0.0927939 (* 1 = 0.0927939 loss)
I0428 19:51:08.889619 27199 solver.cpp:316] Optimization Done.
I0428 19:51:08.889622 27199 caffe.cpp:259] Optimization Done.
