I0428 20:11:35.097031 32099 caffe.cpp:218] Using GPUs 0
I0428 20:11:35.133548 32099 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:35.650990 32099 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1162.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:35.651130 32099 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1162.prototxt
I0428 20:11:35.651547 32099 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:35.651566 32099 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:35.651669 32099 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:35.651751 32099 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:35.651847 32099 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:35.651870 32099 net.cpp:86] Creating Layer mnist
I0428 20:11:35.651880 32099 net.cpp:382] mnist -> data
I0428 20:11:35.651902 32099 net.cpp:382] mnist -> label
I0428 20:11:35.652994 32099 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:35.655439 32099 net.cpp:124] Setting up mnist
I0428 20:11:35.655457 32099 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:35.655462 32099 net.cpp:131] Top shape: 64 (64)
I0428 20:11:35.655465 32099 net.cpp:139] Memory required for data: 200960
I0428 20:11:35.655473 32099 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:35.655505 32099 net.cpp:86] Creating Layer conv0
I0428 20:11:35.655535 32099 net.cpp:408] conv0 <- data
I0428 20:11:35.655550 32099 net.cpp:382] conv0 -> conv0
I0428 20:11:35.947674 32099 net.cpp:124] Setting up conv0
I0428 20:11:35.947705 32099 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:35.947722 32099 net.cpp:139] Memory required for data: 3887360
I0428 20:11:35.947741 32099 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:35.947754 32099 net.cpp:86] Creating Layer pool0
I0428 20:11:35.947759 32099 net.cpp:408] pool0 <- conv0
I0428 20:11:35.947767 32099 net.cpp:382] pool0 -> pool0
I0428 20:11:35.947818 32099 net.cpp:124] Setting up pool0
I0428 20:11:35.947827 32099 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:35.947831 32099 net.cpp:139] Memory required for data: 4808960
I0428 20:11:35.947835 32099 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:35.947847 32099 net.cpp:86] Creating Layer conv1
I0428 20:11:35.947854 32099 net.cpp:408] conv1 <- pool0
I0428 20:11:35.947860 32099 net.cpp:382] conv1 -> conv1
I0428 20:11:35.950204 32099 net.cpp:124] Setting up conv1
I0428 20:11:35.950222 32099 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:35.950227 32099 net.cpp:139] Memory required for data: 5628160
I0428 20:11:35.950238 32099 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:35.950248 32099 net.cpp:86] Creating Layer pool1
I0428 20:11:35.950255 32099 net.cpp:408] pool1 <- conv1
I0428 20:11:35.950261 32099 net.cpp:382] pool1 -> pool1
I0428 20:11:35.950306 32099 net.cpp:124] Setting up pool1
I0428 20:11:35.950314 32099 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:35.950318 32099 net.cpp:139] Memory required for data: 5832960
I0428 20:11:35.950321 32099 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:35.950330 32099 net.cpp:86] Creating Layer ip1
I0428 20:11:35.950335 32099 net.cpp:408] ip1 <- pool1
I0428 20:11:35.950340 32099 net.cpp:382] ip1 -> ip1
I0428 20:11:35.950731 32099 net.cpp:124] Setting up ip1
I0428 20:11:35.950739 32099 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:35.950743 32099 net.cpp:139] Memory required for data: 5845760
I0428 20:11:35.950752 32099 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:35.950762 32099 net.cpp:86] Creating Layer relu1
I0428 20:11:35.950765 32099 net.cpp:408] relu1 <- ip1
I0428 20:11:35.950770 32099 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:35.950970 32099 net.cpp:124] Setting up relu1
I0428 20:11:35.950980 32099 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:35.950984 32099 net.cpp:139] Memory required for data: 5858560
I0428 20:11:35.950989 32099 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:35.950995 32099 net.cpp:86] Creating Layer ip2
I0428 20:11:35.950999 32099 net.cpp:408] ip2 <- ip1
I0428 20:11:35.951005 32099 net.cpp:382] ip2 -> ip2
I0428 20:11:35.951118 32099 net.cpp:124] Setting up ip2
I0428 20:11:35.951126 32099 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:35.951130 32099 net.cpp:139] Memory required for data: 5861120
I0428 20:11:35.951136 32099 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:35.951143 32099 net.cpp:86] Creating Layer relu2
I0428 20:11:35.951148 32099 net.cpp:408] relu2 <- ip2
I0428 20:11:35.951153 32099 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:35.951994 32099 net.cpp:124] Setting up relu2
I0428 20:11:35.952008 32099 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:35.952014 32099 net.cpp:139] Memory required for data: 5863680
I0428 20:11:35.952018 32099 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:35.952026 32099 net.cpp:86] Creating Layer ip3
I0428 20:11:35.952030 32099 net.cpp:408] ip3 <- ip2
I0428 20:11:35.952038 32099 net.cpp:382] ip3 -> ip3
I0428 20:11:35.952155 32099 net.cpp:124] Setting up ip3
I0428 20:11:35.952164 32099 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:35.952167 32099 net.cpp:139] Memory required for data: 5866240
I0428 20:11:35.952178 32099 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:35.952184 32099 net.cpp:86] Creating Layer relu3
I0428 20:11:35.952188 32099 net.cpp:408] relu3 <- ip3
I0428 20:11:35.952194 32099 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:35.952394 32099 net.cpp:124] Setting up relu3
I0428 20:11:35.952404 32099 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:35.952407 32099 net.cpp:139] Memory required for data: 5868800
I0428 20:11:35.952411 32099 layer_factory.hpp:77] Creating layer loss
I0428 20:11:35.952419 32099 net.cpp:86] Creating Layer loss
I0428 20:11:35.952422 32099 net.cpp:408] loss <- ip3
I0428 20:11:35.952427 32099 net.cpp:408] loss <- label
I0428 20:11:35.952433 32099 net.cpp:382] loss -> loss
I0428 20:11:35.952455 32099 layer_factory.hpp:77] Creating layer loss
I0428 20:11:35.952730 32099 net.cpp:124] Setting up loss
I0428 20:11:35.952741 32099 net.cpp:131] Top shape: (1)
I0428 20:11:35.952746 32099 net.cpp:134]     with loss weight 1
I0428 20:11:35.952764 32099 net.cpp:139] Memory required for data: 5868804
I0428 20:11:35.952767 32099 net.cpp:200] loss needs backward computation.
I0428 20:11:35.952772 32099 net.cpp:200] relu3 needs backward computation.
I0428 20:11:35.952776 32099 net.cpp:200] ip3 needs backward computation.
I0428 20:11:35.952780 32099 net.cpp:200] relu2 needs backward computation.
I0428 20:11:35.952783 32099 net.cpp:200] ip2 needs backward computation.
I0428 20:11:35.952786 32099 net.cpp:200] relu1 needs backward computation.
I0428 20:11:35.952790 32099 net.cpp:200] ip1 needs backward computation.
I0428 20:11:35.952793 32099 net.cpp:200] pool1 needs backward computation.
I0428 20:11:35.952797 32099 net.cpp:200] conv1 needs backward computation.
I0428 20:11:35.952801 32099 net.cpp:200] pool0 needs backward computation.
I0428 20:11:35.952805 32099 net.cpp:200] conv0 needs backward computation.
I0428 20:11:35.952817 32099 net.cpp:202] mnist does not need backward computation.
I0428 20:11:35.952824 32099 net.cpp:244] This network produces output loss
I0428 20:11:35.952841 32099 net.cpp:257] Network initialization done.
I0428 20:11:35.953258 32099 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1162.prototxt
I0428 20:11:35.953289 32099 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:35.953398 32099 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:35.953493 32099 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:35.953546 32099 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:35.953560 32099 net.cpp:86] Creating Layer mnist
I0428 20:11:35.953565 32099 net.cpp:382] mnist -> data
I0428 20:11:35.953575 32099 net.cpp:382] mnist -> label
I0428 20:11:35.953673 32099 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:35.956075 32099 net.cpp:124] Setting up mnist
I0428 20:11:35.956091 32099 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:35.956097 32099 net.cpp:131] Top shape: 100 (100)
I0428 20:11:35.956101 32099 net.cpp:139] Memory required for data: 314000
I0428 20:11:35.956106 32099 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:35.956115 32099 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:35.956118 32099 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:35.956125 32099 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:35.956132 32099 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:35.956189 32099 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:35.956197 32099 net.cpp:131] Top shape: 100 (100)
I0428 20:11:35.956202 32099 net.cpp:131] Top shape: 100 (100)
I0428 20:11:35.956205 32099 net.cpp:139] Memory required for data: 314800
I0428 20:11:35.956209 32099 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:35.956219 32099 net.cpp:86] Creating Layer conv0
I0428 20:11:35.956223 32099 net.cpp:408] conv0 <- data
I0428 20:11:35.956228 32099 net.cpp:382] conv0 -> conv0
I0428 20:11:35.958166 32099 net.cpp:124] Setting up conv0
I0428 20:11:35.958185 32099 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:35.958189 32099 net.cpp:139] Memory required for data: 6074800
I0428 20:11:35.958201 32099 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:35.958209 32099 net.cpp:86] Creating Layer pool0
I0428 20:11:35.958214 32099 net.cpp:408] pool0 <- conv0
I0428 20:11:35.958220 32099 net.cpp:382] pool0 -> pool0
I0428 20:11:35.958264 32099 net.cpp:124] Setting up pool0
I0428 20:11:35.958276 32099 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:35.958279 32099 net.cpp:139] Memory required for data: 7514800
I0428 20:11:35.958282 32099 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:35.958293 32099 net.cpp:86] Creating Layer conv1
I0428 20:11:35.958297 32099 net.cpp:408] conv1 <- pool0
I0428 20:11:35.958303 32099 net.cpp:382] conv1 -> conv1
I0428 20:11:35.960276 32099 net.cpp:124] Setting up conv1
I0428 20:11:35.960296 32099 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:35.960301 32099 net.cpp:139] Memory required for data: 8794800
I0428 20:11:35.960312 32099 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:35.960321 32099 net.cpp:86] Creating Layer pool1
I0428 20:11:35.960325 32099 net.cpp:408] pool1 <- conv1
I0428 20:11:35.960331 32099 net.cpp:382] pool1 -> pool1
I0428 20:11:35.960376 32099 net.cpp:124] Setting up pool1
I0428 20:11:35.960386 32099 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:35.960388 32099 net.cpp:139] Memory required for data: 9114800
I0428 20:11:35.960392 32099 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:35.960402 32099 net.cpp:86] Creating Layer ip1
I0428 20:11:35.960407 32099 net.cpp:408] ip1 <- pool1
I0428 20:11:35.960412 32099 net.cpp:382] ip1 -> ip1
I0428 20:11:35.960851 32099 net.cpp:124] Setting up ip1
I0428 20:11:35.960862 32099 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:35.960886 32099 net.cpp:139] Memory required for data: 9134800
I0428 20:11:35.960896 32099 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:35.960903 32099 net.cpp:86] Creating Layer relu1
I0428 20:11:35.960908 32099 net.cpp:408] relu1 <- ip1
I0428 20:11:35.960914 32099 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:35.961127 32099 net.cpp:124] Setting up relu1
I0428 20:11:35.961138 32099 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:35.961141 32099 net.cpp:139] Memory required for data: 9154800
I0428 20:11:35.961145 32099 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:35.961155 32099 net.cpp:86] Creating Layer ip2
I0428 20:11:35.961159 32099 net.cpp:408] ip2 <- ip1
I0428 20:11:35.961166 32099 net.cpp:382] ip2 -> ip2
I0428 20:11:35.961293 32099 net.cpp:124] Setting up ip2
I0428 20:11:35.961302 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.961305 32099 net.cpp:139] Memory required for data: 9158800
I0428 20:11:35.961313 32099 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:35.961319 32099 net.cpp:86] Creating Layer relu2
I0428 20:11:35.961323 32099 net.cpp:408] relu2 <- ip2
I0428 20:11:35.961328 32099 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:35.961521 32099 net.cpp:124] Setting up relu2
I0428 20:11:35.961532 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.961535 32099 net.cpp:139] Memory required for data: 9162800
I0428 20:11:35.961540 32099 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:35.961546 32099 net.cpp:86] Creating Layer ip3
I0428 20:11:35.961550 32099 net.cpp:408] ip3 <- ip2
I0428 20:11:35.961557 32099 net.cpp:382] ip3 -> ip3
I0428 20:11:35.961675 32099 net.cpp:124] Setting up ip3
I0428 20:11:35.961684 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.961688 32099 net.cpp:139] Memory required for data: 9166800
I0428 20:11:35.961697 32099 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:35.961704 32099 net.cpp:86] Creating Layer relu3
I0428 20:11:35.961706 32099 net.cpp:408] relu3 <- ip3
I0428 20:11:35.961714 32099 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:35.962642 32099 net.cpp:124] Setting up relu3
I0428 20:11:35.962657 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.962661 32099 net.cpp:139] Memory required for data: 9170800
I0428 20:11:35.962666 32099 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:35.962672 32099 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:35.962677 32099 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:35.962683 32099 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:35.962690 32099 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:35.962744 32099 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:35.962754 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.962759 32099 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:35.962761 32099 net.cpp:139] Memory required for data: 9178800
I0428 20:11:35.962765 32099 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:35.962772 32099 net.cpp:86] Creating Layer accuracy
I0428 20:11:35.962776 32099 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:35.962781 32099 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:35.962788 32099 net.cpp:382] accuracy -> accuracy
I0428 20:11:35.962796 32099 net.cpp:124] Setting up accuracy
I0428 20:11:35.962801 32099 net.cpp:131] Top shape: (1)
I0428 20:11:35.962805 32099 net.cpp:139] Memory required for data: 9178804
I0428 20:11:35.962808 32099 layer_factory.hpp:77] Creating layer loss
I0428 20:11:35.962815 32099 net.cpp:86] Creating Layer loss
I0428 20:11:35.962818 32099 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:35.962823 32099 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:35.962827 32099 net.cpp:382] loss -> loss
I0428 20:11:35.962836 32099 layer_factory.hpp:77] Creating layer loss
I0428 20:11:35.963140 32099 net.cpp:124] Setting up loss
I0428 20:11:35.963152 32099 net.cpp:131] Top shape: (1)
I0428 20:11:35.963156 32099 net.cpp:134]     with loss weight 1
I0428 20:11:35.963176 32099 net.cpp:139] Memory required for data: 9178808
I0428 20:11:35.963181 32099 net.cpp:200] loss needs backward computation.
I0428 20:11:35.963184 32099 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:35.963189 32099 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:35.963193 32099 net.cpp:200] relu3 needs backward computation.
I0428 20:11:35.963196 32099 net.cpp:200] ip3 needs backward computation.
I0428 20:11:35.963199 32099 net.cpp:200] relu2 needs backward computation.
I0428 20:11:35.963204 32099 net.cpp:200] ip2 needs backward computation.
I0428 20:11:35.963207 32099 net.cpp:200] relu1 needs backward computation.
I0428 20:11:35.963212 32099 net.cpp:200] ip1 needs backward computation.
I0428 20:11:35.963214 32099 net.cpp:200] pool1 needs backward computation.
I0428 20:11:35.963218 32099 net.cpp:200] conv1 needs backward computation.
I0428 20:11:35.963222 32099 net.cpp:200] pool0 needs backward computation.
I0428 20:11:35.963225 32099 net.cpp:200] conv0 needs backward computation.
I0428 20:11:35.963230 32099 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:35.963235 32099 net.cpp:202] mnist does not need backward computation.
I0428 20:11:35.963238 32099 net.cpp:244] This network produces output accuracy
I0428 20:11:35.963243 32099 net.cpp:244] This network produces output loss
I0428 20:11:35.963266 32099 net.cpp:257] Network initialization done.
I0428 20:11:35.963316 32099 solver.cpp:56] Solver scaffolding done.
I0428 20:11:35.963739 32099 caffe.cpp:248] Starting Optimization
I0428 20:11:35.963747 32099 solver.cpp:273] Solving LeNet
I0428 20:11:35.963750 32099 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:35.964733 32099 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:35.971585 32099 blocking_queue.cpp:49] Waiting for data
I0428 20:11:36.040046 32106 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:36.040704 32099 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 20:11:36.040732 32099 solver.cpp:398]     Test net output #1: loss = 2.31589 (* 1 = 2.31589 loss)
I0428 20:11:36.044822 32099 solver.cpp:219] Iteration 0 (0 iter/s, 0.0810291s/100 iters), loss = 2.33252
I0428 20:11:36.044852 32099 solver.cpp:238]     Train net output #0: loss = 2.33252 (* 1 = 2.33252 loss)
I0428 20:11:36.044867 32099 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:36.174993 32099 solver.cpp:219] Iteration 100 (768.529 iter/s, 0.130119s/100 iters), loss = 0.360114
I0428 20:11:36.175040 32099 solver.cpp:238]     Train net output #0: loss = 0.360114 (* 1 = 0.360114 loss)
I0428 20:11:36.175052 32099 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:36.309258 32099 solver.cpp:219] Iteration 200 (745.115 iter/s, 0.134207s/100 iters), loss = 0.157332
I0428 20:11:36.309298 32099 solver.cpp:238]     Train net output #0: loss = 0.157332 (* 1 = 0.157332 loss)
I0428 20:11:36.309307 32099 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:36.445111 32099 solver.cpp:219] Iteration 300 (736.389 iter/s, 0.135798s/100 iters), loss = 0.200147
I0428 20:11:36.445154 32099 solver.cpp:238]     Train net output #0: loss = 0.200147 (* 1 = 0.200147 loss)
I0428 20:11:36.445165 32099 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:36.579826 32099 solver.cpp:219] Iteration 400 (742.61 iter/s, 0.13466s/100 iters), loss = 0.150384
I0428 20:11:36.579865 32099 solver.cpp:238]     Train net output #0: loss = 0.150384 (* 1 = 0.150384 loss)
I0428 20:11:36.579874 32099 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:36.712124 32099 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:36.770254 32106 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:36.771014 32099 solver.cpp:398]     Test net output #0: accuracy = 0.9659
I0428 20:11:36.771035 32099 solver.cpp:398]     Test net output #1: loss = 0.11073 (* 1 = 0.11073 loss)
I0428 20:11:36.772333 32099 solver.cpp:219] Iteration 500 (519.601 iter/s, 0.192456s/100 iters), loss = 0.0674039
I0428 20:11:36.772392 32099 solver.cpp:238]     Train net output #0: loss = 0.0674038 (* 1 = 0.0674038 loss)
I0428 20:11:36.772400 32099 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:36.900585 32099 solver.cpp:219] Iteration 600 (780.145 iter/s, 0.128181s/100 iters), loss = 0.0794167
I0428 20:11:36.900610 32099 solver.cpp:238]     Train net output #0: loss = 0.0794166 (* 1 = 0.0794166 loss)
I0428 20:11:36.900617 32099 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:37.022686 32099 solver.cpp:219] Iteration 700 (819.249 iter/s, 0.122063s/100 iters), loss = 0.194622
I0428 20:11:37.022714 32099 solver.cpp:238]     Train net output #0: loss = 0.194622 (* 1 = 0.194622 loss)
I0428 20:11:37.022722 32099 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:37.151836 32099 solver.cpp:219] Iteration 800 (774.546 iter/s, 0.129108s/100 iters), loss = 0.180077
I0428 20:11:37.151871 32099 solver.cpp:238]     Train net output #0: loss = 0.180077 (* 1 = 0.180077 loss)
I0428 20:11:37.151880 32099 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:37.285181 32099 solver.cpp:219] Iteration 900 (750.221 iter/s, 0.133294s/100 iters), loss = 0.177981
I0428 20:11:37.285231 32099 solver.cpp:238]     Train net output #0: loss = 0.177981 (* 1 = 0.177981 loss)
I0428 20:11:37.285249 32099 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:37.331187 32105 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:37.419136 32099 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:37.421313 32099 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:37.422483 32099 solver.cpp:311] Iteration 1000, loss = 0.0854437
I0428 20:11:37.422503 32099 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:37.494730 32106 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:37.495371 32099 solver.cpp:398]     Test net output #0: accuracy = 0.9747
I0428 20:11:37.495390 32099 solver.cpp:398]     Test net output #1: loss = 0.0749584 (* 1 = 0.0749584 loss)
I0428 20:11:37.495396 32099 solver.cpp:316] Optimization Done.
I0428 20:11:37.495399 32099 caffe.cpp:259] Optimization Done.
