I0428 19:31:39.658705 22636 caffe.cpp:218] Using GPUs 0
I0428 19:31:39.692863 22636 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:40.140856 22636 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test129.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:40.141011 22636 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test129.prototxt
I0428 19:31:40.141330 22636 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:40.141347 22636 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:40.141424 22636 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:40.141510 22636 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:40.141629 22636 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:40.141655 22636 net.cpp:86] Creating Layer mnist
I0428 19:31:40.141665 22636 net.cpp:382] mnist -> data
I0428 19:31:40.141690 22636 net.cpp:382] mnist -> label
I0428 19:31:40.142813 22636 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:40.145061 22636 net.cpp:124] Setting up mnist
I0428 19:31:40.145093 22636 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:40.145119 22636 net.cpp:131] Top shape: 64 (64)
I0428 19:31:40.145124 22636 net.cpp:139] Memory required for data: 200960
I0428 19:31:40.145133 22636 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:40.145151 22636 net.cpp:86] Creating Layer conv0
I0428 19:31:40.145159 22636 net.cpp:408] conv0 <- data
I0428 19:31:40.145175 22636 net.cpp:382] conv0 -> conv0
I0428 19:31:40.372833 22636 net.cpp:124] Setting up conv0
I0428 19:31:40.372861 22636 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:40.372867 22636 net.cpp:139] Memory required for data: 1675520
I0428 19:31:40.372903 22636 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:40.372920 22636 net.cpp:86] Creating Layer pool0
I0428 19:31:40.372943 22636 net.cpp:408] pool0 <- conv0
I0428 19:31:40.372964 22636 net.cpp:382] pool0 -> pool0
I0428 19:31:40.373034 22636 net.cpp:124] Setting up pool0
I0428 19:31:40.373042 22636 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:40.373047 22636 net.cpp:139] Memory required for data: 2044160
I0428 19:31:40.373052 22636 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:40.373064 22636 net.cpp:86] Creating Layer ip1
I0428 19:31:40.373072 22636 net.cpp:408] ip1 <- pool0
I0428 19:31:40.373080 22636 net.cpp:382] ip1 -> ip1
I0428 19:31:40.374127 22636 net.cpp:124] Setting up ip1
I0428 19:31:40.374142 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.374148 22636 net.cpp:139] Memory required for data: 2046720
I0428 19:31:40.374161 22636 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:40.374171 22636 net.cpp:86] Creating Layer relu1
I0428 19:31:40.374197 22636 net.cpp:408] relu1 <- ip1
I0428 19:31:40.374220 22636 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:40.374398 22636 net.cpp:124] Setting up relu1
I0428 19:31:40.374408 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.374413 22636 net.cpp:139] Memory required for data: 2049280
I0428 19:31:40.374418 22636 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:40.374428 22636 net.cpp:86] Creating Layer ip2
I0428 19:31:40.374434 22636 net.cpp:408] ip2 <- ip1
I0428 19:31:40.374442 22636 net.cpp:382] ip2 -> ip2
I0428 19:31:40.374552 22636 net.cpp:124] Setting up ip2
I0428 19:31:40.374562 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.374565 22636 net.cpp:139] Memory required for data: 2051840
I0428 19:31:40.374577 22636 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:40.374584 22636 net.cpp:86] Creating Layer relu2
I0428 19:31:40.374591 22636 net.cpp:408] relu2 <- ip2
I0428 19:31:40.374598 22636 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:40.375401 22636 net.cpp:124] Setting up relu2
I0428 19:31:40.375413 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.375418 22636 net.cpp:139] Memory required for data: 2054400
I0428 19:31:40.375424 22636 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:40.375434 22636 net.cpp:86] Creating Layer ip3
I0428 19:31:40.375440 22636 net.cpp:408] ip3 <- ip2
I0428 19:31:40.375448 22636 net.cpp:382] ip3 -> ip3
I0428 19:31:40.375583 22636 net.cpp:124] Setting up ip3
I0428 19:31:40.375592 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.375612 22636 net.cpp:139] Memory required for data: 2056960
I0428 19:31:40.375622 22636 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:40.375632 22636 net.cpp:86] Creating Layer relu3
I0428 19:31:40.375638 22636 net.cpp:408] relu3 <- ip3
I0428 19:31:40.375644 22636 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:40.375799 22636 net.cpp:124] Setting up relu3
I0428 19:31:40.375809 22636 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:40.375814 22636 net.cpp:139] Memory required for data: 2059520
I0428 19:31:40.375819 22636 layer_factory.hpp:77] Creating layer loss
I0428 19:31:40.375828 22636 net.cpp:86] Creating Layer loss
I0428 19:31:40.375833 22636 net.cpp:408] loss <- ip3
I0428 19:31:40.375840 22636 net.cpp:408] loss <- label
I0428 19:31:40.375864 22636 net.cpp:382] loss -> loss
I0428 19:31:40.375898 22636 layer_factory.hpp:77] Creating layer loss
I0428 19:31:40.376148 22636 net.cpp:124] Setting up loss
I0428 19:31:40.376159 22636 net.cpp:131] Top shape: (1)
I0428 19:31:40.376165 22636 net.cpp:134]     with loss weight 1
I0428 19:31:40.376184 22636 net.cpp:139] Memory required for data: 2059524
I0428 19:31:40.376190 22636 net.cpp:200] loss needs backward computation.
I0428 19:31:40.376196 22636 net.cpp:200] relu3 needs backward computation.
I0428 19:31:40.376201 22636 net.cpp:200] ip3 needs backward computation.
I0428 19:31:40.376206 22636 net.cpp:200] relu2 needs backward computation.
I0428 19:31:40.376211 22636 net.cpp:200] ip2 needs backward computation.
I0428 19:31:40.376216 22636 net.cpp:200] relu1 needs backward computation.
I0428 19:31:40.376220 22636 net.cpp:200] ip1 needs backward computation.
I0428 19:31:40.376236 22636 net.cpp:200] pool0 needs backward computation.
I0428 19:31:40.376241 22636 net.cpp:200] conv0 needs backward computation.
I0428 19:31:40.376247 22636 net.cpp:202] mnist does not need backward computation.
I0428 19:31:40.376252 22636 net.cpp:244] This network produces output loss
I0428 19:31:40.376265 22636 net.cpp:257] Network initialization done.
I0428 19:31:40.376583 22636 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test129.prototxt
I0428 19:31:40.376615 22636 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:40.376698 22636 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:40.376852 22636 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:40.376956 22636 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:40.376976 22636 net.cpp:86] Creating Layer mnist
I0428 19:31:40.376983 22636 net.cpp:382] mnist -> data
I0428 19:31:40.376996 22636 net.cpp:382] mnist -> label
I0428 19:31:40.377127 22636 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:40.379371 22636 net.cpp:124] Setting up mnist
I0428 19:31:40.379400 22636 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:40.379408 22636 net.cpp:131] Top shape: 100 (100)
I0428 19:31:40.379428 22636 net.cpp:139] Memory required for data: 314000
I0428 19:31:40.379434 22636 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:40.379463 22636 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:40.379469 22636 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:40.379477 22636 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:40.379487 22636 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:40.379604 22636 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:40.379613 22636 net.cpp:131] Top shape: 100 (100)
I0428 19:31:40.379621 22636 net.cpp:131] Top shape: 100 (100)
I0428 19:31:40.379624 22636 net.cpp:139] Memory required for data: 314800
I0428 19:31:40.379642 22636 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:40.379670 22636 net.cpp:86] Creating Layer conv0
I0428 19:31:40.379678 22636 net.cpp:408] conv0 <- data
I0428 19:31:40.379685 22636 net.cpp:382] conv0 -> conv0
I0428 19:31:40.381352 22636 net.cpp:124] Setting up conv0
I0428 19:31:40.381367 22636 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:40.381373 22636 net.cpp:139] Memory required for data: 2618800
I0428 19:31:40.381402 22636 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:40.381412 22636 net.cpp:86] Creating Layer pool0
I0428 19:31:40.381418 22636 net.cpp:408] pool0 <- conv0
I0428 19:31:40.381427 22636 net.cpp:382] pool0 -> pool0
I0428 19:31:40.381469 22636 net.cpp:124] Setting up pool0
I0428 19:31:40.381476 22636 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:40.381481 22636 net.cpp:139] Memory required for data: 3194800
I0428 19:31:40.381487 22636 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:40.381497 22636 net.cpp:86] Creating Layer ip1
I0428 19:31:40.381503 22636 net.cpp:408] ip1 <- pool0
I0428 19:31:40.381511 22636 net.cpp:382] ip1 -> ip1
I0428 19:31:40.381690 22636 net.cpp:124] Setting up ip1
I0428 19:31:40.381712 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.381717 22636 net.cpp:139] Memory required for data: 3198800
I0428 19:31:40.381728 22636 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:40.381737 22636 net.cpp:86] Creating Layer relu1
I0428 19:31:40.381744 22636 net.cpp:408] relu1 <- ip1
I0428 19:31:40.381752 22636 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:40.382030 22636 net.cpp:124] Setting up relu1
I0428 19:31:40.382041 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.382046 22636 net.cpp:139] Memory required for data: 3202800
I0428 19:31:40.382051 22636 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:40.382061 22636 net.cpp:86] Creating Layer ip2
I0428 19:31:40.382067 22636 net.cpp:408] ip2 <- ip1
I0428 19:31:40.382076 22636 net.cpp:382] ip2 -> ip2
I0428 19:31:40.382232 22636 net.cpp:124] Setting up ip2
I0428 19:31:40.382241 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.382247 22636 net.cpp:139] Memory required for data: 3206800
I0428 19:31:40.382259 22636 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:40.382268 22636 net.cpp:86] Creating Layer relu2
I0428 19:31:40.382288 22636 net.cpp:408] relu2 <- ip2
I0428 19:31:40.382310 22636 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:40.383128 22636 net.cpp:124] Setting up relu2
I0428 19:31:40.383141 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.383147 22636 net.cpp:139] Memory required for data: 3210800
I0428 19:31:40.383168 22636 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:40.383180 22636 net.cpp:86] Creating Layer ip3
I0428 19:31:40.383203 22636 net.cpp:408] ip3 <- ip2
I0428 19:31:40.383211 22636 net.cpp:382] ip3 -> ip3
I0428 19:31:40.383355 22636 net.cpp:124] Setting up ip3
I0428 19:31:40.383365 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.383369 22636 net.cpp:139] Memory required for data: 3214800
I0428 19:31:40.383379 22636 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:40.383388 22636 net.cpp:86] Creating Layer relu3
I0428 19:31:40.383394 22636 net.cpp:408] relu3 <- ip3
I0428 19:31:40.383400 22636 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:40.383549 22636 net.cpp:124] Setting up relu3
I0428 19:31:40.383560 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.383564 22636 net.cpp:139] Memory required for data: 3218800
I0428 19:31:40.383569 22636 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:40.383577 22636 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:40.383582 22636 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:40.383589 22636 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:40.383599 22636 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:40.383641 22636 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:40.383648 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.383656 22636 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:40.383685 22636 net.cpp:139] Memory required for data: 3226800
I0428 19:31:40.383707 22636 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:40.383715 22636 net.cpp:86] Creating Layer accuracy
I0428 19:31:40.383720 22636 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:40.383728 22636 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:40.383734 22636 net.cpp:382] accuracy -> accuracy
I0428 19:31:40.383761 22636 net.cpp:124] Setting up accuracy
I0428 19:31:40.383769 22636 net.cpp:131] Top shape: (1)
I0428 19:31:40.383774 22636 net.cpp:139] Memory required for data: 3226804
I0428 19:31:40.383780 22636 layer_factory.hpp:77] Creating layer loss
I0428 19:31:40.383787 22636 net.cpp:86] Creating Layer loss
I0428 19:31:40.383793 22636 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:40.383800 22636 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:40.383807 22636 net.cpp:382] loss -> loss
I0428 19:31:40.383816 22636 layer_factory.hpp:77] Creating layer loss
I0428 19:31:40.384102 22636 net.cpp:124] Setting up loss
I0428 19:31:40.384114 22636 net.cpp:131] Top shape: (1)
I0428 19:31:40.384119 22636 net.cpp:134]     with loss weight 1
I0428 19:31:40.384147 22636 net.cpp:139] Memory required for data: 3226808
I0428 19:31:40.384152 22636 net.cpp:200] loss needs backward computation.
I0428 19:31:40.384160 22636 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:40.384166 22636 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:40.384171 22636 net.cpp:200] relu3 needs backward computation.
I0428 19:31:40.384176 22636 net.cpp:200] ip3 needs backward computation.
I0428 19:31:40.384181 22636 net.cpp:200] relu2 needs backward computation.
I0428 19:31:40.384186 22636 net.cpp:200] ip2 needs backward computation.
I0428 19:31:40.384191 22636 net.cpp:200] relu1 needs backward computation.
I0428 19:31:40.384197 22636 net.cpp:200] ip1 needs backward computation.
I0428 19:31:40.384202 22636 net.cpp:200] pool0 needs backward computation.
I0428 19:31:40.384207 22636 net.cpp:200] conv0 needs backward computation.
I0428 19:31:40.384214 22636 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:40.384220 22636 net.cpp:202] mnist does not need backward computation.
I0428 19:31:40.384224 22636 net.cpp:244] This network produces output accuracy
I0428 19:31:40.384232 22636 net.cpp:244] This network produces output loss
I0428 19:31:40.384246 22636 net.cpp:257] Network initialization done.
I0428 19:31:40.384289 22636 solver.cpp:56] Solver scaffolding done.
I0428 19:31:40.384630 22636 caffe.cpp:248] Starting Optimization
I0428 19:31:40.384639 22636 solver.cpp:273] Solving LeNet
I0428 19:31:40.384642 22636 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:40.384837 22636 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:40.389178 22636 blocking_queue.cpp:49] Waiting for data
I0428 19:31:40.442387 22643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:40.442903 22636 solver.cpp:398]     Test net output #0: accuracy = 0.0979
I0428 19:31:40.442924 22636 solver.cpp:398]     Test net output #1: loss = 2.29416 (* 1 = 2.29416 loss)
I0428 19:31:40.445363 22636 solver.cpp:219] Iteration 0 (3.7527 iter/s, 0.0606627s/100 iters), loss = 2.29974
I0428 19:31:40.445389 22636 solver.cpp:238]     Train net output #0: loss = 2.29974 (* 1 = 2.29974 loss)
I0428 19:31:40.445421 22636 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:40.508061 22636 solver.cpp:219] Iteration 100 (1595.77 iter/s, 0.0626657s/100 iters), loss = 0.785565
I0428 19:31:40.508092 22636 solver.cpp:238]     Train net output #0: loss = 0.785565 (* 1 = 0.785565 loss)
I0428 19:31:40.508117 22636 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:40.571213 22636 solver.cpp:219] Iteration 200 (1584.43 iter/s, 0.0631143s/100 iters), loss = 0.470204
I0428 19:31:40.571238 22636 solver.cpp:238]     Train net output #0: loss = 0.470204 (* 1 = 0.470204 loss)
I0428 19:31:40.571262 22636 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:40.634124 22636 solver.cpp:219] Iteration 300 (1590.31 iter/s, 0.0628808s/100 iters), loss = 0.493871
I0428 19:31:40.634150 22636 solver.cpp:238]     Train net output #0: loss = 0.493871 (* 1 = 0.493871 loss)
I0428 19:31:40.634174 22636 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:40.697360 22636 solver.cpp:219] Iteration 400 (1582.14 iter/s, 0.0632054s/100 iters), loss = 0.751142
I0428 19:31:40.697386 22636 solver.cpp:238]     Train net output #0: loss = 0.751142 (* 1 = 0.751142 loss)
I0428 19:31:40.697412 22636 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:40.760491 22636 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:40.814066 22643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:40.814591 22636 solver.cpp:398]     Test net output #0: accuracy = 0.8747
I0428 19:31:40.814612 22636 solver.cpp:398]     Test net output #1: loss = 0.491135 (* 1 = 0.491135 loss)
I0428 19:31:40.815330 22636 solver.cpp:219] Iteration 500 (847.939 iter/s, 0.117933s/100 iters), loss = 0.601365
I0428 19:31:40.815359 22636 solver.cpp:238]     Train net output #0: loss = 0.601365 (* 1 = 0.601365 loss)
I0428 19:31:40.815376 22636 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:40.888342 22636 solver.cpp:219] Iteration 600 (1370.29 iter/s, 0.0729774s/100 iters), loss = 0.153409
I0428 19:31:40.888370 22636 solver.cpp:238]     Train net output #0: loss = 0.153409 (* 1 = 0.153409 loss)
I0428 19:31:40.888394 22636 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:40.951938 22636 solver.cpp:219] Iteration 700 (1573.25 iter/s, 0.0635628s/100 iters), loss = 0.509727
I0428 19:31:40.951966 22636 solver.cpp:238]     Train net output #0: loss = 0.509727 (* 1 = 0.509727 loss)
I0428 19:31:40.951990 22636 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:41.014768 22636 solver.cpp:219] Iteration 800 (1592.41 iter/s, 0.0627979s/100 iters), loss = 0.344312
I0428 19:31:41.014796 22636 solver.cpp:238]     Train net output #0: loss = 0.344312 (* 1 = 0.344312 loss)
I0428 19:31:41.014822 22636 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:41.077867 22636 solver.cpp:219] Iteration 900 (1585.66 iter/s, 0.0630651s/100 iters), loss = 0.233111
I0428 19:31:41.077893 22636 solver.cpp:238]     Train net output #0: loss = 0.233111 (* 1 = 0.233111 loss)
I0428 19:31:41.077919 22636 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:41.099118 22642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:41.140202 22636 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:41.141008 22636 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:41.141587 22636 solver.cpp:311] Iteration 1000, loss = 0.176422
I0428 19:31:41.141605 22636 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:41.216001 22643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:41.216521 22636 solver.cpp:398]     Test net output #0: accuracy = 0.9517
I0428 19:31:41.216539 22636 solver.cpp:398]     Test net output #1: loss = 0.168358 (* 1 = 0.168358 loss)
I0428 19:31:41.216549 22636 solver.cpp:316] Optimization Done.
I0428 19:31:41.216553 22636 caffe.cpp:259] Optimization Done.
