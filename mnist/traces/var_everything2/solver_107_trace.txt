I0428 19:30:57.125486 22453 caffe.cpp:218] Using GPUs 0
I0428 19:30:57.158982 22453 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:57.655287 22453 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test107.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:57.655442 22453 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test107.prototxt
I0428 19:30:57.655757 22453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:57.655776 22453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:57.655853 22453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:57.655952 22453 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:57.656055 22453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:57.656081 22453 net.cpp:86] Creating Layer mnist
I0428 19:30:57.656092 22453 net.cpp:382] mnist -> data
I0428 19:30:57.656116 22453 net.cpp:382] mnist -> label
I0428 19:30:57.657261 22453 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:57.659520 22453 net.cpp:124] Setting up mnist
I0428 19:30:57.659538 22453 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:57.659562 22453 net.cpp:131] Top shape: 64 (64)
I0428 19:30:57.659567 22453 net.cpp:139] Memory required for data: 200960
I0428 19:30:57.659576 22453 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:57.659596 22453 net.cpp:86] Creating Layer conv0
I0428 19:30:57.659610 22453 net.cpp:408] conv0 <- data
I0428 19:30:57.659624 22453 net.cpp:382] conv0 -> conv0
I0428 19:30:57.891741 22453 net.cpp:124] Setting up conv0
I0428 19:30:57.891765 22453 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:57.891769 22453 net.cpp:139] Memory required for data: 938240
I0428 19:30:57.891783 22453 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:57.891794 22453 net.cpp:86] Creating Layer pool0
I0428 19:30:57.891816 22453 net.cpp:408] pool0 <- conv0
I0428 19:30:57.891837 22453 net.cpp:382] pool0 -> pool0
I0428 19:30:57.891883 22453 net.cpp:124] Setting up pool0
I0428 19:30:57.891888 22453 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:57.891891 22453 net.cpp:139] Memory required for data: 1122560
I0428 19:30:57.891894 22453 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:57.891901 22453 net.cpp:86] Creating Layer ip1
I0428 19:30:57.891904 22453 net.cpp:408] ip1 <- pool0
I0428 19:30:57.891909 22453 net.cpp:382] ip1 -> ip1
I0428 19:30:57.892113 22453 net.cpp:124] Setting up ip1
I0428 19:30:57.892122 22453 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:57.892125 22453 net.cpp:139] Memory required for data: 1128960
I0428 19:30:57.892132 22453 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:57.892138 22453 net.cpp:86] Creating Layer relu1
I0428 19:30:57.892140 22453 net.cpp:408] relu1 <- ip1
I0428 19:30:57.892144 22453 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:57.892316 22453 net.cpp:124] Setting up relu1
I0428 19:30:57.892325 22453 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:57.892328 22453 net.cpp:139] Memory required for data: 1135360
I0428 19:30:57.892331 22453 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:57.892338 22453 net.cpp:86] Creating Layer ip2
I0428 19:30:57.892340 22453 net.cpp:408] ip2 <- ip1
I0428 19:30:57.892345 22453 net.cpp:382] ip2 -> ip2
I0428 19:30:57.893337 22453 net.cpp:124] Setting up ip2
I0428 19:30:57.893350 22453 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:57.893370 22453 net.cpp:139] Memory required for data: 1148160
I0428 19:30:57.893378 22453 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:57.893399 22453 net.cpp:86] Creating Layer relu2
I0428 19:30:57.893401 22453 net.cpp:408] relu2 <- ip2
I0428 19:30:57.893406 22453 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:57.894198 22453 net.cpp:124] Setting up relu2
I0428 19:30:57.894227 22453 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:57.894232 22453 net.cpp:139] Memory required for data: 1160960
I0428 19:30:57.894234 22453 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:57.894242 22453 net.cpp:86] Creating Layer ip3
I0428 19:30:57.894245 22453 net.cpp:408] ip3 <- ip2
I0428 19:30:57.894250 22453 net.cpp:382] ip3 -> ip3
I0428 19:30:57.894351 22453 net.cpp:124] Setting up ip3
I0428 19:30:57.894358 22453 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:57.894361 22453 net.cpp:139] Memory required for data: 1163520
I0428 19:30:57.894367 22453 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:57.894373 22453 net.cpp:86] Creating Layer relu3
I0428 19:30:57.894376 22453 net.cpp:408] relu3 <- ip3
I0428 19:30:57.894381 22453 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:57.894546 22453 net.cpp:124] Setting up relu3
I0428 19:30:57.894554 22453 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:57.894557 22453 net.cpp:139] Memory required for data: 1166080
I0428 19:30:57.894560 22453 layer_factory.hpp:77] Creating layer loss
I0428 19:30:57.894567 22453 net.cpp:86] Creating Layer loss
I0428 19:30:57.894569 22453 net.cpp:408] loss <- ip3
I0428 19:30:57.894573 22453 net.cpp:408] loss <- label
I0428 19:30:57.894578 22453 net.cpp:382] loss -> loss
I0428 19:30:57.894593 22453 layer_factory.hpp:77] Creating layer loss
I0428 19:30:57.894816 22453 net.cpp:124] Setting up loss
I0428 19:30:57.894825 22453 net.cpp:131] Top shape: (1)
I0428 19:30:57.894829 22453 net.cpp:134]     with loss weight 1
I0428 19:30:57.894845 22453 net.cpp:139] Memory required for data: 1166084
I0428 19:30:57.894850 22453 net.cpp:200] loss needs backward computation.
I0428 19:30:57.894852 22453 net.cpp:200] relu3 needs backward computation.
I0428 19:30:57.894855 22453 net.cpp:200] ip3 needs backward computation.
I0428 19:30:57.894858 22453 net.cpp:200] relu2 needs backward computation.
I0428 19:30:57.894860 22453 net.cpp:200] ip2 needs backward computation.
I0428 19:30:57.894863 22453 net.cpp:200] relu1 needs backward computation.
I0428 19:30:57.894866 22453 net.cpp:200] ip1 needs backward computation.
I0428 19:30:57.894879 22453 net.cpp:200] pool0 needs backward computation.
I0428 19:30:57.894882 22453 net.cpp:200] conv0 needs backward computation.
I0428 19:30:57.894886 22453 net.cpp:202] mnist does not need backward computation.
I0428 19:30:57.894888 22453 net.cpp:244] This network produces output loss
I0428 19:30:57.894896 22453 net.cpp:257] Network initialization done.
I0428 19:30:57.895213 22453 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test107.prototxt
I0428 19:30:57.895269 22453 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:57.895364 22453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:57.895426 22453 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:57.895470 22453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:57.895483 22453 net.cpp:86] Creating Layer mnist
I0428 19:30:57.895488 22453 net.cpp:382] mnist -> data
I0428 19:30:57.895495 22453 net.cpp:382] mnist -> label
I0428 19:30:57.895596 22453 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:57.897661 22453 net.cpp:124] Setting up mnist
I0428 19:30:57.897706 22453 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:57.897711 22453 net.cpp:131] Top shape: 100 (100)
I0428 19:30:57.897713 22453 net.cpp:139] Memory required for data: 314000
I0428 19:30:57.897716 22453 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:57.897723 22453 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:57.897727 22453 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:57.897732 22453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:57.897737 22453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:57.897796 22453 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:57.897801 22453 net.cpp:131] Top shape: 100 (100)
I0428 19:30:57.897805 22453 net.cpp:131] Top shape: 100 (100)
I0428 19:30:57.897807 22453 net.cpp:139] Memory required for data: 314800
I0428 19:30:57.897820 22453 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:57.897830 22453 net.cpp:86] Creating Layer conv0
I0428 19:30:57.897832 22453 net.cpp:408] conv0 <- data
I0428 19:30:57.897837 22453 net.cpp:382] conv0 -> conv0
I0428 19:30:57.899528 22453 net.cpp:124] Setting up conv0
I0428 19:30:57.899543 22453 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:57.899562 22453 net.cpp:139] Memory required for data: 1466800
I0428 19:30:57.899571 22453 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:57.899577 22453 net.cpp:86] Creating Layer pool0
I0428 19:30:57.899580 22453 net.cpp:408] pool0 <- conv0
I0428 19:30:57.899585 22453 net.cpp:382] pool0 -> pool0
I0428 19:30:57.899622 22453 net.cpp:124] Setting up pool0
I0428 19:30:57.899627 22453 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:57.899631 22453 net.cpp:139] Memory required for data: 1754800
I0428 19:30:57.899633 22453 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:57.899639 22453 net.cpp:86] Creating Layer ip1
I0428 19:30:57.899658 22453 net.cpp:408] ip1 <- pool0
I0428 19:30:57.899663 22453 net.cpp:382] ip1 -> ip1
I0428 19:30:57.899870 22453 net.cpp:124] Setting up ip1
I0428 19:30:57.899878 22453 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:57.899883 22453 net.cpp:139] Memory required for data: 1764800
I0428 19:30:57.899888 22453 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:57.899893 22453 net.cpp:86] Creating Layer relu1
I0428 19:30:57.899896 22453 net.cpp:408] relu1 <- ip1
I0428 19:30:57.899900 22453 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:57.900068 22453 net.cpp:124] Setting up relu1
I0428 19:30:57.900076 22453 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:57.900079 22453 net.cpp:139] Memory required for data: 1774800
I0428 19:30:57.900082 22453 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:57.900089 22453 net.cpp:86] Creating Layer ip2
I0428 19:30:57.900090 22453 net.cpp:408] ip2 <- ip1
I0428 19:30:57.900095 22453 net.cpp:382] ip2 -> ip2
I0428 19:30:57.900193 22453 net.cpp:124] Setting up ip2
I0428 19:30:57.900200 22453 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:57.900203 22453 net.cpp:139] Memory required for data: 1794800
I0428 19:30:57.900210 22453 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:57.900214 22453 net.cpp:86] Creating Layer relu2
I0428 19:30:57.900218 22453 net.cpp:408] relu2 <- ip2
I0428 19:30:57.900234 22453 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:57.901131 22453 net.cpp:124] Setting up relu2
I0428 19:30:57.901160 22453 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:57.901162 22453 net.cpp:139] Memory required for data: 1814800
I0428 19:30:57.901166 22453 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:57.901173 22453 net.cpp:86] Creating Layer ip3
I0428 19:30:57.901177 22453 net.cpp:408] ip3 <- ip2
I0428 19:30:57.901182 22453 net.cpp:382] ip3 -> ip3
I0428 19:30:57.901329 22453 net.cpp:124] Setting up ip3
I0428 19:30:57.901337 22453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:57.901355 22453 net.cpp:139] Memory required for data: 1818800
I0428 19:30:57.901360 22453 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:57.901382 22453 net.cpp:86] Creating Layer relu3
I0428 19:30:57.901386 22453 net.cpp:408] relu3 <- ip3
I0428 19:30:57.901407 22453 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:57.901573 22453 net.cpp:124] Setting up relu3
I0428 19:30:57.901582 22453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:57.901587 22453 net.cpp:139] Memory required for data: 1822800
I0428 19:30:57.901589 22453 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:57.901595 22453 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:57.901598 22453 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:57.901604 22453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:57.901610 22453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:57.901645 22453 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:57.901653 22453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:57.901656 22453 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:57.901671 22453 net.cpp:139] Memory required for data: 1830800
I0428 19:30:57.901676 22453 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:57.901681 22453 net.cpp:86] Creating Layer accuracy
I0428 19:30:57.901685 22453 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:57.901690 22453 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:57.901695 22453 net.cpp:382] accuracy -> accuracy
I0428 19:30:57.901713 22453 net.cpp:124] Setting up accuracy
I0428 19:30:57.901718 22453 net.cpp:131] Top shape: (1)
I0428 19:30:57.901721 22453 net.cpp:139] Memory required for data: 1830804
I0428 19:30:57.901731 22453 layer_factory.hpp:77] Creating layer loss
I0428 19:30:57.901736 22453 net.cpp:86] Creating Layer loss
I0428 19:30:57.901739 22453 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:57.901743 22453 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:57.901747 22453 net.cpp:382] loss -> loss
I0428 19:30:57.901754 22453 layer_factory.hpp:77] Creating layer loss
I0428 19:30:57.902024 22453 net.cpp:124] Setting up loss
I0428 19:30:57.902034 22453 net.cpp:131] Top shape: (1)
I0428 19:30:57.902037 22453 net.cpp:134]     with loss weight 1
I0428 19:30:57.902065 22453 net.cpp:139] Memory required for data: 1830808
I0428 19:30:57.902070 22453 net.cpp:200] loss needs backward computation.
I0428 19:30:57.902072 22453 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:57.902077 22453 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:57.902081 22453 net.cpp:200] relu3 needs backward computation.
I0428 19:30:57.902084 22453 net.cpp:200] ip3 needs backward computation.
I0428 19:30:57.902088 22453 net.cpp:200] relu2 needs backward computation.
I0428 19:30:57.902091 22453 net.cpp:200] ip2 needs backward computation.
I0428 19:30:57.902094 22453 net.cpp:200] relu1 needs backward computation.
I0428 19:30:57.902096 22453 net.cpp:200] ip1 needs backward computation.
I0428 19:30:57.902101 22453 net.cpp:200] pool0 needs backward computation.
I0428 19:30:57.902103 22453 net.cpp:200] conv0 needs backward computation.
I0428 19:30:57.902107 22453 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:57.902112 22453 net.cpp:202] mnist does not need backward computation.
I0428 19:30:57.902113 22453 net.cpp:244] This network produces output accuracy
I0428 19:30:57.902117 22453 net.cpp:244] This network produces output loss
I0428 19:30:57.902127 22453 net.cpp:257] Network initialization done.
I0428 19:30:57.902179 22453 solver.cpp:56] Solver scaffolding done.
I0428 19:30:57.902487 22453 caffe.cpp:248] Starting Optimization
I0428 19:30:57.902493 22453 solver.cpp:273] Solving LeNet
I0428 19:30:57.902496 22453 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:57.903865 22453 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:57.906829 22453 blocking_queue.cpp:49] Waiting for data
I0428 19:30:57.977105 22460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:57.977632 22453 solver.cpp:398]     Test net output #0: accuracy = 0.1236
I0428 19:30:57.977669 22453 solver.cpp:398]     Test net output #1: loss = 2.29936 (* 1 = 2.29936 loss)
I0428 19:30:57.979307 22453 solver.cpp:219] Iteration 0 (0 iter/s, 0.0767676s/100 iters), loss = 2.29869
I0428 19:30:57.979338 22453 solver.cpp:238]     Train net output #0: loss = 2.29869 (* 1 = 2.29869 loss)
I0428 19:30:57.979351 22453 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:58.049022 22453 solver.cpp:219] Iteration 100 (1435.22 iter/s, 0.069676s/100 iters), loss = 0.719114
I0428 19:30:58.049062 22453 solver.cpp:238]     Train net output #0: loss = 0.719114 (* 1 = 0.719114 loss)
I0428 19:30:58.049067 22453 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:58.120362 22453 solver.cpp:219] Iteration 200 (1402.48 iter/s, 0.0713021s/100 iters), loss = 0.317273
I0428 19:30:58.120419 22453 solver.cpp:238]     Train net output #0: loss = 0.317273 (* 1 = 0.317273 loss)
I0428 19:30:58.120430 22453 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:58.193325 22453 solver.cpp:219] Iteration 300 (1371.73 iter/s, 0.0729006s/100 iters), loss = 0.228388
I0428 19:30:58.193367 22453 solver.cpp:238]     Train net output #0: loss = 0.228388 (* 1 = 0.228388 loss)
I0428 19:30:58.193374 22453 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:58.255779 22453 solver.cpp:219] Iteration 400 (1602.16 iter/s, 0.0624159s/100 iters), loss = 0.18968
I0428 19:30:58.255820 22453 solver.cpp:238]     Train net output #0: loss = 0.18968 (* 1 = 0.18968 loss)
I0428 19:30:58.255826 22453 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:58.316823 22453 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:58.388798 22460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:58.389263 22453 solver.cpp:398]     Test net output #0: accuracy = 0.9359
I0428 19:30:58.389288 22453 solver.cpp:398]     Test net output #1: loss = 0.20891 (* 1 = 0.20891 loss)
I0428 19:30:58.389992 22453 solver.cpp:219] Iteration 500 (745.308 iter/s, 0.134173s/100 iters), loss = 0.325715
I0428 19:30:58.390030 22453 solver.cpp:238]     Train net output #0: loss = 0.325715 (* 1 = 0.325715 loss)
I0428 19:30:58.390040 22453 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:58.460642 22453 solver.cpp:219] Iteration 600 (1416.27 iter/s, 0.0706079s/100 iters), loss = 0.123598
I0428 19:30:58.460690 22453 solver.cpp:238]     Train net output #0: loss = 0.123598 (* 1 = 0.123598 loss)
I0428 19:30:58.460702 22453 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:58.531213 22453 solver.cpp:219] Iteration 700 (1418.08 iter/s, 0.0705178s/100 iters), loss = 0.306298
I0428 19:30:58.531245 22453 solver.cpp:238]     Train net output #0: loss = 0.306298 (* 1 = 0.306298 loss)
I0428 19:30:58.531253 22453 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:58.593137 22453 solver.cpp:219] Iteration 800 (1615.94 iter/s, 0.0618834s/100 iters), loss = 0.21833
I0428 19:30:58.593166 22453 solver.cpp:238]     Train net output #0: loss = 0.21833 (* 1 = 0.21833 loss)
I0428 19:30:58.593174 22453 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:58.654322 22453 solver.cpp:219] Iteration 900 (1635.4 iter/s, 0.061147s/100 iters), loss = 0.193146
I0428 19:30:58.654351 22453 solver.cpp:238]     Train net output #0: loss = 0.193146 (* 1 = 0.193146 loss)
I0428 19:30:58.654361 22453 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:58.675043 22459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:58.715404 22453 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:58.716347 22453 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:58.716959 22453 solver.cpp:311] Iteration 1000, loss = 0.175207
I0428 19:30:58.716977 22453 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:58.792434 22460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:58.792915 22453 solver.cpp:398]     Test net output #0: accuracy = 0.9573
I0428 19:30:58.792940 22453 solver.cpp:398]     Test net output #1: loss = 0.140734 (* 1 = 0.140734 loss)
I0428 19:30:58.792946 22453 solver.cpp:316] Optimization Done.
I0428 19:30:58.792949 22453 caffe.cpp:259] Optimization Done.
