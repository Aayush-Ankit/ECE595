I0428 20:00:02.306213 29385 caffe.cpp:218] Using GPUs 0
I0428 20:00:02.336068 29385 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:02.788959 29385 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test865.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:02.789113 29385 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test865.prototxt
I0428 20:00:02.789463 29385 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:02.789479 29385 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:02.789552 29385 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:02.789615 29385 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:02.789695 29385 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:02.789728 29385 net.cpp:86] Creating Layer mnist
I0428 20:00:02.789736 29385 net.cpp:382] mnist -> data
I0428 20:00:02.789753 29385 net.cpp:382] mnist -> label
I0428 20:00:02.790683 29385 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:02.792912 29385 net.cpp:124] Setting up mnist
I0428 20:00:02.792940 29385 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:02.792955 29385 net.cpp:131] Top shape: 64 (64)
I0428 20:00:02.792959 29385 net.cpp:139] Memory required for data: 200960
I0428 20:00:02.792965 29385 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:02.792978 29385 net.cpp:86] Creating Layer conv0
I0428 20:00:02.792982 29385 net.cpp:408] conv0 <- data
I0428 20:00:02.792992 29385 net.cpp:382] conv0 -> conv0
I0428 20:00:03.027009 29385 net.cpp:124] Setting up conv0
I0428 20:00:03.027051 29385 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:03.027055 29385 net.cpp:139] Memory required for data: 1675520
I0428 20:00:03.027089 29385 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:03.027101 29385 net.cpp:86] Creating Layer pool0
I0428 20:00:03.027106 29385 net.cpp:408] pool0 <- conv0
I0428 20:00:03.027112 29385 net.cpp:382] pool0 -> pool0
I0428 20:00:03.027156 29385 net.cpp:124] Setting up pool0
I0428 20:00:03.027175 29385 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:03.027179 29385 net.cpp:139] Memory required for data: 2044160
I0428 20:00:03.027181 29385 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:03.027191 29385 net.cpp:86] Creating Layer conv1
I0428 20:00:03.027194 29385 net.cpp:408] conv1 <- pool0
I0428 20:00:03.027199 29385 net.cpp:382] conv1 -> conv1
I0428 20:00:03.029883 29385 net.cpp:124] Setting up conv1
I0428 20:00:03.029912 29385 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:03.029917 29385 net.cpp:139] Memory required for data: 2453760
I0428 20:00:03.029924 29385 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:03.029932 29385 net.cpp:86] Creating Layer pool1
I0428 20:00:03.029934 29385 net.cpp:408] pool1 <- conv1
I0428 20:00:03.029940 29385 net.cpp:382] pool1 -> pool1
I0428 20:00:03.029992 29385 net.cpp:124] Setting up pool1
I0428 20:00:03.029997 29385 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:03.029999 29385 net.cpp:139] Memory required for data: 2556160
I0428 20:00:03.030002 29385 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:03.030011 29385 net.cpp:86] Creating Layer ip1
I0428 20:00:03.030014 29385 net.cpp:408] ip1 <- pool1
I0428 20:00:03.030019 29385 net.cpp:382] ip1 -> ip1
I0428 20:00:03.030164 29385 net.cpp:124] Setting up ip1
I0428 20:00:03.030174 29385 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:03.030176 29385 net.cpp:139] Memory required for data: 2562560
I0428 20:00:03.030184 29385 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:03.030189 29385 net.cpp:86] Creating Layer relu1
I0428 20:00:03.030191 29385 net.cpp:408] relu1 <- ip1
I0428 20:00:03.030195 29385 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:03.030359 29385 net.cpp:124] Setting up relu1
I0428 20:00:03.030369 29385 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:03.030371 29385 net.cpp:139] Memory required for data: 2568960
I0428 20:00:03.030375 29385 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:03.030381 29385 net.cpp:86] Creating Layer ip2
I0428 20:00:03.030385 29385 net.cpp:408] ip2 <- ip1
I0428 20:00:03.030390 29385 net.cpp:382] ip2 -> ip2
I0428 20:00:03.030488 29385 net.cpp:124] Setting up ip2
I0428 20:00:03.030494 29385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:03.030498 29385 net.cpp:139] Memory required for data: 2571520
I0428 20:00:03.030503 29385 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:03.030508 29385 net.cpp:86] Creating Layer relu2
I0428 20:00:03.030510 29385 net.cpp:408] relu2 <- ip2
I0428 20:00:03.030514 29385 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:03.031230 29385 net.cpp:124] Setting up relu2
I0428 20:00:03.031242 29385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:03.031261 29385 net.cpp:139] Memory required for data: 2574080
I0428 20:00:03.031265 29385 layer_factory.hpp:77] Creating layer loss
I0428 20:00:03.031271 29385 net.cpp:86] Creating Layer loss
I0428 20:00:03.031275 29385 net.cpp:408] loss <- ip2
I0428 20:00:03.031280 29385 net.cpp:408] loss <- label
I0428 20:00:03.031286 29385 net.cpp:382] loss -> loss
I0428 20:00:03.031301 29385 layer_factory.hpp:77] Creating layer loss
I0428 20:00:03.031538 29385 net.cpp:124] Setting up loss
I0428 20:00:03.031548 29385 net.cpp:131] Top shape: (1)
I0428 20:00:03.031551 29385 net.cpp:134]     with loss weight 1
I0428 20:00:03.031564 29385 net.cpp:139] Memory required for data: 2574084
I0428 20:00:03.031568 29385 net.cpp:200] loss needs backward computation.
I0428 20:00:03.031570 29385 net.cpp:200] relu2 needs backward computation.
I0428 20:00:03.031574 29385 net.cpp:200] ip2 needs backward computation.
I0428 20:00:03.031576 29385 net.cpp:200] relu1 needs backward computation.
I0428 20:00:03.031579 29385 net.cpp:200] ip1 needs backward computation.
I0428 20:00:03.031591 29385 net.cpp:200] pool1 needs backward computation.
I0428 20:00:03.031594 29385 net.cpp:200] conv1 needs backward computation.
I0428 20:00:03.031597 29385 net.cpp:200] pool0 needs backward computation.
I0428 20:00:03.031600 29385 net.cpp:200] conv0 needs backward computation.
I0428 20:00:03.031604 29385 net.cpp:202] mnist does not need backward computation.
I0428 20:00:03.031606 29385 net.cpp:244] This network produces output loss
I0428 20:00:03.031615 29385 net.cpp:257] Network initialization done.
I0428 20:00:03.031919 29385 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test865.prototxt
I0428 20:00:03.031944 29385 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:03.032045 29385 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:03.032110 29385 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:03.032152 29385 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:03.032165 29385 net.cpp:86] Creating Layer mnist
I0428 20:00:03.032168 29385 net.cpp:382] mnist -> data
I0428 20:00:03.032177 29385 net.cpp:382] mnist -> label
I0428 20:00:03.032294 29385 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:03.034282 29385 net.cpp:124] Setting up mnist
I0428 20:00:03.034309 29385 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:03.034314 29385 net.cpp:131] Top shape: 100 (100)
I0428 20:00:03.034317 29385 net.cpp:139] Memory required for data: 314000
I0428 20:00:03.034320 29385 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:03.034342 29385 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:03.034344 29385 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:03.034364 29385 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:03.034373 29385 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:03.034490 29385 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:03.034499 29385 net.cpp:131] Top shape: 100 (100)
I0428 20:00:03.034503 29385 net.cpp:131] Top shape: 100 (100)
I0428 20:00:03.034507 29385 net.cpp:139] Memory required for data: 314800
I0428 20:00:03.034509 29385 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:03.034521 29385 net.cpp:86] Creating Layer conv0
I0428 20:00:03.034525 29385 net.cpp:408] conv0 <- data
I0428 20:00:03.034530 29385 net.cpp:382] conv0 -> conv0
I0428 20:00:03.036187 29385 net.cpp:124] Setting up conv0
I0428 20:00:03.036216 29385 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:03.036219 29385 net.cpp:139] Memory required for data: 2618800
I0428 20:00:03.036228 29385 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:03.036236 29385 net.cpp:86] Creating Layer pool0
I0428 20:00:03.036239 29385 net.cpp:408] pool0 <- conv0
I0428 20:00:03.036244 29385 net.cpp:382] pool0 -> pool0
I0428 20:00:03.036294 29385 net.cpp:124] Setting up pool0
I0428 20:00:03.036299 29385 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:03.036303 29385 net.cpp:139] Memory required for data: 3194800
I0428 20:00:03.036305 29385 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:03.036314 29385 net.cpp:86] Creating Layer conv1
I0428 20:00:03.036317 29385 net.cpp:408] conv1 <- pool0
I0428 20:00:03.036324 29385 net.cpp:382] conv1 -> conv1
I0428 20:00:03.038756 29385 net.cpp:124] Setting up conv1
I0428 20:00:03.038785 29385 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:03.038790 29385 net.cpp:139] Memory required for data: 3834800
I0428 20:00:03.038800 29385 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:03.038805 29385 net.cpp:86] Creating Layer pool1
I0428 20:00:03.038810 29385 net.cpp:408] pool1 <- conv1
I0428 20:00:03.038815 29385 net.cpp:382] pool1 -> pool1
I0428 20:00:03.038872 29385 net.cpp:124] Setting up pool1
I0428 20:00:03.038878 29385 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:03.038882 29385 net.cpp:139] Memory required for data: 3994800
I0428 20:00:03.038884 29385 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:03.038890 29385 net.cpp:86] Creating Layer ip1
I0428 20:00:03.038894 29385 net.cpp:408] ip1 <- pool1
I0428 20:00:03.038899 29385 net.cpp:382] ip1 -> ip1
I0428 20:00:03.039062 29385 net.cpp:124] Setting up ip1
I0428 20:00:03.039083 29385 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:03.039098 29385 net.cpp:139] Memory required for data: 4004800
I0428 20:00:03.039103 29385 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:03.039108 29385 net.cpp:86] Creating Layer relu1
I0428 20:00:03.039111 29385 net.cpp:408] relu1 <- ip1
I0428 20:00:03.039116 29385 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:03.039320 29385 net.cpp:124] Setting up relu1
I0428 20:00:03.039330 29385 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:03.039332 29385 net.cpp:139] Memory required for data: 4014800
I0428 20:00:03.039335 29385 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:03.039343 29385 net.cpp:86] Creating Layer ip2
I0428 20:00:03.039346 29385 net.cpp:408] ip2 <- ip1
I0428 20:00:03.039350 29385 net.cpp:382] ip2 -> ip2
I0428 20:00:03.039468 29385 net.cpp:124] Setting up ip2
I0428 20:00:03.039475 29385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:03.039479 29385 net.cpp:139] Memory required for data: 4018800
I0428 20:00:03.039484 29385 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:03.039487 29385 net.cpp:86] Creating Layer relu2
I0428 20:00:03.039490 29385 net.cpp:408] relu2 <- ip2
I0428 20:00:03.039495 29385 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:03.039682 29385 net.cpp:124] Setting up relu2
I0428 20:00:03.039692 29385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:03.039695 29385 net.cpp:139] Memory required for data: 4022800
I0428 20:00:03.039703 29385 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:00:03.039708 29385 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:00:03.039712 29385 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:00:03.039718 29385 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:00:03.039733 29385 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:00:03.039768 29385 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:00:03.039775 29385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:03.039779 29385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:03.039798 29385 net.cpp:139] Memory required for data: 4030800
I0428 20:00:03.039801 29385 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:03.039808 29385 net.cpp:86] Creating Layer accuracy
I0428 20:00:03.039810 29385 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:00:03.039814 29385 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:03.039819 29385 net.cpp:382] accuracy -> accuracy
I0428 20:00:03.039826 29385 net.cpp:124] Setting up accuracy
I0428 20:00:03.039830 29385 net.cpp:131] Top shape: (1)
I0428 20:00:03.039844 29385 net.cpp:139] Memory required for data: 4030804
I0428 20:00:03.039846 29385 layer_factory.hpp:77] Creating layer loss
I0428 20:00:03.039866 29385 net.cpp:86] Creating Layer loss
I0428 20:00:03.039870 29385 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:00:03.039875 29385 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:03.039878 29385 net.cpp:382] loss -> loss
I0428 20:00:03.039885 29385 layer_factory.hpp:77] Creating layer loss
I0428 20:00:03.040135 29385 net.cpp:124] Setting up loss
I0428 20:00:03.040148 29385 net.cpp:131] Top shape: (1)
I0428 20:00:03.040156 29385 net.cpp:134]     with loss weight 1
I0428 20:00:03.040163 29385 net.cpp:139] Memory required for data: 4030808
I0428 20:00:03.040171 29385 net.cpp:200] loss needs backward computation.
I0428 20:00:03.040190 29385 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:03.040194 29385 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:00:03.040197 29385 net.cpp:200] relu2 needs backward computation.
I0428 20:00:03.040200 29385 net.cpp:200] ip2 needs backward computation.
I0428 20:00:03.040204 29385 net.cpp:200] relu1 needs backward computation.
I0428 20:00:03.040206 29385 net.cpp:200] ip1 needs backward computation.
I0428 20:00:03.040210 29385 net.cpp:200] pool1 needs backward computation.
I0428 20:00:03.040227 29385 net.cpp:200] conv1 needs backward computation.
I0428 20:00:03.040230 29385 net.cpp:200] pool0 needs backward computation.
I0428 20:00:03.040232 29385 net.cpp:200] conv0 needs backward computation.
I0428 20:00:03.040236 29385 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:03.040241 29385 net.cpp:202] mnist does not need backward computation.
I0428 20:00:03.040242 29385 net.cpp:244] This network produces output accuracy
I0428 20:00:03.040251 29385 net.cpp:244] This network produces output loss
I0428 20:00:03.040261 29385 net.cpp:257] Network initialization done.
I0428 20:00:03.040297 29385 solver.cpp:56] Solver scaffolding done.
I0428 20:00:03.040560 29385 caffe.cpp:248] Starting Optimization
I0428 20:00:03.040566 29385 solver.cpp:273] Solving LeNet
I0428 20:00:03.040570 29385 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:03.040709 29385 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:03.044579 29385 blocking_queue.cpp:49] Waiting for data
I0428 20:00:03.119830 29392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:03.120344 29385 solver.cpp:398]     Test net output #0: accuracy = 0.1464
I0428 20:00:03.120380 29385 solver.cpp:398]     Test net output #1: loss = 2.29714 (* 1 = 2.29714 loss)
I0428 20:00:03.122802 29385 solver.cpp:219] Iteration 0 (0 iter/s, 0.0822077s/100 iters), loss = 2.30606
I0428 20:00:03.122839 29385 solver.cpp:238]     Train net output #0: loss = 2.30606 (* 1 = 2.30606 loss)
I0428 20:00:03.122850 29385 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:03.203289 29385 solver.cpp:219] Iteration 100 (1243 iter/s, 0.0804506s/100 iters), loss = 1.31499
I0428 20:00:03.203330 29385 solver.cpp:238]     Train net output #0: loss = 1.31499 (* 1 = 1.31499 loss)
I0428 20:00:03.203335 29385 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:03.295140 29385 solver.cpp:219] Iteration 200 (1089.33 iter/s, 0.0917997s/100 iters), loss = 1.01811
I0428 20:00:03.295191 29385 solver.cpp:238]     Train net output #0: loss = 1.01811 (* 1 = 1.01811 loss)
I0428 20:00:03.295199 29385 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:03.378774 29385 solver.cpp:219] Iteration 300 (1196.52 iter/s, 0.083576s/100 iters), loss = 0.516055
I0428 20:00:03.378799 29385 solver.cpp:238]     Train net output #0: loss = 0.516055 (* 1 = 0.516055 loss)
I0428 20:00:03.378806 29385 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:03.461621 29385 solver.cpp:219] Iteration 400 (1207.57 iter/s, 0.0828109s/100 iters), loss = 0.488651
I0428 20:00:03.461663 29385 solver.cpp:238]     Train net output #0: loss = 0.488651 (* 1 = 0.488651 loss)
I0428 20:00:03.461669 29385 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:03.556320 29385 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:03.611829 29392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:03.612349 29385 solver.cpp:398]     Test net output #0: accuracy = 0.7565
I0428 20:00:03.612383 29385 solver.cpp:398]     Test net output #1: loss = 0.614951 (* 1 = 0.614951 loss)
I0428 20:00:03.613293 29385 solver.cpp:219] Iteration 500 (659.496 iter/s, 0.151631s/100 iters), loss = 0.598271
I0428 20:00:03.613317 29385 solver.cpp:238]     Train net output #0: loss = 0.598271 (* 1 = 0.598271 loss)
I0428 20:00:03.613324 29385 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:03.698231 29385 solver.cpp:219] Iteration 600 (1177.84 iter/s, 0.0849009s/100 iters), loss = 0.760376
I0428 20:00:03.698267 29385 solver.cpp:238]     Train net output #0: loss = 0.760376 (* 1 = 0.760376 loss)
I0428 20:00:03.698277 29385 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:03.783603 29385 solver.cpp:219] Iteration 700 (1171.95 iter/s, 0.0853279s/100 iters), loss = 0.54653
I0428 20:00:03.783632 29385 solver.cpp:238]     Train net output #0: loss = 0.54653 (* 1 = 0.54653 loss)
I0428 20:00:03.783638 29385 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:03.864984 29385 solver.cpp:219] Iteration 800 (1229.35 iter/s, 0.0813436s/100 iters), loss = 0.566292
I0428 20:00:03.865010 29385 solver.cpp:238]     Train net output #0: loss = 0.566292 (* 1 = 0.566292 loss)
I0428 20:00:03.865015 29385 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:03.949528 29385 solver.cpp:219] Iteration 900 (1183.31 iter/s, 0.0845086s/100 iters), loss = 0.512097
I0428 20:00:03.949563 29385 solver.cpp:238]     Train net output #0: loss = 0.512097 (* 1 = 0.512097 loss)
I0428 20:00:03.949571 29385 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:03.978755 29391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:04.033304 29385 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:04.034272 29385 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:04.034803 29385 solver.cpp:311] Iteration 1000, loss = 0.51944
I0428 20:00:04.034821 29385 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:04.087087 29392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:04.087602 29385 solver.cpp:398]     Test net output #0: accuracy = 0.7679
I0428 20:00:04.087623 29385 solver.cpp:398]     Test net output #1: loss = 0.570678 (* 1 = 0.570678 loss)
I0428 20:00:04.087628 29385 solver.cpp:316] Optimization Done.
I0428 20:00:04.087631 29385 caffe.cpp:259] Optimization Done.
