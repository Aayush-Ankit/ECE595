I0428 20:08:01.984164 31292 caffe.cpp:218] Using GPUs 0
I0428 20:08:02.019404 31292 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:02.539399 31292 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1072.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:02.539543 31292 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1072.prototxt
I0428 20:08:02.539966 31292 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:02.539994 31292 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:02.540110 31292 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:02.540223 31292 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:02.540329 31292 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:02.540361 31292 net.cpp:86] Creating Layer mnist
I0428 20:08:02.540374 31292 net.cpp:382] mnist -> data
I0428 20:08:02.540405 31292 net.cpp:382] mnist -> label
I0428 20:08:02.541513 31292 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:02.543974 31292 net.cpp:124] Setting up mnist
I0428 20:08:02.543994 31292 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:02.544005 31292 net.cpp:131] Top shape: 64 (64)
I0428 20:08:02.544015 31292 net.cpp:139] Memory required for data: 200960
I0428 20:08:02.544026 31292 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:02.544044 31292 net.cpp:86] Creating Layer conv0
I0428 20:08:02.544066 31292 net.cpp:408] conv0 <- data
I0428 20:08:02.544080 31292 net.cpp:382] conv0 -> conv0
I0428 20:08:02.841517 31292 net.cpp:124] Setting up conv0
I0428 20:08:02.841552 31292 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:02.841557 31292 net.cpp:139] Memory required for data: 3887360
I0428 20:08:02.841574 31292 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:02.841589 31292 net.cpp:86] Creating Layer pool0
I0428 20:08:02.841594 31292 net.cpp:408] pool0 <- conv0
I0428 20:08:02.841601 31292 net.cpp:382] pool0 -> pool0
I0428 20:08:02.841655 31292 net.cpp:124] Setting up pool0
I0428 20:08:02.841662 31292 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:02.841666 31292 net.cpp:139] Memory required for data: 4808960
I0428 20:08:02.841670 31292 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:02.841683 31292 net.cpp:86] Creating Layer conv1
I0428 20:08:02.841687 31292 net.cpp:408] conv1 <- pool0
I0428 20:08:02.841693 31292 net.cpp:382] conv1 -> conv1
I0428 20:08:02.844884 31292 net.cpp:124] Setting up conv1
I0428 20:08:02.844904 31292 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:02.844911 31292 net.cpp:139] Memory required for data: 4972800
I0428 20:08:02.844923 31292 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:02.844931 31292 net.cpp:86] Creating Layer pool1
I0428 20:08:02.844936 31292 net.cpp:408] pool1 <- conv1
I0428 20:08:02.844943 31292 net.cpp:382] pool1 -> pool1
I0428 20:08:02.844988 31292 net.cpp:124] Setting up pool1
I0428 20:08:02.844995 31292 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:02.845000 31292 net.cpp:139] Memory required for data: 5013760
I0428 20:08:02.845002 31292 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:02.845011 31292 net.cpp:86] Creating Layer ip1
I0428 20:08:02.845016 31292 net.cpp:408] ip1 <- pool1
I0428 20:08:02.845021 31292 net.cpp:382] ip1 -> ip1
I0428 20:08:02.846117 31292 net.cpp:124] Setting up ip1
I0428 20:08:02.846132 31292 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:02.846137 31292 net.cpp:139] Memory required for data: 5016320
I0428 20:08:02.846146 31292 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:02.846153 31292 net.cpp:86] Creating Layer relu1
I0428 20:08:02.846158 31292 net.cpp:408] relu1 <- ip1
I0428 20:08:02.846164 31292 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:02.846366 31292 net.cpp:124] Setting up relu1
I0428 20:08:02.846376 31292 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:02.846380 31292 net.cpp:139] Memory required for data: 5018880
I0428 20:08:02.846385 31292 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:02.846393 31292 net.cpp:86] Creating Layer ip2
I0428 20:08:02.846397 31292 net.cpp:408] ip2 <- ip1
I0428 20:08:02.846403 31292 net.cpp:382] ip2 -> ip2
I0428 20:08:02.846524 31292 net.cpp:124] Setting up ip2
I0428 20:08:02.846532 31292 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:02.846535 31292 net.cpp:139] Memory required for data: 5031680
I0428 20:08:02.846542 31292 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:02.846550 31292 net.cpp:86] Creating Layer relu2
I0428 20:08:02.846554 31292 net.cpp:408] relu2 <- ip2
I0428 20:08:02.846560 31292 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:02.847420 31292 net.cpp:124] Setting up relu2
I0428 20:08:02.847436 31292 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:02.847440 31292 net.cpp:139] Memory required for data: 5044480
I0428 20:08:02.847445 31292 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:02.847453 31292 net.cpp:86] Creating Layer ip3
I0428 20:08:02.847457 31292 net.cpp:408] ip3 <- ip2
I0428 20:08:02.847463 31292 net.cpp:382] ip3 -> ip3
I0428 20:08:02.847587 31292 net.cpp:124] Setting up ip3
I0428 20:08:02.847597 31292 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:02.847601 31292 net.cpp:139] Memory required for data: 5047040
I0428 20:08:02.847610 31292 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:02.847616 31292 net.cpp:86] Creating Layer relu3
I0428 20:08:02.847620 31292 net.cpp:408] relu3 <- ip3
I0428 20:08:02.847626 31292 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:02.847832 31292 net.cpp:124] Setting up relu3
I0428 20:08:02.847843 31292 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:02.847847 31292 net.cpp:139] Memory required for data: 5049600
I0428 20:08:02.847851 31292 layer_factory.hpp:77] Creating layer loss
I0428 20:08:02.847858 31292 net.cpp:86] Creating Layer loss
I0428 20:08:02.847862 31292 net.cpp:408] loss <- ip3
I0428 20:08:02.847867 31292 net.cpp:408] loss <- label
I0428 20:08:02.847874 31292 net.cpp:382] loss -> loss
I0428 20:08:02.847894 31292 layer_factory.hpp:77] Creating layer loss
I0428 20:08:02.848167 31292 net.cpp:124] Setting up loss
I0428 20:08:02.848178 31292 net.cpp:131] Top shape: (1)
I0428 20:08:02.848182 31292 net.cpp:134]     with loss weight 1
I0428 20:08:02.848199 31292 net.cpp:139] Memory required for data: 5049604
I0428 20:08:02.848203 31292 net.cpp:200] loss needs backward computation.
I0428 20:08:02.848208 31292 net.cpp:200] relu3 needs backward computation.
I0428 20:08:02.848212 31292 net.cpp:200] ip3 needs backward computation.
I0428 20:08:02.848215 31292 net.cpp:200] relu2 needs backward computation.
I0428 20:08:02.848219 31292 net.cpp:200] ip2 needs backward computation.
I0428 20:08:02.848222 31292 net.cpp:200] relu1 needs backward computation.
I0428 20:08:02.848227 31292 net.cpp:200] ip1 needs backward computation.
I0428 20:08:02.848230 31292 net.cpp:200] pool1 needs backward computation.
I0428 20:08:02.848233 31292 net.cpp:200] conv1 needs backward computation.
I0428 20:08:02.848237 31292 net.cpp:200] pool0 needs backward computation.
I0428 20:08:02.848242 31292 net.cpp:200] conv0 needs backward computation.
I0428 20:08:02.848247 31292 net.cpp:202] mnist does not need backward computation.
I0428 20:08:02.848250 31292 net.cpp:244] This network produces output loss
I0428 20:08:02.848261 31292 net.cpp:257] Network initialization done.
I0428 20:08:02.848644 31292 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1072.prototxt
I0428 20:08:02.848677 31292 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:02.848785 31292 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:02.848891 31292 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:02.848948 31292 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:02.848963 31292 net.cpp:86] Creating Layer mnist
I0428 20:08:02.848968 31292 net.cpp:382] mnist -> data
I0428 20:08:02.848978 31292 net.cpp:382] mnist -> label
I0428 20:08:02.849081 31292 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:02.851485 31292 net.cpp:124] Setting up mnist
I0428 20:08:02.851500 31292 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:02.851507 31292 net.cpp:131] Top shape: 100 (100)
I0428 20:08:02.851511 31292 net.cpp:139] Memory required for data: 314000
I0428 20:08:02.851516 31292 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:02.851528 31292 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:02.851533 31292 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:02.851539 31292 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:02.851547 31292 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:02.851675 31292 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:02.851686 31292 net.cpp:131] Top shape: 100 (100)
I0428 20:08:02.851691 31292 net.cpp:131] Top shape: 100 (100)
I0428 20:08:02.851693 31292 net.cpp:139] Memory required for data: 314800
I0428 20:08:02.851697 31292 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:02.851707 31292 net.cpp:86] Creating Layer conv0
I0428 20:08:02.851712 31292 net.cpp:408] conv0 <- data
I0428 20:08:02.851719 31292 net.cpp:382] conv0 -> conv0
I0428 20:08:02.853493 31292 net.cpp:124] Setting up conv0
I0428 20:08:02.853512 31292 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:02.853515 31292 net.cpp:139] Memory required for data: 6074800
I0428 20:08:02.853526 31292 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:02.853534 31292 net.cpp:86] Creating Layer pool0
I0428 20:08:02.853538 31292 net.cpp:408] pool0 <- conv0
I0428 20:08:02.853545 31292 net.cpp:382] pool0 -> pool0
I0428 20:08:02.853590 31292 net.cpp:124] Setting up pool0
I0428 20:08:02.853596 31292 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:02.853600 31292 net.cpp:139] Memory required for data: 7514800
I0428 20:08:02.853603 31292 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:02.853613 31292 net.cpp:86] Creating Layer conv1
I0428 20:08:02.853617 31292 net.cpp:408] conv1 <- pool0
I0428 20:08:02.853623 31292 net.cpp:382] conv1 -> conv1
I0428 20:08:02.855973 31292 net.cpp:124] Setting up conv1
I0428 20:08:02.855989 31292 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:02.855994 31292 net.cpp:139] Memory required for data: 7770800
I0428 20:08:02.856005 31292 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:02.856014 31292 net.cpp:86] Creating Layer pool1
I0428 20:08:02.856017 31292 net.cpp:408] pool1 <- conv1
I0428 20:08:02.856024 31292 net.cpp:382] pool1 -> pool1
I0428 20:08:02.856076 31292 net.cpp:124] Setting up pool1
I0428 20:08:02.856082 31292 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:02.856087 31292 net.cpp:139] Memory required for data: 7834800
I0428 20:08:02.856091 31292 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:02.856097 31292 net.cpp:86] Creating Layer ip1
I0428 20:08:02.856101 31292 net.cpp:408] ip1 <- pool1
I0428 20:08:02.856107 31292 net.cpp:382] ip1 -> ip1
I0428 20:08:02.856266 31292 net.cpp:124] Setting up ip1
I0428 20:08:02.856277 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.856295 31292 net.cpp:139] Memory required for data: 7838800
I0428 20:08:02.856305 31292 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:02.856312 31292 net.cpp:86] Creating Layer relu1
I0428 20:08:02.856317 31292 net.cpp:408] relu1 <- ip1
I0428 20:08:02.856323 31292 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:02.856525 31292 net.cpp:124] Setting up relu1
I0428 20:08:02.856536 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.856540 31292 net.cpp:139] Memory required for data: 7842800
I0428 20:08:02.856544 31292 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:02.856554 31292 net.cpp:86] Creating Layer ip2
I0428 20:08:02.856557 31292 net.cpp:408] ip2 <- ip1
I0428 20:08:02.856564 31292 net.cpp:382] ip2 -> ip2
I0428 20:08:02.856688 31292 net.cpp:124] Setting up ip2
I0428 20:08:02.856698 31292 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:02.856701 31292 net.cpp:139] Memory required for data: 7862800
I0428 20:08:02.856709 31292 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:02.856714 31292 net.cpp:86] Creating Layer relu2
I0428 20:08:02.856719 31292 net.cpp:408] relu2 <- ip2
I0428 20:08:02.856731 31292 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:02.856921 31292 net.cpp:124] Setting up relu2
I0428 20:08:02.856931 31292 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:02.856936 31292 net.cpp:139] Memory required for data: 7882800
I0428 20:08:02.856940 31292 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:02.856946 31292 net.cpp:86] Creating Layer ip3
I0428 20:08:02.856951 31292 net.cpp:408] ip3 <- ip2
I0428 20:08:02.856957 31292 net.cpp:382] ip3 -> ip3
I0428 20:08:02.857089 31292 net.cpp:124] Setting up ip3
I0428 20:08:02.857096 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.857100 31292 net.cpp:139] Memory required for data: 7886800
I0428 20:08:02.857110 31292 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:02.857115 31292 net.cpp:86] Creating Layer relu3
I0428 20:08:02.857120 31292 net.cpp:408] relu3 <- ip3
I0428 20:08:02.857125 31292 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:02.858078 31292 net.cpp:124] Setting up relu3
I0428 20:08:02.858093 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.858098 31292 net.cpp:139] Memory required for data: 7890800
I0428 20:08:02.858103 31292 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:02.858108 31292 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:02.858114 31292 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:02.858119 31292 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:02.858127 31292 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:02.858171 31292 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:02.858178 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.858183 31292 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:02.858186 31292 net.cpp:139] Memory required for data: 7898800
I0428 20:08:02.858191 31292 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:02.858196 31292 net.cpp:86] Creating Layer accuracy
I0428 20:08:02.858201 31292 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:02.858206 31292 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:02.858211 31292 net.cpp:382] accuracy -> accuracy
I0428 20:08:02.858219 31292 net.cpp:124] Setting up accuracy
I0428 20:08:02.858225 31292 net.cpp:131] Top shape: (1)
I0428 20:08:02.858228 31292 net.cpp:139] Memory required for data: 7898804
I0428 20:08:02.858232 31292 layer_factory.hpp:77] Creating layer loss
I0428 20:08:02.858238 31292 net.cpp:86] Creating Layer loss
I0428 20:08:02.858242 31292 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:02.858247 31292 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:02.858253 31292 net.cpp:382] loss -> loss
I0428 20:08:02.858260 31292 layer_factory.hpp:77] Creating layer loss
I0428 20:08:02.858536 31292 net.cpp:124] Setting up loss
I0428 20:08:02.858546 31292 net.cpp:131] Top shape: (1)
I0428 20:08:02.858551 31292 net.cpp:134]     with loss weight 1
I0428 20:08:02.858570 31292 net.cpp:139] Memory required for data: 7898808
I0428 20:08:02.858575 31292 net.cpp:200] loss needs backward computation.
I0428 20:08:02.858582 31292 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:02.858587 31292 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:02.858597 31292 net.cpp:200] relu3 needs backward computation.
I0428 20:08:02.858602 31292 net.cpp:200] ip3 needs backward computation.
I0428 20:08:02.858605 31292 net.cpp:200] relu2 needs backward computation.
I0428 20:08:02.858609 31292 net.cpp:200] ip2 needs backward computation.
I0428 20:08:02.858613 31292 net.cpp:200] relu1 needs backward computation.
I0428 20:08:02.858618 31292 net.cpp:200] ip1 needs backward computation.
I0428 20:08:02.858621 31292 net.cpp:200] pool1 needs backward computation.
I0428 20:08:02.858630 31292 net.cpp:200] conv1 needs backward computation.
I0428 20:08:02.858634 31292 net.cpp:200] pool0 needs backward computation.
I0428 20:08:02.858639 31292 net.cpp:200] conv0 needs backward computation.
I0428 20:08:02.858644 31292 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:02.858649 31292 net.cpp:202] mnist does not need backward computation.
I0428 20:08:02.858651 31292 net.cpp:244] This network produces output accuracy
I0428 20:08:02.858656 31292 net.cpp:244] This network produces output loss
I0428 20:08:02.858669 31292 net.cpp:257] Network initialization done.
I0428 20:08:02.858719 31292 solver.cpp:56] Solver scaffolding done.
I0428 20:08:02.859148 31292 caffe.cpp:248] Starting Optimization
I0428 20:08:02.859154 31292 solver.cpp:273] Solving LeNet
I0428 20:08:02.859158 31292 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:02.860122 31292 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:02.865698 31292 blocking_queue.cpp:49] Waiting for data
I0428 20:08:02.937000 31299 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:02.937633 31292 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 20:08:02.937656 31292 solver.cpp:398]     Test net output #1: loss = 2.30708 (* 1 = 2.30708 loss)
I0428 20:08:02.941709 31292 solver.cpp:219] Iteration 0 (0 iter/s, 0.0825191s/100 iters), loss = 2.3104
I0428 20:08:02.941740 31292 solver.cpp:238]     Train net output #0: loss = 2.3104 (* 1 = 2.3104 loss)
I0428 20:08:02.941754 31292 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:03.034065 31292 solver.cpp:219] Iteration 100 (1083.23 iter/s, 0.0923167s/100 iters), loss = 0.585223
I0428 20:08:03.034090 31292 solver.cpp:238]     Train net output #0: loss = 0.585223 (* 1 = 0.585223 loss)
I0428 20:08:03.034096 31292 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:03.123708 31292 solver.cpp:219] Iteration 200 (1115.96 iter/s, 0.0896092s/100 iters), loss = 0.237997
I0428 20:08:03.123747 31292 solver.cpp:238]     Train net output #0: loss = 0.237997 (* 1 = 0.237997 loss)
I0428 20:08:03.123769 31292 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:03.213989 31292 solver.cpp:219] Iteration 300 (1108.06 iter/s, 0.0902482s/100 iters), loss = 0.25031
I0428 20:08:03.214030 31292 solver.cpp:238]     Train net output #0: loss = 0.25031 (* 1 = 0.25031 loss)
I0428 20:08:03.214036 31292 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:03.304944 31292 solver.cpp:219] Iteration 400 (1099.88 iter/s, 0.0909191s/100 iters), loss = 0.126263
I0428 20:08:03.304983 31292 solver.cpp:238]     Train net output #0: loss = 0.126263 (* 1 = 0.126263 loss)
I0428 20:08:03.304989 31292 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:03.394830 31292 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:03.450410 31299 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:03.451002 31292 solver.cpp:398]     Test net output #0: accuracy = 0.9451
I0428 20:08:03.451036 31292 solver.cpp:398]     Test net output #1: loss = 0.171082 (* 1 = 0.171082 loss)
I0428 20:08:03.452050 31292 solver.cpp:219] Iteration 500 (680.081 iter/s, 0.147041s/100 iters), loss = 0.137064
I0428 20:08:03.452114 31292 solver.cpp:238]     Train net output #0: loss = 0.137064 (* 1 = 0.137064 loss)
I0428 20:08:03.452121 31292 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:03.552561 31292 solver.cpp:219] Iteration 600 (995.637 iter/s, 0.100438s/100 iters), loss = 0.113345
I0428 20:08:03.552585 31292 solver.cpp:238]     Train net output #0: loss = 0.113345 (* 1 = 0.113345 loss)
I0428 20:08:03.552592 31292 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:03.643585 31292 solver.cpp:219] Iteration 700 (1099.01 iter/s, 0.0909906s/100 iters), loss = 0.319008
I0428 20:08:03.643610 31292 solver.cpp:238]     Train net output #0: loss = 0.319008 (* 1 = 0.319008 loss)
I0428 20:08:03.643616 31292 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:03.734165 31292 solver.cpp:219] Iteration 800 (1104.42 iter/s, 0.0905453s/100 iters), loss = 0.40776
I0428 20:08:03.734205 31292 solver.cpp:238]     Train net output #0: loss = 0.40776 (* 1 = 0.40776 loss)
I0428 20:08:03.734211 31292 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:03.825106 31292 solver.cpp:219] Iteration 900 (1100.02 iter/s, 0.0909076s/100 iters), loss = 0.158218
I0428 20:08:03.825146 31292 solver.cpp:238]     Train net output #0: loss = 0.158218 (* 1 = 0.158218 loss)
I0428 20:08:03.825166 31292 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:03.855072 31298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:03.913919 31292 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:03.914743 31292 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:03.915347 31292 solver.cpp:311] Iteration 1000, loss = 0.105857
I0428 20:08:03.915361 31292 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:03.995959 31299 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:03.996695 31292 solver.cpp:398]     Test net output #0: accuracy = 0.9668
I0428 20:08:03.996734 31292 solver.cpp:398]     Test net output #1: loss = 0.103071 (* 1 = 0.103071 loss)
I0428 20:08:03.996757 31292 solver.cpp:316] Optimization Done.
I0428 20:08:03.996762 31292 caffe.cpp:259] Optimization Done.
