I0428 19:58:20.938657 28953 caffe.cpp:218] Using GPUs 0
I0428 19:58:20.975234 28953 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:21.508203 28953 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test816.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:21.508342 28953 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test816.prototxt
I0428 19:58:21.508764 28953 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:21.508783 28953 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:21.508895 28953 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:21.508977 28953 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:21.509084 28953 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:21.509107 28953 net.cpp:86] Creating Layer mnist
I0428 19:58:21.509117 28953 net.cpp:382] mnist -> data
I0428 19:58:21.509140 28953 net.cpp:382] mnist -> label
I0428 19:58:21.510251 28953 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:21.512706 28953 net.cpp:124] Setting up mnist
I0428 19:58:21.512722 28953 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:21.512728 28953 net.cpp:131] Top shape: 64 (64)
I0428 19:58:21.512732 28953 net.cpp:139] Memory required for data: 200960
I0428 19:58:21.512738 28953 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:21.512778 28953 net.cpp:86] Creating Layer conv0
I0428 19:58:21.512802 28953 net.cpp:408] conv0 <- data
I0428 19:58:21.512825 28953 net.cpp:382] conv0 -> conv0
I0428 19:58:21.803576 28953 net.cpp:124] Setting up conv0
I0428 19:58:21.803606 28953 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:21.803611 28953 net.cpp:139] Memory required for data: 1675520
I0428 19:58:21.803629 28953 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:21.803644 28953 net.cpp:86] Creating Layer pool0
I0428 19:58:21.803649 28953 net.cpp:408] pool0 <- conv0
I0428 19:58:21.803655 28953 net.cpp:382] pool0 -> pool0
I0428 19:58:21.803710 28953 net.cpp:124] Setting up pool0
I0428 19:58:21.803716 28953 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:21.803720 28953 net.cpp:139] Memory required for data: 2044160
I0428 19:58:21.803725 28953 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:21.803736 28953 net.cpp:86] Creating Layer conv1
I0428 19:58:21.803740 28953 net.cpp:408] conv1 <- pool0
I0428 19:58:21.803746 28953 net.cpp:382] conv1 -> conv1
I0428 19:58:21.806898 28953 net.cpp:124] Setting up conv1
I0428 19:58:21.806917 28953 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:58:21.806921 28953 net.cpp:139] Memory required for data: 2126080
I0428 19:58:21.806931 28953 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:21.806941 28953 net.cpp:86] Creating Layer pool1
I0428 19:58:21.806946 28953 net.cpp:408] pool1 <- conv1
I0428 19:58:21.806952 28953 net.cpp:382] pool1 -> pool1
I0428 19:58:21.806996 28953 net.cpp:124] Setting up pool1
I0428 19:58:21.807003 28953 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:58:21.807006 28953 net.cpp:139] Memory required for data: 2146560
I0428 19:58:21.807010 28953 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:21.807018 28953 net.cpp:86] Creating Layer ip1
I0428 19:58:21.807023 28953 net.cpp:408] ip1 <- pool1
I0428 19:58:21.807027 28953 net.cpp:382] ip1 -> ip1
I0428 19:58:21.807170 28953 net.cpp:124] Setting up ip1
I0428 19:58:21.807180 28953 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:21.807183 28953 net.cpp:139] Memory required for data: 2159360
I0428 19:58:21.807193 28953 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:21.807199 28953 net.cpp:86] Creating Layer relu1
I0428 19:58:21.807202 28953 net.cpp:408] relu1 <- ip1
I0428 19:58:21.807207 28953 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:21.807401 28953 net.cpp:124] Setting up relu1
I0428 19:58:21.807411 28953 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:21.807415 28953 net.cpp:139] Memory required for data: 2172160
I0428 19:58:21.807418 28953 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:21.807426 28953 net.cpp:86] Creating Layer ip2
I0428 19:58:21.807430 28953 net.cpp:408] ip2 <- ip1
I0428 19:58:21.807435 28953 net.cpp:382] ip2 -> ip2
I0428 19:58:21.807564 28953 net.cpp:124] Setting up ip2
I0428 19:58:21.807571 28953 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:21.807575 28953 net.cpp:139] Memory required for data: 2184960
I0428 19:58:21.807582 28953 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:21.807588 28953 net.cpp:86] Creating Layer relu2
I0428 19:58:21.807592 28953 net.cpp:408] relu2 <- ip2
I0428 19:58:21.807597 28953 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:21.808439 28953 net.cpp:124] Setting up relu2
I0428 19:58:21.808454 28953 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:21.808459 28953 net.cpp:139] Memory required for data: 2197760
I0428 19:58:21.808462 28953 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:21.808471 28953 net.cpp:86] Creating Layer ip3
I0428 19:58:21.808475 28953 net.cpp:408] ip3 <- ip2
I0428 19:58:21.808481 28953 net.cpp:382] ip3 -> ip3
I0428 19:58:21.808604 28953 net.cpp:124] Setting up ip3
I0428 19:58:21.808612 28953 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:21.808615 28953 net.cpp:139] Memory required for data: 2200320
I0428 19:58:21.808625 28953 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:21.808631 28953 net.cpp:86] Creating Layer relu3
I0428 19:58:21.808635 28953 net.cpp:408] relu3 <- ip3
I0428 19:58:21.808640 28953 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:21.808846 28953 net.cpp:124] Setting up relu3
I0428 19:58:21.808857 28953 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:21.808861 28953 net.cpp:139] Memory required for data: 2202880
I0428 19:58:21.808864 28953 layer_factory.hpp:77] Creating layer loss
I0428 19:58:21.808877 28953 net.cpp:86] Creating Layer loss
I0428 19:58:21.808881 28953 net.cpp:408] loss <- ip3
I0428 19:58:21.808886 28953 net.cpp:408] loss <- label
I0428 19:58:21.808892 28953 net.cpp:382] loss -> loss
I0428 19:58:21.808907 28953 layer_factory.hpp:77] Creating layer loss
I0428 19:58:21.809175 28953 net.cpp:124] Setting up loss
I0428 19:58:21.809185 28953 net.cpp:131] Top shape: (1)
I0428 19:58:21.809190 28953 net.cpp:134]     with loss weight 1
I0428 19:58:21.809206 28953 net.cpp:139] Memory required for data: 2202884
I0428 19:58:21.809211 28953 net.cpp:200] loss needs backward computation.
I0428 19:58:21.809214 28953 net.cpp:200] relu3 needs backward computation.
I0428 19:58:21.809218 28953 net.cpp:200] ip3 needs backward computation.
I0428 19:58:21.809222 28953 net.cpp:200] relu2 needs backward computation.
I0428 19:58:21.809226 28953 net.cpp:200] ip2 needs backward computation.
I0428 19:58:21.809228 28953 net.cpp:200] relu1 needs backward computation.
I0428 19:58:21.809232 28953 net.cpp:200] ip1 needs backward computation.
I0428 19:58:21.809236 28953 net.cpp:200] pool1 needs backward computation.
I0428 19:58:21.809239 28953 net.cpp:200] conv1 needs backward computation.
I0428 19:58:21.809243 28953 net.cpp:200] pool0 needs backward computation.
I0428 19:58:21.809247 28953 net.cpp:200] conv0 needs backward computation.
I0428 19:58:21.809252 28953 net.cpp:202] mnist does not need backward computation.
I0428 19:58:21.809254 28953 net.cpp:244] This network produces output loss
I0428 19:58:21.809265 28953 net.cpp:257] Network initialization done.
I0428 19:58:21.809656 28953 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test816.prototxt
I0428 19:58:21.809689 28953 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:21.809798 28953 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:21.809893 28953 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:21.809944 28953 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:21.809959 28953 net.cpp:86] Creating Layer mnist
I0428 19:58:21.809964 28953 net.cpp:382] mnist -> data
I0428 19:58:21.809974 28953 net.cpp:382] mnist -> label
I0428 19:58:21.810071 28953 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:21.812487 28953 net.cpp:124] Setting up mnist
I0428 19:58:21.812503 28953 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:21.812510 28953 net.cpp:131] Top shape: 100 (100)
I0428 19:58:21.812513 28953 net.cpp:139] Memory required for data: 314000
I0428 19:58:21.812517 28953 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:21.812525 28953 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:21.812530 28953 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:21.812539 28953 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:21.812547 28953 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:21.812644 28953 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:21.812654 28953 net.cpp:131] Top shape: 100 (100)
I0428 19:58:21.812657 28953 net.cpp:131] Top shape: 100 (100)
I0428 19:58:21.812661 28953 net.cpp:139] Memory required for data: 314800
I0428 19:58:21.812664 28953 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:21.812674 28953 net.cpp:86] Creating Layer conv0
I0428 19:58:21.812678 28953 net.cpp:408] conv0 <- data
I0428 19:58:21.812685 28953 net.cpp:382] conv0 -> conv0
I0428 19:58:21.814548 28953 net.cpp:124] Setting up conv0
I0428 19:58:21.814566 28953 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:21.814570 28953 net.cpp:139] Memory required for data: 2618800
I0428 19:58:21.814581 28953 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:21.814589 28953 net.cpp:86] Creating Layer pool0
I0428 19:58:21.814594 28953 net.cpp:408] pool0 <- conv0
I0428 19:58:21.814599 28953 net.cpp:382] pool0 -> pool0
I0428 19:58:21.814641 28953 net.cpp:124] Setting up pool0
I0428 19:58:21.814647 28953 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:21.814651 28953 net.cpp:139] Memory required for data: 3194800
I0428 19:58:21.814656 28953 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:21.814664 28953 net.cpp:86] Creating Layer conv1
I0428 19:58:21.814668 28953 net.cpp:408] conv1 <- pool0
I0428 19:58:21.814673 28953 net.cpp:382] conv1 -> conv1
I0428 19:58:21.817039 28953 net.cpp:124] Setting up conv1
I0428 19:58:21.817054 28953 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:58:21.817059 28953 net.cpp:139] Memory required for data: 3322800
I0428 19:58:21.817070 28953 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:21.817076 28953 net.cpp:86] Creating Layer pool1
I0428 19:58:21.817080 28953 net.cpp:408] pool1 <- conv1
I0428 19:58:21.817087 28953 net.cpp:382] pool1 -> pool1
I0428 19:58:21.817137 28953 net.cpp:124] Setting up pool1
I0428 19:58:21.817143 28953 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:58:21.817147 28953 net.cpp:139] Memory required for data: 3354800
I0428 19:58:21.817150 28953 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:21.817157 28953 net.cpp:86] Creating Layer ip1
I0428 19:58:21.817160 28953 net.cpp:408] ip1 <- pool1
I0428 19:58:21.817167 28953 net.cpp:382] ip1 -> ip1
I0428 19:58:21.817360 28953 net.cpp:124] Setting up ip1
I0428 19:58:21.817371 28953 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:21.817387 28953 net.cpp:139] Memory required for data: 3374800
I0428 19:58:21.817397 28953 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:21.817406 28953 net.cpp:86] Creating Layer relu1
I0428 19:58:21.817411 28953 net.cpp:408] relu1 <- ip1
I0428 19:58:21.817417 28953 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:21.817631 28953 net.cpp:124] Setting up relu1
I0428 19:58:21.817644 28953 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:21.817648 28953 net.cpp:139] Memory required for data: 3394800
I0428 19:58:21.817652 28953 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:21.817664 28953 net.cpp:86] Creating Layer ip2
I0428 19:58:21.817668 28953 net.cpp:408] ip2 <- ip1
I0428 19:58:21.817673 28953 net.cpp:382] ip2 -> ip2
I0428 19:58:21.817813 28953 net.cpp:124] Setting up ip2
I0428 19:58:21.817822 28953 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:21.817826 28953 net.cpp:139] Memory required for data: 3414800
I0428 19:58:21.817832 28953 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:21.817837 28953 net.cpp:86] Creating Layer relu2
I0428 19:58:21.817842 28953 net.cpp:408] relu2 <- ip2
I0428 19:58:21.817847 28953 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:21.818084 28953 net.cpp:124] Setting up relu2
I0428 19:58:21.818094 28953 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:21.818099 28953 net.cpp:139] Memory required for data: 3434800
I0428 19:58:21.818101 28953 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:21.818109 28953 net.cpp:86] Creating Layer ip3
I0428 19:58:21.818112 28953 net.cpp:408] ip3 <- ip2
I0428 19:58:21.818120 28953 net.cpp:382] ip3 -> ip3
I0428 19:58:21.818266 28953 net.cpp:124] Setting up ip3
I0428 19:58:21.818275 28953 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:21.818279 28953 net.cpp:139] Memory required for data: 3438800
I0428 19:58:21.818289 28953 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:21.818297 28953 net.cpp:86] Creating Layer relu3
I0428 19:58:21.818302 28953 net.cpp:408] relu3 <- ip3
I0428 19:58:21.818306 28953 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:21.819231 28953 net.cpp:124] Setting up relu3
I0428 19:58:21.819247 28953 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:21.819249 28953 net.cpp:139] Memory required for data: 3442800
I0428 19:58:21.819253 28953 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:21.819262 28953 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:21.819265 28953 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:21.819270 28953 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:21.819279 28953 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:21.819327 28953 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:21.819335 28953 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:21.819339 28953 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:21.819344 28953 net.cpp:139] Memory required for data: 3450800
I0428 19:58:21.819346 28953 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:21.819352 28953 net.cpp:86] Creating Layer accuracy
I0428 19:58:21.819356 28953 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:21.819360 28953 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:21.819367 28953 net.cpp:382] accuracy -> accuracy
I0428 19:58:21.819376 28953 net.cpp:124] Setting up accuracy
I0428 19:58:21.819381 28953 net.cpp:131] Top shape: (1)
I0428 19:58:21.819386 28953 net.cpp:139] Memory required for data: 3450804
I0428 19:58:21.819388 28953 layer_factory.hpp:77] Creating layer loss
I0428 19:58:21.819394 28953 net.cpp:86] Creating Layer loss
I0428 19:58:21.819397 28953 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:21.819402 28953 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:21.819407 28953 net.cpp:382] loss -> loss
I0428 19:58:21.819416 28953 layer_factory.hpp:77] Creating layer loss
I0428 19:58:21.819701 28953 net.cpp:124] Setting up loss
I0428 19:58:21.819710 28953 net.cpp:131] Top shape: (1)
I0428 19:58:21.819715 28953 net.cpp:134]     with loss weight 1
I0428 19:58:21.819722 28953 net.cpp:139] Memory required for data: 3450808
I0428 19:58:21.819737 28953 net.cpp:200] loss needs backward computation.
I0428 19:58:21.819743 28953 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:21.819748 28953 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:21.819751 28953 net.cpp:200] relu3 needs backward computation.
I0428 19:58:21.819754 28953 net.cpp:200] ip3 needs backward computation.
I0428 19:58:21.819758 28953 net.cpp:200] relu2 needs backward computation.
I0428 19:58:21.819762 28953 net.cpp:200] ip2 needs backward computation.
I0428 19:58:21.819766 28953 net.cpp:200] relu1 needs backward computation.
I0428 19:58:21.819768 28953 net.cpp:200] ip1 needs backward computation.
I0428 19:58:21.819772 28953 net.cpp:200] pool1 needs backward computation.
I0428 19:58:21.819775 28953 net.cpp:200] conv1 needs backward computation.
I0428 19:58:21.819779 28953 net.cpp:200] pool0 needs backward computation.
I0428 19:58:21.819783 28953 net.cpp:200] conv0 needs backward computation.
I0428 19:58:21.819787 28953 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:21.819806 28953 net.cpp:202] mnist does not need backward computation.
I0428 19:58:21.819809 28953 net.cpp:244] This network produces output accuracy
I0428 19:58:21.819814 28953 net.cpp:244] This network produces output loss
I0428 19:58:21.819828 28953 net.cpp:257] Network initialization done.
I0428 19:58:21.819878 28953 solver.cpp:56] Solver scaffolding done.
I0428 19:58:21.820319 28953 caffe.cpp:248] Starting Optimization
I0428 19:58:21.820327 28953 solver.cpp:273] Solving LeNet
I0428 19:58:21.820329 28953 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:21.821208 28953 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:21.825556 28953 blocking_queue.cpp:49] Waiting for data
I0428 19:58:21.891628 28960 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:21.892175 28953 solver.cpp:398]     Test net output #0: accuracy = 0.0859
I0428 19:58:21.892201 28953 solver.cpp:398]     Test net output #1: loss = 2.30726 (* 1 = 2.30726 loss)
I0428 19:58:21.894934 28953 solver.cpp:219] Iteration 0 (0 iter/s, 0.0745728s/100 iters), loss = 2.3066
I0428 19:58:21.894964 28953 solver.cpp:238]     Train net output #0: loss = 2.3066 (* 1 = 2.3066 loss)
I0428 19:58:21.894979 28953 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:21.975404 28953 solver.cpp:219] Iteration 100 (1243.38 iter/s, 0.080426s/100 iters), loss = 0.984056
I0428 19:58:21.975436 28953 solver.cpp:238]     Train net output #0: loss = 0.984056 (* 1 = 0.984056 loss)
I0428 19:58:21.975443 28953 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:22.054312 28953 solver.cpp:219] Iteration 200 (1267.95 iter/s, 0.0788675s/100 iters), loss = 0.46672
I0428 19:58:22.054342 28953 solver.cpp:238]     Train net output #0: loss = 0.46672 (* 1 = 0.46672 loss)
I0428 19:58:22.054350 28953 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:22.132864 28953 solver.cpp:219] Iteration 300 (1273.69 iter/s, 0.0785123s/100 iters), loss = 0.18997
I0428 19:58:22.132895 28953 solver.cpp:238]     Train net output #0: loss = 0.18997 (* 1 = 0.18997 loss)
I0428 19:58:22.132902 28953 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:22.209206 28953 solver.cpp:219] Iteration 400 (1310.56 iter/s, 0.0763034s/100 iters), loss = 0.217518
I0428 19:58:22.209230 28953 solver.cpp:238]     Train net output #0: loss = 0.217518 (* 1 = 0.217518 loss)
I0428 19:58:22.209235 28953 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:22.281982 28953 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:22.357597 28960 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:22.358141 28953 solver.cpp:398]     Test net output #0: accuracy = 0.9474
I0428 19:58:22.358178 28953 solver.cpp:398]     Test net output #1: loss = 0.164847 (* 1 = 0.164847 loss)
I0428 19:58:22.359009 28953 solver.cpp:219] Iteration 500 (667.708 iter/s, 0.149766s/100 iters), loss = 0.204721
I0428 19:58:22.359045 28953 solver.cpp:238]     Train net output #0: loss = 0.204721 (* 1 = 0.204721 loss)
I0428 19:58:22.359066 28953 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:22.440865 28953 solver.cpp:219] Iteration 600 (1222.09 iter/s, 0.0818268s/100 iters), loss = 0.206921
I0428 19:58:22.440904 28953 solver.cpp:238]     Train net output #0: loss = 0.206921 (* 1 = 0.206921 loss)
I0428 19:58:22.440910 28953 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:22.517148 28953 solver.cpp:219] Iteration 700 (1311.46 iter/s, 0.0762511s/100 iters), loss = 0.156722
I0428 19:58:22.517189 28953 solver.cpp:238]     Train net output #0: loss = 0.156721 (* 1 = 0.156721 loss)
I0428 19:58:22.517194 28953 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:22.591645 28953 solver.cpp:219] Iteration 800 (1342.94 iter/s, 0.0744634s/100 iters), loss = 0.341306
I0428 19:58:22.591698 28953 solver.cpp:238]     Train net output #0: loss = 0.341305 (* 1 = 0.341305 loss)
I0428 19:58:22.591703 28953 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:22.666126 28953 solver.cpp:219] Iteration 900 (1343.44 iter/s, 0.0744356s/100 iters), loss = 0.17403
I0428 19:58:22.666165 28953 solver.cpp:238]     Train net output #0: loss = 0.17403 (* 1 = 0.17403 loss)
I0428 19:58:22.666172 28953 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:22.691154 28959 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:22.740281 28953 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:22.741118 28953 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:22.741621 28953 solver.cpp:311] Iteration 1000, loss = 0.117369
I0428 19:58:22.741636 28953 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:22.817178 28960 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:22.817754 28953 solver.cpp:398]     Test net output #0: accuracy = 0.9662
I0428 19:58:22.817773 28953 solver.cpp:398]     Test net output #1: loss = 0.107692 (* 1 = 0.107692 loss)
I0428 19:58:22.817778 28953 solver.cpp:316] Optimization Done.
I0428 19:58:22.817781 28953 caffe.cpp:259] Optimization Done.
