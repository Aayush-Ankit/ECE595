I0428 20:06:20.432484 30850 caffe.cpp:218] Using GPUs 0
I0428 20:06:20.461346 30850 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:20.906481 30850 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1025.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:20.906627 30850 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1025.prototxt
I0428 20:06:20.906956 30850 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:20.906986 30850 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:20.907054 30850 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:06:20.907117 30850 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:20.907196 30850 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:20.907215 30850 net.cpp:86] Creating Layer mnist
I0428 20:06:20.907222 30850 net.cpp:382] mnist -> data
I0428 20:06:20.907241 30850 net.cpp:382] mnist -> label
I0428 20:06:20.908215 30850 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:20.910400 30850 net.cpp:124] Setting up mnist
I0428 20:06:20.910414 30850 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:20.910419 30850 net.cpp:131] Top shape: 64 (64)
I0428 20:06:20.910423 30850 net.cpp:139] Memory required for data: 200960
I0428 20:06:20.910428 30850 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:20.910441 30850 net.cpp:86] Creating Layer conv0
I0428 20:06:20.910446 30850 net.cpp:408] conv0 <- data
I0428 20:06:20.910456 30850 net.cpp:382] conv0 -> conv0
I0428 20:06:21.143717 30850 net.cpp:124] Setting up conv0
I0428 20:06:21.143762 30850 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:21.143769 30850 net.cpp:139] Memory required for data: 3887360
I0428 20:06:21.143827 30850 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:21.143857 30850 net.cpp:86] Creating Layer pool0
I0428 20:06:21.143862 30850 net.cpp:408] pool0 <- conv0
I0428 20:06:21.143870 30850 net.cpp:382] pool0 -> pool0
I0428 20:06:21.143923 30850 net.cpp:124] Setting up pool0
I0428 20:06:21.143934 30850 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:21.143937 30850 net.cpp:139] Memory required for data: 4808960
I0428 20:06:21.143942 30850 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:21.143956 30850 net.cpp:86] Creating Layer conv1
I0428 20:06:21.143961 30850 net.cpp:408] conv1 <- pool0
I0428 20:06:21.143967 30850 net.cpp:382] conv1 -> conv1
I0428 20:06:21.147395 30850 net.cpp:124] Setting up conv1
I0428 20:06:21.147411 30850 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:21.147416 30850 net.cpp:139] Memory required for data: 4890880
I0428 20:06:21.147426 30850 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:21.147435 30850 net.cpp:86] Creating Layer pool1
I0428 20:06:21.147440 30850 net.cpp:408] pool1 <- conv1
I0428 20:06:21.147446 30850 net.cpp:382] pool1 -> pool1
I0428 20:06:21.147505 30850 net.cpp:124] Setting up pool1
I0428 20:06:21.147513 30850 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:21.147537 30850 net.cpp:139] Memory required for data: 4911360
I0428 20:06:21.147542 30850 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:21.147552 30850 net.cpp:86] Creating Layer ip1
I0428 20:06:21.147557 30850 net.cpp:408] ip1 <- pool1
I0428 20:06:21.147563 30850 net.cpp:382] ip1 -> ip1
I0428 20:06:21.147713 30850 net.cpp:124] Setting up ip1
I0428 20:06:21.147722 30850 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:21.147727 30850 net.cpp:139] Memory required for data: 4924160
I0428 20:06:21.147737 30850 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:21.147744 30850 net.cpp:86] Creating Layer relu1
I0428 20:06:21.147748 30850 net.cpp:408] relu1 <- ip1
I0428 20:06:21.147754 30850 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:21.147970 30850 net.cpp:124] Setting up relu1
I0428 20:06:21.147982 30850 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:21.147986 30850 net.cpp:139] Memory required for data: 4936960
I0428 20:06:21.147991 30850 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:21.148000 30850 net.cpp:86] Creating Layer ip2
I0428 20:06:21.148005 30850 net.cpp:408] ip2 <- ip1
I0428 20:06:21.148011 30850 net.cpp:382] ip2 -> ip2
I0428 20:06:21.148130 30850 net.cpp:124] Setting up ip2
I0428 20:06:21.148139 30850 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:21.148144 30850 net.cpp:139] Memory required for data: 4939520
I0428 20:06:21.148151 30850 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:21.148159 30850 net.cpp:86] Creating Layer relu2
I0428 20:06:21.148164 30850 net.cpp:408] relu2 <- ip2
I0428 20:06:21.148169 30850 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:21.149185 30850 net.cpp:124] Setting up relu2
I0428 20:06:21.149217 30850 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:21.149222 30850 net.cpp:139] Memory required for data: 4942080
I0428 20:06:21.149241 30850 layer_factory.hpp:77] Creating layer loss
I0428 20:06:21.149250 30850 net.cpp:86] Creating Layer loss
I0428 20:06:21.149255 30850 net.cpp:408] loss <- ip2
I0428 20:06:21.149260 30850 net.cpp:408] loss <- label
I0428 20:06:21.149267 30850 net.cpp:382] loss -> loss
I0428 20:06:21.149291 30850 layer_factory.hpp:77] Creating layer loss
I0428 20:06:21.149585 30850 net.cpp:124] Setting up loss
I0428 20:06:21.149610 30850 net.cpp:131] Top shape: (1)
I0428 20:06:21.149631 30850 net.cpp:134]     with loss weight 1
I0428 20:06:21.149647 30850 net.cpp:139] Memory required for data: 4942084
I0428 20:06:21.149652 30850 net.cpp:200] loss needs backward computation.
I0428 20:06:21.149657 30850 net.cpp:200] relu2 needs backward computation.
I0428 20:06:21.149662 30850 net.cpp:200] ip2 needs backward computation.
I0428 20:06:21.149665 30850 net.cpp:200] relu1 needs backward computation.
I0428 20:06:21.149669 30850 net.cpp:200] ip1 needs backward computation.
I0428 20:06:21.149685 30850 net.cpp:200] pool1 needs backward computation.
I0428 20:06:21.149690 30850 net.cpp:200] conv1 needs backward computation.
I0428 20:06:21.149694 30850 net.cpp:200] pool0 needs backward computation.
I0428 20:06:21.149699 30850 net.cpp:200] conv0 needs backward computation.
I0428 20:06:21.149704 30850 net.cpp:202] mnist does not need backward computation.
I0428 20:06:21.149708 30850 net.cpp:244] This network produces output loss
I0428 20:06:21.149720 30850 net.cpp:257] Network initialization done.
I0428 20:06:21.150156 30850 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1025.prototxt
I0428 20:06:21.150205 30850 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:21.150326 30850 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:06:21.150426 30850 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:21.150478 30850 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:21.150493 30850 net.cpp:86] Creating Layer mnist
I0428 20:06:21.150499 30850 net.cpp:382] mnist -> data
I0428 20:06:21.150509 30850 net.cpp:382] mnist -> label
I0428 20:06:21.150609 30850 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:21.153370 30850 net.cpp:124] Setting up mnist
I0428 20:06:21.153419 30850 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:21.153425 30850 net.cpp:131] Top shape: 100 (100)
I0428 20:06:21.153429 30850 net.cpp:139] Memory required for data: 314000
I0428 20:06:21.153434 30850 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:21.153450 30850 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:21.153455 30850 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:21.153479 30850 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:21.153496 30850 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:21.153610 30850 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:21.153633 30850 net.cpp:131] Top shape: 100 (100)
I0428 20:06:21.153641 30850 net.cpp:131] Top shape: 100 (100)
I0428 20:06:21.153645 30850 net.cpp:139] Memory required for data: 314800
I0428 20:06:21.153650 30850 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:21.153662 30850 net.cpp:86] Creating Layer conv0
I0428 20:06:21.153667 30850 net.cpp:408] conv0 <- data
I0428 20:06:21.153676 30850 net.cpp:382] conv0 -> conv0
I0428 20:06:21.155717 30850 net.cpp:124] Setting up conv0
I0428 20:06:21.155750 30850 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:21.155755 30850 net.cpp:139] Memory required for data: 6074800
I0428 20:06:21.155767 30850 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:21.155776 30850 net.cpp:86] Creating Layer pool0
I0428 20:06:21.155781 30850 net.cpp:408] pool0 <- conv0
I0428 20:06:21.155804 30850 net.cpp:382] pool0 -> pool0
I0428 20:06:21.155851 30850 net.cpp:124] Setting up pool0
I0428 20:06:21.155863 30850 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:21.155866 30850 net.cpp:139] Memory required for data: 7514800
I0428 20:06:21.155871 30850 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:21.155887 30850 net.cpp:86] Creating Layer conv1
I0428 20:06:21.155895 30850 net.cpp:408] conv1 <- pool0
I0428 20:06:21.155925 30850 net.cpp:382] conv1 -> conv1
I0428 20:06:21.158675 30850 net.cpp:124] Setting up conv1
I0428 20:06:21.158706 30850 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:21.158711 30850 net.cpp:139] Memory required for data: 7642800
I0428 20:06:21.158722 30850 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:21.158747 30850 net.cpp:86] Creating Layer pool1
I0428 20:06:21.158752 30850 net.cpp:408] pool1 <- conv1
I0428 20:06:21.158771 30850 net.cpp:382] pool1 -> pool1
I0428 20:06:21.158891 30850 net.cpp:124] Setting up pool1
I0428 20:06:21.158926 30850 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:21.158931 30850 net.cpp:139] Memory required for data: 7674800
I0428 20:06:21.158936 30850 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:21.158946 30850 net.cpp:86] Creating Layer ip1
I0428 20:06:21.158951 30850 net.cpp:408] ip1 <- pool1
I0428 20:06:21.158959 30850 net.cpp:382] ip1 -> ip1
I0428 20:06:21.159171 30850 net.cpp:124] Setting up ip1
I0428 20:06:21.159183 30850 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:21.159188 30850 net.cpp:139] Memory required for data: 7694800
I0428 20:06:21.159198 30850 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:21.159219 30850 net.cpp:86] Creating Layer relu1
I0428 20:06:21.159225 30850 net.cpp:408] relu1 <- ip1
I0428 20:06:21.159232 30850 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:21.159449 30850 net.cpp:124] Setting up relu1
I0428 20:06:21.159461 30850 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:21.159466 30850 net.cpp:139] Memory required for data: 7714800
I0428 20:06:21.159471 30850 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:21.159481 30850 net.cpp:86] Creating Layer ip2
I0428 20:06:21.159485 30850 net.cpp:408] ip2 <- ip1
I0428 20:06:21.159495 30850 net.cpp:382] ip2 -> ip2
I0428 20:06:21.159622 30850 net.cpp:124] Setting up ip2
I0428 20:06:21.159633 30850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:21.159637 30850 net.cpp:139] Memory required for data: 7718800
I0428 20:06:21.159646 30850 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:21.159651 30850 net.cpp:86] Creating Layer relu2
I0428 20:06:21.159657 30850 net.cpp:408] relu2 <- ip2
I0428 20:06:21.159662 30850 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:21.159919 30850 net.cpp:124] Setting up relu2
I0428 20:06:21.159947 30850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:21.159952 30850 net.cpp:139] Memory required for data: 7722800
I0428 20:06:21.159970 30850 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:06:21.159984 30850 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:06:21.159989 30850 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:06:21.159996 30850 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:06:21.160017 30850 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:06:21.160065 30850 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:06:21.160074 30850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:21.160080 30850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:21.160084 30850 net.cpp:139] Memory required for data: 7730800
I0428 20:06:21.160089 30850 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:21.160096 30850 net.cpp:86] Creating Layer accuracy
I0428 20:06:21.160101 30850 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:06:21.160107 30850 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:21.160115 30850 net.cpp:382] accuracy -> accuracy
I0428 20:06:21.160125 30850 net.cpp:124] Setting up accuracy
I0428 20:06:21.160130 30850 net.cpp:131] Top shape: (1)
I0428 20:06:21.160135 30850 net.cpp:139] Memory required for data: 7730804
I0428 20:06:21.160138 30850 layer_factory.hpp:77] Creating layer loss
I0428 20:06:21.160146 30850 net.cpp:86] Creating Layer loss
I0428 20:06:21.160151 30850 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:06:21.160157 30850 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:21.160163 30850 net.cpp:382] loss -> loss
I0428 20:06:21.160171 30850 layer_factory.hpp:77] Creating layer loss
I0428 20:06:21.160519 30850 net.cpp:124] Setting up loss
I0428 20:06:21.160531 30850 net.cpp:131] Top shape: (1)
I0428 20:06:21.160550 30850 net.cpp:134]     with loss weight 1
I0428 20:06:21.160557 30850 net.cpp:139] Memory required for data: 7730808
I0428 20:06:21.160562 30850 net.cpp:200] loss needs backward computation.
I0428 20:06:21.160568 30850 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:21.160584 30850 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:06:21.160588 30850 net.cpp:200] relu2 needs backward computation.
I0428 20:06:21.160593 30850 net.cpp:200] ip2 needs backward computation.
I0428 20:06:21.160596 30850 net.cpp:200] relu1 needs backward computation.
I0428 20:06:21.160600 30850 net.cpp:200] ip1 needs backward computation.
I0428 20:06:21.160605 30850 net.cpp:200] pool1 needs backward computation.
I0428 20:06:21.160609 30850 net.cpp:200] conv1 needs backward computation.
I0428 20:06:21.160614 30850 net.cpp:200] pool0 needs backward computation.
I0428 20:06:21.160619 30850 net.cpp:200] conv0 needs backward computation.
I0428 20:06:21.160624 30850 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:21.160629 30850 net.cpp:202] mnist does not need backward computation.
I0428 20:06:21.160632 30850 net.cpp:244] This network produces output accuracy
I0428 20:06:21.160637 30850 net.cpp:244] This network produces output loss
I0428 20:06:21.160651 30850 net.cpp:257] Network initialization done.
I0428 20:06:21.160697 30850 solver.cpp:56] Solver scaffolding done.
I0428 20:06:21.161119 30850 caffe.cpp:248] Starting Optimization
I0428 20:06:21.161128 30850 solver.cpp:273] Solving LeNet
I0428 20:06:21.161147 30850 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:21.162147 30850 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:21.168846 30850 blocking_queue.cpp:49] Waiting for data
I0428 20:06:21.239001 30857 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:21.239689 30850 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 20:06:21.239717 30850 solver.cpp:398]     Test net output #1: loss = 2.31896 (* 1 = 2.31896 loss)
I0428 20:06:21.244158 30850 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829512s/100 iters), loss = 2.30032
I0428 20:06:21.244185 30850 solver.cpp:238]     Train net output #0: loss = 2.30032 (* 1 = 2.30032 loss)
I0428 20:06:21.244215 30850 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:21.334717 30850 solver.cpp:219] Iteration 100 (1104.75 iter/s, 0.0905185s/100 iters), loss = 0.887676
I0428 20:06:21.334748 30850 solver.cpp:238]     Train net output #0: loss = 0.887676 (* 1 = 0.887676 loss)
I0428 20:06:21.334776 30850 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:21.425079 30850 solver.cpp:219] Iteration 200 (1107.15 iter/s, 0.090322s/100 iters), loss = 0.446595
I0428 20:06:21.425140 30850 solver.cpp:238]     Train net output #0: loss = 0.446595 (* 1 = 0.446595 loss)
I0428 20:06:21.425163 30850 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:21.519091 30850 solver.cpp:219] Iteration 300 (1064.5 iter/s, 0.0939406s/100 iters), loss = 0.238267
I0428 20:06:21.519129 30850 solver.cpp:238]     Train net output #0: loss = 0.238267 (* 1 = 0.238267 loss)
I0428 20:06:21.519140 30850 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:21.605937 30850 solver.cpp:219] Iteration 400 (1152.1 iter/s, 0.0867982s/100 iters), loss = 0.177517
I0428 20:06:21.605964 30850 solver.cpp:238]     Train net output #0: loss = 0.177517 (* 1 = 0.177517 loss)
I0428 20:06:21.605972 30850 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:21.690328 30850 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:21.765686 30857 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:21.766275 30850 solver.cpp:398]     Test net output #0: accuracy = 0.9471
I0428 20:06:21.766300 30850 solver.cpp:398]     Test net output #1: loss = 0.167345 (* 1 = 0.167345 loss)
I0428 20:06:21.767180 30850 solver.cpp:219] Iteration 500 (620.335 iter/s, 0.161203s/100 iters), loss = 0.270991
I0428 20:06:21.767218 30850 solver.cpp:238]     Train net output #0: loss = 0.270991 (* 1 = 0.270991 loss)
I0428 20:06:21.767230 30850 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:21.853407 30850 solver.cpp:219] Iteration 600 (1160.38 iter/s, 0.0861788s/100 iters), loss = 0.103676
I0428 20:06:21.853436 30850 solver.cpp:238]     Train net output #0: loss = 0.103676 (* 1 = 0.103676 loss)
I0428 20:06:21.853444 30850 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:21.952451 30850 solver.cpp:219] Iteration 700 (1010.1 iter/s, 0.0990003s/100 iters), loss = 0.206371
I0428 20:06:21.952502 30850 solver.cpp:238]     Train net output #0: loss = 0.206371 (* 1 = 0.206371 loss)
I0428 20:06:21.952518 30850 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:22.058894 30850 solver.cpp:219] Iteration 800 (939.979 iter/s, 0.106385s/100 iters), loss = 0.216995
I0428 20:06:22.058925 30850 solver.cpp:238]     Train net output #0: loss = 0.216995 (* 1 = 0.216995 loss)
I0428 20:06:22.058933 30850 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:22.144485 30850 solver.cpp:219] Iteration 900 (1168.91 iter/s, 0.0855501s/100 iters), loss = 0.161113
I0428 20:06:22.144517 30850 solver.cpp:238]     Train net output #0: loss = 0.161113 (* 1 = 0.161113 loss)
I0428 20:06:22.144525 30850 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:22.173107 30856 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:22.229254 30850 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:22.230059 30850 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:22.230649 30850 solver.cpp:311] Iteration 1000, loss = 0.0866372
I0428 20:06:22.230669 30850 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:22.290983 30857 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:22.291589 30850 solver.cpp:398]     Test net output #0: accuracy = 0.9663
I0428 20:06:22.291611 30850 solver.cpp:398]     Test net output #1: loss = 0.106315 (* 1 = 0.106315 loss)
I0428 20:06:22.291617 30850 solver.cpp:316] Optimization Done.
I0428 20:06:22.291621 30850 caffe.cpp:259] Optimization Done.
