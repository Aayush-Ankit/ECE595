I0428 19:42:57.356209 25228 caffe.cpp:218] Using GPUs 0
I0428 19:42:57.391728 25228 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:57.842242 25228 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test408.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:57.842371 25228 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test408.prototxt
I0428 19:42:57.842747 25228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:57.842778 25228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:57.842857 25228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:57.842921 25228 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:57.842999 25228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:57.843019 25228 net.cpp:86] Creating Layer mnist
I0428 19:42:57.843025 25228 net.cpp:382] mnist -> data
I0428 19:42:57.843044 25228 net.cpp:382] mnist -> label
I0428 19:42:57.844045 25228 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:57.846279 25228 net.cpp:124] Setting up mnist
I0428 19:42:57.846308 25228 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:57.846313 25228 net.cpp:131] Top shape: 64 (64)
I0428 19:42:57.846316 25228 net.cpp:139] Memory required for data: 200960
I0428 19:42:57.846323 25228 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:57.846345 25228 net.cpp:86] Creating Layer conv0
I0428 19:42:57.846362 25228 net.cpp:408] conv0 <- data
I0428 19:42:57.846374 25228 net.cpp:382] conv0 -> conv0
I0428 19:42:58.080966 25228 net.cpp:124] Setting up conv0
I0428 19:42:58.081008 25228 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:58.081027 25228 net.cpp:139] Memory required for data: 495872
I0428 19:42:58.081056 25228 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:58.081068 25228 net.cpp:86] Creating Layer pool0
I0428 19:42:58.081073 25228 net.cpp:408] pool0 <- conv0
I0428 19:42:58.081094 25228 net.cpp:382] pool0 -> pool0
I0428 19:42:58.081140 25228 net.cpp:124] Setting up pool0
I0428 19:42:58.081169 25228 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:58.081172 25228 net.cpp:139] Memory required for data: 569600
I0428 19:42:58.081176 25228 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:58.081199 25228 net.cpp:86] Creating Layer conv1
I0428 19:42:58.081202 25228 net.cpp:408] conv1 <- pool0
I0428 19:42:58.081207 25228 net.cpp:382] conv1 -> conv1
I0428 19:42:58.083839 25228 net.cpp:124] Setting up conv1
I0428 19:42:58.083869 25228 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:58.083873 25228 net.cpp:139] Memory required for data: 979200
I0428 19:42:58.083881 25228 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:58.083889 25228 net.cpp:86] Creating Layer pool1
I0428 19:42:58.083891 25228 net.cpp:408] pool1 <- conv1
I0428 19:42:58.083907 25228 net.cpp:382] pool1 -> pool1
I0428 19:42:58.083957 25228 net.cpp:124] Setting up pool1
I0428 19:42:58.083962 25228 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:58.083966 25228 net.cpp:139] Memory required for data: 1081600
I0428 19:42:58.083968 25228 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:58.083976 25228 net.cpp:86] Creating Layer ip1
I0428 19:42:58.083979 25228 net.cpp:408] ip1 <- pool1
I0428 19:42:58.083984 25228 net.cpp:382] ip1 -> ip1
I0428 19:42:58.084101 25228 net.cpp:124] Setting up ip1
I0428 19:42:58.084110 25228 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:58.084122 25228 net.cpp:139] Memory required for data: 1084160
I0428 19:42:58.084131 25228 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:58.084136 25228 net.cpp:86] Creating Layer relu1
I0428 19:42:58.084138 25228 net.cpp:408] relu1 <- ip1
I0428 19:42:58.084143 25228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:58.084300 25228 net.cpp:124] Setting up relu1
I0428 19:42:58.084308 25228 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:58.084311 25228 net.cpp:139] Memory required for data: 1086720
I0428 19:42:58.084314 25228 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:58.084321 25228 net.cpp:86] Creating Layer ip2
I0428 19:42:58.084324 25228 net.cpp:408] ip2 <- ip1
I0428 19:42:58.084329 25228 net.cpp:382] ip2 -> ip2
I0428 19:42:58.084439 25228 net.cpp:124] Setting up ip2
I0428 19:42:58.084445 25228 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:58.084448 25228 net.cpp:139] Memory required for data: 1099520
I0428 19:42:58.084453 25228 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:58.084460 25228 net.cpp:86] Creating Layer relu2
I0428 19:42:58.084462 25228 net.cpp:408] relu2 <- ip2
I0428 19:42:58.084466 25228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:58.085227 25228 net.cpp:124] Setting up relu2
I0428 19:42:58.085240 25228 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:58.085254 25228 net.cpp:139] Memory required for data: 1112320
I0428 19:42:58.085258 25228 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:58.085264 25228 net.cpp:86] Creating Layer ip3
I0428 19:42:58.085268 25228 net.cpp:408] ip3 <- ip2
I0428 19:42:58.085273 25228 net.cpp:382] ip3 -> ip3
I0428 19:42:58.085389 25228 net.cpp:124] Setting up ip3
I0428 19:42:58.085397 25228 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:58.085402 25228 net.cpp:139] Memory required for data: 1114880
I0428 19:42:58.085409 25228 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:58.085414 25228 net.cpp:86] Creating Layer relu3
I0428 19:42:58.085417 25228 net.cpp:408] relu3 <- ip3
I0428 19:42:58.085422 25228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:58.085657 25228 net.cpp:124] Setting up relu3
I0428 19:42:58.085666 25228 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:58.085670 25228 net.cpp:139] Memory required for data: 1117440
I0428 19:42:58.085675 25228 layer_factory.hpp:77] Creating layer loss
I0428 19:42:58.085680 25228 net.cpp:86] Creating Layer loss
I0428 19:42:58.085685 25228 net.cpp:408] loss <- ip3
I0428 19:42:58.085688 25228 net.cpp:408] loss <- label
I0428 19:42:58.085695 25228 net.cpp:382] loss -> loss
I0428 19:42:58.085711 25228 layer_factory.hpp:77] Creating layer loss
I0428 19:42:58.085965 25228 net.cpp:124] Setting up loss
I0428 19:42:58.085975 25228 net.cpp:131] Top shape: (1)
I0428 19:42:58.085979 25228 net.cpp:134]     with loss weight 1
I0428 19:42:58.085994 25228 net.cpp:139] Memory required for data: 1117444
I0428 19:42:58.085996 25228 net.cpp:200] loss needs backward computation.
I0428 19:42:58.086000 25228 net.cpp:200] relu3 needs backward computation.
I0428 19:42:58.086004 25228 net.cpp:200] ip3 needs backward computation.
I0428 19:42:58.086007 25228 net.cpp:200] relu2 needs backward computation.
I0428 19:42:58.086010 25228 net.cpp:200] ip2 needs backward computation.
I0428 19:42:58.086014 25228 net.cpp:200] relu1 needs backward computation.
I0428 19:42:58.086016 25228 net.cpp:200] ip1 needs backward computation.
I0428 19:42:58.086019 25228 net.cpp:200] pool1 needs backward computation.
I0428 19:42:58.086022 25228 net.cpp:200] conv1 needs backward computation.
I0428 19:42:58.086025 25228 net.cpp:200] pool0 needs backward computation.
I0428 19:42:58.086030 25228 net.cpp:200] conv0 needs backward computation.
I0428 19:42:58.086032 25228 net.cpp:202] mnist does not need backward computation.
I0428 19:42:58.086035 25228 net.cpp:244] This network produces output loss
I0428 19:42:58.086045 25228 net.cpp:257] Network initialization done.
I0428 19:42:58.086447 25228 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test408.prototxt
I0428 19:42:58.086490 25228 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:58.086585 25228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:58.086684 25228 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:58.086730 25228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:58.086743 25228 net.cpp:86] Creating Layer mnist
I0428 19:42:58.086747 25228 net.cpp:382] mnist -> data
I0428 19:42:58.086755 25228 net.cpp:382] mnist -> label
I0428 19:42:58.086840 25228 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:58.088743 25228 net.cpp:124] Setting up mnist
I0428 19:42:58.088773 25228 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:58.088778 25228 net.cpp:131] Top shape: 100 (100)
I0428 19:42:58.088781 25228 net.cpp:139] Memory required for data: 314000
I0428 19:42:58.088785 25228 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:58.088793 25228 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:58.088795 25228 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:58.088800 25228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:58.088807 25228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:58.088913 25228 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:58.088920 25228 net.cpp:131] Top shape: 100 (100)
I0428 19:42:58.088924 25228 net.cpp:131] Top shape: 100 (100)
I0428 19:42:58.088927 25228 net.cpp:139] Memory required for data: 314800
I0428 19:42:58.088932 25228 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:58.088940 25228 net.cpp:86] Creating Layer conv0
I0428 19:42:58.088944 25228 net.cpp:408] conv0 <- data
I0428 19:42:58.088951 25228 net.cpp:382] conv0 -> conv0
I0428 19:42:58.090741 25228 net.cpp:124] Setting up conv0
I0428 19:42:58.090755 25228 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:58.090759 25228 net.cpp:139] Memory required for data: 775600
I0428 19:42:58.090770 25228 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:58.090788 25228 net.cpp:86] Creating Layer pool0
I0428 19:42:58.090791 25228 net.cpp:408] pool0 <- conv0
I0428 19:42:58.090811 25228 net.cpp:382] pool0 -> pool0
I0428 19:42:58.090859 25228 net.cpp:124] Setting up pool0
I0428 19:42:58.090865 25228 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:58.090867 25228 net.cpp:139] Memory required for data: 890800
I0428 19:42:58.090872 25228 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:58.090880 25228 net.cpp:86] Creating Layer conv1
I0428 19:42:58.090883 25228 net.cpp:408] conv1 <- pool0
I0428 19:42:58.090889 25228 net.cpp:382] conv1 -> conv1
I0428 19:42:58.092490 25228 net.cpp:124] Setting up conv1
I0428 19:42:58.092504 25228 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:58.092507 25228 net.cpp:139] Memory required for data: 1530800
I0428 19:42:58.092531 25228 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:58.092540 25228 net.cpp:86] Creating Layer pool1
I0428 19:42:58.092550 25228 net.cpp:408] pool1 <- conv1
I0428 19:42:58.092555 25228 net.cpp:382] pool1 -> pool1
I0428 19:42:58.092610 25228 net.cpp:124] Setting up pool1
I0428 19:42:58.092625 25228 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:58.092629 25228 net.cpp:139] Memory required for data: 1690800
I0428 19:42:58.092633 25228 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:58.092639 25228 net.cpp:86] Creating Layer ip1
I0428 19:42:58.092643 25228 net.cpp:408] ip1 <- pool1
I0428 19:42:58.092649 25228 net.cpp:382] ip1 -> ip1
I0428 19:42:58.092779 25228 net.cpp:124] Setting up ip1
I0428 19:42:58.092787 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.092802 25228 net.cpp:139] Memory required for data: 1694800
I0428 19:42:58.092815 25228 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:58.092844 25228 net.cpp:86] Creating Layer relu1
I0428 19:42:58.092846 25228 net.cpp:408] relu1 <- ip1
I0428 19:42:58.092851 25228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:58.093039 25228 net.cpp:124] Setting up relu1
I0428 19:42:58.093049 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.093051 25228 net.cpp:139] Memory required for data: 1698800
I0428 19:42:58.093055 25228 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:58.093062 25228 net.cpp:86] Creating Layer ip2
I0428 19:42:58.093066 25228 net.cpp:408] ip2 <- ip1
I0428 19:42:58.093073 25228 net.cpp:382] ip2 -> ip2
I0428 19:42:58.093199 25228 net.cpp:124] Setting up ip2
I0428 19:42:58.093206 25228 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:58.093209 25228 net.cpp:139] Memory required for data: 1718800
I0428 19:42:58.093214 25228 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:58.093220 25228 net.cpp:86] Creating Layer relu2
I0428 19:42:58.093224 25228 net.cpp:408] relu2 <- ip2
I0428 19:42:58.093228 25228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:58.093392 25228 net.cpp:124] Setting up relu2
I0428 19:42:58.093411 25228 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:58.093415 25228 net.cpp:139] Memory required for data: 1738800
I0428 19:42:58.093420 25228 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:58.093426 25228 net.cpp:86] Creating Layer ip3
I0428 19:42:58.093430 25228 net.cpp:408] ip3 <- ip2
I0428 19:42:58.093436 25228 net.cpp:382] ip3 -> ip3
I0428 19:42:58.093551 25228 net.cpp:124] Setting up ip3
I0428 19:42:58.093559 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.093562 25228 net.cpp:139] Memory required for data: 1742800
I0428 19:42:58.093570 25228 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:58.093575 25228 net.cpp:86] Creating Layer relu3
I0428 19:42:58.093580 25228 net.cpp:408] relu3 <- ip3
I0428 19:42:58.093583 25228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:58.094395 25228 net.cpp:124] Setting up relu3
I0428 19:42:58.094408 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.094413 25228 net.cpp:139] Memory required for data: 1746800
I0428 19:42:58.094415 25228 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:58.094421 25228 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:58.094424 25228 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:58.094430 25228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:58.094436 25228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:58.094507 25228 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:58.094513 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.094518 25228 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:58.094521 25228 net.cpp:139] Memory required for data: 1754800
I0428 19:42:58.094525 25228 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:58.094530 25228 net.cpp:86] Creating Layer accuracy
I0428 19:42:58.094533 25228 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:58.094538 25228 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:58.094543 25228 net.cpp:382] accuracy -> accuracy
I0428 19:42:58.094552 25228 net.cpp:124] Setting up accuracy
I0428 19:42:58.094555 25228 net.cpp:131] Top shape: (1)
I0428 19:42:58.094558 25228 net.cpp:139] Memory required for data: 1754804
I0428 19:42:58.094561 25228 layer_factory.hpp:77] Creating layer loss
I0428 19:42:58.094566 25228 net.cpp:86] Creating Layer loss
I0428 19:42:58.094569 25228 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:58.094573 25228 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:58.094578 25228 net.cpp:382] loss -> loss
I0428 19:42:58.094584 25228 layer_factory.hpp:77] Creating layer loss
I0428 19:42:58.094851 25228 net.cpp:124] Setting up loss
I0428 19:42:58.094861 25228 net.cpp:131] Top shape: (1)
I0428 19:42:58.094864 25228 net.cpp:134]     with loss weight 1
I0428 19:42:58.094871 25228 net.cpp:139] Memory required for data: 1754808
I0428 19:42:58.094887 25228 net.cpp:200] loss needs backward computation.
I0428 19:42:58.094890 25228 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:58.094902 25228 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:58.094904 25228 net.cpp:200] relu3 needs backward computation.
I0428 19:42:58.094908 25228 net.cpp:200] ip3 needs backward computation.
I0428 19:42:58.094911 25228 net.cpp:200] relu2 needs backward computation.
I0428 19:42:58.094914 25228 net.cpp:200] ip2 needs backward computation.
I0428 19:42:58.094918 25228 net.cpp:200] relu1 needs backward computation.
I0428 19:42:58.094920 25228 net.cpp:200] ip1 needs backward computation.
I0428 19:42:58.094939 25228 net.cpp:200] pool1 needs backward computation.
I0428 19:42:58.094943 25228 net.cpp:200] conv1 needs backward computation.
I0428 19:42:58.094955 25228 net.cpp:200] pool0 needs backward computation.
I0428 19:42:58.094959 25228 net.cpp:200] conv0 needs backward computation.
I0428 19:42:58.094964 25228 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:58.094967 25228 net.cpp:202] mnist does not need backward computation.
I0428 19:42:58.094991 25228 net.cpp:244] This network produces output accuracy
I0428 19:42:58.095000 25228 net.cpp:244] This network produces output loss
I0428 19:42:58.095012 25228 net.cpp:257] Network initialization done.
I0428 19:42:58.095062 25228 solver.cpp:56] Solver scaffolding done.
I0428 19:42:58.095440 25228 caffe.cpp:248] Starting Optimization
I0428 19:42:58.095448 25228 solver.cpp:273] Solving LeNet
I0428 19:42:58.095450 25228 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:58.096245 25228 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:58.099424 25228 blocking_queue.cpp:49] Waiting for data
I0428 19:42:58.172004 25235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:58.172468 25228 solver.cpp:398]     Test net output #0: accuracy = 0.1734
I0428 19:42:58.172488 25228 solver.cpp:398]     Test net output #1: loss = 2.2884 (* 1 = 2.2884 loss)
I0428 19:42:58.173684 25228 solver.cpp:219] Iteration 0 (0 iter/s, 0.07821s/100 iters), loss = 2.25663
I0428 19:42:58.173722 25228 solver.cpp:238]     Train net output #0: loss = 2.25663 (* 1 = 2.25663 loss)
I0428 19:42:58.173735 25228 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:58.266505 25228 solver.cpp:219] Iteration 100 (1077.89 iter/s, 0.0927741s/100 iters), loss = 1.53899
I0428 19:42:58.266528 25228 solver.cpp:238]     Train net output #0: loss = 1.53899 (* 1 = 1.53899 loss)
I0428 19:42:58.266535 25228 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:58.351740 25228 solver.cpp:219] Iteration 200 (1173.68 iter/s, 0.085202s/100 iters), loss = 1.76224
I0428 19:42:58.351763 25228 solver.cpp:238]     Train net output #0: loss = 1.76224 (* 1 = 1.76224 loss)
I0428 19:42:58.351784 25228 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:58.433586 25228 solver.cpp:219] Iteration 300 (1222.29 iter/s, 0.0818136s/100 iters), loss = 1.34192
I0428 19:42:58.433610 25228 solver.cpp:238]     Train net output #0: loss = 1.34192 (* 1 = 1.34192 loss)
I0428 19:42:58.433616 25228 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:58.533715 25228 solver.cpp:219] Iteration 400 (999.072 iter/s, 0.100093s/100 iters), loss = 1.51721
I0428 19:42:58.533746 25228 solver.cpp:238]     Train net output #0: loss = 1.51721 (* 1 = 1.51721 loss)
I0428 19:42:58.533759 25228 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:58.618619 25228 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:58.694528 25235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:58.695103 25228 solver.cpp:398]     Test net output #0: accuracy = 0.4966
I0428 19:42:58.695137 25228 solver.cpp:398]     Test net output #1: loss = 1.30989 (* 1 = 1.30989 loss)
I0428 19:42:58.696241 25228 solver.cpp:219] Iteration 500 (615.46 iter/s, 0.16248s/100 iters), loss = 1.39795
I0428 19:42:58.696301 25228 solver.cpp:238]     Train net output #0: loss = 1.39795 (* 1 = 1.39795 loss)
I0428 19:42:58.696336 25228 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:58.790101 25228 solver.cpp:219] Iteration 600 (1066.19 iter/s, 0.0937915s/100 iters), loss = 1.07544
I0428 19:42:58.790129 25228 solver.cpp:238]     Train net output #0: loss = 1.07544 (* 1 = 1.07544 loss)
I0428 19:42:58.790138 25228 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:58.878551 25228 solver.cpp:219] Iteration 700 (1131.07 iter/s, 0.0884122s/100 iters), loss = 1.50291
I0428 19:42:58.878582 25228 solver.cpp:238]     Train net output #0: loss = 1.50291 (* 1 = 1.50291 loss)
I0428 19:42:58.878589 25228 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:58.968900 25228 solver.cpp:219] Iteration 800 (1107.33 iter/s, 0.0903076s/100 iters), loss = 1.27801
I0428 19:42:58.968930 25228 solver.cpp:238]     Train net output #0: loss = 1.27801 (* 1 = 1.27801 loss)
I0428 19:42:58.968938 25228 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:59.058117 25228 solver.cpp:219] Iteration 900 (1121.36 iter/s, 0.0891771s/100 iters), loss = 1.36257
I0428 19:42:59.058147 25228 solver.cpp:238]     Train net output #0: loss = 1.36257 (* 1 = 1.36257 loss)
I0428 19:42:59.058156 25228 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:59.087966 25234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:59.146463 25228 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:59.147325 25228 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:59.148056 25228 solver.cpp:311] Iteration 1000, loss = 1.26232
I0428 19:42:59.148089 25228 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:59.225981 25235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:59.226578 25228 solver.cpp:398]     Test net output #0: accuracy = 0.5016
I0428 19:42:59.226610 25228 solver.cpp:398]     Test net output #1: loss = 1.22597 (* 1 = 1.22597 loss)
I0428 19:42:59.226619 25228 solver.cpp:316] Optimization Done.
I0428 19:42:59.226625 25228 caffe.cpp:259] Optimization Done.
