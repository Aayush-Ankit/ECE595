I0428 20:13:31.899375 32479 caffe.cpp:218] Using GPUs 0
I0428 20:13:31.934636 32479 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:32.387574 32479 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1201.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:32.387742 32479 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1201.prototxt
I0428 20:13:32.388294 32479 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:32.388334 32479 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:32.388484 32479 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:32.388576 32479 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:32.388681 32479 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:32.388708 32479 net.cpp:86] Creating Layer mnist
I0428 20:13:32.388720 32479 net.cpp:382] mnist -> data
I0428 20:13:32.388753 32479 net.cpp:382] mnist -> label
I0428 20:13:32.390120 32479 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:32.392519 32479 net.cpp:124] Setting up mnist
I0428 20:13:32.392535 32479 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:32.392541 32479 net.cpp:131] Top shape: 64 (64)
I0428 20:13:32.392544 32479 net.cpp:139] Memory required for data: 200960
I0428 20:13:32.392563 32479 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:32.392580 32479 net.cpp:86] Creating Layer conv0
I0428 20:13:32.392602 32479 net.cpp:408] conv0 <- data
I0428 20:13:32.392617 32479 net.cpp:382] conv0 -> conv0
I0428 20:13:32.620797 32479 net.cpp:124] Setting up conv0
I0428 20:13:32.620860 32479 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:32.620864 32479 net.cpp:139] Memory required for data: 3887360
I0428 20:13:32.620880 32479 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:32.620908 32479 net.cpp:86] Creating Layer pool0
I0428 20:13:32.620913 32479 net.cpp:408] pool0 <- conv0
I0428 20:13:32.620920 32479 net.cpp:382] pool0 -> pool0
I0428 20:13:32.620983 32479 net.cpp:124] Setting up pool0
I0428 20:13:32.620995 32479 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:32.621001 32479 net.cpp:139] Memory required for data: 4808960
I0428 20:13:32.621006 32479 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:32.621021 32479 net.cpp:86] Creating Layer conv1
I0428 20:13:32.621026 32479 net.cpp:408] conv1 <- pool0
I0428 20:13:32.621034 32479 net.cpp:382] conv1 -> conv1
I0428 20:13:32.623728 32479 net.cpp:124] Setting up conv1
I0428 20:13:32.623755 32479 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:32.623759 32479 net.cpp:139] Memory required for data: 6447360
I0428 20:13:32.623767 32479 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:32.623775 32479 net.cpp:86] Creating Layer pool1
I0428 20:13:32.623778 32479 net.cpp:408] pool1 <- conv1
I0428 20:13:32.623782 32479 net.cpp:382] pool1 -> pool1
I0428 20:13:32.623827 32479 net.cpp:124] Setting up pool1
I0428 20:13:32.623836 32479 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:32.623842 32479 net.cpp:139] Memory required for data: 6856960
I0428 20:13:32.623853 32479 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:32.623868 32479 net.cpp:86] Creating Layer ip1
I0428 20:13:32.623889 32479 net.cpp:408] ip1 <- pool1
I0428 20:13:32.623896 32479 net.cpp:382] ip1 -> ip1
I0428 20:13:32.625689 32479 net.cpp:124] Setting up ip1
I0428 20:13:32.625702 32479 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:32.625720 32479 net.cpp:139] Memory required for data: 6869760
I0428 20:13:32.625728 32479 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:32.625735 32479 net.cpp:86] Creating Layer relu1
I0428 20:13:32.625741 32479 net.cpp:408] relu1 <- ip1
I0428 20:13:32.625744 32479 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:32.625985 32479 net.cpp:124] Setting up relu1
I0428 20:13:32.625998 32479 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:32.626003 32479 net.cpp:139] Memory required for data: 6882560
I0428 20:13:32.626009 32479 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:32.626019 32479 net.cpp:86] Creating Layer ip2
I0428 20:13:32.626024 32479 net.cpp:408] ip2 <- ip1
I0428 20:13:32.626031 32479 net.cpp:382] ip2 -> ip2
I0428 20:13:32.626173 32479 net.cpp:124] Setting up ip2
I0428 20:13:32.626184 32479 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:32.626189 32479 net.cpp:139] Memory required for data: 6885120
I0428 20:13:32.626197 32479 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:32.626206 32479 net.cpp:86] Creating Layer relu2
I0428 20:13:32.626211 32479 net.cpp:408] relu2 <- ip2
I0428 20:13:32.626217 32479 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:32.627220 32479 net.cpp:124] Setting up relu2
I0428 20:13:32.627251 32479 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:32.627256 32479 net.cpp:139] Memory required for data: 6887680
I0428 20:13:32.627261 32479 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:32.627271 32479 net.cpp:86] Creating Layer ip3
I0428 20:13:32.627276 32479 net.cpp:408] ip3 <- ip2
I0428 20:13:32.627285 32479 net.cpp:382] ip3 -> ip3
I0428 20:13:32.627419 32479 net.cpp:124] Setting up ip3
I0428 20:13:32.627430 32479 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:32.627435 32479 net.cpp:139] Memory required for data: 6890240
I0428 20:13:32.627446 32479 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:32.627454 32479 net.cpp:86] Creating Layer relu3
I0428 20:13:32.627460 32479 net.cpp:408] relu3 <- ip3
I0428 20:13:32.627465 32479 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:32.627755 32479 net.cpp:124] Setting up relu3
I0428 20:13:32.627769 32479 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:32.627775 32479 net.cpp:139] Memory required for data: 6892800
I0428 20:13:32.627781 32479 layer_factory.hpp:77] Creating layer loss
I0428 20:13:32.627790 32479 net.cpp:86] Creating Layer loss
I0428 20:13:32.627796 32479 net.cpp:408] loss <- ip3
I0428 20:13:32.627804 32479 net.cpp:408] loss <- label
I0428 20:13:32.627811 32479 net.cpp:382] loss -> loss
I0428 20:13:32.627849 32479 layer_factory.hpp:77] Creating layer loss
I0428 20:13:32.628175 32479 net.cpp:124] Setting up loss
I0428 20:13:32.628186 32479 net.cpp:131] Top shape: (1)
I0428 20:13:32.628190 32479 net.cpp:134]     with loss weight 1
I0428 20:13:32.628222 32479 net.cpp:139] Memory required for data: 6892804
I0428 20:13:32.628227 32479 net.cpp:200] loss needs backward computation.
I0428 20:13:32.628233 32479 net.cpp:200] relu3 needs backward computation.
I0428 20:13:32.628238 32479 net.cpp:200] ip3 needs backward computation.
I0428 20:13:32.628242 32479 net.cpp:200] relu2 needs backward computation.
I0428 20:13:32.628247 32479 net.cpp:200] ip2 needs backward computation.
I0428 20:13:32.628252 32479 net.cpp:200] relu1 needs backward computation.
I0428 20:13:32.628257 32479 net.cpp:200] ip1 needs backward computation.
I0428 20:13:32.628276 32479 net.cpp:200] pool1 needs backward computation.
I0428 20:13:32.628281 32479 net.cpp:200] conv1 needs backward computation.
I0428 20:13:32.628286 32479 net.cpp:200] pool0 needs backward computation.
I0428 20:13:32.628291 32479 net.cpp:200] conv0 needs backward computation.
I0428 20:13:32.628298 32479 net.cpp:202] mnist does not need backward computation.
I0428 20:13:32.628301 32479 net.cpp:244] This network produces output loss
I0428 20:13:32.628315 32479 net.cpp:257] Network initialization done.
I0428 20:13:32.628854 32479 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1201.prototxt
I0428 20:13:32.628926 32479 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:32.629067 32479 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:32.629209 32479 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:32.629261 32479 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:32.629277 32479 net.cpp:86] Creating Layer mnist
I0428 20:13:32.629283 32479 net.cpp:382] mnist -> data
I0428 20:13:32.629293 32479 net.cpp:382] mnist -> label
I0428 20:13:32.629411 32479 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:32.630849 32479 net.cpp:124] Setting up mnist
I0428 20:13:32.630880 32479 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:32.630889 32479 net.cpp:131] Top shape: 100 (100)
I0428 20:13:32.630893 32479 net.cpp:139] Memory required for data: 314000
I0428 20:13:32.630899 32479 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:32.630936 32479 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:32.630941 32479 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:32.630949 32479 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:32.630959 32479 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:32.631011 32479 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:32.631021 32479 net.cpp:131] Top shape: 100 (100)
I0428 20:13:32.631026 32479 net.cpp:131] Top shape: 100 (100)
I0428 20:13:32.631031 32479 net.cpp:139] Memory required for data: 314800
I0428 20:13:32.631034 32479 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:32.631047 32479 net.cpp:86] Creating Layer conv0
I0428 20:13:32.631052 32479 net.cpp:408] conv0 <- data
I0428 20:13:32.631057 32479 net.cpp:382] conv0 -> conv0
I0428 20:13:32.632849 32479 net.cpp:124] Setting up conv0
I0428 20:13:32.632869 32479 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:32.632874 32479 net.cpp:139] Memory required for data: 6074800
I0428 20:13:32.632887 32479 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:32.632895 32479 net.cpp:86] Creating Layer pool0
I0428 20:13:32.632901 32479 net.cpp:408] pool0 <- conv0
I0428 20:13:32.632908 32479 net.cpp:382] pool0 -> pool0
I0428 20:13:32.632954 32479 net.cpp:124] Setting up pool0
I0428 20:13:32.632977 32479 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:32.632982 32479 net.cpp:139] Memory required for data: 7514800
I0428 20:13:32.632987 32479 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:32.632998 32479 net.cpp:86] Creating Layer conv1
I0428 20:13:32.633003 32479 net.cpp:408] conv1 <- pool0
I0428 20:13:32.633010 32479 net.cpp:382] conv1 -> conv1
I0428 20:13:32.635251 32479 net.cpp:124] Setting up conv1
I0428 20:13:32.635263 32479 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:32.635267 32479 net.cpp:139] Memory required for data: 10074800
I0428 20:13:32.635275 32479 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:32.635291 32479 net.cpp:86] Creating Layer pool1
I0428 20:13:32.635318 32479 net.cpp:408] pool1 <- conv1
I0428 20:13:32.635336 32479 net.cpp:382] pool1 -> pool1
I0428 20:13:32.635383 32479 net.cpp:124] Setting up pool1
I0428 20:13:32.635395 32479 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:32.635399 32479 net.cpp:139] Memory required for data: 10714800
I0428 20:13:32.635404 32479 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:32.635413 32479 net.cpp:86] Creating Layer ip1
I0428 20:13:32.635419 32479 net.cpp:408] ip1 <- pool1
I0428 20:13:32.635427 32479 net.cpp:382] ip1 -> ip1
I0428 20:13:32.636420 32479 net.cpp:124] Setting up ip1
I0428 20:13:32.636433 32479 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:32.636451 32479 net.cpp:139] Memory required for data: 10734800
I0428 20:13:32.636488 32479 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:32.636495 32479 net.cpp:86] Creating Layer relu1
I0428 20:13:32.636500 32479 net.cpp:408] relu1 <- ip1
I0428 20:13:32.636507 32479 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:32.636698 32479 net.cpp:124] Setting up relu1
I0428 20:13:32.636708 32479 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:32.636713 32479 net.cpp:139] Memory required for data: 10754800
I0428 20:13:32.636718 32479 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:32.636728 32479 net.cpp:86] Creating Layer ip2
I0428 20:13:32.636732 32479 net.cpp:408] ip2 <- ip1
I0428 20:13:32.636739 32479 net.cpp:382] ip2 -> ip2
I0428 20:13:32.636903 32479 net.cpp:124] Setting up ip2
I0428 20:13:32.636914 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.636919 32479 net.cpp:139] Memory required for data: 10758800
I0428 20:13:32.636927 32479 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:32.636942 32479 net.cpp:86] Creating Layer relu2
I0428 20:13:32.636947 32479 net.cpp:408] relu2 <- ip2
I0428 20:13:32.636955 32479 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:32.637327 32479 net.cpp:124] Setting up relu2
I0428 20:13:32.637343 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.637349 32479 net.cpp:139] Memory required for data: 10762800
I0428 20:13:32.637354 32479 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:32.637363 32479 net.cpp:86] Creating Layer ip3
I0428 20:13:32.637369 32479 net.cpp:408] ip3 <- ip2
I0428 20:13:32.637378 32479 net.cpp:382] ip3 -> ip3
I0428 20:13:32.637517 32479 net.cpp:124] Setting up ip3
I0428 20:13:32.637529 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.637536 32479 net.cpp:139] Memory required for data: 10766800
I0428 20:13:32.637549 32479 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:32.637557 32479 net.cpp:86] Creating Layer relu3
I0428 20:13:32.637563 32479 net.cpp:408] relu3 <- ip3
I0428 20:13:32.637570 32479 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:32.638679 32479 net.cpp:124] Setting up relu3
I0428 20:13:32.638710 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.638715 32479 net.cpp:139] Memory required for data: 10770800
I0428 20:13:32.638720 32479 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:32.638727 32479 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:32.638732 32479 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:32.638739 32479 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:32.638748 32479 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:32.638792 32479 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:32.638800 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.638806 32479 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:32.638810 32479 net.cpp:139] Memory required for data: 10778800
I0428 20:13:32.638815 32479 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:32.638823 32479 net.cpp:86] Creating Layer accuracy
I0428 20:13:32.638826 32479 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:32.638833 32479 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:32.638839 32479 net.cpp:382] accuracy -> accuracy
I0428 20:13:32.638849 32479 net.cpp:124] Setting up accuracy
I0428 20:13:32.638854 32479 net.cpp:131] Top shape: (1)
I0428 20:13:32.638859 32479 net.cpp:139] Memory required for data: 10778804
I0428 20:13:32.638864 32479 layer_factory.hpp:77] Creating layer loss
I0428 20:13:32.638870 32479 net.cpp:86] Creating Layer loss
I0428 20:13:32.638875 32479 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:32.638880 32479 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:32.638886 32479 net.cpp:382] loss -> loss
I0428 20:13:32.638895 32479 layer_factory.hpp:77] Creating layer loss
I0428 20:13:32.639201 32479 net.cpp:124] Setting up loss
I0428 20:13:32.639230 32479 net.cpp:131] Top shape: (1)
I0428 20:13:32.639236 32479 net.cpp:134]     with loss weight 1
I0428 20:13:32.639259 32479 net.cpp:139] Memory required for data: 10778808
I0428 20:13:32.639266 32479 net.cpp:200] loss needs backward computation.
I0428 20:13:32.639272 32479 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:32.639278 32479 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:32.639284 32479 net.cpp:200] relu3 needs backward computation.
I0428 20:13:32.639289 32479 net.cpp:200] ip3 needs backward computation.
I0428 20:13:32.639294 32479 net.cpp:200] relu2 needs backward computation.
I0428 20:13:32.639299 32479 net.cpp:200] ip2 needs backward computation.
I0428 20:13:32.639305 32479 net.cpp:200] relu1 needs backward computation.
I0428 20:13:32.639310 32479 net.cpp:200] ip1 needs backward computation.
I0428 20:13:32.639315 32479 net.cpp:200] pool1 needs backward computation.
I0428 20:13:32.639322 32479 net.cpp:200] conv1 needs backward computation.
I0428 20:13:32.639327 32479 net.cpp:200] pool0 needs backward computation.
I0428 20:13:32.639333 32479 net.cpp:200] conv0 needs backward computation.
I0428 20:13:32.639338 32479 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:32.639345 32479 net.cpp:202] mnist does not need backward computation.
I0428 20:13:32.639349 32479 net.cpp:244] This network produces output accuracy
I0428 20:13:32.639355 32479 net.cpp:244] This network produces output loss
I0428 20:13:32.639372 32479 net.cpp:257] Network initialization done.
I0428 20:13:32.639433 32479 solver.cpp:56] Solver scaffolding done.
I0428 20:13:32.639915 32479 caffe.cpp:248] Starting Optimization
I0428 20:13:32.639925 32479 solver.cpp:273] Solving LeNet
I0428 20:13:32.639945 32479 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:32.641062 32479 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:32.650804 32479 blocking_queue.cpp:49] Waiting for data
I0428 20:13:32.715098 32486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:32.716158 32479 solver.cpp:398]     Test net output #0: accuracy = 0.133
I0428 20:13:32.716192 32479 solver.cpp:398]     Test net output #1: loss = 2.29224 (* 1 = 2.29224 loss)
I0428 20:13:32.724314 32479 solver.cpp:219] Iteration 0 (0 iter/s, 0.0843366s/100 iters), loss = 2.30354
I0428 20:13:32.724372 32479 solver.cpp:238]     Train net output #0: loss = 2.30354 (* 1 = 2.30354 loss)
I0428 20:13:32.724391 32479 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:32.941961 32479 solver.cpp:219] Iteration 100 (459.623 iter/s, 0.217569s/100 iters), loss = 0.592232
I0428 20:13:32.942028 32479 solver.cpp:238]     Train net output #0: loss = 0.592232 (* 1 = 0.592232 loss)
I0428 20:13:32.942041 32479 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:33.172013 32479 solver.cpp:219] Iteration 200 (434.842 iter/s, 0.229969s/100 iters), loss = 0.327424
I0428 20:13:33.172061 32479 solver.cpp:238]     Train net output #0: loss = 0.327424 (* 1 = 0.327424 loss)
I0428 20:13:33.172075 32479 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:33.401228 32479 solver.cpp:219] Iteration 300 (436.396 iter/s, 0.22915s/100 iters), loss = 0.545318
I0428 20:13:33.401275 32479 solver.cpp:238]     Train net output #0: loss = 0.545318 (* 1 = 0.545318 loss)
I0428 20:13:33.401288 32479 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:33.621538 32479 solver.cpp:219] Iteration 400 (454.042 iter/s, 0.220244s/100 iters), loss = 0.365738
I0428 20:13:33.621587 32479 solver.cpp:238]     Train net output #0: loss = 0.365738 (* 1 = 0.365738 loss)
I0428 20:13:33.621598 32479 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:33.826583 32479 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:33.894498 32486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:33.896934 32479 solver.cpp:398]     Test net output #0: accuracy = 0.8684
I0428 20:13:33.896955 32479 solver.cpp:398]     Test net output #1: loss = 0.357339 (* 1 = 0.357339 loss)
I0428 20:13:33.898499 32479 solver.cpp:219] Iteration 500 (361.144 iter/s, 0.276898s/100 iters), loss = 0.275454
I0428 20:13:33.898538 32479 solver.cpp:238]     Train net output #0: loss = 0.275454 (* 1 = 0.275454 loss)
I0428 20:13:33.898561 32479 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:34.066464 32479 solver.cpp:219] Iteration 600 (595.545 iter/s, 0.167913s/100 iters), loss = 0.238846
I0428 20:13:34.066490 32479 solver.cpp:238]     Train net output #0: loss = 0.238846 (* 1 = 0.238846 loss)
I0428 20:13:34.066498 32479 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:34.229976 32479 solver.cpp:219] Iteration 700 (611.724 iter/s, 0.163472s/100 iters), loss = 0.229073
I0428 20:13:34.230002 32479 solver.cpp:238]     Train net output #0: loss = 0.229073 (* 1 = 0.229073 loss)
I0428 20:13:34.230007 32479 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:34.395401 32479 solver.cpp:219] Iteration 800 (604.645 iter/s, 0.165386s/100 iters), loss = 0.458728
I0428 20:13:34.395424 32479 solver.cpp:238]     Train net output #0: loss = 0.458728 (* 1 = 0.458728 loss)
I0428 20:13:34.395431 32479 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:34.594990 32479 solver.cpp:219] Iteration 900 (501.138 iter/s, 0.199546s/100 iters), loss = 0.348243
I0428 20:13:34.595041 32479 solver.cpp:238]     Train net output #0: loss = 0.348243 (* 1 = 0.348243 loss)
I0428 20:13:34.595065 32479 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:34.670538 32485 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:34.819134 32479 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:34.824211 32479 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:34.827003 32479 solver.cpp:311] Iteration 1000, loss = 0.349358
I0428 20:13:34.827030 32479 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:34.902890 32486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:34.905457 32479 solver.cpp:398]     Test net output #0: accuracy = 0.8782
I0428 20:13:34.905480 32479 solver.cpp:398]     Test net output #1: loss = 0.304907 (* 1 = 0.304907 loss)
I0428 20:13:34.905500 32479 solver.cpp:316] Optimization Done.
I0428 20:13:34.905504 32479 caffe.cpp:259] Optimization Done.
