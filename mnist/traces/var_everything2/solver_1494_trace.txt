I0428 20:27:46.403393  3219 caffe.cpp:218] Using GPUs 0
I0428 20:27:46.440973  3219 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:46.958673  3219 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1494.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:46.958811  3219 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1494.prototxt
I0428 20:27:46.959228  3219 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:46.959247  3219 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:46.959352  3219 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:27:46.959432  3219 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:46.959533  3219 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:46.959560  3219 net.cpp:86] Creating Layer mnist
I0428 20:27:46.959569  3219 net.cpp:382] mnist -> data
I0428 20:27:46.959590  3219 net.cpp:382] mnist -> label
I0428 20:27:46.960677  3219 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:46.963228  3219 net.cpp:124] Setting up mnist
I0428 20:27:46.963251  3219 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:46.963260  3219 net.cpp:131] Top shape: 64 (64)
I0428 20:27:46.963263  3219 net.cpp:139] Memory required for data: 200960
I0428 20:27:46.963270  3219 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:46.963285  3219 net.cpp:86] Creating Layer conv0
I0428 20:27:46.963306  3219 net.cpp:408] conv0 <- data
I0428 20:27:46.963320  3219 net.cpp:382] conv0 -> conv0
I0428 20:27:47.242282  3219 net.cpp:124] Setting up conv0
I0428 20:27:47.242307  3219 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:47.242311  3219 net.cpp:139] Memory required for data: 14946560
I0428 20:27:47.242326  3219 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:47.242338  3219 net.cpp:86] Creating Layer pool0
I0428 20:27:47.242342  3219 net.cpp:408] pool0 <- conv0
I0428 20:27:47.242347  3219 net.cpp:382] pool0 -> pool0
I0428 20:27:47.242409  3219 net.cpp:124] Setting up pool0
I0428 20:27:47.242416  3219 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:47.242420  3219 net.cpp:139] Memory required for data: 18632960
I0428 20:27:47.242424  3219 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:47.242434  3219 net.cpp:86] Creating Layer conv1
I0428 20:27:47.242440  3219 net.cpp:408] conv1 <- pool0
I0428 20:27:47.242461  3219 net.cpp:382] conv1 -> conv1
I0428 20:27:47.245383  3219 net.cpp:124] Setting up conv1
I0428 20:27:47.245398  3219 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:47.245400  3219 net.cpp:139] Memory required for data: 18714880
I0428 20:27:47.245409  3219 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:47.245416  3219 net.cpp:86] Creating Layer pool1
I0428 20:27:47.245419  3219 net.cpp:408] pool1 <- conv1
I0428 20:27:47.245424  3219 net.cpp:382] pool1 -> pool1
I0428 20:27:47.245460  3219 net.cpp:124] Setting up pool1
I0428 20:27:47.245468  3219 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:47.245473  3219 net.cpp:139] Memory required for data: 18735360
I0428 20:27:47.245493  3219 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:47.245501  3219 net.cpp:86] Creating Layer ip1
I0428 20:27:47.245503  3219 net.cpp:408] ip1 <- pool1
I0428 20:27:47.245508  3219 net.cpp:382] ip1 -> ip1
I0428 20:27:47.245609  3219 net.cpp:124] Setting up ip1
I0428 20:27:47.245616  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.245620  3219 net.cpp:139] Memory required for data: 18737920
I0428 20:27:47.245626  3219 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:47.245633  3219 net.cpp:86] Creating Layer relu1
I0428 20:27:47.245636  3219 net.cpp:408] relu1 <- ip1
I0428 20:27:47.245656  3219 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:47.245823  3219 net.cpp:124] Setting up relu1
I0428 20:27:47.245832  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.245836  3219 net.cpp:139] Memory required for data: 18740480
I0428 20:27:47.245838  3219 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:47.245846  3219 net.cpp:86] Creating Layer ip2
I0428 20:27:47.245848  3219 net.cpp:408] ip2 <- ip1
I0428 20:27:47.245853  3219 net.cpp:382] ip2 -> ip2
I0428 20:27:47.245946  3219 net.cpp:124] Setting up ip2
I0428 20:27:47.245954  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.245957  3219 net.cpp:139] Memory required for data: 18743040
I0428 20:27:47.245977  3219 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:47.245982  3219 net.cpp:86] Creating Layer relu2
I0428 20:27:47.245985  3219 net.cpp:408] relu2 <- ip2
I0428 20:27:47.245990  3219 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:47.246711  3219 net.cpp:124] Setting up relu2
I0428 20:27:47.246723  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.246743  3219 net.cpp:139] Memory required for data: 18745600
I0428 20:27:47.246747  3219 layer_factory.hpp:77] Creating layer ip3
I0428 20:27:47.246769  3219 net.cpp:86] Creating Layer ip3
I0428 20:27:47.246773  3219 net.cpp:408] ip3 <- ip2
I0428 20:27:47.246778  3219 net.cpp:382] ip3 -> ip3
I0428 20:27:47.246877  3219 net.cpp:124] Setting up ip3
I0428 20:27:47.246886  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.246889  3219 net.cpp:139] Memory required for data: 18748160
I0428 20:27:47.246897  3219 layer_factory.hpp:77] Creating layer relu3
I0428 20:27:47.246902  3219 net.cpp:86] Creating Layer relu3
I0428 20:27:47.246906  3219 net.cpp:408] relu3 <- ip3
I0428 20:27:47.246909  3219 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:27:47.247114  3219 net.cpp:124] Setting up relu3
I0428 20:27:47.247124  3219 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:47.247128  3219 net.cpp:139] Memory required for data: 18750720
I0428 20:27:47.247131  3219 layer_factory.hpp:77] Creating layer loss
I0428 20:27:47.247138  3219 net.cpp:86] Creating Layer loss
I0428 20:27:47.247141  3219 net.cpp:408] loss <- ip3
I0428 20:27:47.247145  3219 net.cpp:408] loss <- label
I0428 20:27:47.247150  3219 net.cpp:382] loss -> loss
I0428 20:27:47.247169  3219 layer_factory.hpp:77] Creating layer loss
I0428 20:27:47.247427  3219 net.cpp:124] Setting up loss
I0428 20:27:47.247437  3219 net.cpp:131] Top shape: (1)
I0428 20:27:47.247454  3219 net.cpp:134]     with loss weight 1
I0428 20:27:47.247472  3219 net.cpp:139] Memory required for data: 18750724
I0428 20:27:47.247474  3219 net.cpp:200] loss needs backward computation.
I0428 20:27:47.247478  3219 net.cpp:200] relu3 needs backward computation.
I0428 20:27:47.247480  3219 net.cpp:200] ip3 needs backward computation.
I0428 20:27:47.247483  3219 net.cpp:200] relu2 needs backward computation.
I0428 20:27:47.247485  3219 net.cpp:200] ip2 needs backward computation.
I0428 20:27:47.247488  3219 net.cpp:200] relu1 needs backward computation.
I0428 20:27:47.247491  3219 net.cpp:200] ip1 needs backward computation.
I0428 20:27:47.247493  3219 net.cpp:200] pool1 needs backward computation.
I0428 20:27:47.247496  3219 net.cpp:200] conv1 needs backward computation.
I0428 20:27:47.247499  3219 net.cpp:200] pool0 needs backward computation.
I0428 20:27:47.247503  3219 net.cpp:200] conv0 needs backward computation.
I0428 20:27:47.247505  3219 net.cpp:202] mnist does not need backward computation.
I0428 20:27:47.247508  3219 net.cpp:244] This network produces output loss
I0428 20:27:47.247517  3219 net.cpp:257] Network initialization done.
I0428 20:27:47.247887  3219 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1494.prototxt
I0428 20:27:47.247933  3219 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:47.248028  3219 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:27:47.248113  3219 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:47.248159  3219 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:47.248188  3219 net.cpp:86] Creating Layer mnist
I0428 20:27:47.248193  3219 net.cpp:382] mnist -> data
I0428 20:27:47.248199  3219 net.cpp:382] mnist -> label
I0428 20:27:47.248287  3219 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:47.250519  3219 net.cpp:124] Setting up mnist
I0428 20:27:47.250532  3219 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:47.250537  3219 net.cpp:131] Top shape: 100 (100)
I0428 20:27:47.250541  3219 net.cpp:139] Memory required for data: 314000
I0428 20:27:47.250547  3219 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:47.250555  3219 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:47.250558  3219 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:47.250564  3219 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:47.250571  3219 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:47.250658  3219 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:47.250664  3219 net.cpp:131] Top shape: 100 (100)
I0428 20:27:47.250669  3219 net.cpp:131] Top shape: 100 (100)
I0428 20:27:47.250671  3219 net.cpp:139] Memory required for data: 314800
I0428 20:27:47.250674  3219 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:47.250684  3219 net.cpp:86] Creating Layer conv0
I0428 20:27:47.250689  3219 net.cpp:408] conv0 <- data
I0428 20:27:47.250694  3219 net.cpp:382] conv0 -> conv0
I0428 20:27:47.252331  3219 net.cpp:124] Setting up conv0
I0428 20:27:47.252359  3219 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:47.252364  3219 net.cpp:139] Memory required for data: 23354800
I0428 20:27:47.252373  3219 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:47.252380  3219 net.cpp:86] Creating Layer pool0
I0428 20:27:47.252383  3219 net.cpp:408] pool0 <- conv0
I0428 20:27:47.252388  3219 net.cpp:382] pool0 -> pool0
I0428 20:27:47.252442  3219 net.cpp:124] Setting up pool0
I0428 20:27:47.252449  3219 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:47.252451  3219 net.cpp:139] Memory required for data: 29114800
I0428 20:27:47.252454  3219 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:47.252462  3219 net.cpp:86] Creating Layer conv1
I0428 20:27:47.252466  3219 net.cpp:408] conv1 <- pool0
I0428 20:27:47.252472  3219 net.cpp:382] conv1 -> conv1
I0428 20:27:47.254416  3219 net.cpp:124] Setting up conv1
I0428 20:27:47.254431  3219 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:47.254434  3219 net.cpp:139] Memory required for data: 29242800
I0428 20:27:47.254461  3219 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:47.254473  3219 net.cpp:86] Creating Layer pool1
I0428 20:27:47.254477  3219 net.cpp:408] pool1 <- conv1
I0428 20:27:47.254483  3219 net.cpp:382] pool1 -> pool1
I0428 20:27:47.254537  3219 net.cpp:124] Setting up pool1
I0428 20:27:47.254544  3219 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:47.254546  3219 net.cpp:139] Memory required for data: 29274800
I0428 20:27:47.254549  3219 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:47.254555  3219 net.cpp:86] Creating Layer ip1
I0428 20:27:47.254559  3219 net.cpp:408] ip1 <- pool1
I0428 20:27:47.254564  3219 net.cpp:382] ip1 -> ip1
I0428 20:27:47.254667  3219 net.cpp:124] Setting up ip1
I0428 20:27:47.254674  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.254688  3219 net.cpp:139] Memory required for data: 29278800
I0428 20:27:47.254695  3219 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:47.254703  3219 net.cpp:86] Creating Layer relu1
I0428 20:27:47.254706  3219 net.cpp:408] relu1 <- ip1
I0428 20:27:47.254712  3219 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:47.254907  3219 net.cpp:124] Setting up relu1
I0428 20:27:47.254917  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.254920  3219 net.cpp:139] Memory required for data: 29282800
I0428 20:27:47.254923  3219 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:47.254931  3219 net.cpp:86] Creating Layer ip2
I0428 20:27:47.254935  3219 net.cpp:408] ip2 <- ip1
I0428 20:27:47.254940  3219 net.cpp:382] ip2 -> ip2
I0428 20:27:47.255054  3219 net.cpp:124] Setting up ip2
I0428 20:27:47.255062  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.255065  3219 net.cpp:139] Memory required for data: 29286800
I0428 20:27:47.255070  3219 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:47.255074  3219 net.cpp:86] Creating Layer relu2
I0428 20:27:47.255079  3219 net.cpp:408] relu2 <- ip2
I0428 20:27:47.255084  3219 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:47.255357  3219 net.cpp:124] Setting up relu2
I0428 20:27:47.255373  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.255375  3219 net.cpp:139] Memory required for data: 29290800
I0428 20:27:47.255379  3219 layer_factory.hpp:77] Creating layer ip3
I0428 20:27:47.255385  3219 net.cpp:86] Creating Layer ip3
I0428 20:27:47.255388  3219 net.cpp:408] ip3 <- ip2
I0428 20:27:47.255395  3219 net.cpp:382] ip3 -> ip3
I0428 20:27:47.255517  3219 net.cpp:124] Setting up ip3
I0428 20:27:47.255532  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.255549  3219 net.cpp:139] Memory required for data: 29294800
I0428 20:27:47.255558  3219 layer_factory.hpp:77] Creating layer relu3
I0428 20:27:47.255564  3219 net.cpp:86] Creating Layer relu3
I0428 20:27:47.255568  3219 net.cpp:408] relu3 <- ip3
I0428 20:27:47.255573  3219 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:27:47.256381  3219 net.cpp:124] Setting up relu3
I0428 20:27:47.256393  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.256397  3219 net.cpp:139] Memory required for data: 29298800
I0428 20:27:47.256399  3219 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:27:47.256405  3219 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:27:47.256409  3219 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:27:47.256413  3219 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:27:47.256419  3219 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:27:47.256482  3219 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:27:47.256492  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.256498  3219 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:47.256503  3219 net.cpp:139] Memory required for data: 29306800
I0428 20:27:47.256508  3219 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:47.256517  3219 net.cpp:86] Creating Layer accuracy
I0428 20:27:47.256522  3219 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:27:47.256539  3219 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:47.256548  3219 net.cpp:382] accuracy -> accuracy
I0428 20:27:47.256556  3219 net.cpp:124] Setting up accuracy
I0428 20:27:47.256561  3219 net.cpp:131] Top shape: (1)
I0428 20:27:47.256564  3219 net.cpp:139] Memory required for data: 29306804
I0428 20:27:47.256567  3219 layer_factory.hpp:77] Creating layer loss
I0428 20:27:47.256572  3219 net.cpp:86] Creating Layer loss
I0428 20:27:47.256575  3219 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:27:47.256579  3219 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:47.256583  3219 net.cpp:382] loss -> loss
I0428 20:27:47.256590  3219 layer_factory.hpp:77] Creating layer loss
I0428 20:27:47.256898  3219 net.cpp:124] Setting up loss
I0428 20:27:47.256908  3219 net.cpp:131] Top shape: (1)
I0428 20:27:47.256911  3219 net.cpp:134]     with loss weight 1
I0428 20:27:47.256927  3219 net.cpp:139] Memory required for data: 29306808
I0428 20:27:47.256932  3219 net.cpp:200] loss needs backward computation.
I0428 20:27:47.256937  3219 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:47.256939  3219 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:27:47.256943  3219 net.cpp:200] relu3 needs backward computation.
I0428 20:27:47.256947  3219 net.cpp:200] ip3 needs backward computation.
I0428 20:27:47.256949  3219 net.cpp:200] relu2 needs backward computation.
I0428 20:27:47.256973  3219 net.cpp:200] ip2 needs backward computation.
I0428 20:27:47.256975  3219 net.cpp:200] relu1 needs backward computation.
I0428 20:27:47.256979  3219 net.cpp:200] ip1 needs backward computation.
I0428 20:27:47.256983  3219 net.cpp:200] pool1 needs backward computation.
I0428 20:27:47.256985  3219 net.cpp:200] conv1 needs backward computation.
I0428 20:27:47.256989  3219 net.cpp:200] pool0 needs backward computation.
I0428 20:27:47.256991  3219 net.cpp:200] conv0 needs backward computation.
I0428 20:27:47.256995  3219 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:47.256999  3219 net.cpp:202] mnist does not need backward computation.
I0428 20:27:47.257006  3219 net.cpp:244] This network produces output accuracy
I0428 20:27:47.257009  3219 net.cpp:244] This network produces output loss
I0428 20:27:47.257021  3219 net.cpp:257] Network initialization done.
I0428 20:27:47.257063  3219 solver.cpp:56] Solver scaffolding done.
I0428 20:27:47.257436  3219 caffe.cpp:248] Starting Optimization
I0428 20:27:47.257442  3219 solver.cpp:273] Solving LeNet
I0428 20:27:47.257446  3219 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:47.258324  3219 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:47.353590  3251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:47.356220  3219 solver.cpp:398]     Test net output #0: accuracy = 0.0862
I0428 20:27:47.356240  3219 solver.cpp:398]     Test net output #1: loss = 2.32777 (* 1 = 2.32777 loss)
I0428 20:27:47.362354  3219 solver.cpp:219] Iteration 0 (-9.07661e-31 iter/s, 0.104844s/100 iters), loss = 2.3205
I0428 20:27:47.362395  3219 solver.cpp:238]     Train net output #0: loss = 2.3205 (* 1 = 2.3205 loss)
I0428 20:27:47.362406  3219 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:47.569927  3219 solver.cpp:219] Iteration 100 (481.898 iter/s, 0.207513s/100 iters), loss = 1.00604
I0428 20:27:47.569957  3219 solver.cpp:238]     Train net output #0: loss = 1.00604 (* 1 = 1.00604 loss)
I0428 20:27:47.569964  3219 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:47.781157  3219 solver.cpp:219] Iteration 200 (473.526 iter/s, 0.211182s/100 iters), loss = 0.658092
I0428 20:27:47.781194  3219 solver.cpp:238]     Train net output #0: loss = 0.658092 (* 1 = 0.658092 loss)
I0428 20:27:47.781203  3219 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:47.994098  3219 solver.cpp:219] Iteration 300 (469.734 iter/s, 0.212887s/100 iters), loss = 0.63786
I0428 20:27:47.994141  3219 solver.cpp:238]     Train net output #0: loss = 0.63786 (* 1 = 0.63786 loss)
I0428 20:27:47.994153  3219 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:48.200773  3219 solver.cpp:219] Iteration 400 (483.983 iter/s, 0.206619s/100 iters), loss = 0.249216
I0428 20:27:48.200804  3219 solver.cpp:238]     Train net output #0: loss = 0.249216 (* 1 = 0.249216 loss)
I0428 20:27:48.200834  3219 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:48.415469  3219 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:48.503212  3219 blocking_queue.cpp:49] Waiting for data
I0428 20:27:48.522827  3251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:48.523990  3219 solver.cpp:398]     Test net output #0: accuracy = 0.918
I0428 20:27:48.524014  3219 solver.cpp:398]     Test net output #1: loss = 0.268899 (* 1 = 0.268899 loss)
I0428 20:27:48.526111  3219 solver.cpp:219] Iteration 500 (307.423 iter/s, 0.325285s/100 iters), loss = 0.345573
I0428 20:27:48.526159  3219 solver.cpp:238]     Train net output #0: loss = 0.345573 (* 1 = 0.345573 loss)
I0428 20:27:48.526167  3219 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:48.739768  3219 solver.cpp:219] Iteration 600 (468.189 iter/s, 0.213589s/100 iters), loss = 0.129813
I0428 20:27:48.739827  3219 solver.cpp:238]     Train net output #0: loss = 0.129813 (* 1 = 0.129813 loss)
I0428 20:27:48.739850  3219 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:48.947569  3219 solver.cpp:219] Iteration 700 (481.373 iter/s, 0.207739s/100 iters), loss = 0.195403
I0428 20:27:48.947603  3219 solver.cpp:238]     Train net output #0: loss = 0.195403 (* 1 = 0.195403 loss)
I0428 20:27:48.947612  3219 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:49.164957  3219 solver.cpp:219] Iteration 800 (460.143 iter/s, 0.217324s/100 iters), loss = 0.238276
I0428 20:27:49.165014  3219 solver.cpp:238]     Train net output #0: loss = 0.238276 (* 1 = 0.238276 loss)
I0428 20:27:49.165024  3219 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:49.375347  3219 solver.cpp:219] Iteration 900 (475.465 iter/s, 0.21032s/100 iters), loss = 0.240997
I0428 20:27:49.375380  3219 solver.cpp:238]     Train net output #0: loss = 0.240997 (* 1 = 0.240997 loss)
I0428 20:27:49.375387  3219 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:49.445371  3250 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:49.580437  3219 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:49.582188  3219 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:49.583396  3219 solver.cpp:311] Iteration 1000, loss = 0.128236
I0428 20:27:49.583429  3219 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:49.692931  3251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:49.694617  3219 solver.cpp:398]     Test net output #0: accuracy = 0.9586
I0428 20:27:49.694641  3219 solver.cpp:398]     Test net output #1: loss = 0.135687 (* 1 = 0.135687 loss)
I0428 20:27:49.694649  3219 solver.cpp:316] Optimization Done.
I0428 20:27:49.694653  3219 caffe.cpp:259] Optimization Done.
