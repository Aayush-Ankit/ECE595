I0428 19:55:31.233487 28196 caffe.cpp:218] Using GPUs 0
I0428 19:55:31.262913 28196 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:31.708868 28196 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test734.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:31.709040 28196 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test734.prototxt
I0428 19:55:31.709440 28196 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:31.709470 28196 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:31.709548 28196 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:31.709609 28196 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:31.709703 28196 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:31.709722 28196 net.cpp:86] Creating Layer mnist
I0428 19:55:31.709728 28196 net.cpp:382] mnist -> data
I0428 19:55:31.709746 28196 net.cpp:382] mnist -> label
I0428 19:55:31.710705 28196 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:31.712802 28196 net.cpp:124] Setting up mnist
I0428 19:55:31.712838 28196 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:31.712854 28196 net.cpp:131] Top shape: 64 (64)
I0428 19:55:31.712858 28196 net.cpp:139] Memory required for data: 200960
I0428 19:55:31.712864 28196 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:31.712878 28196 net.cpp:86] Creating Layer conv0
I0428 19:55:31.712910 28196 net.cpp:408] conv0 <- data
I0428 19:55:31.712920 28196 net.cpp:382] conv0 -> conv0
I0428 19:55:31.940237 28196 net.cpp:124] Setting up conv0
I0428 19:55:31.940263 28196 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:31.940266 28196 net.cpp:139] Memory required for data: 938240
I0428 19:55:31.940280 28196 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:31.940292 28196 net.cpp:86] Creating Layer pool0
I0428 19:55:31.940296 28196 net.cpp:408] pool0 <- conv0
I0428 19:55:31.940301 28196 net.cpp:382] pool0 -> pool0
I0428 19:55:31.940361 28196 net.cpp:124] Setting up pool0
I0428 19:55:31.940368 28196 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:31.940371 28196 net.cpp:139] Memory required for data: 1122560
I0428 19:55:31.940374 28196 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:31.940384 28196 net.cpp:86] Creating Layer conv1
I0428 19:55:31.940388 28196 net.cpp:408] conv1 <- pool0
I0428 19:55:31.940392 28196 net.cpp:382] conv1 -> conv1
I0428 19:55:31.943219 28196 net.cpp:124] Setting up conv1
I0428 19:55:31.943234 28196 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:31.943238 28196 net.cpp:139] Memory required for data: 2760960
I0428 19:55:31.943246 28196 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:31.943269 28196 net.cpp:86] Creating Layer pool1
I0428 19:55:31.943274 28196 net.cpp:408] pool1 <- conv1
I0428 19:55:31.943279 28196 net.cpp:382] pool1 -> pool1
I0428 19:55:31.943315 28196 net.cpp:124] Setting up pool1
I0428 19:55:31.943322 28196 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:31.943325 28196 net.cpp:139] Memory required for data: 3170560
I0428 19:55:31.943328 28196 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:31.943336 28196 net.cpp:86] Creating Layer ip1
I0428 19:55:31.943338 28196 net.cpp:408] ip1 <- pool1
I0428 19:55:31.943343 28196 net.cpp:382] ip1 -> ip1
I0428 19:55:31.944785 28196 net.cpp:124] Setting up ip1
I0428 19:55:31.944797 28196 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:31.944800 28196 net.cpp:139] Memory required for data: 3183360
I0428 19:55:31.944833 28196 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:31.944839 28196 net.cpp:86] Creating Layer relu1
I0428 19:55:31.944841 28196 net.cpp:408] relu1 <- ip1
I0428 19:55:31.944846 28196 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:31.945030 28196 net.cpp:124] Setting up relu1
I0428 19:55:31.945040 28196 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:31.945044 28196 net.cpp:139] Memory required for data: 3196160
I0428 19:55:31.945046 28196 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:31.945053 28196 net.cpp:86] Creating Layer ip2
I0428 19:55:31.945056 28196 net.cpp:408] ip2 <- ip1
I0428 19:55:31.945061 28196 net.cpp:382] ip2 -> ip2
I0428 19:55:31.945159 28196 net.cpp:124] Setting up ip2
I0428 19:55:31.945165 28196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:31.945168 28196 net.cpp:139] Memory required for data: 3198720
I0428 19:55:31.945174 28196 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:31.945180 28196 net.cpp:86] Creating Layer relu2
I0428 19:55:31.945183 28196 net.cpp:408] relu2 <- ip2
I0428 19:55:31.945188 28196 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:31.946038 28196 net.cpp:124] Setting up relu2
I0428 19:55:31.946066 28196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:31.946070 28196 net.cpp:139] Memory required for data: 3201280
I0428 19:55:31.946074 28196 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:31.946081 28196 net.cpp:86] Creating Layer ip3
I0428 19:55:31.946084 28196 net.cpp:408] ip3 <- ip2
I0428 19:55:31.946089 28196 net.cpp:382] ip3 -> ip3
I0428 19:55:31.946185 28196 net.cpp:124] Setting up ip3
I0428 19:55:31.946193 28196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:31.946197 28196 net.cpp:139] Memory required for data: 3203840
I0428 19:55:31.946204 28196 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:31.946208 28196 net.cpp:86] Creating Layer relu3
I0428 19:55:31.946213 28196 net.cpp:408] relu3 <- ip3
I0428 19:55:31.946216 28196 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:31.946393 28196 net.cpp:124] Setting up relu3
I0428 19:55:31.946401 28196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:31.946405 28196 net.cpp:139] Memory required for data: 3206400
I0428 19:55:31.946408 28196 layer_factory.hpp:77] Creating layer loss
I0428 19:55:31.946413 28196 net.cpp:86] Creating Layer loss
I0428 19:55:31.946416 28196 net.cpp:408] loss <- ip3
I0428 19:55:31.946420 28196 net.cpp:408] loss <- label
I0428 19:55:31.946425 28196 net.cpp:382] loss -> loss
I0428 19:55:31.946439 28196 layer_factory.hpp:77] Creating layer loss
I0428 19:55:31.946652 28196 net.cpp:124] Setting up loss
I0428 19:55:31.946661 28196 net.cpp:131] Top shape: (1)
I0428 19:55:31.946665 28196 net.cpp:134]     with loss weight 1
I0428 19:55:31.946679 28196 net.cpp:139] Memory required for data: 3206404
I0428 19:55:31.946682 28196 net.cpp:200] loss needs backward computation.
I0428 19:55:31.946686 28196 net.cpp:200] relu3 needs backward computation.
I0428 19:55:31.946689 28196 net.cpp:200] ip3 needs backward computation.
I0428 19:55:31.946692 28196 net.cpp:200] relu2 needs backward computation.
I0428 19:55:31.946694 28196 net.cpp:200] ip2 needs backward computation.
I0428 19:55:31.946697 28196 net.cpp:200] relu1 needs backward computation.
I0428 19:55:31.946701 28196 net.cpp:200] ip1 needs backward computation.
I0428 19:55:31.946703 28196 net.cpp:200] pool1 needs backward computation.
I0428 19:55:31.946707 28196 net.cpp:200] conv1 needs backward computation.
I0428 19:55:31.946709 28196 net.cpp:200] pool0 needs backward computation.
I0428 19:55:31.946712 28196 net.cpp:200] conv0 needs backward computation.
I0428 19:55:31.946715 28196 net.cpp:202] mnist does not need backward computation.
I0428 19:55:31.946717 28196 net.cpp:244] This network produces output loss
I0428 19:55:31.946727 28196 net.cpp:257] Network initialization done.
I0428 19:55:31.947069 28196 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test734.prototxt
I0428 19:55:31.947126 28196 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:31.947211 28196 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:31.947288 28196 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:31.947331 28196 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:31.947343 28196 net.cpp:86] Creating Layer mnist
I0428 19:55:31.947348 28196 net.cpp:382] mnist -> data
I0428 19:55:31.947355 28196 net.cpp:382] mnist -> label
I0428 19:55:31.947437 28196 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:31.948599 28196 net.cpp:124] Setting up mnist
I0428 19:55:31.948613 28196 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:31.948634 28196 net.cpp:131] Top shape: 100 (100)
I0428 19:55:31.948637 28196 net.cpp:139] Memory required for data: 314000
I0428 19:55:31.948640 28196 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:31.948647 28196 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:31.948652 28196 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:31.948657 28196 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:31.948664 28196 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:31.948763 28196 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:31.948772 28196 net.cpp:131] Top shape: 100 (100)
I0428 19:55:31.948776 28196 net.cpp:131] Top shape: 100 (100)
I0428 19:55:31.948779 28196 net.cpp:139] Memory required for data: 314800
I0428 19:55:31.948782 28196 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:31.948791 28196 net.cpp:86] Creating Layer conv0
I0428 19:55:31.948794 28196 net.cpp:408] conv0 <- data
I0428 19:55:31.948799 28196 net.cpp:382] conv0 -> conv0
I0428 19:55:31.950455 28196 net.cpp:124] Setting up conv0
I0428 19:55:31.950485 28196 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:31.950489 28196 net.cpp:139] Memory required for data: 1466800
I0428 19:55:31.950498 28196 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:31.950506 28196 net.cpp:86] Creating Layer pool0
I0428 19:55:31.950510 28196 net.cpp:408] pool0 <- conv0
I0428 19:55:31.950515 28196 net.cpp:382] pool0 -> pool0
I0428 19:55:31.950567 28196 net.cpp:124] Setting up pool0
I0428 19:55:31.950572 28196 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:31.950575 28196 net.cpp:139] Memory required for data: 1754800
I0428 19:55:31.950578 28196 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:31.950588 28196 net.cpp:86] Creating Layer conv1
I0428 19:55:31.950592 28196 net.cpp:408] conv1 <- pool0
I0428 19:55:31.950597 28196 net.cpp:382] conv1 -> conv1
I0428 19:55:31.952172 28196 net.cpp:124] Setting up conv1
I0428 19:55:31.952184 28196 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:31.952204 28196 net.cpp:139] Memory required for data: 4314800
I0428 19:55:31.952214 28196 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:31.952221 28196 net.cpp:86] Creating Layer pool1
I0428 19:55:31.952224 28196 net.cpp:408] pool1 <- conv1
I0428 19:55:31.952229 28196 net.cpp:382] pool1 -> pool1
I0428 19:55:31.952266 28196 net.cpp:124] Setting up pool1
I0428 19:55:31.952287 28196 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:31.952291 28196 net.cpp:139] Memory required for data: 4954800
I0428 19:55:31.952293 28196 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:31.952299 28196 net.cpp:86] Creating Layer ip1
I0428 19:55:31.952302 28196 net.cpp:408] ip1 <- pool1
I0428 19:55:31.952308 28196 net.cpp:382] ip1 -> ip1
I0428 19:55:31.952919 28196 net.cpp:124] Setting up ip1
I0428 19:55:31.952929 28196 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:31.952956 28196 net.cpp:139] Memory required for data: 4974800
I0428 19:55:31.952965 28196 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:31.952973 28196 net.cpp:86] Creating Layer relu1
I0428 19:55:31.952977 28196 net.cpp:408] relu1 <- ip1
I0428 19:55:31.952981 28196 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:31.953163 28196 net.cpp:124] Setting up relu1
I0428 19:55:31.953173 28196 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:31.953176 28196 net.cpp:139] Memory required for data: 4994800
I0428 19:55:31.953181 28196 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:31.953187 28196 net.cpp:86] Creating Layer ip2
I0428 19:55:31.953191 28196 net.cpp:408] ip2 <- ip1
I0428 19:55:31.953197 28196 net.cpp:382] ip2 -> ip2
I0428 19:55:31.953301 28196 net.cpp:124] Setting up ip2
I0428 19:55:31.953310 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.953312 28196 net.cpp:139] Memory required for data: 4998800
I0428 19:55:31.953317 28196 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:31.953323 28196 net.cpp:86] Creating Layer relu2
I0428 19:55:31.953326 28196 net.cpp:408] relu2 <- ip2
I0428 19:55:31.953330 28196 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:31.953491 28196 net.cpp:124] Setting up relu2
I0428 19:55:31.953500 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.953502 28196 net.cpp:139] Memory required for data: 5002800
I0428 19:55:31.953505 28196 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:31.953527 28196 net.cpp:86] Creating Layer ip3
I0428 19:55:31.953531 28196 net.cpp:408] ip3 <- ip2
I0428 19:55:31.953552 28196 net.cpp:382] ip3 -> ip3
I0428 19:55:31.953666 28196 net.cpp:124] Setting up ip3
I0428 19:55:31.953675 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.953678 28196 net.cpp:139] Memory required for data: 5006800
I0428 19:55:31.953685 28196 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:31.953691 28196 net.cpp:86] Creating Layer relu3
I0428 19:55:31.953693 28196 net.cpp:408] relu3 <- ip3
I0428 19:55:31.953697 28196 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:31.954483 28196 net.cpp:124] Setting up relu3
I0428 19:55:31.954494 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.954514 28196 net.cpp:139] Memory required for data: 5010800
I0428 19:55:31.954517 28196 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:31.954525 28196 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:31.954529 28196 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:31.954535 28196 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:31.954540 28196 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:31.954578 28196 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:31.954583 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.954586 28196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:31.954589 28196 net.cpp:139] Memory required for data: 5018800
I0428 19:55:31.954592 28196 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:31.954597 28196 net.cpp:86] Creating Layer accuracy
I0428 19:55:31.954601 28196 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:31.954604 28196 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:31.954608 28196 net.cpp:382] accuracy -> accuracy
I0428 19:55:31.954614 28196 net.cpp:124] Setting up accuracy
I0428 19:55:31.954618 28196 net.cpp:131] Top shape: (1)
I0428 19:55:31.954622 28196 net.cpp:139] Memory required for data: 5018804
I0428 19:55:31.954624 28196 layer_factory.hpp:77] Creating layer loss
I0428 19:55:31.954629 28196 net.cpp:86] Creating Layer loss
I0428 19:55:31.954632 28196 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:31.954635 28196 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:31.954639 28196 net.cpp:382] loss -> loss
I0428 19:55:31.954645 28196 layer_factory.hpp:77] Creating layer loss
I0428 19:55:31.954916 28196 net.cpp:124] Setting up loss
I0428 19:55:31.954926 28196 net.cpp:131] Top shape: (1)
I0428 19:55:31.954929 28196 net.cpp:134]     with loss weight 1
I0428 19:55:31.954946 28196 net.cpp:139] Memory required for data: 5018808
I0428 19:55:31.954949 28196 net.cpp:200] loss needs backward computation.
I0428 19:55:31.954952 28196 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:31.954957 28196 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:31.954959 28196 net.cpp:200] relu3 needs backward computation.
I0428 19:55:31.954962 28196 net.cpp:200] ip3 needs backward computation.
I0428 19:55:31.954965 28196 net.cpp:200] relu2 needs backward computation.
I0428 19:55:31.954968 28196 net.cpp:200] ip2 needs backward computation.
I0428 19:55:31.954972 28196 net.cpp:200] relu1 needs backward computation.
I0428 19:55:31.954974 28196 net.cpp:200] ip1 needs backward computation.
I0428 19:55:31.954991 28196 net.cpp:200] pool1 needs backward computation.
I0428 19:55:31.954994 28196 net.cpp:200] conv1 needs backward computation.
I0428 19:55:31.954998 28196 net.cpp:200] pool0 needs backward computation.
I0428 19:55:31.955011 28196 net.cpp:200] conv0 needs backward computation.
I0428 19:55:31.955015 28196 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:31.955018 28196 net.cpp:202] mnist does not need backward computation.
I0428 19:55:31.955021 28196 net.cpp:244] This network produces output accuracy
I0428 19:55:31.955024 28196 net.cpp:244] This network produces output loss
I0428 19:55:31.955035 28196 net.cpp:257] Network initialization done.
I0428 19:55:31.955077 28196 solver.cpp:56] Solver scaffolding done.
I0428 19:55:31.955410 28196 caffe.cpp:248] Starting Optimization
I0428 19:55:31.955416 28196 solver.cpp:273] Solving LeNet
I0428 19:55:31.955430 28196 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:31.956269 28196 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:31.965168 28196 blocking_queue.cpp:49] Waiting for data
I0428 19:55:32.013628 28203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:32.014252 28196 solver.cpp:398]     Test net output #0: accuracy = 0.0476
I0428 19:55:32.014269 28196 solver.cpp:398]     Test net output #1: loss = 2.37932 (* 1 = 2.37932 loss)
I0428 19:55:32.017983 28196 solver.cpp:219] Iteration 0 (0 iter/s, 0.0625091s/100 iters), loss = 2.37639
I0428 19:55:32.018005 28196 solver.cpp:238]     Train net output #0: loss = 2.37639 (* 1 = 2.37639 loss)
I0428 19:55:32.018018 28196 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:32.172763 28196 solver.cpp:219] Iteration 100 (646.246 iter/s, 0.15474s/100 iters), loss = 1.08646
I0428 19:55:32.172791 28196 solver.cpp:238]     Train net output #0: loss = 1.08646 (* 1 = 1.08646 loss)
I0428 19:55:32.172817 28196 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:32.319669 28196 solver.cpp:219] Iteration 200 (680.896 iter/s, 0.146865s/100 iters), loss = 1.15866
I0428 19:55:32.319694 28196 solver.cpp:238]     Train net output #0: loss = 1.15866 (* 1 = 1.15866 loss)
I0428 19:55:32.319716 28196 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:32.467970 28196 solver.cpp:219] Iteration 300 (674.478 iter/s, 0.148263s/100 iters), loss = 0.896236
I0428 19:55:32.467996 28196 solver.cpp:238]     Train net output #0: loss = 0.896236 (* 1 = 0.896236 loss)
I0428 19:55:32.468019 28196 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:32.614800 28196 solver.cpp:219] Iteration 400 (681.239 iter/s, 0.146791s/100 iters), loss = 0.887123
I0428 19:55:32.614825 28196 solver.cpp:238]     Train net output #0: loss = 0.887123 (* 1 = 0.887123 loss)
I0428 19:55:32.614846 28196 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:32.760589 28196 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:32.818958 28203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:32.819597 28196 solver.cpp:398]     Test net output #0: accuracy = 0.6791
I0428 19:55:32.819631 28196 solver.cpp:398]     Test net output #1: loss = 0.79598 (* 1 = 0.79598 loss)
I0428 19:55:32.821198 28196 solver.cpp:219] Iteration 500 (484.594 iter/s, 0.206359s/100 iters), loss = 0.774454
I0428 19:55:32.821306 28196 solver.cpp:238]     Train net output #0: loss = 0.774454 (* 1 = 0.774454 loss)
I0428 19:55:32.821329 28196 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:32.975409 28196 solver.cpp:219] Iteration 600 (648.915 iter/s, 0.154103s/100 iters), loss = 0.795964
I0428 19:55:32.975450 28196 solver.cpp:238]     Train net output #0: loss = 0.795964 (* 1 = 0.795964 loss)
I0428 19:55:32.975456 28196 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:33.119182 28196 solver.cpp:219] Iteration 700 (695.79 iter/s, 0.143721s/100 iters), loss = 0.592114
I0428 19:55:33.119225 28196 solver.cpp:238]     Train net output #0: loss = 0.592114 (* 1 = 0.592114 loss)
I0428 19:55:33.119230 28196 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:33.263748 28196 solver.cpp:219] Iteration 800 (691.984 iter/s, 0.144512s/100 iters), loss = 0.842817
I0428 19:55:33.263788 28196 solver.cpp:238]     Train net output #0: loss = 0.842817 (* 1 = 0.842817 loss)
I0428 19:55:33.263795 28196 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:33.407629 28196 solver.cpp:219] Iteration 900 (695.211 iter/s, 0.143841s/100 iters), loss = 0.58809
I0428 19:55:33.407660 28196 solver.cpp:238]     Train net output #0: loss = 0.58809 (* 1 = 0.58809 loss)
I0428 19:55:33.407666 28196 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:33.455600 28202 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:33.549806 28196 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:33.552444 28196 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:33.553755 28196 solver.cpp:311] Iteration 1000, loss = 0.568386
I0428 19:55:33.553772 28196 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:33.629410 28203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:33.630036 28196 solver.cpp:398]     Test net output #0: accuracy = 0.7838
I0428 19:55:33.630071 28196 solver.cpp:398]     Test net output #1: loss = 0.541386 (* 1 = 0.541386 loss)
I0428 19:55:33.630076 28196 solver.cpp:316] Optimization Done.
I0428 19:55:33.630079 28196 caffe.cpp:259] Optimization Done.
