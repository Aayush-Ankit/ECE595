I0428 19:58:09.280479 28904 caffe.cpp:218] Using GPUs 0
I0428 19:58:09.316783 28904 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:09.769799 28904 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test810.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:09.769927 28904 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test810.prototxt
I0428 19:58:09.770272 28904 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:09.770288 28904 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:09.770373 28904 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:09.770452 28904 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:09.770531 28904 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:09.770550 28904 net.cpp:86] Creating Layer mnist
I0428 19:58:09.770556 28904 net.cpp:382] mnist -> data
I0428 19:58:09.770576 28904 net.cpp:382] mnist -> label
I0428 19:58:09.771502 28904 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:09.773874 28904 net.cpp:124] Setting up mnist
I0428 19:58:09.773921 28904 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:09.773926 28904 net.cpp:131] Top shape: 64 (64)
I0428 19:58:09.773927 28904 net.cpp:139] Memory required for data: 200960
I0428 19:58:09.773933 28904 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:09.773948 28904 net.cpp:86] Creating Layer conv0
I0428 19:58:09.773965 28904 net.cpp:408] conv0 <- data
I0428 19:58:09.773975 28904 net.cpp:382] conv0 -> conv0
I0428 19:58:10.002763 28904 net.cpp:124] Setting up conv0
I0428 19:58:10.002789 28904 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:10.002794 28904 net.cpp:139] Memory required for data: 1675520
I0428 19:58:10.002807 28904 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:10.002835 28904 net.cpp:86] Creating Layer pool0
I0428 19:58:10.002840 28904 net.cpp:408] pool0 <- conv0
I0428 19:58:10.002845 28904 net.cpp:382] pool0 -> pool0
I0428 19:58:10.002904 28904 net.cpp:124] Setting up pool0
I0428 19:58:10.002910 28904 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:10.002912 28904 net.cpp:139] Memory required for data: 2044160
I0428 19:58:10.002915 28904 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:10.002926 28904 net.cpp:86] Creating Layer conv1
I0428 19:58:10.002929 28904 net.cpp:408] conv1 <- pool0
I0428 19:58:10.002933 28904 net.cpp:382] conv1 -> conv1
I0428 19:58:10.005734 28904 net.cpp:124] Setting up conv1
I0428 19:58:10.005748 28904 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:58:10.005753 28904 net.cpp:139] Memory required for data: 2126080
I0428 19:58:10.005760 28904 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:10.005769 28904 net.cpp:86] Creating Layer pool1
I0428 19:58:10.005771 28904 net.cpp:408] pool1 <- conv1
I0428 19:58:10.005794 28904 net.cpp:382] pool1 -> pool1
I0428 19:58:10.005831 28904 net.cpp:124] Setting up pool1
I0428 19:58:10.005836 28904 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:58:10.005838 28904 net.cpp:139] Memory required for data: 2146560
I0428 19:58:10.005841 28904 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:10.005851 28904 net.cpp:86] Creating Layer ip1
I0428 19:58:10.005854 28904 net.cpp:408] ip1 <- pool1
I0428 19:58:10.005861 28904 net.cpp:382] ip1 -> ip1
I0428 19:58:10.005987 28904 net.cpp:124] Setting up ip1
I0428 19:58:10.005995 28904 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:10.005998 28904 net.cpp:139] Memory required for data: 2159360
I0428 19:58:10.006006 28904 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:10.006011 28904 net.cpp:86] Creating Layer relu1
I0428 19:58:10.006014 28904 net.cpp:408] relu1 <- ip1
I0428 19:58:10.006033 28904 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:10.006209 28904 net.cpp:124] Setting up relu1
I0428 19:58:10.006217 28904 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:10.006220 28904 net.cpp:139] Memory required for data: 2172160
I0428 19:58:10.006222 28904 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:10.006229 28904 net.cpp:86] Creating Layer ip2
I0428 19:58:10.006232 28904 net.cpp:408] ip2 <- ip1
I0428 19:58:10.006237 28904 net.cpp:382] ip2 -> ip2
I0428 19:58:10.006332 28904 net.cpp:124] Setting up ip2
I0428 19:58:10.006340 28904 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:10.006341 28904 net.cpp:139] Memory required for data: 2174720
I0428 19:58:10.006347 28904 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:10.006352 28904 net.cpp:86] Creating Layer relu2
I0428 19:58:10.006356 28904 net.cpp:408] relu2 <- ip2
I0428 19:58:10.006359 28904 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:10.007187 28904 net.cpp:124] Setting up relu2
I0428 19:58:10.007200 28904 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:10.007202 28904 net.cpp:139] Memory required for data: 2177280
I0428 19:58:10.007205 28904 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:10.007212 28904 net.cpp:86] Creating Layer ip3
I0428 19:58:10.007215 28904 net.cpp:408] ip3 <- ip2
I0428 19:58:10.007220 28904 net.cpp:382] ip3 -> ip3
I0428 19:58:10.007315 28904 net.cpp:124] Setting up ip3
I0428 19:58:10.007323 28904 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:10.007325 28904 net.cpp:139] Memory required for data: 2179840
I0428 19:58:10.007333 28904 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:10.007341 28904 net.cpp:86] Creating Layer relu3
I0428 19:58:10.007344 28904 net.cpp:408] relu3 <- ip3
I0428 19:58:10.007347 28904 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:10.007524 28904 net.cpp:124] Setting up relu3
I0428 19:58:10.007534 28904 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:10.007535 28904 net.cpp:139] Memory required for data: 2182400
I0428 19:58:10.007539 28904 layer_factory.hpp:77] Creating layer loss
I0428 19:58:10.007545 28904 net.cpp:86] Creating Layer loss
I0428 19:58:10.007549 28904 net.cpp:408] loss <- ip3
I0428 19:58:10.007551 28904 net.cpp:408] loss <- label
I0428 19:58:10.007556 28904 net.cpp:382] loss -> loss
I0428 19:58:10.007570 28904 layer_factory.hpp:77] Creating layer loss
I0428 19:58:10.007802 28904 net.cpp:124] Setting up loss
I0428 19:58:10.007810 28904 net.cpp:131] Top shape: (1)
I0428 19:58:10.007813 28904 net.cpp:134]     with loss weight 1
I0428 19:58:10.007827 28904 net.cpp:139] Memory required for data: 2182404
I0428 19:58:10.007830 28904 net.cpp:200] loss needs backward computation.
I0428 19:58:10.007833 28904 net.cpp:200] relu3 needs backward computation.
I0428 19:58:10.007836 28904 net.cpp:200] ip3 needs backward computation.
I0428 19:58:10.007839 28904 net.cpp:200] relu2 needs backward computation.
I0428 19:58:10.007841 28904 net.cpp:200] ip2 needs backward computation.
I0428 19:58:10.007844 28904 net.cpp:200] relu1 needs backward computation.
I0428 19:58:10.007846 28904 net.cpp:200] ip1 needs backward computation.
I0428 19:58:10.007849 28904 net.cpp:200] pool1 needs backward computation.
I0428 19:58:10.007853 28904 net.cpp:200] conv1 needs backward computation.
I0428 19:58:10.007855 28904 net.cpp:200] pool0 needs backward computation.
I0428 19:58:10.007858 28904 net.cpp:200] conv0 needs backward computation.
I0428 19:58:10.007860 28904 net.cpp:202] mnist does not need backward computation.
I0428 19:58:10.007863 28904 net.cpp:244] This network produces output loss
I0428 19:58:10.007872 28904 net.cpp:257] Network initialization done.
I0428 19:58:10.008220 28904 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test810.prototxt
I0428 19:58:10.008291 28904 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:10.008381 28904 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:10.008462 28904 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:10.008507 28904 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:10.008517 28904 net.cpp:86] Creating Layer mnist
I0428 19:58:10.008522 28904 net.cpp:382] mnist -> data
I0428 19:58:10.008530 28904 net.cpp:382] mnist -> label
I0428 19:58:10.008641 28904 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:10.010697 28904 net.cpp:124] Setting up mnist
I0428 19:58:10.010726 28904 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:10.010731 28904 net.cpp:131] Top shape: 100 (100)
I0428 19:58:10.010735 28904 net.cpp:139] Memory required for data: 314000
I0428 19:58:10.010738 28904 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:10.010745 28904 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:10.010747 28904 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:10.010772 28904 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:10.010781 28904 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:10.010830 28904 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:10.010838 28904 net.cpp:131] Top shape: 100 (100)
I0428 19:58:10.010841 28904 net.cpp:131] Top shape: 100 (100)
I0428 19:58:10.010843 28904 net.cpp:139] Memory required for data: 314800
I0428 19:58:10.010846 28904 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:10.010856 28904 net.cpp:86] Creating Layer conv0
I0428 19:58:10.010859 28904 net.cpp:408] conv0 <- data
I0428 19:58:10.010864 28904 net.cpp:382] conv0 -> conv0
I0428 19:58:10.012779 28904 net.cpp:124] Setting up conv0
I0428 19:58:10.012807 28904 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:10.012831 28904 net.cpp:139] Memory required for data: 2618800
I0428 19:58:10.012858 28904 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:10.012866 28904 net.cpp:86] Creating Layer pool0
I0428 19:58:10.012883 28904 net.cpp:408] pool0 <- conv0
I0428 19:58:10.012889 28904 net.cpp:382] pool0 -> pool0
I0428 19:58:10.012926 28904 net.cpp:124] Setting up pool0
I0428 19:58:10.012944 28904 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:10.012948 28904 net.cpp:139] Memory required for data: 3194800
I0428 19:58:10.012950 28904 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:10.012959 28904 net.cpp:86] Creating Layer conv1
I0428 19:58:10.012962 28904 net.cpp:408] conv1 <- pool0
I0428 19:58:10.012967 28904 net.cpp:382] conv1 -> conv1
I0428 19:58:10.015117 28904 net.cpp:124] Setting up conv1
I0428 19:58:10.015130 28904 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:58:10.015135 28904 net.cpp:139] Memory required for data: 3322800
I0428 19:58:10.015142 28904 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:10.015151 28904 net.cpp:86] Creating Layer pool1
I0428 19:58:10.015168 28904 net.cpp:408] pool1 <- conv1
I0428 19:58:10.015173 28904 net.cpp:382] pool1 -> pool1
I0428 19:58:10.015218 28904 net.cpp:124] Setting up pool1
I0428 19:58:10.015233 28904 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:58:10.015236 28904 net.cpp:139] Memory required for data: 3354800
I0428 19:58:10.015239 28904 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:10.015245 28904 net.cpp:86] Creating Layer ip1
I0428 19:58:10.015249 28904 net.cpp:408] ip1 <- pool1
I0428 19:58:10.015255 28904 net.cpp:382] ip1 -> ip1
I0428 19:58:10.015408 28904 net.cpp:124] Setting up ip1
I0428 19:58:10.015416 28904 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:10.015429 28904 net.cpp:139] Memory required for data: 3374800
I0428 19:58:10.015437 28904 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:10.015442 28904 net.cpp:86] Creating Layer relu1
I0428 19:58:10.015446 28904 net.cpp:408] relu1 <- ip1
I0428 19:58:10.015453 28904 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:10.015662 28904 net.cpp:124] Setting up relu1
I0428 19:58:10.015671 28904 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:10.015676 28904 net.cpp:139] Memory required for data: 3394800
I0428 19:58:10.015678 28904 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:10.015686 28904 net.cpp:86] Creating Layer ip2
I0428 19:58:10.015691 28904 net.cpp:408] ip2 <- ip1
I0428 19:58:10.015696 28904 net.cpp:382] ip2 -> ip2
I0428 19:58:10.015805 28904 net.cpp:124] Setting up ip2
I0428 19:58:10.015811 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.015815 28904 net.cpp:139] Memory required for data: 3398800
I0428 19:58:10.015821 28904 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:10.015826 28904 net.cpp:86] Creating Layer relu2
I0428 19:58:10.015830 28904 net.cpp:408] relu2 <- ip2
I0428 19:58:10.015835 28904 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:10.016016 28904 net.cpp:124] Setting up relu2
I0428 19:58:10.016023 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.016026 28904 net.cpp:139] Memory required for data: 3402800
I0428 19:58:10.016029 28904 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:10.016036 28904 net.cpp:86] Creating Layer ip3
I0428 19:58:10.016038 28904 net.cpp:408] ip3 <- ip2
I0428 19:58:10.016044 28904 net.cpp:382] ip3 -> ip3
I0428 19:58:10.016152 28904 net.cpp:124] Setting up ip3
I0428 19:58:10.016161 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.016163 28904 net.cpp:139] Memory required for data: 3406800
I0428 19:58:10.016186 28904 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:10.016191 28904 net.cpp:86] Creating Layer relu3
I0428 19:58:10.016193 28904 net.cpp:408] relu3 <- ip3
I0428 19:58:10.016197 28904 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:10.017050 28904 net.cpp:124] Setting up relu3
I0428 19:58:10.017062 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.017066 28904 net.cpp:139] Memory required for data: 3410800
I0428 19:58:10.017069 28904 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:10.017076 28904 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:10.017081 28904 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:10.017086 28904 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:10.017092 28904 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:10.017144 28904 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:10.017153 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.017156 28904 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:10.017159 28904 net.cpp:139] Memory required for data: 3418800
I0428 19:58:10.017163 28904 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:10.017189 28904 net.cpp:86] Creating Layer accuracy
I0428 19:58:10.017207 28904 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:10.017212 28904 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:10.017216 28904 net.cpp:382] accuracy -> accuracy
I0428 19:58:10.017225 28904 net.cpp:124] Setting up accuracy
I0428 19:58:10.017230 28904 net.cpp:131] Top shape: (1)
I0428 19:58:10.017232 28904 net.cpp:139] Memory required for data: 3418804
I0428 19:58:10.017236 28904 layer_factory.hpp:77] Creating layer loss
I0428 19:58:10.017241 28904 net.cpp:86] Creating Layer loss
I0428 19:58:10.017244 28904 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:10.017248 28904 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:10.017252 28904 net.cpp:382] loss -> loss
I0428 19:58:10.017257 28904 layer_factory.hpp:77] Creating layer loss
I0428 19:58:10.017488 28904 net.cpp:124] Setting up loss
I0428 19:58:10.017498 28904 net.cpp:131] Top shape: (1)
I0428 19:58:10.017501 28904 net.cpp:134]     with loss weight 1
I0428 19:58:10.017508 28904 net.cpp:139] Memory required for data: 3418808
I0428 19:58:10.017520 28904 net.cpp:200] loss needs backward computation.
I0428 19:58:10.017524 28904 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:10.017534 28904 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:10.017542 28904 net.cpp:200] relu3 needs backward computation.
I0428 19:58:10.017544 28904 net.cpp:200] ip3 needs backward computation.
I0428 19:58:10.017552 28904 net.cpp:200] relu2 needs backward computation.
I0428 19:58:10.017556 28904 net.cpp:200] ip2 needs backward computation.
I0428 19:58:10.017560 28904 net.cpp:200] relu1 needs backward computation.
I0428 19:58:10.017562 28904 net.cpp:200] ip1 needs backward computation.
I0428 19:58:10.017565 28904 net.cpp:200] pool1 needs backward computation.
I0428 19:58:10.017568 28904 net.cpp:200] conv1 needs backward computation.
I0428 19:58:10.017571 28904 net.cpp:200] pool0 needs backward computation.
I0428 19:58:10.017580 28904 net.cpp:200] conv0 needs backward computation.
I0428 19:58:10.017582 28904 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:10.017586 28904 net.cpp:202] mnist does not need backward computation.
I0428 19:58:10.017590 28904 net.cpp:244] This network produces output accuracy
I0428 19:58:10.017592 28904 net.cpp:244] This network produces output loss
I0428 19:58:10.017604 28904 net.cpp:257] Network initialization done.
I0428 19:58:10.017644 28904 solver.cpp:56] Solver scaffolding done.
I0428 19:58:10.018002 28904 caffe.cpp:248] Starting Optimization
I0428 19:58:10.018007 28904 solver.cpp:273] Solving LeNet
I0428 19:58:10.018010 28904 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:10.018898 28904 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:10.022490 28904 blocking_queue.cpp:49] Waiting for data
I0428 19:58:10.087570 28911 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:10.088100 28904 solver.cpp:398]     Test net output #0: accuracy = 0.1164
I0428 19:58:10.088135 28904 solver.cpp:398]     Test net output #1: loss = 2.31498 (* 1 = 2.31498 loss)
I0428 19:58:10.090520 28904 solver.cpp:219] Iteration 0 (-1.75086e-30 iter/s, 0.0724779s/100 iters), loss = 2.34092
I0428 19:58:10.090561 28904 solver.cpp:238]     Train net output #0: loss = 2.34092 (* 1 = 2.34092 loss)
I0428 19:58:10.090590 28904 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:10.177938 28904 solver.cpp:219] Iteration 100 (1144.63 iter/s, 0.0873645s/100 iters), loss = 1.14386
I0428 19:58:10.177980 28904 solver.cpp:238]     Train net output #0: loss = 1.14386 (* 1 = 1.14386 loss)
I0428 19:58:10.177986 28904 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:10.258180 28904 solver.cpp:219] Iteration 200 (1247.03 iter/s, 0.0801905s/100 iters), loss = 0.813164
I0428 19:58:10.258219 28904 solver.cpp:238]     Train net output #0: loss = 0.813164 (* 1 = 0.813164 loss)
I0428 19:58:10.258225 28904 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:10.342502 28904 solver.cpp:219] Iteration 300 (1186.39 iter/s, 0.0842895s/100 iters), loss = 0.374222
I0428 19:58:10.342541 28904 solver.cpp:238]     Train net output #0: loss = 0.374222 (* 1 = 0.374222 loss)
I0428 19:58:10.342548 28904 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:10.420622 28904 solver.cpp:219] Iteration 400 (1280.63 iter/s, 0.0780863s/100 iters), loss = 0.340051
I0428 19:58:10.420662 28904 solver.cpp:238]     Train net output #0: loss = 0.340051 (* 1 = 0.340051 loss)
I0428 19:58:10.420682 28904 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:10.495139 28904 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:10.555716 28911 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:10.556213 28904 solver.cpp:398]     Test net output #0: accuracy = 0.8654
I0428 19:58:10.556246 28904 solver.cpp:398]     Test net output #1: loss = 0.394071 (* 1 = 0.394071 loss)
I0428 19:58:10.557063 28904 solver.cpp:219] Iteration 500 (733.15 iter/s, 0.136398s/100 iters), loss = 0.449049
I0428 19:58:10.557113 28904 solver.cpp:238]     Train net output #0: loss = 0.449049 (* 1 = 0.449049 loss)
I0428 19:58:10.557121 28904 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:10.640027 28904 solver.cpp:219] Iteration 600 (1206.18 iter/s, 0.0829065s/100 iters), loss = 0.289937
I0428 19:58:10.640065 28904 solver.cpp:238]     Train net output #0: loss = 0.289937 (* 1 = 0.289937 loss)
I0428 19:58:10.640071 28904 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:10.725085 28904 solver.cpp:219] Iteration 700 (1176.43 iter/s, 0.0850033s/100 iters), loss = 0.675422
I0428 19:58:10.725123 28904 solver.cpp:238]     Train net output #0: loss = 0.675422 (* 1 = 0.675422 loss)
I0428 19:58:10.725131 28904 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:10.802537 28904 solver.cpp:219] Iteration 800 (1291.66 iter/s, 0.0774196s/100 iters), loss = 0.6022
I0428 19:58:10.802561 28904 solver.cpp:238]     Train net output #0: loss = 0.6022 (* 1 = 0.6022 loss)
I0428 19:58:10.802567 28904 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:10.880378 28904 solver.cpp:219] Iteration 900 (1285.24 iter/s, 0.0778066s/100 iters), loss = 0.351025
I0428 19:58:10.880409 28904 solver.cpp:238]     Train net output #0: loss = 0.351025 (* 1 = 0.351025 loss)
I0428 19:58:10.880415 28904 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:10.906268 28910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:10.957389 28904 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:10.958204 28904 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:10.958696 28904 solver.cpp:311] Iteration 1000, loss = 0.400857
I0428 19:58:10.958714 28904 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:11.034756 28911 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:11.036767 28904 solver.cpp:398]     Test net output #0: accuracy = 0.8819
I0428 19:58:11.036820 28904 solver.cpp:398]     Test net output #1: loss = 0.317235 (* 1 = 0.317235 loss)
I0428 19:58:11.036833 28904 solver.cpp:316] Optimization Done.
I0428 19:58:11.036839 28904 caffe.cpp:259] Optimization Done.
