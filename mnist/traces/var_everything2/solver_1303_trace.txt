I0428 20:17:47.285284   991 caffe.cpp:218] Using GPUs 0
I0428 20:17:47.317257   991 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:47.812515   991 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1303.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:47.812634   991 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1303.prototxt
I0428 20:17:47.813038   991 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:47.813069   991 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:47.813182   991 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:47.813261   991 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:47.813340   991 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:47.813359   991 net.cpp:86] Creating Layer mnist
I0428 20:17:47.813364   991 net.cpp:382] mnist -> data
I0428 20:17:47.813382   991 net.cpp:382] mnist -> label
I0428 20:17:47.814381   991 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:47.816664   991 net.cpp:124] Setting up mnist
I0428 20:17:47.816679   991 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:47.816684   991 net.cpp:131] Top shape: 64 (64)
I0428 20:17:47.816686   991 net.cpp:139] Memory required for data: 200960
I0428 20:17:47.816692   991 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:47.816704   991 net.cpp:86] Creating Layer conv0
I0428 20:17:47.816720   991 net.cpp:408] conv0 <- data
I0428 20:17:47.816730   991 net.cpp:382] conv0 -> conv0
I0428 20:17:48.102315   991 net.cpp:124] Setting up conv0
I0428 20:17:48.102363   991 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:48.102370   991 net.cpp:139] Memory required for data: 7573760
I0428 20:17:48.102406   991 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:48.102421   991 net.cpp:86] Creating Layer pool0
I0428 20:17:48.102432   991 net.cpp:408] pool0 <- conv0
I0428 20:17:48.102439   991 net.cpp:382] pool0 -> pool0
I0428 20:17:48.102499   991 net.cpp:124] Setting up pool0
I0428 20:17:48.102507   991 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:48.102514   991 net.cpp:139] Memory required for data: 9416960
I0428 20:17:48.102519   991 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:48.102533   991 net.cpp:86] Creating Layer conv1
I0428 20:17:48.102540   991 net.cpp:408] conv1 <- pool0
I0428 20:17:48.102546   991 net.cpp:382] conv1 -> conv1
I0428 20:17:48.106545   991 net.cpp:124] Setting up conv1
I0428 20:17:48.106578   991 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:48.106583   991 net.cpp:139] Memory required for data: 9580800
I0428 20:17:48.106597   991 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:48.106623   991 net.cpp:86] Creating Layer pool1
I0428 20:17:48.106628   991 net.cpp:408] pool1 <- conv1
I0428 20:17:48.106637   991 net.cpp:382] pool1 -> pool1
I0428 20:17:48.106689   991 net.cpp:124] Setting up pool1
I0428 20:17:48.106700   991 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:48.106706   991 net.cpp:139] Memory required for data: 9621760
I0428 20:17:48.106710   991 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:48.106720   991 net.cpp:86] Creating Layer ip1
I0428 20:17:48.106726   991 net.cpp:408] ip1 <- pool1
I0428 20:17:48.106735   991 net.cpp:382] ip1 -> ip1
I0428 20:17:48.106883   991 net.cpp:124] Setting up ip1
I0428 20:17:48.106892   991 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:48.106896   991 net.cpp:139] Memory required for data: 9624320
I0428 20:17:48.106907   991 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:48.106919   991 net.cpp:86] Creating Layer relu1
I0428 20:17:48.106925   991 net.cpp:408] relu1 <- ip1
I0428 20:17:48.106931   991 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:48.107154   991 net.cpp:124] Setting up relu1
I0428 20:17:48.107167   991 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:48.107173   991 net.cpp:139] Memory required for data: 9626880
I0428 20:17:48.107177   991 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:48.107187   991 net.cpp:86] Creating Layer ip2
I0428 20:17:48.107192   991 net.cpp:408] ip2 <- ip1
I0428 20:17:48.107201   991 net.cpp:382] ip2 -> ip2
I0428 20:17:48.107336   991 net.cpp:124] Setting up ip2
I0428 20:17:48.107345   991 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:17:48.107349   991 net.cpp:139] Memory required for data: 9633280
I0428 20:17:48.107357   991 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:48.107367   991 net.cpp:86] Creating Layer relu2
I0428 20:17:48.107373   991 net.cpp:408] relu2 <- ip2
I0428 20:17:48.107380   991 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:48.108454   991 net.cpp:124] Setting up relu2
I0428 20:17:48.108470   991 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:17:48.108476   991 net.cpp:139] Memory required for data: 9639680
I0428 20:17:48.108481   991 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:48.108491   991 net.cpp:86] Creating Layer ip3
I0428 20:17:48.108497   991 net.cpp:408] ip3 <- ip2
I0428 20:17:48.108506   991 net.cpp:382] ip3 -> ip3
I0428 20:17:48.108642   991 net.cpp:124] Setting up ip3
I0428 20:17:48.108651   991 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:48.108657   991 net.cpp:139] Memory required for data: 9642240
I0428 20:17:48.108669   991 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:48.108680   991 net.cpp:86] Creating Layer relu3
I0428 20:17:48.108685   991 net.cpp:408] relu3 <- ip3
I0428 20:17:48.108705   991 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:48.108952   991 net.cpp:124] Setting up relu3
I0428 20:17:48.108964   991 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:48.108970   991 net.cpp:139] Memory required for data: 9644800
I0428 20:17:48.108975   991 layer_factory.hpp:77] Creating layer loss
I0428 20:17:48.109000   991 net.cpp:86] Creating Layer loss
I0428 20:17:48.109007   991 net.cpp:408] loss <- ip3
I0428 20:17:48.109014   991 net.cpp:408] loss <- label
I0428 20:17:48.109020   991 net.cpp:382] loss -> loss
I0428 20:17:48.109061   991 layer_factory.hpp:77] Creating layer loss
I0428 20:17:48.109426   991 net.cpp:124] Setting up loss
I0428 20:17:48.109443   991 net.cpp:131] Top shape: (1)
I0428 20:17:48.109449   991 net.cpp:134]     with loss weight 1
I0428 20:17:48.109467   991 net.cpp:139] Memory required for data: 9644804
I0428 20:17:48.109472   991 net.cpp:200] loss needs backward computation.
I0428 20:17:48.109478   991 net.cpp:200] relu3 needs backward computation.
I0428 20:17:48.109483   991 net.cpp:200] ip3 needs backward computation.
I0428 20:17:48.109488   991 net.cpp:200] relu2 needs backward computation.
I0428 20:17:48.109491   991 net.cpp:200] ip2 needs backward computation.
I0428 20:17:48.109495   991 net.cpp:200] relu1 needs backward computation.
I0428 20:17:48.109499   991 net.cpp:200] ip1 needs backward computation.
I0428 20:17:48.109504   991 net.cpp:200] pool1 needs backward computation.
I0428 20:17:48.109508   991 net.cpp:200] conv1 needs backward computation.
I0428 20:17:48.109513   991 net.cpp:200] pool0 needs backward computation.
I0428 20:17:48.109518   991 net.cpp:200] conv0 needs backward computation.
I0428 20:17:48.109522   991 net.cpp:202] mnist does not need backward computation.
I0428 20:17:48.109529   991 net.cpp:244] This network produces output loss
I0428 20:17:48.109541   991 net.cpp:257] Network initialization done.
I0428 20:17:48.110070   991 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1303.prototxt
I0428 20:17:48.110138   991 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:48.110308   991 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:48.110447   991 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:48.110505   991 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:48.110522   991 net.cpp:86] Creating Layer mnist
I0428 20:17:48.110530   991 net.cpp:382] mnist -> data
I0428 20:17:48.110559   991 net.cpp:382] mnist -> label
I0428 20:17:48.110687   991 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:48.113351   991 net.cpp:124] Setting up mnist
I0428 20:17:48.113395   991 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:48.113404   991 net.cpp:131] Top shape: 100 (100)
I0428 20:17:48.113407   991 net.cpp:139] Memory required for data: 314000
I0428 20:17:48.113428   991 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:48.113456   991 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:48.113461   991 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:48.113469   991 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:48.113493   991 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:48.113617   991 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:48.113646   991 net.cpp:131] Top shape: 100 (100)
I0428 20:17:48.113652   991 net.cpp:131] Top shape: 100 (100)
I0428 20:17:48.113656   991 net.cpp:139] Memory required for data: 314800
I0428 20:17:48.113662   991 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:48.113674   991 net.cpp:86] Creating Layer conv0
I0428 20:17:48.113679   991 net.cpp:408] conv0 <- data
I0428 20:17:48.113687   991 net.cpp:382] conv0 -> conv0
I0428 20:17:48.115737   991 net.cpp:124] Setting up conv0
I0428 20:17:48.115758   991 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:48.115763   991 net.cpp:139] Memory required for data: 11834800
I0428 20:17:48.115792   991 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:48.115802   991 net.cpp:86] Creating Layer pool0
I0428 20:17:48.115808   991 net.cpp:408] pool0 <- conv0
I0428 20:17:48.115814   991 net.cpp:382] pool0 -> pool0
I0428 20:17:48.115886   991 net.cpp:124] Setting up pool0
I0428 20:17:48.115897   991 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:48.115902   991 net.cpp:139] Memory required for data: 14714800
I0428 20:17:48.115907   991 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:48.115921   991 net.cpp:86] Creating Layer conv1
I0428 20:17:48.115932   991 net.cpp:408] conv1 <- pool0
I0428 20:17:48.115942   991 net.cpp:382] conv1 -> conv1
I0428 20:17:48.118288   991 net.cpp:124] Setting up conv1
I0428 20:17:48.118306   991 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:48.118311   991 net.cpp:139] Memory required for data: 14970800
I0428 20:17:48.118340   991 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:48.118350   991 net.cpp:86] Creating Layer pool1
I0428 20:17:48.118355   991 net.cpp:408] pool1 <- conv1
I0428 20:17:48.118362   991 net.cpp:382] pool1 -> pool1
I0428 20:17:48.118427   991 net.cpp:124] Setting up pool1
I0428 20:17:48.118435   991 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:48.118440   991 net.cpp:139] Memory required for data: 15034800
I0428 20:17:48.118444   991 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:48.118453   991 net.cpp:86] Creating Layer ip1
I0428 20:17:48.118458   991 net.cpp:408] ip1 <- pool1
I0428 20:17:48.118466   991 net.cpp:382] ip1 -> ip1
I0428 20:17:48.118618   991 net.cpp:124] Setting up ip1
I0428 20:17:48.118628   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.118644   991 net.cpp:139] Memory required for data: 15038800
I0428 20:17:48.118655   991 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:48.118664   991 net.cpp:86] Creating Layer relu1
I0428 20:17:48.118670   991 net.cpp:408] relu1 <- ip1
I0428 20:17:48.118681   991 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:48.118906   991 net.cpp:124] Setting up relu1
I0428 20:17:48.118918   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.118923   991 net.cpp:139] Memory required for data: 15042800
I0428 20:17:48.118928   991 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:48.118939   991 net.cpp:86] Creating Layer ip2
I0428 20:17:48.118944   991 net.cpp:408] ip2 <- ip1
I0428 20:17:48.118952   991 net.cpp:382] ip2 -> ip2
I0428 20:17:48.119096   991 net.cpp:124] Setting up ip2
I0428 20:17:48.119105   991 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:17:48.119112   991 net.cpp:139] Memory required for data: 15052800
I0428 20:17:48.119119   991 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:48.119127   991 net.cpp:86] Creating Layer relu2
I0428 20:17:48.119133   991 net.cpp:408] relu2 <- ip2
I0428 20:17:48.119140   991 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:48.119349   991 net.cpp:124] Setting up relu2
I0428 20:17:48.119360   991 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:17:48.119366   991 net.cpp:139] Memory required for data: 15062800
I0428 20:17:48.119371   991 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:48.119380   991 net.cpp:86] Creating Layer ip3
I0428 20:17:48.119386   991 net.cpp:408] ip3 <- ip2
I0428 20:17:48.119410   991 net.cpp:382] ip3 -> ip3
I0428 20:17:48.119534   991 net.cpp:124] Setting up ip3
I0428 20:17:48.119544   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.119550   991 net.cpp:139] Memory required for data: 15066800
I0428 20:17:48.119560   991 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:48.119567   991 net.cpp:86] Creating Layer relu3
I0428 20:17:48.119573   991 net.cpp:408] relu3 <- ip3
I0428 20:17:48.119580   991 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:48.120694   991 net.cpp:124] Setting up relu3
I0428 20:17:48.120710   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.120733   991 net.cpp:139] Memory required for data: 15070800
I0428 20:17:48.120738   991 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:48.120748   991 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:48.120754   991 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:48.120762   991 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:48.120774   991 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:48.120836   991 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:48.120846   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.120853   991 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:48.120859   991 net.cpp:139] Memory required for data: 15078800
I0428 20:17:48.120863   991 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:48.120873   991 net.cpp:86] Creating Layer accuracy
I0428 20:17:48.120879   991 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:48.120887   991 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:48.120894   991 net.cpp:382] accuracy -> accuracy
I0428 20:17:48.120906   991 net.cpp:124] Setting up accuracy
I0428 20:17:48.120914   991 net.cpp:131] Top shape: (1)
I0428 20:17:48.120919   991 net.cpp:139] Memory required for data: 15078804
I0428 20:17:48.120925   991 layer_factory.hpp:77] Creating layer loss
I0428 20:17:48.120934   991 net.cpp:86] Creating Layer loss
I0428 20:17:48.120940   991 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:48.120946   991 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:48.120952   991 net.cpp:382] loss -> loss
I0428 20:17:48.120964   991 layer_factory.hpp:77] Creating layer loss
I0428 20:17:48.121335   991 net.cpp:124] Setting up loss
I0428 20:17:48.121347   991 net.cpp:131] Top shape: (1)
I0428 20:17:48.121353   991 net.cpp:134]     with loss weight 1
I0428 20:17:48.121374   991 net.cpp:139] Memory required for data: 15078808
I0428 20:17:48.121381   991 net.cpp:200] loss needs backward computation.
I0428 20:17:48.121387   991 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:48.121393   991 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:48.121397   991 net.cpp:200] relu3 needs backward computation.
I0428 20:17:48.121402   991 net.cpp:200] ip3 needs backward computation.
I0428 20:17:48.121407   991 net.cpp:200] relu2 needs backward computation.
I0428 20:17:48.121412   991 net.cpp:200] ip2 needs backward computation.
I0428 20:17:48.121417   991 net.cpp:200] relu1 needs backward computation.
I0428 20:17:48.121420   991 net.cpp:200] ip1 needs backward computation.
I0428 20:17:48.121425   991 net.cpp:200] pool1 needs backward computation.
I0428 20:17:48.121429   991 net.cpp:200] conv1 needs backward computation.
I0428 20:17:48.121434   991 net.cpp:200] pool0 needs backward computation.
I0428 20:17:48.121439   991 net.cpp:200] conv0 needs backward computation.
I0428 20:17:48.121445   991 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:48.121451   991 net.cpp:202] mnist does not need backward computation.
I0428 20:17:48.121456   991 net.cpp:244] This network produces output accuracy
I0428 20:17:48.121461   991 net.cpp:244] This network produces output loss
I0428 20:17:48.121479   991 net.cpp:257] Network initialization done.
I0428 20:17:48.121536   991 solver.cpp:56] Solver scaffolding done.
I0428 20:17:48.122076   991 caffe.cpp:248] Starting Optimization
I0428 20:17:48.122084   991 solver.cpp:273] Solving LeNet
I0428 20:17:48.122089   991 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:48.122330   991 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:48.198160   998 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:48.200834   991 solver.cpp:398]     Test net output #0: accuracy = 0.074
I0428 20:17:48.200855   991 solver.cpp:398]     Test net output #1: loss = 2.33312 (* 1 = 2.33312 loss)
I0428 20:17:48.206008   991 solver.cpp:219] Iteration 0 (-9.68297e-43 iter/s, 0.0838881s/100 iters), loss = 2.33023
I0428 20:17:48.206037   991 solver.cpp:238]     Train net output #0: loss = 2.33023 (* 1 = 2.33023 loss)
I0428 20:17:48.206053   991 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:48.334477   991 solver.cpp:219] Iteration 100 (778.664 iter/s, 0.128425s/100 iters), loss = 1.50165
I0428 20:17:48.334506   991 solver.cpp:238]     Train net output #0: loss = 1.50165 (* 1 = 1.50165 loss)
I0428 20:17:48.334529   991 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:48.468060   991 solver.cpp:219] Iteration 200 (748.823 iter/s, 0.133543s/100 iters), loss = 1.21771
I0428 20:17:48.468091   991 solver.cpp:238]     Train net output #0: loss = 1.21771 (* 1 = 1.21771 loss)
I0428 20:17:48.468099   991 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:48.600211   991 solver.cpp:219] Iteration 300 (756.961 iter/s, 0.132107s/100 iters), loss = 0.508483
I0428 20:17:48.600244   991 solver.cpp:238]     Train net output #0: loss = 0.508483 (* 1 = 0.508483 loss)
I0428 20:17:48.600268   991 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:48.730788   991 solver.cpp:219] Iteration 400 (766.1 iter/s, 0.130531s/100 iters), loss = 0.703612
I0428 20:17:48.730818   991 solver.cpp:238]     Train net output #0: loss = 0.703612 (* 1 = 0.703612 loss)
I0428 20:17:48.730842   991 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:48.863324   991 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:48.872040   991 blocking_queue.cpp:49] Waiting for data
I0428 20:17:48.940603   998 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:48.941977   991 solver.cpp:398]     Test net output #0: accuracy = 0.8337
I0428 20:17:48.942001   991 solver.cpp:398]     Test net output #1: loss = 0.630699 (* 1 = 0.630699 loss)
I0428 20:17:48.943349   991 solver.cpp:219] Iteration 500 (470.553 iter/s, 0.212516s/100 iters), loss = 0.616468
I0428 20:17:48.943399   991 solver.cpp:238]     Train net output #0: loss = 0.616468 (* 1 = 0.616468 loss)
I0428 20:17:48.943408   991 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:49.077137   991 solver.cpp:219] Iteration 600 (747.797 iter/s, 0.133726s/100 iters), loss = 0.457729
I0428 20:17:49.077172   991 solver.cpp:238]     Train net output #0: loss = 0.457729 (* 1 = 0.457729 loss)
I0428 20:17:49.077180   991 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:49.219931   991 solver.cpp:219] Iteration 700 (700.547 iter/s, 0.142746s/100 iters), loss = 0.835361
I0428 20:17:49.219980   991 solver.cpp:238]     Train net output #0: loss = 0.835361 (* 1 = 0.835361 loss)
I0428 20:17:49.219993   991 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:49.357715   991 solver.cpp:219] Iteration 800 (726.068 iter/s, 0.137728s/100 iters), loss = 0.714538
I0428 20:17:49.357761   991 solver.cpp:238]     Train net output #0: loss = 0.714538 (* 1 = 0.714538 loss)
I0428 20:17:49.357769   991 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:49.492389   991 solver.cpp:219] Iteration 900 (742.769 iter/s, 0.134631s/100 iters), loss = 0.452838
I0428 20:17:49.492435   991 solver.cpp:238]     Train net output #0: loss = 0.452838 (* 1 = 0.452838 loss)
I0428 20:17:49.492452   991 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:49.536144   997 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:49.624735   991 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:49.626675   991 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:49.627741   991 solver.cpp:311] Iteration 1000, loss = 0.660755
I0428 20:17:49.627774   991 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:49.704301   998 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:49.706735   991 solver.cpp:398]     Test net output #0: accuracy = 0.876
I0428 20:17:49.706761   991 solver.cpp:398]     Test net output #1: loss = 0.538366 (* 1 = 0.538366 loss)
I0428 20:17:49.706768   991 solver.cpp:316] Optimization Done.
I0428 20:17:49.706773   991 caffe.cpp:259] Optimization Done.
