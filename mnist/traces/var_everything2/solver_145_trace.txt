I0428 19:32:10.874045 22776 caffe.cpp:218] Using GPUs 0
I0428 19:32:10.915081 22776 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:11.372169 22776 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test145.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:11.372351 22776 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test145.prototxt
I0428 19:32:11.372684 22776 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:11.372701 22776 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:11.372828 22776 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:11.372918 22776 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:11.373008 22776 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:11.373028 22776 net.cpp:86] Creating Layer mnist
I0428 19:32:11.373035 22776 net.cpp:382] mnist -> data
I0428 19:32:11.373055 22776 net.cpp:382] mnist -> label
I0428 19:32:11.374056 22776 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:11.376317 22776 net.cpp:124] Setting up mnist
I0428 19:32:11.376348 22776 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:11.376353 22776 net.cpp:131] Top shape: 64 (64)
I0428 19:32:11.376356 22776 net.cpp:139] Memory required for data: 200960
I0428 19:32:11.376363 22776 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:11.376376 22776 net.cpp:86] Creating Layer conv0
I0428 19:32:11.376380 22776 net.cpp:408] conv0 <- data
I0428 19:32:11.376406 22776 net.cpp:382] conv0 -> conv0
I0428 19:32:11.600952 22776 net.cpp:124] Setting up conv0
I0428 19:32:11.600996 22776 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:11.600999 22776 net.cpp:139] Memory required for data: 1675520
I0428 19:32:11.601014 22776 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:11.601028 22776 net.cpp:86] Creating Layer pool0
I0428 19:32:11.601066 22776 net.cpp:408] pool0 <- conv0
I0428 19:32:11.601073 22776 net.cpp:382] pool0 -> pool0
I0428 19:32:11.601122 22776 net.cpp:124] Setting up pool0
I0428 19:32:11.601131 22776 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:11.601135 22776 net.cpp:139] Memory required for data: 2044160
I0428 19:32:11.601137 22776 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:11.601145 22776 net.cpp:86] Creating Layer ip1
I0428 19:32:11.601148 22776 net.cpp:408] ip1 <- pool0
I0428 19:32:11.601153 22776 net.cpp:382] ip1 -> ip1
I0428 19:32:11.601514 22776 net.cpp:124] Setting up ip1
I0428 19:32:11.601521 22776 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:11.601541 22776 net.cpp:139] Memory required for data: 2050560
I0428 19:32:11.601547 22776 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:11.601553 22776 net.cpp:86] Creating Layer relu1
I0428 19:32:11.601557 22776 net.cpp:408] relu1 <- ip1
I0428 19:32:11.601562 22776 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:11.601732 22776 net.cpp:124] Setting up relu1
I0428 19:32:11.601742 22776 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:11.601744 22776 net.cpp:139] Memory required for data: 2056960
I0428 19:32:11.601747 22776 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:11.601753 22776 net.cpp:86] Creating Layer ip2
I0428 19:32:11.601757 22776 net.cpp:408] ip2 <- ip1
I0428 19:32:11.601761 22776 net.cpp:382] ip2 -> ip2
I0428 19:32:11.602797 22776 net.cpp:124] Setting up ip2
I0428 19:32:11.602824 22776 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:11.602828 22776 net.cpp:139] Memory required for data: 2069760
I0428 19:32:11.602836 22776 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:11.602843 22776 net.cpp:86] Creating Layer relu2
I0428 19:32:11.602846 22776 net.cpp:408] relu2 <- ip2
I0428 19:32:11.602850 22776 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:11.603668 22776 net.cpp:124] Setting up relu2
I0428 19:32:11.603696 22776 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:11.603700 22776 net.cpp:139] Memory required for data: 2082560
I0428 19:32:11.603704 22776 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:11.603711 22776 net.cpp:86] Creating Layer ip3
I0428 19:32:11.603715 22776 net.cpp:408] ip3 <- ip2
I0428 19:32:11.603721 22776 net.cpp:382] ip3 -> ip3
I0428 19:32:11.603884 22776 net.cpp:124] Setting up ip3
I0428 19:32:11.603893 22776 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:11.603896 22776 net.cpp:139] Memory required for data: 2085120
I0428 19:32:11.603902 22776 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:11.603909 22776 net.cpp:86] Creating Layer relu3
I0428 19:32:11.603912 22776 net.cpp:408] relu3 <- ip3
I0428 19:32:11.603916 22776 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:11.604070 22776 net.cpp:124] Setting up relu3
I0428 19:32:11.604094 22776 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:11.604097 22776 net.cpp:139] Memory required for data: 2087680
I0428 19:32:11.604101 22776 layer_factory.hpp:77] Creating layer loss
I0428 19:32:11.604107 22776 net.cpp:86] Creating Layer loss
I0428 19:32:11.604110 22776 net.cpp:408] loss <- ip3
I0428 19:32:11.604115 22776 net.cpp:408] loss <- label
I0428 19:32:11.604120 22776 net.cpp:382] loss -> loss
I0428 19:32:11.604137 22776 layer_factory.hpp:77] Creating layer loss
I0428 19:32:11.604377 22776 net.cpp:124] Setting up loss
I0428 19:32:11.604387 22776 net.cpp:131] Top shape: (1)
I0428 19:32:11.604389 22776 net.cpp:134]     with loss weight 1
I0428 19:32:11.604403 22776 net.cpp:139] Memory required for data: 2087684
I0428 19:32:11.604406 22776 net.cpp:200] loss needs backward computation.
I0428 19:32:11.604410 22776 net.cpp:200] relu3 needs backward computation.
I0428 19:32:11.604413 22776 net.cpp:200] ip3 needs backward computation.
I0428 19:32:11.604416 22776 net.cpp:200] relu2 needs backward computation.
I0428 19:32:11.604418 22776 net.cpp:200] ip2 needs backward computation.
I0428 19:32:11.604423 22776 net.cpp:200] relu1 needs backward computation.
I0428 19:32:11.604424 22776 net.cpp:200] ip1 needs backward computation.
I0428 19:32:11.604437 22776 net.cpp:200] pool0 needs backward computation.
I0428 19:32:11.604440 22776 net.cpp:200] conv0 needs backward computation.
I0428 19:32:11.604444 22776 net.cpp:202] mnist does not need backward computation.
I0428 19:32:11.604447 22776 net.cpp:244] This network produces output loss
I0428 19:32:11.604455 22776 net.cpp:257] Network initialization done.
I0428 19:32:11.604776 22776 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test145.prototxt
I0428 19:32:11.604840 22776 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:11.604940 22776 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:11.605011 22776 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:11.605062 22776 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:11.605074 22776 net.cpp:86] Creating Layer mnist
I0428 19:32:11.605079 22776 net.cpp:382] mnist -> data
I0428 19:32:11.605087 22776 net.cpp:382] mnist -> label
I0428 19:32:11.605190 22776 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:11.607270 22776 net.cpp:124] Setting up mnist
I0428 19:32:11.607282 22776 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:11.607286 22776 net.cpp:131] Top shape: 100 (100)
I0428 19:32:11.607290 22776 net.cpp:139] Memory required for data: 314000
I0428 19:32:11.607292 22776 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:11.607328 22776 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:11.607332 22776 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:11.607352 22776 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:11.607359 22776 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:11.607396 22776 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:11.607401 22776 net.cpp:131] Top shape: 100 (100)
I0428 19:32:11.607405 22776 net.cpp:131] Top shape: 100 (100)
I0428 19:32:11.607408 22776 net.cpp:139] Memory required for data: 314800
I0428 19:32:11.607420 22776 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:11.607441 22776 net.cpp:86] Creating Layer conv0
I0428 19:32:11.607445 22776 net.cpp:408] conv0 <- data
I0428 19:32:11.607466 22776 net.cpp:382] conv0 -> conv0
I0428 19:32:11.609133 22776 net.cpp:124] Setting up conv0
I0428 19:32:11.609148 22776 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:11.609151 22776 net.cpp:139] Memory required for data: 2618800
I0428 19:32:11.609160 22776 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:11.609166 22776 net.cpp:86] Creating Layer pool0
I0428 19:32:11.609169 22776 net.cpp:408] pool0 <- conv0
I0428 19:32:11.609175 22776 net.cpp:382] pool0 -> pool0
I0428 19:32:11.609212 22776 net.cpp:124] Setting up pool0
I0428 19:32:11.609217 22776 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:11.609220 22776 net.cpp:139] Memory required for data: 3194800
I0428 19:32:11.609223 22776 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:11.609230 22776 net.cpp:86] Creating Layer ip1
I0428 19:32:11.609233 22776 net.cpp:408] ip1 <- pool0
I0428 19:32:11.609239 22776 net.cpp:382] ip1 -> ip1
I0428 19:32:11.609544 22776 net.cpp:124] Setting up ip1
I0428 19:32:11.609552 22776 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:11.609555 22776 net.cpp:139] Memory required for data: 3204800
I0428 19:32:11.609561 22776 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:11.609566 22776 net.cpp:86] Creating Layer relu1
I0428 19:32:11.609570 22776 net.cpp:408] relu1 <- ip1
I0428 19:32:11.609573 22776 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:11.609787 22776 net.cpp:124] Setting up relu1
I0428 19:32:11.609797 22776 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:11.609799 22776 net.cpp:139] Memory required for data: 3214800
I0428 19:32:11.609803 22776 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:11.609809 22776 net.cpp:86] Creating Layer ip2
I0428 19:32:11.609813 22776 net.cpp:408] ip2 <- ip1
I0428 19:32:11.609818 22776 net.cpp:382] ip2 -> ip2
I0428 19:32:11.609935 22776 net.cpp:124] Setting up ip2
I0428 19:32:11.609957 22776 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:11.609961 22776 net.cpp:139] Memory required for data: 3234800
I0428 19:32:11.609967 22776 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:11.609973 22776 net.cpp:86] Creating Layer relu2
I0428 19:32:11.609977 22776 net.cpp:408] relu2 <- ip2
I0428 19:32:11.609980 22776 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:11.610965 22776 net.cpp:124] Setting up relu2
I0428 19:32:11.610980 22776 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:11.610983 22776 net.cpp:139] Memory required for data: 3254800
I0428 19:32:11.610987 22776 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:11.610997 22776 net.cpp:86] Creating Layer ip3
I0428 19:32:11.611001 22776 net.cpp:408] ip3 <- ip2
I0428 19:32:11.611008 22776 net.cpp:382] ip3 -> ip3
I0428 19:32:11.611187 22776 net.cpp:124] Setting up ip3
I0428 19:32:11.611197 22776 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:11.611202 22776 net.cpp:139] Memory required for data: 3258800
I0428 19:32:11.611208 22776 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:11.611222 22776 net.cpp:86] Creating Layer relu3
I0428 19:32:11.611224 22776 net.cpp:408] relu3 <- ip3
I0428 19:32:11.611229 22776 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:11.611424 22776 net.cpp:124] Setting up relu3
I0428 19:32:11.611433 22776 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:11.611436 22776 net.cpp:139] Memory required for data: 3262800
I0428 19:32:11.611440 22776 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:11.611445 22776 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:11.611449 22776 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:11.611465 22776 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:11.611474 22776 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:11.611515 22776 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:11.611521 22776 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:11.611526 22776 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:11.611539 22776 net.cpp:139] Memory required for data: 3270800
I0428 19:32:11.611543 22776 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:11.611551 22776 net.cpp:86] Creating Layer accuracy
I0428 19:32:11.611557 22776 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:11.611562 22776 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:11.611567 22776 net.cpp:382] accuracy -> accuracy
I0428 19:32:11.611574 22776 net.cpp:124] Setting up accuracy
I0428 19:32:11.611579 22776 net.cpp:131] Top shape: (1)
I0428 19:32:11.611583 22776 net.cpp:139] Memory required for data: 3270804
I0428 19:32:11.611587 22776 layer_factory.hpp:77] Creating layer loss
I0428 19:32:11.611593 22776 net.cpp:86] Creating Layer loss
I0428 19:32:11.611596 22776 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:11.611600 22776 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:11.611605 22776 net.cpp:382] loss -> loss
I0428 19:32:11.611613 22776 layer_factory.hpp:77] Creating layer loss
I0428 19:32:11.611884 22776 net.cpp:124] Setting up loss
I0428 19:32:11.611894 22776 net.cpp:131] Top shape: (1)
I0428 19:32:11.611897 22776 net.cpp:134]     with loss weight 1
I0428 19:32:11.611904 22776 net.cpp:139] Memory required for data: 3270808
I0428 19:32:11.611908 22776 net.cpp:200] loss needs backward computation.
I0428 19:32:11.611912 22776 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:11.611917 22776 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:11.611919 22776 net.cpp:200] relu3 needs backward computation.
I0428 19:32:11.611922 22776 net.cpp:200] ip3 needs backward computation.
I0428 19:32:11.611927 22776 net.cpp:200] relu2 needs backward computation.
I0428 19:32:11.611929 22776 net.cpp:200] ip2 needs backward computation.
I0428 19:32:11.611932 22776 net.cpp:200] relu1 needs backward computation.
I0428 19:32:11.611934 22776 net.cpp:200] ip1 needs backward computation.
I0428 19:32:11.611938 22776 net.cpp:200] pool0 needs backward computation.
I0428 19:32:11.611941 22776 net.cpp:200] conv0 needs backward computation.
I0428 19:32:11.611945 22776 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:11.611949 22776 net.cpp:202] mnist does not need backward computation.
I0428 19:32:11.611953 22776 net.cpp:244] This network produces output accuracy
I0428 19:32:11.611955 22776 net.cpp:244] This network produces output loss
I0428 19:32:11.611968 22776 net.cpp:257] Network initialization done.
I0428 19:32:11.612027 22776 solver.cpp:56] Solver scaffolding done.
I0428 19:32:11.612391 22776 caffe.cpp:248] Starting Optimization
I0428 19:32:11.612398 22776 solver.cpp:273] Solving LeNet
I0428 19:32:11.612422 22776 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:11.613981 22776 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:11.617847 22776 blocking_queue.cpp:49] Waiting for data
I0428 19:32:11.690353 22783 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:11.690917 22776 solver.cpp:398]     Test net output #0: accuracy = 0.0947
I0428 19:32:11.690950 22776 solver.cpp:398]     Test net output #1: loss = 2.30478 (* 1 = 2.30478 loss)
I0428 19:32:11.693275 22776 solver.cpp:219] Iteration 0 (0 iter/s, 0.0808223s/100 iters), loss = 2.30749
I0428 19:32:11.693323 22776 solver.cpp:238]     Train net output #0: loss = 2.30749 (* 1 = 2.30749 loss)
I0428 19:32:11.693349 22776 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:11.768638 22776 solver.cpp:219] Iteration 100 (1327.94 iter/s, 0.0753049s/100 iters), loss = 0.822504
I0428 19:32:11.768677 22776 solver.cpp:238]     Train net output #0: loss = 0.822504 (* 1 = 0.822504 loss)
I0428 19:32:11.768684 22776 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:11.839141 22776 solver.cpp:219] Iteration 200 (1419.07 iter/s, 0.0704686s/100 iters), loss = 0.561073
I0428 19:32:11.839184 22776 solver.cpp:238]     Train net output #0: loss = 0.561073 (* 1 = 0.561073 loss)
I0428 19:32:11.839193 22776 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:11.921461 22776 solver.cpp:219] Iteration 300 (1215.58 iter/s, 0.0822651s/100 iters), loss = 0.915811
I0428 19:32:11.921506 22776 solver.cpp:238]     Train net output #0: loss = 0.915811 (* 1 = 0.915811 loss)
I0428 19:32:11.921517 22776 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:11.995358 22776 solver.cpp:219] Iteration 400 (1354.21 iter/s, 0.0738437s/100 iters), loss = 0.431598
I0428 19:32:11.995388 22776 solver.cpp:238]     Train net output #0: loss = 0.431598 (* 1 = 0.431598 loss)
I0428 19:32:11.995396 22776 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:12.066167 22776 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:12.142535 22783 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:12.143256 22776 solver.cpp:398]     Test net output #0: accuracy = 0.7554
I0428 19:32:12.143296 22776 solver.cpp:398]     Test net output #1: loss = 0.637989 (* 1 = 0.637989 loss)
I0428 19:32:12.144170 22776 solver.cpp:219] Iteration 500 (672.207 iter/s, 0.148764s/100 iters), loss = 0.565048
I0428 19:32:12.144228 22776 solver.cpp:238]     Train net output #0: loss = 0.565048 (* 1 = 0.565048 loss)
I0428 19:32:12.144243 22776 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:12.223747 22776 solver.cpp:219] Iteration 600 (1257.71 iter/s, 0.0795095s/100 iters), loss = 0.592256
I0428 19:32:12.223781 22776 solver.cpp:238]     Train net output #0: loss = 0.592256 (* 1 = 0.592256 loss)
I0428 19:32:12.223790 22776 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:12.293056 22776 solver.cpp:219] Iteration 700 (1443.72 iter/s, 0.0692654s/100 iters), loss = 0.847747
I0428 19:32:12.293087 22776 solver.cpp:238]     Train net output #0: loss = 0.847747 (* 1 = 0.847747 loss)
I0428 19:32:12.293094 22776 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:12.378823 22776 solver.cpp:219] Iteration 800 (1166.6 iter/s, 0.0857191s/100 iters), loss = 0.634651
I0428 19:32:12.378877 22776 solver.cpp:238]     Train net output #0: loss = 0.634651 (* 1 = 0.634651 loss)
I0428 19:32:12.378890 22776 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:12.460959 22776 solver.cpp:219] Iteration 900 (1218.39 iter/s, 0.0820756s/100 iters), loss = 0.796369
I0428 19:32:12.460994 22776 solver.cpp:238]     Train net output #0: loss = 0.796369 (* 1 = 0.796369 loss)
I0428 19:32:12.461004 22776 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:12.485029 22782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:12.530298 22776 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:12.531563 22776 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:12.532300 22776 solver.cpp:311] Iteration 1000, loss = 0.713618
I0428 19:32:12.532321 22776 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:12.607435 22783 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:12.607995 22776 solver.cpp:398]     Test net output #0: accuracy = 0.7705
I0428 19:32:12.608019 22776 solver.cpp:398]     Test net output #1: loss = 0.580283 (* 1 = 0.580283 loss)
I0428 19:32:12.608026 22776 solver.cpp:316] Optimization Done.
I0428 19:32:12.608032 22776 caffe.cpp:259] Optimization Done.
