I0428 19:58:45.605669 29076 caffe.cpp:218] Using GPUs 0
I0428 19:58:45.642128 29076 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:46.158138 29076 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test828.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:46.158270 29076 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test828.prototxt
I0428 19:58:46.158627 29076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:46.158643 29076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:46.158727 29076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:46.158792 29076 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:46.158888 29076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:46.158910 29076 net.cpp:86] Creating Layer mnist
I0428 19:58:46.158917 29076 net.cpp:382] mnist -> data
I0428 19:58:46.158939 29076 net.cpp:382] mnist -> label
I0428 19:58:46.159988 29076 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:46.162395 29076 net.cpp:124] Setting up mnist
I0428 19:58:46.162412 29076 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:46.162420 29076 net.cpp:131] Top shape: 64 (64)
I0428 19:58:46.162422 29076 net.cpp:139] Memory required for data: 200960
I0428 19:58:46.162436 29076 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:46.162451 29076 net.cpp:86] Creating Layer conv0
I0428 19:58:46.162457 29076 net.cpp:408] conv0 <- data
I0428 19:58:46.162469 29076 net.cpp:382] conv0 -> conv0
I0428 19:58:46.448357 29076 net.cpp:124] Setting up conv0
I0428 19:58:46.448387 29076 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:46.448392 29076 net.cpp:139] Memory required for data: 1675520
I0428 19:58:46.448431 29076 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:46.448446 29076 net.cpp:86] Creating Layer pool0
I0428 19:58:46.448451 29076 net.cpp:408] pool0 <- conv0
I0428 19:58:46.448457 29076 net.cpp:382] pool0 -> pool0
I0428 19:58:46.448513 29076 net.cpp:124] Setting up pool0
I0428 19:58:46.448525 29076 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:46.448529 29076 net.cpp:139] Memory required for data: 2044160
I0428 19:58:46.448534 29076 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:46.448545 29076 net.cpp:86] Creating Layer conv1
I0428 19:58:46.448549 29076 net.cpp:408] conv1 <- pool0
I0428 19:58:46.448555 29076 net.cpp:382] conv1 -> conv1
I0428 19:58:46.451643 29076 net.cpp:124] Setting up conv1
I0428 19:58:46.451661 29076 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:46.451666 29076 net.cpp:139] Memory required for data: 2208000
I0428 19:58:46.451676 29076 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:46.451685 29076 net.cpp:86] Creating Layer pool1
I0428 19:58:46.451691 29076 net.cpp:408] pool1 <- conv1
I0428 19:58:46.451697 29076 net.cpp:382] pool1 -> pool1
I0428 19:58:46.451741 29076 net.cpp:124] Setting up pool1
I0428 19:58:46.451747 29076 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:46.451750 29076 net.cpp:139] Memory required for data: 2248960
I0428 19:58:46.451755 29076 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:46.451762 29076 net.cpp:86] Creating Layer ip1
I0428 19:58:46.451766 29076 net.cpp:408] ip1 <- pool1
I0428 19:58:46.451771 29076 net.cpp:382] ip1 -> ip1
I0428 19:58:46.452889 29076 net.cpp:124] Setting up ip1
I0428 19:58:46.452904 29076 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:46.452909 29076 net.cpp:139] Memory required for data: 2261760
I0428 19:58:46.452919 29076 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:46.452926 29076 net.cpp:86] Creating Layer relu1
I0428 19:58:46.452930 29076 net.cpp:408] relu1 <- ip1
I0428 19:58:46.452937 29076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:46.453137 29076 net.cpp:124] Setting up relu1
I0428 19:58:46.453147 29076 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:46.453151 29076 net.cpp:139] Memory required for data: 2274560
I0428 19:58:46.453155 29076 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:46.453162 29076 net.cpp:86] Creating Layer ip2
I0428 19:58:46.453166 29076 net.cpp:408] ip2 <- ip1
I0428 19:58:46.453172 29076 net.cpp:382] ip2 -> ip2
I0428 19:58:46.453287 29076 net.cpp:124] Setting up ip2
I0428 19:58:46.453295 29076 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:46.453299 29076 net.cpp:139] Memory required for data: 2277120
I0428 19:58:46.453305 29076 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:46.453312 29076 net.cpp:86] Creating Layer relu2
I0428 19:58:46.453316 29076 net.cpp:408] relu2 <- ip2
I0428 19:58:46.453321 29076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:46.454159 29076 net.cpp:124] Setting up relu2
I0428 19:58:46.454174 29076 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:46.454177 29076 net.cpp:139] Memory required for data: 2279680
I0428 19:58:46.454181 29076 layer_factory.hpp:77] Creating layer loss
I0428 19:58:46.454190 29076 net.cpp:86] Creating Layer loss
I0428 19:58:46.454193 29076 net.cpp:408] loss <- ip2
I0428 19:58:46.454198 29076 net.cpp:408] loss <- label
I0428 19:58:46.454205 29076 net.cpp:382] loss -> loss
I0428 19:58:46.454228 29076 layer_factory.hpp:77] Creating layer loss
I0428 19:58:46.454499 29076 net.cpp:124] Setting up loss
I0428 19:58:46.454509 29076 net.cpp:131] Top shape: (1)
I0428 19:58:46.454514 29076 net.cpp:134]     with loss weight 1
I0428 19:58:46.454529 29076 net.cpp:139] Memory required for data: 2279684
I0428 19:58:46.454532 29076 net.cpp:200] loss needs backward computation.
I0428 19:58:46.454536 29076 net.cpp:200] relu2 needs backward computation.
I0428 19:58:46.454540 29076 net.cpp:200] ip2 needs backward computation.
I0428 19:58:46.454543 29076 net.cpp:200] relu1 needs backward computation.
I0428 19:58:46.454547 29076 net.cpp:200] ip1 needs backward computation.
I0428 19:58:46.454563 29076 net.cpp:200] pool1 needs backward computation.
I0428 19:58:46.454567 29076 net.cpp:200] conv1 needs backward computation.
I0428 19:58:46.454571 29076 net.cpp:200] pool0 needs backward computation.
I0428 19:58:46.454576 29076 net.cpp:200] conv0 needs backward computation.
I0428 19:58:46.454579 29076 net.cpp:202] mnist does not need backward computation.
I0428 19:58:46.454583 29076 net.cpp:244] This network produces output loss
I0428 19:58:46.454593 29076 net.cpp:257] Network initialization done.
I0428 19:58:46.454932 29076 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test828.prototxt
I0428 19:58:46.454962 29076 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:46.455059 29076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:46.455132 29076 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:46.455183 29076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:46.455198 29076 net.cpp:86] Creating Layer mnist
I0428 19:58:46.455204 29076 net.cpp:382] mnist -> data
I0428 19:58:46.455211 29076 net.cpp:382] mnist -> label
I0428 19:58:46.455312 29076 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:46.457646 29076 net.cpp:124] Setting up mnist
I0428 19:58:46.457662 29076 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:46.457669 29076 net.cpp:131] Top shape: 100 (100)
I0428 19:58:46.457674 29076 net.cpp:139] Memory required for data: 314000
I0428 19:58:46.457677 29076 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:46.457703 29076 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:46.457708 29076 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:46.457715 29076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:46.457722 29076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:46.457774 29076 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:46.457801 29076 net.cpp:131] Top shape: 100 (100)
I0428 19:58:46.457806 29076 net.cpp:131] Top shape: 100 (100)
I0428 19:58:46.457810 29076 net.cpp:139] Memory required for data: 314800
I0428 19:58:46.457813 29076 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:46.457823 29076 net.cpp:86] Creating Layer conv0
I0428 19:58:46.457828 29076 net.cpp:408] conv0 <- data
I0428 19:58:46.457834 29076 net.cpp:382] conv0 -> conv0
I0428 19:58:46.459666 29076 net.cpp:124] Setting up conv0
I0428 19:58:46.459683 29076 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:46.459688 29076 net.cpp:139] Memory required for data: 2618800
I0428 19:58:46.459699 29076 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:46.459707 29076 net.cpp:86] Creating Layer pool0
I0428 19:58:46.459712 29076 net.cpp:408] pool0 <- conv0
I0428 19:58:46.459717 29076 net.cpp:382] pool0 -> pool0
I0428 19:58:46.459758 29076 net.cpp:124] Setting up pool0
I0428 19:58:46.459764 29076 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:46.459769 29076 net.cpp:139] Memory required for data: 3194800
I0428 19:58:46.459771 29076 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:46.459781 29076 net.cpp:86] Creating Layer conv1
I0428 19:58:46.459785 29076 net.cpp:408] conv1 <- pool0
I0428 19:58:46.459791 29076 net.cpp:382] conv1 -> conv1
I0428 19:58:46.462188 29076 net.cpp:124] Setting up conv1
I0428 19:58:46.462204 29076 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:46.462209 29076 net.cpp:139] Memory required for data: 3450800
I0428 19:58:46.462219 29076 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:46.462226 29076 net.cpp:86] Creating Layer pool1
I0428 19:58:46.462230 29076 net.cpp:408] pool1 <- conv1
I0428 19:58:46.462237 29076 net.cpp:382] pool1 -> pool1
I0428 19:58:46.462283 29076 net.cpp:124] Setting up pool1
I0428 19:58:46.462290 29076 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:46.462293 29076 net.cpp:139] Memory required for data: 3514800
I0428 19:58:46.462297 29076 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:46.462304 29076 net.cpp:86] Creating Layer ip1
I0428 19:58:46.462308 29076 net.cpp:408] ip1 <- pool1
I0428 19:58:46.462313 29076 net.cpp:382] ip1 -> ip1
I0428 19:58:46.462478 29076 net.cpp:124] Setting up ip1
I0428 19:58:46.462487 29076 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:46.462491 29076 net.cpp:139] Memory required for data: 3534800
I0428 19:58:46.462499 29076 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:46.462505 29076 net.cpp:86] Creating Layer relu1
I0428 19:58:46.462509 29076 net.cpp:408] relu1 <- ip1
I0428 19:58:46.462514 29076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:46.462703 29076 net.cpp:124] Setting up relu1
I0428 19:58:46.462713 29076 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:46.462718 29076 net.cpp:139] Memory required for data: 3554800
I0428 19:58:46.462723 29076 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:46.462731 29076 net.cpp:86] Creating Layer ip2
I0428 19:58:46.462735 29076 net.cpp:408] ip2 <- ip1
I0428 19:58:46.462741 29076 net.cpp:382] ip2 -> ip2
I0428 19:58:46.462857 29076 net.cpp:124] Setting up ip2
I0428 19:58:46.462865 29076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:46.462868 29076 net.cpp:139] Memory required for data: 3558800
I0428 19:58:46.462875 29076 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:46.462880 29076 net.cpp:86] Creating Layer relu2
I0428 19:58:46.462884 29076 net.cpp:408] relu2 <- ip2
I0428 19:58:46.462889 29076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:46.463112 29076 net.cpp:124] Setting up relu2
I0428 19:58:46.463122 29076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:46.463131 29076 net.cpp:139] Memory required for data: 3562800
I0428 19:58:46.463135 29076 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:46.463141 29076 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:46.463145 29076 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:46.463151 29076 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:46.463171 29076 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:46.463224 29076 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:46.463233 29076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:46.463238 29076 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:46.463251 29076 net.cpp:139] Memory required for data: 3570800
I0428 19:58:46.463256 29076 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:46.463263 29076 net.cpp:86] Creating Layer accuracy
I0428 19:58:46.463266 29076 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:46.463271 29076 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:46.463277 29076 net.cpp:382] accuracy -> accuracy
I0428 19:58:46.463286 29076 net.cpp:124] Setting up accuracy
I0428 19:58:46.463290 29076 net.cpp:131] Top shape: (1)
I0428 19:58:46.463294 29076 net.cpp:139] Memory required for data: 3570804
I0428 19:58:46.463297 29076 layer_factory.hpp:77] Creating layer loss
I0428 19:58:46.463304 29076 net.cpp:86] Creating Layer loss
I0428 19:58:46.463307 29076 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:46.463312 29076 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:46.463317 29076 net.cpp:382] loss -> loss
I0428 19:58:46.463325 29076 layer_factory.hpp:77] Creating layer loss
I0428 19:58:46.463584 29076 net.cpp:124] Setting up loss
I0428 19:58:46.463598 29076 net.cpp:131] Top shape: (1)
I0428 19:58:46.463603 29076 net.cpp:134]     with loss weight 1
I0428 19:58:46.463610 29076 net.cpp:139] Memory required for data: 3570808
I0428 19:58:46.463615 29076 net.cpp:200] loss needs backward computation.
I0428 19:58:46.463619 29076 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:46.463632 29076 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:46.463636 29076 net.cpp:200] relu2 needs backward computation.
I0428 19:58:46.463640 29076 net.cpp:200] ip2 needs backward computation.
I0428 19:58:46.463644 29076 net.cpp:200] relu1 needs backward computation.
I0428 19:58:46.463647 29076 net.cpp:200] ip1 needs backward computation.
I0428 19:58:46.463651 29076 net.cpp:200] pool1 needs backward computation.
I0428 19:58:46.463655 29076 net.cpp:200] conv1 needs backward computation.
I0428 19:58:46.463660 29076 net.cpp:200] pool0 needs backward computation.
I0428 19:58:46.463663 29076 net.cpp:200] conv0 needs backward computation.
I0428 19:58:46.463667 29076 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:46.463672 29076 net.cpp:202] mnist does not need backward computation.
I0428 19:58:46.463675 29076 net.cpp:244] This network produces output accuracy
I0428 19:58:46.463680 29076 net.cpp:244] This network produces output loss
I0428 19:58:46.463692 29076 net.cpp:257] Network initialization done.
I0428 19:58:46.463740 29076 solver.cpp:56] Solver scaffolding done.
I0428 19:58:46.464051 29076 caffe.cpp:248] Starting Optimization
I0428 19:58:46.464058 29076 solver.cpp:273] Solving LeNet
I0428 19:58:46.464061 29076 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:46.464993 29076 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:46.468639 29076 blocking_queue.cpp:49] Waiting for data
I0428 19:58:46.540632 29083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:46.541138 29076 solver.cpp:398]     Test net output #0: accuracy = 0.1218
I0428 19:58:46.541160 29076 solver.cpp:398]     Test net output #1: loss = 2.31046 (* 1 = 2.31046 loss)
I0428 19:58:46.543745 29076 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796529s/100 iters), loss = 2.26994
I0428 19:58:46.543772 29076 solver.cpp:238]     Train net output #0: loss = 2.26994 (* 1 = 2.26994 loss)
I0428 19:58:46.543784 29076 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:46.625991 29076 solver.cpp:219] Iteration 100 (1216.43 iter/s, 0.0822076s/100 iters), loss = 0.657047
I0428 19:58:46.626029 29076 solver.cpp:238]     Train net output #0: loss = 0.657047 (* 1 = 0.657047 loss)
I0428 19:58:46.626039 29076 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:46.715276 29076 solver.cpp:219] Iteration 200 (1120.61 iter/s, 0.0892375s/100 iters), loss = 0.239878
I0428 19:58:46.715337 29076 solver.cpp:238]     Train net output #0: loss = 0.239878 (* 1 = 0.239878 loss)
I0428 19:58:46.715348 29076 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:46.793336 29076 solver.cpp:219] Iteration 300 (1282.17 iter/s, 0.077993s/100 iters), loss = 0.239385
I0428 19:58:46.793366 29076 solver.cpp:238]     Train net output #0: loss = 0.239385 (* 1 = 0.239385 loss)
I0428 19:58:46.793373 29076 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:46.867473 29076 solver.cpp:219] Iteration 400 (1349.55 iter/s, 0.0740987s/100 iters), loss = 0.195708
I0428 19:58:46.867502 29076 solver.cpp:238]     Train net output #0: loss = 0.195708 (* 1 = 0.195708 loss)
I0428 19:58:46.867509 29076 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:46.940912 29076 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:46.994315 29083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:46.994813 29076 solver.cpp:398]     Test net output #0: accuracy = 0.9577
I0428 19:58:46.994837 29076 solver.cpp:398]     Test net output #1: loss = 0.139087 (* 1 = 0.139087 loss)
I0428 19:58:46.995615 29076 solver.cpp:219] Iteration 500 (780.632 iter/s, 0.128101s/100 iters), loss = 0.15495
I0428 19:58:46.995641 29076 solver.cpp:238]     Train net output #0: loss = 0.15495 (* 1 = 0.15495 loss)
I0428 19:58:46.995649 29076 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:47.071737 29076 solver.cpp:219] Iteration 600 (1314.33 iter/s, 0.0760842s/100 iters), loss = 0.142592
I0428 19:58:47.071768 29076 solver.cpp:238]     Train net output #0: loss = 0.142592 (* 1 = 0.142592 loss)
I0428 19:58:47.071775 29076 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:47.162063 29076 solver.cpp:219] Iteration 700 (1107.63 iter/s, 0.0902831s/100 iters), loss = 0.218811
I0428 19:58:47.162103 29076 solver.cpp:238]     Train net output #0: loss = 0.218811 (* 1 = 0.218811 loss)
I0428 19:58:47.162113 29076 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:47.240856 29076 solver.cpp:219] Iteration 800 (1269.91 iter/s, 0.0787456s/100 iters), loss = 0.292855
I0428 19:58:47.240887 29076 solver.cpp:238]     Train net output #0: loss = 0.292855 (* 1 = 0.292855 loss)
I0428 19:58:47.240895 29076 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:47.316535 29076 solver.cpp:219] Iteration 900 (1322.09 iter/s, 0.0756379s/100 iters), loss = 0.253537
I0428 19:58:47.316565 29076 solver.cpp:238]     Train net output #0: loss = 0.253537 (* 1 = 0.253537 loss)
I0428 19:58:47.316573 29076 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:47.341897 29082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:47.391425 29076 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:47.392233 29076 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:47.393009 29076 solver.cpp:311] Iteration 1000, loss = 0.0891021
I0428 19:58:47.393043 29076 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:47.451758 29083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:47.452337 29076 solver.cpp:398]     Test net output #0: accuracy = 0.9737
I0428 19:58:47.452365 29076 solver.cpp:398]     Test net output #1: loss = 0.085106 (* 1 = 0.085106 loss)
I0428 19:58:47.452373 29076 solver.cpp:316] Optimization Done.
I0428 19:58:47.452378 29076 caffe.cpp:259] Optimization Done.
