I0428 20:27:49.953337  3252 caffe.cpp:218] Using GPUs 0
I0428 20:27:49.981035  3252 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:50.423864  3252 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1495.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:50.424044  3252 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1495.prototxt
I0428 20:27:50.424439  3252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:50.424471  3252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:50.424551  3252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:27:50.424612  3252 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:50.424693  3252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:50.424712  3252 net.cpp:86] Creating Layer mnist
I0428 20:27:50.424720  3252 net.cpp:382] mnist -> data
I0428 20:27:50.424737  3252 net.cpp:382] mnist -> label
I0428 20:27:50.425740  3252 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:50.427960  3252 net.cpp:124] Setting up mnist
I0428 20:27:50.427994  3252 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:50.427999  3252 net.cpp:131] Top shape: 64 (64)
I0428 20:27:50.428002  3252 net.cpp:139] Memory required for data: 200960
I0428 20:27:50.428009  3252 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:50.428022  3252 net.cpp:86] Creating Layer conv0
I0428 20:27:50.428040  3252 net.cpp:408] conv0 <- data
I0428 20:27:50.428051  3252 net.cpp:382] conv0 -> conv0
I0428 20:27:50.657779  3252 net.cpp:124] Setting up conv0
I0428 20:27:50.657820  3252 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:50.657824  3252 net.cpp:139] Memory required for data: 14946560
I0428 20:27:50.657838  3252 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:50.657850  3252 net.cpp:86] Creating Layer pool0
I0428 20:27:50.657855  3252 net.cpp:408] pool0 <- conv0
I0428 20:27:50.657876  3252 net.cpp:382] pool0 -> pool0
I0428 20:27:50.657922  3252 net.cpp:124] Setting up pool0
I0428 20:27:50.657939  3252 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:50.657943  3252 net.cpp:139] Memory required for data: 18632960
I0428 20:27:50.657945  3252 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:50.657956  3252 net.cpp:86] Creating Layer conv1
I0428 20:27:50.657959  3252 net.cpp:408] conv1 <- pool0
I0428 20:27:50.657964  3252 net.cpp:382] conv1 -> conv1
I0428 20:27:50.660939  3252 net.cpp:124] Setting up conv1
I0428 20:27:50.660953  3252 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:50.660957  3252 net.cpp:139] Memory required for data: 18714880
I0428 20:27:50.660965  3252 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:50.660972  3252 net.cpp:86] Creating Layer pool1
I0428 20:27:50.660990  3252 net.cpp:408] pool1 <- conv1
I0428 20:27:50.660995  3252 net.cpp:382] pool1 -> pool1
I0428 20:27:50.661033  3252 net.cpp:124] Setting up pool1
I0428 20:27:50.661038  3252 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:50.661041  3252 net.cpp:139] Memory required for data: 18735360
I0428 20:27:50.661061  3252 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:50.661067  3252 net.cpp:86] Creating Layer ip1
I0428 20:27:50.661069  3252 net.cpp:408] ip1 <- pool1
I0428 20:27:50.661074  3252 net.cpp:382] ip1 -> ip1
I0428 20:27:50.661172  3252 net.cpp:124] Setting up ip1
I0428 20:27:50.661180  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.661185  3252 net.cpp:139] Memory required for data: 18737920
I0428 20:27:50.661191  3252 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:50.661196  3252 net.cpp:86] Creating Layer relu1
I0428 20:27:50.661200  3252 net.cpp:408] relu1 <- ip1
I0428 20:27:50.661203  3252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:50.661360  3252 net.cpp:124] Setting up relu1
I0428 20:27:50.661382  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.661386  3252 net.cpp:139] Memory required for data: 18740480
I0428 20:27:50.661388  3252 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:50.661394  3252 net.cpp:86] Creating Layer ip2
I0428 20:27:50.661397  3252 net.cpp:408] ip2 <- ip1
I0428 20:27:50.661401  3252 net.cpp:382] ip2 -> ip2
I0428 20:27:50.661487  3252 net.cpp:124] Setting up ip2
I0428 20:27:50.661494  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.661496  3252 net.cpp:139] Memory required for data: 18743040
I0428 20:27:50.661501  3252 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:50.661507  3252 net.cpp:86] Creating Layer relu2
I0428 20:27:50.661509  3252 net.cpp:408] relu2 <- ip2
I0428 20:27:50.661514  3252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:50.662273  3252 net.cpp:124] Setting up relu2
I0428 20:27:50.662286  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.662305  3252 net.cpp:139] Memory required for data: 18745600
I0428 20:27:50.662308  3252 layer_factory.hpp:77] Creating layer ip3
I0428 20:27:50.662315  3252 net.cpp:86] Creating Layer ip3
I0428 20:27:50.662319  3252 net.cpp:408] ip3 <- ip2
I0428 20:27:50.662324  3252 net.cpp:382] ip3 -> ip3
I0428 20:27:50.662420  3252 net.cpp:124] Setting up ip3
I0428 20:27:50.662428  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.662431  3252 net.cpp:139] Memory required for data: 18748160
I0428 20:27:50.662439  3252 layer_factory.hpp:77] Creating layer relu3
I0428 20:27:50.662444  3252 net.cpp:86] Creating Layer relu3
I0428 20:27:50.662447  3252 net.cpp:408] relu3 <- ip3
I0428 20:27:50.662451  3252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:27:50.662621  3252 net.cpp:124] Setting up relu3
I0428 20:27:50.662632  3252 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:50.662636  3252 net.cpp:139] Memory required for data: 18750720
I0428 20:27:50.662638  3252 layer_factory.hpp:77] Creating layer loss
I0428 20:27:50.662644  3252 net.cpp:86] Creating Layer loss
I0428 20:27:50.662647  3252 net.cpp:408] loss <- ip3
I0428 20:27:50.662650  3252 net.cpp:408] loss <- label
I0428 20:27:50.662655  3252 net.cpp:382] loss -> loss
I0428 20:27:50.662673  3252 layer_factory.hpp:77] Creating layer loss
I0428 20:27:50.662901  3252 net.cpp:124] Setting up loss
I0428 20:27:50.662912  3252 net.cpp:131] Top shape: (1)
I0428 20:27:50.662915  3252 net.cpp:134]     with loss weight 1
I0428 20:27:50.662928  3252 net.cpp:139] Memory required for data: 18750724
I0428 20:27:50.662931  3252 net.cpp:200] loss needs backward computation.
I0428 20:27:50.662935  3252 net.cpp:200] relu3 needs backward computation.
I0428 20:27:50.662938  3252 net.cpp:200] ip3 needs backward computation.
I0428 20:27:50.662941  3252 net.cpp:200] relu2 needs backward computation.
I0428 20:27:50.662943  3252 net.cpp:200] ip2 needs backward computation.
I0428 20:27:50.662946  3252 net.cpp:200] relu1 needs backward computation.
I0428 20:27:50.662950  3252 net.cpp:200] ip1 needs backward computation.
I0428 20:27:50.662952  3252 net.cpp:200] pool1 needs backward computation.
I0428 20:27:50.662955  3252 net.cpp:200] conv1 needs backward computation.
I0428 20:27:50.662958  3252 net.cpp:200] pool0 needs backward computation.
I0428 20:27:50.662961  3252 net.cpp:200] conv0 needs backward computation.
I0428 20:27:50.662964  3252 net.cpp:202] mnist does not need backward computation.
I0428 20:27:50.662966  3252 net.cpp:244] This network produces output loss
I0428 20:27:50.662976  3252 net.cpp:257] Network initialization done.
I0428 20:27:50.663327  3252 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1495.prototxt
I0428 20:27:50.663384  3252 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:50.663475  3252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:27:50.663566  3252 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:50.663612  3252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:50.663625  3252 net.cpp:86] Creating Layer mnist
I0428 20:27:50.663630  3252 net.cpp:382] mnist -> data
I0428 20:27:50.663636  3252 net.cpp:382] mnist -> label
I0428 20:27:50.663717  3252 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:50.665802  3252 net.cpp:124] Setting up mnist
I0428 20:27:50.665846  3252 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:50.665851  3252 net.cpp:131] Top shape: 100 (100)
I0428 20:27:50.665854  3252 net.cpp:139] Memory required for data: 314000
I0428 20:27:50.665858  3252 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:50.665885  3252 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:50.665889  3252 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:50.665894  3252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:50.665900  3252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:50.665947  3252 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:50.665954  3252 net.cpp:131] Top shape: 100 (100)
I0428 20:27:50.665958  3252 net.cpp:131] Top shape: 100 (100)
I0428 20:27:50.665961  3252 net.cpp:139] Memory required for data: 314800
I0428 20:27:50.665964  3252 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:50.665972  3252 net.cpp:86] Creating Layer conv0
I0428 20:27:50.665976  3252 net.cpp:408] conv0 <- data
I0428 20:27:50.665980  3252 net.cpp:382] conv0 -> conv0
I0428 20:27:50.667686  3252 net.cpp:124] Setting up conv0
I0428 20:27:50.667699  3252 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:50.667703  3252 net.cpp:139] Memory required for data: 23354800
I0428 20:27:50.667727  3252 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:50.667733  3252 net.cpp:86] Creating Layer pool0
I0428 20:27:50.667737  3252 net.cpp:408] pool0 <- conv0
I0428 20:27:50.667742  3252 net.cpp:382] pool0 -> pool0
I0428 20:27:50.667791  3252 net.cpp:124] Setting up pool0
I0428 20:27:50.667796  3252 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:50.667799  3252 net.cpp:139] Memory required for data: 29114800
I0428 20:27:50.667803  3252 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:50.667810  3252 net.cpp:86] Creating Layer conv1
I0428 20:27:50.667814  3252 net.cpp:408] conv1 <- pool0
I0428 20:27:50.667817  3252 net.cpp:382] conv1 -> conv1
I0428 20:27:50.669378  3252 net.cpp:124] Setting up conv1
I0428 20:27:50.669407  3252 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:50.669411  3252 net.cpp:139] Memory required for data: 29242800
I0428 20:27:50.669420  3252 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:50.669427  3252 net.cpp:86] Creating Layer pool1
I0428 20:27:50.669431  3252 net.cpp:408] pool1 <- conv1
I0428 20:27:50.669441  3252 net.cpp:382] pool1 -> pool1
I0428 20:27:50.669476  3252 net.cpp:124] Setting up pool1
I0428 20:27:50.669497  3252 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:50.669499  3252 net.cpp:139] Memory required for data: 29274800
I0428 20:27:50.669502  3252 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:50.669508  3252 net.cpp:86] Creating Layer ip1
I0428 20:27:50.669517  3252 net.cpp:408] ip1 <- pool1
I0428 20:27:50.669522  3252 net.cpp:382] ip1 -> ip1
I0428 20:27:50.669618  3252 net.cpp:124] Setting up ip1
I0428 20:27:50.669626  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.669641  3252 net.cpp:139] Memory required for data: 29278800
I0428 20:27:50.669647  3252 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:50.669652  3252 net.cpp:86] Creating Layer relu1
I0428 20:27:50.669656  3252 net.cpp:408] relu1 <- ip1
I0428 20:27:50.669661  3252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:50.669809  3252 net.cpp:124] Setting up relu1
I0428 20:27:50.669818  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.669821  3252 net.cpp:139] Memory required for data: 29282800
I0428 20:27:50.669842  3252 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:50.669855  3252 net.cpp:86] Creating Layer ip2
I0428 20:27:50.669859  3252 net.cpp:408] ip2 <- ip1
I0428 20:27:50.669864  3252 net.cpp:382] ip2 -> ip2
I0428 20:27:50.669971  3252 net.cpp:124] Setting up ip2
I0428 20:27:50.669982  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.669987  3252 net.cpp:139] Memory required for data: 29286800
I0428 20:27:50.669996  3252 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:50.670004  3252 net.cpp:86] Creating Layer relu2
I0428 20:27:50.670009  3252 net.cpp:408] relu2 <- ip2
I0428 20:27:50.670032  3252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:50.670238  3252 net.cpp:124] Setting up relu2
I0428 20:27:50.670246  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.670249  3252 net.cpp:139] Memory required for data: 29290800
I0428 20:27:50.670253  3252 layer_factory.hpp:77] Creating layer ip3
I0428 20:27:50.670259  3252 net.cpp:86] Creating Layer ip3
I0428 20:27:50.670262  3252 net.cpp:408] ip3 <- ip2
I0428 20:27:50.670267  3252 net.cpp:382] ip3 -> ip3
I0428 20:27:50.670390  3252 net.cpp:124] Setting up ip3
I0428 20:27:50.670397  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.670400  3252 net.cpp:139] Memory required for data: 29294800
I0428 20:27:50.670408  3252 layer_factory.hpp:77] Creating layer relu3
I0428 20:27:50.670413  3252 net.cpp:86] Creating Layer relu3
I0428 20:27:50.670415  3252 net.cpp:408] relu3 <- ip3
I0428 20:27:50.670419  3252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:27:50.671233  3252 net.cpp:124] Setting up relu3
I0428 20:27:50.671259  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.671273  3252 net.cpp:139] Memory required for data: 29298800
I0428 20:27:50.671278  3252 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:27:50.671284  3252 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:27:50.671288  3252 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:27:50.671293  3252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:27:50.671298  3252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:27:50.671334  3252 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:27:50.671337  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.671341  3252 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:50.671344  3252 net.cpp:139] Memory required for data: 29306800
I0428 20:27:50.671347  3252 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:50.671352  3252 net.cpp:86] Creating Layer accuracy
I0428 20:27:50.671360  3252 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:27:50.671365  3252 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:50.671368  3252 net.cpp:382] accuracy -> accuracy
I0428 20:27:50.671375  3252 net.cpp:124] Setting up accuracy
I0428 20:27:50.671380  3252 net.cpp:131] Top shape: (1)
I0428 20:27:50.671382  3252 net.cpp:139] Memory required for data: 29306804
I0428 20:27:50.671385  3252 layer_factory.hpp:77] Creating layer loss
I0428 20:27:50.671388  3252 net.cpp:86] Creating Layer loss
I0428 20:27:50.671391  3252 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:27:50.671396  3252 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:50.671401  3252 net.cpp:382] loss -> loss
I0428 20:27:50.671409  3252 layer_factory.hpp:77] Creating layer loss
I0428 20:27:50.671660  3252 net.cpp:124] Setting up loss
I0428 20:27:50.671671  3252 net.cpp:131] Top shape: (1)
I0428 20:27:50.671674  3252 net.cpp:134]     with loss weight 1
I0428 20:27:50.671691  3252 net.cpp:139] Memory required for data: 29306808
I0428 20:27:50.671695  3252 net.cpp:200] loss needs backward computation.
I0428 20:27:50.671700  3252 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:50.671703  3252 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:27:50.671707  3252 net.cpp:200] relu3 needs backward computation.
I0428 20:27:50.671710  3252 net.cpp:200] ip3 needs backward computation.
I0428 20:27:50.671713  3252 net.cpp:200] relu2 needs backward computation.
I0428 20:27:50.671716  3252 net.cpp:200] ip2 needs backward computation.
I0428 20:27:50.671720  3252 net.cpp:200] relu1 needs backward computation.
I0428 20:27:50.671723  3252 net.cpp:200] ip1 needs backward computation.
I0428 20:27:50.671726  3252 net.cpp:200] pool1 needs backward computation.
I0428 20:27:50.671730  3252 net.cpp:200] conv1 needs backward computation.
I0428 20:27:50.671732  3252 net.cpp:200] pool0 needs backward computation.
I0428 20:27:50.671736  3252 net.cpp:200] conv0 needs backward computation.
I0428 20:27:50.671741  3252 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:50.671743  3252 net.cpp:202] mnist does not need backward computation.
I0428 20:27:50.671752  3252 net.cpp:244] This network produces output accuracy
I0428 20:27:50.671756  3252 net.cpp:244] This network produces output loss
I0428 20:27:50.671767  3252 net.cpp:257] Network initialization done.
I0428 20:27:50.671808  3252 solver.cpp:56] Solver scaffolding done.
I0428 20:27:50.672196  3252 caffe.cpp:248] Starting Optimization
I0428 20:27:50.672204  3252 solver.cpp:273] Solving LeNet
I0428 20:27:50.672224  3252 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:50.673153  3252 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:50.768220  3259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:50.770609  3252 solver.cpp:398]     Test net output #0: accuracy = 0.0843
I0428 20:27:50.770645  3252 solver.cpp:398]     Test net output #1: loss = 2.3087 (* 1 = 2.3087 loss)
I0428 20:27:50.774999  3252 solver.cpp:219] Iteration 0 (0 iter/s, 0.102734s/100 iters), loss = 2.28871
I0428 20:27:50.775038  3252 solver.cpp:238]     Train net output #0: loss = 2.28871 (* 1 = 2.28871 loss)
I0428 20:27:50.775064  3252 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:50.988981  3252 solver.cpp:219] Iteration 100 (467.425 iter/s, 0.213938s/100 iters), loss = 0.940037
I0428 20:27:50.989023  3252 solver.cpp:238]     Train net output #0: loss = 0.940037 (* 1 = 0.940037 loss)
I0428 20:27:50.989034  3252 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:51.207339  3252 solver.cpp:219] Iteration 200 (458.091 iter/s, 0.218297s/100 iters), loss = 0.509906
I0428 20:27:51.207388  3252 solver.cpp:238]     Train net output #0: loss = 0.509906 (* 1 = 0.509906 loss)
I0428 20:27:51.207401  3252 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:51.420871  3252 solver.cpp:219] Iteration 300 (468.451 iter/s, 0.213469s/100 iters), loss = 0.274084
I0428 20:27:51.420907  3252 solver.cpp:238]     Train net output #0: loss = 0.274084 (* 1 = 0.274084 loss)
I0428 20:27:51.420915  3252 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:51.635466  3252 solver.cpp:219] Iteration 400 (466.12 iter/s, 0.214537s/100 iters), loss = 0.326774
I0428 20:27:51.635520  3252 solver.cpp:238]     Train net output #0: loss = 0.326774 (* 1 = 0.326774 loss)
I0428 20:27:51.635532  3252 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:51.845262  3252 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:51.944712  3259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:51.947523  3252 solver.cpp:398]     Test net output #0: accuracy = 0.9257
I0428 20:27:51.947552  3252 solver.cpp:398]     Test net output #1: loss = 0.244296 (* 1 = 0.244296 loss)
I0428 20:27:51.949511  3252 solver.cpp:219] Iteration 500 (318.499 iter/s, 0.313973s/100 iters), loss = 0.248675
I0428 20:27:51.949548  3252 solver.cpp:238]     Train net output #0: loss = 0.248675 (* 1 = 0.248675 loss)
I0428 20:27:51.949575  3252 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:52.173980  3252 solver.cpp:219] Iteration 600 (445.604 iter/s, 0.224415s/100 iters), loss = 0.136789
I0428 20:27:52.174026  3252 solver.cpp:238]     Train net output #0: loss = 0.136789 (* 1 = 0.136789 loss)
I0428 20:27:52.174039  3252 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:52.393849  3252 solver.cpp:219] Iteration 700 (454.943 iter/s, 0.219808s/100 iters), loss = 0.244924
I0428 20:27:52.393887  3252 solver.cpp:238]     Train net output #0: loss = 0.244924 (* 1 = 0.244924 loss)
I0428 20:27:52.393896  3252 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:52.610852  3252 solver.cpp:219] Iteration 800 (460.943 iter/s, 0.216947s/100 iters), loss = 0.36649
I0428 20:27:52.610893  3252 solver.cpp:238]     Train net output #0: loss = 0.36649 (* 1 = 0.36649 loss)
I0428 20:27:52.610903  3252 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:52.818547  3252 solver.cpp:219] Iteration 900 (481.609 iter/s, 0.207638s/100 iters), loss = 0.181297
I0428 20:27:52.818581  3252 solver.cpp:238]     Train net output #0: loss = 0.181297 (* 1 = 0.181297 loss)
I0428 20:27:52.818589  3252 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:52.888803  3258 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:53.028563  3252 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:53.030313  3252 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:53.031426  3252 solver.cpp:311] Iteration 1000, loss = 0.135115
I0428 20:27:53.031450  3252 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:53.128617  3259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:53.131244  3252 solver.cpp:398]     Test net output #0: accuracy = 0.9541
I0428 20:27:53.131269  3252 solver.cpp:398]     Test net output #1: loss = 0.143564 (* 1 = 0.143564 loss)
I0428 20:27:53.131276  3252 solver.cpp:316] Optimization Done.
I0428 20:27:53.131283  3252 caffe.cpp:259] Optimization Done.
