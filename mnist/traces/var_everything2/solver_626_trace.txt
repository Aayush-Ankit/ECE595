I0428 19:51:10.993544 27217 caffe.cpp:218] Using GPUs 0
I0428 19:51:11.022224 27217 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:11.472199 27217 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test626.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:11.472316 27217 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test626.prototxt
I0428 19:51:11.472599 27217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:11.472611 27217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:11.472676 27217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:11.472729 27217 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:11.472859 27217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:11.472880 27217 net.cpp:86] Creating Layer mnist
I0428 19:51:11.472887 27217 net.cpp:382] mnist -> data
I0428 19:51:11.472906 27217 net.cpp:382] mnist -> label
I0428 19:51:11.473824 27217 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:11.476109 27217 net.cpp:124] Setting up mnist
I0428 19:51:11.476150 27217 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:11.476155 27217 net.cpp:131] Top shape: 64 (64)
I0428 19:51:11.476157 27217 net.cpp:139] Memory required for data: 200960
I0428 19:51:11.476163 27217 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:11.476177 27217 net.cpp:86] Creating Layer conv0
I0428 19:51:11.476182 27217 net.cpp:408] conv0 <- data
I0428 19:51:11.476191 27217 net.cpp:382] conv0 -> conv0
I0428 19:51:11.756767 27217 net.cpp:124] Setting up conv0
I0428 19:51:11.756803 27217 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:11.756808 27217 net.cpp:139] Memory required for data: 938240
I0428 19:51:11.756834 27217 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:11.756850 27217 net.cpp:86] Creating Layer pool0
I0428 19:51:11.756855 27217 net.cpp:408] pool0 <- conv0
I0428 19:51:11.756862 27217 net.cpp:382] pool0 -> pool0
I0428 19:51:11.756922 27217 net.cpp:124] Setting up pool0
I0428 19:51:11.756929 27217 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:11.756980 27217 net.cpp:139] Memory required for data: 1122560
I0428 19:51:11.756986 27217 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:11.757001 27217 net.cpp:86] Creating Layer conv1
I0428 19:51:11.757005 27217 net.cpp:408] conv1 <- pool0
I0428 19:51:11.757012 27217 net.cpp:382] conv1 -> conv1
I0428 19:51:11.760314 27217 net.cpp:124] Setting up conv1
I0428 19:51:11.760334 27217 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:11.760339 27217 net.cpp:139] Memory required for data: 1532160
I0428 19:51:11.760349 27217 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:11.760359 27217 net.cpp:86] Creating Layer pool1
I0428 19:51:11.760362 27217 net.cpp:408] pool1 <- conv1
I0428 19:51:11.760370 27217 net.cpp:382] pool1 -> pool1
I0428 19:51:11.760417 27217 net.cpp:124] Setting up pool1
I0428 19:51:11.760424 27217 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:11.760428 27217 net.cpp:139] Memory required for data: 1634560
I0428 19:51:11.760432 27217 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:11.760440 27217 net.cpp:86] Creating Layer ip1
I0428 19:51:11.760444 27217 net.cpp:408] ip1 <- pool1
I0428 19:51:11.760450 27217 net.cpp:382] ip1 -> ip1
I0428 19:51:11.760596 27217 net.cpp:124] Setting up ip1
I0428 19:51:11.760607 27217 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:11.760610 27217 net.cpp:139] Memory required for data: 1637120
I0428 19:51:11.760618 27217 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:11.760625 27217 net.cpp:86] Creating Layer relu1
I0428 19:51:11.760629 27217 net.cpp:408] relu1 <- ip1
I0428 19:51:11.760635 27217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:11.760850 27217 net.cpp:124] Setting up relu1
I0428 19:51:11.760862 27217 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:11.760867 27217 net.cpp:139] Memory required for data: 1639680
I0428 19:51:11.760871 27217 layer_factory.hpp:77] Creating layer loss
I0428 19:51:11.760879 27217 net.cpp:86] Creating Layer loss
I0428 19:51:11.760882 27217 net.cpp:408] loss <- ip1
I0428 19:51:11.760887 27217 net.cpp:408] loss <- label
I0428 19:51:11.760895 27217 net.cpp:382] loss -> loss
I0428 19:51:11.760915 27217 layer_factory.hpp:77] Creating layer loss
I0428 19:51:11.761901 27217 net.cpp:124] Setting up loss
I0428 19:51:11.761917 27217 net.cpp:131] Top shape: (1)
I0428 19:51:11.761922 27217 net.cpp:134]     with loss weight 1
I0428 19:51:11.761939 27217 net.cpp:139] Memory required for data: 1639684
I0428 19:51:11.761942 27217 net.cpp:200] loss needs backward computation.
I0428 19:51:11.761947 27217 net.cpp:200] relu1 needs backward computation.
I0428 19:51:11.761951 27217 net.cpp:200] ip1 needs backward computation.
I0428 19:51:11.761955 27217 net.cpp:200] pool1 needs backward computation.
I0428 19:51:11.761960 27217 net.cpp:200] conv1 needs backward computation.
I0428 19:51:11.761962 27217 net.cpp:200] pool0 needs backward computation.
I0428 19:51:11.761966 27217 net.cpp:200] conv0 needs backward computation.
I0428 19:51:11.761970 27217 net.cpp:202] mnist does not need backward computation.
I0428 19:51:11.761975 27217 net.cpp:244] This network produces output loss
I0428 19:51:11.761983 27217 net.cpp:257] Network initialization done.
I0428 19:51:11.762300 27217 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test626.prototxt
I0428 19:51:11.762331 27217 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:11.762421 27217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:11.762507 27217 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:11.762564 27217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:11.762579 27217 net.cpp:86] Creating Layer mnist
I0428 19:51:11.762585 27217 net.cpp:382] mnist -> data
I0428 19:51:11.762595 27217 net.cpp:382] mnist -> label
I0428 19:51:11.762701 27217 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:11.765002 27217 net.cpp:124] Setting up mnist
I0428 19:51:11.765019 27217 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:11.765025 27217 net.cpp:131] Top shape: 100 (100)
I0428 19:51:11.765029 27217 net.cpp:139] Memory required for data: 314000
I0428 19:51:11.765035 27217 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:11.765048 27217 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:11.765054 27217 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:11.765060 27217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:11.765069 27217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:11.765131 27217 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:11.765138 27217 net.cpp:131] Top shape: 100 (100)
I0428 19:51:11.765143 27217 net.cpp:131] Top shape: 100 (100)
I0428 19:51:11.765146 27217 net.cpp:139] Memory required for data: 314800
I0428 19:51:11.765151 27217 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:11.765159 27217 net.cpp:86] Creating Layer conv0
I0428 19:51:11.765163 27217 net.cpp:408] conv0 <- data
I0428 19:51:11.765169 27217 net.cpp:382] conv0 -> conv0
I0428 19:51:11.766211 27217 net.cpp:124] Setting up conv0
I0428 19:51:11.766227 27217 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:11.766230 27217 net.cpp:139] Memory required for data: 1466800
I0428 19:51:11.766242 27217 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:11.766248 27217 net.cpp:86] Creating Layer pool0
I0428 19:51:11.766252 27217 net.cpp:408] pool0 <- conv0
I0428 19:51:11.766258 27217 net.cpp:382] pool0 -> pool0
I0428 19:51:11.766300 27217 net.cpp:124] Setting up pool0
I0428 19:51:11.766306 27217 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:11.766310 27217 net.cpp:139] Memory required for data: 1754800
I0428 19:51:11.766314 27217 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:11.766324 27217 net.cpp:86] Creating Layer conv1
I0428 19:51:11.766327 27217 net.cpp:408] conv1 <- pool0
I0428 19:51:11.766333 27217 net.cpp:382] conv1 -> conv1
I0428 19:51:11.768646 27217 net.cpp:124] Setting up conv1
I0428 19:51:11.768661 27217 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:11.768666 27217 net.cpp:139] Memory required for data: 2394800
I0428 19:51:11.768676 27217 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:11.768684 27217 net.cpp:86] Creating Layer pool1
I0428 19:51:11.768702 27217 net.cpp:408] pool1 <- conv1
I0428 19:51:11.768707 27217 net.cpp:382] pool1 -> pool1
I0428 19:51:11.768759 27217 net.cpp:124] Setting up pool1
I0428 19:51:11.768766 27217 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:11.768770 27217 net.cpp:139] Memory required for data: 2554800
I0428 19:51:11.768774 27217 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:11.768781 27217 net.cpp:86] Creating Layer ip1
I0428 19:51:11.768785 27217 net.cpp:408] ip1 <- pool1
I0428 19:51:11.768790 27217 net.cpp:382] ip1 -> ip1
I0428 19:51:11.768952 27217 net.cpp:124] Setting up ip1
I0428 19:51:11.768970 27217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:11.768975 27217 net.cpp:139] Memory required for data: 2558800
I0428 19:51:11.768983 27217 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:11.768990 27217 net.cpp:86] Creating Layer relu1
I0428 19:51:11.768993 27217 net.cpp:408] relu1 <- ip1
I0428 19:51:11.769006 27217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:11.769932 27217 net.cpp:124] Setting up relu1
I0428 19:51:11.769946 27217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:11.769950 27217 net.cpp:139] Memory required for data: 2562800
I0428 19:51:11.769954 27217 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:51:11.769963 27217 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:51:11.769966 27217 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:51:11.769973 27217 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:51:11.769980 27217 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:51:11.770025 27217 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:51:11.770031 27217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:11.770042 27217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:11.770046 27217 net.cpp:139] Memory required for data: 2570800
I0428 19:51:11.770050 27217 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:11.770061 27217 net.cpp:86] Creating Layer accuracy
I0428 19:51:11.770066 27217 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:51:11.770071 27217 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:11.770076 27217 net.cpp:382] accuracy -> accuracy
I0428 19:51:11.770084 27217 net.cpp:124] Setting up accuracy
I0428 19:51:11.770089 27217 net.cpp:131] Top shape: (1)
I0428 19:51:11.770092 27217 net.cpp:139] Memory required for data: 2570804
I0428 19:51:11.770097 27217 layer_factory.hpp:77] Creating layer loss
I0428 19:51:11.770102 27217 net.cpp:86] Creating Layer loss
I0428 19:51:11.770105 27217 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:51:11.770110 27217 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:11.770115 27217 net.cpp:382] loss -> loss
I0428 19:51:11.770123 27217 layer_factory.hpp:77] Creating layer loss
I0428 19:51:11.770398 27217 net.cpp:124] Setting up loss
I0428 19:51:11.770412 27217 net.cpp:131] Top shape: (1)
I0428 19:51:11.770416 27217 net.cpp:134]     with loss weight 1
I0428 19:51:11.770426 27217 net.cpp:139] Memory required for data: 2570808
I0428 19:51:11.770429 27217 net.cpp:200] loss needs backward computation.
I0428 19:51:11.770434 27217 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:11.770439 27217 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:51:11.770442 27217 net.cpp:200] relu1 needs backward computation.
I0428 19:51:11.770447 27217 net.cpp:200] ip1 needs backward computation.
I0428 19:51:11.770450 27217 net.cpp:200] pool1 needs backward computation.
I0428 19:51:11.770454 27217 net.cpp:200] conv1 needs backward computation.
I0428 19:51:11.770458 27217 net.cpp:200] pool0 needs backward computation.
I0428 19:51:11.770462 27217 net.cpp:200] conv0 needs backward computation.
I0428 19:51:11.770467 27217 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:11.770472 27217 net.cpp:202] mnist does not need backward computation.
I0428 19:51:11.770474 27217 net.cpp:244] This network produces output accuracy
I0428 19:51:11.770478 27217 net.cpp:244] This network produces output loss
I0428 19:51:11.770501 27217 net.cpp:257] Network initialization done.
I0428 19:51:11.770541 27217 solver.cpp:56] Solver scaffolding done.
I0428 19:51:11.770797 27217 caffe.cpp:248] Starting Optimization
I0428 19:51:11.770804 27217 solver.cpp:273] Solving LeNet
I0428 19:51:11.770807 27217 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:11.770972 27217 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:11.775238 27217 blocking_queue.cpp:49] Waiting for data
I0428 19:51:11.845518 27224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:11.846019 27217 solver.cpp:398]     Test net output #0: accuracy = 0.0892
I0428 19:51:11.846042 27217 solver.cpp:398]     Test net output #1: loss = 2.38258 (* 1 = 2.38258 loss)
I0428 19:51:11.847834 27217 solver.cpp:219] Iteration 0 (0 iter/s, 0.0769935s/100 iters), loss = 2.37966
I0428 19:51:11.847863 27217 solver.cpp:238]     Train net output #0: loss = 2.37966 (* 1 = 2.37966 loss)
I0428 19:51:11.847877 27217 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:11.930938 27217 solver.cpp:219] Iteration 100 (1203.94 iter/s, 0.0830604s/100 iters), loss = 0.910697
I0428 19:51:11.930969 27217 solver.cpp:238]     Train net output #0: loss = 0.910697 (* 1 = 0.910697 loss)
I0428 19:51:11.930977 27217 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:12.005376 27217 solver.cpp:219] Iteration 200 (1344.13 iter/s, 0.0743977s/100 iters), loss = 0.759778
I0428 19:51:12.005406 27217 solver.cpp:238]     Train net output #0: loss = 0.759778 (* 1 = 0.759778 loss)
I0428 19:51:12.005414 27217 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:12.080279 27217 solver.cpp:219] Iteration 300 (1335.78 iter/s, 0.0748626s/100 iters), loss = 0.250717
I0428 19:51:12.080309 27217 solver.cpp:238]     Train net output #0: loss = 0.250717 (* 1 = 0.250717 loss)
I0428 19:51:12.080317 27217 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:12.155771 27217 solver.cpp:219] Iteration 400 (1325.34 iter/s, 0.0754524s/100 iters), loss = 0.120134
I0428 19:51:12.155802 27217 solver.cpp:238]     Train net output #0: loss = 0.120134 (* 1 = 0.120134 loss)
I0428 19:51:12.155809 27217 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:12.229250 27217 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:12.282512 27224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:12.282986 27217 solver.cpp:398]     Test net output #0: accuracy = 0.9529
I0428 19:51:12.283010 27217 solver.cpp:398]     Test net output #1: loss = 0.158618 (* 1 = 0.158618 loss)
I0428 19:51:12.283788 27217 solver.cpp:219] Iteration 500 (781.399 iter/s, 0.127976s/100 iters), loss = 0.23524
I0428 19:51:12.283816 27217 solver.cpp:238]     Train net output #0: loss = 0.235241 (* 1 = 0.235241 loss)
I0428 19:51:12.283823 27217 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:12.366864 27217 solver.cpp:219] Iteration 600 (1204.29 iter/s, 0.0830362s/100 iters), loss = 0.1216
I0428 19:51:12.366902 27217 solver.cpp:238]     Train net output #0: loss = 0.1216 (* 1 = 0.1216 loss)
I0428 19:51:12.366910 27217 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:12.440412 27217 solver.cpp:219] Iteration 700 (1360.53 iter/s, 0.0735007s/100 iters), loss = 0.267628
I0428 19:51:12.440443 27217 solver.cpp:238]     Train net output #0: loss = 0.267629 (* 1 = 0.267629 loss)
I0428 19:51:12.440451 27217 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:12.515347 27217 solver.cpp:219] Iteration 800 (1335.2 iter/s, 0.0748954s/100 iters), loss = 0.165531
I0428 19:51:12.515378 27217 solver.cpp:238]     Train net output #0: loss = 0.165531 (* 1 = 0.165531 loss)
I0428 19:51:12.515385 27217 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:12.587827 27217 solver.cpp:219] Iteration 900 (1380.44 iter/s, 0.0724408s/100 iters), loss = 0.229672
I0428 19:51:12.587853 27217 solver.cpp:238]     Train net output #0: loss = 0.229672 (* 1 = 0.229672 loss)
I0428 19:51:12.587859 27217 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:12.611292 27223 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:12.657405 27217 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:12.658138 27217 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:12.658601 27217 solver.cpp:311] Iteration 1000, loss = 0.14465
I0428 19:51:12.658614 27217 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:12.718816 27224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:12.719298 27217 solver.cpp:398]     Test net output #0: accuracy = 0.9744
I0428 19:51:12.719331 27217 solver.cpp:398]     Test net output #1: loss = 0.0859209 (* 1 = 0.0859209 loss)
I0428 19:51:12.719336 27217 solver.cpp:316] Optimization Done.
I0428 19:51:12.719339 27217 caffe.cpp:259] Optimization Done.
