I0428 19:33:25.309514 23101 caffe.cpp:218] Using GPUs 0
I0428 19:33:25.346333 23101 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:25.806015 23101 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test179.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:25.806162 23101 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test179.prototxt
I0428 19:33:25.806536 23101 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:25.806566 23101 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:25.806638 23101 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:25.806699 23101 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:25.806788 23101 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:25.806808 23101 net.cpp:86] Creating Layer mnist
I0428 19:33:25.806818 23101 net.cpp:382] mnist -> data
I0428 19:33:25.806835 23101 net.cpp:382] mnist -> label
I0428 19:33:25.807792 23101 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:25.810175 23101 net.cpp:124] Setting up mnist
I0428 19:33:25.810207 23101 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:25.810212 23101 net.cpp:131] Top shape: 64 (64)
I0428 19:33:25.810215 23101 net.cpp:139] Memory required for data: 200960
I0428 19:33:25.810221 23101 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:25.810235 23101 net.cpp:86] Creating Layer conv0
I0428 19:33:25.810242 23101 net.cpp:408] conv0 <- data
I0428 19:33:25.810253 23101 net.cpp:382] conv0 -> conv0
I0428 19:33:26.040076 23101 net.cpp:124] Setting up conv0
I0428 19:33:26.040101 23101 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:26.040104 23101 net.cpp:139] Memory required for data: 3887360
I0428 19:33:26.040119 23101 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:26.040130 23101 net.cpp:86] Creating Layer pool0
I0428 19:33:26.040151 23101 net.cpp:408] pool0 <- conv0
I0428 19:33:26.040158 23101 net.cpp:382] pool0 -> pool0
I0428 19:33:26.040215 23101 net.cpp:124] Setting up pool0
I0428 19:33:26.040221 23101 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:26.040225 23101 net.cpp:139] Memory required for data: 4808960
I0428 19:33:26.040227 23101 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:26.040235 23101 net.cpp:86] Creating Layer ip1
I0428 19:33:26.040237 23101 net.cpp:408] ip1 <- pool0
I0428 19:33:26.040242 23101 net.cpp:382] ip1 -> ip1
I0428 19:33:26.041806 23101 net.cpp:124] Setting up ip1
I0428 19:33:26.041818 23101 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:26.041838 23101 net.cpp:139] Memory required for data: 4815360
I0428 19:33:26.041846 23101 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:26.041853 23101 net.cpp:86] Creating Layer relu1
I0428 19:33:26.041857 23101 net.cpp:408] relu1 <- ip1
I0428 19:33:26.041860 23101 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:26.042047 23101 net.cpp:124] Setting up relu1
I0428 19:33:26.042055 23101 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:26.042058 23101 net.cpp:139] Memory required for data: 4821760
I0428 19:33:26.042062 23101 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:26.042068 23101 net.cpp:86] Creating Layer ip2
I0428 19:33:26.042073 23101 net.cpp:408] ip2 <- ip1
I0428 19:33:26.042093 23101 net.cpp:382] ip2 -> ip2
I0428 19:33:26.042201 23101 net.cpp:124] Setting up ip2
I0428 19:33:26.042209 23101 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:26.042212 23101 net.cpp:139] Memory required for data: 4824320
I0428 19:33:26.042219 23101 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:26.042224 23101 net.cpp:86] Creating Layer relu2
I0428 19:33:26.042228 23101 net.cpp:408] relu2 <- ip2
I0428 19:33:26.042232 23101 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:26.042986 23101 net.cpp:124] Setting up relu2
I0428 19:33:26.043011 23101 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:26.043015 23101 net.cpp:139] Memory required for data: 4826880
I0428 19:33:26.043018 23101 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:26.043040 23101 net.cpp:86] Creating Layer ip3
I0428 19:33:26.043043 23101 net.cpp:408] ip3 <- ip2
I0428 19:33:26.043048 23101 net.cpp:382] ip3 -> ip3
I0428 19:33:26.043138 23101 net.cpp:124] Setting up ip3
I0428 19:33:26.043144 23101 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:26.043148 23101 net.cpp:139] Memory required for data: 4829440
I0428 19:33:26.043153 23101 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:26.043159 23101 net.cpp:86] Creating Layer relu3
I0428 19:33:26.043161 23101 net.cpp:408] relu3 <- ip3
I0428 19:33:26.043165 23101 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:26.043308 23101 net.cpp:124] Setting up relu3
I0428 19:33:26.043314 23101 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:26.043318 23101 net.cpp:139] Memory required for data: 4832000
I0428 19:33:26.043320 23101 layer_factory.hpp:77] Creating layer loss
I0428 19:33:26.043325 23101 net.cpp:86] Creating Layer loss
I0428 19:33:26.043329 23101 net.cpp:408] loss <- ip3
I0428 19:33:26.043332 23101 net.cpp:408] loss <- label
I0428 19:33:26.043337 23101 net.cpp:382] loss -> loss
I0428 19:33:26.043351 23101 layer_factory.hpp:77] Creating layer loss
I0428 19:33:26.043565 23101 net.cpp:124] Setting up loss
I0428 19:33:26.043575 23101 net.cpp:131] Top shape: (1)
I0428 19:33:26.043577 23101 net.cpp:134]     with loss weight 1
I0428 19:33:26.043591 23101 net.cpp:139] Memory required for data: 4832004
I0428 19:33:26.043594 23101 net.cpp:200] loss needs backward computation.
I0428 19:33:26.043597 23101 net.cpp:200] relu3 needs backward computation.
I0428 19:33:26.043601 23101 net.cpp:200] ip3 needs backward computation.
I0428 19:33:26.043603 23101 net.cpp:200] relu2 needs backward computation.
I0428 19:33:26.043606 23101 net.cpp:200] ip2 needs backward computation.
I0428 19:33:26.043609 23101 net.cpp:200] relu1 needs backward computation.
I0428 19:33:26.043612 23101 net.cpp:200] ip1 needs backward computation.
I0428 19:33:26.043624 23101 net.cpp:200] pool0 needs backward computation.
I0428 19:33:26.043628 23101 net.cpp:200] conv0 needs backward computation.
I0428 19:33:26.043632 23101 net.cpp:202] mnist does not need backward computation.
I0428 19:33:26.043634 23101 net.cpp:244] This network produces output loss
I0428 19:33:26.043642 23101 net.cpp:257] Network initialization done.
I0428 19:33:26.043928 23101 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test179.prototxt
I0428 19:33:26.043954 23101 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:26.044054 23101 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:26.044129 23101 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:26.044173 23101 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:26.044185 23101 net.cpp:86] Creating Layer mnist
I0428 19:33:26.044189 23101 net.cpp:382] mnist -> data
I0428 19:33:26.044198 23101 net.cpp:382] mnist -> label
I0428 19:33:26.044277 23101 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:26.045377 23101 net.cpp:124] Setting up mnist
I0428 19:33:26.045404 23101 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:26.045409 23101 net.cpp:131] Top shape: 100 (100)
I0428 19:33:26.045413 23101 net.cpp:139] Memory required for data: 314000
I0428 19:33:26.045416 23101 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:26.045423 23101 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:26.045425 23101 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:26.045430 23101 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:26.045451 23101 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:26.045523 23101 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:26.045529 23101 net.cpp:131] Top shape: 100 (100)
I0428 19:33:26.045532 23101 net.cpp:131] Top shape: 100 (100)
I0428 19:33:26.045536 23101 net.cpp:139] Memory required for data: 314800
I0428 19:33:26.045547 23101 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:26.045572 23101 net.cpp:86] Creating Layer conv0
I0428 19:33:26.045575 23101 net.cpp:408] conv0 <- data
I0428 19:33:26.045580 23101 net.cpp:382] conv0 -> conv0
I0428 19:33:26.047241 23101 net.cpp:124] Setting up conv0
I0428 19:33:26.047255 23101 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:26.047260 23101 net.cpp:139] Memory required for data: 6074800
I0428 19:33:26.047268 23101 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:26.047276 23101 net.cpp:86] Creating Layer pool0
I0428 19:33:26.047278 23101 net.cpp:408] pool0 <- conv0
I0428 19:33:26.047283 23101 net.cpp:382] pool0 -> pool0
I0428 19:33:26.047346 23101 net.cpp:124] Setting up pool0
I0428 19:33:26.047363 23101 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:26.047365 23101 net.cpp:139] Memory required for data: 7514800
I0428 19:33:26.047368 23101 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:26.047374 23101 net.cpp:86] Creating Layer ip1
I0428 19:33:26.047376 23101 net.cpp:408] ip1 <- pool0
I0428 19:33:26.047380 23101 net.cpp:382] ip1 -> ip1
I0428 19:33:26.047937 23101 net.cpp:124] Setting up ip1
I0428 19:33:26.047945 23101 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:26.047950 23101 net.cpp:139] Memory required for data: 7524800
I0428 19:33:26.047956 23101 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:26.047960 23101 net.cpp:86] Creating Layer relu1
I0428 19:33:26.047963 23101 net.cpp:408] relu1 <- ip1
I0428 19:33:26.047967 23101 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:26.048197 23101 net.cpp:124] Setting up relu1
I0428 19:33:26.048205 23101 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:26.048208 23101 net.cpp:139] Memory required for data: 7534800
I0428 19:33:26.048212 23101 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:26.048218 23101 net.cpp:86] Creating Layer ip2
I0428 19:33:26.048220 23101 net.cpp:408] ip2 <- ip1
I0428 19:33:26.048224 23101 net.cpp:382] ip2 -> ip2
I0428 19:33:26.048352 23101 net.cpp:124] Setting up ip2
I0428 19:33:26.048359 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.048362 23101 net.cpp:139] Memory required for data: 7538800
I0428 19:33:26.048368 23101 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:26.048373 23101 net.cpp:86] Creating Layer relu2
I0428 19:33:26.048375 23101 net.cpp:408] relu2 <- ip2
I0428 19:33:26.048387 23101 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:26.049121 23101 net.cpp:124] Setting up relu2
I0428 19:33:26.049134 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.049139 23101 net.cpp:139] Memory required for data: 7542800
I0428 19:33:26.049141 23101 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:26.049157 23101 net.cpp:86] Creating Layer ip3
I0428 19:33:26.049160 23101 net.cpp:408] ip3 <- ip2
I0428 19:33:26.049166 23101 net.cpp:382] ip3 -> ip3
I0428 19:33:26.049273 23101 net.cpp:124] Setting up ip3
I0428 19:33:26.049279 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.049283 23101 net.cpp:139] Memory required for data: 7546800
I0428 19:33:26.049288 23101 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:26.049293 23101 net.cpp:86] Creating Layer relu3
I0428 19:33:26.049295 23101 net.cpp:408] relu3 <- ip3
I0428 19:33:26.049300 23101 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:26.049567 23101 net.cpp:124] Setting up relu3
I0428 19:33:26.049577 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.049581 23101 net.cpp:139] Memory required for data: 7550800
I0428 19:33:26.049583 23101 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:26.049593 23101 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:26.049597 23101 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:26.049607 23101 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:26.049612 23101 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:26.049643 23101 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:26.049648 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.049656 23101 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:26.049669 23101 net.cpp:139] Memory required for data: 7558800
I0428 19:33:26.049671 23101 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:26.049675 23101 net.cpp:86] Creating Layer accuracy
I0428 19:33:26.049679 23101 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:26.049684 23101 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:26.049702 23101 net.cpp:382] accuracy -> accuracy
I0428 19:33:26.049710 23101 net.cpp:124] Setting up accuracy
I0428 19:33:26.049713 23101 net.cpp:131] Top shape: (1)
I0428 19:33:26.049716 23101 net.cpp:139] Memory required for data: 7558804
I0428 19:33:26.049718 23101 layer_factory.hpp:77] Creating layer loss
I0428 19:33:26.049722 23101 net.cpp:86] Creating Layer loss
I0428 19:33:26.049726 23101 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:26.049729 23101 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:26.049738 23101 net.cpp:382] loss -> loss
I0428 19:33:26.049744 23101 layer_factory.hpp:77] Creating layer loss
I0428 19:33:26.049988 23101 net.cpp:124] Setting up loss
I0428 19:33:26.049998 23101 net.cpp:131] Top shape: (1)
I0428 19:33:26.050001 23101 net.cpp:134]     with loss weight 1
I0428 19:33:26.050007 23101 net.cpp:139] Memory required for data: 7558808
I0428 19:33:26.050010 23101 net.cpp:200] loss needs backward computation.
I0428 19:33:26.050026 23101 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:26.050030 23101 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:26.050038 23101 net.cpp:200] relu3 needs backward computation.
I0428 19:33:26.050041 23101 net.cpp:200] ip3 needs backward computation.
I0428 19:33:26.050045 23101 net.cpp:200] relu2 needs backward computation.
I0428 19:33:26.050047 23101 net.cpp:200] ip2 needs backward computation.
I0428 19:33:26.050056 23101 net.cpp:200] relu1 needs backward computation.
I0428 19:33:26.050060 23101 net.cpp:200] ip1 needs backward computation.
I0428 19:33:26.050062 23101 net.cpp:200] pool0 needs backward computation.
I0428 19:33:26.050065 23101 net.cpp:200] conv0 needs backward computation.
I0428 19:33:26.050078 23101 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:26.050082 23101 net.cpp:202] mnist does not need backward computation.
I0428 19:33:26.050086 23101 net.cpp:244] This network produces output accuracy
I0428 19:33:26.050089 23101 net.cpp:244] This network produces output loss
I0428 19:33:26.050098 23101 net.cpp:257] Network initialization done.
I0428 19:33:26.050153 23101 solver.cpp:56] Solver scaffolding done.
I0428 19:33:26.050416 23101 caffe.cpp:248] Starting Optimization
I0428 19:33:26.050422 23101 solver.cpp:273] Solving LeNet
I0428 19:33:26.050426 23101 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:26.051296 23101 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:26.058284 23101 blocking_queue.cpp:49] Waiting for data
I0428 19:33:26.126402 23108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:26.127231 23101 solver.cpp:398]     Test net output #0: accuracy = 0.143
I0428 19:33:26.127249 23101 solver.cpp:398]     Test net output #1: loss = 2.30788 (* 1 = 2.30788 loss)
I0428 19:33:26.130934 23101 solver.cpp:219] Iteration 0 (-1.01034e-42 iter/s, 0.0804852s/100 iters), loss = 2.30386
I0428 19:33:26.130956 23101 solver.cpp:238]     Train net output #0: loss = 2.30386 (* 1 = 2.30386 loss)
I0428 19:33:26.130982 23101 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:26.229722 23101 solver.cpp:219] Iteration 100 (1012.6 iter/s, 0.0987556s/100 iters), loss = 0.744921
I0428 19:33:26.229746 23101 solver.cpp:238]     Train net output #0: loss = 0.744921 (* 1 = 0.744921 loss)
I0428 19:33:26.229768 23101 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:26.330044 23101 solver.cpp:219] Iteration 200 (997.133 iter/s, 0.100287s/100 iters), loss = 0.706638
I0428 19:33:26.330068 23101 solver.cpp:238]     Train net output #0: loss = 0.706638 (* 1 = 0.706638 loss)
I0428 19:33:26.330075 23101 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:26.431617 23101 solver.cpp:219] Iteration 300 (984.845 iter/s, 0.101539s/100 iters), loss = 0.335796
I0428 19:33:26.431641 23101 solver.cpp:238]     Train net output #0: loss = 0.335796 (* 1 = 0.335796 loss)
I0428 19:33:26.431648 23101 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:26.537194 23101 solver.cpp:219] Iteration 400 (947.52 iter/s, 0.105539s/100 iters), loss = 0.334861
I0428 19:33:26.537228 23101 solver.cpp:238]     Train net output #0: loss = 0.334861 (* 1 = 0.334861 loss)
I0428 19:33:26.537237 23101 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:26.636468 23101 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:26.703884 23108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:26.704893 23101 solver.cpp:398]     Test net output #0: accuracy = 0.8662
I0428 19:33:26.704929 23101 solver.cpp:398]     Test net output #1: loss = 0.402197 (* 1 = 0.402197 loss)
I0428 19:33:26.705966 23101 solver.cpp:219] Iteration 500 (592.671 iter/s, 0.168728s/100 iters), loss = 0.526761
I0428 19:33:26.706006 23101 solver.cpp:238]     Train net output #0: loss = 0.526761 (* 1 = 0.526761 loss)
I0428 19:33:26.706012 23101 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:26.812002 23101 solver.cpp:219] Iteration 600 (943.384 iter/s, 0.106001s/100 iters), loss = 0.279223
I0428 19:33:26.812043 23101 solver.cpp:238]     Train net output #0: loss = 0.279223 (* 1 = 0.279223 loss)
I0428 19:33:26.812052 23101 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:26.914633 23101 solver.cpp:219] Iteration 700 (974.857 iter/s, 0.102579s/100 iters), loss = 0.702264
I0428 19:33:26.914674 23101 solver.cpp:238]     Train net output #0: loss = 0.702264 (* 1 = 0.702264 loss)
I0428 19:33:26.914680 23101 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:27.017745 23101 solver.cpp:219] Iteration 800 (970.304 iter/s, 0.10306s/100 iters), loss = 0.421518
I0428 19:33:27.017778 23101 solver.cpp:238]     Train net output #0: loss = 0.421518 (* 1 = 0.421518 loss)
I0428 19:33:27.017786 23101 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:27.118242 23101 solver.cpp:219] Iteration 900 (995.485 iter/s, 0.100454s/100 iters), loss = 0.369467
I0428 19:33:27.118274 23101 solver.cpp:238]     Train net output #0: loss = 0.369467 (* 1 = 0.369467 loss)
I0428 19:33:27.118283 23101 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:27.155144 23107 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:27.223085 23101 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:27.225064 23101 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:27.226394 23101 solver.cpp:311] Iteration 1000, loss = 0.507771
I0428 19:33:27.226413 23101 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:27.303002 23108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:27.303838 23101 solver.cpp:398]     Test net output #0: accuracy = 0.8783
I0428 19:33:27.303879 23101 solver.cpp:398]     Test net output #1: loss = 0.339859 (* 1 = 0.339859 loss)
I0428 19:33:27.303886 23101 solver.cpp:316] Optimization Done.
I0428 19:33:27.303892 23101 caffe.cpp:259] Optimization Done.
