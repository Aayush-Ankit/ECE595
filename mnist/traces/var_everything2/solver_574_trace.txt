I0428 19:49:25.209590 26758 caffe.cpp:218] Using GPUs 0
I0428 19:49:25.246603 26758 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:25.697506 26758 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test574.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:25.697638 26758 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test574.prototxt
I0428 19:49:25.697978 26758 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:25.697993 26758 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:25.698067 26758 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:25.698125 26758 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:25.698204 26758 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:25.698225 26758 net.cpp:86] Creating Layer mnist
I0428 19:49:25.698230 26758 net.cpp:382] mnist -> data
I0428 19:49:25.698248 26758 net.cpp:382] mnist -> label
I0428 19:49:25.699208 26758 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:25.701400 26758 net.cpp:124] Setting up mnist
I0428 19:49:25.701448 26758 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:25.701453 26758 net.cpp:131] Top shape: 64 (64)
I0428 19:49:25.701457 26758 net.cpp:139] Memory required for data: 200960
I0428 19:49:25.701463 26758 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:25.701478 26758 net.cpp:86] Creating Layer conv0
I0428 19:49:25.701493 26758 net.cpp:408] conv0 <- data
I0428 19:49:25.701503 26758 net.cpp:382] conv0 -> conv0
I0428 19:49:25.931871 26758 net.cpp:124] Setting up conv0
I0428 19:49:25.931912 26758 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:25.931916 26758 net.cpp:139] Memory required for data: 938240
I0428 19:49:25.931931 26758 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:25.931943 26758 net.cpp:86] Creating Layer pool0
I0428 19:49:25.931947 26758 net.cpp:408] pool0 <- conv0
I0428 19:49:25.931952 26758 net.cpp:382] pool0 -> pool0
I0428 19:49:25.932013 26758 net.cpp:124] Setting up pool0
I0428 19:49:25.932019 26758 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:25.932023 26758 net.cpp:139] Memory required for data: 1122560
I0428 19:49:25.932025 26758 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:25.932035 26758 net.cpp:86] Creating Layer conv1
I0428 19:49:25.932039 26758 net.cpp:408] conv1 <- pool0
I0428 19:49:25.932044 26758 net.cpp:382] conv1 -> conv1
I0428 19:49:25.933873 26758 net.cpp:124] Setting up conv1
I0428 19:49:25.933903 26758 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:25.933907 26758 net.cpp:139] Memory required for data: 1204480
I0428 19:49:25.933915 26758 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:25.933923 26758 net.cpp:86] Creating Layer pool1
I0428 19:49:25.933926 26758 net.cpp:408] pool1 <- conv1
I0428 19:49:25.933931 26758 net.cpp:382] pool1 -> pool1
I0428 19:49:25.933966 26758 net.cpp:124] Setting up pool1
I0428 19:49:25.933972 26758 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:25.933975 26758 net.cpp:139] Memory required for data: 1224960
I0428 19:49:25.933979 26758 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:25.933985 26758 net.cpp:86] Creating Layer ip1
I0428 19:49:25.933989 26758 net.cpp:408] ip1 <- pool1
I0428 19:49:25.933992 26758 net.cpp:382] ip1 -> ip1
I0428 19:49:25.934934 26758 net.cpp:124] Setting up ip1
I0428 19:49:25.934947 26758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:25.934965 26758 net.cpp:139] Memory required for data: 1231360
I0428 19:49:25.934973 26758 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:25.934979 26758 net.cpp:86] Creating Layer relu1
I0428 19:49:25.934983 26758 net.cpp:408] relu1 <- ip1
I0428 19:49:25.934988 26758 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:25.935148 26758 net.cpp:124] Setting up relu1
I0428 19:49:25.935158 26758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:25.935160 26758 net.cpp:139] Memory required for data: 1237760
I0428 19:49:25.935163 26758 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:25.935170 26758 net.cpp:86] Creating Layer ip2
I0428 19:49:25.935173 26758 net.cpp:408] ip2 <- ip1
I0428 19:49:25.935178 26758 net.cpp:382] ip2 -> ip2
I0428 19:49:25.935283 26758 net.cpp:124] Setting up ip2
I0428 19:49:25.935290 26758 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:25.935293 26758 net.cpp:139] Memory required for data: 1250560
I0428 19:49:25.935298 26758 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:25.935305 26758 net.cpp:86] Creating Layer relu2
I0428 19:49:25.935308 26758 net.cpp:408] relu2 <- ip2
I0428 19:49:25.935312 26758 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:25.936019 26758 net.cpp:124] Setting up relu2
I0428 19:49:25.936031 26758 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:25.936035 26758 net.cpp:139] Memory required for data: 1263360
I0428 19:49:25.936038 26758 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:25.936045 26758 net.cpp:86] Creating Layer ip3
I0428 19:49:25.936060 26758 net.cpp:408] ip3 <- ip2
I0428 19:49:25.936066 26758 net.cpp:382] ip3 -> ip3
I0428 19:49:25.936177 26758 net.cpp:124] Setting up ip3
I0428 19:49:25.936184 26758 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:25.936187 26758 net.cpp:139] Memory required for data: 1265920
I0428 19:49:25.936195 26758 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:25.936200 26758 net.cpp:86] Creating Layer relu3
I0428 19:49:25.936203 26758 net.cpp:408] relu3 <- ip3
I0428 19:49:25.936208 26758 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:25.936365 26758 net.cpp:124] Setting up relu3
I0428 19:49:25.936373 26758 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:25.936377 26758 net.cpp:139] Memory required for data: 1268480
I0428 19:49:25.936380 26758 layer_factory.hpp:77] Creating layer loss
I0428 19:49:25.936391 26758 net.cpp:86] Creating Layer loss
I0428 19:49:25.936394 26758 net.cpp:408] loss <- ip3
I0428 19:49:25.936398 26758 net.cpp:408] loss <- label
I0428 19:49:25.936403 26758 net.cpp:382] loss -> loss
I0428 19:49:25.936416 26758 layer_factory.hpp:77] Creating layer loss
I0428 19:49:25.936647 26758 net.cpp:124] Setting up loss
I0428 19:49:25.936656 26758 net.cpp:131] Top shape: (1)
I0428 19:49:25.936660 26758 net.cpp:134]     with loss weight 1
I0428 19:49:25.936676 26758 net.cpp:139] Memory required for data: 1268484
I0428 19:49:25.936678 26758 net.cpp:200] loss needs backward computation.
I0428 19:49:25.936682 26758 net.cpp:200] relu3 needs backward computation.
I0428 19:49:25.936686 26758 net.cpp:200] ip3 needs backward computation.
I0428 19:49:25.936687 26758 net.cpp:200] relu2 needs backward computation.
I0428 19:49:25.936691 26758 net.cpp:200] ip2 needs backward computation.
I0428 19:49:25.936693 26758 net.cpp:200] relu1 needs backward computation.
I0428 19:49:25.936695 26758 net.cpp:200] ip1 needs backward computation.
I0428 19:49:25.936698 26758 net.cpp:200] pool1 needs backward computation.
I0428 19:49:25.936702 26758 net.cpp:200] conv1 needs backward computation.
I0428 19:49:25.936704 26758 net.cpp:200] pool0 needs backward computation.
I0428 19:49:25.936707 26758 net.cpp:200] conv0 needs backward computation.
I0428 19:49:25.936710 26758 net.cpp:202] mnist does not need backward computation.
I0428 19:49:25.936713 26758 net.cpp:244] This network produces output loss
I0428 19:49:25.936722 26758 net.cpp:257] Network initialization done.
I0428 19:49:25.937103 26758 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test574.prototxt
I0428 19:49:25.937146 26758 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:25.937261 26758 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:25.937346 26758 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:25.937387 26758 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:25.937400 26758 net.cpp:86] Creating Layer mnist
I0428 19:49:25.937404 26758 net.cpp:382] mnist -> data
I0428 19:49:25.937413 26758 net.cpp:382] mnist -> label
I0428 19:49:25.937499 26758 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:25.939405 26758 net.cpp:124] Setting up mnist
I0428 19:49:25.939435 26758 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:25.939440 26758 net.cpp:131] Top shape: 100 (100)
I0428 19:49:25.939442 26758 net.cpp:139] Memory required for data: 314000
I0428 19:49:25.939446 26758 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:25.939453 26758 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:25.939456 26758 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:25.939461 26758 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:25.939471 26758 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:25.939581 26758 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:25.939589 26758 net.cpp:131] Top shape: 100 (100)
I0428 19:49:25.939594 26758 net.cpp:131] Top shape: 100 (100)
I0428 19:49:25.939596 26758 net.cpp:139] Memory required for data: 314800
I0428 19:49:25.939599 26758 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:25.939610 26758 net.cpp:86] Creating Layer conv0
I0428 19:49:25.939613 26758 net.cpp:408] conv0 <- data
I0428 19:49:25.939618 26758 net.cpp:382] conv0 -> conv0
I0428 19:49:25.941197 26758 net.cpp:124] Setting up conv0
I0428 19:49:25.941227 26758 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:25.941231 26758 net.cpp:139] Memory required for data: 1466800
I0428 19:49:25.941241 26758 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:25.941248 26758 net.cpp:86] Creating Layer pool0
I0428 19:49:25.941251 26758 net.cpp:408] pool0 <- conv0
I0428 19:49:25.941256 26758 net.cpp:382] pool0 -> pool0
I0428 19:49:25.941293 26758 net.cpp:124] Setting up pool0
I0428 19:49:25.941308 26758 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:25.941310 26758 net.cpp:139] Memory required for data: 1754800
I0428 19:49:25.941313 26758 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:25.941323 26758 net.cpp:86] Creating Layer conv1
I0428 19:49:25.941325 26758 net.cpp:408] conv1 <- pool0
I0428 19:49:25.941331 26758 net.cpp:382] conv1 -> conv1
I0428 19:49:25.943403 26758 net.cpp:124] Setting up conv1
I0428 19:49:25.943416 26758 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:25.943439 26758 net.cpp:139] Memory required for data: 1882800
I0428 19:49:25.943449 26758 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:25.943462 26758 net.cpp:86] Creating Layer pool1
I0428 19:49:25.943465 26758 net.cpp:408] pool1 <- conv1
I0428 19:49:25.943470 26758 net.cpp:382] pool1 -> pool1
I0428 19:49:25.943511 26758 net.cpp:124] Setting up pool1
I0428 19:49:25.943521 26758 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:25.943523 26758 net.cpp:139] Memory required for data: 1914800
I0428 19:49:25.943526 26758 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:25.943533 26758 net.cpp:86] Creating Layer ip1
I0428 19:49:25.943536 26758 net.cpp:408] ip1 <- pool1
I0428 19:49:25.943542 26758 net.cpp:382] ip1 -> ip1
I0428 19:49:25.943670 26758 net.cpp:124] Setting up ip1
I0428 19:49:25.943677 26758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:25.943691 26758 net.cpp:139] Memory required for data: 1924800
I0428 19:49:25.943699 26758 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:25.943704 26758 net.cpp:86] Creating Layer relu1
I0428 19:49:25.943708 26758 net.cpp:408] relu1 <- ip1
I0428 19:49:25.943714 26758 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:25.943984 26758 net.cpp:124] Setting up relu1
I0428 19:49:25.943994 26758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:25.943996 26758 net.cpp:139] Memory required for data: 1934800
I0428 19:49:25.944000 26758 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:25.944008 26758 net.cpp:86] Creating Layer ip2
I0428 19:49:25.944012 26758 net.cpp:408] ip2 <- ip1
I0428 19:49:25.944017 26758 net.cpp:382] ip2 -> ip2
I0428 19:49:25.944128 26758 net.cpp:124] Setting up ip2
I0428 19:49:25.944135 26758 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:25.944139 26758 net.cpp:139] Memory required for data: 1954800
I0428 19:49:25.944144 26758 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:25.944149 26758 net.cpp:86] Creating Layer relu2
I0428 19:49:25.944151 26758 net.cpp:408] relu2 <- ip2
I0428 19:49:25.944156 26758 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:25.944310 26758 net.cpp:124] Setting up relu2
I0428 19:49:25.944324 26758 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:25.944327 26758 net.cpp:139] Memory required for data: 1974800
I0428 19:49:25.944331 26758 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:25.944339 26758 net.cpp:86] Creating Layer ip3
I0428 19:49:25.944341 26758 net.cpp:408] ip3 <- ip2
I0428 19:49:25.944346 26758 net.cpp:382] ip3 -> ip3
I0428 19:49:25.944458 26758 net.cpp:124] Setting up ip3
I0428 19:49:25.944465 26758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:25.944468 26758 net.cpp:139] Memory required for data: 1978800
I0428 19:49:25.944478 26758 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:25.944483 26758 net.cpp:86] Creating Layer relu3
I0428 19:49:25.944485 26758 net.cpp:408] relu3 <- ip3
I0428 19:49:25.944489 26758 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:25.945379 26758 net.cpp:124] Setting up relu3
I0428 19:49:25.945391 26758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:25.945406 26758 net.cpp:139] Memory required for data: 1982800
I0428 19:49:25.945410 26758 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:25.945416 26758 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:25.945420 26758 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:25.945425 26758 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:25.945430 26758 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:25.945482 26758 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:25.945489 26758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:25.945493 26758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:25.945495 26758 net.cpp:139] Memory required for data: 1990800
I0428 19:49:25.945498 26758 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:25.945509 26758 net.cpp:86] Creating Layer accuracy
I0428 19:49:25.945513 26758 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:25.945518 26758 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:25.945523 26758 net.cpp:382] accuracy -> accuracy
I0428 19:49:25.945529 26758 net.cpp:124] Setting up accuracy
I0428 19:49:25.945533 26758 net.cpp:131] Top shape: (1)
I0428 19:49:25.945535 26758 net.cpp:139] Memory required for data: 1990804
I0428 19:49:25.945544 26758 layer_factory.hpp:77] Creating layer loss
I0428 19:49:25.945547 26758 net.cpp:86] Creating Layer loss
I0428 19:49:25.945550 26758 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:25.945554 26758 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:25.945575 26758 net.cpp:382] loss -> loss
I0428 19:49:25.945581 26758 layer_factory.hpp:77] Creating layer loss
I0428 19:49:25.945865 26758 net.cpp:124] Setting up loss
I0428 19:49:25.945875 26758 net.cpp:131] Top shape: (1)
I0428 19:49:25.945879 26758 net.cpp:134]     with loss weight 1
I0428 19:49:25.945885 26758 net.cpp:139] Memory required for data: 1990808
I0428 19:49:25.945900 26758 net.cpp:200] loss needs backward computation.
I0428 19:49:25.945905 26758 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:25.945909 26758 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:25.945914 26758 net.cpp:200] relu3 needs backward computation.
I0428 19:49:25.945916 26758 net.cpp:200] ip3 needs backward computation.
I0428 19:49:25.945920 26758 net.cpp:200] relu2 needs backward computation.
I0428 19:49:25.945924 26758 net.cpp:200] ip2 needs backward computation.
I0428 19:49:25.945926 26758 net.cpp:200] relu1 needs backward computation.
I0428 19:49:25.945930 26758 net.cpp:200] ip1 needs backward computation.
I0428 19:49:25.945933 26758 net.cpp:200] pool1 needs backward computation.
I0428 19:49:25.945936 26758 net.cpp:200] conv1 needs backward computation.
I0428 19:49:25.945940 26758 net.cpp:200] pool0 needs backward computation.
I0428 19:49:25.945942 26758 net.cpp:200] conv0 needs backward computation.
I0428 19:49:25.945946 26758 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:25.945950 26758 net.cpp:202] mnist does not need backward computation.
I0428 19:49:25.945953 26758 net.cpp:244] This network produces output accuracy
I0428 19:49:25.945957 26758 net.cpp:244] This network produces output loss
I0428 19:49:25.945971 26758 net.cpp:257] Network initialization done.
I0428 19:49:25.946027 26758 solver.cpp:56] Solver scaffolding done.
I0428 19:49:25.946518 26758 caffe.cpp:248] Starting Optimization
I0428 19:49:25.946524 26758 solver.cpp:273] Solving LeNet
I0428 19:49:25.946527 26758 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:25.947453 26758 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:25.951113 26758 blocking_queue.cpp:49] Waiting for data
I0428 19:49:26.008468 26765 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:26.009107 26758 solver.cpp:398]     Test net output #0: accuracy = 0.1082
I0428 19:49:26.009135 26758 solver.cpp:398]     Test net output #1: loss = 2.29343 (* 1 = 2.29343 loss)
I0428 19:49:26.011397 26758 solver.cpp:219] Iteration 0 (-1.31132e-31 iter/s, 0.0648059s/100 iters), loss = 2.28564
I0428 19:49:26.011435 26758 solver.cpp:238]     Train net output #0: loss = 2.28564 (* 1 = 2.28564 loss)
I0428 19:49:26.011449 26758 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:26.088507 26758 solver.cpp:219] Iteration 100 (1297.61 iter/s, 0.0770647s/100 iters), loss = 0.83489
I0428 19:49:26.088536 26758 solver.cpp:238]     Train net output #0: loss = 0.83489 (* 1 = 0.83489 loss)
I0428 19:49:26.088542 26758 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:26.159021 26758 solver.cpp:219] Iteration 200 (1418.89 iter/s, 0.0704778s/100 iters), loss = 0.53916
I0428 19:49:26.159046 26758 solver.cpp:238]     Train net output #0: loss = 0.53916 (* 1 = 0.53916 loss)
I0428 19:49:26.159052 26758 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:26.232228 26758 solver.cpp:219] Iteration 300 (1366.68 iter/s, 0.07317s/100 iters), loss = 0.571264
I0428 19:49:26.232254 26758 solver.cpp:238]     Train net output #0: loss = 0.571264 (* 1 = 0.571264 loss)
I0428 19:49:26.232261 26758 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:26.305014 26758 solver.cpp:219] Iteration 400 (1374.53 iter/s, 0.0727521s/100 iters), loss = 0.580115
I0428 19:49:26.305038 26758 solver.cpp:238]     Train net output #0: loss = 0.580115 (* 1 = 0.580115 loss)
I0428 19:49:26.305044 26758 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:26.375612 26758 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:26.450925 26765 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:26.451442 26758 solver.cpp:398]     Test net output #0: accuracy = 0.8998
I0428 19:49:26.451462 26758 solver.cpp:398]     Test net output #1: loss = 0.472411 (* 1 = 0.472411 loss)
I0428 19:49:26.452247 26758 solver.cpp:219] Iteration 500 (679.362 iter/s, 0.147197s/100 iters), loss = 0.523869
I0428 19:49:26.452270 26758 solver.cpp:238]     Train net output #0: loss = 0.523869 (* 1 = 0.523869 loss)
I0428 19:49:26.452292 26758 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:26.525822 26758 solver.cpp:219] Iteration 600 (1359.76 iter/s, 0.0735427s/100 iters), loss = 0.341581
I0428 19:49:26.525877 26758 solver.cpp:238]     Train net output #0: loss = 0.341581 (* 1 = 0.341581 loss)
I0428 19:49:26.525883 26758 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:26.600565 26758 solver.cpp:219] Iteration 700 (1338.8 iter/s, 0.0746936s/100 iters), loss = 0.608919
I0428 19:49:26.600589 26758 solver.cpp:238]     Train net output #0: loss = 0.608919 (* 1 = 0.608919 loss)
I0428 19:49:26.600595 26758 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:26.672699 26758 solver.cpp:219] Iteration 800 (1386.93 iter/s, 0.0721019s/100 iters), loss = 0.270149
I0428 19:49:26.672724 26758 solver.cpp:238]     Train net output #0: loss = 0.270149 (* 1 = 0.270149 loss)
I0428 19:49:26.672729 26758 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:26.745105 26758 solver.cpp:219] Iteration 900 (1381.75 iter/s, 0.0723722s/100 iters), loss = 0.194474
I0428 19:49:26.745127 26758 solver.cpp:238]     Train net output #0: loss = 0.194474 (* 1 = 0.194474 loss)
I0428 19:49:26.745134 26758 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:26.769096 26764 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:26.816649 26758 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:26.817457 26758 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:26.817903 26758 solver.cpp:311] Iteration 1000, loss = 0.151161
I0428 19:49:26.817919 26758 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:26.893335 26765 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:26.893851 26758 solver.cpp:398]     Test net output #0: accuracy = 0.9533
I0428 19:49:26.893870 26758 solver.cpp:398]     Test net output #1: loss = 0.155738 (* 1 = 0.155738 loss)
I0428 19:49:26.893875 26758 solver.cpp:316] Optimization Done.
I0428 19:49:26.893878 26758 caffe.cpp:259] Optimization Done.
