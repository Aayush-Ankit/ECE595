I0428 20:31:15.206113  3925 caffe.cpp:218] Using GPUs 0
I0428 20:31:15.238955  3925 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:15.699307  3925 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1552.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:15.699439  3925 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1552.prototxt
I0428 20:31:15.699784  3925 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:15.699813  3925 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:15.699889  3925 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:15.699949  3925 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:15.700042  3925 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:15.700062  3925 net.cpp:86] Creating Layer mnist
I0428 20:31:15.700069  3925 net.cpp:382] mnist -> data
I0428 20:31:15.700088  3925 net.cpp:382] mnist -> label
I0428 20:31:15.701164  3925 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:15.703415  3925 net.cpp:124] Setting up mnist
I0428 20:31:15.703446  3925 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:15.703451  3925 net.cpp:131] Top shape: 64 (64)
I0428 20:31:15.703454  3925 net.cpp:139] Memory required for data: 200960
I0428 20:31:15.703460  3925 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:15.703474  3925 net.cpp:86] Creating Layer conv0
I0428 20:31:15.703492  3925 net.cpp:408] conv0 <- data
I0428 20:31:15.703517  3925 net.cpp:382] conv0 -> conv0
I0428 20:31:15.933243  3925 net.cpp:124] Setting up conv0
I0428 20:31:15.933269  3925 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:15.933272  3925 net.cpp:139] Memory required for data: 14946560
I0428 20:31:15.933285  3925 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:15.933297  3925 net.cpp:86] Creating Layer pool0
I0428 20:31:15.933301  3925 net.cpp:408] pool0 <- conv0
I0428 20:31:15.933306  3925 net.cpp:382] pool0 -> pool0
I0428 20:31:15.933367  3925 net.cpp:124] Setting up pool0
I0428 20:31:15.933372  3925 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:15.933374  3925 net.cpp:139] Memory required for data: 18632960
I0428 20:31:15.933377  3925 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:15.933388  3925 net.cpp:86] Creating Layer conv1
I0428 20:31:15.933390  3925 net.cpp:408] conv1 <- pool0
I0428 20:31:15.933395  3925 net.cpp:382] conv1 -> conv1
I0428 20:31:15.935406  3925 net.cpp:124] Setting up conv1
I0428 20:31:15.935436  3925 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:15.935439  3925 net.cpp:139] Memory required for data: 18796800
I0428 20:31:15.935449  3925 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:15.935458  3925 net.cpp:86] Creating Layer pool1
I0428 20:31:15.935461  3925 net.cpp:408] pool1 <- conv1
I0428 20:31:15.935467  3925 net.cpp:382] pool1 -> pool1
I0428 20:31:15.935504  3925 net.cpp:124] Setting up pool1
I0428 20:31:15.935510  3925 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:15.935513  3925 net.cpp:139] Memory required for data: 18837760
I0428 20:31:15.935516  3925 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:15.935528  3925 net.cpp:86] Creating Layer ip1
I0428 20:31:15.935530  3925 net.cpp:408] ip1 <- pool1
I0428 20:31:15.935535  3925 net.cpp:382] ip1 -> ip1
I0428 20:31:15.936609  3925 net.cpp:124] Setting up ip1
I0428 20:31:15.936620  3925 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:15.936638  3925 net.cpp:139] Memory required for data: 18850560
I0428 20:31:15.936646  3925 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:15.936652  3925 net.cpp:86] Creating Layer relu1
I0428 20:31:15.936656  3925 net.cpp:408] relu1 <- ip1
I0428 20:31:15.936662  3925 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:15.936859  3925 net.cpp:124] Setting up relu1
I0428 20:31:15.936869  3925 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:15.936872  3925 net.cpp:139] Memory required for data: 18863360
I0428 20:31:15.936877  3925 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:15.936883  3925 net.cpp:86] Creating Layer ip2
I0428 20:31:15.936887  3925 net.cpp:408] ip2 <- ip1
I0428 20:31:15.936892  3925 net.cpp:382] ip2 -> ip2
I0428 20:31:15.936993  3925 net.cpp:124] Setting up ip2
I0428 20:31:15.937000  3925 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:15.937003  3925 net.cpp:139] Memory required for data: 18865920
I0428 20:31:15.937010  3925 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:15.937016  3925 net.cpp:86] Creating Layer relu2
I0428 20:31:15.937021  3925 net.cpp:408] relu2 <- ip2
I0428 20:31:15.937024  3925 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:15.937880  3925 net.cpp:124] Setting up relu2
I0428 20:31:15.937908  3925 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:15.937911  3925 net.cpp:139] Memory required for data: 18868480
I0428 20:31:15.937914  3925 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:15.937922  3925 net.cpp:86] Creating Layer ip3
I0428 20:31:15.937927  3925 net.cpp:408] ip3 <- ip2
I0428 20:31:15.937932  3925 net.cpp:382] ip3 -> ip3
I0428 20:31:15.938047  3925 net.cpp:124] Setting up ip3
I0428 20:31:15.938055  3925 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:15.938057  3925 net.cpp:139] Memory required for data: 18871040
I0428 20:31:15.938066  3925 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:15.938071  3925 net.cpp:86] Creating Layer relu3
I0428 20:31:15.938074  3925 net.cpp:408] relu3 <- ip3
I0428 20:31:15.938078  3925 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:15.938261  3925 net.cpp:124] Setting up relu3
I0428 20:31:15.938268  3925 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:15.938271  3925 net.cpp:139] Memory required for data: 18873600
I0428 20:31:15.938274  3925 layer_factory.hpp:77] Creating layer loss
I0428 20:31:15.938279  3925 net.cpp:86] Creating Layer loss
I0428 20:31:15.938282  3925 net.cpp:408] loss <- ip3
I0428 20:31:15.938285  3925 net.cpp:408] loss <- label
I0428 20:31:15.938292  3925 net.cpp:382] loss -> loss
I0428 20:31:15.938323  3925 layer_factory.hpp:77] Creating layer loss
I0428 20:31:15.938554  3925 net.cpp:124] Setting up loss
I0428 20:31:15.938562  3925 net.cpp:131] Top shape: (1)
I0428 20:31:15.938565  3925 net.cpp:134]     with loss weight 1
I0428 20:31:15.938597  3925 net.cpp:139] Memory required for data: 18873604
I0428 20:31:15.938601  3925 net.cpp:200] loss needs backward computation.
I0428 20:31:15.938606  3925 net.cpp:200] relu3 needs backward computation.
I0428 20:31:15.938608  3925 net.cpp:200] ip3 needs backward computation.
I0428 20:31:15.938611  3925 net.cpp:200] relu2 needs backward computation.
I0428 20:31:15.938614  3925 net.cpp:200] ip2 needs backward computation.
I0428 20:31:15.938616  3925 net.cpp:200] relu1 needs backward computation.
I0428 20:31:15.938634  3925 net.cpp:200] ip1 needs backward computation.
I0428 20:31:15.938637  3925 net.cpp:200] pool1 needs backward computation.
I0428 20:31:15.938640  3925 net.cpp:200] conv1 needs backward computation.
I0428 20:31:15.938643  3925 net.cpp:200] pool0 needs backward computation.
I0428 20:31:15.938647  3925 net.cpp:200] conv0 needs backward computation.
I0428 20:31:15.938649  3925 net.cpp:202] mnist does not need backward computation.
I0428 20:31:15.938652  3925 net.cpp:244] This network produces output loss
I0428 20:31:15.938663  3925 net.cpp:257] Network initialization done.
I0428 20:31:15.939041  3925 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1552.prototxt
I0428 20:31:15.939098  3925 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:15.939190  3925 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:15.939271  3925 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:15.939311  3925 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:15.939323  3925 net.cpp:86] Creating Layer mnist
I0428 20:31:15.939329  3925 net.cpp:382] mnist -> data
I0428 20:31:15.939337  3925 net.cpp:382] mnist -> label
I0428 20:31:15.939471  3925 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:15.941522  3925 net.cpp:124] Setting up mnist
I0428 20:31:15.941567  3925 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:15.941573  3925 net.cpp:131] Top shape: 100 (100)
I0428 20:31:15.941576  3925 net.cpp:139] Memory required for data: 314000
I0428 20:31:15.941579  3925 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:15.941618  3925 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:15.941623  3925 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:15.941628  3925 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:15.941635  3925 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:15.941684  3925 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:15.941690  3925 net.cpp:131] Top shape: 100 (100)
I0428 20:31:15.941694  3925 net.cpp:131] Top shape: 100 (100)
I0428 20:31:15.941697  3925 net.cpp:139] Memory required for data: 314800
I0428 20:31:15.941700  3925 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:15.941710  3925 net.cpp:86] Creating Layer conv0
I0428 20:31:15.941714  3925 net.cpp:408] conv0 <- data
I0428 20:31:15.941720  3925 net.cpp:382] conv0 -> conv0
I0428 20:31:15.943428  3925 net.cpp:124] Setting up conv0
I0428 20:31:15.943441  3925 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:15.943460  3925 net.cpp:139] Memory required for data: 23354800
I0428 20:31:15.943470  3925 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:15.943478  3925 net.cpp:86] Creating Layer pool0
I0428 20:31:15.943481  3925 net.cpp:408] pool0 <- conv0
I0428 20:31:15.943485  3925 net.cpp:382] pool0 -> pool0
I0428 20:31:15.943523  3925 net.cpp:124] Setting up pool0
I0428 20:31:15.943528  3925 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:15.943531  3925 net.cpp:139] Memory required for data: 29114800
I0428 20:31:15.943533  3925 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:15.943542  3925 net.cpp:86] Creating Layer conv1
I0428 20:31:15.943547  3925 net.cpp:408] conv1 <- pool0
I0428 20:31:15.943552  3925 net.cpp:382] conv1 -> conv1
I0428 20:31:15.945394  3925 net.cpp:124] Setting up conv1
I0428 20:31:15.945423  3925 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:15.945427  3925 net.cpp:139] Memory required for data: 29370800
I0428 20:31:15.945437  3925 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:15.945446  3925 net.cpp:86] Creating Layer pool1
I0428 20:31:15.945449  3925 net.cpp:408] pool1 <- conv1
I0428 20:31:15.945456  3925 net.cpp:382] pool1 -> pool1
I0428 20:31:15.945509  3925 net.cpp:124] Setting up pool1
I0428 20:31:15.945514  3925 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:15.945518  3925 net.cpp:139] Memory required for data: 29434800
I0428 20:31:15.945520  3925 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:15.945528  3925 net.cpp:86] Creating Layer ip1
I0428 20:31:15.945531  3925 net.cpp:408] ip1 <- pool1
I0428 20:31:15.945536  3925 net.cpp:382] ip1 -> ip1
I0428 20:31:15.945684  3925 net.cpp:124] Setting up ip1
I0428 20:31:15.945703  3925 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:15.945706  3925 net.cpp:139] Memory required for data: 29454800
I0428 20:31:15.945714  3925 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:15.945721  3925 net.cpp:86] Creating Layer relu1
I0428 20:31:15.945724  3925 net.cpp:408] relu1 <- ip1
I0428 20:31:15.945729  3925 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:15.945893  3925 net.cpp:124] Setting up relu1
I0428 20:31:15.945900  3925 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:15.945904  3925 net.cpp:139] Memory required for data: 29474800
I0428 20:31:15.945907  3925 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:15.945915  3925 net.cpp:86] Creating Layer ip2
I0428 20:31:15.945919  3925 net.cpp:408] ip2 <- ip1
I0428 20:31:15.945924  3925 net.cpp:382] ip2 -> ip2
I0428 20:31:15.946030  3925 net.cpp:124] Setting up ip2
I0428 20:31:15.946038  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.946040  3925 net.cpp:139] Memory required for data: 29478800
I0428 20:31:15.946048  3925 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:15.946051  3925 net.cpp:86] Creating Layer relu2
I0428 20:31:15.946055  3925 net.cpp:408] relu2 <- ip2
I0428 20:31:15.946059  3925 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:15.946292  3925 net.cpp:124] Setting up relu2
I0428 20:31:15.946301  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.946305  3925 net.cpp:139] Memory required for data: 29482800
I0428 20:31:15.946308  3925 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:15.946313  3925 net.cpp:86] Creating Layer ip3
I0428 20:31:15.946316  3925 net.cpp:408] ip3 <- ip2
I0428 20:31:15.946322  3925 net.cpp:382] ip3 -> ip3
I0428 20:31:15.946472  3925 net.cpp:124] Setting up ip3
I0428 20:31:15.946480  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.946483  3925 net.cpp:139] Memory required for data: 29486800
I0428 20:31:15.946497  3925 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:15.946502  3925 net.cpp:86] Creating Layer relu3
I0428 20:31:15.946506  3925 net.cpp:408] relu3 <- ip3
I0428 20:31:15.946511  3925 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:15.947295  3925 net.cpp:124] Setting up relu3
I0428 20:31:15.947309  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.947325  3925 net.cpp:139] Memory required for data: 29490800
I0428 20:31:15.947329  3925 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:15.947350  3925 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:15.947352  3925 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:15.947358  3925 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:15.947365  3925 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:15.947407  3925 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:15.947412  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.947415  3925 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:15.947417  3925 net.cpp:139] Memory required for data: 29498800
I0428 20:31:15.947420  3925 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:15.947427  3925 net.cpp:86] Creating Layer accuracy
I0428 20:31:15.947429  3925 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:15.947433  3925 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:15.947438  3925 net.cpp:382] accuracy -> accuracy
I0428 20:31:15.947445  3925 net.cpp:124] Setting up accuracy
I0428 20:31:15.947448  3925 net.cpp:131] Top shape: (1)
I0428 20:31:15.947451  3925 net.cpp:139] Memory required for data: 29498804
I0428 20:31:15.947454  3925 layer_factory.hpp:77] Creating layer loss
I0428 20:31:15.947458  3925 net.cpp:86] Creating Layer loss
I0428 20:31:15.947461  3925 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:15.947465  3925 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:15.947470  3925 net.cpp:382] loss -> loss
I0428 20:31:15.947475  3925 layer_factory.hpp:77] Creating layer loss
I0428 20:31:15.947707  3925 net.cpp:124] Setting up loss
I0428 20:31:15.947716  3925 net.cpp:131] Top shape: (1)
I0428 20:31:15.947720  3925 net.cpp:134]     with loss weight 1
I0428 20:31:15.947734  3925 net.cpp:139] Memory required for data: 29498808
I0428 20:31:15.947738  3925 net.cpp:200] loss needs backward computation.
I0428 20:31:15.947742  3925 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:15.947746  3925 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:15.947751  3925 net.cpp:200] relu3 needs backward computation.
I0428 20:31:15.947752  3925 net.cpp:200] ip3 needs backward computation.
I0428 20:31:15.947755  3925 net.cpp:200] relu2 needs backward computation.
I0428 20:31:15.947758  3925 net.cpp:200] ip2 needs backward computation.
I0428 20:31:15.947762  3925 net.cpp:200] relu1 needs backward computation.
I0428 20:31:15.947764  3925 net.cpp:200] ip1 needs backward computation.
I0428 20:31:15.947767  3925 net.cpp:200] pool1 needs backward computation.
I0428 20:31:15.947770  3925 net.cpp:200] conv1 needs backward computation.
I0428 20:31:15.947773  3925 net.cpp:200] pool0 needs backward computation.
I0428 20:31:15.947777  3925 net.cpp:200] conv0 needs backward computation.
I0428 20:31:15.947780  3925 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:15.947784  3925 net.cpp:202] mnist does not need backward computation.
I0428 20:31:15.947787  3925 net.cpp:244] This network produces output accuracy
I0428 20:31:15.947790  3925 net.cpp:244] This network produces output loss
I0428 20:31:15.947801  3925 net.cpp:257] Network initialization done.
I0428 20:31:15.947850  3925 solver.cpp:56] Solver scaffolding done.
I0428 20:31:15.948194  3925 caffe.cpp:248] Starting Optimization
I0428 20:31:15.948200  3925 solver.cpp:273] Solving LeNet
I0428 20:31:15.948202  3925 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:15.949132  3925 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:16.044348  3932 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:16.046881  3925 solver.cpp:398]     Test net output #0: accuracy = 0.0594
I0428 20:31:16.046916  3925 solver.cpp:398]     Test net output #1: loss = 2.32159 (* 1 = 2.32159 loss)
I0428 20:31:16.052574  3925 solver.cpp:219] Iteration 0 (-9.70413e-35 iter/s, 0.104321s/100 iters), loss = 2.32316
I0428 20:31:16.052615  3925 solver.cpp:238]     Train net output #0: loss = 2.32316 (* 1 = 2.32316 loss)
I0428 20:31:16.052626  3925 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:16.262044  3925 solver.cpp:219] Iteration 100 (477.497 iter/s, 0.209425s/100 iters), loss = 0.523985
I0428 20:31:16.262074  3925 solver.cpp:238]     Train net output #0: loss = 0.523985 (* 1 = 0.523985 loss)
I0428 20:31:16.262081  3925 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:16.472257  3925 solver.cpp:219] Iteration 200 (475.808 iter/s, 0.210169s/100 iters), loss = 0.248673
I0428 20:31:16.472287  3925 solver.cpp:238]     Train net output #0: loss = 0.248673 (* 1 = 0.248673 loss)
I0428 20:31:16.472295  3925 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:16.686739  3925 solver.cpp:219] Iteration 300 (466.338 iter/s, 0.214437s/100 iters), loss = 0.182068
I0428 20:31:16.686771  3925 solver.cpp:238]     Train net output #0: loss = 0.182068 (* 1 = 0.182068 loss)
I0428 20:31:16.686780  3925 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:16.898082  3925 solver.cpp:219] Iteration 400 (473.285 iter/s, 0.211289s/100 iters), loss = 0.133946
I0428 20:31:16.898139  3925 solver.cpp:238]     Train net output #0: loss = 0.133946 (* 1 = 0.133946 loss)
I0428 20:31:16.898159  3925 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:17.108176  3925 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:17.207164  3932 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:17.210695  3925 solver.cpp:398]     Test net output #0: accuracy = 0.9622
I0428 20:31:17.210722  3925 solver.cpp:398]     Test net output #1: loss = 0.127435 (* 1 = 0.127435 loss)
I0428 20:31:17.212677  3925 solver.cpp:219] Iteration 500 (317.942 iter/s, 0.314522s/100 iters), loss = 0.150623
I0428 20:31:17.212705  3925 solver.cpp:238]     Train net output #0: loss = 0.150623 (* 1 = 0.150623 loss)
I0428 20:31:17.212731  3925 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:17.425995  3925 solver.cpp:219] Iteration 600 (468.886 iter/s, 0.213272s/100 iters), loss = 0.0963781
I0428 20:31:17.426033  3925 solver.cpp:238]     Train net output #0: loss = 0.0963781 (* 1 = 0.0963781 loss)
I0428 20:31:17.426043  3925 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:17.648732  3925 solver.cpp:219] Iteration 700 (449.071 iter/s, 0.222682s/100 iters), loss = 0.175829
I0428 20:31:17.648775  3925 solver.cpp:238]     Train net output #0: loss = 0.175829 (* 1 = 0.175829 loss)
I0428 20:31:17.648787  3925 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:17.873440  3925 solver.cpp:219] Iteration 800 (445.145 iter/s, 0.224646s/100 iters), loss = 0.186669
I0428 20:31:17.873482  3925 solver.cpp:238]     Train net output #0: loss = 0.186669 (* 1 = 0.186669 loss)
I0428 20:31:17.873493  3925 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:18.096469  3925 solver.cpp:219] Iteration 900 (448.489 iter/s, 0.222971s/100 iters), loss = 0.119993
I0428 20:31:18.096513  3925 solver.cpp:238]     Train net output #0: loss = 0.119993 (* 1 = 0.119993 loss)
I0428 20:31:18.096524  3925 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:18.171100  3931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:18.318085  3925 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:18.320369  3925 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:18.321774  3925 solver.cpp:311] Iteration 1000, loss = 0.0756629
I0428 20:31:18.321799  3925 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:18.422518  3932 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:18.426065  3925 solver.cpp:398]     Test net output #0: accuracy = 0.9751
I0428 20:31:18.426089  3925 solver.cpp:398]     Test net output #1: loss = 0.0828137 (* 1 = 0.0828137 loss)
I0428 20:31:18.426093  3925 solver.cpp:316] Optimization Done.
I0428 20:31:18.426097  3925 caffe.cpp:259] Optimization Done.
