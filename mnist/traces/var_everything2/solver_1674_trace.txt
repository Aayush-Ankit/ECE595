I0428 20:39:04.975601  5229 caffe.cpp:218] Using GPUs 0
I0428 20:39:05.005146  5229 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:39:05.449293  5229 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1674.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:39:05.449460  5229 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1674.prototxt
I0428 20:39:05.449786  5229 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:39:05.449802  5229 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:39:05.449883  5229 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:05.449946  5229 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:05.450044  5229 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:39:05.450063  5229 net.cpp:86] Creating Layer mnist
I0428 20:39:05.450072  5229 net.cpp:382] mnist -> data
I0428 20:39:05.450089  5229 net.cpp:382] mnist -> label
I0428 20:39:05.451091  5229 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:39:05.453490  5229 net.cpp:124] Setting up mnist
I0428 20:39:05.453505  5229 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:39:05.453508  5229 net.cpp:131] Top shape: 64 (64)
I0428 20:39:05.453511  5229 net.cpp:139] Memory required for data: 200960
I0428 20:39:05.453517  5229 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:05.453557  5229 net.cpp:86] Creating Layer conv0
I0428 20:39:05.453588  5229 net.cpp:408] conv0 <- data
I0428 20:39:05.453599  5229 net.cpp:382] conv0 -> conv0
I0428 20:39:05.689316  5229 net.cpp:124] Setting up conv0
I0428 20:39:05.689354  5229 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:39:05.689358  5229 net.cpp:139] Memory required for data: 14946560
I0428 20:39:05.689373  5229 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:05.689386  5229 net.cpp:86] Creating Layer pool0
I0428 20:39:05.689390  5229 net.cpp:408] pool0 <- conv0
I0428 20:39:05.689395  5229 net.cpp:382] pool0 -> pool0
I0428 20:39:05.689460  5229 net.cpp:124] Setting up pool0
I0428 20:39:05.689472  5229 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:39:05.689476  5229 net.cpp:139] Memory required for data: 18632960
I0428 20:39:05.689478  5229 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:05.689489  5229 net.cpp:86] Creating Layer conv1
I0428 20:39:05.689492  5229 net.cpp:408] conv1 <- pool0
I0428 20:39:05.689497  5229 net.cpp:382] conv1 -> conv1
I0428 20:39:05.693801  5229 net.cpp:124] Setting up conv1
I0428 20:39:05.693830  5229 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:39:05.693835  5229 net.cpp:139] Memory required for data: 20271360
I0428 20:39:05.693842  5229 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:05.693850  5229 net.cpp:86] Creating Layer pool1
I0428 20:39:05.693852  5229 net.cpp:408] pool1 <- conv1
I0428 20:39:05.693858  5229 net.cpp:382] pool1 -> pool1
I0428 20:39:05.693909  5229 net.cpp:124] Setting up pool1
I0428 20:39:05.693914  5229 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:39:05.693917  5229 net.cpp:139] Memory required for data: 20680960
I0428 20:39:05.693920  5229 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:05.693928  5229 net.cpp:86] Creating Layer ip1
I0428 20:39:05.693930  5229 net.cpp:408] ip1 <- pool1
I0428 20:39:05.693936  5229 net.cpp:382] ip1 -> ip1
I0428 20:39:05.694478  5229 net.cpp:124] Setting up ip1
I0428 20:39:05.694488  5229 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:05.694505  5229 net.cpp:139] Memory required for data: 20693760
I0428 20:39:05.694512  5229 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:05.694517  5229 net.cpp:86] Creating Layer relu1
I0428 20:39:05.694521  5229 net.cpp:408] relu1 <- ip1
I0428 20:39:05.694525  5229 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:05.694705  5229 net.cpp:124] Setting up relu1
I0428 20:39:05.694713  5229 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:05.694717  5229 net.cpp:139] Memory required for data: 20706560
I0428 20:39:05.694720  5229 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:05.694726  5229 net.cpp:86] Creating Layer ip2
I0428 20:39:05.694730  5229 net.cpp:408] ip2 <- ip1
I0428 20:39:05.694736  5229 net.cpp:382] ip2 -> ip2
I0428 20:39:05.694880  5229 net.cpp:124] Setting up ip2
I0428 20:39:05.694887  5229 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:05.694890  5229 net.cpp:139] Memory required for data: 20719360
I0428 20:39:05.694895  5229 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:05.694901  5229 net.cpp:86] Creating Layer relu2
I0428 20:39:05.694905  5229 net.cpp:408] relu2 <- ip2
I0428 20:39:05.694908  5229 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:05.695792  5229 net.cpp:124] Setting up relu2
I0428 20:39:05.695804  5229 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:05.695808  5229 net.cpp:139] Memory required for data: 20732160
I0428 20:39:05.695811  5229 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:05.695818  5229 net.cpp:86] Creating Layer ip3
I0428 20:39:05.695822  5229 net.cpp:408] ip3 <- ip2
I0428 20:39:05.695827  5229 net.cpp:382] ip3 -> ip3
I0428 20:39:05.695930  5229 net.cpp:124] Setting up ip3
I0428 20:39:05.695938  5229 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:05.695941  5229 net.cpp:139] Memory required for data: 20734720
I0428 20:39:05.695948  5229 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:05.695953  5229 net.cpp:86] Creating Layer relu3
I0428 20:39:05.695956  5229 net.cpp:408] relu3 <- ip3
I0428 20:39:05.695976  5229 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:05.696151  5229 net.cpp:124] Setting up relu3
I0428 20:39:05.696159  5229 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:05.696162  5229 net.cpp:139] Memory required for data: 20737280
I0428 20:39:05.696166  5229 layer_factory.hpp:77] Creating layer loss
I0428 20:39:05.696172  5229 net.cpp:86] Creating Layer loss
I0428 20:39:05.696177  5229 net.cpp:408] loss <- ip3
I0428 20:39:05.696180  5229 net.cpp:408] loss <- label
I0428 20:39:05.696187  5229 net.cpp:382] loss -> loss
I0428 20:39:05.696203  5229 layer_factory.hpp:77] Creating layer loss
I0428 20:39:05.696490  5229 net.cpp:124] Setting up loss
I0428 20:39:05.696498  5229 net.cpp:131] Top shape: (1)
I0428 20:39:05.696512  5229 net.cpp:134]     with loss weight 1
I0428 20:39:05.696527  5229 net.cpp:139] Memory required for data: 20737284
I0428 20:39:05.696529  5229 net.cpp:200] loss needs backward computation.
I0428 20:39:05.696533  5229 net.cpp:200] relu3 needs backward computation.
I0428 20:39:05.696537  5229 net.cpp:200] ip3 needs backward computation.
I0428 20:39:05.696539  5229 net.cpp:200] relu2 needs backward computation.
I0428 20:39:05.696542  5229 net.cpp:200] ip2 needs backward computation.
I0428 20:39:05.696544  5229 net.cpp:200] relu1 needs backward computation.
I0428 20:39:05.696547  5229 net.cpp:200] ip1 needs backward computation.
I0428 20:39:05.696549  5229 net.cpp:200] pool1 needs backward computation.
I0428 20:39:05.696552  5229 net.cpp:200] conv1 needs backward computation.
I0428 20:39:05.696555  5229 net.cpp:200] pool0 needs backward computation.
I0428 20:39:05.696558  5229 net.cpp:200] conv0 needs backward computation.
I0428 20:39:05.696561  5229 net.cpp:202] mnist does not need backward computation.
I0428 20:39:05.696564  5229 net.cpp:244] This network produces output loss
I0428 20:39:05.696576  5229 net.cpp:257] Network initialization done.
I0428 20:39:05.696977  5229 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1674.prototxt
I0428 20:39:05.697021  5229 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:39:05.697135  5229 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:05.697221  5229 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:05.697264  5229 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:39:05.697276  5229 net.cpp:86] Creating Layer mnist
I0428 20:39:05.697281  5229 net.cpp:382] mnist -> data
I0428 20:39:05.697290  5229 net.cpp:382] mnist -> label
I0428 20:39:05.697408  5229 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:39:05.699451  5229 net.cpp:124] Setting up mnist
I0428 20:39:05.699486  5229 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:39:05.699492  5229 net.cpp:131] Top shape: 100 (100)
I0428 20:39:05.699496  5229 net.cpp:139] Memory required for data: 314000
I0428 20:39:05.699498  5229 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:39:05.699504  5229 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:39:05.699508  5229 net.cpp:408] label_mnist_1_split <- label
I0428 20:39:05.699512  5229 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:39:05.699519  5229 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:39:05.699561  5229 net.cpp:124] Setting up label_mnist_1_split
I0428 20:39:05.699566  5229 net.cpp:131] Top shape: 100 (100)
I0428 20:39:05.699569  5229 net.cpp:131] Top shape: 100 (100)
I0428 20:39:05.699573  5229 net.cpp:139] Memory required for data: 314800
I0428 20:39:05.699575  5229 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:05.699584  5229 net.cpp:86] Creating Layer conv0
I0428 20:39:05.699586  5229 net.cpp:408] conv0 <- data
I0428 20:39:05.699592  5229 net.cpp:382] conv0 -> conv0
I0428 20:39:05.701467  5229 net.cpp:124] Setting up conv0
I0428 20:39:05.701496  5229 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:39:05.701500  5229 net.cpp:139] Memory required for data: 23354800
I0428 20:39:05.701509  5229 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:05.701532  5229 net.cpp:86] Creating Layer pool0
I0428 20:39:05.701535  5229 net.cpp:408] pool0 <- conv0
I0428 20:39:05.701540  5229 net.cpp:382] pool0 -> pool0
I0428 20:39:05.701580  5229 net.cpp:124] Setting up pool0
I0428 20:39:05.701586  5229 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:39:05.701587  5229 net.cpp:139] Memory required for data: 29114800
I0428 20:39:05.701591  5229 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:05.701599  5229 net.cpp:86] Creating Layer conv1
I0428 20:39:05.701602  5229 net.cpp:408] conv1 <- pool0
I0428 20:39:05.701609  5229 net.cpp:382] conv1 -> conv1
I0428 20:39:05.704571  5229 net.cpp:124] Setting up conv1
I0428 20:39:05.704584  5229 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:39:05.704587  5229 net.cpp:139] Memory required for data: 31674800
I0428 20:39:05.704596  5229 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:05.704602  5229 net.cpp:86] Creating Layer pool1
I0428 20:39:05.704620  5229 net.cpp:408] pool1 <- conv1
I0428 20:39:05.704627  5229 net.cpp:382] pool1 -> pool1
I0428 20:39:05.704663  5229 net.cpp:124] Setting up pool1
I0428 20:39:05.704668  5229 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:39:05.704670  5229 net.cpp:139] Memory required for data: 32314800
I0428 20:39:05.704672  5229 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:05.704679  5229 net.cpp:86] Creating Layer ip1
I0428 20:39:05.704682  5229 net.cpp:408] ip1 <- pool1
I0428 20:39:05.704687  5229 net.cpp:382] ip1 -> ip1
I0428 20:39:05.705318  5229 net.cpp:124] Setting up ip1
I0428 20:39:05.705350  5229 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:05.705354  5229 net.cpp:139] Memory required for data: 32334800
I0428 20:39:05.705361  5229 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:05.705366  5229 net.cpp:86] Creating Layer relu1
I0428 20:39:05.705369  5229 net.cpp:408] relu1 <- ip1
I0428 20:39:05.705375  5229 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:05.705577  5229 net.cpp:124] Setting up relu1
I0428 20:39:05.705585  5229 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:05.705588  5229 net.cpp:139] Memory required for data: 32354800
I0428 20:39:05.705591  5229 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:05.705615  5229 net.cpp:86] Creating Layer ip2
I0428 20:39:05.705624  5229 net.cpp:408] ip2 <- ip1
I0428 20:39:05.705629  5229 net.cpp:382] ip2 -> ip2
I0428 20:39:05.705760  5229 net.cpp:124] Setting up ip2
I0428 20:39:05.705768  5229 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:05.705771  5229 net.cpp:139] Memory required for data: 32374800
I0428 20:39:05.705776  5229 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:05.705780  5229 net.cpp:86] Creating Layer relu2
I0428 20:39:05.705783  5229 net.cpp:408] relu2 <- ip2
I0428 20:39:05.705790  5229 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:05.705943  5229 net.cpp:124] Setting up relu2
I0428 20:39:05.705952  5229 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:05.705991  5229 net.cpp:139] Memory required for data: 32394800
I0428 20:39:05.705999  5229 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:05.706006  5229 net.cpp:86] Creating Layer ip3
I0428 20:39:05.706013  5229 net.cpp:408] ip3 <- ip2
I0428 20:39:05.706018  5229 net.cpp:382] ip3 -> ip3
I0428 20:39:05.706112  5229 net.cpp:124] Setting up ip3
I0428 20:39:05.706120  5229 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:05.706122  5229 net.cpp:139] Memory required for data: 32398800
I0428 20:39:05.706135  5229 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:05.706141  5229 net.cpp:86] Creating Layer relu3
I0428 20:39:05.706145  5229 net.cpp:408] relu3 <- ip3
I0428 20:39:05.706148  5229 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:05.706990  5229 net.cpp:124] Setting up relu3
I0428 20:39:05.707003  5229 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:05.707006  5229 net.cpp:139] Memory required for data: 32402800
I0428 20:39:05.707010  5229 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:39:05.707015  5229 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:39:05.707017  5229 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:39:05.707022  5229 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:39:05.707028  5229 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:39:05.707070  5229 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:39:05.707075  5229 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:05.707079  5229 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:05.707082  5229 net.cpp:139] Memory required for data: 32410800
I0428 20:39:05.707093  5229 layer_factory.hpp:77] Creating layer accuracy
I0428 20:39:05.707100  5229 net.cpp:86] Creating Layer accuracy
I0428 20:39:05.707103  5229 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:39:05.707108  5229 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:39:05.707113  5229 net.cpp:382] accuracy -> accuracy
I0428 20:39:05.707118  5229 net.cpp:124] Setting up accuracy
I0428 20:39:05.707123  5229 net.cpp:131] Top shape: (1)
I0428 20:39:05.707125  5229 net.cpp:139] Memory required for data: 32410804
I0428 20:39:05.707129  5229 layer_factory.hpp:77] Creating layer loss
I0428 20:39:05.707134  5229 net.cpp:86] Creating Layer loss
I0428 20:39:05.707136  5229 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:39:05.707139  5229 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:39:05.707144  5229 net.cpp:382] loss -> loss
I0428 20:39:05.707149  5229 layer_factory.hpp:77] Creating layer loss
I0428 20:39:05.707397  5229 net.cpp:124] Setting up loss
I0428 20:39:05.707422  5229 net.cpp:131] Top shape: (1)
I0428 20:39:05.707425  5229 net.cpp:134]     with loss weight 1
I0428 20:39:05.707439  5229 net.cpp:139] Memory required for data: 32410808
I0428 20:39:05.707443  5229 net.cpp:200] loss needs backward computation.
I0428 20:39:05.707446  5229 net.cpp:202] accuracy does not need backward computation.
I0428 20:39:05.707450  5229 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:39:05.707453  5229 net.cpp:200] relu3 needs backward computation.
I0428 20:39:05.707455  5229 net.cpp:200] ip3 needs backward computation.
I0428 20:39:05.707458  5229 net.cpp:200] relu2 needs backward computation.
I0428 20:39:05.707460  5229 net.cpp:200] ip2 needs backward computation.
I0428 20:39:05.707475  5229 net.cpp:200] relu1 needs backward computation.
I0428 20:39:05.707478  5229 net.cpp:200] ip1 needs backward computation.
I0428 20:39:05.707480  5229 net.cpp:200] pool1 needs backward computation.
I0428 20:39:05.707489  5229 net.cpp:200] conv1 needs backward computation.
I0428 20:39:05.707491  5229 net.cpp:200] pool0 needs backward computation.
I0428 20:39:05.707494  5229 net.cpp:200] conv0 needs backward computation.
I0428 20:39:05.707497  5229 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:39:05.707500  5229 net.cpp:202] mnist does not need backward computation.
I0428 20:39:05.707504  5229 net.cpp:244] This network produces output accuracy
I0428 20:39:05.707511  5229 net.cpp:244] This network produces output loss
I0428 20:39:05.707522  5229 net.cpp:257] Network initialization done.
I0428 20:39:05.707562  5229 solver.cpp:56] Solver scaffolding done.
I0428 20:39:05.707904  5229 caffe.cpp:248] Starting Optimization
I0428 20:39:05.707911  5229 solver.cpp:273] Solving LeNet
I0428 20:39:05.707913  5229 solver.cpp:274] Learning Rate Policy: inv
I0428 20:39:05.709417  5229 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:39:05.834538  5236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:05.837849  5229 solver.cpp:398]     Test net output #0: accuracy = 0.089
I0428 20:39:05.837868  5229 solver.cpp:398]     Test net output #1: loss = 2.31372 (* 1 = 2.31372 loss)
I0428 20:39:05.843093  5229 solver.cpp:219] Iteration 0 (-2.01252e-31 iter/s, 0.135153s/100 iters), loss = 2.32398
I0428 20:39:05.843116  5229 solver.cpp:238]     Train net output #0: loss = 2.32398 (* 1 = 2.32398 loss)
I0428 20:39:05.843142  5229 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:39:06.115217  5229 solver.cpp:219] Iteration 100 (367.539 iter/s, 0.27208s/100 iters), loss = 0.172047
I0428 20:39:06.115243  5229 solver.cpp:238]     Train net output #0: loss = 0.172047 (* 1 = 0.172047 loss)
I0428 20:39:06.115249  5229 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:39:06.387526  5229 solver.cpp:219] Iteration 200 (367.29 iter/s, 0.272264s/100 iters), loss = 0.197766
I0428 20:39:06.387552  5229 solver.cpp:238]     Train net output #0: loss = 0.197766 (* 1 = 0.197766 loss)
I0428 20:39:06.387557  5229 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:39:06.662628  5229 solver.cpp:219] Iteration 300 (363.561 iter/s, 0.275057s/100 iters), loss = 0.169758
I0428 20:39:06.662657  5229 solver.cpp:238]     Train net output #0: loss = 0.169758 (* 1 = 0.169758 loss)
I0428 20:39:06.662663  5229 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:39:06.938246  5229 solver.cpp:219] Iteration 400 (362.883 iter/s, 0.275571s/100 iters), loss = 0.103793
I0428 20:39:06.938272  5229 solver.cpp:238]     Train net output #0: loss = 0.103793 (* 1 = 0.103793 loss)
I0428 20:39:06.938279  5229 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:39:07.212949  5229 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:39:07.336750  5236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:07.341518  5229 solver.cpp:398]     Test net output #0: accuracy = 0.972
I0428 20:39:07.341540  5229 solver.cpp:398]     Test net output #1: loss = 0.0853687 (* 1 = 0.0853687 loss)
I0428 20:39:07.344168  5229 solver.cpp:219] Iteration 500 (246.383 iter/s, 0.405873s/100 iters), loss = 0.0862451
I0428 20:39:07.344192  5229 solver.cpp:238]     Train net output #0: loss = 0.0862451 (* 1 = 0.0862451 loss)
I0428 20:39:07.344225  5229 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:39:07.620985  5229 solver.cpp:219] Iteration 600 (361.306 iter/s, 0.276774s/100 iters), loss = 0.0870428
I0428 20:39:07.621011  5229 solver.cpp:238]     Train net output #0: loss = 0.0870428 (* 1 = 0.0870428 loss)
I0428 20:39:07.621017  5229 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:39:07.905046  5229 solver.cpp:219] Iteration 700 (352.097 iter/s, 0.284013s/100 iters), loss = 0.109175
I0428 20:39:07.905097  5229 solver.cpp:238]     Train net output #0: loss = 0.109175 (* 1 = 0.109175 loss)
I0428 20:39:07.905104  5229 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:39:08.191414  5229 solver.cpp:219] Iteration 800 (349.284 iter/s, 0.2863s/100 iters), loss = 0.209188
I0428 20:39:08.191439  5229 solver.cpp:238]     Train net output #0: loss = 0.209188 (* 1 = 0.209188 loss)
I0428 20:39:08.191447  5229 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:39:08.481818  5229 solver.cpp:219] Iteration 900 (344.401 iter/s, 0.290359s/100 iters), loss = 0.143988
I0428 20:39:08.481844  5229 solver.cpp:238]     Train net output #0: loss = 0.143988 (* 1 = 0.143988 loss)
I0428 20:39:08.481850  5229 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:39:08.577735  5235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:08.767863  5229 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:39:08.773758  5229 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:39:08.777390  5229 solver.cpp:311] Iteration 1000, loss = 0.0807487
I0428 20:39:08.777406  5229 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:39:08.906455  5236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:08.911341  5229 solver.cpp:398]     Test net output #0: accuracy = 0.9815
I0428 20:39:08.911361  5229 solver.cpp:398]     Test net output #1: loss = 0.0583112 (* 1 = 0.0583112 loss)
I0428 20:39:08.911366  5229 solver.cpp:316] Optimization Done.
I0428 20:39:08.911370  5229 caffe.cpp:259] Optimization Done.
