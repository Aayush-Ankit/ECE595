I0428 19:41:39.417357 24878 caffe.cpp:218] Using GPUs 0
I0428 19:41:39.455289 24878 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:39.977900 24878 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test371.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:39.978051 24878 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test371.prototxt
I0428 19:41:39.978459 24878 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:39.978477 24878 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:39.978580 24878 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:39.978653 24878 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:39.978749 24878 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:39.978772 24878 net.cpp:86] Creating Layer mnist
I0428 19:41:39.978786 24878 net.cpp:382] mnist -> data
I0428 19:41:39.978808 24878 net.cpp:382] mnist -> label
I0428 19:41:39.979921 24878 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:39.982379 24878 net.cpp:124] Setting up mnist
I0428 19:41:39.982398 24878 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:39.982403 24878 net.cpp:131] Top shape: 64 (64)
I0428 19:41:39.982408 24878 net.cpp:139] Memory required for data: 200960
I0428 19:41:39.982415 24878 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:39.982430 24878 net.cpp:86] Creating Layer conv0
I0428 19:41:39.982460 24878 net.cpp:408] conv0 <- data
I0428 19:41:39.982481 24878 net.cpp:382] conv0 -> conv0
I0428 19:41:40.274807 24878 net.cpp:124] Setting up conv0
I0428 19:41:40.274838 24878 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:40.274843 24878 net.cpp:139] Memory required for data: 495872
I0428 19:41:40.274862 24878 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:40.274885 24878 net.cpp:86] Creating Layer pool0
I0428 19:41:40.274890 24878 net.cpp:408] pool0 <- conv0
I0428 19:41:40.274896 24878 net.cpp:382] pool0 -> pool0
I0428 19:41:40.274955 24878 net.cpp:124] Setting up pool0
I0428 19:41:40.274965 24878 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:40.274967 24878 net.cpp:139] Memory required for data: 569600
I0428 19:41:40.274971 24878 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:40.274984 24878 net.cpp:86] Creating Layer conv1
I0428 19:41:40.274991 24878 net.cpp:408] conv1 <- pool0
I0428 19:41:40.274996 24878 net.cpp:382] conv1 -> conv1
I0428 19:41:40.277140 24878 net.cpp:124] Setting up conv1
I0428 19:41:40.277158 24878 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:40.277163 24878 net.cpp:139] Memory required for data: 733440
I0428 19:41:40.277173 24878 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:40.277182 24878 net.cpp:86] Creating Layer pool1
I0428 19:41:40.277187 24878 net.cpp:408] pool1 <- conv1
I0428 19:41:40.277194 24878 net.cpp:382] pool1 -> pool1
I0428 19:41:40.277247 24878 net.cpp:124] Setting up pool1
I0428 19:41:40.277256 24878 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:40.277259 24878 net.cpp:139] Memory required for data: 774400
I0428 19:41:40.277263 24878 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:40.277271 24878 net.cpp:86] Creating Layer ip1
I0428 19:41:40.277278 24878 net.cpp:408] ip1 <- pool1
I0428 19:41:40.277284 24878 net.cpp:382] ip1 -> ip1
I0428 19:41:40.278374 24878 net.cpp:124] Setting up ip1
I0428 19:41:40.278389 24878 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:40.278394 24878 net.cpp:139] Memory required for data: 776960
I0428 19:41:40.278403 24878 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:40.278411 24878 net.cpp:86] Creating Layer relu1
I0428 19:41:40.278415 24878 net.cpp:408] relu1 <- ip1
I0428 19:41:40.278421 24878 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:40.278623 24878 net.cpp:124] Setting up relu1
I0428 19:41:40.278633 24878 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:40.278636 24878 net.cpp:139] Memory required for data: 779520
I0428 19:41:40.278640 24878 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:40.278648 24878 net.cpp:86] Creating Layer ip2
I0428 19:41:40.278654 24878 net.cpp:408] ip2 <- ip1
I0428 19:41:40.278661 24878 net.cpp:382] ip2 -> ip2
I0428 19:41:40.278780 24878 net.cpp:124] Setting up ip2
I0428 19:41:40.278800 24878 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:40.278803 24878 net.cpp:139] Memory required for data: 792320
I0428 19:41:40.278810 24878 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:40.278823 24878 net.cpp:86] Creating Layer relu2
I0428 19:41:40.278827 24878 net.cpp:408] relu2 <- ip2
I0428 19:41:40.278833 24878 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:40.279690 24878 net.cpp:124] Setting up relu2
I0428 19:41:40.279706 24878 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:40.279709 24878 net.cpp:139] Memory required for data: 805120
I0428 19:41:40.279713 24878 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:40.279722 24878 net.cpp:86] Creating Layer ip3
I0428 19:41:40.279726 24878 net.cpp:408] ip3 <- ip2
I0428 19:41:40.279743 24878 net.cpp:382] ip3 -> ip3
I0428 19:41:40.279865 24878 net.cpp:124] Setting up ip3
I0428 19:41:40.279884 24878 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:40.279888 24878 net.cpp:139] Memory required for data: 807680
I0428 19:41:40.279897 24878 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:40.279906 24878 net.cpp:86] Creating Layer relu3
I0428 19:41:40.279909 24878 net.cpp:408] relu3 <- ip3
I0428 19:41:40.279914 24878 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:40.280112 24878 net.cpp:124] Setting up relu3
I0428 19:41:40.280122 24878 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:40.280125 24878 net.cpp:139] Memory required for data: 810240
I0428 19:41:40.280129 24878 layer_factory.hpp:77] Creating layer loss
I0428 19:41:40.280136 24878 net.cpp:86] Creating Layer loss
I0428 19:41:40.280143 24878 net.cpp:408] loss <- ip3
I0428 19:41:40.280146 24878 net.cpp:408] loss <- label
I0428 19:41:40.280153 24878 net.cpp:382] loss -> loss
I0428 19:41:40.280174 24878 layer_factory.hpp:77] Creating layer loss
I0428 19:41:40.280439 24878 net.cpp:124] Setting up loss
I0428 19:41:40.280449 24878 net.cpp:131] Top shape: (1)
I0428 19:41:40.280453 24878 net.cpp:134]     with loss weight 1
I0428 19:41:40.280469 24878 net.cpp:139] Memory required for data: 810244
I0428 19:41:40.280473 24878 net.cpp:200] loss needs backward computation.
I0428 19:41:40.280478 24878 net.cpp:200] relu3 needs backward computation.
I0428 19:41:40.280490 24878 net.cpp:200] ip3 needs backward computation.
I0428 19:41:40.280494 24878 net.cpp:200] relu2 needs backward computation.
I0428 19:41:40.280498 24878 net.cpp:200] ip2 needs backward computation.
I0428 19:41:40.280501 24878 net.cpp:200] relu1 needs backward computation.
I0428 19:41:40.280505 24878 net.cpp:200] ip1 needs backward computation.
I0428 19:41:40.280508 24878 net.cpp:200] pool1 needs backward computation.
I0428 19:41:40.280514 24878 net.cpp:200] conv1 needs backward computation.
I0428 19:41:40.280517 24878 net.cpp:200] pool0 needs backward computation.
I0428 19:41:40.280521 24878 net.cpp:200] conv0 needs backward computation.
I0428 19:41:40.280525 24878 net.cpp:202] mnist does not need backward computation.
I0428 19:41:40.280529 24878 net.cpp:244] This network produces output loss
I0428 19:41:40.280539 24878 net.cpp:257] Network initialization done.
I0428 19:41:40.280930 24878 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test371.prototxt
I0428 19:41:40.280962 24878 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:40.281071 24878 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:40.281165 24878 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:40.281232 24878 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:40.281247 24878 net.cpp:86] Creating Layer mnist
I0428 19:41:40.281252 24878 net.cpp:382] mnist -> data
I0428 19:41:40.281262 24878 net.cpp:382] mnist -> label
I0428 19:41:40.281369 24878 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:40.283540 24878 net.cpp:124] Setting up mnist
I0428 19:41:40.283565 24878 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:40.283571 24878 net.cpp:131] Top shape: 100 (100)
I0428 19:41:40.283574 24878 net.cpp:139] Memory required for data: 314000
I0428 19:41:40.283578 24878 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:40.283612 24878 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:40.283627 24878 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:40.283633 24878 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:40.283643 24878 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:40.283700 24878 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:40.283709 24878 net.cpp:131] Top shape: 100 (100)
I0428 19:41:40.283712 24878 net.cpp:131] Top shape: 100 (100)
I0428 19:41:40.283716 24878 net.cpp:139] Memory required for data: 314800
I0428 19:41:40.283720 24878 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:40.283730 24878 net.cpp:86] Creating Layer conv0
I0428 19:41:40.283735 24878 net.cpp:408] conv0 <- data
I0428 19:41:40.283741 24878 net.cpp:382] conv0 -> conv0
I0428 19:41:40.285682 24878 net.cpp:124] Setting up conv0
I0428 19:41:40.285699 24878 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:40.285704 24878 net.cpp:139] Memory required for data: 775600
I0428 19:41:40.285715 24878 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:40.285722 24878 net.cpp:86] Creating Layer pool0
I0428 19:41:40.285727 24878 net.cpp:408] pool0 <- conv0
I0428 19:41:40.285733 24878 net.cpp:382] pool0 -> pool0
I0428 19:41:40.285776 24878 net.cpp:124] Setting up pool0
I0428 19:41:40.285790 24878 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:40.285794 24878 net.cpp:139] Memory required for data: 890800
I0428 19:41:40.285805 24878 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:40.285816 24878 net.cpp:86] Creating Layer conv1
I0428 19:41:40.285820 24878 net.cpp:408] conv1 <- pool0
I0428 19:41:40.285826 24878 net.cpp:382] conv1 -> conv1
I0428 19:41:40.287578 24878 net.cpp:124] Setting up conv1
I0428 19:41:40.287593 24878 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:40.287597 24878 net.cpp:139] Memory required for data: 1146800
I0428 19:41:40.287609 24878 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:40.287618 24878 net.cpp:86] Creating Layer pool1
I0428 19:41:40.287622 24878 net.cpp:408] pool1 <- conv1
I0428 19:41:40.287628 24878 net.cpp:382] pool1 -> pool1
I0428 19:41:40.287672 24878 net.cpp:124] Setting up pool1
I0428 19:41:40.287680 24878 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:40.287684 24878 net.cpp:139] Memory required for data: 1210800
I0428 19:41:40.287688 24878 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:40.287696 24878 net.cpp:86] Creating Layer ip1
I0428 19:41:40.287700 24878 net.cpp:408] ip1 <- pool1
I0428 19:41:40.287706 24878 net.cpp:382] ip1 -> ip1
I0428 19:41:40.287838 24878 net.cpp:124] Setting up ip1
I0428 19:41:40.287847 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.287864 24878 net.cpp:139] Memory required for data: 1214800
I0428 19:41:40.287873 24878 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:40.287883 24878 net.cpp:86] Creating Layer relu1
I0428 19:41:40.287889 24878 net.cpp:408] relu1 <- ip1
I0428 19:41:40.287894 24878 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:40.288111 24878 net.cpp:124] Setting up relu1
I0428 19:41:40.288122 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.288127 24878 net.cpp:139] Memory required for data: 1218800
I0428 19:41:40.288131 24878 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:40.288142 24878 net.cpp:86] Creating Layer ip2
I0428 19:41:40.288148 24878 net.cpp:408] ip2 <- ip1
I0428 19:41:40.288156 24878 net.cpp:382] ip2 -> ip2
I0428 19:41:40.288290 24878 net.cpp:124] Setting up ip2
I0428 19:41:40.288300 24878 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:40.288305 24878 net.cpp:139] Memory required for data: 1238800
I0428 19:41:40.288312 24878 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:40.288317 24878 net.cpp:86] Creating Layer relu2
I0428 19:41:40.288322 24878 net.cpp:408] relu2 <- ip2
I0428 19:41:40.288327 24878 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:40.288620 24878 net.cpp:124] Setting up relu2
I0428 19:41:40.288631 24878 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:40.288636 24878 net.cpp:139] Memory required for data: 1258800
I0428 19:41:40.288640 24878 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:40.288647 24878 net.cpp:86] Creating Layer ip3
I0428 19:41:40.288651 24878 net.cpp:408] ip3 <- ip2
I0428 19:41:40.288660 24878 net.cpp:382] ip3 -> ip3
I0428 19:41:40.288792 24878 net.cpp:124] Setting up ip3
I0428 19:41:40.288800 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.288803 24878 net.cpp:139] Memory required for data: 1262800
I0428 19:41:40.288830 24878 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:40.288867 24878 net.cpp:86] Creating Layer relu3
I0428 19:41:40.288872 24878 net.cpp:408] relu3 <- ip3
I0428 19:41:40.288878 24878 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:40.289813 24878 net.cpp:124] Setting up relu3
I0428 19:41:40.289827 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.289832 24878 net.cpp:139] Memory required for data: 1266800
I0428 19:41:40.289836 24878 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:40.289842 24878 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:40.289846 24878 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:40.289854 24878 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:40.289861 24878 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:40.289908 24878 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:40.289916 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.289921 24878 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:40.289924 24878 net.cpp:139] Memory required for data: 1274800
I0428 19:41:40.289928 24878 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:40.289935 24878 net.cpp:86] Creating Layer accuracy
I0428 19:41:40.289939 24878 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:40.289945 24878 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:40.289950 24878 net.cpp:382] accuracy -> accuracy
I0428 19:41:40.289958 24878 net.cpp:124] Setting up accuracy
I0428 19:41:40.289971 24878 net.cpp:131] Top shape: (1)
I0428 19:41:40.289975 24878 net.cpp:139] Memory required for data: 1274804
I0428 19:41:40.289979 24878 layer_factory.hpp:77] Creating layer loss
I0428 19:41:40.289984 24878 net.cpp:86] Creating Layer loss
I0428 19:41:40.289988 24878 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:40.289994 24878 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:40.289999 24878 net.cpp:382] loss -> loss
I0428 19:41:40.290005 24878 layer_factory.hpp:77] Creating layer loss
I0428 19:41:40.290297 24878 net.cpp:124] Setting up loss
I0428 19:41:40.290308 24878 net.cpp:131] Top shape: (1)
I0428 19:41:40.290313 24878 net.cpp:134]     with loss weight 1
I0428 19:41:40.290319 24878 net.cpp:139] Memory required for data: 1274808
I0428 19:41:40.290335 24878 net.cpp:200] loss needs backward computation.
I0428 19:41:40.290340 24878 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:40.290345 24878 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:40.290349 24878 net.cpp:200] relu3 needs backward computation.
I0428 19:41:40.290352 24878 net.cpp:200] ip3 needs backward computation.
I0428 19:41:40.290356 24878 net.cpp:200] relu2 needs backward computation.
I0428 19:41:40.290360 24878 net.cpp:200] ip2 needs backward computation.
I0428 19:41:40.290364 24878 net.cpp:200] relu1 needs backward computation.
I0428 19:41:40.290366 24878 net.cpp:200] ip1 needs backward computation.
I0428 19:41:40.290377 24878 net.cpp:200] pool1 needs backward computation.
I0428 19:41:40.290383 24878 net.cpp:200] conv1 needs backward computation.
I0428 19:41:40.290387 24878 net.cpp:200] pool0 needs backward computation.
I0428 19:41:40.290391 24878 net.cpp:200] conv0 needs backward computation.
I0428 19:41:40.290396 24878 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:40.290400 24878 net.cpp:202] mnist does not need backward computation.
I0428 19:41:40.290405 24878 net.cpp:244] This network produces output accuracy
I0428 19:41:40.290408 24878 net.cpp:244] This network produces output loss
I0428 19:41:40.290421 24878 net.cpp:257] Network initialization done.
I0428 19:41:40.290470 24878 solver.cpp:56] Solver scaffolding done.
I0428 19:41:40.290916 24878 caffe.cpp:248] Starting Optimization
I0428 19:41:40.290923 24878 solver.cpp:273] Solving LeNet
I0428 19:41:40.290926 24878 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:40.291900 24878 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:40.294870 24878 blocking_queue.cpp:49] Waiting for data
I0428 19:41:40.363531 24885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:40.364007 24878 solver.cpp:398]     Test net output #0: accuracy = 0.0725
I0428 19:41:40.364034 24878 solver.cpp:398]     Test net output #1: loss = 2.31845 (* 1 = 2.31845 loss)
I0428 19:41:40.366199 24878 solver.cpp:219] Iteration 0 (-1.0804e-42 iter/s, 0.0752384s/100 iters), loss = 2.31882
I0428 19:41:40.366230 24878 solver.cpp:238]     Train net output #0: loss = 2.31882 (* 1 = 2.31882 loss)
I0428 19:41:40.366243 24878 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:40.442817 24878 solver.cpp:219] Iteration 100 (1305.88 iter/s, 0.0765767s/100 iters), loss = 1.26612
I0428 19:41:40.442843 24878 solver.cpp:238]     Train net output #0: loss = 1.26612 (* 1 = 1.26612 loss)
I0428 19:41:40.442849 24878 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:40.516188 24878 solver.cpp:219] Iteration 200 (1363.8 iter/s, 0.0733245s/100 iters), loss = 0.967021
I0428 19:41:40.516227 24878 solver.cpp:238]     Train net output #0: loss = 0.967021 (* 1 = 0.967021 loss)
I0428 19:41:40.516232 24878 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:40.591302 24878 solver.cpp:219] Iteration 300 (1331.86 iter/s, 0.0750827s/100 iters), loss = 1.13879
I0428 19:41:40.591341 24878 solver.cpp:238]     Train net output #0: loss = 1.13879 (* 1 = 1.13879 loss)
I0428 19:41:40.591346 24878 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:40.667460 24878 solver.cpp:219] Iteration 400 (1313.59 iter/s, 0.0761271s/100 iters), loss = 1.00927
I0428 19:41:40.667513 24878 solver.cpp:238]     Train net output #0: loss = 1.00927 (* 1 = 1.00927 loss)
I0428 19:41:40.667520 24878 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:40.740166 24878 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:40.792650 24885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:40.793100 24878 solver.cpp:398]     Test net output #0: accuracy = 0.8236
I0428 19:41:40.793134 24878 solver.cpp:398]     Test net output #1: loss = 0.667584 (* 1 = 0.667584 loss)
I0428 19:41:40.793992 24878 solver.cpp:219] Iteration 500 (790.63 iter/s, 0.126481s/100 iters), loss = 0.519329
I0428 19:41:40.794018 24878 solver.cpp:238]     Train net output #0: loss = 0.519329 (* 1 = 0.519329 loss)
I0428 19:41:40.794039 24878 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:40.871008 24878 solver.cpp:219] Iteration 600 (1299.02 iter/s, 0.0769812s/100 iters), loss = 0.46889
I0428 19:41:40.871047 24878 solver.cpp:238]     Train net output #0: loss = 0.46889 (* 1 = 0.46889 loss)
I0428 19:41:40.871053 24878 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:40.946352 24878 solver.cpp:219] Iteration 700 (1328.24 iter/s, 0.0752876s/100 iters), loss = 0.841213
I0428 19:41:40.946375 24878 solver.cpp:238]     Train net output #0: loss = 0.841213 (* 1 = 0.841213 loss)
I0428 19:41:40.946382 24878 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:41.019536 24878 solver.cpp:219] Iteration 800 (1367.08 iter/s, 0.0731484s/100 iters), loss = 0.694736
I0428 19:41:41.019574 24878 solver.cpp:238]     Train net output #0: loss = 0.694736 (* 1 = 0.694736 loss)
I0428 19:41:41.019580 24878 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:41.093744 24878 solver.cpp:219] Iteration 900 (1348.17 iter/s, 0.0741745s/100 iters), loss = 0.608349
I0428 19:41:41.093786 24878 solver.cpp:238]     Train net output #0: loss = 0.608349 (* 1 = 0.608349 loss)
I0428 19:41:41.093792 24878 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:41.118535 24884 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:41.167758 24878 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:41.168447 24878 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:41.168884 24878 solver.cpp:311] Iteration 1000, loss = 0.698155
I0428 19:41:41.168900 24878 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:41.236306 24885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:41.236783 24878 solver.cpp:398]     Test net output #0: accuracy = 0.8578
I0428 19:41:41.236801 24878 solver.cpp:398]     Test net output #1: loss = 0.59106 (* 1 = 0.59106 loss)
I0428 19:41:41.236827 24878 solver.cpp:316] Optimization Done.
I0428 19:41:41.236830 24878 caffe.cpp:259] Optimization Done.
