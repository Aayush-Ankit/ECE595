I0428 19:53:39.865268 27819 caffe.cpp:218] Using GPUs 0
I0428 19:53:39.901433 27819 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:40.358621 27819 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test693.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:40.358775 27819 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test693.prototxt
I0428 19:53:40.359148 27819 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:40.359180 27819 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:40.359267 27819 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:40.359334 27819 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:40.359417 27819 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:40.359438 27819 net.cpp:86] Creating Layer mnist
I0428 19:53:40.359446 27819 net.cpp:382] mnist -> data
I0428 19:53:40.359467 27819 net.cpp:382] mnist -> label
I0428 19:53:40.360483 27819 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:40.362799 27819 net.cpp:124] Setting up mnist
I0428 19:53:40.362829 27819 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:40.362838 27819 net.cpp:131] Top shape: 64 (64)
I0428 19:53:40.362840 27819 net.cpp:139] Memory required for data: 200960
I0428 19:53:40.362846 27819 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:40.362860 27819 net.cpp:86] Creating Layer conv0
I0428 19:53:40.362877 27819 net.cpp:408] conv0 <- data
I0428 19:53:40.362890 27819 net.cpp:382] conv0 -> conv0
I0428 19:53:40.595304 27819 net.cpp:124] Setting up conv0
I0428 19:53:40.595329 27819 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:40.595333 27819 net.cpp:139] Memory required for data: 938240
I0428 19:53:40.595347 27819 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:40.595360 27819 net.cpp:86] Creating Layer pool0
I0428 19:53:40.595365 27819 net.cpp:408] pool0 <- conv0
I0428 19:53:40.595369 27819 net.cpp:382] pool0 -> pool0
I0428 19:53:40.595427 27819 net.cpp:124] Setting up pool0
I0428 19:53:40.595432 27819 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:40.595435 27819 net.cpp:139] Memory required for data: 1122560
I0428 19:53:40.595438 27819 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:40.595448 27819 net.cpp:86] Creating Layer conv1
I0428 19:53:40.595451 27819 net.cpp:408] conv1 <- pool0
I0428 19:53:40.595455 27819 net.cpp:382] conv1 -> conv1
I0428 19:53:40.598239 27819 net.cpp:124] Setting up conv1
I0428 19:53:40.598269 27819 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:40.598274 27819 net.cpp:139] Memory required for data: 1941760
I0428 19:53:40.598282 27819 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:40.598290 27819 net.cpp:86] Creating Layer pool1
I0428 19:53:40.598294 27819 net.cpp:408] pool1 <- conv1
I0428 19:53:40.598299 27819 net.cpp:382] pool1 -> pool1
I0428 19:53:40.598351 27819 net.cpp:124] Setting up pool1
I0428 19:53:40.598357 27819 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:40.598361 27819 net.cpp:139] Memory required for data: 2146560
I0428 19:53:40.598363 27819 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:40.598371 27819 net.cpp:86] Creating Layer ip1
I0428 19:53:40.598387 27819 net.cpp:408] ip1 <- pool1
I0428 19:53:40.598392 27819 net.cpp:382] ip1 -> ip1
I0428 19:53:40.598748 27819 net.cpp:124] Setting up ip1
I0428 19:53:40.598755 27819 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:40.598774 27819 net.cpp:139] Memory required for data: 2159360
I0428 19:53:40.598781 27819 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:40.598800 27819 net.cpp:86] Creating Layer relu1
I0428 19:53:40.598804 27819 net.cpp:408] relu1 <- ip1
I0428 19:53:40.598809 27819 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:40.598971 27819 net.cpp:124] Setting up relu1
I0428 19:53:40.598979 27819 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:40.598983 27819 net.cpp:139] Memory required for data: 2172160
I0428 19:53:40.598985 27819 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:40.598991 27819 net.cpp:86] Creating Layer ip2
I0428 19:53:40.598994 27819 net.cpp:408] ip2 <- ip1
I0428 19:53:40.598999 27819 net.cpp:382] ip2 -> ip2
I0428 19:53:40.599086 27819 net.cpp:124] Setting up ip2
I0428 19:53:40.599092 27819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:40.599095 27819 net.cpp:139] Memory required for data: 2174720
I0428 19:53:40.599100 27819 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:40.599105 27819 net.cpp:86] Creating Layer relu2
I0428 19:53:40.599108 27819 net.cpp:408] relu2 <- ip2
I0428 19:53:40.599112 27819 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:40.599887 27819 net.cpp:124] Setting up relu2
I0428 19:53:40.599898 27819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:40.599917 27819 net.cpp:139] Memory required for data: 2177280
I0428 19:53:40.599921 27819 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:40.599927 27819 net.cpp:86] Creating Layer ip3
I0428 19:53:40.599931 27819 net.cpp:408] ip3 <- ip2
I0428 19:53:40.599936 27819 net.cpp:382] ip3 -> ip3
I0428 19:53:40.600026 27819 net.cpp:124] Setting up ip3
I0428 19:53:40.600034 27819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:40.600036 27819 net.cpp:139] Memory required for data: 2179840
I0428 19:53:40.600044 27819 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:40.600049 27819 net.cpp:86] Creating Layer relu3
I0428 19:53:40.600052 27819 net.cpp:408] relu3 <- ip3
I0428 19:53:40.600055 27819 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:40.600225 27819 net.cpp:124] Setting up relu3
I0428 19:53:40.600234 27819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:40.600237 27819 net.cpp:139] Memory required for data: 2182400
I0428 19:53:40.600240 27819 layer_factory.hpp:77] Creating layer loss
I0428 19:53:40.600246 27819 net.cpp:86] Creating Layer loss
I0428 19:53:40.600250 27819 net.cpp:408] loss <- ip3
I0428 19:53:40.600253 27819 net.cpp:408] loss <- label
I0428 19:53:40.600258 27819 net.cpp:382] loss -> loss
I0428 19:53:40.600275 27819 layer_factory.hpp:77] Creating layer loss
I0428 19:53:40.600517 27819 net.cpp:124] Setting up loss
I0428 19:53:40.600527 27819 net.cpp:131] Top shape: (1)
I0428 19:53:40.600529 27819 net.cpp:134]     with loss weight 1
I0428 19:53:40.600543 27819 net.cpp:139] Memory required for data: 2182404
I0428 19:53:40.600548 27819 net.cpp:200] loss needs backward computation.
I0428 19:53:40.600550 27819 net.cpp:200] relu3 needs backward computation.
I0428 19:53:40.600553 27819 net.cpp:200] ip3 needs backward computation.
I0428 19:53:40.600556 27819 net.cpp:200] relu2 needs backward computation.
I0428 19:53:40.600559 27819 net.cpp:200] ip2 needs backward computation.
I0428 19:53:40.600563 27819 net.cpp:200] relu1 needs backward computation.
I0428 19:53:40.600565 27819 net.cpp:200] ip1 needs backward computation.
I0428 19:53:40.600569 27819 net.cpp:200] pool1 needs backward computation.
I0428 19:53:40.600571 27819 net.cpp:200] conv1 needs backward computation.
I0428 19:53:40.600574 27819 net.cpp:200] pool0 needs backward computation.
I0428 19:53:40.600576 27819 net.cpp:200] conv0 needs backward computation.
I0428 19:53:40.600579 27819 net.cpp:202] mnist does not need backward computation.
I0428 19:53:40.600582 27819 net.cpp:244] This network produces output loss
I0428 19:53:40.600591 27819 net.cpp:257] Network initialization done.
I0428 19:53:40.600976 27819 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test693.prototxt
I0428 19:53:40.601021 27819 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:40.601127 27819 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:40.601204 27819 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:40.601249 27819 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:40.601263 27819 net.cpp:86] Creating Layer mnist
I0428 19:53:40.601269 27819 net.cpp:382] mnist -> data
I0428 19:53:40.601275 27819 net.cpp:382] mnist -> label
I0428 19:53:40.601369 27819 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:40.603359 27819 net.cpp:124] Setting up mnist
I0428 19:53:40.603389 27819 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:40.603394 27819 net.cpp:131] Top shape: 100 (100)
I0428 19:53:40.603396 27819 net.cpp:139] Memory required for data: 314000
I0428 19:53:40.603400 27819 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:40.603446 27819 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:40.603449 27819 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:40.603454 27819 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:40.603461 27819 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:40.603504 27819 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:40.603509 27819 net.cpp:131] Top shape: 100 (100)
I0428 19:53:40.603513 27819 net.cpp:131] Top shape: 100 (100)
I0428 19:53:40.603515 27819 net.cpp:139] Memory required for data: 314800
I0428 19:53:40.603518 27819 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:40.603526 27819 net.cpp:86] Creating Layer conv0
I0428 19:53:40.603529 27819 net.cpp:408] conv0 <- data
I0428 19:53:40.603534 27819 net.cpp:382] conv0 -> conv0
I0428 19:53:40.605269 27819 net.cpp:124] Setting up conv0
I0428 19:53:40.605283 27819 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:40.605288 27819 net.cpp:139] Memory required for data: 1466800
I0428 19:53:40.605295 27819 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:40.605301 27819 net.cpp:86] Creating Layer pool0
I0428 19:53:40.605320 27819 net.cpp:408] pool0 <- conv0
I0428 19:53:40.605325 27819 net.cpp:382] pool0 -> pool0
I0428 19:53:40.605360 27819 net.cpp:124] Setting up pool0
I0428 19:53:40.605365 27819 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:40.605367 27819 net.cpp:139] Memory required for data: 1754800
I0428 19:53:40.605370 27819 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:40.605379 27819 net.cpp:86] Creating Layer conv1
I0428 19:53:40.605382 27819 net.cpp:408] conv1 <- pool0
I0428 19:53:40.605387 27819 net.cpp:382] conv1 -> conv1
I0428 19:53:40.606907 27819 net.cpp:124] Setting up conv1
I0428 19:53:40.606920 27819 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:40.606925 27819 net.cpp:139] Memory required for data: 3034800
I0428 19:53:40.606969 27819 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:40.606981 27819 net.cpp:86] Creating Layer pool1
I0428 19:53:40.606986 27819 net.cpp:408] pool1 <- conv1
I0428 19:53:40.606990 27819 net.cpp:382] pool1 -> pool1
I0428 19:53:40.607025 27819 net.cpp:124] Setting up pool1
I0428 19:53:40.607031 27819 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:40.607034 27819 net.cpp:139] Memory required for data: 3354800
I0428 19:53:40.607038 27819 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:40.607043 27819 net.cpp:86] Creating Layer ip1
I0428 19:53:40.607048 27819 net.cpp:408] ip1 <- pool1
I0428 19:53:40.607059 27819 net.cpp:382] ip1 -> ip1
I0428 19:53:40.607436 27819 net.cpp:124] Setting up ip1
I0428 19:53:40.607445 27819 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:40.607465 27819 net.cpp:139] Memory required for data: 3374800
I0428 19:53:40.607472 27819 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:40.607477 27819 net.cpp:86] Creating Layer relu1
I0428 19:53:40.607481 27819 net.cpp:408] relu1 <- ip1
I0428 19:53:40.607486 27819 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:40.607650 27819 net.cpp:124] Setting up relu1
I0428 19:53:40.607657 27819 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:40.607667 27819 net.cpp:139] Memory required for data: 3394800
I0428 19:53:40.607671 27819 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:40.607677 27819 net.cpp:86] Creating Layer ip2
I0428 19:53:40.607681 27819 net.cpp:408] ip2 <- ip1
I0428 19:53:40.607686 27819 net.cpp:382] ip2 -> ip2
I0428 19:53:40.607782 27819 net.cpp:124] Setting up ip2
I0428 19:53:40.607789 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.607792 27819 net.cpp:139] Memory required for data: 3398800
I0428 19:53:40.607797 27819 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:40.607801 27819 net.cpp:86] Creating Layer relu2
I0428 19:53:40.607805 27819 net.cpp:408] relu2 <- ip2
I0428 19:53:40.607808 27819 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:40.608077 27819 net.cpp:124] Setting up relu2
I0428 19:53:40.608085 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.608088 27819 net.cpp:139] Memory required for data: 3402800
I0428 19:53:40.608091 27819 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:40.608096 27819 net.cpp:86] Creating Layer ip3
I0428 19:53:40.608099 27819 net.cpp:408] ip3 <- ip2
I0428 19:53:40.608104 27819 net.cpp:382] ip3 -> ip3
I0428 19:53:40.608206 27819 net.cpp:124] Setting up ip3
I0428 19:53:40.608213 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.608217 27819 net.cpp:139] Memory required for data: 3406800
I0428 19:53:40.608224 27819 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:40.608229 27819 net.cpp:86] Creating Layer relu3
I0428 19:53:40.608238 27819 net.cpp:408] relu3 <- ip3
I0428 19:53:40.608243 27819 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:40.609079 27819 net.cpp:124] Setting up relu3
I0428 19:53:40.609092 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.609097 27819 net.cpp:139] Memory required for data: 3410800
I0428 19:53:40.609100 27819 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:40.609105 27819 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:40.609108 27819 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:40.609113 27819 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:40.609119 27819 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:40.609205 27819 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:40.609212 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.609216 27819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:40.609218 27819 net.cpp:139] Memory required for data: 3418800
I0428 19:53:40.609221 27819 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:40.609233 27819 net.cpp:86] Creating Layer accuracy
I0428 19:53:40.609237 27819 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:40.609241 27819 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:40.609246 27819 net.cpp:382] accuracy -> accuracy
I0428 19:53:40.609253 27819 net.cpp:124] Setting up accuracy
I0428 19:53:40.609257 27819 net.cpp:131] Top shape: (1)
I0428 19:53:40.609261 27819 net.cpp:139] Memory required for data: 3418804
I0428 19:53:40.609263 27819 layer_factory.hpp:77] Creating layer loss
I0428 19:53:40.609267 27819 net.cpp:86] Creating Layer loss
I0428 19:53:40.609271 27819 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:40.609274 27819 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:40.609278 27819 net.cpp:382] loss -> loss
I0428 19:53:40.609284 27819 layer_factory.hpp:77] Creating layer loss
I0428 19:53:40.609526 27819 net.cpp:124] Setting up loss
I0428 19:53:40.609535 27819 net.cpp:131] Top shape: (1)
I0428 19:53:40.609539 27819 net.cpp:134]     with loss weight 1
I0428 19:53:40.609545 27819 net.cpp:139] Memory required for data: 3418808
I0428 19:53:40.609558 27819 net.cpp:200] loss needs backward computation.
I0428 19:53:40.609562 27819 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:40.609566 27819 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:40.609570 27819 net.cpp:200] relu3 needs backward computation.
I0428 19:53:40.609571 27819 net.cpp:200] ip3 needs backward computation.
I0428 19:53:40.609575 27819 net.cpp:200] relu2 needs backward computation.
I0428 19:53:40.609577 27819 net.cpp:200] ip2 needs backward computation.
I0428 19:53:40.609580 27819 net.cpp:200] relu1 needs backward computation.
I0428 19:53:40.609583 27819 net.cpp:200] ip1 needs backward computation.
I0428 19:53:40.609586 27819 net.cpp:200] pool1 needs backward computation.
I0428 19:53:40.609588 27819 net.cpp:200] conv1 needs backward computation.
I0428 19:53:40.609591 27819 net.cpp:200] pool0 needs backward computation.
I0428 19:53:40.609594 27819 net.cpp:200] conv0 needs backward computation.
I0428 19:53:40.609598 27819 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:40.609601 27819 net.cpp:202] mnist does not need backward computation.
I0428 19:53:40.609604 27819 net.cpp:244] This network produces output accuracy
I0428 19:53:40.609614 27819 net.cpp:244] This network produces output loss
I0428 19:53:40.609624 27819 net.cpp:257] Network initialization done.
I0428 19:53:40.609678 27819 solver.cpp:56] Solver scaffolding done.
I0428 19:53:40.610013 27819 caffe.cpp:248] Starting Optimization
I0428 19:53:40.610019 27819 solver.cpp:273] Solving LeNet
I0428 19:53:40.610023 27819 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:40.610858 27819 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:40.615098 27819 blocking_queue.cpp:49] Waiting for data
I0428 19:53:40.683533 27827 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:40.684062 27819 solver.cpp:398]     Test net output #0: accuracy = 0.0745
I0428 19:53:40.684082 27819 solver.cpp:398]     Test net output #1: loss = 2.30466 (* 1 = 2.30466 loss)
I0428 19:53:40.687111 27819 solver.cpp:219] Iteration 0 (-5.73384e-31 iter/s, 0.0770642s/100 iters), loss = 2.30518
I0428 19:53:40.687150 27819 solver.cpp:238]     Train net output #0: loss = 2.30518 (* 1 = 2.30518 loss)
I0428 19:53:40.687176 27819 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:40.793896 27819 solver.cpp:219] Iteration 100 (936.903 iter/s, 0.106735s/100 iters), loss = 0.960658
I0428 19:53:40.793923 27819 solver.cpp:238]     Train net output #0: loss = 0.960658 (* 1 = 0.960658 loss)
I0428 19:53:40.793929 27819 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:40.902642 27819 solver.cpp:219] Iteration 200 (919.888 iter/s, 0.108709s/100 iters), loss = 0.699976
I0428 19:53:40.902669 27819 solver.cpp:238]     Train net output #0: loss = 0.699976 (* 1 = 0.699976 loss)
I0428 19:53:40.902675 27819 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:41.010192 27819 solver.cpp:219] Iteration 300 (930.122 iter/s, 0.107513s/100 iters), loss = 1.05601
I0428 19:53:41.010216 27819 solver.cpp:238]     Train net output #0: loss = 1.05601 (* 1 = 1.05601 loss)
I0428 19:53:41.010222 27819 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:41.119845 27819 solver.cpp:219] Iteration 400 (912.257 iter/s, 0.109618s/100 iters), loss = 1.02778
I0428 19:53:41.119869 27819 solver.cpp:238]     Train net output #0: loss = 1.02778 (* 1 = 1.02778 loss)
I0428 19:53:41.119875 27819 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:41.225294 27819 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:41.278906 27827 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:41.279397 27819 solver.cpp:398]     Test net output #0: accuracy = 0.7405
I0428 19:53:41.279415 27819 solver.cpp:398]     Test net output #1: loss = 0.811831 (* 1 = 0.811831 loss)
I0428 19:53:41.280500 27819 solver.cpp:219] Iteration 500 (622.593 iter/s, 0.160618s/100 iters), loss = 0.791319
I0428 19:53:41.280539 27819 solver.cpp:238]     Train net output #0: loss = 0.791319 (* 1 = 0.791319 loss)
I0428 19:53:41.280560 27819 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:41.393647 27819 solver.cpp:219] Iteration 600 (884.177 iter/s, 0.1131s/100 iters), loss = 0.716989
I0428 19:53:41.393673 27819 solver.cpp:238]     Train net output #0: loss = 0.716989 (* 1 = 0.716989 loss)
I0428 19:53:41.393695 27819 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:41.503408 27819 solver.cpp:219] Iteration 700 (911.381 iter/s, 0.109724s/100 iters), loss = 0.724836
I0428 19:53:41.503448 27819 solver.cpp:238]     Train net output #0: loss = 0.724836 (* 1 = 0.724836 loss)
I0428 19:53:41.503453 27819 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:41.618201 27819 solver.cpp:219] Iteration 800 (871.402 iter/s, 0.114758s/100 iters), loss = 0.983467
I0428 19:53:41.618242 27819 solver.cpp:238]     Train net output #0: loss = 0.983467 (* 1 = 0.983467 loss)
I0428 19:53:41.618247 27819 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:41.732460 27819 solver.cpp:219] Iteration 900 (875.474 iter/s, 0.114224s/100 iters), loss = 0.850671
I0428 19:53:41.732503 27819 solver.cpp:238]     Train net output #0: loss = 0.850671 (* 1 = 0.850671 loss)
I0428 19:53:41.732511 27819 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:41.768646 27826 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:41.838395 27819 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:41.839932 27819 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:41.840778 27819 solver.cpp:311] Iteration 1000, loss = 0.830196
I0428 19:53:41.840795 27819 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:41.916234 27827 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:41.917217 27819 solver.cpp:398]     Test net output #0: accuracy = 0.7775
I0428 19:53:41.917260 27819 solver.cpp:398]     Test net output #1: loss = 0.777519 (* 1 = 0.777519 loss)
I0428 19:53:41.917271 27819 solver.cpp:316] Optimization Done.
I0428 19:53:41.917279 27819 caffe.cpp:259] Optimization Done.
