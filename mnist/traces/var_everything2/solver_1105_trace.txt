I0428 20:09:16.845650 31591 caffe.cpp:218] Using GPUs 0
I0428 20:09:16.882324 31591 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:17.393010 31591 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1105.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:17.393168 31591 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1105.prototxt
I0428 20:09:17.393733 31591 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:17.393756 31591 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:17.393894 31591 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:17.393990 31591 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:17.394114 31591 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:17.394142 31591 net.cpp:86] Creating Layer mnist
I0428 20:09:17.394153 31591 net.cpp:382] mnist -> data
I0428 20:09:17.394181 31591 net.cpp:382] mnist -> label
I0428 20:09:17.395546 31591 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:17.398725 31591 net.cpp:124] Setting up mnist
I0428 20:09:17.398747 31591 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:17.398756 31591 net.cpp:131] Top shape: 64 (64)
I0428 20:09:17.398761 31591 net.cpp:139] Memory required for data: 200960
I0428 20:09:17.398772 31591 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:17.398792 31591 net.cpp:86] Creating Layer conv0
I0428 20:09:17.398819 31591 net.cpp:408] conv0 <- data
I0428 20:09:17.398835 31591 net.cpp:382] conv0 -> conv0
I0428 20:09:17.735498 31591 net.cpp:124] Setting up conv0
I0428 20:09:17.735541 31591 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:17.735560 31591 net.cpp:139] Memory required for data: 3887360
I0428 20:09:17.735575 31591 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:17.735587 31591 net.cpp:86] Creating Layer pool0
I0428 20:09:17.735591 31591 net.cpp:408] pool0 <- conv0
I0428 20:09:17.735613 31591 net.cpp:382] pool0 -> pool0
I0428 20:09:17.735656 31591 net.cpp:124] Setting up pool0
I0428 20:09:17.735662 31591 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:17.735666 31591 net.cpp:139] Memory required for data: 4808960
I0428 20:09:17.735668 31591 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:17.735678 31591 net.cpp:86] Creating Layer conv1
I0428 20:09:17.735682 31591 net.cpp:408] conv1 <- pool0
I0428 20:09:17.735687 31591 net.cpp:382] conv1 -> conv1
I0428 20:09:17.738610 31591 net.cpp:124] Setting up conv1
I0428 20:09:17.738641 31591 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:17.738644 31591 net.cpp:139] Memory required for data: 5218560
I0428 20:09:17.738653 31591 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:17.738677 31591 net.cpp:86] Creating Layer pool1
I0428 20:09:17.738680 31591 net.cpp:408] pool1 <- conv1
I0428 20:09:17.738685 31591 net.cpp:382] pool1 -> pool1
I0428 20:09:17.738739 31591 net.cpp:124] Setting up pool1
I0428 20:09:17.738745 31591 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:17.738749 31591 net.cpp:139] Memory required for data: 5320960
I0428 20:09:17.738751 31591 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:17.738759 31591 net.cpp:86] Creating Layer ip1
I0428 20:09:17.738761 31591 net.cpp:408] ip1 <- pool1
I0428 20:09:17.738766 31591 net.cpp:382] ip1 -> ip1
I0428 20:09:17.739799 31591 net.cpp:124] Setting up ip1
I0428 20:09:17.739812 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.739832 31591 net.cpp:139] Memory required for data: 5323520
I0428 20:09:17.739841 31591 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:17.739847 31591 net.cpp:86] Creating Layer relu1
I0428 20:09:17.739851 31591 net.cpp:408] relu1 <- ip1
I0428 20:09:17.739856 31591 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:17.740044 31591 net.cpp:124] Setting up relu1
I0428 20:09:17.740068 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.740072 31591 net.cpp:139] Memory required for data: 5326080
I0428 20:09:17.740075 31591 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:17.740082 31591 net.cpp:86] Creating Layer ip2
I0428 20:09:17.740085 31591 net.cpp:408] ip2 <- ip1
I0428 20:09:17.740090 31591 net.cpp:382] ip2 -> ip2
I0428 20:09:17.740183 31591 net.cpp:124] Setting up ip2
I0428 20:09:17.740191 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.740195 31591 net.cpp:139] Memory required for data: 5328640
I0428 20:09:17.740200 31591 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:17.740206 31591 net.cpp:86] Creating Layer relu2
I0428 20:09:17.740209 31591 net.cpp:408] relu2 <- ip2
I0428 20:09:17.740213 31591 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:17.741029 31591 net.cpp:124] Setting up relu2
I0428 20:09:17.741057 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.741061 31591 net.cpp:139] Memory required for data: 5331200
I0428 20:09:17.741065 31591 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:17.741072 31591 net.cpp:86] Creating Layer ip3
I0428 20:09:17.741076 31591 net.cpp:408] ip3 <- ip2
I0428 20:09:17.741082 31591 net.cpp:382] ip3 -> ip3
I0428 20:09:17.741199 31591 net.cpp:124] Setting up ip3
I0428 20:09:17.741206 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.741209 31591 net.cpp:139] Memory required for data: 5333760
I0428 20:09:17.741219 31591 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:17.741224 31591 net.cpp:86] Creating Layer relu3
I0428 20:09:17.741226 31591 net.cpp:408] relu3 <- ip3
I0428 20:09:17.741230 31591 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:17.741399 31591 net.cpp:124] Setting up relu3
I0428 20:09:17.741407 31591 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:17.741410 31591 net.cpp:139] Memory required for data: 5336320
I0428 20:09:17.741413 31591 layer_factory.hpp:77] Creating layer loss
I0428 20:09:17.741420 31591 net.cpp:86] Creating Layer loss
I0428 20:09:17.741422 31591 net.cpp:408] loss <- ip3
I0428 20:09:17.741426 31591 net.cpp:408] loss <- label
I0428 20:09:17.741432 31591 net.cpp:382] loss -> loss
I0428 20:09:17.741449 31591 layer_factory.hpp:77] Creating layer loss
I0428 20:09:17.741704 31591 net.cpp:124] Setting up loss
I0428 20:09:17.741714 31591 net.cpp:131] Top shape: (1)
I0428 20:09:17.741717 31591 net.cpp:134]     with loss weight 1
I0428 20:09:17.741731 31591 net.cpp:139] Memory required for data: 5336324
I0428 20:09:17.741734 31591 net.cpp:200] loss needs backward computation.
I0428 20:09:17.741739 31591 net.cpp:200] relu3 needs backward computation.
I0428 20:09:17.741741 31591 net.cpp:200] ip3 needs backward computation.
I0428 20:09:17.741745 31591 net.cpp:200] relu2 needs backward computation.
I0428 20:09:17.741749 31591 net.cpp:200] ip2 needs backward computation.
I0428 20:09:17.741751 31591 net.cpp:200] relu1 needs backward computation.
I0428 20:09:17.741755 31591 net.cpp:200] ip1 needs backward computation.
I0428 20:09:17.741757 31591 net.cpp:200] pool1 needs backward computation.
I0428 20:09:17.741760 31591 net.cpp:200] conv1 needs backward computation.
I0428 20:09:17.741765 31591 net.cpp:200] pool0 needs backward computation.
I0428 20:09:17.741768 31591 net.cpp:200] conv0 needs backward computation.
I0428 20:09:17.741771 31591 net.cpp:202] mnist does not need backward computation.
I0428 20:09:17.741775 31591 net.cpp:244] This network produces output loss
I0428 20:09:17.741783 31591 net.cpp:257] Network initialization done.
I0428 20:09:17.742195 31591 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1105.prototxt
I0428 20:09:17.742239 31591 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:17.742331 31591 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:17.742422 31591 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:17.742466 31591 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:17.742480 31591 net.cpp:86] Creating Layer mnist
I0428 20:09:17.742483 31591 net.cpp:382] mnist -> data
I0428 20:09:17.742491 31591 net.cpp:382] mnist -> label
I0428 20:09:17.742573 31591 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:17.744604 31591 net.cpp:124] Setting up mnist
I0428 20:09:17.744648 31591 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:17.744654 31591 net.cpp:131] Top shape: 100 (100)
I0428 20:09:17.744657 31591 net.cpp:139] Memory required for data: 314000
I0428 20:09:17.744662 31591 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:17.744668 31591 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:17.744671 31591 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:17.744676 31591 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:17.744683 31591 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:17.744720 31591 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:17.744726 31591 net.cpp:131] Top shape: 100 (100)
I0428 20:09:17.744729 31591 net.cpp:131] Top shape: 100 (100)
I0428 20:09:17.744732 31591 net.cpp:139] Memory required for data: 314800
I0428 20:09:17.744735 31591 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:17.744743 31591 net.cpp:86] Creating Layer conv0
I0428 20:09:17.744746 31591 net.cpp:408] conv0 <- data
I0428 20:09:17.744751 31591 net.cpp:382] conv0 -> conv0
I0428 20:09:17.746628 31591 net.cpp:124] Setting up conv0
I0428 20:09:17.746641 31591 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:17.746645 31591 net.cpp:139] Memory required for data: 6074800
I0428 20:09:17.746654 31591 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:17.746660 31591 net.cpp:86] Creating Layer pool0
I0428 20:09:17.746665 31591 net.cpp:408] pool0 <- conv0
I0428 20:09:17.746668 31591 net.cpp:382] pool0 -> pool0
I0428 20:09:17.746702 31591 net.cpp:124] Setting up pool0
I0428 20:09:17.746707 31591 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:17.746711 31591 net.cpp:139] Memory required for data: 7514800
I0428 20:09:17.746713 31591 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:17.746721 31591 net.cpp:86] Creating Layer conv1
I0428 20:09:17.746724 31591 net.cpp:408] conv1 <- pool0
I0428 20:09:17.746729 31591 net.cpp:382] conv1 -> conv1
I0428 20:09:17.749027 31591 net.cpp:124] Setting up conv1
I0428 20:09:17.749040 31591 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:17.749044 31591 net.cpp:139] Memory required for data: 8154800
I0428 20:09:17.749053 31591 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:17.749076 31591 net.cpp:86] Creating Layer pool1
I0428 20:09:17.749089 31591 net.cpp:408] pool1 <- conv1
I0428 20:09:17.749094 31591 net.cpp:382] pool1 -> pool1
I0428 20:09:17.749146 31591 net.cpp:124] Setting up pool1
I0428 20:09:17.749166 31591 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:17.749176 31591 net.cpp:139] Memory required for data: 8314800
I0428 20:09:17.749178 31591 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:17.749183 31591 net.cpp:86] Creating Layer ip1
I0428 20:09:17.749194 31591 net.cpp:408] ip1 <- pool1
I0428 20:09:17.749199 31591 net.cpp:382] ip1 -> ip1
I0428 20:09:17.749343 31591 net.cpp:124] Setting up ip1
I0428 20:09:17.749352 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.749366 31591 net.cpp:139] Memory required for data: 8318800
I0428 20:09:17.749372 31591 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:17.749377 31591 net.cpp:86] Creating Layer relu1
I0428 20:09:17.749397 31591 net.cpp:408] relu1 <- ip1
I0428 20:09:17.749402 31591 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:17.749673 31591 net.cpp:124] Setting up relu1
I0428 20:09:17.749682 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.749692 31591 net.cpp:139] Memory required for data: 8322800
I0428 20:09:17.749696 31591 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:17.749702 31591 net.cpp:86] Creating Layer ip2
I0428 20:09:17.749706 31591 net.cpp:408] ip2 <- ip1
I0428 20:09:17.749711 31591 net.cpp:382] ip2 -> ip2
I0428 20:09:17.749810 31591 net.cpp:124] Setting up ip2
I0428 20:09:17.749819 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.749821 31591 net.cpp:139] Memory required for data: 8326800
I0428 20:09:17.749826 31591 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:17.749831 31591 net.cpp:86] Creating Layer relu2
I0428 20:09:17.749835 31591 net.cpp:408] relu2 <- ip2
I0428 20:09:17.749838 31591 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:17.749990 31591 net.cpp:124] Setting up relu2
I0428 20:09:17.749999 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.750002 31591 net.cpp:139] Memory required for data: 8330800
I0428 20:09:17.750005 31591 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:17.750011 31591 net.cpp:86] Creating Layer ip3
I0428 20:09:17.750015 31591 net.cpp:408] ip3 <- ip2
I0428 20:09:17.750020 31591 net.cpp:382] ip3 -> ip3
I0428 20:09:17.750147 31591 net.cpp:124] Setting up ip3
I0428 20:09:17.750155 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.750159 31591 net.cpp:139] Memory required for data: 8334800
I0428 20:09:17.750169 31591 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:17.750180 31591 net.cpp:86] Creating Layer relu3
I0428 20:09:17.750183 31591 net.cpp:408] relu3 <- ip3
I0428 20:09:17.750187 31591 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:17.751050 31591 net.cpp:124] Setting up relu3
I0428 20:09:17.751062 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.751067 31591 net.cpp:139] Memory required for data: 8338800
I0428 20:09:17.751070 31591 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:17.751076 31591 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:17.751080 31591 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:17.751085 31591 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:17.751091 31591 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:17.751147 31591 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:17.751152 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.751157 31591 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:17.751158 31591 net.cpp:139] Memory required for data: 8346800
I0428 20:09:17.751161 31591 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:17.751166 31591 net.cpp:86] Creating Layer accuracy
I0428 20:09:17.751169 31591 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:17.751173 31591 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:17.751178 31591 net.cpp:382] accuracy -> accuracy
I0428 20:09:17.751184 31591 net.cpp:124] Setting up accuracy
I0428 20:09:17.751188 31591 net.cpp:131] Top shape: (1)
I0428 20:09:17.751191 31591 net.cpp:139] Memory required for data: 8346804
I0428 20:09:17.751194 31591 layer_factory.hpp:77] Creating layer loss
I0428 20:09:17.751199 31591 net.cpp:86] Creating Layer loss
I0428 20:09:17.751202 31591 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:17.751205 31591 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:17.751209 31591 net.cpp:382] loss -> loss
I0428 20:09:17.751215 31591 layer_factory.hpp:77] Creating layer loss
I0428 20:09:17.751449 31591 net.cpp:124] Setting up loss
I0428 20:09:17.751459 31591 net.cpp:131] Top shape: (1)
I0428 20:09:17.751463 31591 net.cpp:134]     with loss weight 1
I0428 20:09:17.751495 31591 net.cpp:139] Memory required for data: 8346808
I0428 20:09:17.751499 31591 net.cpp:200] loss needs backward computation.
I0428 20:09:17.751521 31591 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:17.751533 31591 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:17.751536 31591 net.cpp:200] relu3 needs backward computation.
I0428 20:09:17.751540 31591 net.cpp:200] ip3 needs backward computation.
I0428 20:09:17.751545 31591 net.cpp:200] relu2 needs backward computation.
I0428 20:09:17.751549 31591 net.cpp:200] ip2 needs backward computation.
I0428 20:09:17.751551 31591 net.cpp:200] relu1 needs backward computation.
I0428 20:09:17.751554 31591 net.cpp:200] ip1 needs backward computation.
I0428 20:09:17.751559 31591 net.cpp:200] pool1 needs backward computation.
I0428 20:09:17.751572 31591 net.cpp:200] conv1 needs backward computation.
I0428 20:09:17.751576 31591 net.cpp:200] pool0 needs backward computation.
I0428 20:09:17.751580 31591 net.cpp:200] conv0 needs backward computation.
I0428 20:09:17.751585 31591 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:17.751590 31591 net.cpp:202] mnist does not need backward computation.
I0428 20:09:17.751592 31591 net.cpp:244] This network produces output accuracy
I0428 20:09:17.751595 31591 net.cpp:244] This network produces output loss
I0428 20:09:17.751607 31591 net.cpp:257] Network initialization done.
I0428 20:09:17.751652 31591 solver.cpp:56] Solver scaffolding done.
I0428 20:09:17.752012 31591 caffe.cpp:248] Starting Optimization
I0428 20:09:17.752018 31591 solver.cpp:273] Solving LeNet
I0428 20:09:17.752022 31591 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:17.752828 31591 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:17.758785 31591 blocking_queue.cpp:49] Waiting for data
I0428 20:09:17.828282 31598 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:17.828991 31591 solver.cpp:398]     Test net output #0: accuracy = 0.128
I0428 20:09:17.829017 31591 solver.cpp:398]     Test net output #1: loss = 2.29565 (* 1 = 2.29565 loss)
I0428 20:09:17.833580 31591 solver.cpp:219] Iteration 0 (0 iter/s, 0.0815328s/100 iters), loss = 2.30753
I0428 20:09:17.833616 31591 solver.cpp:238]     Train net output #0: loss = 2.30753 (* 1 = 2.30753 loss)
I0428 20:09:17.833636 31591 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:17.938905 31591 solver.cpp:219] Iteration 100 (949.836 iter/s, 0.105281s/100 iters), loss = 1.27382
I0428 20:09:17.938932 31591 solver.cpp:238]     Train net output #0: loss = 1.27382 (* 1 = 1.27382 loss)
I0428 20:09:17.938940 31591 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:18.036840 31591 solver.cpp:219] Iteration 200 (1021.48 iter/s, 0.0978975s/100 iters), loss = 0.663404
I0428 20:09:18.036864 31591 solver.cpp:238]     Train net output #0: loss = 0.663404 (* 1 = 0.663404 loss)
I0428 20:09:18.036870 31591 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:18.134335 31591 solver.cpp:219] Iteration 300 (1026.06 iter/s, 0.0974602s/100 iters), loss = 0.641592
I0428 20:09:18.134374 31591 solver.cpp:238]     Train net output #0: loss = 0.641592 (* 1 = 0.641592 loss)
I0428 20:09:18.134397 31591 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:18.238036 31591 solver.cpp:219] Iteration 400 (964.763 iter/s, 0.103652s/100 iters), loss = 0.45064
I0428 20:09:18.238060 31591 solver.cpp:238]     Train net output #0: loss = 0.45064 (* 1 = 0.45064 loss)
I0428 20:09:18.238082 31591 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:18.345631 31591 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:18.406751 31598 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:18.407367 31591 solver.cpp:398]     Test net output #0: accuracy = 0.8558
I0428 20:09:18.407385 31591 solver.cpp:398]     Test net output #1: loss = 0.386379 (* 1 = 0.386379 loss)
I0428 20:09:18.408428 31591 solver.cpp:219] Iteration 500 (587.018 iter/s, 0.170353s/100 iters), loss = 0.210663
I0428 20:09:18.408490 31591 solver.cpp:238]     Train net output #0: loss = 0.210663 (* 1 = 0.210663 loss)
I0428 20:09:18.408511 31591 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:18.515812 31591 solver.cpp:219] Iteration 600 (931.863 iter/s, 0.107312s/100 iters), loss = 0.234855
I0428 20:09:18.515844 31591 solver.cpp:238]     Train net output #0: loss = 0.234855 (* 1 = 0.234855 loss)
I0428 20:09:18.515851 31591 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:18.621498 31591 solver.cpp:219] Iteration 700 (946.584 iter/s, 0.105643s/100 iters), loss = 0.549527
I0428 20:09:18.621531 31591 solver.cpp:238]     Train net output #0: loss = 0.549527 (* 1 = 0.549527 loss)
I0428 20:09:18.621539 31591 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:18.736564 31591 solver.cpp:219] Iteration 800 (869.414 iter/s, 0.11502s/100 iters), loss = 0.466044
I0428 20:09:18.736605 31591 solver.cpp:238]     Train net output #0: loss = 0.466044 (* 1 = 0.466044 loss)
I0428 20:09:18.736616 31591 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:18.847246 31591 solver.cpp:219] Iteration 900 (903.906 iter/s, 0.110631s/100 iters), loss = 0.493507
I0428 20:09:18.847283 31591 solver.cpp:238]     Train net output #0: loss = 0.493507 (* 1 = 0.493507 loss)
I0428 20:09:18.847295 31591 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:18.885766 31597 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:18.953290 31591 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:18.954375 31591 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:18.955071 31591 solver.cpp:311] Iteration 1000, loss = 0.441584
I0428 20:09:18.955090 31591 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:19.012639 31598 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:19.014528 31591 solver.cpp:398]     Test net output #0: accuracy = 0.8713
I0428 20:09:19.014551 31591 solver.cpp:398]     Test net output #1: loss = 0.330041 (* 1 = 0.330041 loss)
I0428 20:09:19.014556 31591 solver.cpp:316] Optimization Done.
I0428 20:09:19.014560 31591 caffe.cpp:259] Optimization Done.
