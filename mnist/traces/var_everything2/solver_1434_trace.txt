I0428 20:24:14.300443  2377 caffe.cpp:218] Using GPUs 0
I0428 20:24:14.330647  2377 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:14.777928  2377 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1434.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:14.778098  2377 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1434.prototxt
I0428 20:24:14.778470  2377 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:14.778501  2377 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:14.778583  2377 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:14.778647  2377 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:14.778729  2377 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:14.778748  2377 net.cpp:86] Creating Layer mnist
I0428 20:24:14.778756  2377 net.cpp:382] mnist -> data
I0428 20:24:14.778774  2377 net.cpp:382] mnist -> label
I0428 20:24:14.779800  2377 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:14.782157  2377 net.cpp:124] Setting up mnist
I0428 20:24:14.782187  2377 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:14.782192  2377 net.cpp:131] Top shape: 64 (64)
I0428 20:24:14.782196  2377 net.cpp:139] Memory required for data: 200960
I0428 20:24:14.782202  2377 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:14.782215  2377 net.cpp:86] Creating Layer conv0
I0428 20:24:14.782232  2377 net.cpp:408] conv0 <- data
I0428 20:24:14.782243  2377 net.cpp:382] conv0 -> conv0
I0428 20:24:15.019839  2377 net.cpp:124] Setting up conv0
I0428 20:24:15.019881  2377 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:15.019886  2377 net.cpp:139] Memory required for data: 7573760
I0428 20:24:15.019901  2377 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:15.019913  2377 net.cpp:86] Creating Layer pool0
I0428 20:24:15.019917  2377 net.cpp:408] pool0 <- conv0
I0428 20:24:15.019938  2377 net.cpp:382] pool0 -> pool0
I0428 20:24:15.020004  2377 net.cpp:124] Setting up pool0
I0428 20:24:15.020011  2377 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:15.020015  2377 net.cpp:139] Memory required for data: 9416960
I0428 20:24:15.020018  2377 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:15.020045  2377 net.cpp:86] Creating Layer conv1
I0428 20:24:15.020048  2377 net.cpp:408] conv1 <- pool0
I0428 20:24:15.020054  2377 net.cpp:382] conv1 -> conv1
I0428 20:24:15.023710  2377 net.cpp:124] Setting up conv1
I0428 20:24:15.023725  2377 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:15.023728  2377 net.cpp:139] Memory required for data: 11055360
I0428 20:24:15.023736  2377 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:15.023763  2377 net.cpp:86] Creating Layer pool1
I0428 20:24:15.023767  2377 net.cpp:408] pool1 <- conv1
I0428 20:24:15.023772  2377 net.cpp:382] pool1 -> pool1
I0428 20:24:15.023813  2377 net.cpp:124] Setting up pool1
I0428 20:24:15.023819  2377 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:15.023823  2377 net.cpp:139] Memory required for data: 11464960
I0428 20:24:15.023825  2377 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:15.023834  2377 net.cpp:86] Creating Layer ip1
I0428 20:24:15.023838  2377 net.cpp:408] ip1 <- pool1
I0428 20:24:15.023841  2377 net.cpp:382] ip1 -> ip1
I0428 20:24:15.024400  2377 net.cpp:124] Setting up ip1
I0428 20:24:15.024407  2377 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:15.024421  2377 net.cpp:139] Memory required for data: 11477760
I0428 20:24:15.024430  2377 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:15.024435  2377 net.cpp:86] Creating Layer relu1
I0428 20:24:15.024438  2377 net.cpp:408] relu1 <- ip1
I0428 20:24:15.024444  2377 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:15.024623  2377 net.cpp:124] Setting up relu1
I0428 20:24:15.024632  2377 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:15.024636  2377 net.cpp:139] Memory required for data: 11490560
I0428 20:24:15.024639  2377 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:15.024646  2377 net.cpp:86] Creating Layer ip2
I0428 20:24:15.024649  2377 net.cpp:408] ip2 <- ip1
I0428 20:24:15.024654  2377 net.cpp:382] ip2 -> ip2
I0428 20:24:15.024760  2377 net.cpp:124] Setting up ip2
I0428 20:24:15.024766  2377 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:15.024773  2377 net.cpp:139] Memory required for data: 11493120
I0428 20:24:15.024780  2377 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:15.024786  2377 net.cpp:86] Creating Layer relu2
I0428 20:24:15.024790  2377 net.cpp:408] relu2 <- ip2
I0428 20:24:15.024793  2377 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:15.025622  2377 net.cpp:124] Setting up relu2
I0428 20:24:15.025636  2377 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:15.025640  2377 net.cpp:139] Memory required for data: 11495680
I0428 20:24:15.025643  2377 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:15.025651  2377 net.cpp:86] Creating Layer ip3
I0428 20:24:15.025655  2377 net.cpp:408] ip3 <- ip2
I0428 20:24:15.025660  2377 net.cpp:382] ip3 -> ip3
I0428 20:24:15.025784  2377 net.cpp:124] Setting up ip3
I0428 20:24:15.025790  2377 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:15.025794  2377 net.cpp:139] Memory required for data: 11498240
I0428 20:24:15.025804  2377 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:15.025809  2377 net.cpp:86] Creating Layer relu3
I0428 20:24:15.025811  2377 net.cpp:408] relu3 <- ip3
I0428 20:24:15.025816  2377 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:15.026000  2377 net.cpp:124] Setting up relu3
I0428 20:24:15.026010  2377 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:15.026013  2377 net.cpp:139] Memory required for data: 11500800
I0428 20:24:15.026017  2377 layer_factory.hpp:77] Creating layer loss
I0428 20:24:15.026023  2377 net.cpp:86] Creating Layer loss
I0428 20:24:15.026026  2377 net.cpp:408] loss <- ip3
I0428 20:24:15.026031  2377 net.cpp:408] loss <- label
I0428 20:24:15.026037  2377 net.cpp:382] loss -> loss
I0428 20:24:15.026051  2377 layer_factory.hpp:77] Creating layer loss
I0428 20:24:15.026304  2377 net.cpp:124] Setting up loss
I0428 20:24:15.026314  2377 net.cpp:131] Top shape: (1)
I0428 20:24:15.026317  2377 net.cpp:134]     with loss weight 1
I0428 20:24:15.026332  2377 net.cpp:139] Memory required for data: 11500804
I0428 20:24:15.026336  2377 net.cpp:200] loss needs backward computation.
I0428 20:24:15.026340  2377 net.cpp:200] relu3 needs backward computation.
I0428 20:24:15.026343  2377 net.cpp:200] ip3 needs backward computation.
I0428 20:24:15.026346  2377 net.cpp:200] relu2 needs backward computation.
I0428 20:24:15.026350  2377 net.cpp:200] ip2 needs backward computation.
I0428 20:24:15.026352  2377 net.cpp:200] relu1 needs backward computation.
I0428 20:24:15.026355  2377 net.cpp:200] ip1 needs backward computation.
I0428 20:24:15.026358  2377 net.cpp:200] pool1 needs backward computation.
I0428 20:24:15.026361  2377 net.cpp:200] conv1 needs backward computation.
I0428 20:24:15.026365  2377 net.cpp:200] pool0 needs backward computation.
I0428 20:24:15.026368  2377 net.cpp:200] conv0 needs backward computation.
I0428 20:24:15.026371  2377 net.cpp:202] mnist does not need backward computation.
I0428 20:24:15.026374  2377 net.cpp:244] This network produces output loss
I0428 20:24:15.026386  2377 net.cpp:257] Network initialization done.
I0428 20:24:15.026748  2377 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1434.prototxt
I0428 20:24:15.026777  2377 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:15.026877  2377 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:15.026962  2377 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:15.027007  2377 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:15.027019  2377 net.cpp:86] Creating Layer mnist
I0428 20:24:15.027025  2377 net.cpp:382] mnist -> data
I0428 20:24:15.027034  2377 net.cpp:382] mnist -> label
I0428 20:24:15.027124  2377 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:15.028441  2377 net.cpp:124] Setting up mnist
I0428 20:24:15.028481  2377 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:15.028486  2377 net.cpp:131] Top shape: 100 (100)
I0428 20:24:15.028488  2377 net.cpp:139] Memory required for data: 314000
I0428 20:24:15.028492  2377 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:15.028498  2377 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:15.028501  2377 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:15.028523  2377 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:15.028530  2377 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:15.028569  2377 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:15.028574  2377 net.cpp:131] Top shape: 100 (100)
I0428 20:24:15.028578  2377 net.cpp:131] Top shape: 100 (100)
I0428 20:24:15.028581  2377 net.cpp:139] Memory required for data: 314800
I0428 20:24:15.028584  2377 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:15.028592  2377 net.cpp:86] Creating Layer conv0
I0428 20:24:15.028595  2377 net.cpp:408] conv0 <- data
I0428 20:24:15.028602  2377 net.cpp:382] conv0 -> conv0
I0428 20:24:15.030294  2377 net.cpp:124] Setting up conv0
I0428 20:24:15.030309  2377 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:15.030313  2377 net.cpp:139] Memory required for data: 11834800
I0428 20:24:15.030323  2377 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:15.030329  2377 net.cpp:86] Creating Layer pool0
I0428 20:24:15.030333  2377 net.cpp:408] pool0 <- conv0
I0428 20:24:15.030339  2377 net.cpp:382] pool0 -> pool0
I0428 20:24:15.030376  2377 net.cpp:124] Setting up pool0
I0428 20:24:15.030382  2377 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:15.030385  2377 net.cpp:139] Memory required for data: 14714800
I0428 20:24:15.030387  2377 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:15.030400  2377 net.cpp:86] Creating Layer conv1
I0428 20:24:15.030402  2377 net.cpp:408] conv1 <- pool0
I0428 20:24:15.030408  2377 net.cpp:382] conv1 -> conv1
I0428 20:24:15.033762  2377 net.cpp:124] Setting up conv1
I0428 20:24:15.033778  2377 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:15.033782  2377 net.cpp:139] Memory required for data: 17274800
I0428 20:24:15.033815  2377 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:15.033823  2377 net.cpp:86] Creating Layer pool1
I0428 20:24:15.033826  2377 net.cpp:408] pool1 <- conv1
I0428 20:24:15.033833  2377 net.cpp:382] pool1 -> pool1
I0428 20:24:15.033872  2377 net.cpp:124] Setting up pool1
I0428 20:24:15.033885  2377 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:15.033887  2377 net.cpp:139] Memory required for data: 17914800
I0428 20:24:15.033896  2377 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:15.033905  2377 net.cpp:86] Creating Layer ip1
I0428 20:24:15.033907  2377 net.cpp:408] ip1 <- pool1
I0428 20:24:15.033923  2377 net.cpp:382] ip1 -> ip1
I0428 20:24:15.034531  2377 net.cpp:124] Setting up ip1
I0428 20:24:15.034550  2377 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:15.034554  2377 net.cpp:139] Memory required for data: 17934800
I0428 20:24:15.034562  2377 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:15.034569  2377 net.cpp:86] Creating Layer relu1
I0428 20:24:15.034572  2377 net.cpp:408] relu1 <- ip1
I0428 20:24:15.034577  2377 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:15.034824  2377 net.cpp:124] Setting up relu1
I0428 20:24:15.034833  2377 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:15.034837  2377 net.cpp:139] Memory required for data: 17954800
I0428 20:24:15.034840  2377 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:15.034849  2377 net.cpp:86] Creating Layer ip2
I0428 20:24:15.034852  2377 net.cpp:408] ip2 <- ip1
I0428 20:24:15.034858  2377 net.cpp:382] ip2 -> ip2
I0428 20:24:15.034994  2377 net.cpp:124] Setting up ip2
I0428 20:24:15.035003  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.035006  2377 net.cpp:139] Memory required for data: 17958800
I0428 20:24:15.035013  2377 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:15.035017  2377 net.cpp:86] Creating Layer relu2
I0428 20:24:15.035022  2377 net.cpp:408] relu2 <- ip2
I0428 20:24:15.035025  2377 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:15.035212  2377 net.cpp:124] Setting up relu2
I0428 20:24:15.035230  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.035234  2377 net.cpp:139] Memory required for data: 17962800
I0428 20:24:15.035238  2377 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:15.035243  2377 net.cpp:86] Creating Layer ip3
I0428 20:24:15.035246  2377 net.cpp:408] ip3 <- ip2
I0428 20:24:15.035260  2377 net.cpp:382] ip3 -> ip3
I0428 20:24:15.035364  2377 net.cpp:124] Setting up ip3
I0428 20:24:15.035372  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.035374  2377 net.cpp:139] Memory required for data: 17966800
I0428 20:24:15.035382  2377 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:15.035394  2377 net.cpp:86] Creating Layer relu3
I0428 20:24:15.035398  2377 net.cpp:408] relu3 <- ip3
I0428 20:24:15.035403  2377 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:15.036236  2377 net.cpp:124] Setting up relu3
I0428 20:24:15.036247  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.036252  2377 net.cpp:139] Memory required for data: 17970800
I0428 20:24:15.036255  2377 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:15.036260  2377 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:15.036263  2377 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:15.036270  2377 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:15.036276  2377 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:15.036320  2377 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:15.036325  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.036329  2377 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:15.036332  2377 net.cpp:139] Memory required for data: 17978800
I0428 20:24:15.036335  2377 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:15.036341  2377 net.cpp:86] Creating Layer accuracy
I0428 20:24:15.036345  2377 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:15.036350  2377 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:15.036355  2377 net.cpp:382] accuracy -> accuracy
I0428 20:24:15.036362  2377 net.cpp:124] Setting up accuracy
I0428 20:24:15.036366  2377 net.cpp:131] Top shape: (1)
I0428 20:24:15.036370  2377 net.cpp:139] Memory required for data: 17978804
I0428 20:24:15.036372  2377 layer_factory.hpp:77] Creating layer loss
I0428 20:24:15.036383  2377 net.cpp:86] Creating Layer loss
I0428 20:24:15.036386  2377 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:15.036391  2377 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:15.036401  2377 net.cpp:382] loss -> loss
I0428 20:24:15.036406  2377 layer_factory.hpp:77] Creating layer loss
I0428 20:24:15.036666  2377 net.cpp:124] Setting up loss
I0428 20:24:15.036676  2377 net.cpp:131] Top shape: (1)
I0428 20:24:15.036680  2377 net.cpp:134]     with loss weight 1
I0428 20:24:15.036696  2377 net.cpp:139] Memory required for data: 17978808
I0428 20:24:15.036700  2377 net.cpp:200] loss needs backward computation.
I0428 20:24:15.036705  2377 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:15.036715  2377 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:15.036718  2377 net.cpp:200] relu3 needs backward computation.
I0428 20:24:15.036727  2377 net.cpp:200] ip3 needs backward computation.
I0428 20:24:15.036731  2377 net.cpp:200] relu2 needs backward computation.
I0428 20:24:15.036733  2377 net.cpp:200] ip2 needs backward computation.
I0428 20:24:15.036736  2377 net.cpp:200] relu1 needs backward computation.
I0428 20:24:15.036739  2377 net.cpp:200] ip1 needs backward computation.
I0428 20:24:15.036762  2377 net.cpp:200] pool1 needs backward computation.
I0428 20:24:15.036765  2377 net.cpp:200] conv1 needs backward computation.
I0428 20:24:15.036769  2377 net.cpp:200] pool0 needs backward computation.
I0428 20:24:15.036772  2377 net.cpp:200] conv0 needs backward computation.
I0428 20:24:15.036777  2377 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:15.036780  2377 net.cpp:202] mnist does not need backward computation.
I0428 20:24:15.036783  2377 net.cpp:244] This network produces output accuracy
I0428 20:24:15.036787  2377 net.cpp:244] This network produces output loss
I0428 20:24:15.036798  2377 net.cpp:257] Network initialization done.
I0428 20:24:15.036864  2377 solver.cpp:56] Solver scaffolding done.
I0428 20:24:15.037245  2377 caffe.cpp:248] Starting Optimization
I0428 20:24:15.037252  2377 solver.cpp:273] Solving LeNet
I0428 20:24:15.037262  2377 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:15.038122  2377 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:15.052220  2377 blocking_queue.cpp:49] Waiting for data
I0428 20:24:15.128124  2384 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:15.129552  2377 solver.cpp:398]     Test net output #0: accuracy = 0.103
I0428 20:24:15.129585  2377 solver.cpp:398]     Test net output #1: loss = 2.31159 (* 1 = 2.31159 loss)
I0428 20:24:15.135259  2377 solver.cpp:219] Iteration 0 (-1.27339e-31 iter/s, 0.0979702s/100 iters), loss = 2.32038
I0428 20:24:15.135301  2377 solver.cpp:238]     Train net output #0: loss = 2.32038 (* 1 = 2.32038 loss)
I0428 20:24:15.135329  2377 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:15.336918  2377 solver.cpp:219] Iteration 100 (496.032 iter/s, 0.2016s/100 iters), loss = 0.579952
I0428 20:24:15.336944  2377 solver.cpp:238]     Train net output #0: loss = 0.579952 (* 1 = 0.579952 loss)
I0428 20:24:15.336951  2377 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:15.547479  2377 solver.cpp:219] Iteration 200 (475.019 iter/s, 0.210518s/100 iters), loss = 0.218305
I0428 20:24:15.547516  2377 solver.cpp:238]     Train net output #0: loss = 0.218305 (* 1 = 0.218305 loss)
I0428 20:24:15.547523  2377 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:15.755172  2377 solver.cpp:219] Iteration 300 (481.59 iter/s, 0.207646s/100 iters), loss = 0.23623
I0428 20:24:15.755199  2377 solver.cpp:238]     Train net output #0: loss = 0.23623 (* 1 = 0.23623 loss)
I0428 20:24:15.755205  2377 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:15.993777  2377 solver.cpp:219] Iteration 400 (419.183 iter/s, 0.238559s/100 iters), loss = 0.0714203
I0428 20:24:15.993811  2377 solver.cpp:238]     Train net output #0: loss = 0.0714203 (* 1 = 0.0714203 loss)
I0428 20:24:15.993820  2377 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:16.218335  2377 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:16.309108  2384 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:16.312330  2377 solver.cpp:398]     Test net output #0: accuracy = 0.9678
I0428 20:24:16.312355  2377 solver.cpp:398]     Test net output #1: loss = 0.104035 (* 1 = 0.104035 loss)
I0428 20:24:16.314543  2377 solver.cpp:219] Iteration 500 (311.806 iter/s, 0.320713s/100 iters), loss = 0.110319
I0428 20:24:16.314590  2377 solver.cpp:238]     Train net output #0: loss = 0.110319 (* 1 = 0.110319 loss)
I0428 20:24:16.314599  2377 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:16.540840  2377 solver.cpp:219] Iteration 600 (442.019 iter/s, 0.226234s/100 iters), loss = 0.100134
I0428 20:24:16.540871  2377 solver.cpp:238]     Train net output #0: loss = 0.100135 (* 1 = 0.100135 loss)
I0428 20:24:16.540880  2377 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:16.776201  2377 solver.cpp:219] Iteration 700 (424.98 iter/s, 0.235305s/100 iters), loss = 0.116654
I0428 20:24:16.776235  2377 solver.cpp:238]     Train net output #0: loss = 0.116654 (* 1 = 0.116654 loss)
I0428 20:24:16.776255  2377 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:17.016029  2377 solver.cpp:219] Iteration 800 (417.053 iter/s, 0.239778s/100 iters), loss = 0.240281
I0428 20:24:17.016062  2377 solver.cpp:238]     Train net output #0: loss = 0.240282 (* 1 = 0.240282 loss)
I0428 20:24:17.016070  2377 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:17.232722  2377 solver.cpp:219] Iteration 900 (461.59 iter/s, 0.216643s/100 iters), loss = 0.146234
I0428 20:24:17.232762  2377 solver.cpp:238]     Train net output #0: loss = 0.146234 (* 1 = 0.146234 loss)
I0428 20:24:17.232774  2377 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:17.313730  2383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:17.457845  2377 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:17.462872  2377 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:17.465034  2377 solver.cpp:311] Iteration 1000, loss = 0.136629
I0428 20:24:17.465050  2377 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:17.550205  2384 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:17.553513  2377 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0428 20:24:17.553531  2377 solver.cpp:398]     Test net output #1: loss = 0.0719369 (* 1 = 0.0719369 loss)
I0428 20:24:17.553536  2377 solver.cpp:316] Optimization Done.
I0428 20:24:17.553555  2377 caffe.cpp:259] Optimization Done.
