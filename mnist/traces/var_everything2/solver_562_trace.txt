I0428 19:49:01.488749 26653 caffe.cpp:218] Using GPUs 0
I0428 19:49:01.517329 26653 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:01.950896 26653 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test562.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:01.951027 26653 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test562.prototxt
I0428 19:49:01.951370 26653 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:01.951400 26653 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:01.951481 26653 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:01.951562 26653 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:01.951642 26653 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:01.951661 26653 net.cpp:86] Creating Layer mnist
I0428 19:49:01.951670 26653 net.cpp:382] mnist -> data
I0428 19:49:01.951689 26653 net.cpp:382] mnist -> label
I0428 19:49:01.952698 26653 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:01.954974 26653 net.cpp:124] Setting up mnist
I0428 19:49:01.955021 26653 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:01.955026 26653 net.cpp:131] Top shape: 64 (64)
I0428 19:49:01.955029 26653 net.cpp:139] Memory required for data: 200960
I0428 19:49:01.955034 26653 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:01.955049 26653 net.cpp:86] Creating Layer conv0
I0428 19:49:01.955065 26653 net.cpp:408] conv0 <- data
I0428 19:49:01.955076 26653 net.cpp:382] conv0 -> conv0
I0428 19:49:02.180104 26653 net.cpp:124] Setting up conv0
I0428 19:49:02.180147 26653 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:02.180151 26653 net.cpp:139] Memory required for data: 938240
I0428 19:49:02.180167 26653 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:02.180194 26653 net.cpp:86] Creating Layer pool0
I0428 19:49:02.180198 26653 net.cpp:408] pool0 <- conv0
I0428 19:49:02.180204 26653 net.cpp:382] pool0 -> pool0
I0428 19:49:02.180256 26653 net.cpp:124] Setting up pool0
I0428 19:49:02.180263 26653 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:02.180266 26653 net.cpp:139] Memory required for data: 1122560
I0428 19:49:02.180269 26653 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:02.180280 26653 net.cpp:86] Creating Layer conv1
I0428 19:49:02.180284 26653 net.cpp:408] conv1 <- pool0
I0428 19:49:02.180289 26653 net.cpp:382] conv1 -> conv1
I0428 19:49:02.182283 26653 net.cpp:124] Setting up conv1
I0428 19:49:02.182298 26653 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:02.182302 26653 net.cpp:139] Memory required for data: 1204480
I0428 19:49:02.182312 26653 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:02.182318 26653 net.cpp:86] Creating Layer pool1
I0428 19:49:02.182323 26653 net.cpp:408] pool1 <- conv1
I0428 19:49:02.182330 26653 net.cpp:382] pool1 -> pool1
I0428 19:49:02.182375 26653 net.cpp:124] Setting up pool1
I0428 19:49:02.182384 26653 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:02.182386 26653 net.cpp:139] Memory required for data: 1224960
I0428 19:49:02.182389 26653 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:02.182397 26653 net.cpp:86] Creating Layer ip1
I0428 19:49:02.182400 26653 net.cpp:408] ip1 <- pool1
I0428 19:49:02.182406 26653 net.cpp:382] ip1 -> ip1
I0428 19:49:02.182507 26653 net.cpp:124] Setting up ip1
I0428 19:49:02.182514 26653 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:02.182518 26653 net.cpp:139] Memory required for data: 1227520
I0428 19:49:02.182524 26653 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:02.182544 26653 net.cpp:86] Creating Layer relu1
I0428 19:49:02.182549 26653 net.cpp:408] relu1 <- ip1
I0428 19:49:02.182554 26653 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:02.182716 26653 net.cpp:124] Setting up relu1
I0428 19:49:02.182725 26653 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:02.182729 26653 net.cpp:139] Memory required for data: 1230080
I0428 19:49:02.182731 26653 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:02.182737 26653 net.cpp:86] Creating Layer ip2
I0428 19:49:02.182740 26653 net.cpp:408] ip2 <- ip1
I0428 19:49:02.182745 26653 net.cpp:382] ip2 -> ip2
I0428 19:49:02.182835 26653 net.cpp:124] Setting up ip2
I0428 19:49:02.182842 26653 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:02.182844 26653 net.cpp:139] Memory required for data: 1236480
I0428 19:49:02.182849 26653 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:02.182855 26653 net.cpp:86] Creating Layer relu2
I0428 19:49:02.182858 26653 net.cpp:408] relu2 <- ip2
I0428 19:49:02.182862 26653 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:02.183652 26653 net.cpp:124] Setting up relu2
I0428 19:49:02.183665 26653 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:02.183684 26653 net.cpp:139] Memory required for data: 1242880
I0428 19:49:02.183687 26653 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:02.183694 26653 net.cpp:86] Creating Layer ip3
I0428 19:49:02.183698 26653 net.cpp:408] ip3 <- ip2
I0428 19:49:02.183703 26653 net.cpp:382] ip3 -> ip3
I0428 19:49:02.183827 26653 net.cpp:124] Setting up ip3
I0428 19:49:02.183851 26653 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:02.183853 26653 net.cpp:139] Memory required for data: 1245440
I0428 19:49:02.183861 26653 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:02.183866 26653 net.cpp:86] Creating Layer relu3
I0428 19:49:02.183871 26653 net.cpp:408] relu3 <- ip3
I0428 19:49:02.183874 26653 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:02.184047 26653 net.cpp:124] Setting up relu3
I0428 19:49:02.184056 26653 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:02.184058 26653 net.cpp:139] Memory required for data: 1248000
I0428 19:49:02.184062 26653 layer_factory.hpp:77] Creating layer loss
I0428 19:49:02.184069 26653 net.cpp:86] Creating Layer loss
I0428 19:49:02.184072 26653 net.cpp:408] loss <- ip3
I0428 19:49:02.184077 26653 net.cpp:408] loss <- label
I0428 19:49:02.184082 26653 net.cpp:382] loss -> loss
I0428 19:49:02.184097 26653 layer_factory.hpp:77] Creating layer loss
I0428 19:49:02.184340 26653 net.cpp:124] Setting up loss
I0428 19:49:02.184350 26653 net.cpp:131] Top shape: (1)
I0428 19:49:02.184352 26653 net.cpp:134]     with loss weight 1
I0428 19:49:02.184367 26653 net.cpp:139] Memory required for data: 1248004
I0428 19:49:02.184370 26653 net.cpp:200] loss needs backward computation.
I0428 19:49:02.184375 26653 net.cpp:200] relu3 needs backward computation.
I0428 19:49:02.184377 26653 net.cpp:200] ip3 needs backward computation.
I0428 19:49:02.184379 26653 net.cpp:200] relu2 needs backward computation.
I0428 19:49:02.184382 26653 net.cpp:200] ip2 needs backward computation.
I0428 19:49:02.184386 26653 net.cpp:200] relu1 needs backward computation.
I0428 19:49:02.184387 26653 net.cpp:200] ip1 needs backward computation.
I0428 19:49:02.184391 26653 net.cpp:200] pool1 needs backward computation.
I0428 19:49:02.184393 26653 net.cpp:200] conv1 needs backward computation.
I0428 19:49:02.184396 26653 net.cpp:200] pool0 needs backward computation.
I0428 19:49:02.184399 26653 net.cpp:200] conv0 needs backward computation.
I0428 19:49:02.184402 26653 net.cpp:202] mnist does not need backward computation.
I0428 19:49:02.184422 26653 net.cpp:244] This network produces output loss
I0428 19:49:02.184430 26653 net.cpp:257] Network initialization done.
I0428 19:49:02.184814 26653 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test562.prototxt
I0428 19:49:02.184859 26653 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:02.184967 26653 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:02.185042 26653 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:02.185086 26653 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:02.185097 26653 net.cpp:86] Creating Layer mnist
I0428 19:49:02.185102 26653 net.cpp:382] mnist -> data
I0428 19:49:02.185109 26653 net.cpp:382] mnist -> label
I0428 19:49:02.185201 26653 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:02.187270 26653 net.cpp:124] Setting up mnist
I0428 19:49:02.187299 26653 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:02.187304 26653 net.cpp:131] Top shape: 100 (100)
I0428 19:49:02.187306 26653 net.cpp:139] Memory required for data: 314000
I0428 19:49:02.187310 26653 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:02.187316 26653 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:02.187320 26653 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:02.187325 26653 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:02.187330 26653 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:02.187381 26653 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:02.187386 26653 net.cpp:131] Top shape: 100 (100)
I0428 19:49:02.187391 26653 net.cpp:131] Top shape: 100 (100)
I0428 19:49:02.187393 26653 net.cpp:139] Memory required for data: 314800
I0428 19:49:02.187396 26653 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:02.187403 26653 net.cpp:86] Creating Layer conv0
I0428 19:49:02.187407 26653 net.cpp:408] conv0 <- data
I0428 19:49:02.187410 26653 net.cpp:382] conv0 -> conv0
I0428 19:49:02.189236 26653 net.cpp:124] Setting up conv0
I0428 19:49:02.189249 26653 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:02.189252 26653 net.cpp:139] Memory required for data: 1466800
I0428 19:49:02.189260 26653 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:02.189281 26653 net.cpp:86] Creating Layer pool0
I0428 19:49:02.189285 26653 net.cpp:408] pool0 <- conv0
I0428 19:49:02.189290 26653 net.cpp:382] pool0 -> pool0
I0428 19:49:02.189321 26653 net.cpp:124] Setting up pool0
I0428 19:49:02.189328 26653 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:02.189330 26653 net.cpp:139] Memory required for data: 1754800
I0428 19:49:02.189333 26653 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:02.189342 26653 net.cpp:86] Creating Layer conv1
I0428 19:49:02.189344 26653 net.cpp:408] conv1 <- pool0
I0428 19:49:02.189348 26653 net.cpp:382] conv1 -> conv1
I0428 19:49:02.191401 26653 net.cpp:124] Setting up conv1
I0428 19:49:02.191414 26653 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:02.191432 26653 net.cpp:139] Memory required for data: 1882800
I0428 19:49:02.191457 26653 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:02.191462 26653 net.cpp:86] Creating Layer pool1
I0428 19:49:02.191467 26653 net.cpp:408] pool1 <- conv1
I0428 19:49:02.191471 26653 net.cpp:382] pool1 -> pool1
I0428 19:49:02.191555 26653 net.cpp:124] Setting up pool1
I0428 19:49:02.191562 26653 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:02.191565 26653 net.cpp:139] Memory required for data: 1914800
I0428 19:49:02.191572 26653 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:02.191578 26653 net.cpp:86] Creating Layer ip1
I0428 19:49:02.191581 26653 net.cpp:408] ip1 <- pool1
I0428 19:49:02.191586 26653 net.cpp:382] ip1 -> ip1
I0428 19:49:02.191684 26653 net.cpp:124] Setting up ip1
I0428 19:49:02.191692 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.191705 26653 net.cpp:139] Memory required for data: 1918800
I0428 19:49:02.191714 26653 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:02.191718 26653 net.cpp:86] Creating Layer relu1
I0428 19:49:02.191721 26653 net.cpp:408] relu1 <- ip1
I0428 19:49:02.191725 26653 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:02.191895 26653 net.cpp:124] Setting up relu1
I0428 19:49:02.191903 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.191906 26653 net.cpp:139] Memory required for data: 1922800
I0428 19:49:02.191926 26653 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:02.191931 26653 net.cpp:86] Creating Layer ip2
I0428 19:49:02.191936 26653 net.cpp:408] ip2 <- ip1
I0428 19:49:02.191939 26653 net.cpp:382] ip2 -> ip2
I0428 19:49:02.192049 26653 net.cpp:124] Setting up ip2
I0428 19:49:02.192056 26653 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:02.192059 26653 net.cpp:139] Memory required for data: 1932800
I0428 19:49:02.192065 26653 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:02.192070 26653 net.cpp:86] Creating Layer relu2
I0428 19:49:02.192073 26653 net.cpp:408] relu2 <- ip2
I0428 19:49:02.192077 26653 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:02.192270 26653 net.cpp:124] Setting up relu2
I0428 19:49:02.192278 26653 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:02.192281 26653 net.cpp:139] Memory required for data: 1942800
I0428 19:49:02.192283 26653 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:02.192289 26653 net.cpp:86] Creating Layer ip3
I0428 19:49:02.192292 26653 net.cpp:408] ip3 <- ip2
I0428 19:49:02.192297 26653 net.cpp:382] ip3 -> ip3
I0428 19:49:02.192418 26653 net.cpp:124] Setting up ip3
I0428 19:49:02.192440 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.192442 26653 net.cpp:139] Memory required for data: 1946800
I0428 19:49:02.192453 26653 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:02.192458 26653 net.cpp:86] Creating Layer relu3
I0428 19:49:02.192461 26653 net.cpp:408] relu3 <- ip3
I0428 19:49:02.192481 26653 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:02.193367 26653 net.cpp:124] Setting up relu3
I0428 19:49:02.193380 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.193384 26653 net.cpp:139] Memory required for data: 1950800
I0428 19:49:02.193387 26653 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:02.193408 26653 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:02.193413 26653 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:02.193418 26653 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:02.193423 26653 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:02.193457 26653 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:02.193464 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.193467 26653 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:02.193470 26653 net.cpp:139] Memory required for data: 1958800
I0428 19:49:02.193472 26653 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:02.193477 26653 net.cpp:86] Creating Layer accuracy
I0428 19:49:02.193480 26653 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:02.193485 26653 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:02.193488 26653 net.cpp:382] accuracy -> accuracy
I0428 19:49:02.193495 26653 net.cpp:124] Setting up accuracy
I0428 19:49:02.193498 26653 net.cpp:131] Top shape: (1)
I0428 19:49:02.193500 26653 net.cpp:139] Memory required for data: 1958804
I0428 19:49:02.193503 26653 layer_factory.hpp:77] Creating layer loss
I0428 19:49:02.193507 26653 net.cpp:86] Creating Layer loss
I0428 19:49:02.193511 26653 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:02.193513 26653 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:02.193517 26653 net.cpp:382] loss -> loss
I0428 19:49:02.193522 26653 layer_factory.hpp:77] Creating layer loss
I0428 19:49:02.193730 26653 net.cpp:124] Setting up loss
I0428 19:49:02.193738 26653 net.cpp:131] Top shape: (1)
I0428 19:49:02.193742 26653 net.cpp:134]     with loss weight 1
I0428 19:49:02.193748 26653 net.cpp:139] Memory required for data: 1958808
I0428 19:49:02.193763 26653 net.cpp:200] loss needs backward computation.
I0428 19:49:02.193766 26653 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:02.193770 26653 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:02.193773 26653 net.cpp:200] relu3 needs backward computation.
I0428 19:49:02.193775 26653 net.cpp:200] ip3 needs backward computation.
I0428 19:49:02.193778 26653 net.cpp:200] relu2 needs backward computation.
I0428 19:49:02.193781 26653 net.cpp:200] ip2 needs backward computation.
I0428 19:49:02.193784 26653 net.cpp:200] relu1 needs backward computation.
I0428 19:49:02.193786 26653 net.cpp:200] ip1 needs backward computation.
I0428 19:49:02.193789 26653 net.cpp:200] pool1 needs backward computation.
I0428 19:49:02.193792 26653 net.cpp:200] conv1 needs backward computation.
I0428 19:49:02.193795 26653 net.cpp:200] pool0 needs backward computation.
I0428 19:49:02.193799 26653 net.cpp:200] conv0 needs backward computation.
I0428 19:49:02.193801 26653 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:02.193805 26653 net.cpp:202] mnist does not need backward computation.
I0428 19:49:02.193807 26653 net.cpp:244] This network produces output accuracy
I0428 19:49:02.193810 26653 net.cpp:244] This network produces output loss
I0428 19:49:02.193820 26653 net.cpp:257] Network initialization done.
I0428 19:49:02.193859 26653 solver.cpp:56] Solver scaffolding done.
I0428 19:49:02.194172 26653 caffe.cpp:248] Starting Optimization
I0428 19:49:02.194195 26653 solver.cpp:273] Solving LeNet
I0428 19:49:02.194197 26653 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:02.194947 26653 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:02.200265 26653 blocking_queue.cpp:49] Waiting for data
I0428 19:49:02.242180 26660 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:02.242664 26653 solver.cpp:398]     Test net output #0: accuracy = 0.1255
I0428 19:49:02.242682 26653 solver.cpp:398]     Test net output #1: loss = 2.29455 (* 1 = 2.29455 loss)
I0428 19:49:02.244515 26653 solver.cpp:219] Iteration 0 (0 iter/s, 0.0502958s/100 iters), loss = 2.29064
I0428 19:49:02.244554 26653 solver.cpp:238]     Train net output #0: loss = 2.29064 (* 1 = 2.29064 loss)
I0428 19:49:02.244583 26653 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:02.313858 26653 solver.cpp:219] Iteration 100 (1443.08 iter/s, 0.0692962s/100 iters), loss = 1.09963
I0428 19:49:02.313881 26653 solver.cpp:238]     Train net output #0: loss = 1.09963 (* 1 = 1.09963 loss)
I0428 19:49:02.313902 26653 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:02.383046 26653 solver.cpp:219] Iteration 200 (1446.01 iter/s, 0.0691558s/100 iters), loss = 1.32512
I0428 19:49:02.383069 26653 solver.cpp:238]     Train net output #0: loss = 1.32512 (* 1 = 1.32512 loss)
I0428 19:49:02.383074 26653 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:02.451876 26653 solver.cpp:219] Iteration 300 (1453.5 iter/s, 0.0687995s/100 iters), loss = 0.756669
I0428 19:49:02.451900 26653 solver.cpp:238]     Train net output #0: loss = 0.756669 (* 1 = 0.756669 loss)
I0428 19:49:02.451920 26653 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:02.521025 26653 solver.cpp:219] Iteration 400 (1446.8 iter/s, 0.0691179s/100 iters), loss = 0.89754
I0428 19:49:02.521047 26653 solver.cpp:238]     Train net output #0: loss = 0.89754 (* 1 = 0.89754 loss)
I0428 19:49:02.521054 26653 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:02.589273 26653 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:02.633754 26660 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:02.634294 26653 solver.cpp:398]     Test net output #0: accuracy = 0.8612
I0428 19:49:02.634312 26653 solver.cpp:398]     Test net output #1: loss = 0.517379 (* 1 = 0.517379 loss)
I0428 19:49:02.635087 26653 solver.cpp:219] Iteration 500 (876.981 iter/s, 0.114028s/100 iters), loss = 0.496211
I0428 19:49:02.635125 26653 solver.cpp:238]     Train net output #0: loss = 0.496211 (* 1 = 0.496211 loss)
I0428 19:49:02.635149 26653 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:02.716670 26653 solver.cpp:219] Iteration 600 (1226.45 iter/s, 0.0815363s/100 iters), loss = 0.45714
I0428 19:49:02.716708 26653 solver.cpp:238]     Train net output #0: loss = 0.45714 (* 1 = 0.45714 loss)
I0428 19:49:02.716714 26653 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:02.798450 26653 solver.cpp:219] Iteration 700 (1223.26 iter/s, 0.081749s/100 iters), loss = 0.691671
I0428 19:49:02.798490 26653 solver.cpp:238]     Train net output #0: loss = 0.691671 (* 1 = 0.691671 loss)
I0428 19:49:02.798494 26653 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:02.870872 26653 solver.cpp:219] Iteration 800 (1381.37 iter/s, 0.0723917s/100 iters), loss = 0.462924
I0428 19:49:02.870911 26653 solver.cpp:238]     Train net output #0: loss = 0.462924 (* 1 = 0.462924 loss)
I0428 19:49:02.870918 26653 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:02.943511 26653 solver.cpp:219] Iteration 900 (1377.28 iter/s, 0.0726067s/100 iters), loss = 0.607554
I0428 19:49:02.943548 26653 solver.cpp:238]     Train net output #0: loss = 0.607554 (* 1 = 0.607554 loss)
I0428 19:49:02.943554 26653 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:02.968459 26659 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:03.015156 26653 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:03.015770 26653 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:03.016268 26653 solver.cpp:311] Iteration 1000, loss = 0.450983
I0428 19:49:03.016283 26653 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:03.090636 26660 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:03.091130 26653 solver.cpp:398]     Test net output #0: accuracy = 0.934
I0428 19:49:03.091150 26653 solver.cpp:398]     Test net output #1: loss = 0.392111 (* 1 = 0.392111 loss)
I0428 19:49:03.091156 26653 solver.cpp:316] Optimization Done.
I0428 19:49:03.091159 26653 caffe.cpp:259] Optimization Done.
