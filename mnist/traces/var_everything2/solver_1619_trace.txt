I0428 20:35:20.035310  4607 caffe.cpp:218] Using GPUs 0
I0428 20:35:20.064975  4607 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:35:20.506036  4607 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1619.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:35:20.506628  4607 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1619.prototxt
I0428 20:35:20.506970  4607 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:35:20.507017  4607 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:35:20.507097  4607 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:20.507158  4607 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:20.507238  4607 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:35:20.507264  4607 net.cpp:86] Creating Layer mnist
I0428 20:35:20.507273  4607 net.cpp:382] mnist -> data
I0428 20:35:20.507292  4607 net.cpp:382] mnist -> label
I0428 20:35:20.508211  4607 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:35:20.510426  4607 net.cpp:124] Setting up mnist
I0428 20:35:20.510457  4607 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:35:20.510463  4607 net.cpp:131] Top shape: 64 (64)
I0428 20:35:20.510466  4607 net.cpp:139] Memory required for data: 200960
I0428 20:35:20.510473  4607 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:20.510485  4607 net.cpp:86] Creating Layer conv0
I0428 20:35:20.510506  4607 net.cpp:408] conv0 <- data
I0428 20:35:20.510535  4607 net.cpp:382] conv0 -> conv0
I0428 20:35:20.737529  4607 net.cpp:124] Setting up conv0
I0428 20:35:20.737572  4607 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:35:20.737576  4607 net.cpp:139] Memory required for data: 14946560
I0428 20:35:20.737591  4607 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:20.737603  4607 net.cpp:86] Creating Layer pool0
I0428 20:35:20.737607  4607 net.cpp:408] pool0 <- conv0
I0428 20:35:20.737612  4607 net.cpp:382] pool0 -> pool0
I0428 20:35:20.737681  4607 net.cpp:124] Setting up pool0
I0428 20:35:20.737687  4607 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:35:20.737690  4607 net.cpp:139] Memory required for data: 18632960
I0428 20:35:20.737694  4607 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:20.737704  4607 net.cpp:86] Creating Layer conv1
I0428 20:35:20.737706  4607 net.cpp:408] conv1 <- pool0
I0428 20:35:20.737711  4607 net.cpp:382] conv1 -> conv1
I0428 20:35:20.740958  4607 net.cpp:124] Setting up conv1
I0428 20:35:20.740988  4607 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:35:20.740993  4607 net.cpp:139] Memory required for data: 19452160
I0428 20:35:20.741000  4607 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:20.741008  4607 net.cpp:86] Creating Layer pool1
I0428 20:35:20.741011  4607 net.cpp:408] pool1 <- conv1
I0428 20:35:20.741016  4607 net.cpp:382] pool1 -> pool1
I0428 20:35:20.741070  4607 net.cpp:124] Setting up pool1
I0428 20:35:20.741075  4607 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:35:20.741078  4607 net.cpp:139] Memory required for data: 19656960
I0428 20:35:20.741081  4607 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:20.741088  4607 net.cpp:86] Creating Layer ip1
I0428 20:35:20.741091  4607 net.cpp:408] ip1 <- pool1
I0428 20:35:20.741096  4607 net.cpp:382] ip1 -> ip1
I0428 20:35:20.742072  4607 net.cpp:124] Setting up ip1
I0428 20:35:20.742084  4607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:20.742103  4607 net.cpp:139] Memory required for data: 19659520
I0428 20:35:20.742111  4607 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:20.742117  4607 net.cpp:86] Creating Layer relu1
I0428 20:35:20.742121  4607 net.cpp:408] relu1 <- ip1
I0428 20:35:20.742125  4607 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:20.742290  4607 net.cpp:124] Setting up relu1
I0428 20:35:20.742300  4607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:20.742302  4607 net.cpp:139] Memory required for data: 19662080
I0428 20:35:20.742306  4607 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:20.742312  4607 net.cpp:86] Creating Layer ip2
I0428 20:35:20.742316  4607 net.cpp:408] ip2 <- ip1
I0428 20:35:20.742321  4607 net.cpp:382] ip2 -> ip2
I0428 20:35:20.742414  4607 net.cpp:124] Setting up ip2
I0428 20:35:20.742422  4607 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:20.742425  4607 net.cpp:139] Memory required for data: 19674880
I0428 20:35:20.742430  4607 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:20.742436  4607 net.cpp:86] Creating Layer relu2
I0428 20:35:20.742439  4607 net.cpp:408] relu2 <- ip2
I0428 20:35:20.742444  4607 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:20.743163  4607 net.cpp:124] Setting up relu2
I0428 20:35:20.743191  4607 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:20.743196  4607 net.cpp:139] Memory required for data: 19687680
I0428 20:35:20.743198  4607 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:20.743206  4607 net.cpp:86] Creating Layer ip3
I0428 20:35:20.743208  4607 net.cpp:408] ip3 <- ip2
I0428 20:35:20.743214  4607 net.cpp:382] ip3 -> ip3
I0428 20:35:20.743316  4607 net.cpp:124] Setting up ip3
I0428 20:35:20.743324  4607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:20.743327  4607 net.cpp:139] Memory required for data: 19690240
I0428 20:35:20.743335  4607 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:20.743340  4607 net.cpp:86] Creating Layer relu3
I0428 20:35:20.743342  4607 net.cpp:408] relu3 <- ip3
I0428 20:35:20.743346  4607 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:20.743507  4607 net.cpp:124] Setting up relu3
I0428 20:35:20.743516  4607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:20.743520  4607 net.cpp:139] Memory required for data: 19692800
I0428 20:35:20.743522  4607 layer_factory.hpp:77] Creating layer loss
I0428 20:35:20.743528  4607 net.cpp:86] Creating Layer loss
I0428 20:35:20.743531  4607 net.cpp:408] loss <- ip3
I0428 20:35:20.743535  4607 net.cpp:408] loss <- label
I0428 20:35:20.743541  4607 net.cpp:382] loss -> loss
I0428 20:35:20.743554  4607 layer_factory.hpp:77] Creating layer loss
I0428 20:35:20.743790  4607 net.cpp:124] Setting up loss
I0428 20:35:20.743799  4607 net.cpp:131] Top shape: (1)
I0428 20:35:20.743803  4607 net.cpp:134]     with loss weight 1
I0428 20:35:20.743818  4607 net.cpp:139] Memory required for data: 19692804
I0428 20:35:20.743823  4607 net.cpp:200] loss needs backward computation.
I0428 20:35:20.743826  4607 net.cpp:200] relu3 needs backward computation.
I0428 20:35:20.743829  4607 net.cpp:200] ip3 needs backward computation.
I0428 20:35:20.743831  4607 net.cpp:200] relu2 needs backward computation.
I0428 20:35:20.743834  4607 net.cpp:200] ip2 needs backward computation.
I0428 20:35:20.743837  4607 net.cpp:200] relu1 needs backward computation.
I0428 20:35:20.743839  4607 net.cpp:200] ip1 needs backward computation.
I0428 20:35:20.743842  4607 net.cpp:200] pool1 needs backward computation.
I0428 20:35:20.743845  4607 net.cpp:200] conv1 needs backward computation.
I0428 20:35:20.743849  4607 net.cpp:200] pool0 needs backward computation.
I0428 20:35:20.743851  4607 net.cpp:200] conv0 needs backward computation.
I0428 20:35:20.743854  4607 net.cpp:202] mnist does not need backward computation.
I0428 20:35:20.743857  4607 net.cpp:244] This network produces output loss
I0428 20:35:20.743866  4607 net.cpp:257] Network initialization done.
I0428 20:35:20.744212  4607 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1619.prototxt
I0428 20:35:20.744254  4607 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:35:20.744343  4607 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:20.744420  4607 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:20.744462  4607 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:35:20.744475  4607 net.cpp:86] Creating Layer mnist
I0428 20:35:20.744480  4607 net.cpp:382] mnist -> data
I0428 20:35:20.744488  4607 net.cpp:382] mnist -> label
I0428 20:35:20.744571  4607 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:35:20.745739  4607 net.cpp:124] Setting up mnist
I0428 20:35:20.745782  4607 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:35:20.745787  4607 net.cpp:131] Top shape: 100 (100)
I0428 20:35:20.745790  4607 net.cpp:139] Memory required for data: 314000
I0428 20:35:20.745795  4607 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:35:20.745800  4607 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:35:20.745803  4607 net.cpp:408] label_mnist_1_split <- label
I0428 20:35:20.745808  4607 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:35:20.745815  4607 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:35:20.745857  4607 net.cpp:124] Setting up label_mnist_1_split
I0428 20:35:20.745862  4607 net.cpp:131] Top shape: 100 (100)
I0428 20:35:20.745865  4607 net.cpp:131] Top shape: 100 (100)
I0428 20:35:20.745868  4607 net.cpp:139] Memory required for data: 314800
I0428 20:35:20.745870  4607 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:20.745878  4607 net.cpp:86] Creating Layer conv0
I0428 20:35:20.745882  4607 net.cpp:408] conv0 <- data
I0428 20:35:20.745885  4607 net.cpp:382] conv0 -> conv0
I0428 20:35:20.747432  4607 net.cpp:124] Setting up conv0
I0428 20:35:20.747462  4607 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:35:20.747467  4607 net.cpp:139] Memory required for data: 23354800
I0428 20:35:20.747475  4607 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:20.747481  4607 net.cpp:86] Creating Layer pool0
I0428 20:35:20.747484  4607 net.cpp:408] pool0 <- conv0
I0428 20:35:20.747489  4607 net.cpp:382] pool0 -> pool0
I0428 20:35:20.747524  4607 net.cpp:124] Setting up pool0
I0428 20:35:20.747529  4607 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:35:20.747532  4607 net.cpp:139] Memory required for data: 29114800
I0428 20:35:20.747535  4607 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:20.747544  4607 net.cpp:86] Creating Layer conv1
I0428 20:35:20.747547  4607 net.cpp:408] conv1 <- pool0
I0428 20:35:20.747551  4607 net.cpp:382] conv1 -> conv1
I0428 20:35:20.750633  4607 net.cpp:124] Setting up conv1
I0428 20:35:20.750660  4607 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:35:20.750664  4607 net.cpp:139] Memory required for data: 30394800
I0428 20:35:20.750672  4607 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:20.750679  4607 net.cpp:86] Creating Layer pool1
I0428 20:35:20.750682  4607 net.cpp:408] pool1 <- conv1
I0428 20:35:20.750689  4607 net.cpp:382] pool1 -> pool1
I0428 20:35:20.750737  4607 net.cpp:124] Setting up pool1
I0428 20:35:20.750743  4607 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:35:20.750747  4607 net.cpp:139] Memory required for data: 30714800
I0428 20:35:20.750751  4607 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:20.750756  4607 net.cpp:86] Creating Layer ip1
I0428 20:35:20.750758  4607 net.cpp:408] ip1 <- pool1
I0428 20:35:20.750763  4607 net.cpp:382] ip1 -> ip1
I0428 20:35:20.750911  4607 net.cpp:124] Setting up ip1
I0428 20:35:20.750931  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.750934  4607 net.cpp:139] Memory required for data: 30718800
I0428 20:35:20.750942  4607 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:20.750947  4607 net.cpp:86] Creating Layer relu1
I0428 20:35:20.750950  4607 net.cpp:408] relu1 <- ip1
I0428 20:35:20.750955  4607 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:20.751108  4607 net.cpp:124] Setting up relu1
I0428 20:35:20.751117  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.751128  4607 net.cpp:139] Memory required for data: 30722800
I0428 20:35:20.751132  4607 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:20.751139  4607 net.cpp:86] Creating Layer ip2
I0428 20:35:20.751142  4607 net.cpp:408] ip2 <- ip1
I0428 20:35:20.751161  4607 net.cpp:382] ip2 -> ip2
I0428 20:35:20.751255  4607 net.cpp:124] Setting up ip2
I0428 20:35:20.751263  4607 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:20.751266  4607 net.cpp:139] Memory required for data: 30742800
I0428 20:35:20.751274  4607 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:20.751288  4607 net.cpp:86] Creating Layer relu2
I0428 20:35:20.751291  4607 net.cpp:408] relu2 <- ip2
I0428 20:35:20.751296  4607 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:20.751437  4607 net.cpp:124] Setting up relu2
I0428 20:35:20.751446  4607 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:20.751449  4607 net.cpp:139] Memory required for data: 30762800
I0428 20:35:20.751452  4607 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:20.751457  4607 net.cpp:86] Creating Layer ip3
I0428 20:35:20.751461  4607 net.cpp:408] ip3 <- ip2
I0428 20:35:20.751466  4607 net.cpp:382] ip3 -> ip3
I0428 20:35:20.751585  4607 net.cpp:124] Setting up ip3
I0428 20:35:20.751591  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.751595  4607 net.cpp:139] Memory required for data: 30766800
I0428 20:35:20.751602  4607 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:20.751606  4607 net.cpp:86] Creating Layer relu3
I0428 20:35:20.751610  4607 net.cpp:408] relu3 <- ip3
I0428 20:35:20.751612  4607 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:20.752439  4607 net.cpp:124] Setting up relu3
I0428 20:35:20.752450  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.752470  4607 net.cpp:139] Memory required for data: 30770800
I0428 20:35:20.752473  4607 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:35:20.752478  4607 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:35:20.752481  4607 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:35:20.752487  4607 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:35:20.752493  4607 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:35:20.752544  4607 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:35:20.752564  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.752568  4607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:20.752571  4607 net.cpp:139] Memory required for data: 30778800
I0428 20:35:20.752574  4607 layer_factory.hpp:77] Creating layer accuracy
I0428 20:35:20.752579  4607 net.cpp:86] Creating Layer accuracy
I0428 20:35:20.752588  4607 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:35:20.752593  4607 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:35:20.752598  4607 net.cpp:382] accuracy -> accuracy
I0428 20:35:20.752604  4607 net.cpp:124] Setting up accuracy
I0428 20:35:20.752609  4607 net.cpp:131] Top shape: (1)
I0428 20:35:20.752610  4607 net.cpp:139] Memory required for data: 30778804
I0428 20:35:20.752614  4607 layer_factory.hpp:77] Creating layer loss
I0428 20:35:20.752619  4607 net.cpp:86] Creating Layer loss
I0428 20:35:20.752621  4607 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:35:20.752624  4607 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:35:20.752629  4607 net.cpp:382] loss -> loss
I0428 20:35:20.752635  4607 layer_factory.hpp:77] Creating layer loss
I0428 20:35:20.752874  4607 net.cpp:124] Setting up loss
I0428 20:35:20.752884  4607 net.cpp:131] Top shape: (1)
I0428 20:35:20.752887  4607 net.cpp:134]     with loss weight 1
I0428 20:35:20.752905  4607 net.cpp:139] Memory required for data: 30778808
I0428 20:35:20.752909  4607 net.cpp:200] loss needs backward computation.
I0428 20:35:20.752913  4607 net.cpp:202] accuracy does not need backward computation.
I0428 20:35:20.752918  4607 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:35:20.752920  4607 net.cpp:200] relu3 needs backward computation.
I0428 20:35:20.752923  4607 net.cpp:200] ip3 needs backward computation.
I0428 20:35:20.752926  4607 net.cpp:200] relu2 needs backward computation.
I0428 20:35:20.752929  4607 net.cpp:200] ip2 needs backward computation.
I0428 20:35:20.752933  4607 net.cpp:200] relu1 needs backward computation.
I0428 20:35:20.752935  4607 net.cpp:200] ip1 needs backward computation.
I0428 20:35:20.752938  4607 net.cpp:200] pool1 needs backward computation.
I0428 20:35:20.752941  4607 net.cpp:200] conv1 needs backward computation.
I0428 20:35:20.752945  4607 net.cpp:200] pool0 needs backward computation.
I0428 20:35:20.752948  4607 net.cpp:200] conv0 needs backward computation.
I0428 20:35:20.752959  4607 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:35:20.752962  4607 net.cpp:202] mnist does not need backward computation.
I0428 20:35:20.752966  4607 net.cpp:244] This network produces output accuracy
I0428 20:35:20.752969  4607 net.cpp:244] This network produces output loss
I0428 20:35:20.752980  4607 net.cpp:257] Network initialization done.
I0428 20:35:20.753033  4607 solver.cpp:56] Solver scaffolding done.
I0428 20:35:20.753410  4607 caffe.cpp:248] Starting Optimization
I0428 20:35:20.753417  4607 solver.cpp:273] Solving LeNet
I0428 20:35:20.753419  4607 solver.cpp:274] Learning Rate Policy: inv
I0428 20:35:20.754309  4607 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:35:20.834477  4607 blocking_queue.cpp:49] Waiting for data
I0428 20:35:20.863989  4614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:20.865773  4607 solver.cpp:398]     Test net output #0: accuracy = 0.0598
I0428 20:35:20.865808  4607 solver.cpp:398]     Test net output #1: loss = 2.32853 (* 1 = 2.32853 loss)
I0428 20:35:20.870445  4607 solver.cpp:219] Iteration 0 (0 iter/s, 0.11697s/100 iters), loss = 2.34669
I0428 20:35:20.870482  4607 solver.cpp:238]     Train net output #0: loss = 2.34669 (* 1 = 2.34669 loss)
I0428 20:35:20.870493  4607 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:35:21.103178  4607 solver.cpp:219] Iteration 100 (429.749 iter/s, 0.232694s/100 iters), loss = 0.816155
I0428 20:35:21.103206  4607 solver.cpp:238]     Train net output #0: loss = 0.816155 (* 1 = 0.816155 loss)
I0428 20:35:21.103214  4607 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:35:21.328204  4607 solver.cpp:219] Iteration 200 (444.478 iter/s, 0.224983s/100 iters), loss = 1.3337
I0428 20:35:21.328230  4607 solver.cpp:238]     Train net output #0: loss = 1.3337 (* 1 = 1.3337 loss)
I0428 20:35:21.328238  4607 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:35:21.563848  4607 solver.cpp:219] Iteration 300 (424.448 iter/s, 0.2356s/100 iters), loss = 0.658296
I0428 20:35:21.563896  4607 solver.cpp:238]     Train net output #0: loss = 0.658296 (* 1 = 0.658296 loss)
I0428 20:35:21.563905  4607 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:35:21.796751  4607 solver.cpp:219] Iteration 400 (429.483 iter/s, 0.232838s/100 iters), loss = 0.945158
I0428 20:35:21.796779  4607 solver.cpp:238]     Train net output #0: loss = 0.945158 (* 1 = 0.945158 loss)
I0428 20:35:21.796787  4607 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:35:22.025828  4607 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:35:22.134083  4614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:22.135938  4607 solver.cpp:398]     Test net output #0: accuracy = 0.7637
I0428 20:35:22.135977  4607 solver.cpp:398]     Test net output #1: loss = 0.817329 (* 1 = 0.817329 loss)
I0428 20:35:22.138366  4607 solver.cpp:219] Iteration 500 (292.781 iter/s, 0.341552s/100 iters), loss = 0.864681
I0428 20:35:22.138420  4607 solver.cpp:238]     Train net output #0: loss = 0.864681 (* 1 = 0.864681 loss)
I0428 20:35:22.138427  4607 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:35:22.371675  4607 solver.cpp:219] Iteration 600 (428.744 iter/s, 0.23324s/100 iters), loss = 0.755597
I0428 20:35:22.371719  4607 solver.cpp:238]     Train net output #0: loss = 0.755597 (* 1 = 0.755597 loss)
I0428 20:35:22.371726  4607 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:35:22.604400  4607 solver.cpp:219] Iteration 700 (429.8 iter/s, 0.232666s/100 iters), loss = 0.899344
I0428 20:35:22.604444  4607 solver.cpp:238]     Train net output #0: loss = 0.899344 (* 1 = 0.899344 loss)
I0428 20:35:22.604449  4607 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:35:22.841711  4607 solver.cpp:219] Iteration 800 (421.466 iter/s, 0.237267s/100 iters), loss = 0.950132
I0428 20:35:22.841737  4607 solver.cpp:238]     Train net output #0: loss = 0.950132 (* 1 = 0.950132 loss)
I0428 20:35:22.841744  4607 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:35:23.079622  4607 solver.cpp:219] Iteration 900 (420.403 iter/s, 0.237867s/100 iters), loss = 0.981887
I0428 20:35:23.079648  4607 solver.cpp:238]     Train net output #0: loss = 0.981887 (* 1 = 0.981887 loss)
I0428 20:35:23.079654  4607 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:35:23.158500  4613 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:23.314851  4607 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:35:23.318990  4607 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:35:23.321046  4607 solver.cpp:311] Iteration 1000, loss = 0.79101
I0428 20:35:23.321064  4607 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:35:23.430208  4614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:23.432065  4607 solver.cpp:398]     Test net output #0: accuracy = 0.878
I0428 20:35:23.432098  4607 solver.cpp:398]     Test net output #1: loss = 0.542197 (* 1 = 0.542197 loss)
I0428 20:35:23.432104  4607 solver.cpp:316] Optimization Done.
I0428 20:35:23.432107  4607 caffe.cpp:259] Optimization Done.
