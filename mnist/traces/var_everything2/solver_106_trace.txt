I0428 19:30:55.248322 22444 caffe.cpp:218] Using GPUs 0
I0428 19:30:55.284931 22444 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:55.793427 22444 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test106.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:55.793571 22444 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test106.prototxt
I0428 19:30:55.793937 22444 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:55.793956 22444 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:55.794044 22444 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:55.794119 22444 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:55.794219 22444 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:55.794244 22444 net.cpp:86] Creating Layer mnist
I0428 19:30:55.794253 22444 net.cpp:382] mnist -> data
I0428 19:30:55.794276 22444 net.cpp:382] mnist -> label
I0428 19:30:55.795377 22444 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:55.797844 22444 net.cpp:124] Setting up mnist
I0428 19:30:55.797863 22444 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:55.797868 22444 net.cpp:131] Top shape: 64 (64)
I0428 19:30:55.797873 22444 net.cpp:139] Memory required for data: 200960
I0428 19:30:55.797880 22444 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:55.797919 22444 net.cpp:86] Creating Layer conv0
I0428 19:30:55.797925 22444 net.cpp:408] conv0 <- data
I0428 19:30:55.797940 22444 net.cpp:382] conv0 -> conv0
I0428 19:30:56.083235 22444 net.cpp:124] Setting up conv0
I0428 19:30:56.083262 22444 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:56.083267 22444 net.cpp:139] Memory required for data: 938240
I0428 19:30:56.083284 22444 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:56.083299 22444 net.cpp:86] Creating Layer pool0
I0428 19:30:56.083325 22444 net.cpp:408] pool0 <- conv0
I0428 19:30:56.083333 22444 net.cpp:382] pool0 -> pool0
I0428 19:30:56.083386 22444 net.cpp:124] Setting up pool0
I0428 19:30:56.083400 22444 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:56.083403 22444 net.cpp:139] Memory required for data: 1122560
I0428 19:30:56.083406 22444 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:56.083415 22444 net.cpp:86] Creating Layer ip1
I0428 19:30:56.083418 22444 net.cpp:408] ip1 <- pool0
I0428 19:30:56.083425 22444 net.cpp:382] ip1 -> ip1
I0428 19:30:56.083637 22444 net.cpp:124] Setting up ip1
I0428 19:30:56.083645 22444 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:56.083649 22444 net.cpp:139] Memory required for data: 1128960
I0428 19:30:56.083657 22444 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:56.083663 22444 net.cpp:86] Creating Layer relu1
I0428 19:30:56.083667 22444 net.cpp:408] relu1 <- ip1
I0428 19:30:56.083672 22444 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:56.083840 22444 net.cpp:124] Setting up relu1
I0428 19:30:56.083849 22444 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:56.083853 22444 net.cpp:139] Memory required for data: 1135360
I0428 19:30:56.083856 22444 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:56.083863 22444 net.cpp:86] Creating Layer ip2
I0428 19:30:56.083868 22444 net.cpp:408] ip2 <- ip1
I0428 19:30:56.083873 22444 net.cpp:382] ip2 -> ip2
I0428 19:30:56.084856 22444 net.cpp:124] Setting up ip2
I0428 19:30:56.084880 22444 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:56.084900 22444 net.cpp:139] Memory required for data: 1148160
I0428 19:30:56.084909 22444 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:56.084915 22444 net.cpp:86] Creating Layer relu2
I0428 19:30:56.084919 22444 net.cpp:408] relu2 <- ip2
I0428 19:30:56.084924 22444 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:56.085675 22444 net.cpp:124] Setting up relu2
I0428 19:30:56.085687 22444 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:56.085691 22444 net.cpp:139] Memory required for data: 1160960
I0428 19:30:56.085695 22444 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:56.085702 22444 net.cpp:86] Creating Layer ip3
I0428 19:30:56.085705 22444 net.cpp:408] ip3 <- ip2
I0428 19:30:56.085711 22444 net.cpp:382] ip3 -> ip3
I0428 19:30:56.085810 22444 net.cpp:124] Setting up ip3
I0428 19:30:56.085819 22444 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:56.085821 22444 net.cpp:139] Memory required for data: 1163520
I0428 19:30:56.085827 22444 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:56.085834 22444 net.cpp:86] Creating Layer relu3
I0428 19:30:56.085837 22444 net.cpp:408] relu3 <- ip3
I0428 19:30:56.085842 22444 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:56.086009 22444 net.cpp:124] Setting up relu3
I0428 19:30:56.086019 22444 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:56.086021 22444 net.cpp:139] Memory required for data: 1166080
I0428 19:30:56.086024 22444 layer_factory.hpp:77] Creating layer loss
I0428 19:30:56.086030 22444 net.cpp:86] Creating Layer loss
I0428 19:30:56.086035 22444 net.cpp:408] loss <- ip3
I0428 19:30:56.086038 22444 net.cpp:408] loss <- label
I0428 19:30:56.086045 22444 net.cpp:382] loss -> loss
I0428 19:30:56.086062 22444 layer_factory.hpp:77] Creating layer loss
I0428 19:30:56.086287 22444 net.cpp:124] Setting up loss
I0428 19:30:56.086297 22444 net.cpp:131] Top shape: (1)
I0428 19:30:56.086299 22444 net.cpp:134]     with loss weight 1
I0428 19:30:56.086313 22444 net.cpp:139] Memory required for data: 1166084
I0428 19:30:56.086318 22444 net.cpp:200] loss needs backward computation.
I0428 19:30:56.086321 22444 net.cpp:200] relu3 needs backward computation.
I0428 19:30:56.086324 22444 net.cpp:200] ip3 needs backward computation.
I0428 19:30:56.086328 22444 net.cpp:200] relu2 needs backward computation.
I0428 19:30:56.086330 22444 net.cpp:200] ip2 needs backward computation.
I0428 19:30:56.086334 22444 net.cpp:200] relu1 needs backward computation.
I0428 19:30:56.086336 22444 net.cpp:200] ip1 needs backward computation.
I0428 19:30:56.086350 22444 net.cpp:200] pool0 needs backward computation.
I0428 19:30:56.086354 22444 net.cpp:200] conv0 needs backward computation.
I0428 19:30:56.086357 22444 net.cpp:202] mnist does not need backward computation.
I0428 19:30:56.086360 22444 net.cpp:244] This network produces output loss
I0428 19:30:56.086369 22444 net.cpp:257] Network initialization done.
I0428 19:30:56.086652 22444 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test106.prototxt
I0428 19:30:56.086678 22444 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:56.086758 22444 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:56.086822 22444 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:56.086869 22444 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:56.086882 22444 net.cpp:86] Creating Layer mnist
I0428 19:30:56.086887 22444 net.cpp:382] mnist -> data
I0428 19:30:56.086895 22444 net.cpp:382] mnist -> label
I0428 19:30:56.086978 22444 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:56.088865 22444 net.cpp:124] Setting up mnist
I0428 19:30:56.088894 22444 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:56.088901 22444 net.cpp:131] Top shape: 100 (100)
I0428 19:30:56.088904 22444 net.cpp:139] Memory required for data: 314000
I0428 19:30:56.088908 22444 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:56.088937 22444 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:56.088955 22444 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:56.088960 22444 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:56.088968 22444 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:56.089010 22444 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:56.089017 22444 net.cpp:131] Top shape: 100 (100)
I0428 19:30:56.089021 22444 net.cpp:131] Top shape: 100 (100)
I0428 19:30:56.089025 22444 net.cpp:139] Memory required for data: 314800
I0428 19:30:56.089037 22444 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:56.089047 22444 net.cpp:86] Creating Layer conv0
I0428 19:30:56.089051 22444 net.cpp:408] conv0 <- data
I0428 19:30:56.089056 22444 net.cpp:382] conv0 -> conv0
I0428 19:30:56.090750 22444 net.cpp:124] Setting up conv0
I0428 19:30:56.090765 22444 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:56.090770 22444 net.cpp:139] Memory required for data: 1466800
I0428 19:30:56.090780 22444 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:56.090785 22444 net.cpp:86] Creating Layer pool0
I0428 19:30:56.090790 22444 net.cpp:408] pool0 <- conv0
I0428 19:30:56.090795 22444 net.cpp:382] pool0 -> pool0
I0428 19:30:56.090831 22444 net.cpp:124] Setting up pool0
I0428 19:30:56.090837 22444 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:56.090839 22444 net.cpp:139] Memory required for data: 1754800
I0428 19:30:56.090843 22444 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:56.090850 22444 net.cpp:86] Creating Layer ip1
I0428 19:30:56.090853 22444 net.cpp:408] ip1 <- pool0
I0428 19:30:56.090858 22444 net.cpp:382] ip1 -> ip1
I0428 19:30:56.091060 22444 net.cpp:124] Setting up ip1
I0428 19:30:56.091068 22444 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:56.091071 22444 net.cpp:139] Memory required for data: 1764800
I0428 19:30:56.091078 22444 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:56.091084 22444 net.cpp:86] Creating Layer relu1
I0428 19:30:56.091087 22444 net.cpp:408] relu1 <- ip1
I0428 19:30:56.091091 22444 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:56.091248 22444 net.cpp:124] Setting up relu1
I0428 19:30:56.091256 22444 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:56.091259 22444 net.cpp:139] Memory required for data: 1774800
I0428 19:30:56.091262 22444 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:56.091269 22444 net.cpp:86] Creating Layer ip2
I0428 19:30:56.091272 22444 net.cpp:408] ip2 <- ip1
I0428 19:30:56.091277 22444 net.cpp:382] ip2 -> ip2
I0428 19:30:56.091382 22444 net.cpp:124] Setting up ip2
I0428 19:30:56.091390 22444 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:56.091393 22444 net.cpp:139] Memory required for data: 1794800
I0428 19:30:56.091401 22444 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:56.091406 22444 net.cpp:86] Creating Layer relu2
I0428 19:30:56.091409 22444 net.cpp:408] relu2 <- ip2
I0428 19:30:56.091414 22444 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:56.092311 22444 net.cpp:124] Setting up relu2
I0428 19:30:56.092324 22444 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:56.092327 22444 net.cpp:139] Memory required for data: 1814800
I0428 19:30:56.092331 22444 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:56.092339 22444 net.cpp:86] Creating Layer ip3
I0428 19:30:56.092344 22444 net.cpp:408] ip3 <- ip2
I0428 19:30:56.092348 22444 net.cpp:382] ip3 -> ip3
I0428 19:30:56.092474 22444 net.cpp:124] Setting up ip3
I0428 19:30:56.092483 22444 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:56.092486 22444 net.cpp:139] Memory required for data: 1818800
I0428 19:30:56.092492 22444 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:56.092499 22444 net.cpp:86] Creating Layer relu3
I0428 19:30:56.092501 22444 net.cpp:408] relu3 <- ip3
I0428 19:30:56.092506 22444 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:56.092656 22444 net.cpp:124] Setting up relu3
I0428 19:30:56.092664 22444 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:56.092669 22444 net.cpp:139] Memory required for data: 1822800
I0428 19:30:56.092671 22444 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:56.092676 22444 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:56.092679 22444 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:56.092684 22444 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:56.092690 22444 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:56.092725 22444 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:56.092731 22444 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:56.092736 22444 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:56.092748 22444 net.cpp:139] Memory required for data: 1830800
I0428 19:30:56.092752 22444 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:56.092758 22444 net.cpp:86] Creating Layer accuracy
I0428 19:30:56.092761 22444 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:56.092767 22444 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:56.092772 22444 net.cpp:382] accuracy -> accuracy
I0428 19:30:56.092779 22444 net.cpp:124] Setting up accuracy
I0428 19:30:56.092783 22444 net.cpp:131] Top shape: (1)
I0428 19:30:56.092787 22444 net.cpp:139] Memory required for data: 1830804
I0428 19:30:56.092790 22444 layer_factory.hpp:77] Creating layer loss
I0428 19:30:56.092794 22444 net.cpp:86] Creating Layer loss
I0428 19:30:56.092797 22444 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:56.092802 22444 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:56.092806 22444 net.cpp:382] loss -> loss
I0428 19:30:56.092820 22444 layer_factory.hpp:77] Creating layer loss
I0428 19:30:56.093068 22444 net.cpp:124] Setting up loss
I0428 19:30:56.093078 22444 net.cpp:131] Top shape: (1)
I0428 19:30:56.093081 22444 net.cpp:134]     with loss weight 1
I0428 19:30:56.093089 22444 net.cpp:139] Memory required for data: 1830808
I0428 19:30:56.093093 22444 net.cpp:200] loss needs backward computation.
I0428 19:30:56.093097 22444 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:56.093102 22444 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:56.093106 22444 net.cpp:200] relu3 needs backward computation.
I0428 19:30:56.093108 22444 net.cpp:200] ip3 needs backward computation.
I0428 19:30:56.093112 22444 net.cpp:200] relu2 needs backward computation.
I0428 19:30:56.093116 22444 net.cpp:200] ip2 needs backward computation.
I0428 19:30:56.093119 22444 net.cpp:200] relu1 needs backward computation.
I0428 19:30:56.093122 22444 net.cpp:200] ip1 needs backward computation.
I0428 19:30:56.093125 22444 net.cpp:200] pool0 needs backward computation.
I0428 19:30:56.093129 22444 net.cpp:200] conv0 needs backward computation.
I0428 19:30:56.093133 22444 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:56.093138 22444 net.cpp:202] mnist does not need backward computation.
I0428 19:30:56.093142 22444 net.cpp:244] This network produces output accuracy
I0428 19:30:56.093145 22444 net.cpp:244] This network produces output loss
I0428 19:30:56.093155 22444 net.cpp:257] Network initialization done.
I0428 19:30:56.093228 22444 solver.cpp:56] Solver scaffolding done.
I0428 19:30:56.093586 22444 caffe.cpp:248] Starting Optimization
I0428 19:30:56.093592 22444 solver.cpp:273] Solving LeNet
I0428 19:30:56.093595 22444 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:56.095001 22444 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:56.097424 22444 blocking_queue.cpp:49] Waiting for data
I0428 19:30:56.170959 22452 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:56.171373 22444 solver.cpp:398]     Test net output #0: accuracy = 0.1261
I0428 19:30:56.171392 22444 solver.cpp:398]     Test net output #1: loss = 2.29733 (* 1 = 2.29733 loss)
I0428 19:30:56.173069 22444 solver.cpp:219] Iteration 0 (0 iter/s, 0.0794394s/100 iters), loss = 2.29077
I0428 19:30:56.173094 22444 solver.cpp:238]     Train net output #0: loss = 2.29077 (* 1 = 2.29077 loss)
I0428 19:30:56.173106 22444 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:56.233016 22444 solver.cpp:219] Iteration 100 (1669.06 iter/s, 0.0599138s/100 iters), loss = 0.78023
I0428 19:30:56.233055 22444 solver.cpp:238]     Train net output #0: loss = 0.78023 (* 1 = 0.78023 loss)
I0428 19:30:56.233062 22444 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:56.293570 22444 solver.cpp:219] Iteration 200 (1652.39 iter/s, 0.0605184s/100 iters), loss = 0.727415
I0428 19:30:56.293619 22444 solver.cpp:238]     Train net output #0: loss = 0.727415 (* 1 = 0.727415 loss)
I0428 19:30:56.293627 22444 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:56.350893 22444 solver.cpp:219] Iteration 300 (1746.23 iter/s, 0.0572662s/100 iters), loss = 0.764517
I0428 19:30:56.350930 22444 solver.cpp:238]     Train net output #0: loss = 0.764517 (* 1 = 0.764517 loss)
I0428 19:30:56.350936 22444 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:56.408311 22444 solver.cpp:219] Iteration 400 (1742.49 iter/s, 0.057389s/100 iters), loss = 0.788558
I0428 19:30:56.408349 22444 solver.cpp:238]     Train net output #0: loss = 0.788558 (* 1 = 0.788558 loss)
I0428 19:30:56.408354 22444 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:56.465124 22444 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:56.511464 22452 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:56.511891 22444 solver.cpp:398]     Test net output #0: accuracy = 0.7555
I0428 19:30:56.511926 22444 solver.cpp:398]     Test net output #1: loss = 0.650771 (* 1 = 0.650771 loss)
I0428 19:30:56.512531 22444 solver.cpp:219] Iteration 500 (959.803 iter/s, 0.104188s/100 iters), loss = 0.778148
I0428 19:30:56.512569 22444 solver.cpp:238]     Train net output #0: loss = 0.778148 (* 1 = 0.778148 loss)
I0428 19:30:56.512575 22444 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:56.571600 22444 solver.cpp:219] Iteration 600 (1694.39 iter/s, 0.0590182s/100 iters), loss = 0.386159
I0428 19:30:56.571640 22444 solver.cpp:238]     Train net output #0: loss = 0.386159 (* 1 = 0.386159 loss)
I0428 19:30:56.571645 22444 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:56.632784 22444 solver.cpp:219] Iteration 700 (1635.26 iter/s, 0.0611523s/100 iters), loss = 0.827107
I0428 19:30:56.632833 22444 solver.cpp:238]     Train net output #0: loss = 0.827107 (* 1 = 0.827107 loss)
I0428 19:30:56.632839 22444 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:56.691696 22444 solver.cpp:219] Iteration 800 (1698.46 iter/s, 0.058877s/100 iters), loss = 0.587576
I0428 19:30:56.691761 22444 solver.cpp:238]     Train net output #0: loss = 0.587576 (* 1 = 0.587576 loss)
I0428 19:30:56.691768 22444 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:56.750547 22444 solver.cpp:219] Iteration 900 (1701.27 iter/s, 0.0587795s/100 iters), loss = 0.545393
I0428 19:30:56.750586 22444 solver.cpp:238]     Train net output #0: loss = 0.545393 (* 1 = 0.545393 loss)
I0428 19:30:56.750591 22444 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:56.770267 22450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:56.808863 22444 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:56.809762 22444 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:56.810320 22444 solver.cpp:311] Iteration 1000, loss = 0.614496
I0428 19:30:56.810335 22444 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:56.857069 22452 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:56.857527 22444 solver.cpp:398]     Test net output #0: accuracy = 0.7719
I0428 19:30:56.857547 22444 solver.cpp:398]     Test net output #1: loss = 0.588344 (* 1 = 0.588344 loss)
I0428 19:30:56.857553 22444 solver.cpp:316] Optimization Done.
I0428 19:30:56.857556 22444 caffe.cpp:259] Optimization Done.
