I0428 20:22:49.410465  2134 caffe.cpp:218] Using GPUs 0
I0428 20:22:49.448060  2134 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:49.959825  2134 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1411.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:49.959966  2134 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1411.prototxt
I0428 20:22:49.960348  2134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:49.960367  2134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:49.960458  2134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:49.960535  2134 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:49.960633  2134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:49.960659  2134 net.cpp:86] Creating Layer mnist
I0428 20:22:49.960667  2134 net.cpp:382] mnist -> data
I0428 20:22:49.960691  2134 net.cpp:382] mnist -> label
I0428 20:22:49.961805  2134 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:49.964256  2134 net.cpp:124] Setting up mnist
I0428 20:22:49.964272  2134 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:49.964279  2134 net.cpp:131] Top shape: 64 (64)
I0428 20:22:49.964283  2134 net.cpp:139] Memory required for data: 200960
I0428 20:22:49.964290  2134 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:49.964308  2134 net.cpp:86] Creating Layer conv0
I0428 20:22:49.964313  2134 net.cpp:408] conv0 <- data
I0428 20:22:49.964325  2134 net.cpp:382] conv0 -> conv0
I0428 20:22:50.229847  2134 net.cpp:124] Setting up conv0
I0428 20:22:50.229888  2134 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:50.229892  2134 net.cpp:139] Memory required for data: 7573760
I0428 20:22:50.229926  2134 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:50.229954  2134 net.cpp:86] Creating Layer pool0
I0428 20:22:50.229959  2134 net.cpp:408] pool0 <- conv0
I0428 20:22:50.229964  2134 net.cpp:382] pool0 -> pool0
I0428 20:22:50.230010  2134 net.cpp:124] Setting up pool0
I0428 20:22:50.230022  2134 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:50.230026  2134 net.cpp:139] Memory required for data: 9416960
I0428 20:22:50.230028  2134 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:50.230039  2134 net.cpp:86] Creating Layer conv1
I0428 20:22:50.230042  2134 net.cpp:408] conv1 <- pool0
I0428 20:22:50.230046  2134 net.cpp:382] conv1 -> conv1
I0428 20:22:50.233620  2134 net.cpp:124] Setting up conv1
I0428 20:22:50.233633  2134 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:22:50.233638  2134 net.cpp:139] Memory required for data: 11055360
I0428 20:22:50.233645  2134 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:50.233652  2134 net.cpp:86] Creating Layer pool1
I0428 20:22:50.233655  2134 net.cpp:408] pool1 <- conv1
I0428 20:22:50.233659  2134 net.cpp:382] pool1 -> pool1
I0428 20:22:50.233711  2134 net.cpp:124] Setting up pool1
I0428 20:22:50.233716  2134 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:22:50.233718  2134 net.cpp:139] Memory required for data: 11464960
I0428 20:22:50.233721  2134 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:50.233727  2134 net.cpp:86] Creating Layer ip1
I0428 20:22:50.233731  2134 net.cpp:408] ip1 <- pool1
I0428 20:22:50.233734  2134 net.cpp:382] ip1 -> ip1
I0428 20:22:50.234051  2134 net.cpp:124] Setting up ip1
I0428 20:22:50.234058  2134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:50.234061  2134 net.cpp:139] Memory required for data: 11471360
I0428 20:22:50.234068  2134 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:50.234073  2134 net.cpp:86] Creating Layer relu1
I0428 20:22:50.234076  2134 net.cpp:408] relu1 <- ip1
I0428 20:22:50.234081  2134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:50.234266  2134 net.cpp:124] Setting up relu1
I0428 20:22:50.234274  2134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:50.234277  2134 net.cpp:139] Memory required for data: 11477760
I0428 20:22:50.234280  2134 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:50.234287  2134 net.cpp:86] Creating Layer ip2
I0428 20:22:50.234289  2134 net.cpp:408] ip2 <- ip1
I0428 20:22:50.234294  2134 net.cpp:382] ip2 -> ip2
I0428 20:22:50.234381  2134 net.cpp:124] Setting up ip2
I0428 20:22:50.234388  2134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:50.234391  2134 net.cpp:139] Memory required for data: 11480320
I0428 20:22:50.234396  2134 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:50.234401  2134 net.cpp:86] Creating Layer relu2
I0428 20:22:50.234405  2134 net.cpp:408] relu2 <- ip2
I0428 20:22:50.234408  2134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:50.235198  2134 net.cpp:124] Setting up relu2
I0428 20:22:50.235208  2134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:50.235227  2134 net.cpp:139] Memory required for data: 11482880
I0428 20:22:50.235231  2134 layer_factory.hpp:77] Creating layer loss
I0428 20:22:50.235241  2134 net.cpp:86] Creating Layer loss
I0428 20:22:50.235245  2134 net.cpp:408] loss <- ip2
I0428 20:22:50.235250  2134 net.cpp:408] loss <- label
I0428 20:22:50.235271  2134 net.cpp:382] loss -> loss
I0428 20:22:50.235286  2134 layer_factory.hpp:77] Creating layer loss
I0428 20:22:50.235508  2134 net.cpp:124] Setting up loss
I0428 20:22:50.235518  2134 net.cpp:131] Top shape: (1)
I0428 20:22:50.235522  2134 net.cpp:134]     with loss weight 1
I0428 20:22:50.235535  2134 net.cpp:139] Memory required for data: 11482884
I0428 20:22:50.235539  2134 net.cpp:200] loss needs backward computation.
I0428 20:22:50.235543  2134 net.cpp:200] relu2 needs backward computation.
I0428 20:22:50.235545  2134 net.cpp:200] ip2 needs backward computation.
I0428 20:22:50.235549  2134 net.cpp:200] relu1 needs backward computation.
I0428 20:22:50.235551  2134 net.cpp:200] ip1 needs backward computation.
I0428 20:22:50.235581  2134 net.cpp:200] pool1 needs backward computation.
I0428 20:22:50.235600  2134 net.cpp:200] conv1 needs backward computation.
I0428 20:22:50.235604  2134 net.cpp:200] pool0 needs backward computation.
I0428 20:22:50.235606  2134 net.cpp:200] conv0 needs backward computation.
I0428 20:22:50.235610  2134 net.cpp:202] mnist does not need backward computation.
I0428 20:22:50.235613  2134 net.cpp:244] This network produces output loss
I0428 20:22:50.235621  2134 net.cpp:257] Network initialization done.
I0428 20:22:50.235913  2134 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1411.prototxt
I0428 20:22:50.235936  2134 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:50.236032  2134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:50.236110  2134 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:50.236171  2134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:50.236183  2134 net.cpp:86] Creating Layer mnist
I0428 20:22:50.236188  2134 net.cpp:382] mnist -> data
I0428 20:22:50.236196  2134 net.cpp:382] mnist -> label
I0428 20:22:50.236282  2134 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:50.237671  2134 net.cpp:124] Setting up mnist
I0428 20:22:50.237700  2134 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:50.237706  2134 net.cpp:131] Top shape: 100 (100)
I0428 20:22:50.237709  2134 net.cpp:139] Memory required for data: 314000
I0428 20:22:50.237713  2134 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:50.237720  2134 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:50.237723  2134 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:50.237743  2134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:50.237751  2134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:50.237833  2134 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:50.237840  2134 net.cpp:131] Top shape: 100 (100)
I0428 20:22:50.237843  2134 net.cpp:131] Top shape: 100 (100)
I0428 20:22:50.237846  2134 net.cpp:139] Memory required for data: 314800
I0428 20:22:50.237849  2134 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:50.237859  2134 net.cpp:86] Creating Layer conv0
I0428 20:22:50.237861  2134 net.cpp:408] conv0 <- data
I0428 20:22:50.237866  2134 net.cpp:382] conv0 -> conv0
I0428 20:22:50.239739  2134 net.cpp:124] Setting up conv0
I0428 20:22:50.239753  2134 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:50.239758  2134 net.cpp:139] Memory required for data: 11834800
I0428 20:22:50.239766  2134 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:50.239789  2134 net.cpp:86] Creating Layer pool0
I0428 20:22:50.239792  2134 net.cpp:408] pool0 <- conv0
I0428 20:22:50.239797  2134 net.cpp:382] pool0 -> pool0
I0428 20:22:50.239846  2134 net.cpp:124] Setting up pool0
I0428 20:22:50.239851  2134 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:50.239855  2134 net.cpp:139] Memory required for data: 14714800
I0428 20:22:50.239857  2134 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:50.239866  2134 net.cpp:86] Creating Layer conv1
I0428 20:22:50.239869  2134 net.cpp:408] conv1 <- pool0
I0428 20:22:50.239873  2134 net.cpp:382] conv1 -> conv1
I0428 20:22:50.242935  2134 net.cpp:124] Setting up conv1
I0428 20:22:50.242949  2134 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:22:50.242954  2134 net.cpp:139] Memory required for data: 17274800
I0428 20:22:50.242961  2134 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:50.242967  2134 net.cpp:86] Creating Layer pool1
I0428 20:22:50.242985  2134 net.cpp:408] pool1 <- conv1
I0428 20:22:50.242990  2134 net.cpp:382] pool1 -> pool1
I0428 20:22:50.243046  2134 net.cpp:124] Setting up pool1
I0428 20:22:50.243052  2134 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:22:50.243055  2134 net.cpp:139] Memory required for data: 17914800
I0428 20:22:50.243058  2134 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:50.243064  2134 net.cpp:86] Creating Layer ip1
I0428 20:22:50.243075  2134 net.cpp:408] ip1 <- pool1
I0428 20:22:50.243080  2134 net.cpp:382] ip1 -> ip1
I0428 20:22:50.243420  2134 net.cpp:124] Setting up ip1
I0428 20:22:50.243432  2134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:50.243435  2134 net.cpp:139] Memory required for data: 17924800
I0428 20:22:50.243448  2134 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:50.243453  2134 net.cpp:86] Creating Layer relu1
I0428 20:22:50.243458  2134 net.cpp:408] relu1 <- ip1
I0428 20:22:50.243468  2134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:50.243623  2134 net.cpp:124] Setting up relu1
I0428 20:22:50.243633  2134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:50.243635  2134 net.cpp:139] Memory required for data: 17934800
I0428 20:22:50.243639  2134 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:50.243645  2134 net.cpp:86] Creating Layer ip2
I0428 20:22:50.243649  2134 net.cpp:408] ip2 <- ip1
I0428 20:22:50.243654  2134 net.cpp:382] ip2 -> ip2
I0428 20:22:50.243749  2134 net.cpp:124] Setting up ip2
I0428 20:22:50.243757  2134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:50.243759  2134 net.cpp:139] Memory required for data: 17938800
I0428 20:22:50.243764  2134 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:50.243768  2134 net.cpp:86] Creating Layer relu2
I0428 20:22:50.243772  2134 net.cpp:408] relu2 <- ip2
I0428 20:22:50.243774  2134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:50.243940  2134 net.cpp:124] Setting up relu2
I0428 20:22:50.243949  2134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:50.243952  2134 net.cpp:139] Memory required for data: 17942800
I0428 20:22:50.243971  2134 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:22:50.243976  2134 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:22:50.243986  2134 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:22:50.243993  2134 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:22:50.244009  2134 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:22:50.244046  2134 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:22:50.244052  2134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:50.244056  2134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:50.244069  2134 net.cpp:139] Memory required for data: 17950800
I0428 20:22:50.244072  2134 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:50.244078  2134 net.cpp:86] Creating Layer accuracy
I0428 20:22:50.244082  2134 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:22:50.244086  2134 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:50.244091  2134 net.cpp:382] accuracy -> accuracy
I0428 20:22:50.244097  2134 net.cpp:124] Setting up accuracy
I0428 20:22:50.244102  2134 net.cpp:131] Top shape: (1)
I0428 20:22:50.244104  2134 net.cpp:139] Memory required for data: 17950804
I0428 20:22:50.244107  2134 layer_factory.hpp:77] Creating layer loss
I0428 20:22:50.244118  2134 net.cpp:86] Creating Layer loss
I0428 20:22:50.244122  2134 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:22:50.244127  2134 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:50.244135  2134 net.cpp:382] loss -> loss
I0428 20:22:50.244141  2134 layer_factory.hpp:77] Creating layer loss
I0428 20:22:50.244455  2134 net.cpp:124] Setting up loss
I0428 20:22:50.244464  2134 net.cpp:131] Top shape: (1)
I0428 20:22:50.244467  2134 net.cpp:134]     with loss weight 1
I0428 20:22:50.244473  2134 net.cpp:139] Memory required for data: 17950808
I0428 20:22:50.244477  2134 net.cpp:200] loss needs backward computation.
I0428 20:22:50.244480  2134 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:50.244484  2134 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:22:50.244493  2134 net.cpp:200] relu2 needs backward computation.
I0428 20:22:50.244496  2134 net.cpp:200] ip2 needs backward computation.
I0428 20:22:50.244498  2134 net.cpp:200] relu1 needs backward computation.
I0428 20:22:50.244501  2134 net.cpp:200] ip1 needs backward computation.
I0428 20:22:50.244504  2134 net.cpp:200] pool1 needs backward computation.
I0428 20:22:50.244506  2134 net.cpp:200] conv1 needs backward computation.
I0428 20:22:50.244509  2134 net.cpp:200] pool0 needs backward computation.
I0428 20:22:50.244513  2134 net.cpp:200] conv0 needs backward computation.
I0428 20:22:50.244515  2134 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:50.244519  2134 net.cpp:202] mnist does not need backward computation.
I0428 20:22:50.244521  2134 net.cpp:244] This network produces output accuracy
I0428 20:22:50.244524  2134 net.cpp:244] This network produces output loss
I0428 20:22:50.244535  2134 net.cpp:257] Network initialization done.
I0428 20:22:50.244570  2134 solver.cpp:56] Solver scaffolding done.
I0428 20:22:50.244853  2134 caffe.cpp:248] Starting Optimization
I0428 20:22:50.244861  2134 solver.cpp:273] Solving LeNet
I0428 20:22:50.244864  2134 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:50.245021  2134 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:50.254884  2134 blocking_queue.cpp:49] Waiting for data
I0428 20:22:50.334128  2144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:50.335384  2134 solver.cpp:398]     Test net output #0: accuracy = 0.0745
I0428 20:22:50.335405  2134 solver.cpp:398]     Test net output #1: loss = 2.31558 (* 1 = 2.31558 loss)
I0428 20:22:50.342783  2134 solver.cpp:219] Iteration 0 (0 iter/s, 0.0978832s/100 iters), loss = 2.33302
I0428 20:22:50.342806  2134 solver.cpp:238]     Train net output #0: loss = 2.33302 (* 1 = 2.33302 loss)
I0428 20:22:50.342820  2134 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:50.567198  2134 solver.cpp:219] Iteration 100 (445.693 iter/s, 0.22437s/100 iters), loss = 0.609404
I0428 20:22:50.567231  2134 solver.cpp:238]     Train net output #0: loss = 0.609404 (* 1 = 0.609404 loss)
I0428 20:22:50.567239  2134 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:50.789172  2134 solver.cpp:219] Iteration 200 (450.604 iter/s, 0.221924s/100 iters), loss = 0.233782
I0428 20:22:50.789208  2134 solver.cpp:238]     Train net output #0: loss = 0.233782 (* 1 = 0.233782 loss)
I0428 20:22:50.789216  2134 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:51.014056  2134 solver.cpp:219] Iteration 300 (444.776 iter/s, 0.224833s/100 iters), loss = 0.460825
I0428 20:22:51.014091  2134 solver.cpp:238]     Train net output #0: loss = 0.460825 (* 1 = 0.460825 loss)
I0428 20:22:51.014101  2134 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:51.238905  2134 solver.cpp:219] Iteration 400 (444.845 iter/s, 0.224798s/100 iters), loss = 0.194044
I0428 20:22:51.238940  2134 solver.cpp:238]     Train net output #0: loss = 0.194044 (* 1 = 0.194044 loss)
I0428 20:22:51.238948  2134 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:51.464280  2134 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:51.552566  2144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:51.553792  2134 solver.cpp:398]     Test net output #0: accuracy = 0.8754
I0428 20:22:51.553822  2134 solver.cpp:398]     Test net output #1: loss = 0.318414 (* 1 = 0.318414 loss)
I0428 20:22:51.556046  2134 solver.cpp:219] Iteration 500 (315.373 iter/s, 0.317085s/100 iters), loss = 0.230322
I0428 20:22:51.556073  2134 solver.cpp:238]     Train net output #0: loss = 0.230322 (* 1 = 0.230322 loss)
I0428 20:22:51.556082  2134 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:51.782665  2134 solver.cpp:219] Iteration 600 (441.366 iter/s, 0.226569s/100 iters), loss = 0.306338
I0428 20:22:51.782732  2134 solver.cpp:238]     Train net output #0: loss = 0.306337 (* 1 = 0.306337 loss)
I0428 20:22:51.782754  2134 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:52.027730  2134 solver.cpp:219] Iteration 700 (408.183 iter/s, 0.244988s/100 iters), loss = 0.408532
I0428 20:22:52.027792  2134 solver.cpp:238]     Train net output #0: loss = 0.408532 (* 1 = 0.408532 loss)
I0428 20:22:52.027814  2134 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:52.268893  2134 solver.cpp:219] Iteration 800 (414.785 iter/s, 0.241089s/100 iters), loss = 0.395557
I0428 20:22:52.268951  2134 solver.cpp:238]     Train net output #0: loss = 0.395556 (* 1 = 0.395556 loss)
I0428 20:22:52.268971  2134 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:52.510087  2134 solver.cpp:219] Iteration 900 (414.727 iter/s, 0.241122s/100 iters), loss = 0.365019
I0428 20:22:52.510145  2134 solver.cpp:238]     Train net output #0: loss = 0.365019 (* 1 = 0.365019 loss)
I0428 20:22:52.510166  2134 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:52.590862  2143 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:52.749322  2134 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:52.756412  2134 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:52.759476  2134 solver.cpp:311] Iteration 1000, loss = 0.358197
I0428 20:22:52.759510  2134 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:52.849829  2144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:52.852017  2134 solver.cpp:398]     Test net output #0: accuracy = 0.884
I0428 20:22:52.852044  2134 solver.cpp:398]     Test net output #1: loss = 0.289557 (* 1 = 0.289557 loss)
I0428 20:22:52.852053  2134 solver.cpp:316] Optimization Done.
I0428 20:22:52.852059  2134 caffe.cpp:259] Optimization Done.
