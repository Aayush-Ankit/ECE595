I0428 19:43:34.111141 25376 caffe.cpp:218] Using GPUs 0
I0428 19:43:34.151619 25376 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:34.614482 25376 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test425.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:34.614616 25376 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test425.prototxt
I0428 19:43:34.614960 25376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:34.614980 25376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:34.615069 25376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:34.615162 25376 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:34.615286 25376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:34.615314 25376 net.cpp:86] Creating Layer mnist
I0428 19:43:34.615322 25376 net.cpp:382] mnist -> data
I0428 19:43:34.615347 25376 net.cpp:382] mnist -> label
I0428 19:43:34.616479 25376 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:34.618854 25376 net.cpp:124] Setting up mnist
I0428 19:43:34.618887 25376 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:34.618896 25376 net.cpp:131] Top shape: 64 (64)
I0428 19:43:34.618901 25376 net.cpp:139] Memory required for data: 200960
I0428 19:43:34.618908 25376 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:34.618927 25376 net.cpp:86] Creating Layer conv0
I0428 19:43:34.618945 25376 net.cpp:408] conv0 <- data
I0428 19:43:34.618960 25376 net.cpp:382] conv0 -> conv0
I0428 19:43:34.854501 25376 net.cpp:124] Setting up conv0
I0428 19:43:34.854528 25376 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:34.854533 25376 net.cpp:139] Memory required for data: 495872
I0428 19:43:34.854584 25376 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:34.854601 25376 net.cpp:86] Creating Layer pool0
I0428 19:43:34.854609 25376 net.cpp:408] pool0 <- conv0
I0428 19:43:34.854619 25376 net.cpp:382] pool0 -> pool0
I0428 19:43:34.854676 25376 net.cpp:124] Setting up pool0
I0428 19:43:34.854684 25376 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:34.854689 25376 net.cpp:139] Memory required for data: 569600
I0428 19:43:34.854694 25376 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:34.854709 25376 net.cpp:86] Creating Layer conv1
I0428 19:43:34.854715 25376 net.cpp:408] conv1 <- pool0
I0428 19:43:34.854724 25376 net.cpp:382] conv1 -> conv1
I0428 19:43:34.857553 25376 net.cpp:124] Setting up conv1
I0428 19:43:34.857568 25376 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:34.857574 25376 net.cpp:139] Memory required for data: 979200
I0428 19:43:34.857602 25376 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:34.857614 25376 net.cpp:86] Creating Layer pool1
I0428 19:43:34.857619 25376 net.cpp:408] pool1 <- conv1
I0428 19:43:34.857626 25376 net.cpp:382] pool1 -> pool1
I0428 19:43:34.857669 25376 net.cpp:124] Setting up pool1
I0428 19:43:34.857678 25376 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:34.857683 25376 net.cpp:139] Memory required for data: 1081600
I0428 19:43:34.857688 25376 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:34.857699 25376 net.cpp:86] Creating Layer ip1
I0428 19:43:34.857708 25376 net.cpp:408] ip1 <- pool1
I0428 19:43:34.857717 25376 net.cpp:382] ip1 -> ip1
I0428 19:43:34.857951 25376 net.cpp:124] Setting up ip1
I0428 19:43:34.857960 25376 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:34.857965 25376 net.cpp:139] Memory required for data: 1094400
I0428 19:43:34.857976 25376 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:34.857987 25376 net.cpp:86] Creating Layer relu1
I0428 19:43:34.857993 25376 net.cpp:408] relu1 <- ip1
I0428 19:43:34.858000 25376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:34.858161 25376 net.cpp:124] Setting up relu1
I0428 19:43:34.858171 25376 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:34.858176 25376 net.cpp:139] Memory required for data: 1107200
I0428 19:43:34.858181 25376 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:34.858191 25376 net.cpp:86] Creating Layer ip2
I0428 19:43:34.858196 25376 net.cpp:408] ip2 <- ip1
I0428 19:43:34.858218 25376 net.cpp:382] ip2 -> ip2
I0428 19:43:34.858324 25376 net.cpp:124] Setting up ip2
I0428 19:43:34.858331 25376 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:34.858336 25376 net.cpp:139] Memory required for data: 1113600
I0428 19:43:34.858345 25376 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:34.858353 25376 net.cpp:86] Creating Layer relu2
I0428 19:43:34.858361 25376 net.cpp:408] relu2 <- ip2
I0428 19:43:34.858366 25376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:34.859117 25376 net.cpp:124] Setting up relu2
I0428 19:43:34.859132 25376 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:34.859138 25376 net.cpp:139] Memory required for data: 1120000
I0428 19:43:34.859143 25376 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:34.859156 25376 net.cpp:86] Creating Layer ip3
I0428 19:43:34.859163 25376 net.cpp:408] ip3 <- ip2
I0428 19:43:34.859187 25376 net.cpp:382] ip3 -> ip3
I0428 19:43:34.859309 25376 net.cpp:124] Setting up ip3
I0428 19:43:34.859334 25376 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:34.859339 25376 net.cpp:139] Memory required for data: 1122560
I0428 19:43:34.859366 25376 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:34.859376 25376 net.cpp:86] Creating Layer relu3
I0428 19:43:34.859383 25376 net.cpp:408] relu3 <- ip3
I0428 19:43:34.859391 25376 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:34.859593 25376 net.cpp:124] Setting up relu3
I0428 19:43:34.859603 25376 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:34.859607 25376 net.cpp:139] Memory required for data: 1125120
I0428 19:43:34.859612 25376 layer_factory.hpp:77] Creating layer loss
I0428 19:43:34.859621 25376 net.cpp:86] Creating Layer loss
I0428 19:43:34.859625 25376 net.cpp:408] loss <- ip3
I0428 19:43:34.859632 25376 net.cpp:408] loss <- label
I0428 19:43:34.859642 25376 net.cpp:382] loss -> loss
I0428 19:43:34.859663 25376 layer_factory.hpp:77] Creating layer loss
I0428 19:43:34.859933 25376 net.cpp:124] Setting up loss
I0428 19:43:34.859944 25376 net.cpp:131] Top shape: (1)
I0428 19:43:34.859951 25376 net.cpp:134]     with loss weight 1
I0428 19:43:34.859971 25376 net.cpp:139] Memory required for data: 1125124
I0428 19:43:34.859977 25376 net.cpp:200] loss needs backward computation.
I0428 19:43:34.859983 25376 net.cpp:200] relu3 needs backward computation.
I0428 19:43:34.859988 25376 net.cpp:200] ip3 needs backward computation.
I0428 19:43:34.859993 25376 net.cpp:200] relu2 needs backward computation.
I0428 19:43:34.859998 25376 net.cpp:200] ip2 needs backward computation.
I0428 19:43:34.860003 25376 net.cpp:200] relu1 needs backward computation.
I0428 19:43:34.860008 25376 net.cpp:200] ip1 needs backward computation.
I0428 19:43:34.860013 25376 net.cpp:200] pool1 needs backward computation.
I0428 19:43:34.860019 25376 net.cpp:200] conv1 needs backward computation.
I0428 19:43:34.860024 25376 net.cpp:200] pool0 needs backward computation.
I0428 19:43:34.860029 25376 net.cpp:200] conv0 needs backward computation.
I0428 19:43:34.860035 25376 net.cpp:202] mnist does not need backward computation.
I0428 19:43:34.860040 25376 net.cpp:244] This network produces output loss
I0428 19:43:34.860057 25376 net.cpp:257] Network initialization done.
I0428 19:43:34.860461 25376 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test425.prototxt
I0428 19:43:34.860494 25376 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:34.860589 25376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:34.860724 25376 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:34.860781 25376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:34.860800 25376 net.cpp:86] Creating Layer mnist
I0428 19:43:34.860807 25376 net.cpp:382] mnist -> data
I0428 19:43:34.860839 25376 net.cpp:382] mnist -> label
I0428 19:43:34.861011 25376 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:34.863261 25376 net.cpp:124] Setting up mnist
I0428 19:43:34.863281 25376 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:34.863291 25376 net.cpp:131] Top shape: 100 (100)
I0428 19:43:34.863294 25376 net.cpp:139] Memory required for data: 314000
I0428 19:43:34.863301 25376 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:34.863310 25376 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:34.863315 25376 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:34.863322 25376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:34.863348 25376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:34.863425 25376 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:34.863433 25376 net.cpp:131] Top shape: 100 (100)
I0428 19:43:34.863440 25376 net.cpp:131] Top shape: 100 (100)
I0428 19:43:34.863443 25376 net.cpp:139] Memory required for data: 314800
I0428 19:43:34.863448 25376 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:34.863463 25376 net.cpp:86] Creating Layer conv0
I0428 19:43:34.863471 25376 net.cpp:408] conv0 <- data
I0428 19:43:34.863497 25376 net.cpp:382] conv0 -> conv0
I0428 19:43:34.865257 25376 net.cpp:124] Setting up conv0
I0428 19:43:34.865272 25376 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:34.865278 25376 net.cpp:139] Memory required for data: 775600
I0428 19:43:34.865291 25376 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:34.865305 25376 net.cpp:86] Creating Layer pool0
I0428 19:43:34.865311 25376 net.cpp:408] pool0 <- conv0
I0428 19:43:34.865320 25376 net.cpp:382] pool0 -> pool0
I0428 19:43:34.865360 25376 net.cpp:124] Setting up pool0
I0428 19:43:34.865367 25376 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:34.865372 25376 net.cpp:139] Memory required for data: 890800
I0428 19:43:34.865376 25376 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:34.865389 25376 net.cpp:86] Creating Layer conv1
I0428 19:43:34.865396 25376 net.cpp:408] conv1 <- pool0
I0428 19:43:34.865406 25376 net.cpp:382] conv1 -> conv1
I0428 19:43:34.867205 25376 net.cpp:124] Setting up conv1
I0428 19:43:34.867219 25376 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:34.867224 25376 net.cpp:139] Memory required for data: 1530800
I0428 19:43:34.867254 25376 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:34.867262 25376 net.cpp:86] Creating Layer pool1
I0428 19:43:34.867267 25376 net.cpp:408] pool1 <- conv1
I0428 19:43:34.867277 25376 net.cpp:382] pool1 -> pool1
I0428 19:43:34.867337 25376 net.cpp:124] Setting up pool1
I0428 19:43:34.867346 25376 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:34.867352 25376 net.cpp:139] Memory required for data: 1690800
I0428 19:43:34.867357 25376 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:34.867368 25376 net.cpp:86] Creating Layer ip1
I0428 19:43:34.867374 25376 net.cpp:408] ip1 <- pool1
I0428 19:43:34.867383 25376 net.cpp:382] ip1 -> ip1
I0428 19:43:34.867614 25376 net.cpp:124] Setting up ip1
I0428 19:43:34.867624 25376 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:34.867640 25376 net.cpp:139] Memory required for data: 1710800
I0428 19:43:34.867652 25376 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:34.867661 25376 net.cpp:86] Creating Layer relu1
I0428 19:43:34.867666 25376 net.cpp:408] relu1 <- ip1
I0428 19:43:34.867678 25376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:34.867858 25376 net.cpp:124] Setting up relu1
I0428 19:43:34.867868 25376 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:34.867873 25376 net.cpp:139] Memory required for data: 1730800
I0428 19:43:34.867878 25376 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:34.867892 25376 net.cpp:86] Creating Layer ip2
I0428 19:43:34.867897 25376 net.cpp:408] ip2 <- ip1
I0428 19:43:34.867907 25376 net.cpp:382] ip2 -> ip2
I0428 19:43:34.868021 25376 net.cpp:124] Setting up ip2
I0428 19:43:34.868029 25376 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:34.868034 25376 net.cpp:139] Memory required for data: 1740800
I0428 19:43:34.868043 25376 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:34.868052 25376 net.cpp:86] Creating Layer relu2
I0428 19:43:34.868058 25376 net.cpp:408] relu2 <- ip2
I0428 19:43:34.868065 25376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:34.868326 25376 net.cpp:124] Setting up relu2
I0428 19:43:34.868335 25376 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:34.868340 25376 net.cpp:139] Memory required for data: 1750800
I0428 19:43:34.868345 25376 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:34.868357 25376 net.cpp:86] Creating Layer ip3
I0428 19:43:34.868363 25376 net.cpp:408] ip3 <- ip2
I0428 19:43:34.868381 25376 net.cpp:382] ip3 -> ip3
I0428 19:43:34.868492 25376 net.cpp:124] Setting up ip3
I0428 19:43:34.868501 25376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:34.868506 25376 net.cpp:139] Memory required for data: 1754800
I0428 19:43:34.868520 25376 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:34.868531 25376 net.cpp:86] Creating Layer relu3
I0428 19:43:34.868538 25376 net.cpp:408] relu3 <- ip3
I0428 19:43:34.868544 25376 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:34.869510 25376 net.cpp:124] Setting up relu3
I0428 19:43:34.869524 25376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:34.869529 25376 net.cpp:139] Memory required for data: 1758800
I0428 19:43:34.869534 25376 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:34.869542 25376 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:34.869547 25376 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:34.869555 25376 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:34.869565 25376 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:34.869623 25376 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:34.869632 25376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:34.869637 25376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:34.869642 25376 net.cpp:139] Memory required for data: 1766800
I0428 19:43:34.869647 25376 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:34.869660 25376 net.cpp:86] Creating Layer accuracy
I0428 19:43:34.869666 25376 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:34.869673 25376 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:34.869680 25376 net.cpp:382] accuracy -> accuracy
I0428 19:43:34.869699 25376 net.cpp:124] Setting up accuracy
I0428 19:43:34.869705 25376 net.cpp:131] Top shape: (1)
I0428 19:43:34.869710 25376 net.cpp:139] Memory required for data: 1766804
I0428 19:43:34.869715 25376 layer_factory.hpp:77] Creating layer loss
I0428 19:43:34.869724 25376 net.cpp:86] Creating Layer loss
I0428 19:43:34.869735 25376 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:34.869740 25376 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:34.869747 25376 net.cpp:382] loss -> loss
I0428 19:43:34.869757 25376 layer_factory.hpp:77] Creating layer loss
I0428 19:43:34.869987 25376 net.cpp:124] Setting up loss
I0428 19:43:34.870012 25376 net.cpp:131] Top shape: (1)
I0428 19:43:34.870018 25376 net.cpp:134]     with loss weight 1
I0428 19:43:34.870028 25376 net.cpp:139] Memory required for data: 1766808
I0428 19:43:34.870044 25376 net.cpp:200] loss needs backward computation.
I0428 19:43:34.870050 25376 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:34.870056 25376 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:34.870061 25376 net.cpp:200] relu3 needs backward computation.
I0428 19:43:34.870065 25376 net.cpp:200] ip3 needs backward computation.
I0428 19:43:34.870070 25376 net.cpp:200] relu2 needs backward computation.
I0428 19:43:34.870075 25376 net.cpp:200] ip2 needs backward computation.
I0428 19:43:34.870080 25376 net.cpp:200] relu1 needs backward computation.
I0428 19:43:34.870085 25376 net.cpp:200] ip1 needs backward computation.
I0428 19:43:34.870090 25376 net.cpp:200] pool1 needs backward computation.
I0428 19:43:34.870095 25376 net.cpp:200] conv1 needs backward computation.
I0428 19:43:34.870105 25376 net.cpp:200] pool0 needs backward computation.
I0428 19:43:34.870110 25376 net.cpp:200] conv0 needs backward computation.
I0428 19:43:34.870115 25376 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:34.870121 25376 net.cpp:202] mnist does not need backward computation.
I0428 19:43:34.870126 25376 net.cpp:244] This network produces output accuracy
I0428 19:43:34.870131 25376 net.cpp:244] This network produces output loss
I0428 19:43:34.870149 25376 net.cpp:257] Network initialization done.
I0428 19:43:34.870194 25376 solver.cpp:56] Solver scaffolding done.
I0428 19:43:34.870609 25376 caffe.cpp:248] Starting Optimization
I0428 19:43:34.870616 25376 solver.cpp:273] Solving LeNet
I0428 19:43:34.870620 25376 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:34.870831 25376 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:34.874828 25376 blocking_queue.cpp:49] Waiting for data
I0428 19:43:34.946861 25383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:34.947325 25376 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 19:43:34.947347 25376 solver.cpp:398]     Test net output #1: loss = 2.31439 (* 1 = 2.31439 loss)
I0428 19:43:34.948745 25376 solver.cpp:219] Iteration 0 (0 iter/s, 0.0780841s/100 iters), loss = 2.32261
I0428 19:43:34.948774 25376 solver.cpp:238]     Train net output #0: loss = 2.32261 (* 1 = 2.32261 loss)
I0428 19:43:34.948802 25376 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:35.033165 25376 solver.cpp:219] Iteration 100 (1185.09 iter/s, 0.0843817s/100 iters), loss = 0.530127
I0428 19:43:35.033210 25376 solver.cpp:238]     Train net output #0: loss = 0.530127 (* 1 = 0.530127 loss)
I0428 19:43:35.033236 25376 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:35.115068 25376 solver.cpp:219] Iteration 200 (1221.76 iter/s, 0.0818493s/100 iters), loss = 0.286316
I0428 19:43:35.115094 25376 solver.cpp:238]     Train net output #0: loss = 0.286316 (* 1 = 0.286316 loss)
I0428 19:43:35.115104 25376 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:35.197604 25376 solver.cpp:219] Iteration 300 (1212.17 iter/s, 0.0824965s/100 iters), loss = 0.304058
I0428 19:43:35.197635 25376 solver.cpp:238]     Train net output #0: loss = 0.304058 (* 1 = 0.304058 loss)
I0428 19:43:35.197660 25376 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:35.278833 25376 solver.cpp:219] Iteration 400 (1231.65 iter/s, 0.0811919s/100 iters), loss = 0.13734
I0428 19:43:35.278861 25376 solver.cpp:238]     Train net output #0: loss = 0.13734 (* 1 = 0.13734 loss)
I0428 19:43:35.278885 25376 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:35.360237 25376 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:35.435856 25383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:35.436305 25376 solver.cpp:398]     Test net output #0: accuracy = 0.9395
I0428 19:43:35.436326 25376 solver.cpp:398]     Test net output #1: loss = 0.185934 (* 1 = 0.185934 loss)
I0428 19:43:35.437196 25376 solver.cpp:219] Iteration 500 (631.613 iter/s, 0.158325s/100 iters), loss = 0.350928
I0428 19:43:35.437227 25376 solver.cpp:238]     Train net output #0: loss = 0.350928 (* 1 = 0.350928 loss)
I0428 19:43:35.437255 25376 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:35.520537 25376 solver.cpp:219] Iteration 600 (1200.5 iter/s, 0.0832983s/100 iters), loss = 0.21131
I0428 19:43:35.520565 25376 solver.cpp:238]     Train net output #0: loss = 0.21131 (* 1 = 0.21131 loss)
I0428 19:43:35.520573 25376 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:35.602891 25376 solver.cpp:219] Iteration 700 (1214.8 iter/s, 0.0823183s/100 iters), loss = 0.216169
I0428 19:43:35.602932 25376 solver.cpp:238]     Train net output #0: loss = 0.21617 (* 1 = 0.21617 loss)
I0428 19:43:35.602957 25376 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:35.685331 25376 solver.cpp:219] Iteration 800 (1213.75 iter/s, 0.0823891s/100 iters), loss = 0.304974
I0428 19:43:35.685358 25376 solver.cpp:238]     Train net output #0: loss = 0.304974 (* 1 = 0.304974 loss)
I0428 19:43:35.685382 25376 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:35.767459 25376 solver.cpp:219] Iteration 900 (1218.21 iter/s, 0.0820879s/100 iters), loss = 0.185528
I0428 19:43:35.767485 25376 solver.cpp:238]     Train net output #0: loss = 0.185528 (* 1 = 0.185528 loss)
I0428 19:43:35.767510 25376 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:35.795253 25382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:35.848911 25376 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:35.849903 25376 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:35.850464 25376 solver.cpp:311] Iteration 1000, loss = 0.259135
I0428 19:43:35.850493 25376 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:35.926265 25383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:35.926713 25376 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0428 19:43:35.926749 25376 solver.cpp:398]     Test net output #1: loss = 0.106411 (* 1 = 0.106411 loss)
I0428 19:43:35.926754 25376 solver.cpp:316] Optimization Done.
I0428 19:43:35.926758 25376 caffe.cpp:259] Optimization Done.
