I0428 20:21:26.268096  1760 caffe.cpp:218] Using GPUs 0
I0428 20:21:26.296953  1760 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:26.741452  1760 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1384.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:26.741600  1760 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1384.prototxt
I0428 20:21:26.741941  1760 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:26.741955  1760 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:26.742034  1760 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:26.742099  1760 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:26.742182  1760 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:26.742202  1760 net.cpp:86] Creating Layer mnist
I0428 20:21:26.742208  1760 net.cpp:382] mnist -> data
I0428 20:21:26.742226  1760 net.cpp:382] mnist -> label
I0428 20:21:26.743144  1760 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:26.745477  1760 net.cpp:124] Setting up mnist
I0428 20:21:26.745507  1760 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:26.745512  1760 net.cpp:131] Top shape: 64 (64)
I0428 20:21:26.745515  1760 net.cpp:139] Memory required for data: 200960
I0428 20:21:26.745520  1760 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:26.745543  1760 net.cpp:86] Creating Layer conv0
I0428 20:21:26.745559  1760 net.cpp:408] conv0 <- data
I0428 20:21:26.745570  1760 net.cpp:382] conv0 -> conv0
I0428 20:21:26.973575  1760 net.cpp:124] Setting up conv0
I0428 20:21:26.973616  1760 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:26.973620  1760 net.cpp:139] Memory required for data: 7573760
I0428 20:21:26.973635  1760 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:26.973649  1760 net.cpp:86] Creating Layer pool0
I0428 20:21:26.973652  1760 net.cpp:408] pool0 <- conv0
I0428 20:21:26.973673  1760 net.cpp:382] pool0 -> pool0
I0428 20:21:26.973719  1760 net.cpp:124] Setting up pool0
I0428 20:21:26.973726  1760 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:26.973728  1760 net.cpp:139] Memory required for data: 9416960
I0428 20:21:26.973731  1760 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:26.973742  1760 net.cpp:86] Creating Layer conv1
I0428 20:21:26.973745  1760 net.cpp:408] conv1 <- pool0
I0428 20:21:26.973749  1760 net.cpp:382] conv1 -> conv1
I0428 20:21:26.975920  1760 net.cpp:124] Setting up conv1
I0428 20:21:26.975934  1760 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:26.975939  1760 net.cpp:139] Memory required for data: 10236160
I0428 20:21:26.975946  1760 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:26.975953  1760 net.cpp:86] Creating Layer pool1
I0428 20:21:26.975956  1760 net.cpp:408] pool1 <- conv1
I0428 20:21:26.975977  1760 net.cpp:382] pool1 -> pool1
I0428 20:21:26.976027  1760 net.cpp:124] Setting up pool1
I0428 20:21:26.976042  1760 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:26.976045  1760 net.cpp:139] Memory required for data: 10440960
I0428 20:21:26.976047  1760 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:26.976054  1760 net.cpp:86] Creating Layer ip1
I0428 20:21:26.976058  1760 net.cpp:408] ip1 <- pool1
I0428 20:21:26.976061  1760 net.cpp:382] ip1 -> ip1
I0428 20:21:26.977126  1760 net.cpp:124] Setting up ip1
I0428 20:21:26.977155  1760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:26.977159  1760 net.cpp:139] Memory required for data: 10443520
I0428 20:21:26.977167  1760 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:26.977174  1760 net.cpp:86] Creating Layer relu1
I0428 20:21:26.977177  1760 net.cpp:408] relu1 <- ip1
I0428 20:21:26.977181  1760 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:26.977352  1760 net.cpp:124] Setting up relu1
I0428 20:21:26.977362  1760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:26.977365  1760 net.cpp:139] Memory required for data: 10446080
I0428 20:21:26.977370  1760 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:26.977375  1760 net.cpp:86] Creating Layer ip2
I0428 20:21:26.977378  1760 net.cpp:408] ip2 <- ip1
I0428 20:21:26.977383  1760 net.cpp:382] ip2 -> ip2
I0428 20:21:26.977481  1760 net.cpp:124] Setting up ip2
I0428 20:21:26.977489  1760 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:26.977493  1760 net.cpp:139] Memory required for data: 10458880
I0428 20:21:26.977497  1760 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:26.977504  1760 net.cpp:86] Creating Layer relu2
I0428 20:21:26.977507  1760 net.cpp:408] relu2 <- ip2
I0428 20:21:26.977511  1760 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:26.978248  1760 net.cpp:124] Setting up relu2
I0428 20:21:26.978260  1760 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:26.978278  1760 net.cpp:139] Memory required for data: 10471680
I0428 20:21:26.978282  1760 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:26.978288  1760 net.cpp:86] Creating Layer ip3
I0428 20:21:26.978293  1760 net.cpp:408] ip3 <- ip2
I0428 20:21:26.978298  1760 net.cpp:382] ip3 -> ip3
I0428 20:21:26.978396  1760 net.cpp:124] Setting up ip3
I0428 20:21:26.978404  1760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:26.978407  1760 net.cpp:139] Memory required for data: 10474240
I0428 20:21:26.978415  1760 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:26.978420  1760 net.cpp:86] Creating Layer relu3
I0428 20:21:26.978422  1760 net.cpp:408] relu3 <- ip3
I0428 20:21:26.978426  1760 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:26.978605  1760 net.cpp:124] Setting up relu3
I0428 20:21:26.978615  1760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:26.978618  1760 net.cpp:139] Memory required for data: 10476800
I0428 20:21:26.978621  1760 layer_factory.hpp:77] Creating layer loss
I0428 20:21:26.978628  1760 net.cpp:86] Creating Layer loss
I0428 20:21:26.978631  1760 net.cpp:408] loss <- ip3
I0428 20:21:26.978636  1760 net.cpp:408] loss <- label
I0428 20:21:26.978641  1760 net.cpp:382] loss -> loss
I0428 20:21:26.978658  1760 layer_factory.hpp:77] Creating layer loss
I0428 20:21:26.978893  1760 net.cpp:124] Setting up loss
I0428 20:21:26.978901  1760 net.cpp:131] Top shape: (1)
I0428 20:21:26.978904  1760 net.cpp:134]     with loss weight 1
I0428 20:21:26.978919  1760 net.cpp:139] Memory required for data: 10476804
I0428 20:21:26.978922  1760 net.cpp:200] loss needs backward computation.
I0428 20:21:26.978926  1760 net.cpp:200] relu3 needs backward computation.
I0428 20:21:26.978929  1760 net.cpp:200] ip3 needs backward computation.
I0428 20:21:26.978931  1760 net.cpp:200] relu2 needs backward computation.
I0428 20:21:26.978935  1760 net.cpp:200] ip2 needs backward computation.
I0428 20:21:26.978937  1760 net.cpp:200] relu1 needs backward computation.
I0428 20:21:26.978940  1760 net.cpp:200] ip1 needs backward computation.
I0428 20:21:26.978942  1760 net.cpp:200] pool1 needs backward computation.
I0428 20:21:26.978945  1760 net.cpp:200] conv1 needs backward computation.
I0428 20:21:26.978948  1760 net.cpp:200] pool0 needs backward computation.
I0428 20:21:26.978950  1760 net.cpp:200] conv0 needs backward computation.
I0428 20:21:26.978955  1760 net.cpp:202] mnist does not need backward computation.
I0428 20:21:26.978956  1760 net.cpp:244] This network produces output loss
I0428 20:21:26.978965  1760 net.cpp:257] Network initialization done.
I0428 20:21:26.979272  1760 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1384.prototxt
I0428 20:21:26.979300  1760 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:26.979385  1760 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:26.979460  1760 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:26.979503  1760 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:26.979514  1760 net.cpp:86] Creating Layer mnist
I0428 20:21:26.979519  1760 net.cpp:382] mnist -> data
I0428 20:21:26.979542  1760 net.cpp:382] mnist -> label
I0428 20:21:26.979624  1760 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:26.981537  1760 net.cpp:124] Setting up mnist
I0428 20:21:26.981565  1760 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:26.981570  1760 net.cpp:131] Top shape: 100 (100)
I0428 20:21:26.981575  1760 net.cpp:139] Memory required for data: 314000
I0428 20:21:26.981577  1760 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:26.981585  1760 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:26.981587  1760 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:26.981591  1760 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:26.981597  1760 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:26.981632  1760 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:26.981637  1760 net.cpp:131] Top shape: 100 (100)
I0428 20:21:26.981642  1760 net.cpp:131] Top shape: 100 (100)
I0428 20:21:26.981643  1760 net.cpp:139] Memory required for data: 314800
I0428 20:21:26.981647  1760 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:26.981653  1760 net.cpp:86] Creating Layer conv0
I0428 20:21:26.981657  1760 net.cpp:408] conv0 <- data
I0428 20:21:26.981660  1760 net.cpp:382] conv0 -> conv0
I0428 20:21:26.983443  1760 net.cpp:124] Setting up conv0
I0428 20:21:26.983456  1760 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:26.983460  1760 net.cpp:139] Memory required for data: 11834800
I0428 20:21:26.983484  1760 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:26.983500  1760 net.cpp:86] Creating Layer pool0
I0428 20:21:26.983505  1760 net.cpp:408] pool0 <- conv0
I0428 20:21:26.983508  1760 net.cpp:382] pool0 -> pool0
I0428 20:21:26.983558  1760 net.cpp:124] Setting up pool0
I0428 20:21:26.983564  1760 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:26.983567  1760 net.cpp:139] Memory required for data: 14714800
I0428 20:21:26.983570  1760 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:26.983578  1760 net.cpp:86] Creating Layer conv1
I0428 20:21:26.983582  1760 net.cpp:408] conv1 <- pool0
I0428 20:21:26.983587  1760 net.cpp:382] conv1 -> conv1
I0428 20:21:26.985566  1760 net.cpp:124] Setting up conv1
I0428 20:21:26.985579  1760 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:26.985584  1760 net.cpp:139] Memory required for data: 15994800
I0428 20:21:26.985592  1760 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:26.985599  1760 net.cpp:86] Creating Layer pool1
I0428 20:21:26.985611  1760 net.cpp:408] pool1 <- conv1
I0428 20:21:26.985616  1760 net.cpp:382] pool1 -> pool1
I0428 20:21:26.985709  1760 net.cpp:124] Setting up pool1
I0428 20:21:26.985716  1760 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:26.985720  1760 net.cpp:139] Memory required for data: 16314800
I0428 20:21:26.985723  1760 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:26.985728  1760 net.cpp:86] Creating Layer ip1
I0428 20:21:26.985733  1760 net.cpp:408] ip1 <- pool1
I0428 20:21:26.985743  1760 net.cpp:382] ip1 -> ip1
I0428 20:21:26.985887  1760 net.cpp:124] Setting up ip1
I0428 20:21:26.985894  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.985908  1760 net.cpp:139] Memory required for data: 16318800
I0428 20:21:26.985915  1760 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:26.985921  1760 net.cpp:86] Creating Layer relu1
I0428 20:21:26.985924  1760 net.cpp:408] relu1 <- ip1
I0428 20:21:26.985929  1760 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:26.986116  1760 net.cpp:124] Setting up relu1
I0428 20:21:26.986136  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.986140  1760 net.cpp:139] Memory required for data: 16322800
I0428 20:21:26.986143  1760 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:26.986158  1760 net.cpp:86] Creating Layer ip2
I0428 20:21:26.986161  1760 net.cpp:408] ip2 <- ip1
I0428 20:21:26.986166  1760 net.cpp:382] ip2 -> ip2
I0428 20:21:26.986271  1760 net.cpp:124] Setting up ip2
I0428 20:21:26.986279  1760 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:26.986297  1760 net.cpp:139] Memory required for data: 16342800
I0428 20:21:26.986302  1760 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:26.986307  1760 net.cpp:86] Creating Layer relu2
I0428 20:21:26.986310  1760 net.cpp:408] relu2 <- ip2
I0428 20:21:26.986322  1760 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:26.986485  1760 net.cpp:124] Setting up relu2
I0428 20:21:26.986495  1760 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:26.986498  1760 net.cpp:139] Memory required for data: 16362800
I0428 20:21:26.986507  1760 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:26.986512  1760 net.cpp:86] Creating Layer ip3
I0428 20:21:26.986516  1760 net.cpp:408] ip3 <- ip2
I0428 20:21:26.986526  1760 net.cpp:382] ip3 -> ip3
I0428 20:21:26.986624  1760 net.cpp:124] Setting up ip3
I0428 20:21:26.986631  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.986634  1760 net.cpp:139] Memory required for data: 16366800
I0428 20:21:26.986641  1760 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:26.986646  1760 net.cpp:86] Creating Layer relu3
I0428 20:21:26.986649  1760 net.cpp:408] relu3 <- ip3
I0428 20:21:26.986654  1760 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:26.987444  1760 net.cpp:124] Setting up relu3
I0428 20:21:26.987457  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.987460  1760 net.cpp:139] Memory required for data: 16370800
I0428 20:21:26.987464  1760 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:26.987470  1760 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:26.987473  1760 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:26.987478  1760 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:26.987484  1760 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:26.987547  1760 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:26.987553  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.987556  1760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:26.987560  1760 net.cpp:139] Memory required for data: 16378800
I0428 20:21:26.987562  1760 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:26.987567  1760 net.cpp:86] Creating Layer accuracy
I0428 20:21:26.987571  1760 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:26.987581  1760 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:26.987586  1760 net.cpp:382] accuracy -> accuracy
I0428 20:21:26.987597  1760 net.cpp:124] Setting up accuracy
I0428 20:21:26.987601  1760 net.cpp:131] Top shape: (1)
I0428 20:21:26.987604  1760 net.cpp:139] Memory required for data: 16378804
I0428 20:21:26.987607  1760 layer_factory.hpp:77] Creating layer loss
I0428 20:21:26.987617  1760 net.cpp:86] Creating Layer loss
I0428 20:21:26.987620  1760 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:26.987624  1760 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:26.987628  1760 net.cpp:382] loss -> loss
I0428 20:21:26.987633  1760 layer_factory.hpp:77] Creating layer loss
I0428 20:21:26.987851  1760 net.cpp:124] Setting up loss
I0428 20:21:26.987860  1760 net.cpp:131] Top shape: (1)
I0428 20:21:26.987864  1760 net.cpp:134]     with loss weight 1
I0428 20:21:26.987879  1760 net.cpp:139] Memory required for data: 16378808
I0428 20:21:26.987884  1760 net.cpp:200] loss needs backward computation.
I0428 20:21:26.987887  1760 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:26.987890  1760 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:26.987906  1760 net.cpp:200] relu3 needs backward computation.
I0428 20:21:26.987910  1760 net.cpp:200] ip3 needs backward computation.
I0428 20:21:26.987912  1760 net.cpp:200] relu2 needs backward computation.
I0428 20:21:26.987915  1760 net.cpp:200] ip2 needs backward computation.
I0428 20:21:26.987917  1760 net.cpp:200] relu1 needs backward computation.
I0428 20:21:26.987920  1760 net.cpp:200] ip1 needs backward computation.
I0428 20:21:26.987923  1760 net.cpp:200] pool1 needs backward computation.
I0428 20:21:26.987926  1760 net.cpp:200] conv1 needs backward computation.
I0428 20:21:26.987929  1760 net.cpp:200] pool0 needs backward computation.
I0428 20:21:26.987932  1760 net.cpp:200] conv0 needs backward computation.
I0428 20:21:26.987941  1760 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:26.987946  1760 net.cpp:202] mnist does not need backward computation.
I0428 20:21:26.987947  1760 net.cpp:244] This network produces output accuracy
I0428 20:21:26.987951  1760 net.cpp:244] This network produces output loss
I0428 20:21:26.987962  1760 net.cpp:257] Network initialization done.
I0428 20:21:26.988003  1760 solver.cpp:56] Solver scaffolding done.
I0428 20:21:26.988338  1760 caffe.cpp:248] Starting Optimization
I0428 20:21:26.988345  1760 solver.cpp:273] Solving LeNet
I0428 20:21:26.988348  1760 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:26.989200  1760 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:26.996914  1760 blocking_queue.cpp:49] Waiting for data
I0428 20:21:27.069387  1768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:27.070420  1760 solver.cpp:398]     Test net output #0: accuracy = 0.1029
I0428 20:21:27.070441  1760 solver.cpp:398]     Test net output #1: loss = 2.36544 (* 1 = 2.36544 loss)
I0428 20:21:27.074913  1760 solver.cpp:219] Iteration 0 (0 iter/s, 0.0865403s/100 iters), loss = 2.41007
I0428 20:21:27.074935  1760 solver.cpp:238]     Train net output #0: loss = 2.41007 (* 1 = 2.41007 loss)
I0428 20:21:27.074961  1760 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:27.234153  1760 solver.cpp:219] Iteration 100 (628.128 iter/s, 0.159203s/100 iters), loss = 0.771863
I0428 20:21:27.234179  1760 solver.cpp:238]     Train net output #0: loss = 0.771863 (* 1 = 0.771863 loss)
I0428 20:21:27.234200  1760 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:27.389449  1760 solver.cpp:219] Iteration 200 (644.09 iter/s, 0.155258s/100 iters), loss = 0.26878
I0428 20:21:27.389475  1760 solver.cpp:238]     Train net output #0: loss = 0.26878 (* 1 = 0.26878 loss)
I0428 20:21:27.389482  1760 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:27.545563  1760 solver.cpp:219] Iteration 300 (640.739 iter/s, 0.15607s/100 iters), loss = 0.206148
I0428 20:21:27.545595  1760 solver.cpp:238]     Train net output #0: loss = 0.206148 (* 1 = 0.206148 loss)
I0428 20:21:27.545601  1760 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:27.702724  1760 solver.cpp:219] Iteration 400 (636.483 iter/s, 0.157113s/100 iters), loss = 0.255188
I0428 20:21:27.702760  1760 solver.cpp:238]     Train net output #0: loss = 0.255188 (* 1 = 0.255188 loss)
I0428 20:21:27.702766  1760 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:27.866348  1760 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:27.946085  1768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:27.947116  1760 solver.cpp:398]     Test net output #0: accuracy = 0.9575
I0428 20:21:27.947139  1760 solver.cpp:398]     Test net output #1: loss = 0.135793 (* 1 = 0.135793 loss)
I0428 20:21:27.948791  1760 solver.cpp:219] Iteration 500 (406.478 iter/s, 0.246016s/100 iters), loss = 0.0573024
I0428 20:21:27.948848  1760 solver.cpp:238]     Train net output #0: loss = 0.0573024 (* 1 = 0.0573024 loss)
I0428 20:21:27.948870  1760 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:28.109952  1760 solver.cpp:219] Iteration 600 (620.757 iter/s, 0.161094s/100 iters), loss = 0.0885736
I0428 20:21:28.109978  1760 solver.cpp:238]     Train net output #0: loss = 0.0885736 (* 1 = 0.0885736 loss)
I0428 20:21:28.109985  1760 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:28.278903  1760 solver.cpp:219] Iteration 700 (592.025 iter/s, 0.168912s/100 iters), loss = 0.14127
I0428 20:21:28.278944  1760 solver.cpp:238]     Train net output #0: loss = 0.14127 (* 1 = 0.14127 loss)
I0428 20:21:28.278950  1760 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:28.435776  1760 solver.cpp:219] Iteration 800 (637.618 iter/s, 0.156834s/100 iters), loss = 0.403393
I0428 20:21:28.435817  1760 solver.cpp:238]     Train net output #0: loss = 0.403393 (* 1 = 0.403393 loss)
I0428 20:21:28.435822  1760 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:28.596190  1760 solver.cpp:219] Iteration 900 (623.591 iter/s, 0.160361s/100 iters), loss = 0.129507
I0428 20:21:28.596230  1760 solver.cpp:238]     Train net output #0: loss = 0.129507 (* 1 = 0.129507 loss)
I0428 20:21:28.596236  1760 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:28.650439  1767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:28.754989  1760 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:28.757019  1760 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:28.758289  1760 solver.cpp:311] Iteration 1000, loss = 0.156986
I0428 20:21:28.758321  1760 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:28.839514  1768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:28.840518  1760 solver.cpp:398]     Test net output #0: accuracy = 0.9746
I0428 20:21:28.840538  1760 solver.cpp:398]     Test net output #1: loss = 0.0815436 (* 1 = 0.0815436 loss)
I0428 20:21:28.840544  1760 solver.cpp:316] Optimization Done.
I0428 20:21:28.840564  1760 caffe.cpp:259] Optimization Done.
