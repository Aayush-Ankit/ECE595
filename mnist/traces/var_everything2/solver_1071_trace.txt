I0428 20:07:59.639236 31283 caffe.cpp:218] Using GPUs 0
I0428 20:07:59.681788 31283 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:00.192327 31283 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1071.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:00.192445 31283 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1071.prototxt
I0428 20:08:00.192798 31283 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:00.192819 31283 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:00.192903 31283 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:00.192970 31283 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:00.193053 31283 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:00.193073 31283 net.cpp:86] Creating Layer mnist
I0428 20:08:00.193083 31283 net.cpp:382] mnist -> data
I0428 20:08:00.193101 31283 net.cpp:382] mnist -> label
I0428 20:08:00.194062 31283 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:00.196144 31283 net.cpp:124] Setting up mnist
I0428 20:08:00.196158 31283 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:00.196163 31283 net.cpp:131] Top shape: 64 (64)
I0428 20:08:00.196166 31283 net.cpp:139] Memory required for data: 200960
I0428 20:08:00.196172 31283 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:00.196187 31283 net.cpp:86] Creating Layer conv0
I0428 20:08:00.196205 31283 net.cpp:408] conv0 <- data
I0428 20:08:00.196216 31283 net.cpp:382] conv0 -> conv0
I0428 20:08:00.505113 31283 net.cpp:124] Setting up conv0
I0428 20:08:00.505148 31283 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:00.505153 31283 net.cpp:139] Memory required for data: 3887360
I0428 20:08:00.505170 31283 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:00.505193 31283 net.cpp:86] Creating Layer pool0
I0428 20:08:00.505198 31283 net.cpp:408] pool0 <- conv0
I0428 20:08:00.505204 31283 net.cpp:382] pool0 -> pool0
I0428 20:08:00.505256 31283 net.cpp:124] Setting up pool0
I0428 20:08:00.505265 31283 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:00.505270 31283 net.cpp:139] Memory required for data: 4808960
I0428 20:08:00.505272 31283 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:00.505285 31283 net.cpp:86] Creating Layer conv1
I0428 20:08:00.505291 31283 net.cpp:408] conv1 <- pool0
I0428 20:08:00.505297 31283 net.cpp:382] conv1 -> conv1
I0428 20:08:00.508535 31283 net.cpp:124] Setting up conv1
I0428 20:08:00.508553 31283 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:00.508558 31283 net.cpp:139] Memory required for data: 4972800
I0428 20:08:00.508569 31283 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:00.508579 31283 net.cpp:86] Creating Layer pool1
I0428 20:08:00.508582 31283 net.cpp:408] pool1 <- conv1
I0428 20:08:00.508589 31283 net.cpp:382] pool1 -> pool1
I0428 20:08:00.508632 31283 net.cpp:124] Setting up pool1
I0428 20:08:00.508641 31283 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:00.508644 31283 net.cpp:139] Memory required for data: 5013760
I0428 20:08:00.508648 31283 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:00.508656 31283 net.cpp:86] Creating Layer ip1
I0428 20:08:00.508659 31283 net.cpp:408] ip1 <- pool1
I0428 20:08:00.508666 31283 net.cpp:382] ip1 -> ip1
I0428 20:08:00.509763 31283 net.cpp:124] Setting up ip1
I0428 20:08:00.509778 31283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:00.509793 31283 net.cpp:139] Memory required for data: 5016320
I0428 20:08:00.509804 31283 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:00.509810 31283 net.cpp:86] Creating Layer relu1
I0428 20:08:00.509814 31283 net.cpp:408] relu1 <- ip1
I0428 20:08:00.509821 31283 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:00.510036 31283 net.cpp:124] Setting up relu1
I0428 20:08:00.510046 31283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:00.510051 31283 net.cpp:139] Memory required for data: 5018880
I0428 20:08:00.510054 31283 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:00.510062 31283 net.cpp:86] Creating Layer ip2
I0428 20:08:00.510066 31283 net.cpp:408] ip2 <- ip1
I0428 20:08:00.510074 31283 net.cpp:382] ip2 -> ip2
I0428 20:08:00.510203 31283 net.cpp:124] Setting up ip2
I0428 20:08:00.510212 31283 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:00.510215 31283 net.cpp:139] Memory required for data: 5031680
I0428 20:08:00.510222 31283 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:00.510228 31283 net.cpp:86] Creating Layer relu2
I0428 20:08:00.510232 31283 net.cpp:408] relu2 <- ip2
I0428 20:08:00.510238 31283 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:00.511106 31283 net.cpp:124] Setting up relu2
I0428 20:08:00.511121 31283 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:00.511126 31283 net.cpp:139] Memory required for data: 5044480
I0428 20:08:00.511129 31283 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:00.511138 31283 net.cpp:86] Creating Layer ip3
I0428 20:08:00.511142 31283 net.cpp:408] ip3 <- ip2
I0428 20:08:00.511149 31283 net.cpp:382] ip3 -> ip3
I0428 20:08:00.511279 31283 net.cpp:124] Setting up ip3
I0428 20:08:00.511288 31283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:00.511292 31283 net.cpp:139] Memory required for data: 5047040
I0428 20:08:00.511301 31283 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:00.511308 31283 net.cpp:86] Creating Layer relu3
I0428 20:08:00.511312 31283 net.cpp:408] relu3 <- ip3
I0428 20:08:00.511317 31283 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:00.511545 31283 net.cpp:124] Setting up relu3
I0428 20:08:00.511555 31283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:00.511559 31283 net.cpp:139] Memory required for data: 5049600
I0428 20:08:00.511564 31283 layer_factory.hpp:77] Creating layer loss
I0428 20:08:00.511577 31283 net.cpp:86] Creating Layer loss
I0428 20:08:00.511581 31283 net.cpp:408] loss <- ip3
I0428 20:08:00.511586 31283 net.cpp:408] loss <- label
I0428 20:08:00.511597 31283 net.cpp:382] loss -> loss
I0428 20:08:00.511612 31283 layer_factory.hpp:77] Creating layer loss
I0428 20:08:00.511893 31283 net.cpp:124] Setting up loss
I0428 20:08:00.511914 31283 net.cpp:131] Top shape: (1)
I0428 20:08:00.511919 31283 net.cpp:134]     with loss weight 1
I0428 20:08:00.511945 31283 net.cpp:139] Memory required for data: 5049604
I0428 20:08:00.511950 31283 net.cpp:200] loss needs backward computation.
I0428 20:08:00.511953 31283 net.cpp:200] relu3 needs backward computation.
I0428 20:08:00.511957 31283 net.cpp:200] ip3 needs backward computation.
I0428 20:08:00.511960 31283 net.cpp:200] relu2 needs backward computation.
I0428 20:08:00.511965 31283 net.cpp:200] ip2 needs backward computation.
I0428 20:08:00.511967 31283 net.cpp:200] relu1 needs backward computation.
I0428 20:08:00.511971 31283 net.cpp:200] ip1 needs backward computation.
I0428 20:08:00.511975 31283 net.cpp:200] pool1 needs backward computation.
I0428 20:08:00.511978 31283 net.cpp:200] conv1 needs backward computation.
I0428 20:08:00.511982 31283 net.cpp:200] pool0 needs backward computation.
I0428 20:08:00.511986 31283 net.cpp:200] conv0 needs backward computation.
I0428 20:08:00.511991 31283 net.cpp:202] mnist does not need backward computation.
I0428 20:08:00.511993 31283 net.cpp:244] This network produces output loss
I0428 20:08:00.512006 31283 net.cpp:257] Network initialization done.
I0428 20:08:00.512410 31283 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1071.prototxt
I0428 20:08:00.512452 31283 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:00.512560 31283 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:00.512663 31283 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:00.512717 31283 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:00.512730 31283 net.cpp:86] Creating Layer mnist
I0428 20:08:00.512737 31283 net.cpp:382] mnist -> data
I0428 20:08:00.512745 31283 net.cpp:382] mnist -> label
I0428 20:08:00.512869 31283 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:00.515357 31283 net.cpp:124] Setting up mnist
I0428 20:08:00.515379 31283 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:00.515396 31283 net.cpp:131] Top shape: 100 (100)
I0428 20:08:00.515399 31283 net.cpp:139] Memory required for data: 314000
I0428 20:08:00.515404 31283 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:00.515413 31283 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:00.515425 31283 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:00.515431 31283 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:00.515439 31283 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:00.515501 31283 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:00.515506 31283 net.cpp:131] Top shape: 100 (100)
I0428 20:08:00.515511 31283 net.cpp:131] Top shape: 100 (100)
I0428 20:08:00.515514 31283 net.cpp:139] Memory required for data: 314800
I0428 20:08:00.515518 31283 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:00.515539 31283 net.cpp:86] Creating Layer conv0
I0428 20:08:00.515547 31283 net.cpp:408] conv0 <- data
I0428 20:08:00.515553 31283 net.cpp:382] conv0 -> conv0
I0428 20:08:00.517452 31283 net.cpp:124] Setting up conv0
I0428 20:08:00.517468 31283 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:00.517472 31283 net.cpp:139] Memory required for data: 6074800
I0428 20:08:00.517484 31283 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:00.517491 31283 net.cpp:86] Creating Layer pool0
I0428 20:08:00.517496 31283 net.cpp:408] pool0 <- conv0
I0428 20:08:00.517503 31283 net.cpp:382] pool0 -> pool0
I0428 20:08:00.517545 31283 net.cpp:124] Setting up pool0
I0428 20:08:00.517552 31283 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:00.517555 31283 net.cpp:139] Memory required for data: 7514800
I0428 20:08:00.517560 31283 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:00.517573 31283 net.cpp:86] Creating Layer conv1
I0428 20:08:00.517577 31283 net.cpp:408] conv1 <- pool0
I0428 20:08:00.517583 31283 net.cpp:382] conv1 -> conv1
I0428 20:08:00.519906 31283 net.cpp:124] Setting up conv1
I0428 20:08:00.519922 31283 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:00.519927 31283 net.cpp:139] Memory required for data: 7770800
I0428 20:08:00.519945 31283 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:00.519953 31283 net.cpp:86] Creating Layer pool1
I0428 20:08:00.519958 31283 net.cpp:408] pool1 <- conv1
I0428 20:08:00.519963 31283 net.cpp:382] pool1 -> pool1
I0428 20:08:00.520014 31283 net.cpp:124] Setting up pool1
I0428 20:08:00.520020 31283 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:00.520023 31283 net.cpp:139] Memory required for data: 7834800
I0428 20:08:00.520027 31283 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:00.520033 31283 net.cpp:86] Creating Layer ip1
I0428 20:08:00.520037 31283 net.cpp:408] ip1 <- pool1
I0428 20:08:00.520043 31283 net.cpp:382] ip1 -> ip1
I0428 20:08:00.520187 31283 net.cpp:124] Setting up ip1
I0428 20:08:00.520198 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.520226 31283 net.cpp:139] Memory required for data: 7838800
I0428 20:08:00.520236 31283 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:00.520241 31283 net.cpp:86] Creating Layer relu1
I0428 20:08:00.520246 31283 net.cpp:408] relu1 <- ip1
I0428 20:08:00.520251 31283 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:00.520445 31283 net.cpp:124] Setting up relu1
I0428 20:08:00.520459 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.520464 31283 net.cpp:139] Memory required for data: 7842800
I0428 20:08:00.520468 31283 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:00.520476 31283 net.cpp:86] Creating Layer ip2
I0428 20:08:00.520480 31283 net.cpp:408] ip2 <- ip1
I0428 20:08:00.520486 31283 net.cpp:382] ip2 -> ip2
I0428 20:08:00.520606 31283 net.cpp:124] Setting up ip2
I0428 20:08:00.520614 31283 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:00.520618 31283 net.cpp:139] Memory required for data: 7862800
I0428 20:08:00.520624 31283 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:00.520630 31283 net.cpp:86] Creating Layer relu2
I0428 20:08:00.520634 31283 net.cpp:408] relu2 <- ip2
I0428 20:08:00.520639 31283 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:00.520823 31283 net.cpp:124] Setting up relu2
I0428 20:08:00.520833 31283 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:00.520836 31283 net.cpp:139] Memory required for data: 7882800
I0428 20:08:00.520839 31283 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:00.520846 31283 net.cpp:86] Creating Layer ip3
I0428 20:08:00.520849 31283 net.cpp:408] ip3 <- ip2
I0428 20:08:00.520855 31283 net.cpp:382] ip3 -> ip3
I0428 20:08:00.520987 31283 net.cpp:124] Setting up ip3
I0428 20:08:00.520993 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.520998 31283 net.cpp:139] Memory required for data: 7886800
I0428 20:08:00.521008 31283 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:00.521013 31283 net.cpp:86] Creating Layer relu3
I0428 20:08:00.521015 31283 net.cpp:408] relu3 <- ip3
I0428 20:08:00.521020 31283 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:00.521936 31283 net.cpp:124] Setting up relu3
I0428 20:08:00.521953 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.521957 31283 net.cpp:139] Memory required for data: 7890800
I0428 20:08:00.521970 31283 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:00.521976 31283 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:00.521981 31283 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:00.521986 31283 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:00.521994 31283 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:00.522037 31283 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:00.522044 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.522048 31283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:00.522053 31283 net.cpp:139] Memory required for data: 7898800
I0428 20:08:00.522055 31283 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:00.522061 31283 net.cpp:86] Creating Layer accuracy
I0428 20:08:00.522065 31283 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:00.522070 31283 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:00.522075 31283 net.cpp:382] accuracy -> accuracy
I0428 20:08:00.522083 31283 net.cpp:124] Setting up accuracy
I0428 20:08:00.522088 31283 net.cpp:131] Top shape: (1)
I0428 20:08:00.522090 31283 net.cpp:139] Memory required for data: 7898804
I0428 20:08:00.522094 31283 layer_factory.hpp:77] Creating layer loss
I0428 20:08:00.522099 31283 net.cpp:86] Creating Layer loss
I0428 20:08:00.522104 31283 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:00.522107 31283 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:00.522112 31283 net.cpp:382] loss -> loss
I0428 20:08:00.522120 31283 layer_factory.hpp:77] Creating layer loss
I0428 20:08:00.522387 31283 net.cpp:124] Setting up loss
I0428 20:08:00.522408 31283 net.cpp:131] Top shape: (1)
I0428 20:08:00.522413 31283 net.cpp:134]     with loss weight 1
I0428 20:08:00.522438 31283 net.cpp:139] Memory required for data: 7898808
I0428 20:08:00.522442 31283 net.cpp:200] loss needs backward computation.
I0428 20:08:00.522447 31283 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:00.522451 31283 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:00.522455 31283 net.cpp:200] relu3 needs backward computation.
I0428 20:08:00.522461 31283 net.cpp:200] ip3 needs backward computation.
I0428 20:08:00.522465 31283 net.cpp:200] relu2 needs backward computation.
I0428 20:08:00.522469 31283 net.cpp:200] ip2 needs backward computation.
I0428 20:08:00.522472 31283 net.cpp:200] relu1 needs backward computation.
I0428 20:08:00.522476 31283 net.cpp:200] ip1 needs backward computation.
I0428 20:08:00.522480 31283 net.cpp:200] pool1 needs backward computation.
I0428 20:08:00.522485 31283 net.cpp:200] conv1 needs backward computation.
I0428 20:08:00.522488 31283 net.cpp:200] pool0 needs backward computation.
I0428 20:08:00.522492 31283 net.cpp:200] conv0 needs backward computation.
I0428 20:08:00.522496 31283 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:00.522501 31283 net.cpp:202] mnist does not need backward computation.
I0428 20:08:00.522505 31283 net.cpp:244] This network produces output accuracy
I0428 20:08:00.522509 31283 net.cpp:244] This network produces output loss
I0428 20:08:00.522522 31283 net.cpp:257] Network initialization done.
I0428 20:08:00.522572 31283 solver.cpp:56] Solver scaffolding done.
I0428 20:08:00.523017 31283 caffe.cpp:248] Starting Optimization
I0428 20:08:00.523025 31283 solver.cpp:273] Solving LeNet
I0428 20:08:00.523028 31283 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:00.523977 31283 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:00.530124 31283 blocking_queue.cpp:49] Waiting for data
I0428 20:08:00.589462 31291 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:00.590087 31283 solver.cpp:398]     Test net output #0: accuracy = 0.1175
I0428 20:08:00.590109 31283 solver.cpp:398]     Test net output #1: loss = 2.30762 (* 1 = 2.30762 loss)
I0428 20:08:00.594029 31283 solver.cpp:219] Iteration 0 (0 iter/s, 0.0709601s/100 iters), loss = 2.31038
I0428 20:08:00.594056 31283 solver.cpp:238]     Train net output #0: loss = 2.31038 (* 1 = 2.31038 loss)
I0428 20:08:00.594069 31283 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:00.697662 31283 solver.cpp:219] Iteration 100 (965.326 iter/s, 0.103592s/100 iters), loss = 1.44093
I0428 20:08:00.697703 31283 solver.cpp:238]     Train net output #0: loss = 1.44093 (* 1 = 1.44093 loss)
I0428 20:08:00.697723 31283 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:00.795521 31283 solver.cpp:219] Iteration 200 (1022.4 iter/s, 0.0978094s/100 iters), loss = 1.13707
I0428 20:08:00.795552 31283 solver.cpp:238]     Train net output #0: loss = 1.13707 (* 1 = 1.13707 loss)
I0428 20:08:00.795560 31283 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:00.889910 31283 solver.cpp:219] Iteration 300 (1059.92 iter/s, 0.0943471s/100 iters), loss = 0.537964
I0428 20:08:00.889941 31283 solver.cpp:238]     Train net output #0: loss = 0.537964 (* 1 = 0.537964 loss)
I0428 20:08:00.889950 31283 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:00.984596 31283 solver.cpp:219] Iteration 400 (1056.6 iter/s, 0.0946432s/100 iters), loss = 0.211125
I0428 20:08:00.984627 31283 solver.cpp:238]     Train net output #0: loss = 0.211125 (* 1 = 0.211125 loss)
I0428 20:08:00.984635 31283 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:01.091918 31283 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:01.167939 31291 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:01.168576 31283 solver.cpp:398]     Test net output #0: accuracy = 0.947
I0428 20:08:01.168602 31283 solver.cpp:398]     Test net output #1: loss = 0.173829 (* 1 = 0.173829 loss)
I0428 20:08:01.169644 31283 solver.cpp:219] Iteration 500 (540.538 iter/s, 0.185001s/100 iters), loss = 0.107517
I0428 20:08:01.169674 31283 solver.cpp:238]     Train net output #0: loss = 0.107517 (* 1 = 0.107517 loss)
I0428 20:08:01.169703 31283 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:01.268272 31283 solver.cpp:219] Iteration 600 (1014.32 iter/s, 0.0985878s/100 iters), loss = 0.100728
I0428 20:08:01.268304 31283 solver.cpp:238]     Train net output #0: loss = 0.100728 (* 1 = 0.100728 loss)
I0428 20:08:01.268312 31283 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:01.374821 31283 solver.cpp:219] Iteration 700 (938.921 iter/s, 0.106505s/100 iters), loss = 0.199295
I0428 20:08:01.374861 31283 solver.cpp:238]     Train net output #0: loss = 0.199295 (* 1 = 0.199295 loss)
I0428 20:08:01.374871 31283 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:01.470126 31283 solver.cpp:219] Iteration 800 (1049.8 iter/s, 0.0952566s/100 iters), loss = 0.249992
I0428 20:08:01.470158 31283 solver.cpp:238]     Train net output #0: loss = 0.249992 (* 1 = 0.249992 loss)
I0428 20:08:01.470166 31283 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:01.563910 31283 solver.cpp:219] Iteration 900 (1066.75 iter/s, 0.0937422s/100 iters), loss = 0.158893
I0428 20:08:01.563940 31283 solver.cpp:238]     Train net output #0: loss = 0.158893 (* 1 = 0.158893 loss)
I0428 20:08:01.563947 31283 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:01.594815 31289 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:01.655565 31283 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:01.657071 31283 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:01.657692 31283 solver.cpp:311] Iteration 1000, loss = 0.142748
I0428 20:08:01.657709 31283 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:01.712682 31291 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:01.713299 31283 solver.cpp:398]     Test net output #0: accuracy = 0.9677
I0428 20:08:01.713333 31283 solver.cpp:398]     Test net output #1: loss = 0.0993176 (* 1 = 0.0993176 loss)
I0428 20:08:01.713338 31283 solver.cpp:316] Optimization Done.
I0428 20:08:01.713342 31283 caffe.cpp:259] Optimization Done.
