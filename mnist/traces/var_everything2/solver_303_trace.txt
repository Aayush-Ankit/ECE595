I0428 19:39:24.092581 24291 caffe.cpp:218] Using GPUs 0
I0428 19:39:24.132735 24291 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:24.605253 24291 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test303.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:24.605388 24291 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test303.prototxt
I0428 19:39:24.605731 24291 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:24.605749 24291 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:24.605835 24291 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:24.605918 24291 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:24.606001 24291 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:24.606042 24291 net.cpp:86] Creating Layer mnist
I0428 19:39:24.606055 24291 net.cpp:382] mnist -> data
I0428 19:39:24.606108 24291 net.cpp:382] mnist -> label
I0428 19:39:24.607142 24291 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:24.609387 24291 net.cpp:124] Setting up mnist
I0428 19:39:24.609405 24291 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:24.609412 24291 net.cpp:131] Top shape: 64 (64)
I0428 19:39:24.609419 24291 net.cpp:139] Memory required for data: 200960
I0428 19:39:24.609443 24291 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:24.609459 24291 net.cpp:86] Creating Layer conv0
I0428 19:39:24.609475 24291 net.cpp:408] conv0 <- data
I0428 19:39:24.609488 24291 net.cpp:382] conv0 -> conv0
I0428 19:39:24.847277 24291 net.cpp:124] Setting up conv0
I0428 19:39:24.847318 24291 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:24.847322 24291 net.cpp:139] Memory required for data: 495872
I0428 19:39:24.847337 24291 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:24.847349 24291 net.cpp:86] Creating Layer pool0
I0428 19:39:24.847353 24291 net.cpp:408] pool0 <- conv0
I0428 19:39:24.847358 24291 net.cpp:382] pool0 -> pool0
I0428 19:39:24.847435 24291 net.cpp:124] Setting up pool0
I0428 19:39:24.847447 24291 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:24.847450 24291 net.cpp:139] Memory required for data: 569600
I0428 19:39:24.847453 24291 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:24.847465 24291 net.cpp:86] Creating Layer conv1
I0428 19:39:24.847467 24291 net.cpp:408] conv1 <- pool0
I0428 19:39:24.847472 24291 net.cpp:382] conv1 -> conv1
I0428 19:39:24.849412 24291 net.cpp:124] Setting up conv1
I0428 19:39:24.849442 24291 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:24.849447 24291 net.cpp:139] Memory required for data: 602368
I0428 19:39:24.849454 24291 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:24.849463 24291 net.cpp:86] Creating Layer pool1
I0428 19:39:24.849467 24291 net.cpp:408] pool1 <- conv1
I0428 19:39:24.849472 24291 net.cpp:382] pool1 -> pool1
I0428 19:39:24.849510 24291 net.cpp:124] Setting up pool1
I0428 19:39:24.849515 24291 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:24.849519 24291 net.cpp:139] Memory required for data: 610560
I0428 19:39:24.849521 24291 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:24.849529 24291 net.cpp:86] Creating Layer ip1
I0428 19:39:24.849532 24291 net.cpp:408] ip1 <- pool1
I0428 19:39:24.849536 24291 net.cpp:382] ip1 -> ip1
I0428 19:39:24.850570 24291 net.cpp:124] Setting up ip1
I0428 19:39:24.850584 24291 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:24.850602 24291 net.cpp:139] Memory required for data: 623360
I0428 19:39:24.850625 24291 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:24.850631 24291 net.cpp:86] Creating Layer relu1
I0428 19:39:24.850634 24291 net.cpp:408] relu1 <- ip1
I0428 19:39:24.850638 24291 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:24.850834 24291 net.cpp:124] Setting up relu1
I0428 19:39:24.850843 24291 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:24.850847 24291 net.cpp:139] Memory required for data: 636160
I0428 19:39:24.850850 24291 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:24.850857 24291 net.cpp:86] Creating Layer ip2
I0428 19:39:24.850859 24291 net.cpp:408] ip2 <- ip1
I0428 19:39:24.850864 24291 net.cpp:382] ip2 -> ip2
I0428 19:39:24.850987 24291 net.cpp:124] Setting up ip2
I0428 19:39:24.851009 24291 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:24.851012 24291 net.cpp:139] Memory required for data: 638720
I0428 19:39:24.851017 24291 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:24.851023 24291 net.cpp:86] Creating Layer relu2
I0428 19:39:24.851027 24291 net.cpp:408] relu2 <- ip2
I0428 19:39:24.851032 24291 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:24.851943 24291 net.cpp:124] Setting up relu2
I0428 19:39:24.851970 24291 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:24.851984 24291 net.cpp:139] Memory required for data: 641280
I0428 19:39:24.851989 24291 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:24.852005 24291 net.cpp:86] Creating Layer ip3
I0428 19:39:24.852008 24291 net.cpp:408] ip3 <- ip2
I0428 19:39:24.852031 24291 net.cpp:382] ip3 -> ip3
I0428 19:39:24.852160 24291 net.cpp:124] Setting up ip3
I0428 19:39:24.852167 24291 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:24.852170 24291 net.cpp:139] Memory required for data: 643840
I0428 19:39:24.852179 24291 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:24.852185 24291 net.cpp:86] Creating Layer relu3
I0428 19:39:24.852186 24291 net.cpp:408] relu3 <- ip3
I0428 19:39:24.852190 24291 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:24.852356 24291 net.cpp:124] Setting up relu3
I0428 19:39:24.852365 24291 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:24.852368 24291 net.cpp:139] Memory required for data: 646400
I0428 19:39:24.852371 24291 layer_factory.hpp:77] Creating layer loss
I0428 19:39:24.852381 24291 net.cpp:86] Creating Layer loss
I0428 19:39:24.852385 24291 net.cpp:408] loss <- ip3
I0428 19:39:24.852387 24291 net.cpp:408] loss <- label
I0428 19:39:24.852392 24291 net.cpp:382] loss -> loss
I0428 19:39:24.852406 24291 layer_factory.hpp:77] Creating layer loss
I0428 19:39:24.852656 24291 net.cpp:124] Setting up loss
I0428 19:39:24.852668 24291 net.cpp:131] Top shape: (1)
I0428 19:39:24.852670 24291 net.cpp:134]     with loss weight 1
I0428 19:39:24.852684 24291 net.cpp:139] Memory required for data: 646404
I0428 19:39:24.852687 24291 net.cpp:200] loss needs backward computation.
I0428 19:39:24.852691 24291 net.cpp:200] relu3 needs backward computation.
I0428 19:39:24.852694 24291 net.cpp:200] ip3 needs backward computation.
I0428 19:39:24.852696 24291 net.cpp:200] relu2 needs backward computation.
I0428 19:39:24.852699 24291 net.cpp:200] ip2 needs backward computation.
I0428 19:39:24.852702 24291 net.cpp:200] relu1 needs backward computation.
I0428 19:39:24.852705 24291 net.cpp:200] ip1 needs backward computation.
I0428 19:39:24.852707 24291 net.cpp:200] pool1 needs backward computation.
I0428 19:39:24.852710 24291 net.cpp:200] conv1 needs backward computation.
I0428 19:39:24.852715 24291 net.cpp:200] pool0 needs backward computation.
I0428 19:39:24.852716 24291 net.cpp:200] conv0 needs backward computation.
I0428 19:39:24.852720 24291 net.cpp:202] mnist does not need backward computation.
I0428 19:39:24.852722 24291 net.cpp:244] This network produces output loss
I0428 19:39:24.852731 24291 net.cpp:257] Network initialization done.
I0428 19:39:24.853209 24291 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test303.prototxt
I0428 19:39:24.853252 24291 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:24.853373 24291 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:24.853451 24291 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:24.853490 24291 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:24.853502 24291 net.cpp:86] Creating Layer mnist
I0428 19:39:24.853507 24291 net.cpp:382] mnist -> data
I0428 19:39:24.853514 24291 net.cpp:382] mnist -> label
I0428 19:39:24.853600 24291 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:24.855653 24291 net.cpp:124] Setting up mnist
I0428 19:39:24.855664 24291 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:24.855685 24291 net.cpp:131] Top shape: 100 (100)
I0428 19:39:24.855687 24291 net.cpp:139] Memory required for data: 314000
I0428 19:39:24.855691 24291 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:24.855697 24291 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:24.855700 24291 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:24.855716 24291 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:24.855725 24291 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:24.855769 24291 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:24.855777 24291 net.cpp:131] Top shape: 100 (100)
I0428 19:39:24.855779 24291 net.cpp:131] Top shape: 100 (100)
I0428 19:39:24.855782 24291 net.cpp:139] Memory required for data: 314800
I0428 19:39:24.855785 24291 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:24.855794 24291 net.cpp:86] Creating Layer conv0
I0428 19:39:24.855798 24291 net.cpp:408] conv0 <- data
I0428 19:39:24.855803 24291 net.cpp:382] conv0 -> conv0
I0428 19:39:24.857764 24291 net.cpp:124] Setting up conv0
I0428 19:39:24.857776 24291 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:24.857795 24291 net.cpp:139] Memory required for data: 775600
I0428 19:39:24.857805 24291 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:24.857810 24291 net.cpp:86] Creating Layer pool0
I0428 19:39:24.857813 24291 net.cpp:408] pool0 <- conv0
I0428 19:39:24.857820 24291 net.cpp:382] pool0 -> pool0
I0428 19:39:24.857870 24291 net.cpp:124] Setting up pool0
I0428 19:39:24.857875 24291 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:24.857878 24291 net.cpp:139] Memory required for data: 890800
I0428 19:39:24.857882 24291 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:24.857892 24291 net.cpp:86] Creating Layer conv1
I0428 19:39:24.857894 24291 net.cpp:408] conv1 <- pool0
I0428 19:39:24.857898 24291 net.cpp:382] conv1 -> conv1
I0428 19:39:24.859577 24291 net.cpp:124] Setting up conv1
I0428 19:39:24.859591 24291 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:24.859611 24291 net.cpp:139] Memory required for data: 942000
I0428 19:39:24.859637 24291 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:24.859645 24291 net.cpp:86] Creating Layer pool1
I0428 19:39:24.859649 24291 net.cpp:408] pool1 <- conv1
I0428 19:39:24.859654 24291 net.cpp:382] pool1 -> pool1
I0428 19:39:24.859704 24291 net.cpp:124] Setting up pool1
I0428 19:39:24.859730 24291 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:24.859732 24291 net.cpp:139] Memory required for data: 954800
I0428 19:39:24.859753 24291 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:24.859758 24291 net.cpp:86] Creating Layer ip1
I0428 19:39:24.859767 24291 net.cpp:408] ip1 <- pool1
I0428 19:39:24.859773 24291 net.cpp:382] ip1 -> ip1
I0428 19:39:24.859896 24291 net.cpp:124] Setting up ip1
I0428 19:39:24.859905 24291 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:24.859921 24291 net.cpp:139] Memory required for data: 974800
I0428 19:39:24.859930 24291 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:24.859936 24291 net.cpp:86] Creating Layer relu1
I0428 19:39:24.859939 24291 net.cpp:408] relu1 <- ip1
I0428 19:39:24.859944 24291 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:24.860149 24291 net.cpp:124] Setting up relu1
I0428 19:39:24.860158 24291 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:24.860174 24291 net.cpp:139] Memory required for data: 994800
I0428 19:39:24.860177 24291 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:24.860186 24291 net.cpp:86] Creating Layer ip2
I0428 19:39:24.860190 24291 net.cpp:408] ip2 <- ip1
I0428 19:39:24.860194 24291 net.cpp:382] ip2 -> ip2
I0428 19:39:24.860306 24291 net.cpp:124] Setting up ip2
I0428 19:39:24.860313 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.860316 24291 net.cpp:139] Memory required for data: 998800
I0428 19:39:24.860322 24291 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:24.860328 24291 net.cpp:86] Creating Layer relu2
I0428 19:39:24.860332 24291 net.cpp:408] relu2 <- ip2
I0428 19:39:24.860335 24291 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:24.860564 24291 net.cpp:124] Setting up relu2
I0428 19:39:24.860574 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.860577 24291 net.cpp:139] Memory required for data: 1002800
I0428 19:39:24.860580 24291 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:24.860587 24291 net.cpp:86] Creating Layer ip3
I0428 19:39:24.860590 24291 net.cpp:408] ip3 <- ip2
I0428 19:39:24.860597 24291 net.cpp:382] ip3 -> ip3
I0428 19:39:24.860713 24291 net.cpp:124] Setting up ip3
I0428 19:39:24.860721 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.860725 24291 net.cpp:139] Memory required for data: 1006800
I0428 19:39:24.860733 24291 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:24.860738 24291 net.cpp:86] Creating Layer relu3
I0428 19:39:24.860740 24291 net.cpp:408] relu3 <- ip3
I0428 19:39:24.860744 24291 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:24.861714 24291 net.cpp:124] Setting up relu3
I0428 19:39:24.861727 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.861748 24291 net.cpp:139] Memory required for data: 1010800
I0428 19:39:24.861752 24291 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:24.861760 24291 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:24.861763 24291 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:24.861769 24291 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:24.861775 24291 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:24.861814 24291 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:24.861819 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.861824 24291 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:24.861826 24291 net.cpp:139] Memory required for data: 1018800
I0428 19:39:24.861829 24291 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:24.861835 24291 net.cpp:86] Creating Layer accuracy
I0428 19:39:24.861838 24291 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:24.861842 24291 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:24.861847 24291 net.cpp:382] accuracy -> accuracy
I0428 19:39:24.861853 24291 net.cpp:124] Setting up accuracy
I0428 19:39:24.861857 24291 net.cpp:131] Top shape: (1)
I0428 19:39:24.861860 24291 net.cpp:139] Memory required for data: 1018804
I0428 19:39:24.861865 24291 layer_factory.hpp:77] Creating layer loss
I0428 19:39:24.861893 24291 net.cpp:86] Creating Layer loss
I0428 19:39:24.861896 24291 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:24.861901 24291 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:24.861909 24291 net.cpp:382] loss -> loss
I0428 19:39:24.861915 24291 layer_factory.hpp:77] Creating layer loss
I0428 19:39:24.862187 24291 net.cpp:124] Setting up loss
I0428 19:39:24.862197 24291 net.cpp:131] Top shape: (1)
I0428 19:39:24.862201 24291 net.cpp:134]     with loss weight 1
I0428 19:39:24.862210 24291 net.cpp:139] Memory required for data: 1018808
I0428 19:39:24.862222 24291 net.cpp:200] loss needs backward computation.
I0428 19:39:24.862227 24291 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:24.862231 24291 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:24.862234 24291 net.cpp:200] relu3 needs backward computation.
I0428 19:39:24.862237 24291 net.cpp:200] ip3 needs backward computation.
I0428 19:39:24.862241 24291 net.cpp:200] relu2 needs backward computation.
I0428 19:39:24.862243 24291 net.cpp:200] ip2 needs backward computation.
I0428 19:39:24.862246 24291 net.cpp:200] relu1 needs backward computation.
I0428 19:39:24.862249 24291 net.cpp:200] ip1 needs backward computation.
I0428 19:39:24.862252 24291 net.cpp:200] pool1 needs backward computation.
I0428 19:39:24.862257 24291 net.cpp:200] conv1 needs backward computation.
I0428 19:39:24.862259 24291 net.cpp:200] pool0 needs backward computation.
I0428 19:39:24.862262 24291 net.cpp:200] conv0 needs backward computation.
I0428 19:39:24.862267 24291 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:24.862277 24291 net.cpp:202] mnist does not need backward computation.
I0428 19:39:24.862279 24291 net.cpp:244] This network produces output accuracy
I0428 19:39:24.862288 24291 net.cpp:244] This network produces output loss
I0428 19:39:24.862301 24291 net.cpp:257] Network initialization done.
I0428 19:39:24.862346 24291 solver.cpp:56] Solver scaffolding done.
I0428 19:39:24.862802 24291 caffe.cpp:248] Starting Optimization
I0428 19:39:24.862808 24291 solver.cpp:273] Solving LeNet
I0428 19:39:24.862826 24291 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:24.863742 24291 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:24.866612 24291 blocking_queue.cpp:49] Waiting for data
I0428 19:39:24.940132 24298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:24.940603 24291 solver.cpp:398]     Test net output #0: accuracy = 0.0631
I0428 19:39:24.940640 24291 solver.cpp:398]     Test net output #1: loss = 2.32381 (* 1 = 2.32381 loss)
I0428 19:39:24.942533 24291 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796754s/100 iters), loss = 2.31158
I0428 19:39:24.942601 24291 solver.cpp:238]     Train net output #0: loss = 2.31158 (* 1 = 2.31158 loss)
I0428 19:39:24.942613 24291 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:25.015096 24291 solver.cpp:219] Iteration 100 (1379.36 iter/s, 0.0724976s/100 iters), loss = 1.78732
I0428 19:39:25.015123 24291 solver.cpp:238]     Train net output #0: loss = 1.78732 (* 1 = 1.78732 loss)
I0428 19:39:25.015130 24291 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:25.083998 24291 solver.cpp:219] Iteration 200 (1452.05 iter/s, 0.0688681s/100 iters), loss = 1.52708
I0428 19:39:25.084022 24291 solver.cpp:238]     Train net output #0: loss = 1.52708 (* 1 = 1.52708 loss)
I0428 19:39:25.084043 24291 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:25.153278 24291 solver.cpp:219] Iteration 300 (1444.1 iter/s, 0.0692471s/100 iters), loss = 0.896616
I0428 19:39:25.153304 24291 solver.cpp:238]     Train net output #0: loss = 0.896616 (* 1 = 0.896616 loss)
I0428 19:39:25.153331 24291 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:25.222151 24291 solver.cpp:219] Iteration 400 (1452.68 iter/s, 0.0688384s/100 iters), loss = 1.11459
I0428 19:39:25.222175 24291 solver.cpp:238]     Train net output #0: loss = 1.11459 (* 1 = 1.11459 loss)
I0428 19:39:25.222198 24291 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:25.288010 24291 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:25.362993 24298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:25.363479 24291 solver.cpp:398]     Test net output #0: accuracy = 0.6993
I0428 19:39:25.363503 24291 solver.cpp:398]     Test net output #1: loss = 1.02658 (* 1 = 1.02658 loss)
I0428 19:39:25.364320 24291 solver.cpp:219] Iteration 500 (703.571 iter/s, 0.142132s/100 iters), loss = 1.19768
I0428 19:39:25.364352 24291 solver.cpp:238]     Train net output #0: loss = 1.19768 (* 1 = 1.19768 loss)
I0428 19:39:25.364378 24291 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:25.442827 24291 solver.cpp:219] Iteration 600 (1274.42 iter/s, 0.0784669s/100 iters), loss = 1.01257
I0428 19:39:25.442855 24291 solver.cpp:238]     Train net output #0: loss = 1.01257 (* 1 = 1.01257 loss)
I0428 19:39:25.442864 24291 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:25.511893 24291 solver.cpp:219] Iteration 700 (1448.65 iter/s, 0.0690299s/100 iters), loss = 1.14866
I0428 19:39:25.511919 24291 solver.cpp:238]     Train net output #0: loss = 1.14866 (* 1 = 1.14866 loss)
I0428 19:39:25.511925 24291 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:25.579043 24291 solver.cpp:219] Iteration 800 (1489.95 iter/s, 0.0671161s/100 iters), loss = 0.848156
I0428 19:39:25.579066 24291 solver.cpp:238]     Train net output #0: loss = 0.848156 (* 1 = 0.848156 loss)
I0428 19:39:25.579089 24291 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:25.646965 24291 solver.cpp:219] Iteration 900 (1472.99 iter/s, 0.0678892s/100 iters), loss = 0.949028
I0428 19:39:25.646989 24291 solver.cpp:238]     Train net output #0: loss = 0.949028 (* 1 = 0.949028 loss)
I0428 19:39:25.647012 24291 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:25.669684 24297 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:25.714088 24291 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:25.714764 24291 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:25.715543 24291 solver.cpp:311] Iteration 1000, loss = 0.982071
I0428 19:39:25.715577 24291 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:25.817562 24298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:25.818106 24291 solver.cpp:398]     Test net output #0: accuracy = 0.7243
I0428 19:39:25.818130 24291 solver.cpp:398]     Test net output #1: loss = 0.901437 (* 1 = 0.901437 loss)
I0428 19:39:25.818136 24291 solver.cpp:316] Optimization Done.
I0428 19:39:25.818140 24291 caffe.cpp:259] Optimization Done.
