I0428 20:34:52.941148  4542 caffe.cpp:218] Using GPUs 0
I0428 20:34:52.970129  4542 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:53.421016  4542 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1612.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:53.421186  4542 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1612.prototxt
I0428 20:34:53.421535  4542 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:53.421581  4542 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:53.421661  4542 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:53.421742  4542 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:53.421824  4542 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:53.421844  4542 net.cpp:86] Creating Layer mnist
I0428 20:34:53.421854  4542 net.cpp:382] mnist -> data
I0428 20:34:53.421874  4542 net.cpp:382] mnist -> label
I0428 20:34:53.422861  4542 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:53.425143  4542 net.cpp:124] Setting up mnist
I0428 20:34:53.425173  4542 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:53.425178  4542 net.cpp:131] Top shape: 64 (64)
I0428 20:34:53.425180  4542 net.cpp:139] Memory required for data: 200960
I0428 20:34:53.425186  4542 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:53.425230  4542 net.cpp:86] Creating Layer conv0
I0428 20:34:53.425247  4542 net.cpp:408] conv0 <- data
I0428 20:34:53.425258  4542 net.cpp:382] conv0 -> conv0
I0428 20:34:53.663269  4542 net.cpp:124] Setting up conv0
I0428 20:34:53.663311  4542 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:53.663314  4542 net.cpp:139] Memory required for data: 14946560
I0428 20:34:53.663329  4542 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:53.663341  4542 net.cpp:86] Creating Layer pool0
I0428 20:34:53.663344  4542 net.cpp:408] pool0 <- conv0
I0428 20:34:53.663350  4542 net.cpp:382] pool0 -> pool0
I0428 20:34:53.663411  4542 net.cpp:124] Setting up pool0
I0428 20:34:53.663417  4542 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:53.663420  4542 net.cpp:139] Memory required for data: 18632960
I0428 20:34:53.663424  4542 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:53.663434  4542 net.cpp:86] Creating Layer conv1
I0428 20:34:53.663436  4542 net.cpp:408] conv1 <- pool0
I0428 20:34:53.663441  4542 net.cpp:382] conv1 -> conv1
I0428 20:34:53.667068  4542 net.cpp:124] Setting up conv1
I0428 20:34:53.667098  4542 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:53.667101  4542 net.cpp:139] Memory required for data: 19452160
I0428 20:34:53.667110  4542 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:53.667117  4542 net.cpp:86] Creating Layer pool1
I0428 20:34:53.667121  4542 net.cpp:408] pool1 <- conv1
I0428 20:34:53.667126  4542 net.cpp:382] pool1 -> pool1
I0428 20:34:53.667178  4542 net.cpp:124] Setting up pool1
I0428 20:34:53.667184  4542 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:53.667187  4542 net.cpp:139] Memory required for data: 19656960
I0428 20:34:53.667191  4542 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:53.667198  4542 net.cpp:86] Creating Layer ip1
I0428 20:34:53.667201  4542 net.cpp:408] ip1 <- pool1
I0428 20:34:53.667206  4542 net.cpp:382] ip1 -> ip1
I0428 20:34:53.668226  4542 net.cpp:124] Setting up ip1
I0428 20:34:53.668256  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.668259  4542 net.cpp:139] Memory required for data: 19659520
I0428 20:34:53.668268  4542 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:53.668277  4542 net.cpp:86] Creating Layer relu1
I0428 20:34:53.668279  4542 net.cpp:408] relu1 <- ip1
I0428 20:34:53.668284  4542 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:53.668512  4542 net.cpp:124] Setting up relu1
I0428 20:34:53.668521  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.668525  4542 net.cpp:139] Memory required for data: 19662080
I0428 20:34:53.668529  4542 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:53.668534  4542 net.cpp:86] Creating Layer ip2
I0428 20:34:53.668537  4542 net.cpp:408] ip2 <- ip1
I0428 20:34:53.668542  4542 net.cpp:382] ip2 -> ip2
I0428 20:34:53.668632  4542 net.cpp:124] Setting up ip2
I0428 20:34:53.668639  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.668642  4542 net.cpp:139] Memory required for data: 19664640
I0428 20:34:53.668648  4542 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:53.668653  4542 net.cpp:86] Creating Layer relu2
I0428 20:34:53.668656  4542 net.cpp:408] relu2 <- ip2
I0428 20:34:53.668660  4542 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:53.669484  4542 net.cpp:124] Setting up relu2
I0428 20:34:53.669513  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.669517  4542 net.cpp:139] Memory required for data: 19667200
I0428 20:34:53.669520  4542 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:53.669528  4542 net.cpp:86] Creating Layer ip3
I0428 20:34:53.669533  4542 net.cpp:408] ip3 <- ip2
I0428 20:34:53.669538  4542 net.cpp:382] ip3 -> ip3
I0428 20:34:53.669634  4542 net.cpp:124] Setting up ip3
I0428 20:34:53.669642  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.669646  4542 net.cpp:139] Memory required for data: 19669760
I0428 20:34:53.669654  4542 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:53.669659  4542 net.cpp:86] Creating Layer relu3
I0428 20:34:53.669662  4542 net.cpp:408] relu3 <- ip3
I0428 20:34:53.669667  4542 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:53.669844  4542 net.cpp:124] Setting up relu3
I0428 20:34:53.669854  4542 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:53.669857  4542 net.cpp:139] Memory required for data: 19672320
I0428 20:34:53.669862  4542 layer_factory.hpp:77] Creating layer loss
I0428 20:34:53.669867  4542 net.cpp:86] Creating Layer loss
I0428 20:34:53.669870  4542 net.cpp:408] loss <- ip3
I0428 20:34:53.669873  4542 net.cpp:408] loss <- label
I0428 20:34:53.669879  4542 net.cpp:382] loss -> loss
I0428 20:34:53.669893  4542 layer_factory.hpp:77] Creating layer loss
I0428 20:34:53.670133  4542 net.cpp:124] Setting up loss
I0428 20:34:53.670143  4542 net.cpp:131] Top shape: (1)
I0428 20:34:53.670146  4542 net.cpp:134]     with loss weight 1
I0428 20:34:53.670161  4542 net.cpp:139] Memory required for data: 19672324
I0428 20:34:53.670163  4542 net.cpp:200] loss needs backward computation.
I0428 20:34:53.670167  4542 net.cpp:200] relu3 needs backward computation.
I0428 20:34:53.670171  4542 net.cpp:200] ip3 needs backward computation.
I0428 20:34:53.670173  4542 net.cpp:200] relu2 needs backward computation.
I0428 20:34:53.670176  4542 net.cpp:200] ip2 needs backward computation.
I0428 20:34:53.670178  4542 net.cpp:200] relu1 needs backward computation.
I0428 20:34:53.670181  4542 net.cpp:200] ip1 needs backward computation.
I0428 20:34:53.670184  4542 net.cpp:200] pool1 needs backward computation.
I0428 20:34:53.670187  4542 net.cpp:200] conv1 needs backward computation.
I0428 20:34:53.670189  4542 net.cpp:200] pool0 needs backward computation.
I0428 20:34:53.670193  4542 net.cpp:200] conv0 needs backward computation.
I0428 20:34:53.670197  4542 net.cpp:202] mnist does not need backward computation.
I0428 20:34:53.670198  4542 net.cpp:244] This network produces output loss
I0428 20:34:53.670208  4542 net.cpp:257] Network initialization done.
I0428 20:34:53.670588  4542 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1612.prototxt
I0428 20:34:53.670641  4542 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:53.670733  4542 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:53.670815  4542 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:53.670857  4542 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:53.670872  4542 net.cpp:86] Creating Layer mnist
I0428 20:34:53.670878  4542 net.cpp:382] mnist -> data
I0428 20:34:53.670886  4542 net.cpp:382] mnist -> label
I0428 20:34:53.670971  4542 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:53.672149  4542 net.cpp:124] Setting up mnist
I0428 20:34:53.672178  4542 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:53.672183  4542 net.cpp:131] Top shape: 100 (100)
I0428 20:34:53.672185  4542 net.cpp:139] Memory required for data: 314000
I0428 20:34:53.672189  4542 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:53.672195  4542 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:53.672199  4542 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:53.672204  4542 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:53.672211  4542 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:53.672271  4542 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:53.672276  4542 net.cpp:131] Top shape: 100 (100)
I0428 20:34:53.672294  4542 net.cpp:131] Top shape: 100 (100)
I0428 20:34:53.672297  4542 net.cpp:139] Memory required for data: 314800
I0428 20:34:53.672299  4542 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:53.672309  4542 net.cpp:86] Creating Layer conv0
I0428 20:34:53.672312  4542 net.cpp:408] conv0 <- data
I0428 20:34:53.672317  4542 net.cpp:382] conv0 -> conv0
I0428 20:34:53.674341  4542 net.cpp:124] Setting up conv0
I0428 20:34:53.674356  4542 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:53.674360  4542 net.cpp:139] Memory required for data: 23354800
I0428 20:34:53.674370  4542 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:53.674376  4542 net.cpp:86] Creating Layer pool0
I0428 20:34:53.674378  4542 net.cpp:408] pool0 <- conv0
I0428 20:34:53.674399  4542 net.cpp:382] pool0 -> pool0
I0428 20:34:53.674437  4542 net.cpp:124] Setting up pool0
I0428 20:34:53.674443  4542 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:53.674446  4542 net.cpp:139] Memory required for data: 29114800
I0428 20:34:53.674449  4542 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:53.674458  4542 net.cpp:86] Creating Layer conv1
I0428 20:34:53.674461  4542 net.cpp:408] conv1 <- pool0
I0428 20:34:53.674466  4542 net.cpp:382] conv1 -> conv1
I0428 20:34:53.677865  4542 net.cpp:124] Setting up conv1
I0428 20:34:53.677880  4542 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:53.677883  4542 net.cpp:139] Memory required for data: 30394800
I0428 20:34:53.677891  4542 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:53.677897  4542 net.cpp:86] Creating Layer pool1
I0428 20:34:53.677917  4542 net.cpp:408] pool1 <- conv1
I0428 20:34:53.677922  4542 net.cpp:382] pool1 -> pool1
I0428 20:34:53.677974  4542 net.cpp:124] Setting up pool1
I0428 20:34:53.677980  4542 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:53.677983  4542 net.cpp:139] Memory required for data: 30714800
I0428 20:34:53.677986  4542 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:53.677994  4542 net.cpp:86] Creating Layer ip1
I0428 20:34:53.677999  4542 net.cpp:408] ip1 <- pool1
I0428 20:34:53.678010  4542 net.cpp:382] ip1 -> ip1
I0428 20:34:53.678155  4542 net.cpp:124] Setting up ip1
I0428 20:34:53.678174  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.678176  4542 net.cpp:139] Memory required for data: 30718800
I0428 20:34:53.678184  4542 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:53.678190  4542 net.cpp:86] Creating Layer relu1
I0428 20:34:53.678194  4542 net.cpp:408] relu1 <- ip1
I0428 20:34:53.678200  4542 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:53.678371  4542 net.cpp:124] Setting up relu1
I0428 20:34:53.678380  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.678385  4542 net.cpp:139] Memory required for data: 30722800
I0428 20:34:53.678388  4542 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:53.678395  4542 net.cpp:86] Creating Layer ip2
I0428 20:34:53.678397  4542 net.cpp:408] ip2 <- ip1
I0428 20:34:53.678411  4542 net.cpp:382] ip2 -> ip2
I0428 20:34:53.678508  4542 net.cpp:124] Setting up ip2
I0428 20:34:53.678515  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.678519  4542 net.cpp:139] Memory required for data: 30726800
I0428 20:34:53.678524  4542 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:53.678529  4542 net.cpp:86] Creating Layer relu2
I0428 20:34:53.678531  4542 net.cpp:408] relu2 <- ip2
I0428 20:34:53.678536  4542 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:53.678710  4542 net.cpp:124] Setting up relu2
I0428 20:34:53.678719  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.678721  4542 net.cpp:139] Memory required for data: 30730800
I0428 20:34:53.678725  4542 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:53.678731  4542 net.cpp:86] Creating Layer ip3
I0428 20:34:53.678735  4542 net.cpp:408] ip3 <- ip2
I0428 20:34:53.678740  4542 net.cpp:382] ip3 -> ip3
I0428 20:34:53.678863  4542 net.cpp:124] Setting up ip3
I0428 20:34:53.678869  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.678872  4542 net.cpp:139] Memory required for data: 30734800
I0428 20:34:53.678896  4542 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:53.678900  4542 net.cpp:86] Creating Layer relu3
I0428 20:34:53.678903  4542 net.cpp:408] relu3 <- ip3
I0428 20:34:53.678925  4542 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:53.679788  4542 net.cpp:124] Setting up relu3
I0428 20:34:53.679800  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.679805  4542 net.cpp:139] Memory required for data: 30738800
I0428 20:34:53.679807  4542 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:34:53.679813  4542 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:34:53.679816  4542 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:34:53.679822  4542 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:34:53.679828  4542 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:34:53.679867  4542 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:34:53.679873  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.679877  4542 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:53.679880  4542 net.cpp:139] Memory required for data: 30746800
I0428 20:34:53.679883  4542 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:53.679895  4542 net.cpp:86] Creating Layer accuracy
I0428 20:34:53.679898  4542 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:34:53.679908  4542 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:53.679913  4542 net.cpp:382] accuracy -> accuracy
I0428 20:34:53.679919  4542 net.cpp:124] Setting up accuracy
I0428 20:34:53.679929  4542 net.cpp:131] Top shape: (1)
I0428 20:34:53.679931  4542 net.cpp:139] Memory required for data: 30746804
I0428 20:34:53.679934  4542 layer_factory.hpp:77] Creating layer loss
I0428 20:34:53.679939  4542 net.cpp:86] Creating Layer loss
I0428 20:34:53.679942  4542 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:34:53.679946  4542 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:53.679950  4542 net.cpp:382] loss -> loss
I0428 20:34:53.679956  4542 layer_factory.hpp:77] Creating layer loss
I0428 20:34:53.680218  4542 net.cpp:124] Setting up loss
I0428 20:34:53.680243  4542 net.cpp:131] Top shape: (1)
I0428 20:34:53.680245  4542 net.cpp:134]     with loss weight 1
I0428 20:34:53.680260  4542 net.cpp:139] Memory required for data: 30746808
I0428 20:34:53.680264  4542 net.cpp:200] loss needs backward computation.
I0428 20:34:53.680269  4542 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:53.680271  4542 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:34:53.680274  4542 net.cpp:200] relu3 needs backward computation.
I0428 20:34:53.680277  4542 net.cpp:200] ip3 needs backward computation.
I0428 20:34:53.680280  4542 net.cpp:200] relu2 needs backward computation.
I0428 20:34:53.680284  4542 net.cpp:200] ip2 needs backward computation.
I0428 20:34:53.680294  4542 net.cpp:200] relu1 needs backward computation.
I0428 20:34:53.680296  4542 net.cpp:200] ip1 needs backward computation.
I0428 20:34:53.680299  4542 net.cpp:200] pool1 needs backward computation.
I0428 20:34:53.680301  4542 net.cpp:200] conv1 needs backward computation.
I0428 20:34:53.680305  4542 net.cpp:200] pool0 needs backward computation.
I0428 20:34:53.680311  4542 net.cpp:200] conv0 needs backward computation.
I0428 20:34:53.680315  4542 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:53.680320  4542 net.cpp:202] mnist does not need backward computation.
I0428 20:34:53.680321  4542 net.cpp:244] This network produces output accuracy
I0428 20:34:53.680325  4542 net.cpp:244] This network produces output loss
I0428 20:34:53.680336  4542 net.cpp:257] Network initialization done.
I0428 20:34:53.680395  4542 solver.cpp:56] Solver scaffolding done.
I0428 20:34:53.680804  4542 caffe.cpp:248] Starting Optimization
I0428 20:34:53.680816  4542 solver.cpp:273] Solving LeNet
I0428 20:34:53.680819  4542 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:53.681054  4542 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:53.789692  4549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:53.792479  4542 solver.cpp:398]     Test net output #0: accuracy = 0.0962
I0428 20:34:53.792500  4542 solver.cpp:398]     Test net output #1: loss = 2.3349 (* 1 = 2.3349 loss)
I0428 20:34:53.797011  4542 solver.cpp:219] Iteration 0 (-1.78446e-31 iter/s, 0.116146s/100 iters), loss = 2.30957
I0428 20:34:53.797036  4542 solver.cpp:238]     Train net output #0: loss = 2.30957 (* 1 = 2.30957 loss)
I0428 20:34:53.797065  4542 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:54.030282  4542 solver.cpp:219] Iteration 100 (428.77 iter/s, 0.233225s/100 iters), loss = 0.909082
I0428 20:34:54.030325  4542 solver.cpp:238]     Train net output #0: loss = 0.909082 (* 1 = 0.909082 loss)
I0428 20:34:54.030331  4542 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:54.259897  4542 solver.cpp:219] Iteration 200 (435.592 iter/s, 0.229573s/100 iters), loss = 0.520793
I0428 20:34:54.259940  4542 solver.cpp:238]     Train net output #0: loss = 0.520793 (* 1 = 0.520793 loss)
I0428 20:34:54.259948  4542 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:54.490957  4542 solver.cpp:219] Iteration 300 (432.898 iter/s, 0.231001s/100 iters), loss = 0.680689
I0428 20:34:54.490999  4542 solver.cpp:238]     Train net output #0: loss = 0.680689 (* 1 = 0.680689 loss)
I0428 20:34:54.491006  4542 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:54.739151  4542 solver.cpp:219] Iteration 400 (403 iter/s, 0.248139s/100 iters), loss = 0.29498
I0428 20:34:54.739220  4542 solver.cpp:238]     Train net output #0: loss = 0.29498 (* 1 = 0.29498 loss)
I0428 20:34:54.739240  4542 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:54.990317  4542 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:55.007695  4542 blocking_queue.cpp:49] Waiting for data
I0428 20:34:55.106948  4549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:55.108842  4542 solver.cpp:398]     Test net output #0: accuracy = 0.9473
I0428 20:34:55.108870  4542 solver.cpp:398]     Test net output #1: loss = 0.24381 (* 1 = 0.24381 loss)
I0428 20:34:55.111166  4542 solver.cpp:219] Iteration 500 (268.865 iter/s, 0.371933s/100 iters), loss = 0.198784
I0428 20:34:55.111218  4542 solver.cpp:238]     Train net output #0: loss = 0.198784 (* 1 = 0.198784 loss)
I0428 20:34:55.111232  4542 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:55.345638  4542 solver.cpp:219] Iteration 600 (426.61 iter/s, 0.234406s/100 iters), loss = 0.152749
I0428 20:34:55.345679  4542 solver.cpp:238]     Train net output #0: loss = 0.152749 (* 1 = 0.152749 loss)
I0428 20:34:55.345695  4542 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:55.587020  4542 solver.cpp:219] Iteration 700 (414.374 iter/s, 0.241328s/100 iters), loss = 0.166872
I0428 20:34:55.587069  4542 solver.cpp:238]     Train net output #0: loss = 0.166872 (* 1 = 0.166872 loss)
I0428 20:34:55.587083  4542 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:55.832129  4542 solver.cpp:219] Iteration 800 (408.083 iter/s, 0.245048s/100 iters), loss = 0.265078
I0428 20:34:55.832176  4542 solver.cpp:238]     Train net output #0: loss = 0.265078 (* 1 = 0.265078 loss)
I0428 20:34:55.832193  4542 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:56.086562  4542 solver.cpp:219] Iteration 900 (393.128 iter/s, 0.25437s/100 iters), loss = 0.211025
I0428 20:34:56.086616  4542 solver.cpp:238]     Train net output #0: loss = 0.211025 (* 1 = 0.211025 loss)
I0428 20:34:56.086634  4542 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:56.172222  4548 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:56.340143  4542 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:56.345933  4542 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:56.348582  4542 solver.cpp:311] Iteration 1000, loss = 0.0885584
I0428 20:34:56.348611  4542 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:56.466930  4549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:56.469895  4542 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0428 20:34:56.469923  4542 solver.cpp:398]     Test net output #1: loss = 0.0927628 (* 1 = 0.0927628 loss)
I0428 20:34:56.469933  4542 solver.cpp:316] Optimization Done.
I0428 20:34:56.469939  4542 caffe.cpp:259] Optimization Done.
