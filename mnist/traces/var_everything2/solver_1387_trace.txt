I0428 20:21:35.123508  1791 caffe.cpp:218] Using GPUs 0
I0428 20:21:35.160806  1791 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:35.670703  1791 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1387.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:35.670840  1791 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1387.prototxt
I0428 20:21:35.671260  1791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:35.671281  1791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:35.671386  1791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:35.671468  1791 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:35.671568  1791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:35.671594  1791 net.cpp:86] Creating Layer mnist
I0428 20:21:35.671604  1791 net.cpp:382] mnist -> data
I0428 20:21:35.671630  1791 net.cpp:382] mnist -> label
I0428 20:21:35.672737  1791 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:35.675218  1791 net.cpp:124] Setting up mnist
I0428 20:21:35.675237  1791 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:35.675246  1791 net.cpp:131] Top shape: 64 (64)
I0428 20:21:35.675249  1791 net.cpp:139] Memory required for data: 200960
I0428 20:21:35.675256  1791 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:35.675272  1791 net.cpp:86] Creating Layer conv0
I0428 20:21:35.675292  1791 net.cpp:408] conv0 <- data
I0428 20:21:35.675307  1791 net.cpp:382] conv0 -> conv0
I0428 20:21:35.962518  1791 net.cpp:124] Setting up conv0
I0428 20:21:35.962545  1791 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:35.962549  1791 net.cpp:139] Memory required for data: 7573760
I0428 20:21:35.962565  1791 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:35.962579  1791 net.cpp:86] Creating Layer pool0
I0428 20:21:35.962584  1791 net.cpp:408] pool0 <- conv0
I0428 20:21:35.962589  1791 net.cpp:382] pool0 -> pool0
I0428 20:21:35.962635  1791 net.cpp:124] Setting up pool0
I0428 20:21:35.962641  1791 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:35.962643  1791 net.cpp:139] Memory required for data: 9416960
I0428 20:21:35.962646  1791 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:35.962656  1791 net.cpp:86] Creating Layer conv1
I0428 20:21:35.962659  1791 net.cpp:408] conv1 <- pool0
I0428 20:21:35.962664  1791 net.cpp:382] conv1 -> conv1
I0428 20:21:35.964828  1791 net.cpp:124] Setting up conv1
I0428 20:21:35.964843  1791 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:35.964846  1791 net.cpp:139] Memory required for data: 10236160
I0428 20:21:35.964856  1791 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:35.964866  1791 net.cpp:86] Creating Layer pool1
I0428 20:21:35.964870  1791 net.cpp:408] pool1 <- conv1
I0428 20:21:35.964875  1791 net.cpp:382] pool1 -> pool1
I0428 20:21:35.964913  1791 net.cpp:124] Setting up pool1
I0428 20:21:35.964920  1791 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:35.964922  1791 net.cpp:139] Memory required for data: 10440960
I0428 20:21:35.964926  1791 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:35.964932  1791 net.cpp:86] Creating Layer ip1
I0428 20:21:35.964936  1791 net.cpp:408] ip1 <- pool1
I0428 20:21:35.964939  1791 net.cpp:382] ip1 -> ip1
I0428 20:21:35.965145  1791 net.cpp:124] Setting up ip1
I0428 20:21:35.965154  1791 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:35.965157  1791 net.cpp:139] Memory required for data: 10447360
I0428 20:21:35.965165  1791 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:35.965170  1791 net.cpp:86] Creating Layer relu1
I0428 20:21:35.965173  1791 net.cpp:408] relu1 <- ip1
I0428 20:21:35.965178  1791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:35.965351  1791 net.cpp:124] Setting up relu1
I0428 20:21:35.965360  1791 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:35.965363  1791 net.cpp:139] Memory required for data: 10453760
I0428 20:21:35.965366  1791 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:35.965373  1791 net.cpp:86] Creating Layer ip2
I0428 20:21:35.965375  1791 net.cpp:408] ip2 <- ip1
I0428 20:21:35.965380  1791 net.cpp:382] ip2 -> ip2
I0428 20:21:35.965468  1791 net.cpp:124] Setting up ip2
I0428 20:21:35.965476  1791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:35.965478  1791 net.cpp:139] Memory required for data: 10456320
I0428 20:21:35.965484  1791 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:35.965490  1791 net.cpp:86] Creating Layer relu2
I0428 20:21:35.965493  1791 net.cpp:408] relu2 <- ip2
I0428 20:21:35.965497  1791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:35.966187  1791 net.cpp:124] Setting up relu2
I0428 20:21:35.966198  1791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:35.966202  1791 net.cpp:139] Memory required for data: 10458880
I0428 20:21:35.966205  1791 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:35.966212  1791 net.cpp:86] Creating Layer ip3
I0428 20:21:35.966215  1791 net.cpp:408] ip3 <- ip2
I0428 20:21:35.966220  1791 net.cpp:382] ip3 -> ip3
I0428 20:21:35.966310  1791 net.cpp:124] Setting up ip3
I0428 20:21:35.966318  1791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:35.966321  1791 net.cpp:139] Memory required for data: 10461440
I0428 20:21:35.966328  1791 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:35.966333  1791 net.cpp:86] Creating Layer relu3
I0428 20:21:35.966336  1791 net.cpp:408] relu3 <- ip3
I0428 20:21:35.966341  1791 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:35.966495  1791 net.cpp:124] Setting up relu3
I0428 20:21:35.966503  1791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:35.966506  1791 net.cpp:139] Memory required for data: 10464000
I0428 20:21:35.966509  1791 layer_factory.hpp:77] Creating layer loss
I0428 20:21:35.966521  1791 net.cpp:86] Creating Layer loss
I0428 20:21:35.966524  1791 net.cpp:408] loss <- ip3
I0428 20:21:35.966527  1791 net.cpp:408] loss <- label
I0428 20:21:35.966533  1791 net.cpp:382] loss -> loss
I0428 20:21:35.966547  1791 layer_factory.hpp:77] Creating layer loss
I0428 20:21:35.966748  1791 net.cpp:124] Setting up loss
I0428 20:21:35.966758  1791 net.cpp:131] Top shape: (1)
I0428 20:21:35.966760  1791 net.cpp:134]     with loss weight 1
I0428 20:21:35.966773  1791 net.cpp:139] Memory required for data: 10464004
I0428 20:21:35.966778  1791 net.cpp:200] loss needs backward computation.
I0428 20:21:35.966780  1791 net.cpp:200] relu3 needs backward computation.
I0428 20:21:35.966784  1791 net.cpp:200] ip3 needs backward computation.
I0428 20:21:35.966786  1791 net.cpp:200] relu2 needs backward computation.
I0428 20:21:35.966789  1791 net.cpp:200] ip2 needs backward computation.
I0428 20:21:35.966792  1791 net.cpp:200] relu1 needs backward computation.
I0428 20:21:35.966794  1791 net.cpp:200] ip1 needs backward computation.
I0428 20:21:35.966797  1791 net.cpp:200] pool1 needs backward computation.
I0428 20:21:35.966800  1791 net.cpp:200] conv1 needs backward computation.
I0428 20:21:35.966804  1791 net.cpp:200] pool0 needs backward computation.
I0428 20:21:35.966806  1791 net.cpp:200] conv0 needs backward computation.
I0428 20:21:35.966809  1791 net.cpp:202] mnist does not need backward computation.
I0428 20:21:35.966812  1791 net.cpp:244] This network produces output loss
I0428 20:21:35.966821  1791 net.cpp:257] Network initialization done.
I0428 20:21:35.967129  1791 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1387.prototxt
I0428 20:21:35.967155  1791 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:35.967242  1791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:35.967319  1791 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:35.967362  1791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:35.967376  1791 net.cpp:86] Creating Layer mnist
I0428 20:21:35.967381  1791 net.cpp:382] mnist -> data
I0428 20:21:35.967388  1791 net.cpp:382] mnist -> label
I0428 20:21:35.967466  1791 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:35.969444  1791 net.cpp:124] Setting up mnist
I0428 20:21:35.969457  1791 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:35.969462  1791 net.cpp:131] Top shape: 100 (100)
I0428 20:21:35.969465  1791 net.cpp:139] Memory required for data: 314000
I0428 20:21:35.969470  1791 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:35.969475  1791 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:35.969478  1791 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:35.969483  1791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:35.969490  1791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:35.969524  1791 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:35.969528  1791 net.cpp:131] Top shape: 100 (100)
I0428 20:21:35.969532  1791 net.cpp:131] Top shape: 100 (100)
I0428 20:21:35.969535  1791 net.cpp:139] Memory required for data: 314800
I0428 20:21:35.969538  1791 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:35.969545  1791 net.cpp:86] Creating Layer conv0
I0428 20:21:35.969548  1791 net.cpp:408] conv0 <- data
I0428 20:21:35.969553  1791 net.cpp:382] conv0 -> conv0
I0428 20:21:35.971276  1791 net.cpp:124] Setting up conv0
I0428 20:21:35.971290  1791 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:35.971294  1791 net.cpp:139] Memory required for data: 11834800
I0428 20:21:35.971303  1791 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:35.971309  1791 net.cpp:86] Creating Layer pool0
I0428 20:21:35.971312  1791 net.cpp:408] pool0 <- conv0
I0428 20:21:35.971318  1791 net.cpp:382] pool0 -> pool0
I0428 20:21:35.971350  1791 net.cpp:124] Setting up pool0
I0428 20:21:35.971355  1791 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:35.971359  1791 net.cpp:139] Memory required for data: 14714800
I0428 20:21:35.971361  1791 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:35.971369  1791 net.cpp:86] Creating Layer conv1
I0428 20:21:35.971372  1791 net.cpp:408] conv1 <- pool0
I0428 20:21:35.971382  1791 net.cpp:382] conv1 -> conv1
I0428 20:21:35.973309  1791 net.cpp:124] Setting up conv1
I0428 20:21:35.973338  1791 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:35.973343  1791 net.cpp:139] Memory required for data: 15994800
I0428 20:21:35.973352  1791 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:35.973359  1791 net.cpp:86] Creating Layer pool1
I0428 20:21:35.973363  1791 net.cpp:408] pool1 <- conv1
I0428 20:21:35.973368  1791 net.cpp:382] pool1 -> pool1
I0428 20:21:35.973435  1791 net.cpp:124] Setting up pool1
I0428 20:21:35.973441  1791 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:35.973444  1791 net.cpp:139] Memory required for data: 16314800
I0428 20:21:35.973448  1791 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:35.973454  1791 net.cpp:86] Creating Layer ip1
I0428 20:21:35.973459  1791 net.cpp:408] ip1 <- pool1
I0428 20:21:35.973464  1791 net.cpp:382] ip1 -> ip1
I0428 20:21:35.973706  1791 net.cpp:124] Setting up ip1
I0428 20:21:35.973726  1791 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:35.973744  1791 net.cpp:139] Memory required for data: 16324800
I0428 20:21:35.973753  1791 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:35.973773  1791 net.cpp:86] Creating Layer relu1
I0428 20:21:35.973776  1791 net.cpp:408] relu1 <- ip1
I0428 20:21:35.973780  1791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:35.973984  1791 net.cpp:124] Setting up relu1
I0428 20:21:35.973994  1791 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:35.973996  1791 net.cpp:139] Memory required for data: 16334800
I0428 20:21:35.973999  1791 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:35.974006  1791 net.cpp:86] Creating Layer ip2
I0428 20:21:35.974010  1791 net.cpp:408] ip2 <- ip1
I0428 20:21:35.974015  1791 net.cpp:382] ip2 -> ip2
I0428 20:21:35.974128  1791 net.cpp:124] Setting up ip2
I0428 20:21:35.974135  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.974138  1791 net.cpp:139] Memory required for data: 16338800
I0428 20:21:35.974143  1791 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:35.974159  1791 net.cpp:86] Creating Layer relu2
I0428 20:21:35.974164  1791 net.cpp:408] relu2 <- ip2
I0428 20:21:35.974167  1791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:35.974378  1791 net.cpp:124] Setting up relu2
I0428 20:21:35.974388  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.974391  1791 net.cpp:139] Memory required for data: 16342800
I0428 20:21:35.974395  1791 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:35.974401  1791 net.cpp:86] Creating Layer ip3
I0428 20:21:35.974405  1791 net.cpp:408] ip3 <- ip2
I0428 20:21:35.974409  1791 net.cpp:382] ip3 -> ip3
I0428 20:21:35.974506  1791 net.cpp:124] Setting up ip3
I0428 20:21:35.974514  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.974532  1791 net.cpp:139] Memory required for data: 16346800
I0428 20:21:35.974541  1791 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:35.974546  1791 net.cpp:86] Creating Layer relu3
I0428 20:21:35.974550  1791 net.cpp:408] relu3 <- ip3
I0428 20:21:35.974553  1791 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:35.975314  1791 net.cpp:124] Setting up relu3
I0428 20:21:35.975327  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.975329  1791 net.cpp:139] Memory required for data: 16350800
I0428 20:21:35.975333  1791 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:35.975338  1791 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:35.975342  1791 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:35.975347  1791 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:35.975353  1791 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:35.975391  1791 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:35.975399  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.975402  1791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:35.975404  1791 net.cpp:139] Memory required for data: 16358800
I0428 20:21:35.975407  1791 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:35.975412  1791 net.cpp:86] Creating Layer accuracy
I0428 20:21:35.975415  1791 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:35.975419  1791 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:35.975424  1791 net.cpp:382] accuracy -> accuracy
I0428 20:21:35.975430  1791 net.cpp:124] Setting up accuracy
I0428 20:21:35.975435  1791 net.cpp:131] Top shape: (1)
I0428 20:21:35.975436  1791 net.cpp:139] Memory required for data: 16358804
I0428 20:21:35.975440  1791 layer_factory.hpp:77] Creating layer loss
I0428 20:21:35.975443  1791 net.cpp:86] Creating Layer loss
I0428 20:21:35.975446  1791 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:35.975450  1791 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:35.975455  1791 net.cpp:382] loss -> loss
I0428 20:21:35.975461  1791 layer_factory.hpp:77] Creating layer loss
I0428 20:21:35.975711  1791 net.cpp:124] Setting up loss
I0428 20:21:35.975724  1791 net.cpp:131] Top shape: (1)
I0428 20:21:35.975728  1791 net.cpp:134]     with loss weight 1
I0428 20:21:35.975745  1791 net.cpp:139] Memory required for data: 16358808
I0428 20:21:35.975751  1791 net.cpp:200] loss needs backward computation.
I0428 20:21:35.975755  1791 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:35.975760  1791 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:35.975764  1791 net.cpp:200] relu3 needs backward computation.
I0428 20:21:35.975766  1791 net.cpp:200] ip3 needs backward computation.
I0428 20:21:35.975769  1791 net.cpp:200] relu2 needs backward computation.
I0428 20:21:35.975780  1791 net.cpp:200] ip2 needs backward computation.
I0428 20:21:35.975782  1791 net.cpp:200] relu1 needs backward computation.
I0428 20:21:35.975786  1791 net.cpp:200] ip1 needs backward computation.
I0428 20:21:35.975790  1791 net.cpp:200] pool1 needs backward computation.
I0428 20:21:35.975792  1791 net.cpp:200] conv1 needs backward computation.
I0428 20:21:35.975796  1791 net.cpp:200] pool0 needs backward computation.
I0428 20:21:35.975800  1791 net.cpp:200] conv0 needs backward computation.
I0428 20:21:35.975803  1791 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:35.975807  1791 net.cpp:202] mnist does not need backward computation.
I0428 20:21:35.975811  1791 net.cpp:244] This network produces output accuracy
I0428 20:21:35.975813  1791 net.cpp:244] This network produces output loss
I0428 20:21:35.975824  1791 net.cpp:257] Network initialization done.
I0428 20:21:35.975867  1791 solver.cpp:56] Solver scaffolding done.
I0428 20:21:35.976212  1791 caffe.cpp:248] Starting Optimization
I0428 20:21:35.976219  1791 solver.cpp:273] Solving LeNet
I0428 20:21:35.976222  1791 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:35.976514  1791 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:35.984542  1791 blocking_queue.cpp:49] Waiting for data
I0428 20:21:36.055091  1798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:36.056365  1791 solver.cpp:398]     Test net output #0: accuracy = 0.0924
I0428 20:21:36.056401  1791 solver.cpp:398]     Test net output #1: loss = 2.31283 (* 1 = 2.31283 loss)
I0428 20:21:36.060889  1791 solver.cpp:219] Iteration 0 (0 iter/s, 0.0846295s/100 iters), loss = 2.33321
I0428 20:21:36.060911  1791 solver.cpp:238]     Train net output #0: loss = 2.33321 (* 1 = 2.33321 loss)
I0428 20:21:36.060923  1791 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:36.219302  1791 solver.cpp:219] Iteration 100 (631.405 iter/s, 0.158377s/100 iters), loss = 0.947091
I0428 20:21:36.219343  1791 solver.cpp:238]     Train net output #0: loss = 0.947091 (* 1 = 0.947091 loss)
I0428 20:21:36.219350  1791 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:36.375778  1791 solver.cpp:219] Iteration 200 (639.229 iter/s, 0.156439s/100 iters), loss = 0.885867
I0428 20:21:36.375818  1791 solver.cpp:238]     Train net output #0: loss = 0.885867 (* 1 = 0.885867 loss)
I0428 20:21:36.375823  1791 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:36.532924  1791 solver.cpp:219] Iteration 300 (636.508 iter/s, 0.157107s/100 iters), loss = 0.39886
I0428 20:21:36.532954  1791 solver.cpp:238]     Train net output #0: loss = 0.39886 (* 1 = 0.39886 loss)
I0428 20:21:36.532961  1791 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:36.688506  1791 solver.cpp:219] Iteration 400 (642.92 iter/s, 0.15554s/100 iters), loss = 0.375286
I0428 20:21:36.688546  1791 solver.cpp:238]     Train net output #0: loss = 0.375286 (* 1 = 0.375286 loss)
I0428 20:21:36.688552  1791 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:36.840116  1791 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:36.913533  1798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:36.916254  1791 solver.cpp:398]     Test net output #0: accuracy = 0.8655
I0428 20:21:36.916287  1791 solver.cpp:398]     Test net output #1: loss = 0.362331 (* 1 = 0.362331 loss)
I0428 20:21:36.917798  1791 solver.cpp:219] Iteration 500 (436.203 iter/s, 0.229251s/100 iters), loss = 0.299458
I0428 20:21:36.917852  1791 solver.cpp:238]     Train net output #0: loss = 0.299458 (* 1 = 0.299458 loss)
I0428 20:21:36.917858  1791 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:37.079387  1791 solver.cpp:219] Iteration 600 (619.049 iter/s, 0.161538s/100 iters), loss = 0.422793
I0428 20:21:37.079412  1791 solver.cpp:238]     Train net output #0: loss = 0.422793 (* 1 = 0.422793 loss)
I0428 20:21:37.079421  1791 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:37.239635  1791 solver.cpp:219] Iteration 700 (624.185 iter/s, 0.160209s/100 iters), loss = 0.23233
I0428 20:21:37.239677  1791 solver.cpp:238]     Train net output #0: loss = 0.23233 (* 1 = 0.23233 loss)
I0428 20:21:37.239698  1791 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:37.404059  1791 solver.cpp:219] Iteration 800 (608.348 iter/s, 0.16438s/100 iters), loss = 0.467184
I0428 20:21:37.404099  1791 solver.cpp:238]     Train net output #0: loss = 0.467184 (* 1 = 0.467184 loss)
I0428 20:21:37.404106  1791 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:37.564075  1791 solver.cpp:219] Iteration 900 (625.096 iter/s, 0.159975s/100 iters), loss = 0.642198
I0428 20:21:37.564111  1791 solver.cpp:238]     Train net output #0: loss = 0.642198 (* 1 = 0.642198 loss)
I0428 20:21:37.564117  1791 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:37.616525  1797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:37.719188  1791 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:37.721420  1791 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:37.722735  1791 solver.cpp:311] Iteration 1000, loss = 0.349142
I0428 20:21:37.722769  1791 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:37.795986  1798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:37.798681  1791 solver.cpp:398]     Test net output #0: accuracy = 0.8735
I0428 20:21:37.798717  1791 solver.cpp:398]     Test net output #1: loss = 0.322933 (* 1 = 0.322933 loss)
I0428 20:21:37.798722  1791 solver.cpp:316] Optimization Done.
I0428 20:21:37.798724  1791 caffe.cpp:259] Optimization Done.
