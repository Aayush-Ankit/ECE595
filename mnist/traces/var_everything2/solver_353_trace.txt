I0428 19:41:03.205402 24729 caffe.cpp:218] Using GPUs 0
I0428 19:41:03.241781 24729 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:03.688109 24729 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test353.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:03.688244 24729 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test353.prototxt
I0428 19:41:03.688519 24729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:03.688535 24729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:03.688604 24729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:41:03.688675 24729 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:03.688777 24729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:03.688803 24729 net.cpp:86] Creating Layer mnist
I0428 19:41:03.688818 24729 net.cpp:382] mnist -> data
I0428 19:41:03.688844 24729 net.cpp:382] mnist -> label
I0428 19:41:03.689808 24729 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:03.691941 24729 net.cpp:124] Setting up mnist
I0428 19:41:03.691973 24729 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:03.691982 24729 net.cpp:131] Top shape: 64 (64)
I0428 19:41:03.692003 24729 net.cpp:139] Memory required for data: 200960
I0428 19:41:03.692011 24729 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:03.692030 24729 net.cpp:86] Creating Layer conv0
I0428 19:41:03.692039 24729 net.cpp:408] conv0 <- data
I0428 19:41:03.692054 24729 net.cpp:382] conv0 -> conv0
I0428 19:41:03.929810 24729 net.cpp:124] Setting up conv0
I0428 19:41:03.929837 24729 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:03.929842 24729 net.cpp:139] Memory required for data: 495872
I0428 19:41:03.929877 24729 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:03.929894 24729 net.cpp:86] Creating Layer pool0
I0428 19:41:03.929900 24729 net.cpp:408] pool0 <- conv0
I0428 19:41:03.929909 24729 net.cpp:382] pool0 -> pool0
I0428 19:41:03.929966 24729 net.cpp:124] Setting up pool0
I0428 19:41:03.929975 24729 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:03.929996 24729 net.cpp:139] Memory required for data: 569600
I0428 19:41:03.930002 24729 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:03.930017 24729 net.cpp:86] Creating Layer conv1
I0428 19:41:03.930024 24729 net.cpp:408] conv1 <- pool0
I0428 19:41:03.930032 24729 net.cpp:382] conv1 -> conv1
I0428 19:41:03.931939 24729 net.cpp:124] Setting up conv1
I0428 19:41:03.931955 24729 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:03.931962 24729 net.cpp:139] Memory required for data: 733440
I0428 19:41:03.931974 24729 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:03.931985 24729 net.cpp:86] Creating Layer pool1
I0428 19:41:03.931993 24729 net.cpp:408] pool1 <- conv1
I0428 19:41:03.932000 24729 net.cpp:382] pool1 -> pool1
I0428 19:41:03.932044 24729 net.cpp:124] Setting up pool1
I0428 19:41:03.932052 24729 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:03.932057 24729 net.cpp:139] Memory required for data: 774400
I0428 19:41:03.932062 24729 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:03.932073 24729 net.cpp:86] Creating Layer ip1
I0428 19:41:03.932080 24729 net.cpp:408] ip1 <- pool1
I0428 19:41:03.932090 24729 net.cpp:382] ip1 -> ip1
I0428 19:41:03.933120 24729 net.cpp:124] Setting up ip1
I0428 19:41:03.933135 24729 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:03.933156 24729 net.cpp:139] Memory required for data: 776960
I0428 19:41:03.933167 24729 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:03.933176 24729 net.cpp:86] Creating Layer relu1
I0428 19:41:03.933182 24729 net.cpp:408] relu1 <- ip1
I0428 19:41:03.933190 24729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:03.933382 24729 net.cpp:124] Setting up relu1
I0428 19:41:03.933393 24729 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:03.933398 24729 net.cpp:139] Memory required for data: 779520
I0428 19:41:03.933404 24729 layer_factory.hpp:77] Creating layer loss
I0428 19:41:03.933413 24729 net.cpp:86] Creating Layer loss
I0428 19:41:03.933418 24729 net.cpp:408] loss <- ip1
I0428 19:41:03.933425 24729 net.cpp:408] loss <- label
I0428 19:41:03.933434 24729 net.cpp:382] loss -> loss
I0428 19:41:03.933452 24729 layer_factory.hpp:77] Creating layer loss
I0428 19:41:03.934340 24729 net.cpp:124] Setting up loss
I0428 19:41:03.934353 24729 net.cpp:131] Top shape: (1)
I0428 19:41:03.934360 24729 net.cpp:134]     with loss weight 1
I0428 19:41:03.934382 24729 net.cpp:139] Memory required for data: 779524
I0428 19:41:03.934388 24729 net.cpp:200] loss needs backward computation.
I0428 19:41:03.934394 24729 net.cpp:200] relu1 needs backward computation.
I0428 19:41:03.934399 24729 net.cpp:200] ip1 needs backward computation.
I0428 19:41:03.934417 24729 net.cpp:200] pool1 needs backward computation.
I0428 19:41:03.934422 24729 net.cpp:200] conv1 needs backward computation.
I0428 19:41:03.934427 24729 net.cpp:200] pool0 needs backward computation.
I0428 19:41:03.934432 24729 net.cpp:200] conv0 needs backward computation.
I0428 19:41:03.934437 24729 net.cpp:202] mnist does not need backward computation.
I0428 19:41:03.934442 24729 net.cpp:244] This network produces output loss
I0428 19:41:03.934453 24729 net.cpp:257] Network initialization done.
I0428 19:41:03.934748 24729 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test353.prototxt
I0428 19:41:03.934780 24729 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:03.934862 24729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:41:03.934990 24729 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:03.935046 24729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:03.935065 24729 net.cpp:86] Creating Layer mnist
I0428 19:41:03.935071 24729 net.cpp:382] mnist -> data
I0428 19:41:03.935083 24729 net.cpp:382] mnist -> label
I0428 19:41:03.935194 24729 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:03.937366 24729 net.cpp:124] Setting up mnist
I0428 19:41:03.937394 24729 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:03.937402 24729 net.cpp:131] Top shape: 100 (100)
I0428 19:41:03.937407 24729 net.cpp:139] Memory required for data: 314000
I0428 19:41:03.937413 24729 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:03.937423 24729 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:03.937428 24729 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:03.937436 24729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:03.937446 24729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:03.937523 24729 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:03.937532 24729 net.cpp:131] Top shape: 100 (100)
I0428 19:41:03.937538 24729 net.cpp:131] Top shape: 100 (100)
I0428 19:41:03.937543 24729 net.cpp:139] Memory required for data: 314800
I0428 19:41:03.937549 24729 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:03.937561 24729 net.cpp:86] Creating Layer conv0
I0428 19:41:03.937568 24729 net.cpp:408] conv0 <- data
I0428 19:41:03.937577 24729 net.cpp:382] conv0 -> conv0
I0428 19:41:03.938422 24729 net.cpp:124] Setting up conv0
I0428 19:41:03.938436 24729 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:03.938441 24729 net.cpp:139] Memory required for data: 775600
I0428 19:41:03.938472 24729 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:03.938482 24729 net.cpp:86] Creating Layer pool0
I0428 19:41:03.938489 24729 net.cpp:408] pool0 <- conv0
I0428 19:41:03.938498 24729 net.cpp:382] pool0 -> pool0
I0428 19:41:03.938554 24729 net.cpp:124] Setting up pool0
I0428 19:41:03.938561 24729 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:03.938566 24729 net.cpp:139] Memory required for data: 890800
I0428 19:41:03.938571 24729 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:03.938583 24729 net.cpp:86] Creating Layer conv1
I0428 19:41:03.938591 24729 net.cpp:408] conv1 <- pool0
I0428 19:41:03.938598 24729 net.cpp:382] conv1 -> conv1
I0428 19:41:03.940069 24729 net.cpp:124] Setting up conv1
I0428 19:41:03.940086 24729 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:03.940109 24729 net.cpp:139] Memory required for data: 1146800
I0428 19:41:03.940121 24729 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:03.940131 24729 net.cpp:86] Creating Layer pool1
I0428 19:41:03.940148 24729 net.cpp:408] pool1 <- conv1
I0428 19:41:03.940158 24729 net.cpp:382] pool1 -> pool1
I0428 19:41:03.940199 24729 net.cpp:124] Setting up pool1
I0428 19:41:03.940209 24729 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:03.940215 24729 net.cpp:139] Memory required for data: 1210800
I0428 19:41:03.940222 24729 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:03.940232 24729 net.cpp:86] Creating Layer ip1
I0428 19:41:03.940237 24729 net.cpp:408] ip1 <- pool1
I0428 19:41:03.940246 24729 net.cpp:382] ip1 -> ip1
I0428 19:41:03.940359 24729 net.cpp:124] Setting up ip1
I0428 19:41:03.940369 24729 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:03.940374 24729 net.cpp:139] Memory required for data: 1214800
I0428 19:41:03.940387 24729 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:03.940394 24729 net.cpp:86] Creating Layer relu1
I0428 19:41:03.940402 24729 net.cpp:408] relu1 <- ip1
I0428 19:41:03.940409 24729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:03.941308 24729 net.cpp:124] Setting up relu1
I0428 19:41:03.941329 24729 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:03.941334 24729 net.cpp:139] Memory required for data: 1218800
I0428 19:41:03.941340 24729 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:41:03.941349 24729 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:41:03.941356 24729 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:41:03.941366 24729 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:41:03.941376 24729 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:41:03.941421 24729 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:41:03.941428 24729 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:03.941435 24729 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:03.941440 24729 net.cpp:139] Memory required for data: 1226800
I0428 19:41:03.941445 24729 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:03.941453 24729 net.cpp:86] Creating Layer accuracy
I0428 19:41:03.941458 24729 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:41:03.941465 24729 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:03.941488 24729 net.cpp:382] accuracy -> accuracy
I0428 19:41:03.941498 24729 net.cpp:124] Setting up accuracy
I0428 19:41:03.941507 24729 net.cpp:131] Top shape: (1)
I0428 19:41:03.941512 24729 net.cpp:139] Memory required for data: 1226804
I0428 19:41:03.941519 24729 layer_factory.hpp:77] Creating layer loss
I0428 19:41:03.941525 24729 net.cpp:86] Creating Layer loss
I0428 19:41:03.941530 24729 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:41:03.941545 24729 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:03.941552 24729 net.cpp:382] loss -> loss
I0428 19:41:03.941562 24729 layer_factory.hpp:77] Creating layer loss
I0428 19:41:03.941798 24729 net.cpp:124] Setting up loss
I0428 19:41:03.941809 24729 net.cpp:131] Top shape: (1)
I0428 19:41:03.941815 24729 net.cpp:134]     with loss weight 1
I0428 19:41:03.941825 24729 net.cpp:139] Memory required for data: 1226808
I0428 19:41:03.941835 24729 net.cpp:200] loss needs backward computation.
I0428 19:41:03.941843 24729 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:03.941849 24729 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:41:03.941854 24729 net.cpp:200] relu1 needs backward computation.
I0428 19:41:03.941859 24729 net.cpp:200] ip1 needs backward computation.
I0428 19:41:03.941864 24729 net.cpp:200] pool1 needs backward computation.
I0428 19:41:03.941871 24729 net.cpp:200] conv1 needs backward computation.
I0428 19:41:03.941876 24729 net.cpp:200] pool0 needs backward computation.
I0428 19:41:03.941881 24729 net.cpp:200] conv0 needs backward computation.
I0428 19:41:03.941889 24729 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:03.941895 24729 net.cpp:202] mnist does not need backward computation.
I0428 19:41:03.941900 24729 net.cpp:244] This network produces output accuracy
I0428 19:41:03.941905 24729 net.cpp:244] This network produces output loss
I0428 19:41:03.941920 24729 net.cpp:257] Network initialization done.
I0428 19:41:03.941967 24729 solver.cpp:56] Solver scaffolding done.
I0428 19:41:03.942188 24729 caffe.cpp:248] Starting Optimization
I0428 19:41:03.942194 24729 solver.cpp:273] Solving LeNet
I0428 19:41:03.942199 24729 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:03.942982 24729 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:03.944617 24729 blocking_queue.cpp:49] Waiting for data
I0428 19:41:04.020159 24736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:04.020547 24729 solver.cpp:398]     Test net output #0: accuracy = 0.0798
I0428 19:41:04.020571 24729 solver.cpp:398]     Test net output #1: loss = 2.32427 (* 1 = 2.32427 loss)
I0428 19:41:04.022244 24729 solver.cpp:219] Iteration 0 (-7.63496e-31 iter/s, 0.0800172s/100 iters), loss = 2.32583
I0428 19:41:04.022274 24729 solver.cpp:238]     Train net output #0: loss = 2.32583 (* 1 = 2.32583 loss)
I0428 19:41:04.022292 24729 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:04.088796 24729 solver.cpp:219] Iteration 100 (1503.4 iter/s, 0.0665161s/100 iters), loss = 0.716121
I0428 19:41:04.088845 24729 solver.cpp:238]     Train net output #0: loss = 0.716121 (* 1 = 0.716121 loss)
I0428 19:41:04.088874 24729 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:04.159431 24729 solver.cpp:219] Iteration 200 (1416.83 iter/s, 0.0705802s/100 iters), loss = 0.223533
I0428 19:41:04.159459 24729 solver.cpp:238]     Train net output #0: loss = 0.223533 (* 1 = 0.223533 loss)
I0428 19:41:04.159469 24729 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:04.219630 24729 solver.cpp:219] Iteration 300 (1662.12 iter/s, 0.0601642s/100 iters), loss = 0.310625
I0428 19:41:04.219656 24729 solver.cpp:238]     Train net output #0: loss = 0.310626 (* 1 = 0.310626 loss)
I0428 19:41:04.219681 24729 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:04.278424 24729 solver.cpp:219] Iteration 400 (1701.8 iter/s, 0.0587612s/100 iters), loss = 0.159466
I0428 19:41:04.278450 24729 solver.cpp:238]     Train net output #0: loss = 0.159466 (* 1 = 0.159466 loss)
I0428 19:41:04.278475 24729 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:04.338022 24729 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:04.410259 24736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:04.410658 24729 solver.cpp:398]     Test net output #0: accuracy = 0.9466
I0428 19:41:04.410684 24729 solver.cpp:398]     Test net output #1: loss = 0.176934 (* 1 = 0.176934 loss)
I0428 19:41:04.411409 24729 solver.cpp:219] Iteration 500 (752.162 iter/s, 0.13295s/100 iters), loss = 0.166639
I0428 19:41:04.411448 24729 solver.cpp:238]     Train net output #0: loss = 0.166639 (* 1 = 0.166639 loss)
I0428 19:41:04.411456 24729 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:04.481957 24729 solver.cpp:219] Iteration 600 (1418.45 iter/s, 0.0704995s/100 iters), loss = 0.226931
I0428 19:41:04.481986 24729 solver.cpp:238]     Train net output #0: loss = 0.226931 (* 1 = 0.226931 loss)
I0428 19:41:04.481994 24729 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:04.543499 24729 solver.cpp:219] Iteration 700 (1625.92 iter/s, 0.0615036s/100 iters), loss = 0.197211
I0428 19:41:04.543529 24729 solver.cpp:238]     Train net output #0: loss = 0.197211 (* 1 = 0.197211 loss)
I0428 19:41:04.543536 24729 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:04.606142 24729 solver.cpp:219] Iteration 800 (1597.36 iter/s, 0.0626034s/100 iters), loss = 0.398414
I0428 19:41:04.606170 24729 solver.cpp:238]     Train net output #0: loss = 0.398414 (* 1 = 0.398414 loss)
I0428 19:41:04.606178 24729 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:04.669764 24729 solver.cpp:219] Iteration 900 (1572.72 iter/s, 0.0635843s/100 iters), loss = 0.354261
I0428 19:41:04.669792 24729 solver.cpp:238]     Train net output #0: loss = 0.354261 (* 1 = 0.354261 loss)
I0428 19:41:04.669800 24729 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:04.691138 24735 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:04.732434 24729 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:04.733026 24729 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:04.733429 24729 solver.cpp:311] Iteration 1000, loss = 0.18006
I0428 19:41:04.733449 24729 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:04.785987 24736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:04.786391 24729 solver.cpp:398]     Test net output #0: accuracy = 0.9637
I0428 19:41:04.786413 24729 solver.cpp:398]     Test net output #1: loss = 0.119903 (* 1 = 0.119903 loss)
I0428 19:41:04.786418 24729 solver.cpp:316] Optimization Done.
I0428 19:41:04.786423 24729 caffe.cpp:259] Optimization Done.
