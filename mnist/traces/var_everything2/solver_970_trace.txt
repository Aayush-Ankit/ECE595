I0428 20:04:20.370863 30367 caffe.cpp:218] Using GPUs 0
I0428 20:04:20.408115 30367 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:20.921443 30367 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test970.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:20.921583 30367 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test970.prototxt
I0428 20:04:20.921999 30367 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:20.922021 30367 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:20.922122 30367 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:20.922201 30367 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:20.922299 30367 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:20.922322 30367 net.cpp:86] Creating Layer mnist
I0428 20:04:20.922334 30367 net.cpp:382] mnist -> data
I0428 20:04:20.922356 30367 net.cpp:382] mnist -> label
I0428 20:04:20.923454 30367 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:20.925909 30367 net.cpp:124] Setting up mnist
I0428 20:04:20.925927 30367 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:20.925933 30367 net.cpp:131] Top shape: 64 (64)
I0428 20:04:20.925936 30367 net.cpp:139] Memory required for data: 200960
I0428 20:04:20.925943 30367 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:20.925972 30367 net.cpp:86] Creating Layer conv0
I0428 20:04:20.925994 30367 net.cpp:408] conv0 <- data
I0428 20:04:20.926007 30367 net.cpp:382] conv0 -> conv0
I0428 20:04:21.175819 30367 net.cpp:124] Setting up conv0
I0428 20:04:21.175863 30367 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:21.175868 30367 net.cpp:139] Memory required for data: 1675520
I0428 20:04:21.175881 30367 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:21.175895 30367 net.cpp:86] Creating Layer pool0
I0428 20:04:21.175899 30367 net.cpp:408] pool0 <- conv0
I0428 20:04:21.175904 30367 net.cpp:382] pool0 -> pool0
I0428 20:04:21.175967 30367 net.cpp:124] Setting up pool0
I0428 20:04:21.175972 30367 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:21.175976 30367 net.cpp:139] Memory required for data: 2044160
I0428 20:04:21.175978 30367 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:21.175989 30367 net.cpp:86] Creating Layer conv1
I0428 20:04:21.175993 30367 net.cpp:408] conv1 <- pool0
I0428 20:04:21.175998 30367 net.cpp:382] conv1 -> conv1
I0428 20:04:21.178081 30367 net.cpp:124] Setting up conv1
I0428 20:04:21.178094 30367 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:21.178098 30367 net.cpp:139] Memory required for data: 3682560
I0428 20:04:21.178107 30367 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:21.178115 30367 net.cpp:86] Creating Layer pool1
I0428 20:04:21.178118 30367 net.cpp:408] pool1 <- conv1
I0428 20:04:21.178123 30367 net.cpp:382] pool1 -> pool1
I0428 20:04:21.178158 30367 net.cpp:124] Setting up pool1
I0428 20:04:21.178164 30367 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:21.178166 30367 net.cpp:139] Memory required for data: 4092160
I0428 20:04:21.178169 30367 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:21.178176 30367 net.cpp:86] Creating Layer ip1
I0428 20:04:21.178179 30367 net.cpp:408] ip1 <- pool1
I0428 20:04:21.178184 30367 net.cpp:382] ip1 -> ip1
I0428 20:04:21.179659 30367 net.cpp:124] Setting up ip1
I0428 20:04:21.179672 30367 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:21.179690 30367 net.cpp:139] Memory required for data: 4104960
I0428 20:04:21.179698 30367 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:21.179704 30367 net.cpp:86] Creating Layer relu1
I0428 20:04:21.179708 30367 net.cpp:408] relu1 <- ip1
I0428 20:04:21.179713 30367 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:21.179922 30367 net.cpp:124] Setting up relu1
I0428 20:04:21.179930 30367 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:21.179934 30367 net.cpp:139] Memory required for data: 4117760
I0428 20:04:21.179937 30367 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:21.179944 30367 net.cpp:86] Creating Layer ip2
I0428 20:04:21.179946 30367 net.cpp:408] ip2 <- ip1
I0428 20:04:21.179966 30367 net.cpp:382] ip2 -> ip2
I0428 20:04:21.181094 30367 net.cpp:124] Setting up ip2
I0428 20:04:21.181108 30367 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:21.181113 30367 net.cpp:139] Memory required for data: 4124160
I0428 20:04:21.181133 30367 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:21.181140 30367 net.cpp:86] Creating Layer relu2
I0428 20:04:21.181144 30367 net.cpp:408] relu2 <- ip2
I0428 20:04:21.181149 30367 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:21.181888 30367 net.cpp:124] Setting up relu2
I0428 20:04:21.181900 30367 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:21.181905 30367 net.cpp:139] Memory required for data: 4130560
I0428 20:04:21.181908 30367 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:21.181915 30367 net.cpp:86] Creating Layer ip3
I0428 20:04:21.181918 30367 net.cpp:408] ip3 <- ip2
I0428 20:04:21.181923 30367 net.cpp:382] ip3 -> ip3
I0428 20:04:21.182023 30367 net.cpp:124] Setting up ip3
I0428 20:04:21.182046 30367 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:21.182049 30367 net.cpp:139] Memory required for data: 4133120
I0428 20:04:21.182056 30367 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:21.182061 30367 net.cpp:86] Creating Layer relu3
I0428 20:04:21.182065 30367 net.cpp:408] relu3 <- ip3
I0428 20:04:21.182070 30367 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:21.182235 30367 net.cpp:124] Setting up relu3
I0428 20:04:21.182245 30367 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:21.182248 30367 net.cpp:139] Memory required for data: 4135680
I0428 20:04:21.182251 30367 layer_factory.hpp:77] Creating layer loss
I0428 20:04:21.182257 30367 net.cpp:86] Creating Layer loss
I0428 20:04:21.182260 30367 net.cpp:408] loss <- ip3
I0428 20:04:21.182265 30367 net.cpp:408] loss <- label
I0428 20:04:21.182271 30367 net.cpp:382] loss -> loss
I0428 20:04:21.182286 30367 layer_factory.hpp:77] Creating layer loss
I0428 20:04:21.182507 30367 net.cpp:124] Setting up loss
I0428 20:04:21.182515 30367 net.cpp:131] Top shape: (1)
I0428 20:04:21.182518 30367 net.cpp:134]     with loss weight 1
I0428 20:04:21.182533 30367 net.cpp:139] Memory required for data: 4135684
I0428 20:04:21.182535 30367 net.cpp:200] loss needs backward computation.
I0428 20:04:21.182539 30367 net.cpp:200] relu3 needs backward computation.
I0428 20:04:21.182543 30367 net.cpp:200] ip3 needs backward computation.
I0428 20:04:21.182545 30367 net.cpp:200] relu2 needs backward computation.
I0428 20:04:21.182548 30367 net.cpp:200] ip2 needs backward computation.
I0428 20:04:21.182551 30367 net.cpp:200] relu1 needs backward computation.
I0428 20:04:21.182554 30367 net.cpp:200] ip1 needs backward computation.
I0428 20:04:21.182557 30367 net.cpp:200] pool1 needs backward computation.
I0428 20:04:21.182560 30367 net.cpp:200] conv1 needs backward computation.
I0428 20:04:21.182564 30367 net.cpp:200] pool0 needs backward computation.
I0428 20:04:21.182566 30367 net.cpp:200] conv0 needs backward computation.
I0428 20:04:21.182569 30367 net.cpp:202] mnist does not need backward computation.
I0428 20:04:21.182572 30367 net.cpp:244] This network produces output loss
I0428 20:04:21.182584 30367 net.cpp:257] Network initialization done.
I0428 20:04:21.182942 30367 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test970.prototxt
I0428 20:04:21.182999 30367 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:21.183086 30367 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:21.183166 30367 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:21.183209 30367 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:21.183221 30367 net.cpp:86] Creating Layer mnist
I0428 20:04:21.183225 30367 net.cpp:382] mnist -> data
I0428 20:04:21.183233 30367 net.cpp:382] mnist -> label
I0428 20:04:21.183315 30367 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:21.184434 30367 net.cpp:124] Setting up mnist
I0428 20:04:21.184461 30367 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:21.184466 30367 net.cpp:131] Top shape: 100 (100)
I0428 20:04:21.184469 30367 net.cpp:139] Memory required for data: 314000
I0428 20:04:21.184473 30367 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:21.184479 30367 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:21.184484 30367 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:21.184487 30367 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:21.184494 30367 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:21.184581 30367 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:21.184587 30367 net.cpp:131] Top shape: 100 (100)
I0428 20:04:21.184592 30367 net.cpp:131] Top shape: 100 (100)
I0428 20:04:21.184593 30367 net.cpp:139] Memory required for data: 314800
I0428 20:04:21.184597 30367 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:21.184605 30367 net.cpp:86] Creating Layer conv0
I0428 20:04:21.184608 30367 net.cpp:408] conv0 <- data
I0428 20:04:21.184613 30367 net.cpp:382] conv0 -> conv0
I0428 20:04:21.186316 30367 net.cpp:124] Setting up conv0
I0428 20:04:21.186344 30367 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:21.186348 30367 net.cpp:139] Memory required for data: 2618800
I0428 20:04:21.186357 30367 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:21.186362 30367 net.cpp:86] Creating Layer pool0
I0428 20:04:21.186367 30367 net.cpp:408] pool0 <- conv0
I0428 20:04:21.186370 30367 net.cpp:382] pool0 -> pool0
I0428 20:04:21.186403 30367 net.cpp:124] Setting up pool0
I0428 20:04:21.186408 30367 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:21.186410 30367 net.cpp:139] Memory required for data: 3194800
I0428 20:04:21.186414 30367 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:21.186420 30367 net.cpp:86] Creating Layer conv1
I0428 20:04:21.186424 30367 net.cpp:408] conv1 <- pool0
I0428 20:04:21.186429 30367 net.cpp:382] conv1 -> conv1
I0428 20:04:21.188045 30367 net.cpp:124] Setting up conv1
I0428 20:04:21.188072 30367 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:21.188076 30367 net.cpp:139] Memory required for data: 5754800
I0428 20:04:21.188099 30367 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:21.188107 30367 net.cpp:86] Creating Layer pool1
I0428 20:04:21.188110 30367 net.cpp:408] pool1 <- conv1
I0428 20:04:21.188115 30367 net.cpp:382] pool1 -> pool1
I0428 20:04:21.188150 30367 net.cpp:124] Setting up pool1
I0428 20:04:21.188155 30367 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:21.188158 30367 net.cpp:139] Memory required for data: 6394800
I0428 20:04:21.188161 30367 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:21.188168 30367 net.cpp:86] Creating Layer ip1
I0428 20:04:21.188170 30367 net.cpp:408] ip1 <- pool1
I0428 20:04:21.188181 30367 net.cpp:382] ip1 -> ip1
I0428 20:04:21.188771 30367 net.cpp:124] Setting up ip1
I0428 20:04:21.188778 30367 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:21.188807 30367 net.cpp:139] Memory required for data: 6414800
I0428 20:04:21.188837 30367 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:21.188841 30367 net.cpp:86] Creating Layer relu1
I0428 20:04:21.188850 30367 net.cpp:408] relu1 <- ip1
I0428 20:04:21.188855 30367 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:21.189035 30367 net.cpp:124] Setting up relu1
I0428 20:04:21.189044 30367 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:21.189047 30367 net.cpp:139] Memory required for data: 6434800
I0428 20:04:21.189050 30367 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:21.189057 30367 net.cpp:86] Creating Layer ip2
I0428 20:04:21.189060 30367 net.cpp:408] ip2 <- ip1
I0428 20:04:21.189065 30367 net.cpp:382] ip2 -> ip2
I0428 20:04:21.189265 30367 net.cpp:124] Setting up ip2
I0428 20:04:21.189272 30367 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:21.189275 30367 net.cpp:139] Memory required for data: 6444800
I0428 20:04:21.189281 30367 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:21.189285 30367 net.cpp:86] Creating Layer relu2
I0428 20:04:21.189290 30367 net.cpp:408] relu2 <- ip2
I0428 20:04:21.189293 30367 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:21.189438 30367 net.cpp:124] Setting up relu2
I0428 20:04:21.189447 30367 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:21.189450 30367 net.cpp:139] Memory required for data: 6454800
I0428 20:04:21.189453 30367 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:21.189460 30367 net.cpp:86] Creating Layer ip3
I0428 20:04:21.189462 30367 net.cpp:408] ip3 <- ip2
I0428 20:04:21.189467 30367 net.cpp:382] ip3 -> ip3
I0428 20:04:21.189584 30367 net.cpp:124] Setting up ip3
I0428 20:04:21.189590 30367 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:21.189594 30367 net.cpp:139] Memory required for data: 6458800
I0428 20:04:21.189600 30367 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:21.189604 30367 net.cpp:86] Creating Layer relu3
I0428 20:04:21.189607 30367 net.cpp:408] relu3 <- ip3
I0428 20:04:21.189611 30367 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:21.190407 30367 net.cpp:124] Setting up relu3
I0428 20:04:21.190419 30367 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:21.190438 30367 net.cpp:139] Memory required for data: 6462800
I0428 20:04:21.190441 30367 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:21.190446 30367 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:21.190450 30367 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:21.190455 30367 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:21.190461 30367 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:21.190533 30367 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:21.190541 30367 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:21.190544 30367 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:21.190547 30367 net.cpp:139] Memory required for data: 6470800
I0428 20:04:21.190551 30367 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:21.190556 30367 net.cpp:86] Creating Layer accuracy
I0428 20:04:21.190559 30367 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:21.190563 30367 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:21.190568 30367 net.cpp:382] accuracy -> accuracy
I0428 20:04:21.190575 30367 net.cpp:124] Setting up accuracy
I0428 20:04:21.190579 30367 net.cpp:131] Top shape: (1)
I0428 20:04:21.190582 30367 net.cpp:139] Memory required for data: 6470804
I0428 20:04:21.190585 30367 layer_factory.hpp:77] Creating layer loss
I0428 20:04:21.190590 30367 net.cpp:86] Creating Layer loss
I0428 20:04:21.190593 30367 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:21.190596 30367 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:21.190615 30367 net.cpp:382] loss -> loss
I0428 20:04:21.190620 30367 layer_factory.hpp:77] Creating layer loss
I0428 20:04:21.190860 30367 net.cpp:124] Setting up loss
I0428 20:04:21.190871 30367 net.cpp:131] Top shape: (1)
I0428 20:04:21.190881 30367 net.cpp:134]     with loss weight 1
I0428 20:04:21.190896 30367 net.cpp:139] Memory required for data: 6470808
I0428 20:04:21.190901 30367 net.cpp:200] loss needs backward computation.
I0428 20:04:21.190906 30367 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:21.190909 30367 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:21.190912 30367 net.cpp:200] relu3 needs backward computation.
I0428 20:04:21.190915 30367 net.cpp:200] ip3 needs backward computation.
I0428 20:04:21.190918 30367 net.cpp:200] relu2 needs backward computation.
I0428 20:04:21.190922 30367 net.cpp:200] ip2 needs backward computation.
I0428 20:04:21.190923 30367 net.cpp:200] relu1 needs backward computation.
I0428 20:04:21.190927 30367 net.cpp:200] ip1 needs backward computation.
I0428 20:04:21.190929 30367 net.cpp:200] pool1 needs backward computation.
I0428 20:04:21.190932 30367 net.cpp:200] conv1 needs backward computation.
I0428 20:04:21.190937 30367 net.cpp:200] pool0 needs backward computation.
I0428 20:04:21.190939 30367 net.cpp:200] conv0 needs backward computation.
I0428 20:04:21.190943 30367 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:21.190946 30367 net.cpp:202] mnist does not need backward computation.
I0428 20:04:21.190949 30367 net.cpp:244] This network produces output accuracy
I0428 20:04:21.190953 30367 net.cpp:244] This network produces output loss
I0428 20:04:21.190963 30367 net.cpp:257] Network initialization done.
I0428 20:04:21.191004 30367 solver.cpp:56] Solver scaffolding done.
I0428 20:04:21.191347 30367 caffe.cpp:248] Starting Optimization
I0428 20:04:21.191354 30367 solver.cpp:273] Solving LeNet
I0428 20:04:21.191355 30367 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:21.191623 30367 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:21.197698 30367 blocking_queue.cpp:49] Waiting for data
I0428 20:04:21.268138 30374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:21.268774 30367 solver.cpp:398]     Test net output #0: accuracy = 0.0825
I0428 20:04:21.268807 30367 solver.cpp:398]     Test net output #1: loss = 2.32799 (* 1 = 2.32799 loss)
I0428 20:04:21.272570 30367 solver.cpp:219] Iteration 0 (0 iter/s, 0.0811909s/100 iters), loss = 2.29743
I0428 20:04:21.272609 30367 solver.cpp:238]     Train net output #0: loss = 2.29743 (* 1 = 2.29743 loss)
I0428 20:04:21.272619 30367 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:21.431275 30367 solver.cpp:219] Iteration 100 (630.248 iter/s, 0.158668s/100 iters), loss = 0.300976
I0428 20:04:21.431318 30367 solver.cpp:238]     Train net output #0: loss = 0.300976 (* 1 = 0.300976 loss)
I0428 20:04:21.431324 30367 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:21.586472 30367 solver.cpp:219] Iteration 200 (644.511 iter/s, 0.155156s/100 iters), loss = 0.194966
I0428 20:04:21.586513 30367 solver.cpp:238]     Train net output #0: loss = 0.194966 (* 1 = 0.194966 loss)
I0428 20:04:21.586519 30367 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:21.741397 30367 solver.cpp:219] Iteration 300 (645.695 iter/s, 0.154872s/100 iters), loss = 0.151008
I0428 20:04:21.741438 30367 solver.cpp:238]     Train net output #0: loss = 0.151008 (* 1 = 0.151008 loss)
I0428 20:04:21.741446 30367 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:21.898262 30367 solver.cpp:219] Iteration 400 (637.772 iter/s, 0.156796s/100 iters), loss = 0.0556702
I0428 20:04:21.898304 30367 solver.cpp:238]     Train net output #0: loss = 0.0556702 (* 1 = 0.0556702 loss)
I0428 20:04:21.898310 30367 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:22.054333 30367 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:22.112265 30374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:22.113699 30367 solver.cpp:398]     Test net output #0: accuracy = 0.9648
I0428 20:04:22.113721 30367 solver.cpp:398]     Test net output #1: loss = 0.113302 (* 1 = 0.113302 loss)
I0428 20:04:22.115278 30367 solver.cpp:219] Iteration 500 (460.882 iter/s, 0.216975s/100 iters), loss = 0.126957
I0428 20:04:22.115332 30367 solver.cpp:238]     Train net output #0: loss = 0.126957 (* 1 = 0.126957 loss)
I0428 20:04:22.115339 30367 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:22.269964 30367 solver.cpp:219] Iteration 600 (646.679 iter/s, 0.154636s/100 iters), loss = 0.0907153
I0428 20:04:22.270002 30367 solver.cpp:238]     Train net output #0: loss = 0.0907153 (* 1 = 0.0907153 loss)
I0428 20:04:22.270009 30367 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:22.428048 30367 solver.cpp:219] Iteration 700 (632.776 iter/s, 0.158034s/100 iters), loss = 0.14276
I0428 20:04:22.428091 30367 solver.cpp:238]     Train net output #0: loss = 0.14276 (* 1 = 0.14276 loss)
I0428 20:04:22.428113 30367 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:22.587298 30367 solver.cpp:219] Iteration 800 (628.159 iter/s, 0.159195s/100 iters), loss = 0.315419
I0428 20:04:22.587334 30367 solver.cpp:238]     Train net output #0: loss = 0.315419 (* 1 = 0.315419 loss)
I0428 20:04:22.587342 30367 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:22.743489 30367 solver.cpp:219] Iteration 900 (640.399 iter/s, 0.156153s/100 iters), loss = 0.159124
I0428 20:04:22.743532 30367 solver.cpp:238]     Train net output #0: loss = 0.159124 (* 1 = 0.159124 loss)
I0428 20:04:22.743541 30367 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:22.794468 30373 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:22.896560 30367 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:22.899096 30367 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:22.900468 30367 solver.cpp:311] Iteration 1000, loss = 0.0856181
I0428 20:04:22.900485 30367 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:22.956893 30374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:22.958282 30367 solver.cpp:398]     Test net output #0: accuracy = 0.9788
I0428 20:04:22.958303 30367 solver.cpp:398]     Test net output #1: loss = 0.0668619 (* 1 = 0.0668619 loss)
I0428 20:04:22.958308 30367 solver.cpp:316] Optimization Done.
I0428 20:04:22.958312 30367 caffe.cpp:259] Optimization Done.
