I0428 19:47:22.399997 26176 caffe.cpp:218] Using GPUs 0
I0428 19:47:22.440022 26176 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:22.958307 26176 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test513.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:22.958451 26176 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test513.prototxt
I0428 19:47:22.958822 26176 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:22.958842 26176 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:22.958932 26176 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:22.959008 26176 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:22.959108 26176 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:22.959133 26176 net.cpp:86] Creating Layer mnist
I0428 19:47:22.959141 26176 net.cpp:382] mnist -> data
I0428 19:47:22.959163 26176 net.cpp:382] mnist -> label
I0428 19:47:22.960367 26176 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:22.962919 26176 net.cpp:124] Setting up mnist
I0428 19:47:22.962937 26176 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:22.962945 26176 net.cpp:131] Top shape: 64 (64)
I0428 19:47:22.962949 26176 net.cpp:139] Memory required for data: 200960
I0428 19:47:22.962956 26176 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:22.962972 26176 net.cpp:86] Creating Layer conv0
I0428 19:47:22.962978 26176 net.cpp:408] conv0 <- data
I0428 19:47:22.962991 26176 net.cpp:382] conv0 -> conv0
I0428 19:47:23.256220 26176 net.cpp:124] Setting up conv0
I0428 19:47:23.256253 26176 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:23.256258 26176 net.cpp:139] Memory required for data: 938240
I0428 19:47:23.256297 26176 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:23.256312 26176 net.cpp:86] Creating Layer pool0
I0428 19:47:23.256317 26176 net.cpp:408] pool0 <- conv0
I0428 19:47:23.256325 26176 net.cpp:382] pool0 -> pool0
I0428 19:47:23.256381 26176 net.cpp:124] Setting up pool0
I0428 19:47:23.256391 26176 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:23.256394 26176 net.cpp:139] Memory required for data: 1122560
I0428 19:47:23.256397 26176 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:23.256410 26176 net.cpp:86] Creating Layer conv1
I0428 19:47:23.256414 26176 net.cpp:408] conv1 <- pool0
I0428 19:47:23.256420 26176 net.cpp:382] conv1 -> conv1
I0428 19:47:23.258589 26176 net.cpp:124] Setting up conv1
I0428 19:47:23.258606 26176 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:23.258611 26176 net.cpp:139] Memory required for data: 1155328
I0428 19:47:23.258621 26176 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:23.258630 26176 net.cpp:86] Creating Layer pool1
I0428 19:47:23.258636 26176 net.cpp:408] pool1 <- conv1
I0428 19:47:23.258642 26176 net.cpp:382] pool1 -> pool1
I0428 19:47:23.258687 26176 net.cpp:124] Setting up pool1
I0428 19:47:23.258694 26176 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:23.258697 26176 net.cpp:139] Memory required for data: 1163520
I0428 19:47:23.258702 26176 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:23.258710 26176 net.cpp:86] Creating Layer ip1
I0428 19:47:23.258714 26176 net.cpp:408] ip1 <- pool1
I0428 19:47:23.258719 26176 net.cpp:382] ip1 -> ip1
I0428 19:47:23.258842 26176 net.cpp:124] Setting up ip1
I0428 19:47:23.258852 26176 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:23.258855 26176 net.cpp:139] Memory required for data: 1169920
I0428 19:47:23.258864 26176 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:23.258870 26176 net.cpp:86] Creating Layer relu1
I0428 19:47:23.258874 26176 net.cpp:408] relu1 <- ip1
I0428 19:47:23.258879 26176 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:23.259078 26176 net.cpp:124] Setting up relu1
I0428 19:47:23.259090 26176 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:23.259094 26176 net.cpp:139] Memory required for data: 1176320
I0428 19:47:23.259097 26176 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:23.259105 26176 net.cpp:86] Creating Layer ip2
I0428 19:47:23.259109 26176 net.cpp:408] ip2 <- ip1
I0428 19:47:23.259114 26176 net.cpp:382] ip2 -> ip2
I0428 19:47:23.259227 26176 net.cpp:124] Setting up ip2
I0428 19:47:23.259235 26176 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:23.259239 26176 net.cpp:139] Memory required for data: 1178880
I0428 19:47:23.259245 26176 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:23.259253 26176 net.cpp:86] Creating Layer relu2
I0428 19:47:23.259256 26176 net.cpp:408] relu2 <- ip2
I0428 19:47:23.259261 26176 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:23.260107 26176 net.cpp:124] Setting up relu2
I0428 19:47:23.260123 26176 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:23.260128 26176 net.cpp:139] Memory required for data: 1181440
I0428 19:47:23.260133 26176 layer_factory.hpp:77] Creating layer loss
I0428 19:47:23.260139 26176 net.cpp:86] Creating Layer loss
I0428 19:47:23.260143 26176 net.cpp:408] loss <- ip2
I0428 19:47:23.260149 26176 net.cpp:408] loss <- label
I0428 19:47:23.260155 26176 net.cpp:382] loss -> loss
I0428 19:47:23.260179 26176 layer_factory.hpp:77] Creating layer loss
I0428 19:47:23.260463 26176 net.cpp:124] Setting up loss
I0428 19:47:23.260475 26176 net.cpp:131] Top shape: (1)
I0428 19:47:23.260479 26176 net.cpp:134]     with loss weight 1
I0428 19:47:23.260495 26176 net.cpp:139] Memory required for data: 1181444
I0428 19:47:23.260499 26176 net.cpp:200] loss needs backward computation.
I0428 19:47:23.260504 26176 net.cpp:200] relu2 needs backward computation.
I0428 19:47:23.260509 26176 net.cpp:200] ip2 needs backward computation.
I0428 19:47:23.260511 26176 net.cpp:200] relu1 needs backward computation.
I0428 19:47:23.260515 26176 net.cpp:200] ip1 needs backward computation.
I0428 19:47:23.260519 26176 net.cpp:200] pool1 needs backward computation.
I0428 19:47:23.260535 26176 net.cpp:200] conv1 needs backward computation.
I0428 19:47:23.260540 26176 net.cpp:200] pool0 needs backward computation.
I0428 19:47:23.260542 26176 net.cpp:200] conv0 needs backward computation.
I0428 19:47:23.260547 26176 net.cpp:202] mnist does not need backward computation.
I0428 19:47:23.260550 26176 net.cpp:244] This network produces output loss
I0428 19:47:23.260560 26176 net.cpp:257] Network initialization done.
I0428 19:47:23.260917 26176 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test513.prototxt
I0428 19:47:23.260948 26176 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:23.261049 26176 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:23.261124 26176 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:23.261178 26176 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:23.261191 26176 net.cpp:86] Creating Layer mnist
I0428 19:47:23.261196 26176 net.cpp:382] mnist -> data
I0428 19:47:23.261206 26176 net.cpp:382] mnist -> label
I0428 19:47:23.261307 26176 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:23.263499 26176 net.cpp:124] Setting up mnist
I0428 19:47:23.263514 26176 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:23.263520 26176 net.cpp:131] Top shape: 100 (100)
I0428 19:47:23.263525 26176 net.cpp:139] Memory required for data: 314000
I0428 19:47:23.263530 26176 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:23.263542 26176 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:23.263546 26176 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:23.263552 26176 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:23.263561 26176 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:23.263679 26176 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:23.263701 26176 net.cpp:131] Top shape: 100 (100)
I0428 19:47:23.263706 26176 net.cpp:131] Top shape: 100 (100)
I0428 19:47:23.263710 26176 net.cpp:139] Memory required for data: 314800
I0428 19:47:23.263713 26176 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:23.263723 26176 net.cpp:86] Creating Layer conv0
I0428 19:47:23.263727 26176 net.cpp:408] conv0 <- data
I0428 19:47:23.263734 26176 net.cpp:382] conv0 -> conv0
I0428 19:47:23.265611 26176 net.cpp:124] Setting up conv0
I0428 19:47:23.265630 26176 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:23.265633 26176 net.cpp:139] Memory required for data: 1466800
I0428 19:47:23.265645 26176 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:23.265652 26176 net.cpp:86] Creating Layer pool0
I0428 19:47:23.265657 26176 net.cpp:408] pool0 <- conv0
I0428 19:47:23.265662 26176 net.cpp:382] pool0 -> pool0
I0428 19:47:23.265705 26176 net.cpp:124] Setting up pool0
I0428 19:47:23.265712 26176 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:23.265717 26176 net.cpp:139] Memory required for data: 1754800
I0428 19:47:23.265719 26176 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:23.265730 26176 net.cpp:86] Creating Layer conv1
I0428 19:47:23.265734 26176 net.cpp:408] conv1 <- pool0
I0428 19:47:23.265740 26176 net.cpp:382] conv1 -> conv1
I0428 19:47:23.268026 26176 net.cpp:124] Setting up conv1
I0428 19:47:23.268043 26176 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:23.268048 26176 net.cpp:139] Memory required for data: 1806000
I0428 19:47:23.268059 26176 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:23.268065 26176 net.cpp:86] Creating Layer pool1
I0428 19:47:23.268069 26176 net.cpp:408] pool1 <- conv1
I0428 19:47:23.268075 26176 net.cpp:382] pool1 -> pool1
I0428 19:47:23.268127 26176 net.cpp:124] Setting up pool1
I0428 19:47:23.268134 26176 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:23.268137 26176 net.cpp:139] Memory required for data: 1818800
I0428 19:47:23.268141 26176 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:23.268148 26176 net.cpp:86] Creating Layer ip1
I0428 19:47:23.268162 26176 net.cpp:408] ip1 <- pool1
I0428 19:47:23.268167 26176 net.cpp:382] ip1 -> ip1
I0428 19:47:23.268335 26176 net.cpp:124] Setting up ip1
I0428 19:47:23.268345 26176 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:23.268360 26176 net.cpp:139] Memory required for data: 1828800
I0428 19:47:23.268369 26176 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:23.268375 26176 net.cpp:86] Creating Layer relu1
I0428 19:47:23.268379 26176 net.cpp:408] relu1 <- ip1
I0428 19:47:23.268384 26176 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:23.268582 26176 net.cpp:124] Setting up relu1
I0428 19:47:23.268594 26176 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:23.268597 26176 net.cpp:139] Memory required for data: 1838800
I0428 19:47:23.268601 26176 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:23.268610 26176 net.cpp:86] Creating Layer ip2
I0428 19:47:23.268613 26176 net.cpp:408] ip2 <- ip1
I0428 19:47:23.268620 26176 net.cpp:382] ip2 -> ip2
I0428 19:47:23.268735 26176 net.cpp:124] Setting up ip2
I0428 19:47:23.268744 26176 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:23.268754 26176 net.cpp:139] Memory required for data: 1842800
I0428 19:47:23.268761 26176 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:23.268766 26176 net.cpp:86] Creating Layer relu2
I0428 19:47:23.268777 26176 net.cpp:408] relu2 <- ip2
I0428 19:47:23.268782 26176 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:23.268971 26176 net.cpp:124] Setting up relu2
I0428 19:47:23.268982 26176 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:23.268986 26176 net.cpp:139] Memory required for data: 1846800
I0428 19:47:23.268990 26176 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:47:23.268996 26176 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:47:23.269001 26176 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:47:23.269006 26176 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:47:23.269024 26176 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:47:23.269067 26176 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:47:23.269073 26176 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:23.269076 26176 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:23.269080 26176 net.cpp:139] Memory required for data: 1854800
I0428 19:47:23.269083 26176 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:23.269098 26176 net.cpp:86] Creating Layer accuracy
I0428 19:47:23.269101 26176 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:47:23.269106 26176 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:23.269111 26176 net.cpp:382] accuracy -> accuracy
I0428 19:47:23.269120 26176 net.cpp:124] Setting up accuracy
I0428 19:47:23.269124 26176 net.cpp:131] Top shape: (1)
I0428 19:47:23.269129 26176 net.cpp:139] Memory required for data: 1854804
I0428 19:47:23.269131 26176 layer_factory.hpp:77] Creating layer loss
I0428 19:47:23.269139 26176 net.cpp:86] Creating Layer loss
I0428 19:47:23.269141 26176 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:47:23.269146 26176 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:23.269157 26176 net.cpp:382] loss -> loss
I0428 19:47:23.269165 26176 layer_factory.hpp:77] Creating layer loss
I0428 19:47:23.269456 26176 net.cpp:124] Setting up loss
I0428 19:47:23.269467 26176 net.cpp:131] Top shape: (1)
I0428 19:47:23.269471 26176 net.cpp:134]     with loss weight 1
I0428 19:47:23.269479 26176 net.cpp:139] Memory required for data: 1854808
I0428 19:47:23.269482 26176 net.cpp:200] loss needs backward computation.
I0428 19:47:23.269487 26176 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:23.269492 26176 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:47:23.269496 26176 net.cpp:200] relu2 needs backward computation.
I0428 19:47:23.269500 26176 net.cpp:200] ip2 needs backward computation.
I0428 19:47:23.269503 26176 net.cpp:200] relu1 needs backward computation.
I0428 19:47:23.269507 26176 net.cpp:200] ip1 needs backward computation.
I0428 19:47:23.269511 26176 net.cpp:200] pool1 needs backward computation.
I0428 19:47:23.269515 26176 net.cpp:200] conv1 needs backward computation.
I0428 19:47:23.269520 26176 net.cpp:200] pool0 needs backward computation.
I0428 19:47:23.269525 26176 net.cpp:200] conv0 needs backward computation.
I0428 19:47:23.269528 26176 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:23.269533 26176 net.cpp:202] mnist does not need backward computation.
I0428 19:47:23.269536 26176 net.cpp:244] This network produces output accuracy
I0428 19:47:23.269541 26176 net.cpp:244] This network produces output loss
I0428 19:47:23.269551 26176 net.cpp:257] Network initialization done.
I0428 19:47:23.269596 26176 solver.cpp:56] Solver scaffolding done.
I0428 19:47:23.269913 26176 caffe.cpp:248] Starting Optimization
I0428 19:47:23.269922 26176 solver.cpp:273] Solving LeNet
I0428 19:47:23.269925 26176 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:23.270781 26176 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:23.274391 26176 blocking_queue.cpp:49] Waiting for data
I0428 19:47:23.345957 26183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:23.346453 26176 solver.cpp:398]     Test net output #0: accuracy = 0.0753
I0428 19:47:23.346478 26176 solver.cpp:398]     Test net output #1: loss = 2.30322 (* 1 = 2.30322 loss)
I0428 19:47:23.348345 26176 solver.cpp:219] Iteration 0 (0 iter/s, 0.0783876s/100 iters), loss = 2.30732
I0428 19:47:23.348376 26176 solver.cpp:238]     Train net output #0: loss = 2.30732 (* 1 = 2.30732 loss)
I0428 19:47:23.348389 26176 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:23.417654 26176 solver.cpp:219] Iteration 100 (1443.66 iter/s, 0.0692685s/100 iters), loss = 0.71725
I0428 19:47:23.417680 26176 solver.cpp:238]     Train net output #0: loss = 0.71725 (* 1 = 0.71725 loss)
I0428 19:47:23.417686 26176 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:23.480424 26176 solver.cpp:219] Iteration 200 (1593.95 iter/s, 0.0627374s/100 iters), loss = 0.466075
I0428 19:47:23.480474 26176 solver.cpp:238]     Train net output #0: loss = 0.466075 (* 1 = 0.466075 loss)
I0428 19:47:23.480480 26176 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:23.542671 26176 solver.cpp:219] Iteration 300 (1607.56 iter/s, 0.062206s/100 iters), loss = 0.593455
I0428 19:47:23.542709 26176 solver.cpp:238]     Train net output #0: loss = 0.593455 (* 1 = 0.593455 loss)
I0428 19:47:23.542716 26176 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:23.604137 26176 solver.cpp:219] Iteration 400 (1627.73 iter/s, 0.0614351s/100 iters), loss = 0.537401
I0428 19:47:23.604176 26176 solver.cpp:238]     Train net output #0: loss = 0.537401 (* 1 = 0.537401 loss)
I0428 19:47:23.604182 26176 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:23.669569 26176 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:23.741847 26183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:23.742496 26176 solver.cpp:398]     Test net output #0: accuracy = 0.8722
I0428 19:47:23.742537 26176 solver.cpp:398]     Test net output #1: loss = 0.4377 (* 1 = 0.4377 loss)
I0428 19:47:23.743664 26176 solver.cpp:219] Iteration 500 (716.912 iter/s, 0.139487s/100 iters), loss = 0.45524
I0428 19:47:23.743707 26176 solver.cpp:238]     Train net output #0: loss = 0.45524 (* 1 = 0.45524 loss)
I0428 19:47:23.743723 26176 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:23.831930 26176 solver.cpp:219] Iteration 600 (1133.61 iter/s, 0.0882135s/100 iters), loss = 0.222674
I0428 19:47:23.831977 26176 solver.cpp:238]     Train net output #0: loss = 0.222674 (* 1 = 0.222674 loss)
I0428 19:47:23.831990 26176 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:23.907382 26176 solver.cpp:219] Iteration 700 (1326.29 iter/s, 0.0753981s/100 iters), loss = 0.350631
I0428 19:47:23.907415 26176 solver.cpp:238]     Train net output #0: loss = 0.350631 (* 1 = 0.350631 loss)
I0428 19:47:23.907423 26176 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:23.974874 26176 solver.cpp:219] Iteration 800 (1482.54 iter/s, 0.0674518s/100 iters), loss = 0.418191
I0428 19:47:23.974905 26176 solver.cpp:238]     Train net output #0: loss = 0.418191 (* 1 = 0.418191 loss)
I0428 19:47:23.974913 26176 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:24.040364 26176 solver.cpp:219] Iteration 900 (1527.88 iter/s, 0.06545s/100 iters), loss = 0.303794
I0428 19:47:24.040395 26176 solver.cpp:238]     Train net output #0: loss = 0.303794 (* 1 = 0.303794 loss)
I0428 19:47:24.040401 26176 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:24.062489 26182 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:24.105895 26176 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:24.106513 26176 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:24.106911 26176 solver.cpp:311] Iteration 1000, loss = 0.248687
I0428 19:47:24.106931 26176 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:24.182395 26183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:24.182917 26176 solver.cpp:398]     Test net output #0: accuracy = 0.9399
I0428 19:47:24.182945 26176 solver.cpp:398]     Test net output #1: loss = 0.205786 (* 1 = 0.205786 loss)
I0428 19:47:24.182952 26176 solver.cpp:316] Optimization Done.
I0428 19:47:24.182956 26176 caffe.cpp:259] Optimization Done.
