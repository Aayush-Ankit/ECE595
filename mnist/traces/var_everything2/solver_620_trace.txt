I0428 19:50:58.749992 27167 caffe.cpp:218] Using GPUs 0
I0428 19:50:58.787636 27167 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:59.298799 27167 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test620.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:59.298941 27167 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test620.prototxt
I0428 19:50:59.299358 27167 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:59.299377 27167 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:59.299481 27167 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:59.299562 27167 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:59.299660 27167 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:59.299684 27167 net.cpp:86] Creating Layer mnist
I0428 19:50:59.299692 27167 net.cpp:382] mnist -> data
I0428 19:50:59.299715 27167 net.cpp:382] mnist -> label
I0428 19:50:59.300804 27167 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:59.303266 27167 net.cpp:124] Setting up mnist
I0428 19:50:59.303283 27167 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:59.303292 27167 net.cpp:131] Top shape: 64 (64)
I0428 19:50:59.303295 27167 net.cpp:139] Memory required for data: 200960
I0428 19:50:59.303303 27167 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:59.303318 27167 net.cpp:86] Creating Layer conv0
I0428 19:50:59.303339 27167 net.cpp:408] conv0 <- data
I0428 19:50:59.303354 27167 net.cpp:382] conv0 -> conv0
I0428 19:50:59.578821 27167 net.cpp:124] Setting up conv0
I0428 19:50:59.578847 27167 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:59.578851 27167 net.cpp:139] Memory required for data: 938240
I0428 19:50:59.578866 27167 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:59.578877 27167 net.cpp:86] Creating Layer pool0
I0428 19:50:59.578882 27167 net.cpp:408] pool0 <- conv0
I0428 19:50:59.578887 27167 net.cpp:382] pool0 -> pool0
I0428 19:50:59.578934 27167 net.cpp:124] Setting up pool0
I0428 19:50:59.578939 27167 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:59.578943 27167 net.cpp:139] Memory required for data: 1122560
I0428 19:50:59.578945 27167 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:59.578955 27167 net.cpp:86] Creating Layer conv1
I0428 19:50:59.578958 27167 net.cpp:408] conv1 <- pool0
I0428 19:50:59.578963 27167 net.cpp:382] conv1 -> conv1
I0428 19:50:59.581775 27167 net.cpp:124] Setting up conv1
I0428 19:50:59.581790 27167 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:59.581794 27167 net.cpp:139] Memory required for data: 1286400
I0428 19:50:59.581802 27167 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:59.581810 27167 net.cpp:86] Creating Layer pool1
I0428 19:50:59.581814 27167 net.cpp:408] pool1 <- conv1
I0428 19:50:59.581818 27167 net.cpp:382] pool1 -> pool1
I0428 19:50:59.581873 27167 net.cpp:124] Setting up pool1
I0428 19:50:59.581879 27167 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:59.581882 27167 net.cpp:139] Memory required for data: 1327360
I0428 19:50:59.581885 27167 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:59.581893 27167 net.cpp:86] Creating Layer ip1
I0428 19:50:59.581897 27167 net.cpp:408] ip1 <- pool1
I0428 19:50:59.581900 27167 net.cpp:382] ip1 -> ip1
I0428 19:50:59.582847 27167 net.cpp:124] Setting up ip1
I0428 19:50:59.582859 27167 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:59.582878 27167 net.cpp:139] Memory required for data: 1340160
I0428 19:50:59.582886 27167 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:59.582893 27167 net.cpp:86] Creating Layer relu1
I0428 19:50:59.582896 27167 net.cpp:408] relu1 <- ip1
I0428 19:50:59.582901 27167 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:59.583098 27167 net.cpp:124] Setting up relu1
I0428 19:50:59.583107 27167 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:59.583112 27167 net.cpp:139] Memory required for data: 1352960
I0428 19:50:59.583114 27167 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:59.583122 27167 net.cpp:86] Creating Layer ip2
I0428 19:50:59.583125 27167 net.cpp:408] ip2 <- ip1
I0428 19:50:59.583129 27167 net.cpp:382] ip2 -> ip2
I0428 19:50:59.583257 27167 net.cpp:124] Setting up ip2
I0428 19:50:59.583264 27167 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:59.583267 27167 net.cpp:139] Memory required for data: 1359360
I0428 19:50:59.583272 27167 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:59.583279 27167 net.cpp:86] Creating Layer relu2
I0428 19:50:59.583282 27167 net.cpp:408] relu2 <- ip2
I0428 19:50:59.583287 27167 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:59.584041 27167 net.cpp:124] Setting up relu2
I0428 19:50:59.584053 27167 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:59.584072 27167 net.cpp:139] Memory required for data: 1365760
I0428 19:50:59.584075 27167 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:59.584084 27167 net.cpp:86] Creating Layer ip3
I0428 19:50:59.584098 27167 net.cpp:408] ip3 <- ip2
I0428 19:50:59.584105 27167 net.cpp:382] ip3 -> ip3
I0428 19:50:59.584208 27167 net.cpp:124] Setting up ip3
I0428 19:50:59.584215 27167 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:59.584218 27167 net.cpp:139] Memory required for data: 1368320
I0428 19:50:59.584226 27167 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:59.584231 27167 net.cpp:86] Creating Layer relu3
I0428 19:50:59.584234 27167 net.cpp:408] relu3 <- ip3
I0428 19:50:59.584239 27167 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:59.584431 27167 net.cpp:124] Setting up relu3
I0428 19:50:59.584440 27167 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:59.584444 27167 net.cpp:139] Memory required for data: 1370880
I0428 19:50:59.584446 27167 layer_factory.hpp:77] Creating layer loss
I0428 19:50:59.584452 27167 net.cpp:86] Creating Layer loss
I0428 19:50:59.584455 27167 net.cpp:408] loss <- ip3
I0428 19:50:59.584460 27167 net.cpp:408] loss <- label
I0428 19:50:59.584465 27167 net.cpp:382] loss -> loss
I0428 19:50:59.584482 27167 layer_factory.hpp:77] Creating layer loss
I0428 19:50:59.584715 27167 net.cpp:124] Setting up loss
I0428 19:50:59.584739 27167 net.cpp:131] Top shape: (1)
I0428 19:50:59.584743 27167 net.cpp:134]     with loss weight 1
I0428 19:50:59.584756 27167 net.cpp:139] Memory required for data: 1370884
I0428 19:50:59.584760 27167 net.cpp:200] loss needs backward computation.
I0428 19:50:59.584764 27167 net.cpp:200] relu3 needs backward computation.
I0428 19:50:59.584766 27167 net.cpp:200] ip3 needs backward computation.
I0428 19:50:59.584769 27167 net.cpp:200] relu2 needs backward computation.
I0428 19:50:59.584772 27167 net.cpp:200] ip2 needs backward computation.
I0428 19:50:59.584775 27167 net.cpp:200] relu1 needs backward computation.
I0428 19:50:59.584779 27167 net.cpp:200] ip1 needs backward computation.
I0428 19:50:59.584781 27167 net.cpp:200] pool1 needs backward computation.
I0428 19:50:59.584784 27167 net.cpp:200] conv1 needs backward computation.
I0428 19:50:59.584787 27167 net.cpp:200] pool0 needs backward computation.
I0428 19:50:59.584790 27167 net.cpp:200] conv0 needs backward computation.
I0428 19:50:59.584794 27167 net.cpp:202] mnist does not need backward computation.
I0428 19:50:59.584795 27167 net.cpp:244] This network produces output loss
I0428 19:50:59.584806 27167 net.cpp:257] Network initialization done.
I0428 19:50:59.585240 27167 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test620.prototxt
I0428 19:50:59.585284 27167 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:59.585377 27167 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:59.585461 27167 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:59.585520 27167 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:59.585532 27167 net.cpp:86] Creating Layer mnist
I0428 19:50:59.585536 27167 net.cpp:382] mnist -> data
I0428 19:50:59.585544 27167 net.cpp:382] mnist -> label
I0428 19:50:59.585649 27167 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:59.587713 27167 net.cpp:124] Setting up mnist
I0428 19:50:59.587741 27167 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:59.587748 27167 net.cpp:131] Top shape: 100 (100)
I0428 19:50:59.587750 27167 net.cpp:139] Memory required for data: 314000
I0428 19:50:59.587754 27167 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:59.587786 27167 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:59.587790 27167 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:59.587795 27167 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:59.587802 27167 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:59.587867 27167 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:59.587873 27167 net.cpp:131] Top shape: 100 (100)
I0428 19:50:59.587877 27167 net.cpp:131] Top shape: 100 (100)
I0428 19:50:59.587879 27167 net.cpp:139] Memory required for data: 314800
I0428 19:50:59.587882 27167 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:59.587893 27167 net.cpp:86] Creating Layer conv0
I0428 19:50:59.587895 27167 net.cpp:408] conv0 <- data
I0428 19:50:59.587901 27167 net.cpp:382] conv0 -> conv0
I0428 19:50:59.589550 27167 net.cpp:124] Setting up conv0
I0428 19:50:59.589565 27167 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:59.589568 27167 net.cpp:139] Memory required for data: 1466800
I0428 19:50:59.589576 27167 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:59.589584 27167 net.cpp:86] Creating Layer pool0
I0428 19:50:59.589587 27167 net.cpp:408] pool0 <- conv0
I0428 19:50:59.589591 27167 net.cpp:382] pool0 -> pool0
I0428 19:50:59.589629 27167 net.cpp:124] Setting up pool0
I0428 19:50:59.589634 27167 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:59.589637 27167 net.cpp:139] Memory required for data: 1754800
I0428 19:50:59.589639 27167 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:59.589648 27167 net.cpp:86] Creating Layer conv1
I0428 19:50:59.589651 27167 net.cpp:408] conv1 <- pool0
I0428 19:50:59.589658 27167 net.cpp:382] conv1 -> conv1
I0428 19:50:59.591763 27167 net.cpp:124] Setting up conv1
I0428 19:50:59.591778 27167 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:59.591783 27167 net.cpp:139] Memory required for data: 2010800
I0428 19:50:59.591790 27167 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:59.591814 27167 net.cpp:86] Creating Layer pool1
I0428 19:50:59.591817 27167 net.cpp:408] pool1 <- conv1
I0428 19:50:59.591838 27167 net.cpp:382] pool1 -> pool1
I0428 19:50:59.591895 27167 net.cpp:124] Setting up pool1
I0428 19:50:59.591918 27167 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:59.591922 27167 net.cpp:139] Memory required for data: 2074800
I0428 19:50:59.591924 27167 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:59.591931 27167 net.cpp:86] Creating Layer ip1
I0428 19:50:59.591935 27167 net.cpp:408] ip1 <- pool1
I0428 19:50:59.591939 27167 net.cpp:382] ip1 -> ip1
I0428 19:50:59.592130 27167 net.cpp:124] Setting up ip1
I0428 19:50:59.592139 27167 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:59.592157 27167 net.cpp:139] Memory required for data: 2094800
I0428 19:50:59.592181 27167 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:59.592202 27167 net.cpp:86] Creating Layer relu1
I0428 19:50:59.592206 27167 net.cpp:408] relu1 <- ip1
I0428 19:50:59.592211 27167 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:59.592429 27167 net.cpp:124] Setting up relu1
I0428 19:50:59.592438 27167 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:59.592442 27167 net.cpp:139] Memory required for data: 2114800
I0428 19:50:59.592445 27167 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:59.592453 27167 net.cpp:86] Creating Layer ip2
I0428 19:50:59.592456 27167 net.cpp:408] ip2 <- ip1
I0428 19:50:59.592461 27167 net.cpp:382] ip2 -> ip2
I0428 19:50:59.592568 27167 net.cpp:124] Setting up ip2
I0428 19:50:59.592576 27167 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:59.592578 27167 net.cpp:139] Memory required for data: 2124800
I0428 19:50:59.592584 27167 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:59.592589 27167 net.cpp:86] Creating Layer relu2
I0428 19:50:59.592592 27167 net.cpp:408] relu2 <- ip2
I0428 19:50:59.592610 27167 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:59.592761 27167 net.cpp:124] Setting up relu2
I0428 19:50:59.592768 27167 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:59.592777 27167 net.cpp:139] Memory required for data: 2134800
I0428 19:50:59.592782 27167 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:59.592785 27167 net.cpp:86] Creating Layer ip3
I0428 19:50:59.592788 27167 net.cpp:408] ip3 <- ip2
I0428 19:50:59.592836 27167 net.cpp:382] ip3 -> ip3
I0428 19:50:59.592978 27167 net.cpp:124] Setting up ip3
I0428 19:50:59.592985 27167 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:59.592988 27167 net.cpp:139] Memory required for data: 2138800
I0428 19:50:59.593003 27167 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:59.593008 27167 net.cpp:86] Creating Layer relu3
I0428 19:50:59.593013 27167 net.cpp:408] relu3 <- ip3
I0428 19:50:59.593019 27167 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:59.593876 27167 net.cpp:124] Setting up relu3
I0428 19:50:59.593888 27167 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:59.593893 27167 net.cpp:139] Memory required for data: 2142800
I0428 19:50:59.593895 27167 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:59.593900 27167 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:59.593904 27167 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:59.593910 27167 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:59.593916 27167 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:59.593960 27167 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:59.593964 27167 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:59.593968 27167 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:59.593971 27167 net.cpp:139] Memory required for data: 2150800
I0428 19:50:59.593973 27167 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:59.593979 27167 net.cpp:86] Creating Layer accuracy
I0428 19:50:59.593982 27167 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:59.593986 27167 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:59.593991 27167 net.cpp:382] accuracy -> accuracy
I0428 19:50:59.593998 27167 net.cpp:124] Setting up accuracy
I0428 19:50:59.594002 27167 net.cpp:131] Top shape: (1)
I0428 19:50:59.594005 27167 net.cpp:139] Memory required for data: 2150804
I0428 19:50:59.594008 27167 layer_factory.hpp:77] Creating layer loss
I0428 19:50:59.594012 27167 net.cpp:86] Creating Layer loss
I0428 19:50:59.594015 27167 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:59.594019 27167 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:59.594023 27167 net.cpp:382] loss -> loss
I0428 19:50:59.594028 27167 layer_factory.hpp:77] Creating layer loss
I0428 19:50:59.594305 27167 net.cpp:124] Setting up loss
I0428 19:50:59.594316 27167 net.cpp:131] Top shape: (1)
I0428 19:50:59.594339 27167 net.cpp:134]     with loss weight 1
I0428 19:50:59.594347 27167 net.cpp:139] Memory required for data: 2150808
I0428 19:50:59.594360 27167 net.cpp:200] loss needs backward computation.
I0428 19:50:59.594370 27167 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:59.594374 27167 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:59.594377 27167 net.cpp:200] relu3 needs backward computation.
I0428 19:50:59.594380 27167 net.cpp:200] ip3 needs backward computation.
I0428 19:50:59.594383 27167 net.cpp:200] relu2 needs backward computation.
I0428 19:50:59.594385 27167 net.cpp:200] ip2 needs backward computation.
I0428 19:50:59.594388 27167 net.cpp:200] relu1 needs backward computation.
I0428 19:50:59.594391 27167 net.cpp:200] ip1 needs backward computation.
I0428 19:50:59.594394 27167 net.cpp:200] pool1 needs backward computation.
I0428 19:50:59.594408 27167 net.cpp:200] conv1 needs backward computation.
I0428 19:50:59.594410 27167 net.cpp:200] pool0 needs backward computation.
I0428 19:50:59.594413 27167 net.cpp:200] conv0 needs backward computation.
I0428 19:50:59.594422 27167 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:59.594426 27167 net.cpp:202] mnist does not need backward computation.
I0428 19:50:59.594429 27167 net.cpp:244] This network produces output accuracy
I0428 19:50:59.594432 27167 net.cpp:244] This network produces output loss
I0428 19:50:59.594450 27167 net.cpp:257] Network initialization done.
I0428 19:50:59.594491 27167 solver.cpp:56] Solver scaffolding done.
I0428 19:50:59.594836 27167 caffe.cpp:248] Starting Optimization
I0428 19:50:59.594843 27167 solver.cpp:273] Solving LeNet
I0428 19:50:59.594846 27167 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:59.595011 27167 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:59.598914 27167 blocking_queue.cpp:49] Waiting for data
I0428 19:50:59.670621 27174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:59.671121 27167 solver.cpp:398]     Test net output #0: accuracy = 0.0693
I0428 19:50:59.671139 27167 solver.cpp:398]     Test net output #1: loss = 2.33228 (* 1 = 2.33228 loss)
I0428 19:50:59.673121 27167 solver.cpp:219] Iteration 0 (-7.44308e-31 iter/s, 0.0782356s/100 iters), loss = 2.33934
I0428 19:50:59.673146 27167 solver.cpp:238]     Train net output #0: loss = 2.33934 (* 1 = 2.33934 loss)
I0428 19:50:59.673174 27167 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:59.756711 27167 solver.cpp:219] Iteration 100 (1196.86 iter/s, 0.0835523s/100 iters), loss = 1.53447
I0428 19:50:59.756734 27167 solver.cpp:238]     Train net output #0: loss = 1.53447 (* 1 = 1.53447 loss)
I0428 19:50:59.756755 27167 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:59.839020 27167 solver.cpp:219] Iteration 200 (1215.42 iter/s, 0.0822763s/100 iters), loss = 0.882596
I0428 19:50:59.839061 27167 solver.cpp:238]     Train net output #0: loss = 0.882596 (* 1 = 0.882596 loss)
I0428 19:50:59.839085 27167 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:59.922461 27167 solver.cpp:219] Iteration 300 (1198.94 iter/s, 0.0834067s/100 iters), loss = 1.57583
I0428 19:50:59.922484 27167 solver.cpp:238]     Train net output #0: loss = 1.57583 (* 1 = 1.57583 loss)
I0428 19:50:59.922508 27167 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:00.006872 27167 solver.cpp:219] Iteration 400 (1185.15 iter/s, 0.0843776s/100 iters), loss = 0.928167
I0428 19:51:00.006898 27167 solver.cpp:238]     Train net output #0: loss = 0.928167 (* 1 = 0.928167 loss)
I0428 19:51:00.006923 27167 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:00.084702 27167 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:00.160071 27174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:00.160591 27167 solver.cpp:398]     Test net output #0: accuracy = 0.5725
I0428 19:51:00.160610 27167 solver.cpp:398]     Test net output #1: loss = 1.08118 (* 1 = 1.08118 loss)
I0428 19:51:00.161527 27167 solver.cpp:219] Iteration 500 (646.759 iter/s, 0.154617s/100 iters), loss = 0.895013
I0428 19:51:00.161576 27167 solver.cpp:238]     Train net output #0: loss = 0.895013 (* 1 = 0.895013 loss)
I0428 19:51:00.161600 27167 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:00.247818 27167 solver.cpp:219] Iteration 600 (1159.68 iter/s, 0.086231s/100 iters), loss = 1.03774
I0428 19:51:00.247850 27167 solver.cpp:238]     Train net output #0: loss = 1.03774 (* 1 = 1.03774 loss)
I0428 19:51:00.247859 27167 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:00.324143 27167 solver.cpp:219] Iteration 700 (1310.87 iter/s, 0.0762849s/100 iters), loss = 1.16688
I0428 19:51:00.324167 27167 solver.cpp:238]     Train net output #0: loss = 1.16688 (* 1 = 1.16688 loss)
I0428 19:51:00.324189 27167 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:00.397667 27167 solver.cpp:219] Iteration 800 (1360.74 iter/s, 0.0734894s/100 iters), loss = 1.24747
I0428 19:51:00.397694 27167 solver.cpp:238]     Train net output #0: loss = 1.24747 (* 1 = 1.24747 loss)
I0428 19:51:00.397716 27167 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:00.471063 27167 solver.cpp:219] Iteration 900 (1363.15 iter/s, 0.0733596s/100 iters), loss = 1.21405
I0428 19:51:00.471087 27167 solver.cpp:238]     Train net output #0: loss = 1.21405 (* 1 = 1.21405 loss)
I0428 19:51:00.471109 27167 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:00.496114 27173 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:00.544124 27167 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:00.545055 27167 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:00.545574 27167 solver.cpp:311] Iteration 1000, loss = 1.11879
I0428 19:51:00.545591 27167 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:00.620422 27174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:00.620970 27167 solver.cpp:398]     Test net output #0: accuracy = 0.5904
I0428 19:51:00.620992 27167 solver.cpp:398]     Test net output #1: loss = 0.996946 (* 1 = 0.996946 loss)
I0428 19:51:00.620997 27167 solver.cpp:316] Optimization Done.
I0428 19:51:00.621006 27167 caffe.cpp:259] Optimization Done.
