I0428 19:56:38.627449 28483 caffe.cpp:218] Using GPUs 0
I0428 19:56:38.663921 28483 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:39.172718 28483 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test765.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:39.172869 28483 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test765.prototxt
I0428 19:56:39.173291 28483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:39.173313 28483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:39.173413 28483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:39.173493 28483 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:39.173594 28483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:39.173616 28483 net.cpp:86] Creating Layer mnist
I0428 19:56:39.173626 28483 net.cpp:382] mnist -> data
I0428 19:56:39.173648 28483 net.cpp:382] mnist -> label
I0428 19:56:39.174737 28483 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:39.177194 28483 net.cpp:124] Setting up mnist
I0428 19:56:39.177212 28483 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:39.177218 28483 net.cpp:131] Top shape: 64 (64)
I0428 19:56:39.177222 28483 net.cpp:139] Memory required for data: 200960
I0428 19:56:39.177230 28483 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:39.177268 28483 net.cpp:86] Creating Layer conv0
I0428 19:56:39.177289 28483 net.cpp:408] conv0 <- data
I0428 19:56:39.177304 28483 net.cpp:382] conv0 -> conv0
I0428 19:56:39.456789 28483 net.cpp:124] Setting up conv0
I0428 19:56:39.456820 28483 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:39.456825 28483 net.cpp:139] Memory required for data: 1675520
I0428 19:56:39.456856 28483 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:39.456867 28483 net.cpp:86] Creating Layer pool0
I0428 19:56:39.456887 28483 net.cpp:408] pool0 <- conv0
I0428 19:56:39.456892 28483 net.cpp:382] pool0 -> pool0
I0428 19:56:39.456959 28483 net.cpp:124] Setting up pool0
I0428 19:56:39.456974 28483 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:39.456977 28483 net.cpp:139] Memory required for data: 2044160
I0428 19:56:39.456980 28483 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:39.456991 28483 net.cpp:86] Creating Layer conv1
I0428 19:56:39.456995 28483 net.cpp:408] conv1 <- pool0
I0428 19:56:39.457000 28483 net.cpp:382] conv1 -> conv1
I0428 19:56:39.459020 28483 net.cpp:124] Setting up conv1
I0428 19:56:39.459049 28483 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:39.459053 28483 net.cpp:139] Memory required for data: 2076928
I0428 19:56:39.459061 28483 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:39.459070 28483 net.cpp:86] Creating Layer pool1
I0428 19:56:39.459074 28483 net.cpp:408] pool1 <- conv1
I0428 19:56:39.459079 28483 net.cpp:382] pool1 -> pool1
I0428 19:56:39.459131 28483 net.cpp:124] Setting up pool1
I0428 19:56:39.459146 28483 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:39.459163 28483 net.cpp:139] Memory required for data: 2085120
I0428 19:56:39.459167 28483 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:39.459172 28483 net.cpp:86] Creating Layer ip1
I0428 19:56:39.459175 28483 net.cpp:408] ip1 <- pool1
I0428 19:56:39.459180 28483 net.cpp:382] ip1 -> ip1
I0428 19:56:39.459276 28483 net.cpp:124] Setting up ip1
I0428 19:56:39.459285 28483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:39.459287 28483 net.cpp:139] Memory required for data: 2091520
I0428 19:56:39.459293 28483 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:39.459300 28483 net.cpp:86] Creating Layer relu1
I0428 19:56:39.459302 28483 net.cpp:408] relu1 <- ip1
I0428 19:56:39.459306 28483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:39.459504 28483 net.cpp:124] Setting up relu1
I0428 19:56:39.459513 28483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:39.459517 28483 net.cpp:139] Memory required for data: 2097920
I0428 19:56:39.459519 28483 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:39.459525 28483 net.cpp:86] Creating Layer ip2
I0428 19:56:39.459529 28483 net.cpp:408] ip2 <- ip1
I0428 19:56:39.459533 28483 net.cpp:382] ip2 -> ip2
I0428 19:56:39.459640 28483 net.cpp:124] Setting up ip2
I0428 19:56:39.459646 28483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:39.459650 28483 net.cpp:139] Memory required for data: 2104320
I0428 19:56:39.459656 28483 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:39.459661 28483 net.cpp:86] Creating Layer relu2
I0428 19:56:39.459663 28483 net.cpp:408] relu2 <- ip2
I0428 19:56:39.459669 28483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:39.460455 28483 net.cpp:124] Setting up relu2
I0428 19:56:39.460467 28483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:39.460486 28483 net.cpp:139] Memory required for data: 2110720
I0428 19:56:39.460489 28483 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:39.460496 28483 net.cpp:86] Creating Layer ip3
I0428 19:56:39.460500 28483 net.cpp:408] ip3 <- ip2
I0428 19:56:39.460505 28483 net.cpp:382] ip3 -> ip3
I0428 19:56:39.460621 28483 net.cpp:124] Setting up ip3
I0428 19:56:39.460629 28483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:39.460633 28483 net.cpp:139] Memory required for data: 2113280
I0428 19:56:39.460640 28483 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:39.460646 28483 net.cpp:86] Creating Layer relu3
I0428 19:56:39.460649 28483 net.cpp:408] relu3 <- ip3
I0428 19:56:39.460652 28483 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:39.460878 28483 net.cpp:124] Setting up relu3
I0428 19:56:39.460887 28483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:39.460891 28483 net.cpp:139] Memory required for data: 2115840
I0428 19:56:39.460894 28483 layer_factory.hpp:77] Creating layer loss
I0428 19:56:39.460901 28483 net.cpp:86] Creating Layer loss
I0428 19:56:39.460903 28483 net.cpp:408] loss <- ip3
I0428 19:56:39.460907 28483 net.cpp:408] loss <- label
I0428 19:56:39.460912 28483 net.cpp:382] loss -> loss
I0428 19:56:39.460929 28483 layer_factory.hpp:77] Creating layer loss
I0428 19:56:39.461200 28483 net.cpp:124] Setting up loss
I0428 19:56:39.461211 28483 net.cpp:131] Top shape: (1)
I0428 19:56:39.461215 28483 net.cpp:134]     with loss weight 1
I0428 19:56:39.461227 28483 net.cpp:139] Memory required for data: 2115844
I0428 19:56:39.461231 28483 net.cpp:200] loss needs backward computation.
I0428 19:56:39.461235 28483 net.cpp:200] relu3 needs backward computation.
I0428 19:56:39.461237 28483 net.cpp:200] ip3 needs backward computation.
I0428 19:56:39.461241 28483 net.cpp:200] relu2 needs backward computation.
I0428 19:56:39.461243 28483 net.cpp:200] ip2 needs backward computation.
I0428 19:56:39.461246 28483 net.cpp:200] relu1 needs backward computation.
I0428 19:56:39.461248 28483 net.cpp:200] ip1 needs backward computation.
I0428 19:56:39.461251 28483 net.cpp:200] pool1 needs backward computation.
I0428 19:56:39.461254 28483 net.cpp:200] conv1 needs backward computation.
I0428 19:56:39.461257 28483 net.cpp:200] pool0 needs backward computation.
I0428 19:56:39.461259 28483 net.cpp:200] conv0 needs backward computation.
I0428 19:56:39.461279 28483 net.cpp:202] mnist does not need backward computation.
I0428 19:56:39.461282 28483 net.cpp:244] This network produces output loss
I0428 19:56:39.461292 28483 net.cpp:257] Network initialization done.
I0428 19:56:39.461681 28483 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test765.prototxt
I0428 19:56:39.461722 28483 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:39.461813 28483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:39.461894 28483 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:39.461969 28483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:39.461982 28483 net.cpp:86] Creating Layer mnist
I0428 19:56:39.461987 28483 net.cpp:382] mnist -> data
I0428 19:56:39.461994 28483 net.cpp:382] mnist -> label
I0428 19:56:39.462081 28483 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:39.464294 28483 net.cpp:124] Setting up mnist
I0428 19:56:39.464324 28483 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:39.464330 28483 net.cpp:131] Top shape: 100 (100)
I0428 19:56:39.464334 28483 net.cpp:139] Memory required for data: 314000
I0428 19:56:39.464337 28483 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:39.464361 28483 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:39.464366 28483 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:39.464390 28483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:39.464396 28483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:39.464442 28483 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:39.464455 28483 net.cpp:131] Top shape: 100 (100)
I0428 19:56:39.464459 28483 net.cpp:131] Top shape: 100 (100)
I0428 19:56:39.464462 28483 net.cpp:139] Memory required for data: 314800
I0428 19:56:39.464465 28483 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:39.464474 28483 net.cpp:86] Creating Layer conv0
I0428 19:56:39.464489 28483 net.cpp:408] conv0 <- data
I0428 19:56:39.464494 28483 net.cpp:382] conv0 -> conv0
I0428 19:56:39.466195 28483 net.cpp:124] Setting up conv0
I0428 19:56:39.466209 28483 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:39.466213 28483 net.cpp:139] Memory required for data: 2618800
I0428 19:56:39.466223 28483 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:39.466229 28483 net.cpp:86] Creating Layer pool0
I0428 19:56:39.466233 28483 net.cpp:408] pool0 <- conv0
I0428 19:56:39.466238 28483 net.cpp:382] pool0 -> pool0
I0428 19:56:39.466276 28483 net.cpp:124] Setting up pool0
I0428 19:56:39.466284 28483 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:39.466286 28483 net.cpp:139] Memory required for data: 3194800
I0428 19:56:39.466289 28483 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:39.466300 28483 net.cpp:86] Creating Layer conv1
I0428 19:56:39.466302 28483 net.cpp:408] conv1 <- pool0
I0428 19:56:39.466308 28483 net.cpp:382] conv1 -> conv1
I0428 19:56:39.468436 28483 net.cpp:124] Setting up conv1
I0428 19:56:39.468449 28483 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:39.468453 28483 net.cpp:139] Memory required for data: 3246000
I0428 19:56:39.468477 28483 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:39.468502 28483 net.cpp:86] Creating Layer pool1
I0428 19:56:39.468505 28483 net.cpp:408] pool1 <- conv1
I0428 19:56:39.468524 28483 net.cpp:382] pool1 -> pool1
I0428 19:56:39.468570 28483 net.cpp:124] Setting up pool1
I0428 19:56:39.468577 28483 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:39.468581 28483 net.cpp:139] Memory required for data: 3258800
I0428 19:56:39.468583 28483 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:39.468590 28483 net.cpp:86] Creating Layer ip1
I0428 19:56:39.468593 28483 net.cpp:408] ip1 <- pool1
I0428 19:56:39.468600 28483 net.cpp:382] ip1 -> ip1
I0428 19:56:39.468725 28483 net.cpp:124] Setting up ip1
I0428 19:56:39.468734 28483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:39.468746 28483 net.cpp:139] Memory required for data: 3268800
I0428 19:56:39.468753 28483 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:39.468760 28483 net.cpp:86] Creating Layer relu1
I0428 19:56:39.468762 28483 net.cpp:408] relu1 <- ip1
I0428 19:56:39.468770 28483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:39.469038 28483 net.cpp:124] Setting up relu1
I0428 19:56:39.469048 28483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:39.469051 28483 net.cpp:139] Memory required for data: 3278800
I0428 19:56:39.469055 28483 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:39.469071 28483 net.cpp:86] Creating Layer ip2
I0428 19:56:39.469075 28483 net.cpp:408] ip2 <- ip1
I0428 19:56:39.469080 28483 net.cpp:382] ip2 -> ip2
I0428 19:56:39.469197 28483 net.cpp:124] Setting up ip2
I0428 19:56:39.469204 28483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:39.469208 28483 net.cpp:139] Memory required for data: 3288800
I0428 19:56:39.469214 28483 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:39.469220 28483 net.cpp:86] Creating Layer relu2
I0428 19:56:39.469223 28483 net.cpp:408] relu2 <- ip2
I0428 19:56:39.469233 28483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:39.469413 28483 net.cpp:124] Setting up relu2
I0428 19:56:39.469421 28483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:39.469425 28483 net.cpp:139] Memory required for data: 3298800
I0428 19:56:39.469429 28483 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:39.469436 28483 net.cpp:86] Creating Layer ip3
I0428 19:56:39.469439 28483 net.cpp:408] ip3 <- ip2
I0428 19:56:39.469444 28483 net.cpp:382] ip3 -> ip3
I0428 19:56:39.469552 28483 net.cpp:124] Setting up ip3
I0428 19:56:39.469559 28483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:39.469563 28483 net.cpp:139] Memory required for data: 3302800
I0428 19:56:39.469571 28483 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:39.469578 28483 net.cpp:86] Creating Layer relu3
I0428 19:56:39.469580 28483 net.cpp:408] relu3 <- ip3
I0428 19:56:39.469584 28483 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:39.470424 28483 net.cpp:124] Setting up relu3
I0428 19:56:39.470437 28483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:39.470440 28483 net.cpp:139] Memory required for data: 3306800
I0428 19:56:39.470443 28483 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:39.470449 28483 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:39.470453 28483 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:39.470458 28483 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:39.470463 28483 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:39.470515 28483 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:39.470523 28483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:39.470527 28483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:39.470530 28483 net.cpp:139] Memory required for data: 3314800
I0428 19:56:39.470533 28483 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:39.470540 28483 net.cpp:86] Creating Layer accuracy
I0428 19:56:39.470542 28483 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:39.470546 28483 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:39.470551 28483 net.cpp:382] accuracy -> accuracy
I0428 19:56:39.470558 28483 net.cpp:124] Setting up accuracy
I0428 19:56:39.470562 28483 net.cpp:131] Top shape: (1)
I0428 19:56:39.470566 28483 net.cpp:139] Memory required for data: 3314804
I0428 19:56:39.470568 28483 layer_factory.hpp:77] Creating layer loss
I0428 19:56:39.470573 28483 net.cpp:86] Creating Layer loss
I0428 19:56:39.470577 28483 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:39.470582 28483 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:39.470585 28483 net.cpp:382] loss -> loss
I0428 19:56:39.470597 28483 layer_factory.hpp:77] Creating layer loss
I0428 19:56:39.470857 28483 net.cpp:124] Setting up loss
I0428 19:56:39.470866 28483 net.cpp:131] Top shape: (1)
I0428 19:56:39.470870 28483 net.cpp:134]     with loss weight 1
I0428 19:56:39.470875 28483 net.cpp:139] Memory required for data: 3314808
I0428 19:56:39.470888 28483 net.cpp:200] loss needs backward computation.
I0428 19:56:39.470892 28483 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:39.470902 28483 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:39.470906 28483 net.cpp:200] relu3 needs backward computation.
I0428 19:56:39.470908 28483 net.cpp:200] ip3 needs backward computation.
I0428 19:56:39.470911 28483 net.cpp:200] relu2 needs backward computation.
I0428 19:56:39.470913 28483 net.cpp:200] ip2 needs backward computation.
I0428 19:56:39.470917 28483 net.cpp:200] relu1 needs backward computation.
I0428 19:56:39.470921 28483 net.cpp:200] ip1 needs backward computation.
I0428 19:56:39.470923 28483 net.cpp:200] pool1 needs backward computation.
I0428 19:56:39.470930 28483 net.cpp:200] conv1 needs backward computation.
I0428 19:56:39.470933 28483 net.cpp:200] pool0 needs backward computation.
I0428 19:56:39.470937 28483 net.cpp:200] conv0 needs backward computation.
I0428 19:56:39.470940 28483 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:39.470944 28483 net.cpp:202] mnist does not need backward computation.
I0428 19:56:39.470947 28483 net.cpp:244] This network produces output accuracy
I0428 19:56:39.470950 28483 net.cpp:244] This network produces output loss
I0428 19:56:39.470962 28483 net.cpp:257] Network initialization done.
I0428 19:56:39.471002 28483 solver.cpp:56] Solver scaffolding done.
I0428 19:56:39.471343 28483 caffe.cpp:248] Starting Optimization
I0428 19:56:39.471349 28483 solver.cpp:273] Solving LeNet
I0428 19:56:39.471351 28483 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:39.472220 28483 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:39.475881 28483 blocking_queue.cpp:49] Waiting for data
I0428 19:56:39.545318 28490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:39.545866 28483 solver.cpp:398]     Test net output #0: accuracy = 0.1127
I0428 19:56:39.545902 28483 solver.cpp:398]     Test net output #1: loss = 2.31266 (* 1 = 2.31266 loss)
I0428 19:56:39.548419 28483 solver.cpp:219] Iteration 0 (-1.00001e-30 iter/s, 0.0770388s/100 iters), loss = 2.32409
I0428 19:56:39.548458 28483 solver.cpp:238]     Train net output #0: loss = 2.32409 (* 1 = 2.32409 loss)
I0428 19:56:39.548470 28483 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:39.627791 28483 solver.cpp:219] Iteration 100 (1260.44 iter/s, 0.0793375s/100 iters), loss = 1.13811
I0428 19:56:39.627815 28483 solver.cpp:238]     Train net output #0: loss = 1.13811 (* 1 = 1.13811 loss)
I0428 19:56:39.627821 28483 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:39.703857 28483 solver.cpp:219] Iteration 200 (1315.22 iter/s, 0.076033s/100 iters), loss = 0.824772
I0428 19:56:39.703881 28483 solver.cpp:238]     Train net output #0: loss = 0.824772 (* 1 = 0.824772 loss)
I0428 19:56:39.703886 28483 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:39.778745 28483 solver.cpp:219] Iteration 300 (1335.89 iter/s, 0.0748564s/100 iters), loss = 0.435963
I0428 19:56:39.778769 28483 solver.cpp:238]     Train net output #0: loss = 0.435963 (* 1 = 0.435963 loss)
I0428 19:56:39.778774 28483 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:39.853296 28483 solver.cpp:219] Iteration 400 (1341.97 iter/s, 0.0745175s/100 iters), loss = 0.491873
I0428 19:56:39.853318 28483 solver.cpp:238]     Train net output #0: loss = 0.491873 (* 1 = 0.491873 loss)
I0428 19:56:39.853339 28483 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:39.926993 28483 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:40.002897 28490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:40.003401 28483 solver.cpp:398]     Test net output #0: accuracy = 0.8982
I0428 19:56:40.003422 28483 solver.cpp:398]     Test net output #1: loss = 0.327529 (* 1 = 0.327529 loss)
I0428 19:56:40.004248 28483 solver.cpp:219] Iteration 500 (662.679 iter/s, 0.150903s/100 iters), loss = 0.469687
I0428 19:56:40.004290 28483 solver.cpp:238]     Train net output #0: loss = 0.469687 (* 1 = 0.469687 loss)
I0428 19:56:40.004312 28483 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:40.083384 28483 solver.cpp:219] Iteration 600 (1264.46 iter/s, 0.0790853s/100 iters), loss = 0.251333
I0428 19:56:40.083407 28483 solver.cpp:238]     Train net output #0: loss = 0.251333 (* 1 = 0.251333 loss)
I0428 19:56:40.083412 28483 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:40.163146 28483 solver.cpp:219] Iteration 700 (1254.22 iter/s, 0.0797307s/100 iters), loss = 0.308768
I0428 19:56:40.163185 28483 solver.cpp:238]     Train net output #0: loss = 0.308768 (* 1 = 0.308768 loss)
I0428 19:56:40.163190 28483 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:40.238317 28483 solver.cpp:219] Iteration 800 (1330.88 iter/s, 0.075138s/100 iters), loss = 0.462973
I0428 19:56:40.238350 28483 solver.cpp:238]     Train net output #0: loss = 0.462973 (* 1 = 0.462973 loss)
I0428 19:56:40.238356 28483 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:40.330267 28483 solver.cpp:219] Iteration 900 (1088.1 iter/s, 0.091903s/100 iters), loss = 0.301875
I0428 19:56:40.330313 28483 solver.cpp:238]     Train net output #0: loss = 0.301875 (* 1 = 0.301875 loss)
I0428 19:56:40.330328 28483 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:40.358366 28489 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:40.409996 28483 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:40.410732 28483 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:40.411197 28483 solver.cpp:311] Iteration 1000, loss = 0.19077
I0428 19:56:40.411214 28483 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:40.463816 28490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:40.464342 28483 solver.cpp:398]     Test net output #0: accuracy = 0.9385
I0428 19:56:40.464367 28483 solver.cpp:398]     Test net output #1: loss = 0.207091 (* 1 = 0.207091 loss)
I0428 19:56:40.464376 28483 solver.cpp:316] Optimization Done.
I0428 19:56:40.464382 28483 caffe.cpp:259] Optimization Done.
