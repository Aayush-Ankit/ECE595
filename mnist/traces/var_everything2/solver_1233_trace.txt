I0428 20:14:54.057588   315 caffe.cpp:218] Using GPUs 0
I0428 20:14:54.093451   315 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:54.604974   315 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1233.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:54.605136   315 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1233.prototxt
I0428 20:14:54.605559   315 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:54.605578   315 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:54.605680   315 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:54.605765   315 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:54.605865   315 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:54.605888   315 net.cpp:86] Creating Layer mnist
I0428 20:14:54.605897   315 net.cpp:382] mnist -> data
I0428 20:14:54.605921   315 net.cpp:382] mnist -> label
I0428 20:14:54.607017   315 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:54.609552   315 net.cpp:124] Setting up mnist
I0428 20:14:54.609577   315 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:54.609589   315 net.cpp:131] Top shape: 64 (64)
I0428 20:14:54.609596   315 net.cpp:139] Memory required for data: 200960
I0428 20:14:54.609606   315 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:54.609627   315 net.cpp:86] Creating Layer conv0
I0428 20:14:54.609657   315 net.cpp:408] conv0 <- data
I0428 20:14:54.609678   315 net.cpp:382] conv0 -> conv0
I0428 20:14:54.903008   315 net.cpp:124] Setting up conv0
I0428 20:14:54.903039   315 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:54.903044   315 net.cpp:139] Memory required for data: 7573760
I0428 20:14:54.903062   315 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:54.903077   315 net.cpp:86] Creating Layer pool0
I0428 20:14:54.903082   315 net.cpp:408] pool0 <- conv0
I0428 20:14:54.903089   315 net.cpp:382] pool0 -> pool0
I0428 20:14:54.903144   315 net.cpp:124] Setting up pool0
I0428 20:14:54.903151   315 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:54.903156   315 net.cpp:139] Memory required for data: 9416960
I0428 20:14:54.903159   315 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:54.903172   315 net.cpp:86] Creating Layer conv1
I0428 20:14:54.903175   315 net.cpp:408] conv1 <- pool0
I0428 20:14:54.903182   315 net.cpp:382] conv1 -> conv1
I0428 20:14:54.905341   315 net.cpp:124] Setting up conv1
I0428 20:14:54.905359   315 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:54.905364   315 net.cpp:139] Memory required for data: 9449728
I0428 20:14:54.905375   315 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:54.905385   315 net.cpp:86] Creating Layer pool1
I0428 20:14:54.905390   315 net.cpp:408] pool1 <- conv1
I0428 20:14:54.905395   315 net.cpp:382] pool1 -> pool1
I0428 20:14:54.905438   315 net.cpp:124] Setting up pool1
I0428 20:14:54.905445   315 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:54.905449   315 net.cpp:139] Memory required for data: 9457920
I0428 20:14:54.905452   315 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:54.905462   315 net.cpp:86] Creating Layer ip1
I0428 20:14:54.905465   315 net.cpp:408] ip1 <- pool1
I0428 20:14:54.905470   315 net.cpp:382] ip1 -> ip1
I0428 20:14:54.905585   315 net.cpp:124] Setting up ip1
I0428 20:14:54.905594   315 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:54.905597   315 net.cpp:139] Memory required for data: 9464320
I0428 20:14:54.905606   315 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:54.905612   315 net.cpp:86] Creating Layer relu1
I0428 20:14:54.905616   315 net.cpp:408] relu1 <- ip1
I0428 20:14:54.905622   315 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:54.905815   315 net.cpp:124] Setting up relu1
I0428 20:14:54.905827   315 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:54.905830   315 net.cpp:139] Memory required for data: 9470720
I0428 20:14:54.905833   315 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:54.905841   315 net.cpp:86] Creating Layer ip2
I0428 20:14:54.905844   315 net.cpp:408] ip2 <- ip1
I0428 20:14:54.905850   315 net.cpp:382] ip2 -> ip2
I0428 20:14:54.905963   315 net.cpp:124] Setting up ip2
I0428 20:14:54.905972   315 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:54.905975   315 net.cpp:139] Memory required for data: 9477120
I0428 20:14:54.905982   315 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:54.905988   315 net.cpp:86] Creating Layer relu2
I0428 20:14:54.905992   315 net.cpp:408] relu2 <- ip2
I0428 20:14:54.905997   315 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:54.906839   315 net.cpp:124] Setting up relu2
I0428 20:14:54.906854   315 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:54.906858   315 net.cpp:139] Memory required for data: 9483520
I0428 20:14:54.906862   315 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:54.906870   315 net.cpp:86] Creating Layer ip3
I0428 20:14:54.906874   315 net.cpp:408] ip3 <- ip2
I0428 20:14:54.906882   315 net.cpp:382] ip3 -> ip3
I0428 20:14:54.906997   315 net.cpp:124] Setting up ip3
I0428 20:14:54.907006   315 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:54.907011   315 net.cpp:139] Memory required for data: 9486080
I0428 20:14:54.907019   315 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:54.907025   315 net.cpp:86] Creating Layer relu3
I0428 20:14:54.907029   315 net.cpp:408] relu3 <- ip3
I0428 20:14:54.907034   315 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:54.907230   315 net.cpp:124] Setting up relu3
I0428 20:14:54.907240   315 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:54.907244   315 net.cpp:139] Memory required for data: 9488640
I0428 20:14:54.907248   315 layer_factory.hpp:77] Creating layer loss
I0428 20:14:54.907255   315 net.cpp:86] Creating Layer loss
I0428 20:14:54.907259   315 net.cpp:408] loss <- ip3
I0428 20:14:54.907263   315 net.cpp:408] loss <- label
I0428 20:14:54.907270   315 net.cpp:382] loss -> loss
I0428 20:14:54.907291   315 layer_factory.hpp:77] Creating layer loss
I0428 20:14:54.907555   315 net.cpp:124] Setting up loss
I0428 20:14:54.907567   315 net.cpp:131] Top shape: (1)
I0428 20:14:54.907572   315 net.cpp:134]     with loss weight 1
I0428 20:14:54.907588   315 net.cpp:139] Memory required for data: 9488644
I0428 20:14:54.907591   315 net.cpp:200] loss needs backward computation.
I0428 20:14:54.907595   315 net.cpp:200] relu3 needs backward computation.
I0428 20:14:54.907599   315 net.cpp:200] ip3 needs backward computation.
I0428 20:14:54.907603   315 net.cpp:200] relu2 needs backward computation.
I0428 20:14:54.907606   315 net.cpp:200] ip2 needs backward computation.
I0428 20:14:54.907609   315 net.cpp:200] relu1 needs backward computation.
I0428 20:14:54.907613   315 net.cpp:200] ip1 needs backward computation.
I0428 20:14:54.907616   315 net.cpp:200] pool1 needs backward computation.
I0428 20:14:54.907620   315 net.cpp:200] conv1 needs backward computation.
I0428 20:14:54.907624   315 net.cpp:200] pool0 needs backward computation.
I0428 20:14:54.907627   315 net.cpp:200] conv0 needs backward computation.
I0428 20:14:54.907631   315 net.cpp:202] mnist does not need backward computation.
I0428 20:14:54.907635   315 net.cpp:244] This network produces output loss
I0428 20:14:54.907646   315 net.cpp:257] Network initialization done.
I0428 20:14:54.908028   315 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1233.prototxt
I0428 20:14:54.908061   315 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:54.908169   315 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:54.908262   315 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:54.908315   315 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:54.908334   315 net.cpp:86] Creating Layer mnist
I0428 20:14:54.908339   315 net.cpp:382] mnist -> data
I0428 20:14:54.908349   315 net.cpp:382] mnist -> label
I0428 20:14:54.908445   315 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:54.910708   315 net.cpp:124] Setting up mnist
I0428 20:14:54.910725   315 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:54.910732   315 net.cpp:131] Top shape: 100 (100)
I0428 20:14:54.910737   315 net.cpp:139] Memory required for data: 314000
I0428 20:14:54.910740   315 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:54.910748   315 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:54.910753   315 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:54.910758   315 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:54.910766   315 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:54.910887   315 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:54.910898   315 net.cpp:131] Top shape: 100 (100)
I0428 20:14:54.910902   315 net.cpp:131] Top shape: 100 (100)
I0428 20:14:54.910907   315 net.cpp:139] Memory required for data: 314800
I0428 20:14:54.910910   315 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:54.910922   315 net.cpp:86] Creating Layer conv0
I0428 20:14:54.910925   315 net.cpp:408] conv0 <- data
I0428 20:14:54.910931   315 net.cpp:382] conv0 -> conv0
I0428 20:14:54.912708   315 net.cpp:124] Setting up conv0
I0428 20:14:54.912726   315 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:54.912731   315 net.cpp:139] Memory required for data: 11834800
I0428 20:14:54.912741   315 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:54.912750   315 net.cpp:86] Creating Layer pool0
I0428 20:14:54.912753   315 net.cpp:408] pool0 <- conv0
I0428 20:14:54.912760   315 net.cpp:382] pool0 -> pool0
I0428 20:14:54.912801   315 net.cpp:124] Setting up pool0
I0428 20:14:54.912807   315 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:54.912822   315 net.cpp:139] Memory required for data: 14714800
I0428 20:14:54.912825   315 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:54.912835   315 net.cpp:86] Creating Layer conv1
I0428 20:14:54.912839   315 net.cpp:408] conv1 <- pool0
I0428 20:14:54.912845   315 net.cpp:382] conv1 -> conv1
I0428 20:14:54.914547   315 net.cpp:124] Setting up conv1
I0428 20:14:54.914567   315 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:54.914572   315 net.cpp:139] Memory required for data: 14766000
I0428 20:14:54.914583   315 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:54.914590   315 net.cpp:86] Creating Layer pool1
I0428 20:14:54.914594   315 net.cpp:408] pool1 <- conv1
I0428 20:14:54.914602   315 net.cpp:382] pool1 -> pool1
I0428 20:14:54.914644   315 net.cpp:124] Setting up pool1
I0428 20:14:54.914650   315 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:54.914655   315 net.cpp:139] Memory required for data: 14778800
I0428 20:14:54.914667   315 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:54.914676   315 net.cpp:86] Creating Layer ip1
I0428 20:14:54.914690   315 net.cpp:408] ip1 <- pool1
I0428 20:14:54.914695   315 net.cpp:382] ip1 -> ip1
I0428 20:14:54.914813   315 net.cpp:124] Setting up ip1
I0428 20:14:54.914830   315 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:54.914847   315 net.cpp:139] Memory required for data: 14788800
I0428 20:14:54.914857   315 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:54.914863   315 net.cpp:86] Creating Layer relu1
I0428 20:14:54.914867   315 net.cpp:408] relu1 <- ip1
I0428 20:14:54.914872   315 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:54.915123   315 net.cpp:124] Setting up relu1
I0428 20:14:54.915135   315 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:54.915139   315 net.cpp:139] Memory required for data: 14798800
I0428 20:14:54.915143   315 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:54.915160   315 net.cpp:86] Creating Layer ip2
I0428 20:14:54.915165   315 net.cpp:408] ip2 <- ip1
I0428 20:14:54.915171   315 net.cpp:382] ip2 -> ip2
I0428 20:14:54.915307   315 net.cpp:124] Setting up ip2
I0428 20:14:54.915318   315 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:54.915323   315 net.cpp:139] Memory required for data: 14808800
I0428 20:14:54.915328   315 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:54.915334   315 net.cpp:86] Creating Layer relu2
I0428 20:14:54.915338   315 net.cpp:408] relu2 <- ip2
I0428 20:14:54.915343   315 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:54.915522   315 net.cpp:124] Setting up relu2
I0428 20:14:54.915534   315 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:54.915537   315 net.cpp:139] Memory required for data: 14818800
I0428 20:14:54.915541   315 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:54.915549   315 net.cpp:86] Creating Layer ip3
I0428 20:14:54.915551   315 net.cpp:408] ip3 <- ip2
I0428 20:14:54.915558   315 net.cpp:382] ip3 -> ip3
I0428 20:14:54.915675   315 net.cpp:124] Setting up ip3
I0428 20:14:54.915686   315 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:54.915691   315 net.cpp:139] Memory required for data: 14822800
I0428 20:14:54.915701   315 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:54.915707   315 net.cpp:86] Creating Layer relu3
I0428 20:14:54.915711   315 net.cpp:408] relu3 <- ip3
I0428 20:14:54.915716   315 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:54.916641   315 net.cpp:124] Setting up relu3
I0428 20:14:54.916656   315 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:54.916661   315 net.cpp:139] Memory required for data: 14826800
I0428 20:14:54.916664   315 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:14:54.916671   315 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:14:54.916674   315 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:14:54.916681   315 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:14:54.916687   315 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:14:54.916734   315 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:14:54.916743   315 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:54.916748   315 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:54.916750   315 net.cpp:139] Memory required for data: 14834800
I0428 20:14:54.916754   315 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:54.916765   315 net.cpp:86] Creating Layer accuracy
I0428 20:14:54.916770   315 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:14:54.916775   315 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:54.916780   315 net.cpp:382] accuracy -> accuracy
I0428 20:14:54.916790   315 net.cpp:124] Setting up accuracy
I0428 20:14:54.916795   315 net.cpp:131] Top shape: (1)
I0428 20:14:54.916798   315 net.cpp:139] Memory required for data: 14834804
I0428 20:14:54.916803   315 layer_factory.hpp:77] Creating layer loss
I0428 20:14:54.916808   315 net.cpp:86] Creating Layer loss
I0428 20:14:54.916827   315 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:14:54.916832   315 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:54.916838   315 net.cpp:382] loss -> loss
I0428 20:14:54.916846   315 layer_factory.hpp:77] Creating layer loss
I0428 20:14:54.917114   315 net.cpp:124] Setting up loss
I0428 20:14:54.917126   315 net.cpp:131] Top shape: (1)
I0428 20:14:54.917131   315 net.cpp:134]     with loss weight 1
I0428 20:14:54.917151   315 net.cpp:139] Memory required for data: 14834808
I0428 20:14:54.917156   315 net.cpp:200] loss needs backward computation.
I0428 20:14:54.917160   315 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:54.917165   315 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:14:54.917168   315 net.cpp:200] relu3 needs backward computation.
I0428 20:14:54.917172   315 net.cpp:200] ip3 needs backward computation.
I0428 20:14:54.917176   315 net.cpp:200] relu2 needs backward computation.
I0428 20:14:54.917179   315 net.cpp:200] ip2 needs backward computation.
I0428 20:14:54.917184   315 net.cpp:200] relu1 needs backward computation.
I0428 20:14:54.917187   315 net.cpp:200] ip1 needs backward computation.
I0428 20:14:54.917192   315 net.cpp:200] pool1 needs backward computation.
I0428 20:14:54.917196   315 net.cpp:200] conv1 needs backward computation.
I0428 20:14:54.917199   315 net.cpp:200] pool0 needs backward computation.
I0428 20:14:54.917203   315 net.cpp:200] conv0 needs backward computation.
I0428 20:14:54.917207   315 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:54.917212   315 net.cpp:202] mnist does not need backward computation.
I0428 20:14:54.917217   315 net.cpp:244] This network produces output accuracy
I0428 20:14:54.917220   315 net.cpp:244] This network produces output loss
I0428 20:14:54.917233   315 net.cpp:257] Network initialization done.
I0428 20:14:54.917284   315 solver.cpp:56] Solver scaffolding done.
I0428 20:14:54.917677   315 caffe.cpp:248] Starting Optimization
I0428 20:14:54.917685   315 solver.cpp:273] Solving LeNet
I0428 20:14:54.917688   315 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:54.918658   315 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:54.926318   315 blocking_queue.cpp:49] Waiting for data
I0428 20:14:54.997498   330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:54.998345   315 solver.cpp:398]     Test net output #0: accuracy = 0.0794
I0428 20:14:54.998369   315 solver.cpp:398]     Test net output #1: loss = 2.32072 (* 1 = 2.32072 loss)
I0428 20:14:55.003062   315 solver.cpp:219] Iteration 0 (-9.52883e-43 iter/s, 0.0853424s/100 iters), loss = 2.31992
I0428 20:14:55.003093   315 solver.cpp:238]     Train net output #0: loss = 2.31992 (* 1 = 2.31992 loss)
I0428 20:14:55.003108   315 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:55.125147   315 solver.cpp:219] Iteration 100 (819.401 iter/s, 0.12204s/100 iters), loss = 0.804392
I0428 20:14:55.125193   315 solver.cpp:238]     Train net output #0: loss = 0.804392 (* 1 = 0.804392 loss)
I0428 20:14:55.125205   315 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:55.244722   315 solver.cpp:219] Iteration 200 (836.671 iter/s, 0.119521s/100 iters), loss = 0.551814
I0428 20:14:55.244752   315 solver.cpp:238]     Train net output #0: loss = 0.551814 (* 1 = 0.551814 loss)
I0428 20:14:55.244760   315 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:55.359138   315 solver.cpp:219] Iteration 300 (874.312 iter/s, 0.114376s/100 iters), loss = 0.524537
I0428 20:14:55.359169   315 solver.cpp:238]     Train net output #0: loss = 0.524537 (* 1 = 0.524537 loss)
I0428 20:14:55.359175   315 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:55.473953   315 solver.cpp:219] Iteration 400 (871.285 iter/s, 0.114773s/100 iters), loss = 0.362231
I0428 20:14:55.473981   315 solver.cpp:238]     Train net output #0: loss = 0.36223 (* 1 = 0.36223 loss)
I0428 20:14:55.473989   315 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:55.587452   315 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:55.664008   330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:55.664791   315 solver.cpp:398]     Test net output #0: accuracy = 0.9329
I0428 20:14:55.664819   315 solver.cpp:398]     Test net output #1: loss = 0.224486 (* 1 = 0.224486 loss)
I0428 20:14:55.666100   315 solver.cpp:219] Iteration 500 (520.553 iter/s, 0.192103s/100 iters), loss = 0.226336
I0428 20:14:55.666144   315 solver.cpp:238]     Train net output #0: loss = 0.226336 (* 1 = 0.226336 loss)
I0428 20:14:55.666152   315 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:55.786151   315 solver.cpp:219] Iteration 600 (833.351 iter/s, 0.119997s/100 iters), loss = 0.141387
I0428 20:14:55.786181   315 solver.cpp:238]     Train net output #0: loss = 0.141387 (* 1 = 0.141387 loss)
I0428 20:14:55.786188   315 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:55.898798   315 solver.cpp:219] Iteration 700 (888.042 iter/s, 0.112607s/100 iters), loss = 0.225214
I0428 20:14:55.898825   315 solver.cpp:238]     Train net output #0: loss = 0.225214 (* 1 = 0.225214 loss)
I0428 20:14:55.898833   315 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:56.010299   315 solver.cpp:219] Iteration 800 (897.155 iter/s, 0.111463s/100 iters), loss = 0.372665
I0428 20:14:56.010324   315 solver.cpp:238]     Train net output #0: loss = 0.372665 (* 1 = 0.372665 loss)
I0428 20:14:56.010331   315 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:56.121827   315 solver.cpp:219] Iteration 900 (896.916 iter/s, 0.111493s/100 iters), loss = 0.291562
I0428 20:14:56.121868   315 solver.cpp:238]     Train net output #0: loss = 0.291562 (* 1 = 0.291562 loss)
I0428 20:14:56.121876   315 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:56.158473   329 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:56.231600   315 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:56.232502   315 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:56.233180   315 solver.cpp:311] Iteration 1000, loss = 0.189752
I0428 20:14:56.233196   315 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:56.296421   330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:56.298095   315 solver.cpp:398]     Test net output #0: accuracy = 0.9545
I0428 20:14:56.298130   315 solver.cpp:398]     Test net output #1: loss = 0.148622 (* 1 = 0.148622 loss)
I0428 20:14:56.298135   315 solver.cpp:316] Optimization Done.
I0428 20:14:56.298137   315 caffe.cpp:259] Optimization Done.
