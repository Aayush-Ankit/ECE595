I0428 20:04:26.094620 30383 caffe.cpp:218] Using GPUs 0
I0428 20:04:26.123833 30383 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:26.572927 30383 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test972.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:26.573060 30383 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test972.prototxt
I0428 20:04:26.573436 30383 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:26.573467 30383 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:26.573547 30383 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:26.573611 30383 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:26.573693 30383 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:26.573711 30383 net.cpp:86] Creating Layer mnist
I0428 20:04:26.573717 30383 net.cpp:382] mnist -> data
I0428 20:04:26.573736 30383 net.cpp:382] mnist -> label
I0428 20:04:26.574713 30383 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:26.576939 30383 net.cpp:124] Setting up mnist
I0428 20:04:26.576970 30383 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:26.576975 30383 net.cpp:131] Top shape: 64 (64)
I0428 20:04:26.576978 30383 net.cpp:139] Memory required for data: 200960
I0428 20:04:26.576983 30383 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:26.576998 30383 net.cpp:86] Creating Layer conv0
I0428 20:04:26.577015 30383 net.cpp:408] conv0 <- data
I0428 20:04:26.577024 30383 net.cpp:382] conv0 -> conv0
I0428 20:04:26.806120 30383 net.cpp:124] Setting up conv0
I0428 20:04:26.806147 30383 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:26.806150 30383 net.cpp:139] Memory required for data: 1675520
I0428 20:04:26.806165 30383 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:26.806179 30383 net.cpp:86] Creating Layer pool0
I0428 20:04:26.806181 30383 net.cpp:408] pool0 <- conv0
I0428 20:04:26.806186 30383 net.cpp:382] pool0 -> pool0
I0428 20:04:26.806246 30383 net.cpp:124] Setting up pool0
I0428 20:04:26.806251 30383 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:26.806253 30383 net.cpp:139] Memory required for data: 2044160
I0428 20:04:26.806257 30383 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:26.806267 30383 net.cpp:86] Creating Layer conv1
I0428 20:04:26.806269 30383 net.cpp:408] conv1 <- pool0
I0428 20:04:26.806273 30383 net.cpp:382] conv1 -> conv1
I0428 20:04:26.808272 30383 net.cpp:124] Setting up conv1
I0428 20:04:26.808286 30383 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:26.808290 30383 net.cpp:139] Memory required for data: 3682560
I0428 20:04:26.808300 30383 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:26.808306 30383 net.cpp:86] Creating Layer pool1
I0428 20:04:26.808310 30383 net.cpp:408] pool1 <- conv1
I0428 20:04:26.808315 30383 net.cpp:382] pool1 -> pool1
I0428 20:04:26.808351 30383 net.cpp:124] Setting up pool1
I0428 20:04:26.808356 30383 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:26.808358 30383 net.cpp:139] Memory required for data: 4092160
I0428 20:04:26.808362 30383 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:26.808368 30383 net.cpp:86] Creating Layer ip1
I0428 20:04:26.808372 30383 net.cpp:408] ip1 <- pool1
I0428 20:04:26.808375 30383 net.cpp:382] ip1 -> ip1
I0428 20:04:26.809952 30383 net.cpp:124] Setting up ip1
I0428 20:04:26.809964 30383 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:26.809968 30383 net.cpp:139] Memory required for data: 4104960
I0428 20:04:26.809976 30383 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:26.809981 30383 net.cpp:86] Creating Layer relu1
I0428 20:04:26.809985 30383 net.cpp:408] relu1 <- ip1
I0428 20:04:26.809989 30383 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:26.810163 30383 net.cpp:124] Setting up relu1
I0428 20:04:26.810170 30383 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:26.810173 30383 net.cpp:139] Memory required for data: 4117760
I0428 20:04:26.810176 30383 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:26.810184 30383 net.cpp:86] Creating Layer ip2
I0428 20:04:26.810186 30383 net.cpp:408] ip2 <- ip1
I0428 20:04:26.810190 30383 net.cpp:382] ip2 -> ip2
I0428 20:04:26.811233 30383 net.cpp:124] Setting up ip2
I0428 20:04:26.811245 30383 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:26.811249 30383 net.cpp:139] Memory required for data: 4130560
I0428 20:04:26.811256 30383 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:26.811264 30383 net.cpp:86] Creating Layer relu2
I0428 20:04:26.811266 30383 net.cpp:408] relu2 <- ip2
I0428 20:04:26.811271 30383 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:26.812036 30383 net.cpp:124] Setting up relu2
I0428 20:04:26.812048 30383 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:26.812052 30383 net.cpp:139] Memory required for data: 4143360
I0428 20:04:26.812054 30383 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:26.812062 30383 net.cpp:86] Creating Layer ip3
I0428 20:04:26.812065 30383 net.cpp:408] ip3 <- ip2
I0428 20:04:26.812070 30383 net.cpp:382] ip3 -> ip3
I0428 20:04:26.812165 30383 net.cpp:124] Setting up ip3
I0428 20:04:26.812172 30383 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:26.812175 30383 net.cpp:139] Memory required for data: 4145920
I0428 20:04:26.812182 30383 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:26.812186 30383 net.cpp:86] Creating Layer relu3
I0428 20:04:26.812189 30383 net.cpp:408] relu3 <- ip3
I0428 20:04:26.812193 30383 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:26.812362 30383 net.cpp:124] Setting up relu3
I0428 20:04:26.812371 30383 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:26.812389 30383 net.cpp:139] Memory required for data: 4148480
I0428 20:04:26.812392 30383 layer_factory.hpp:77] Creating layer loss
I0428 20:04:26.812398 30383 net.cpp:86] Creating Layer loss
I0428 20:04:26.812402 30383 net.cpp:408] loss <- ip3
I0428 20:04:26.812405 30383 net.cpp:408] loss <- label
I0428 20:04:26.812410 30383 net.cpp:382] loss -> loss
I0428 20:04:26.812445 30383 layer_factory.hpp:77] Creating layer loss
I0428 20:04:26.812696 30383 net.cpp:124] Setting up loss
I0428 20:04:26.812705 30383 net.cpp:131] Top shape: (1)
I0428 20:04:26.812708 30383 net.cpp:134]     with loss weight 1
I0428 20:04:26.812736 30383 net.cpp:139] Memory required for data: 4148484
I0428 20:04:26.812739 30383 net.cpp:200] loss needs backward computation.
I0428 20:04:26.812743 30383 net.cpp:200] relu3 needs backward computation.
I0428 20:04:26.812746 30383 net.cpp:200] ip3 needs backward computation.
I0428 20:04:26.812748 30383 net.cpp:200] relu2 needs backward computation.
I0428 20:04:26.812750 30383 net.cpp:200] ip2 needs backward computation.
I0428 20:04:26.812753 30383 net.cpp:200] relu1 needs backward computation.
I0428 20:04:26.812757 30383 net.cpp:200] ip1 needs backward computation.
I0428 20:04:26.812758 30383 net.cpp:200] pool1 needs backward computation.
I0428 20:04:26.812762 30383 net.cpp:200] conv1 needs backward computation.
I0428 20:04:26.812764 30383 net.cpp:200] pool0 needs backward computation.
I0428 20:04:26.812767 30383 net.cpp:200] conv0 needs backward computation.
I0428 20:04:26.812770 30383 net.cpp:202] mnist does not need backward computation.
I0428 20:04:26.812786 30383 net.cpp:244] This network produces output loss
I0428 20:04:26.812796 30383 net.cpp:257] Network initialization done.
I0428 20:04:26.813200 30383 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test972.prototxt
I0428 20:04:26.813268 30383 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:26.813382 30383 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:26.813462 30383 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:26.813534 30383 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:26.813546 30383 net.cpp:86] Creating Layer mnist
I0428 20:04:26.813552 30383 net.cpp:382] mnist -> data
I0428 20:04:26.813560 30383 net.cpp:382] mnist -> label
I0428 20:04:26.813681 30383 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:26.814781 30383 net.cpp:124] Setting up mnist
I0428 20:04:26.814810 30383 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:26.814831 30383 net.cpp:131] Top shape: 100 (100)
I0428 20:04:26.814832 30383 net.cpp:139] Memory required for data: 314000
I0428 20:04:26.814836 30383 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:26.814846 30383 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:26.814849 30383 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:26.814855 30383 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:26.814862 30383 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:26.814931 30383 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:26.814940 30383 net.cpp:131] Top shape: 100 (100)
I0428 20:04:26.814944 30383 net.cpp:131] Top shape: 100 (100)
I0428 20:04:26.814946 30383 net.cpp:139] Memory required for data: 314800
I0428 20:04:26.814949 30383 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:26.814960 30383 net.cpp:86] Creating Layer conv0
I0428 20:04:26.814963 30383 net.cpp:408] conv0 <- data
I0428 20:04:26.814967 30383 net.cpp:382] conv0 -> conv0
I0428 20:04:26.816535 30383 net.cpp:124] Setting up conv0
I0428 20:04:26.816550 30383 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:26.816571 30383 net.cpp:139] Memory required for data: 2618800
I0428 20:04:26.816579 30383 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:26.816586 30383 net.cpp:86] Creating Layer pool0
I0428 20:04:26.816589 30383 net.cpp:408] pool0 <- conv0
I0428 20:04:26.816593 30383 net.cpp:382] pool0 -> pool0
I0428 20:04:26.816628 30383 net.cpp:124] Setting up pool0
I0428 20:04:26.816633 30383 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:26.816637 30383 net.cpp:139] Memory required for data: 3194800
I0428 20:04:26.816638 30383 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:26.816665 30383 net.cpp:86] Creating Layer conv1
I0428 20:04:26.816668 30383 net.cpp:408] conv1 <- pool0
I0428 20:04:26.816673 30383 net.cpp:382] conv1 -> conv1
I0428 20:04:26.818440 30383 net.cpp:124] Setting up conv1
I0428 20:04:26.818454 30383 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:26.818459 30383 net.cpp:139] Memory required for data: 5754800
I0428 20:04:26.818469 30383 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:26.818475 30383 net.cpp:86] Creating Layer pool1
I0428 20:04:26.818480 30383 net.cpp:408] pool1 <- conv1
I0428 20:04:26.818485 30383 net.cpp:382] pool1 -> pool1
I0428 20:04:26.818521 30383 net.cpp:124] Setting up pool1
I0428 20:04:26.818526 30383 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:26.818529 30383 net.cpp:139] Memory required for data: 6394800
I0428 20:04:26.818532 30383 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:26.818537 30383 net.cpp:86] Creating Layer ip1
I0428 20:04:26.818541 30383 net.cpp:408] ip1 <- pool1
I0428 20:04:26.818547 30383 net.cpp:382] ip1 -> ip1
I0428 20:04:26.819128 30383 net.cpp:124] Setting up ip1
I0428 20:04:26.819135 30383 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:26.819149 30383 net.cpp:139] Memory required for data: 6414800
I0428 20:04:26.819156 30383 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:26.819162 30383 net.cpp:86] Creating Layer relu1
I0428 20:04:26.819166 30383 net.cpp:408] relu1 <- ip1
I0428 20:04:26.819170 30383 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:26.819360 30383 net.cpp:124] Setting up relu1
I0428 20:04:26.819386 30383 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:26.819388 30383 net.cpp:139] Memory required for data: 6434800
I0428 20:04:26.819391 30383 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:26.819399 30383 net.cpp:86] Creating Layer ip2
I0428 20:04:26.819402 30383 net.cpp:408] ip2 <- ip1
I0428 20:04:26.819407 30383 net.cpp:382] ip2 -> ip2
I0428 20:04:26.819535 30383 net.cpp:124] Setting up ip2
I0428 20:04:26.819542 30383 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:26.819545 30383 net.cpp:139] Memory required for data: 6454800
I0428 20:04:26.819551 30383 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:26.819557 30383 net.cpp:86] Creating Layer relu2
I0428 20:04:26.819561 30383 net.cpp:408] relu2 <- ip2
I0428 20:04:26.819566 30383 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:26.819741 30383 net.cpp:124] Setting up relu2
I0428 20:04:26.819748 30383 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:26.819752 30383 net.cpp:139] Memory required for data: 6474800
I0428 20:04:26.819754 30383 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:26.819761 30383 net.cpp:86] Creating Layer ip3
I0428 20:04:26.819764 30383 net.cpp:408] ip3 <- ip2
I0428 20:04:26.819771 30383 net.cpp:382] ip3 -> ip3
I0428 20:04:26.819871 30383 net.cpp:124] Setting up ip3
I0428 20:04:26.819880 30383 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:26.819882 30383 net.cpp:139] Memory required for data: 6478800
I0428 20:04:26.819890 30383 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:26.819895 30383 net.cpp:86] Creating Layer relu3
I0428 20:04:26.819898 30383 net.cpp:408] relu3 <- ip3
I0428 20:04:26.819902 30383 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:26.820693 30383 net.cpp:124] Setting up relu3
I0428 20:04:26.820704 30383 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:26.820724 30383 net.cpp:139] Memory required for data: 6482800
I0428 20:04:26.820726 30383 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:26.820734 30383 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:26.820736 30383 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:26.820741 30383 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:26.820747 30383 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:26.820782 30383 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:26.820788 30383 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:26.820792 30383 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:26.820794 30383 net.cpp:139] Memory required for data: 6490800
I0428 20:04:26.820797 30383 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:26.820802 30383 net.cpp:86] Creating Layer accuracy
I0428 20:04:26.820806 30383 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:26.820816 30383 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:26.820835 30383 net.cpp:382] accuracy -> accuracy
I0428 20:04:26.820843 30383 net.cpp:124] Setting up accuracy
I0428 20:04:26.820865 30383 net.cpp:131] Top shape: (1)
I0428 20:04:26.820868 30383 net.cpp:139] Memory required for data: 6490804
I0428 20:04:26.820871 30383 layer_factory.hpp:77] Creating layer loss
I0428 20:04:26.820878 30383 net.cpp:86] Creating Layer loss
I0428 20:04:26.820880 30383 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:26.820884 30383 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:26.820888 30383 net.cpp:382] loss -> loss
I0428 20:04:26.820909 30383 layer_factory.hpp:77] Creating layer loss
I0428 20:04:26.821190 30383 net.cpp:124] Setting up loss
I0428 20:04:26.821214 30383 net.cpp:131] Top shape: (1)
I0428 20:04:26.821233 30383 net.cpp:134]     with loss weight 1
I0428 20:04:26.821264 30383 net.cpp:139] Memory required for data: 6490808
I0428 20:04:26.821267 30383 net.cpp:200] loss needs backward computation.
I0428 20:04:26.821271 30383 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:26.821275 30383 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:26.821279 30383 net.cpp:200] relu3 needs backward computation.
I0428 20:04:26.821281 30383 net.cpp:200] ip3 needs backward computation.
I0428 20:04:26.821283 30383 net.cpp:200] relu2 needs backward computation.
I0428 20:04:26.821286 30383 net.cpp:200] ip2 needs backward computation.
I0428 20:04:26.821290 30383 net.cpp:200] relu1 needs backward computation.
I0428 20:04:26.821292 30383 net.cpp:200] ip1 needs backward computation.
I0428 20:04:26.821295 30383 net.cpp:200] pool1 needs backward computation.
I0428 20:04:26.821298 30383 net.cpp:200] conv1 needs backward computation.
I0428 20:04:26.821301 30383 net.cpp:200] pool0 needs backward computation.
I0428 20:04:26.821305 30383 net.cpp:200] conv0 needs backward computation.
I0428 20:04:26.821308 30383 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:26.821312 30383 net.cpp:202] mnist does not need backward computation.
I0428 20:04:26.821315 30383 net.cpp:244] This network produces output accuracy
I0428 20:04:26.821318 30383 net.cpp:244] This network produces output loss
I0428 20:04:26.821331 30383 net.cpp:257] Network initialization done.
I0428 20:04:26.821409 30383 solver.cpp:56] Solver scaffolding done.
I0428 20:04:26.821815 30383 caffe.cpp:248] Starting Optimization
I0428 20:04:26.821820 30383 solver.cpp:273] Solving LeNet
I0428 20:04:26.821823 30383 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:26.822589 30383 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:26.880465 30391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:26.882357 30383 solver.cpp:398]     Test net output #0: accuracy = 0.0947
I0428 20:04:26.882411 30383 solver.cpp:398]     Test net output #1: loss = 2.32426 (* 1 = 2.32426 loss)
I0428 20:04:26.885984 30383 solver.cpp:219] Iteration 0 (-1.26818e-42 iter/s, 0.0641229s/100 iters), loss = 2.31467
I0428 20:04:26.886019 30383 solver.cpp:238]     Train net output #0: loss = 2.31467 (* 1 = 2.31467 loss)
I0428 20:04:26.886030 30383 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:27.048688 30383 solver.cpp:219] Iteration 100 (614.767 iter/s, 0.162663s/100 iters), loss = 0.72556
I0428 20:04:27.048725 30383 solver.cpp:238]     Train net output #0: loss = 0.72556 (* 1 = 0.72556 loss)
I0428 20:04:27.048732 30383 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:27.207141 30383 solver.cpp:219] Iteration 200 (631.258 iter/s, 0.158414s/100 iters), loss = 0.786437
I0428 20:04:27.207166 30383 solver.cpp:238]     Train net output #0: loss = 0.786437 (* 1 = 0.786437 loss)
I0428 20:04:27.207173 30383 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:27.361951 30383 solver.cpp:219] Iteration 300 (646.11 iter/s, 0.154772s/100 iters), loss = 0.389986
I0428 20:04:27.361975 30383 solver.cpp:238]     Train net output #0: loss = 0.389986 (* 1 = 0.389986 loss)
I0428 20:04:27.361981 30383 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:27.517494 30383 solver.cpp:219] Iteration 400 (643.071 iter/s, 0.155504s/100 iters), loss = 0.238855
I0428 20:04:27.517539 30383 solver.cpp:238]     Train net output #0: loss = 0.238855 (* 1 = 0.238855 loss)
I0428 20:04:27.517546 30383 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:27.670584 30383 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:27.727560 30391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:27.729550 30383 solver.cpp:398]     Test net output #0: accuracy = 0.9552
I0428 20:04:27.729588 30383 solver.cpp:398]     Test net output #1: loss = 0.14269 (* 1 = 0.14269 loss)
I0428 20:04:27.730939 30383 solver.cpp:219] Iteration 500 (468.638 iter/s, 0.213384s/100 iters), loss = 0.180422
I0428 20:04:27.730978 30383 solver.cpp:238]     Train net output #0: loss = 0.180422 (* 1 = 0.180422 loss)
I0428 20:04:27.731014 30383 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:27.886138 30383 solver.cpp:219] Iteration 600 (644.485 iter/s, 0.155163s/100 iters), loss = 0.130932
I0428 20:04:27.886178 30383 solver.cpp:238]     Train net output #0: loss = 0.130932 (* 1 = 0.130932 loss)
I0428 20:04:27.886184 30383 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:28.041312 30383 solver.cpp:219] Iteration 700 (644.591 iter/s, 0.155137s/100 iters), loss = 0.149431
I0428 20:04:28.041352 30383 solver.cpp:238]     Train net output #0: loss = 0.149431 (* 1 = 0.149431 loss)
I0428 20:04:28.041358 30383 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:28.195968 30383 solver.cpp:219] Iteration 800 (646.752 iter/s, 0.154619s/100 iters), loss = 0.173942
I0428 20:04:28.196009 30383 solver.cpp:238]     Train net output #0: loss = 0.173942 (* 1 = 0.173942 loss)
I0428 20:04:28.196017 30383 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:28.350054 30383 solver.cpp:219] Iteration 900 (649.15 iter/s, 0.154047s/100 iters), loss = 0.208557
I0428 20:04:28.350077 30383 solver.cpp:238]     Train net output #0: loss = 0.208557 (* 1 = 0.208557 loss)
I0428 20:04:28.350083 30383 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:28.401659 30390 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:28.503798 30383 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:28.506613 30383 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:28.507971 30383 solver.cpp:311] Iteration 1000, loss = 0.147989
I0428 20:04:28.507987 30383 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:28.564553 30391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:28.566591 30383 solver.cpp:398]     Test net output #0: accuracy = 0.9742
I0428 20:04:28.566625 30383 solver.cpp:398]     Test net output #1: loss = 0.0731993 (* 1 = 0.0731993 loss)
I0428 20:04:28.566646 30383 solver.cpp:316] Optimization Done.
I0428 20:04:28.566649 30383 caffe.cpp:259] Optimization Done.
