I0428 19:43:54.376860 25483 caffe.cpp:218] Using GPUs 0
I0428 19:43:54.418499 25483 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:54.939906 25483 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test434.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:54.940081 25483 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test434.prototxt
I0428 19:43:54.940469 25483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:54.940493 25483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:54.940598 25483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:54.940706 25483 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:54.940845 25483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:54.940882 25483 net.cpp:86] Creating Layer mnist
I0428 19:43:54.940896 25483 net.cpp:382] mnist -> data
I0428 19:43:54.940928 25483 net.cpp:382] mnist -> label
I0428 19:43:54.942159 25483 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:54.944651 25483 net.cpp:124] Setting up mnist
I0428 19:43:54.944671 25483 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:54.944684 25483 net.cpp:131] Top shape: 64 (64)
I0428 19:43:54.944691 25483 net.cpp:139] Memory required for data: 200960
I0428 19:43:54.944702 25483 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:54.944725 25483 net.cpp:86] Creating Layer conv0
I0428 19:43:54.944736 25483 net.cpp:408] conv0 <- data
I0428 19:43:54.944756 25483 net.cpp:382] conv0 -> conv0
I0428 19:43:55.233131 25483 net.cpp:124] Setting up conv0
I0428 19:43:55.233162 25483 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:55.233170 25483 net.cpp:139] Memory required for data: 495872
I0428 19:43:55.233219 25483 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:55.233240 25483 net.cpp:86] Creating Layer pool0
I0428 19:43:55.233248 25483 net.cpp:408] pool0 <- conv0
I0428 19:43:55.233258 25483 net.cpp:382] pool0 -> pool0
I0428 19:43:55.233315 25483 net.cpp:124] Setting up pool0
I0428 19:43:55.233325 25483 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:55.233331 25483 net.cpp:139] Memory required for data: 569600
I0428 19:43:55.233337 25483 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:55.233353 25483 net.cpp:86] Creating Layer conv1
I0428 19:43:55.233361 25483 net.cpp:408] conv1 <- pool0
I0428 19:43:55.233371 25483 net.cpp:382] conv1 -> conv1
I0428 19:43:55.236153 25483 net.cpp:124] Setting up conv1
I0428 19:43:55.236171 25483 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:43:55.236177 25483 net.cpp:139] Memory required for data: 1388800
I0428 19:43:55.236192 25483 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:55.236204 25483 net.cpp:86] Creating Layer pool1
I0428 19:43:55.236212 25483 net.cpp:408] pool1 <- conv1
I0428 19:43:55.236220 25483 net.cpp:382] pool1 -> pool1
I0428 19:43:55.236268 25483 net.cpp:124] Setting up pool1
I0428 19:43:55.236279 25483 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:43:55.236284 25483 net.cpp:139] Memory required for data: 1593600
I0428 19:43:55.236289 25483 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:55.236300 25483 net.cpp:86] Creating Layer ip1
I0428 19:43:55.236306 25483 net.cpp:408] ip1 <- pool1
I0428 19:43:55.236315 25483 net.cpp:382] ip1 -> ip1
I0428 19:43:55.237346 25483 net.cpp:124] Setting up ip1
I0428 19:43:55.237360 25483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:55.237366 25483 net.cpp:139] Memory required for data: 1596160
I0428 19:43:55.237380 25483 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:55.237390 25483 net.cpp:86] Creating Layer relu1
I0428 19:43:55.237396 25483 net.cpp:408] relu1 <- ip1
I0428 19:43:55.237406 25483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:55.237586 25483 net.cpp:124] Setting up relu1
I0428 19:43:55.237597 25483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:55.237603 25483 net.cpp:139] Memory required for data: 1598720
I0428 19:43:55.237608 25483 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:55.237619 25483 net.cpp:86] Creating Layer ip2
I0428 19:43:55.237625 25483 net.cpp:408] ip2 <- ip1
I0428 19:43:55.237634 25483 net.cpp:382] ip2 -> ip2
I0428 19:43:55.237742 25483 net.cpp:124] Setting up ip2
I0428 19:43:55.237751 25483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:55.237756 25483 net.cpp:139] Memory required for data: 1601280
I0428 19:43:55.237766 25483 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:55.237776 25483 net.cpp:86] Creating Layer relu2
I0428 19:43:55.237787 25483 net.cpp:408] relu2 <- ip2
I0428 19:43:55.237793 25483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:55.238556 25483 net.cpp:124] Setting up relu2
I0428 19:43:55.238572 25483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:55.238579 25483 net.cpp:139] Memory required for data: 1603840
I0428 19:43:55.238584 25483 layer_factory.hpp:77] Creating layer loss
I0428 19:43:55.238595 25483 net.cpp:86] Creating Layer loss
I0428 19:43:55.238601 25483 net.cpp:408] loss <- ip2
I0428 19:43:55.238610 25483 net.cpp:408] loss <- label
I0428 19:43:55.238620 25483 net.cpp:382] loss -> loss
I0428 19:43:55.238648 25483 layer_factory.hpp:77] Creating layer loss
I0428 19:43:55.238916 25483 net.cpp:124] Setting up loss
I0428 19:43:55.238929 25483 net.cpp:131] Top shape: (1)
I0428 19:43:55.238935 25483 net.cpp:134]     with loss weight 1
I0428 19:43:55.238956 25483 net.cpp:139] Memory required for data: 1603844
I0428 19:43:55.238965 25483 net.cpp:200] loss needs backward computation.
I0428 19:43:55.238970 25483 net.cpp:200] relu2 needs backward computation.
I0428 19:43:55.238976 25483 net.cpp:200] ip2 needs backward computation.
I0428 19:43:55.238982 25483 net.cpp:200] relu1 needs backward computation.
I0428 19:43:55.238988 25483 net.cpp:200] ip1 needs backward computation.
I0428 19:43:55.239007 25483 net.cpp:200] pool1 needs backward computation.
I0428 19:43:55.239014 25483 net.cpp:200] conv1 needs backward computation.
I0428 19:43:55.239020 25483 net.cpp:200] pool0 needs backward computation.
I0428 19:43:55.239027 25483 net.cpp:200] conv0 needs backward computation.
I0428 19:43:55.239032 25483 net.cpp:202] mnist does not need backward computation.
I0428 19:43:55.239038 25483 net.cpp:244] This network produces output loss
I0428 19:43:55.239054 25483 net.cpp:257] Network initialization done.
I0428 19:43:55.239383 25483 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test434.prototxt
I0428 19:43:55.239416 25483 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:55.239509 25483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:55.239609 25483 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:55.239670 25483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:55.239688 25483 net.cpp:86] Creating Layer mnist
I0428 19:43:55.239696 25483 net.cpp:382] mnist -> data
I0428 19:43:55.239708 25483 net.cpp:382] mnist -> label
I0428 19:43:55.239831 25483 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:55.241942 25483 net.cpp:124] Setting up mnist
I0428 19:43:55.241958 25483 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:55.241966 25483 net.cpp:131] Top shape: 100 (100)
I0428 19:43:55.241972 25483 net.cpp:139] Memory required for data: 314000
I0428 19:43:55.241978 25483 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:55.241993 25483 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:55.242002 25483 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:55.242010 25483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:55.242022 25483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:55.242121 25483 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:55.242141 25483 net.cpp:131] Top shape: 100 (100)
I0428 19:43:55.242148 25483 net.cpp:131] Top shape: 100 (100)
I0428 19:43:55.242153 25483 net.cpp:139] Memory required for data: 314800
I0428 19:43:55.242159 25483 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:55.242173 25483 net.cpp:86] Creating Layer conv0
I0428 19:43:55.242180 25483 net.cpp:408] conv0 <- data
I0428 19:43:55.242190 25483 net.cpp:382] conv0 -> conv0
I0428 19:43:55.243798 25483 net.cpp:124] Setting up conv0
I0428 19:43:55.243813 25483 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:55.243821 25483 net.cpp:139] Memory required for data: 775600
I0428 19:43:55.243836 25483 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:55.243865 25483 net.cpp:86] Creating Layer pool0
I0428 19:43:55.243871 25483 net.cpp:408] pool0 <- conv0
I0428 19:43:55.243894 25483 net.cpp:382] pool0 -> pool0
I0428 19:43:55.243955 25483 net.cpp:124] Setting up pool0
I0428 19:43:55.243964 25483 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:55.243970 25483 net.cpp:139] Memory required for data: 890800
I0428 19:43:55.243976 25483 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:55.243993 25483 net.cpp:86] Creating Layer conv1
I0428 19:43:55.243999 25483 net.cpp:408] conv1 <- pool0
I0428 19:43:55.244011 25483 net.cpp:382] conv1 -> conv1
I0428 19:43:55.245580 25483 net.cpp:124] Setting up conv1
I0428 19:43:55.245595 25483 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:43:55.245601 25483 net.cpp:139] Memory required for data: 2170800
I0428 19:43:55.245617 25483 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:55.245630 25483 net.cpp:86] Creating Layer pool1
I0428 19:43:55.245637 25483 net.cpp:408] pool1 <- conv1
I0428 19:43:55.245645 25483 net.cpp:382] pool1 -> pool1
I0428 19:43:55.245692 25483 net.cpp:124] Setting up pool1
I0428 19:43:55.245700 25483 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:43:55.245705 25483 net.cpp:139] Memory required for data: 2490800
I0428 19:43:55.245710 25483 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:55.245720 25483 net.cpp:86] Creating Layer ip1
I0428 19:43:55.245726 25483 net.cpp:408] ip1 <- pool1
I0428 19:43:55.245739 25483 net.cpp:382] ip1 -> ip1
I0428 19:43:55.245895 25483 net.cpp:124] Setting up ip1
I0428 19:43:55.245905 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.245910 25483 net.cpp:139] Memory required for data: 2494800
I0428 19:43:55.245923 25483 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:55.245931 25483 net.cpp:86] Creating Layer relu1
I0428 19:43:55.245937 25483 net.cpp:408] relu1 <- ip1
I0428 19:43:55.245949 25483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:55.246129 25483 net.cpp:124] Setting up relu1
I0428 19:43:55.246140 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.246147 25483 net.cpp:139] Memory required for data: 2498800
I0428 19:43:55.246152 25483 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:55.246165 25483 net.cpp:86] Creating Layer ip2
I0428 19:43:55.246173 25483 net.cpp:408] ip2 <- ip1
I0428 19:43:55.246182 25483 net.cpp:382] ip2 -> ip2
I0428 19:43:55.246295 25483 net.cpp:124] Setting up ip2
I0428 19:43:55.246304 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.246309 25483 net.cpp:139] Memory required for data: 2502800
I0428 19:43:55.246318 25483 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:55.246327 25483 net.cpp:86] Creating Layer relu2
I0428 19:43:55.246332 25483 net.cpp:408] relu2 <- ip2
I0428 19:43:55.246342 25483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:55.246569 25483 net.cpp:124] Setting up relu2
I0428 19:43:55.246579 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.246584 25483 net.cpp:139] Memory required for data: 2506800
I0428 19:43:55.246590 25483 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:43:55.246598 25483 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:43:55.246603 25483 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:43:55.246613 25483 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:43:55.246634 25483 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:43:55.246682 25483 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:43:55.246691 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.246698 25483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:55.246703 25483 net.cpp:139] Memory required for data: 2514800
I0428 19:43:55.246709 25483 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:55.246718 25483 net.cpp:86] Creating Layer accuracy
I0428 19:43:55.246728 25483 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:43:55.246736 25483 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:55.246745 25483 net.cpp:382] accuracy -> accuracy
I0428 19:43:55.246757 25483 net.cpp:124] Setting up accuracy
I0428 19:43:55.246765 25483 net.cpp:131] Top shape: (1)
I0428 19:43:55.246770 25483 net.cpp:139] Memory required for data: 2514804
I0428 19:43:55.246775 25483 layer_factory.hpp:77] Creating layer loss
I0428 19:43:55.246783 25483 net.cpp:86] Creating Layer loss
I0428 19:43:55.246789 25483 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:43:55.246798 25483 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:55.246804 25483 net.cpp:382] loss -> loss
I0428 19:43:55.246814 25483 layer_factory.hpp:77] Creating layer loss
I0428 19:43:55.247072 25483 net.cpp:124] Setting up loss
I0428 19:43:55.247083 25483 net.cpp:131] Top shape: (1)
I0428 19:43:55.247089 25483 net.cpp:134]     with loss weight 1
I0428 19:43:55.247098 25483 net.cpp:139] Memory required for data: 2514808
I0428 19:43:55.247104 25483 net.cpp:200] loss needs backward computation.
I0428 19:43:55.247112 25483 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:55.247117 25483 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:43:55.247123 25483 net.cpp:200] relu2 needs backward computation.
I0428 19:43:55.247129 25483 net.cpp:200] ip2 needs backward computation.
I0428 19:43:55.247134 25483 net.cpp:200] relu1 needs backward computation.
I0428 19:43:55.247139 25483 net.cpp:200] ip1 needs backward computation.
I0428 19:43:55.247153 25483 net.cpp:200] pool1 needs backward computation.
I0428 19:43:55.247162 25483 net.cpp:200] conv1 needs backward computation.
I0428 19:43:55.247167 25483 net.cpp:200] pool0 needs backward computation.
I0428 19:43:55.247174 25483 net.cpp:200] conv0 needs backward computation.
I0428 19:43:55.247179 25483 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:55.247185 25483 net.cpp:202] mnist does not need backward computation.
I0428 19:43:55.247191 25483 net.cpp:244] This network produces output accuracy
I0428 19:43:55.247197 25483 net.cpp:244] This network produces output loss
I0428 19:43:55.247215 25483 net.cpp:257] Network initialization done.
I0428 19:43:55.247258 25483 solver.cpp:56] Solver scaffolding done.
I0428 19:43:55.247556 25483 caffe.cpp:248] Starting Optimization
I0428 19:43:55.247563 25483 solver.cpp:273] Solving LeNet
I0428 19:43:55.247568 25483 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:55.247756 25483 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:55.251529 25483 blocking_queue.cpp:49] Waiting for data
I0428 19:43:55.324944 25490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:55.325397 25483 solver.cpp:398]     Test net output #0: accuracy = 0.0881
I0428 19:43:55.325417 25483 solver.cpp:398]     Test net output #1: loss = 2.30959 (* 1 = 2.30959 loss)
I0428 19:43:55.327410 25483 solver.cpp:219] Iteration 0 (2.85244 iter/s, 0.0798085s/100 iters), loss = 2.29913
I0428 19:43:55.327468 25483 solver.cpp:238]     Train net output #0: loss = 2.29913 (* 1 = 2.29913 loss)
I0428 19:43:55.327486 25483 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:55.432564 25483 solver.cpp:219] Iteration 100 (951.579 iter/s, 0.105088s/100 iters), loss = 1.1918
I0428 19:43:55.432593 25483 solver.cpp:238]     Train net output #0: loss = 1.1918 (* 1 = 1.1918 loss)
I0428 19:43:55.432603 25483 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:55.536428 25483 solver.cpp:219] Iteration 200 (963.165 iter/s, 0.103824s/100 iters), loss = 0.897083
I0428 19:43:55.536474 25483 solver.cpp:238]     Train net output #0: loss = 0.897083 (* 1 = 0.897083 loss)
I0428 19:43:55.536486 25483 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:55.628692 25483 solver.cpp:219] Iteration 300 (1084.49 iter/s, 0.0922091s/100 iters), loss = 0.444524
I0428 19:43:55.628720 25483 solver.cpp:238]     Train net output #0: loss = 0.444524 (* 1 = 0.444524 loss)
I0428 19:43:55.628728 25483 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:55.720443 25483 solver.cpp:219] Iteration 400 (1090.35 iter/s, 0.0917137s/100 iters), loss = 0.412202
I0428 19:43:55.720470 25483 solver.cpp:238]     Train net output #0: loss = 0.412202 (* 1 = 0.412202 loss)
I0428 19:43:55.720479 25483 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:55.824213 25483 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:55.895916 25490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:55.896471 25483 solver.cpp:398]     Test net output #0: accuracy = 0.7564
I0428 19:43:55.896505 25483 solver.cpp:398]     Test net output #1: loss = 0.649798 (* 1 = 0.649798 loss)
I0428 19:43:55.897661 25483 solver.cpp:219] Iteration 500 (564.412 iter/s, 0.177175s/100 iters), loss = 0.681023
I0428 19:43:55.897704 25483 solver.cpp:238]     Train net output #0: loss = 0.681023 (* 1 = 0.681023 loss)
I0428 19:43:55.897729 25483 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:56.003294 25483 solver.cpp:219] Iteration 600 (947.168 iter/s, 0.105578s/100 iters), loss = 0.69959
I0428 19:43:56.003336 25483 solver.cpp:238]     Train net output #0: loss = 0.69959 (* 1 = 0.69959 loss)
I0428 19:43:56.003351 25483 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:56.103278 25483 solver.cpp:219] Iteration 700 (1000.64 iter/s, 0.0999363s/100 iters), loss = 0.835064
I0428 19:43:56.103309 25483 solver.cpp:238]     Train net output #0: loss = 0.835064 (* 1 = 0.835064 loss)
I0428 19:43:56.103320 25483 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:56.198827 25483 solver.cpp:219] Iteration 800 (1047.05 iter/s, 0.0955064s/100 iters), loss = 0.651009
I0428 19:43:56.198860 25483 solver.cpp:238]     Train net output #0: loss = 0.651009 (* 1 = 0.651009 loss)
I0428 19:43:56.198871 25483 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:56.297632 25483 solver.cpp:219] Iteration 900 (1012.6 iter/s, 0.0987556s/100 iters), loss = 0.614781
I0428 19:43:56.297669 25483 solver.cpp:238]     Train net output #0: loss = 0.614781 (* 1 = 0.614781 loss)
I0428 19:43:56.297683 25483 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:56.330772 25489 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:56.401108 25483 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:56.402259 25483 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:56.402940 25483 solver.cpp:311] Iteration 1000, loss = 0.803313
I0428 19:43:56.402961 25483 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:56.478166 25490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:56.478770 25483 solver.cpp:398]     Test net output #0: accuracy = 0.7721
I0428 19:43:56.478796 25483 solver.cpp:398]     Test net output #1: loss = 0.573804 (* 1 = 0.573804 loss)
I0428 19:43:56.478804 25483 solver.cpp:316] Optimization Done.
I0428 19:43:56.478809 25483 caffe.cpp:259] Optimization Done.
