I0428 19:56:56.830976 28558 caffe.cpp:218] Using GPUs 0
I0428 19:56:56.866760 28558 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:57.377590 28558 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test774.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:57.377733 28558 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test774.prototxt
I0428 19:56:57.378154 28558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:57.378176 28558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:57.378279 28558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:57.378365 28558 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:57.378468 28558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:57.378494 28558 net.cpp:86] Creating Layer mnist
I0428 19:56:57.378504 28558 net.cpp:382] mnist -> data
I0428 19:56:57.378531 28558 net.cpp:382] mnist -> label
I0428 19:56:57.379660 28558 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:57.382350 28558 net.cpp:124] Setting up mnist
I0428 19:56:57.382369 28558 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:57.382375 28558 net.cpp:131] Top shape: 64 (64)
I0428 19:56:57.382380 28558 net.cpp:139] Memory required for data: 200960
I0428 19:56:57.382386 28558 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:57.382421 28558 net.cpp:86] Creating Layer conv0
I0428 19:56:57.382441 28558 net.cpp:408] conv0 <- data
I0428 19:56:57.382455 28558 net.cpp:382] conv0 -> conv0
I0428 19:56:57.636989 28558 net.cpp:124] Setting up conv0
I0428 19:56:57.637017 28558 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:57.637019 28558 net.cpp:139] Memory required for data: 1675520
I0428 19:56:57.637049 28558 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:57.637061 28558 net.cpp:86] Creating Layer pool0
I0428 19:56:57.637069 28558 net.cpp:408] pool0 <- conv0
I0428 19:56:57.637074 28558 net.cpp:382] pool0 -> pool0
I0428 19:56:57.637135 28558 net.cpp:124] Setting up pool0
I0428 19:56:57.637142 28558 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:57.637145 28558 net.cpp:139] Memory required for data: 2044160
I0428 19:56:57.637148 28558 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:57.637159 28558 net.cpp:86] Creating Layer conv1
I0428 19:56:57.637166 28558 net.cpp:408] conv1 <- pool0
I0428 19:56:57.637171 28558 net.cpp:382] conv1 -> conv1
I0428 19:56:57.638960 28558 net.cpp:124] Setting up conv1
I0428 19:56:57.638977 28558 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:57.638983 28558 net.cpp:139] Memory required for data: 2076928
I0428 19:56:57.638991 28558 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:57.638999 28558 net.cpp:86] Creating Layer pool1
I0428 19:56:57.639005 28558 net.cpp:408] pool1 <- conv1
I0428 19:56:57.639011 28558 net.cpp:382] pool1 -> pool1
I0428 19:56:57.639066 28558 net.cpp:124] Setting up pool1
I0428 19:56:57.639075 28558 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:57.639077 28558 net.cpp:139] Memory required for data: 2085120
I0428 19:56:57.639081 28558 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:57.639088 28558 net.cpp:86] Creating Layer ip1
I0428 19:56:57.639091 28558 net.cpp:408] ip1 <- pool1
I0428 19:56:57.639096 28558 net.cpp:382] ip1 -> ip1
I0428 19:56:57.640107 28558 net.cpp:124] Setting up ip1
I0428 19:56:57.640120 28558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:57.640125 28558 net.cpp:139] Memory required for data: 2097920
I0428 19:56:57.640132 28558 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:57.640138 28558 net.cpp:86] Creating Layer relu1
I0428 19:56:57.640142 28558 net.cpp:408] relu1 <- ip1
I0428 19:56:57.640146 28558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:57.640319 28558 net.cpp:124] Setting up relu1
I0428 19:56:57.640328 28558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:57.640331 28558 net.cpp:139] Memory required for data: 2110720
I0428 19:56:57.640334 28558 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:57.640341 28558 net.cpp:86] Creating Layer ip2
I0428 19:56:57.640346 28558 net.cpp:408] ip2 <- ip1
I0428 19:56:57.640350 28558 net.cpp:382] ip2 -> ip2
I0428 19:56:57.640468 28558 net.cpp:124] Setting up ip2
I0428 19:56:57.640475 28558 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:57.640478 28558 net.cpp:139] Memory required for data: 2117120
I0428 19:56:57.640483 28558 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:57.640488 28558 net.cpp:86] Creating Layer relu2
I0428 19:56:57.640491 28558 net.cpp:408] relu2 <- ip2
I0428 19:56:57.640496 28558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:57.641271 28558 net.cpp:124] Setting up relu2
I0428 19:56:57.641284 28558 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:57.641288 28558 net.cpp:139] Memory required for data: 2123520
I0428 19:56:57.641290 28558 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:57.641299 28558 net.cpp:86] Creating Layer ip3
I0428 19:56:57.641301 28558 net.cpp:408] ip3 <- ip2
I0428 19:56:57.641306 28558 net.cpp:382] ip3 -> ip3
I0428 19:56:57.641402 28558 net.cpp:124] Setting up ip3
I0428 19:56:57.641408 28558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:57.641412 28558 net.cpp:139] Memory required for data: 2126080
I0428 19:56:57.641418 28558 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:57.641424 28558 net.cpp:86] Creating Layer relu3
I0428 19:56:57.641427 28558 net.cpp:408] relu3 <- ip3
I0428 19:56:57.641430 28558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:57.641633 28558 net.cpp:124] Setting up relu3
I0428 19:56:57.641643 28558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:57.641645 28558 net.cpp:139] Memory required for data: 2128640
I0428 19:56:57.641649 28558 layer_factory.hpp:77] Creating layer loss
I0428 19:56:57.641654 28558 net.cpp:86] Creating Layer loss
I0428 19:56:57.641657 28558 net.cpp:408] loss <- ip3
I0428 19:56:57.641661 28558 net.cpp:408] loss <- label
I0428 19:56:57.641666 28558 net.cpp:382] loss -> loss
I0428 19:56:57.641680 28558 layer_factory.hpp:77] Creating layer loss
I0428 19:56:57.641934 28558 net.cpp:124] Setting up loss
I0428 19:56:57.641942 28558 net.cpp:131] Top shape: (1)
I0428 19:56:57.641945 28558 net.cpp:134]     with loss weight 1
I0428 19:56:57.641960 28558 net.cpp:139] Memory required for data: 2128644
I0428 19:56:57.641964 28558 net.cpp:200] loss needs backward computation.
I0428 19:56:57.641968 28558 net.cpp:200] relu3 needs backward computation.
I0428 19:56:57.641970 28558 net.cpp:200] ip3 needs backward computation.
I0428 19:56:57.641973 28558 net.cpp:200] relu2 needs backward computation.
I0428 19:56:57.641975 28558 net.cpp:200] ip2 needs backward computation.
I0428 19:56:57.641978 28558 net.cpp:200] relu1 needs backward computation.
I0428 19:56:57.641980 28558 net.cpp:200] ip1 needs backward computation.
I0428 19:56:57.641983 28558 net.cpp:200] pool1 needs backward computation.
I0428 19:56:57.641985 28558 net.cpp:200] conv1 needs backward computation.
I0428 19:56:57.641988 28558 net.cpp:200] pool0 needs backward computation.
I0428 19:56:57.641990 28558 net.cpp:200] conv0 needs backward computation.
I0428 19:56:57.641993 28558 net.cpp:202] mnist does not need backward computation.
I0428 19:56:57.641996 28558 net.cpp:244] This network produces output loss
I0428 19:56:57.642005 28558 net.cpp:257] Network initialization done.
I0428 19:56:57.642304 28558 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test774.prototxt
I0428 19:56:57.642329 28558 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:57.642416 28558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:57.642495 28558 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:57.642537 28558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:57.642549 28558 net.cpp:86] Creating Layer mnist
I0428 19:56:57.642552 28558 net.cpp:382] mnist -> data
I0428 19:56:57.642560 28558 net.cpp:382] mnist -> label
I0428 19:56:57.642657 28558 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:57.644521 28558 net.cpp:124] Setting up mnist
I0428 19:56:57.644551 28558 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:57.644556 28558 net.cpp:131] Top shape: 100 (100)
I0428 19:56:57.644557 28558 net.cpp:139] Memory required for data: 314000
I0428 19:56:57.644562 28558 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:57.644567 28558 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:57.644570 28558 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:57.644587 28558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:57.644595 28558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:57.644637 28558 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:57.644644 28558 net.cpp:131] Top shape: 100 (100)
I0428 19:56:57.644647 28558 net.cpp:131] Top shape: 100 (100)
I0428 19:56:57.644650 28558 net.cpp:139] Memory required for data: 314800
I0428 19:56:57.644652 28558 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:57.644662 28558 net.cpp:86] Creating Layer conv0
I0428 19:56:57.644665 28558 net.cpp:408] conv0 <- data
I0428 19:56:57.644670 28558 net.cpp:382] conv0 -> conv0
I0428 19:56:57.646554 28558 net.cpp:124] Setting up conv0
I0428 19:56:57.646569 28558 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:57.646574 28558 net.cpp:139] Memory required for data: 2618800
I0428 19:56:57.646600 28558 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:57.646608 28558 net.cpp:86] Creating Layer pool0
I0428 19:56:57.646612 28558 net.cpp:408] pool0 <- conv0
I0428 19:56:57.646618 28558 net.cpp:382] pool0 -> pool0
I0428 19:56:57.646657 28558 net.cpp:124] Setting up pool0
I0428 19:56:57.646666 28558 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:57.646668 28558 net.cpp:139] Memory required for data: 3194800
I0428 19:56:57.646672 28558 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:57.646682 28558 net.cpp:86] Creating Layer conv1
I0428 19:56:57.646687 28558 net.cpp:408] conv1 <- pool0
I0428 19:56:57.646692 28558 net.cpp:382] conv1 -> conv1
I0428 19:56:57.648921 28558 net.cpp:124] Setting up conv1
I0428 19:56:57.648936 28558 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:57.648939 28558 net.cpp:139] Memory required for data: 3246000
I0428 19:56:57.648965 28558 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:57.648974 28558 net.cpp:86] Creating Layer pool1
I0428 19:56:57.648979 28558 net.cpp:408] pool1 <- conv1
I0428 19:56:57.648985 28558 net.cpp:382] pool1 -> pool1
I0428 19:56:57.649037 28558 net.cpp:124] Setting up pool1
I0428 19:56:57.649045 28558 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:57.649049 28558 net.cpp:139] Memory required for data: 3258800
I0428 19:56:57.649051 28558 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:57.649057 28558 net.cpp:86] Creating Layer ip1
I0428 19:56:57.649060 28558 net.cpp:408] ip1 <- pool1
I0428 19:56:57.649066 28558 net.cpp:382] ip1 -> ip1
I0428 19:56:57.649216 28558 net.cpp:124] Setting up ip1
I0428 19:56:57.649224 28558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:57.649240 28558 net.cpp:139] Memory required for data: 3278800
I0428 19:56:57.649248 28558 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:57.649255 28558 net.cpp:86] Creating Layer relu1
I0428 19:56:57.649258 28558 net.cpp:408] relu1 <- ip1
I0428 19:56:57.649265 28558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:57.649484 28558 net.cpp:124] Setting up relu1
I0428 19:56:57.649495 28558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:57.649499 28558 net.cpp:139] Memory required for data: 3298800
I0428 19:56:57.649518 28558 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:57.649539 28558 net.cpp:86] Creating Layer ip2
I0428 19:56:57.649544 28558 net.cpp:408] ip2 <- ip1
I0428 19:56:57.649549 28558 net.cpp:382] ip2 -> ip2
I0428 19:56:57.649657 28558 net.cpp:124] Setting up ip2
I0428 19:56:57.649665 28558 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:57.649668 28558 net.cpp:139] Memory required for data: 3308800
I0428 19:56:57.649673 28558 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:57.649678 28558 net.cpp:86] Creating Layer relu2
I0428 19:56:57.649682 28558 net.cpp:408] relu2 <- ip2
I0428 19:56:57.649688 28558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:57.649852 28558 net.cpp:124] Setting up relu2
I0428 19:56:57.649862 28558 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:57.649864 28558 net.cpp:139] Memory required for data: 3318800
I0428 19:56:57.649868 28558 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:57.649875 28558 net.cpp:86] Creating Layer ip3
I0428 19:56:57.649879 28558 net.cpp:408] ip3 <- ip2
I0428 19:56:57.649885 28558 net.cpp:382] ip3 -> ip3
I0428 19:56:57.649984 28558 net.cpp:124] Setting up ip3
I0428 19:56:57.650005 28558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:57.650008 28558 net.cpp:139] Memory required for data: 3322800
I0428 19:56:57.650018 28558 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:57.650024 28558 net.cpp:86] Creating Layer relu3
I0428 19:56:57.650028 28558 net.cpp:408] relu3 <- ip3
I0428 19:56:57.650032 28558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:57.650900 28558 net.cpp:124] Setting up relu3
I0428 19:56:57.650914 28558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:57.650918 28558 net.cpp:139] Memory required for data: 3326800
I0428 19:56:57.650921 28558 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:57.650928 28558 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:57.650931 28558 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:57.650936 28558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:57.650943 28558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:57.651005 28558 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:57.651013 28558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:57.651017 28558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:57.651021 28558 net.cpp:139] Memory required for data: 3334800
I0428 19:56:57.651024 28558 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:57.651031 28558 net.cpp:86] Creating Layer accuracy
I0428 19:56:57.651033 28558 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:57.651037 28558 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:57.651042 28558 net.cpp:382] accuracy -> accuracy
I0428 19:56:57.651049 28558 net.cpp:124] Setting up accuracy
I0428 19:56:57.651053 28558 net.cpp:131] Top shape: (1)
I0428 19:56:57.651057 28558 net.cpp:139] Memory required for data: 3334804
I0428 19:56:57.651060 28558 layer_factory.hpp:77] Creating layer loss
I0428 19:56:57.651064 28558 net.cpp:86] Creating Layer loss
I0428 19:56:57.651067 28558 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:57.651072 28558 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:57.651077 28558 net.cpp:382] loss -> loss
I0428 19:56:57.651083 28558 layer_factory.hpp:77] Creating layer loss
I0428 19:56:57.651327 28558 net.cpp:124] Setting up loss
I0428 19:56:57.651336 28558 net.cpp:131] Top shape: (1)
I0428 19:56:57.651340 28558 net.cpp:134]     with loss weight 1
I0428 19:56:57.651350 28558 net.cpp:139] Memory required for data: 3334808
I0428 19:56:57.651365 28558 net.cpp:200] loss needs backward computation.
I0428 19:56:57.651370 28558 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:57.651391 28558 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:57.651393 28558 net.cpp:200] relu3 needs backward computation.
I0428 19:56:57.651396 28558 net.cpp:200] ip3 needs backward computation.
I0428 19:56:57.651399 28558 net.cpp:200] relu2 needs backward computation.
I0428 19:56:57.651402 28558 net.cpp:200] ip2 needs backward computation.
I0428 19:56:57.651406 28558 net.cpp:200] relu1 needs backward computation.
I0428 19:56:57.651407 28558 net.cpp:200] ip1 needs backward computation.
I0428 19:56:57.651412 28558 net.cpp:200] pool1 needs backward computation.
I0428 19:56:57.651414 28558 net.cpp:200] conv1 needs backward computation.
I0428 19:56:57.651417 28558 net.cpp:200] pool0 needs backward computation.
I0428 19:56:57.651420 28558 net.cpp:200] conv0 needs backward computation.
I0428 19:56:57.651424 28558 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:57.651434 28558 net.cpp:202] mnist does not need backward computation.
I0428 19:56:57.651437 28558 net.cpp:244] This network produces output accuracy
I0428 19:56:57.651442 28558 net.cpp:244] This network produces output loss
I0428 19:56:57.651453 28558 net.cpp:257] Network initialization done.
I0428 19:56:57.651512 28558 solver.cpp:56] Solver scaffolding done.
I0428 19:56:57.651865 28558 caffe.cpp:248] Starting Optimization
I0428 19:56:57.651871 28558 solver.cpp:273] Solving LeNet
I0428 19:56:57.651875 28558 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:57.652850 28558 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:57.656406 28558 blocking_queue.cpp:49] Waiting for data
I0428 19:56:57.728132 28565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:57.728642 28558 solver.cpp:398]     Test net output #0: accuracy = 0.1309
I0428 19:56:57.728662 28558 solver.cpp:398]     Test net output #1: loss = 2.29865 (* 1 = 2.29865 loss)
I0428 19:56:57.731247 28558 solver.cpp:219] Iteration 0 (2.86915 iter/s, 0.0793436s/100 iters), loss = 2.30334
I0428 19:56:57.731284 28558 solver.cpp:238]     Train net output #0: loss = 2.30334 (* 1 = 2.30334 loss)
I0428 19:56:57.731313 28558 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:57.806382 28558 solver.cpp:219] Iteration 100 (1331.59 iter/s, 0.0750981s/100 iters), loss = 0.530093
I0428 19:56:57.806407 28558 solver.cpp:238]     Train net output #0: loss = 0.530093 (* 1 = 0.530093 loss)
I0428 19:56:57.806432 28558 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:57.880550 28558 solver.cpp:219] Iteration 200 (1348.91 iter/s, 0.0741337s/100 iters), loss = 0.327245
I0428 19:56:57.880592 28558 solver.cpp:238]     Train net output #0: loss = 0.327245 (* 1 = 0.327245 loss)
I0428 19:56:57.880599 28558 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:57.954402 28558 solver.cpp:219] Iteration 300 (1354.98 iter/s, 0.0738017s/100 iters), loss = 0.389725
I0428 19:56:57.954458 28558 solver.cpp:238]     Train net output #0: loss = 0.389725 (* 1 = 0.389725 loss)
I0428 19:56:57.954465 28558 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:58.027871 28558 solver.cpp:219] Iteration 400 (1362.01 iter/s, 0.0734209s/100 iters), loss = 0.183877
I0428 19:56:58.027896 28558 solver.cpp:238]     Train net output #0: loss = 0.183877 (* 1 = 0.183877 loss)
I0428 19:56:58.027904 28558 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:58.102056 28558 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:58.155742 28565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:58.156251 28558 solver.cpp:398]     Test net output #0: accuracy = 0.9514
I0428 19:56:58.156272 28558 solver.cpp:398]     Test net output #1: loss = 0.158598 (* 1 = 0.158598 loss)
I0428 19:56:58.157133 28558 solver.cpp:219] Iteration 500 (773.84 iter/s, 0.129226s/100 iters), loss = 0.104332
I0428 19:56:58.157204 28558 solver.cpp:238]     Train net output #0: loss = 0.104332 (* 1 = 0.104332 loss)
I0428 19:56:58.157215 28558 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:58.235839 28558 solver.cpp:219] Iteration 600 (1271.81 iter/s, 0.0786278s/100 iters), loss = 0.13098
I0428 19:56:58.235882 28558 solver.cpp:238]     Train net output #0: loss = 0.13098 (* 1 = 0.13098 loss)
I0428 19:56:58.235888 28558 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:58.311278 28558 solver.cpp:219] Iteration 700 (1326.45 iter/s, 0.0753889s/100 iters), loss = 0.182965
I0428 19:56:58.311318 28558 solver.cpp:238]     Train net output #0: loss = 0.182965 (* 1 = 0.182965 loss)
I0428 19:56:58.311342 28558 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:58.384838 28558 solver.cpp:219] Iteration 800 (1360.34 iter/s, 0.0735111s/100 iters), loss = 0.281167
I0428 19:56:58.384865 28558 solver.cpp:238]     Train net output #0: loss = 0.281167 (* 1 = 0.281167 loss)
I0428 19:56:58.384871 28558 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:58.458400 28558 solver.cpp:219] Iteration 900 (1360.04 iter/s, 0.0735273s/100 iters), loss = 0.221929
I0428 19:56:58.458425 28558 solver.cpp:238]     Train net output #0: loss = 0.221929 (* 1 = 0.221929 loss)
I0428 19:56:58.458432 28558 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:58.483132 28564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:58.531163 28558 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:58.531936 28558 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:58.532426 28558 solver.cpp:311] Iteration 1000, loss = 0.105419
I0428 19:56:58.532444 28558 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:58.607453 28565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:58.607981 28558 solver.cpp:398]     Test net output #0: accuracy = 0.9603
I0428 19:56:58.608016 28558 solver.cpp:398]     Test net output #1: loss = 0.125328 (* 1 = 0.125328 loss)
I0428 19:56:58.608021 28558 solver.cpp:316] Optimization Done.
I0428 19:56:58.608024 28558 caffe.cpp:259] Optimization Done.
