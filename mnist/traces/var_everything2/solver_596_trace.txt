I0428 19:50:09.064157 26943 caffe.cpp:218] Using GPUs 0
I0428 19:50:09.095696 26943 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:09.603235 26943 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test596.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:09.603379 26943 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test596.prototxt
I0428 19:50:09.603755 26943 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:09.603772 26943 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:09.603863 26943 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:09.603942 26943 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:09.604043 26943 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:09.604068 26943 net.cpp:86] Creating Layer mnist
I0428 19:50:09.604075 26943 net.cpp:382] mnist -> data
I0428 19:50:09.604100 26943 net.cpp:382] mnist -> label
I0428 19:50:09.605195 26943 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:09.607648 26943 net.cpp:124] Setting up mnist
I0428 19:50:09.607668 26943 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:09.607674 26943 net.cpp:131] Top shape: 64 (64)
I0428 19:50:09.607677 26943 net.cpp:139] Memory required for data: 200960
I0428 19:50:09.607686 26943 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:09.607702 26943 net.cpp:86] Creating Layer conv0
I0428 19:50:09.607707 26943 net.cpp:408] conv0 <- data
I0428 19:50:09.607719 26943 net.cpp:382] conv0 -> conv0
I0428 19:50:09.851322 26943 net.cpp:124] Setting up conv0
I0428 19:50:09.851366 26943 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:09.851369 26943 net.cpp:139] Memory required for data: 938240
I0428 19:50:09.851400 26943 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:09.851430 26943 net.cpp:86] Creating Layer pool0
I0428 19:50:09.851434 26943 net.cpp:408] pool0 <- conv0
I0428 19:50:09.851441 26943 net.cpp:382] pool0 -> pool0
I0428 19:50:09.851491 26943 net.cpp:124] Setting up pool0
I0428 19:50:09.851500 26943 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:09.851502 26943 net.cpp:139] Memory required for data: 1122560
I0428 19:50:09.851505 26943 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:09.851517 26943 net.cpp:86] Creating Layer conv1
I0428 19:50:09.851521 26943 net.cpp:408] conv1 <- pool0
I0428 19:50:09.851526 26943 net.cpp:382] conv1 -> conv1
I0428 19:50:09.854265 26943 net.cpp:124] Setting up conv1
I0428 19:50:09.854295 26943 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:09.854300 26943 net.cpp:139] Memory required for data: 1286400
I0428 19:50:09.854307 26943 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:09.854315 26943 net.cpp:86] Creating Layer pool1
I0428 19:50:09.854318 26943 net.cpp:408] pool1 <- conv1
I0428 19:50:09.854322 26943 net.cpp:382] pool1 -> pool1
I0428 19:50:09.854374 26943 net.cpp:124] Setting up pool1
I0428 19:50:09.854384 26943 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:09.854387 26943 net.cpp:139] Memory required for data: 1327360
I0428 19:50:09.854390 26943 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:09.854398 26943 net.cpp:86] Creating Layer ip1
I0428 19:50:09.854401 26943 net.cpp:408] ip1 <- pool1
I0428 19:50:09.854405 26943 net.cpp:382] ip1 -> ip1
I0428 19:50:09.855360 26943 net.cpp:124] Setting up ip1
I0428 19:50:09.855370 26943 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:09.855389 26943 net.cpp:139] Memory required for data: 1340160
I0428 19:50:09.855397 26943 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:09.855403 26943 net.cpp:86] Creating Layer relu1
I0428 19:50:09.855406 26943 net.cpp:408] relu1 <- ip1
I0428 19:50:09.855412 26943 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:09.855603 26943 net.cpp:124] Setting up relu1
I0428 19:50:09.855612 26943 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:09.855615 26943 net.cpp:139] Memory required for data: 1352960
I0428 19:50:09.855619 26943 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:09.855625 26943 net.cpp:86] Creating Layer ip2
I0428 19:50:09.855629 26943 net.cpp:408] ip2 <- ip1
I0428 19:50:09.855634 26943 net.cpp:382] ip2 -> ip2
I0428 19:50:09.855731 26943 net.cpp:124] Setting up ip2
I0428 19:50:09.855737 26943 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:09.855741 26943 net.cpp:139] Memory required for data: 1355520
I0428 19:50:09.855746 26943 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:09.855751 26943 net.cpp:86] Creating Layer relu2
I0428 19:50:09.855754 26943 net.cpp:408] relu2 <- ip2
I0428 19:50:09.855758 26943 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:09.856506 26943 net.cpp:124] Setting up relu2
I0428 19:50:09.856518 26943 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:09.856537 26943 net.cpp:139] Memory required for data: 1358080
I0428 19:50:09.856541 26943 layer_factory.hpp:77] Creating layer loss
I0428 19:50:09.856547 26943 net.cpp:86] Creating Layer loss
I0428 19:50:09.856551 26943 net.cpp:408] loss <- ip2
I0428 19:50:09.856556 26943 net.cpp:408] loss <- label
I0428 19:50:09.856561 26943 net.cpp:382] loss -> loss
I0428 19:50:09.856581 26943 layer_factory.hpp:77] Creating layer loss
I0428 19:50:09.856834 26943 net.cpp:124] Setting up loss
I0428 19:50:09.856844 26943 net.cpp:131] Top shape: (1)
I0428 19:50:09.856848 26943 net.cpp:134]     with loss weight 1
I0428 19:50:09.856861 26943 net.cpp:139] Memory required for data: 1358084
I0428 19:50:09.856865 26943 net.cpp:200] loss needs backward computation.
I0428 19:50:09.856869 26943 net.cpp:200] relu2 needs backward computation.
I0428 19:50:09.856873 26943 net.cpp:200] ip2 needs backward computation.
I0428 19:50:09.856875 26943 net.cpp:200] relu1 needs backward computation.
I0428 19:50:09.856878 26943 net.cpp:200] ip1 needs backward computation.
I0428 19:50:09.856891 26943 net.cpp:200] pool1 needs backward computation.
I0428 19:50:09.856894 26943 net.cpp:200] conv1 needs backward computation.
I0428 19:50:09.856897 26943 net.cpp:200] pool0 needs backward computation.
I0428 19:50:09.856900 26943 net.cpp:200] conv0 needs backward computation.
I0428 19:50:09.856904 26943 net.cpp:202] mnist does not need backward computation.
I0428 19:50:09.856907 26943 net.cpp:244] This network produces output loss
I0428 19:50:09.856915 26943 net.cpp:257] Network initialization done.
I0428 19:50:09.857224 26943 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test596.prototxt
I0428 19:50:09.857251 26943 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:09.857347 26943 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:09.857409 26943 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:09.857452 26943 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:09.857465 26943 net.cpp:86] Creating Layer mnist
I0428 19:50:09.857470 26943 net.cpp:382] mnist -> data
I0428 19:50:09.857476 26943 net.cpp:382] mnist -> label
I0428 19:50:09.857573 26943 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:09.859771 26943 net.cpp:124] Setting up mnist
I0428 19:50:09.859783 26943 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:09.859804 26943 net.cpp:131] Top shape: 100 (100)
I0428 19:50:09.859808 26943 net.cpp:139] Memory required for data: 314000
I0428 19:50:09.859812 26943 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:09.859823 26943 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:09.859827 26943 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:09.859832 26943 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:09.859838 26943 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:09.859928 26943 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:09.859944 26943 net.cpp:131] Top shape: 100 (100)
I0428 19:50:09.859948 26943 net.cpp:131] Top shape: 100 (100)
I0428 19:50:09.859951 26943 net.cpp:139] Memory required for data: 314800
I0428 19:50:09.859954 26943 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:09.859963 26943 net.cpp:86] Creating Layer conv0
I0428 19:50:09.859966 26943 net.cpp:408] conv0 <- data
I0428 19:50:09.859972 26943 net.cpp:382] conv0 -> conv0
I0428 19:50:09.861773 26943 net.cpp:124] Setting up conv0
I0428 19:50:09.861801 26943 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:09.861805 26943 net.cpp:139] Memory required for data: 1466800
I0428 19:50:09.861814 26943 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:09.861819 26943 net.cpp:86] Creating Layer pool0
I0428 19:50:09.861824 26943 net.cpp:408] pool0 <- conv0
I0428 19:50:09.861827 26943 net.cpp:382] pool0 -> pool0
I0428 19:50:09.861862 26943 net.cpp:124] Setting up pool0
I0428 19:50:09.861866 26943 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:09.861870 26943 net.cpp:139] Memory required for data: 1754800
I0428 19:50:09.861872 26943 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:09.861881 26943 net.cpp:86] Creating Layer conv1
I0428 19:50:09.861883 26943 net.cpp:408] conv1 <- pool0
I0428 19:50:09.861887 26943 net.cpp:382] conv1 -> conv1
I0428 19:50:09.863936 26943 net.cpp:124] Setting up conv1
I0428 19:50:09.863948 26943 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:09.863968 26943 net.cpp:139] Memory required for data: 2010800
I0428 19:50:09.863976 26943 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:09.863984 26943 net.cpp:86] Creating Layer pool1
I0428 19:50:09.863988 26943 net.cpp:408] pool1 <- conv1
I0428 19:50:09.863992 26943 net.cpp:382] pool1 -> pool1
I0428 19:50:09.864048 26943 net.cpp:124] Setting up pool1
I0428 19:50:09.864053 26943 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:09.864056 26943 net.cpp:139] Memory required for data: 2074800
I0428 19:50:09.864059 26943 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:09.864064 26943 net.cpp:86] Creating Layer ip1
I0428 19:50:09.864068 26943 net.cpp:408] ip1 <- pool1
I0428 19:50:09.864073 26943 net.cpp:382] ip1 -> ip1
I0428 19:50:09.864210 26943 net.cpp:124] Setting up ip1
I0428 19:50:09.864218 26943 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:09.864222 26943 net.cpp:139] Memory required for data: 2094800
I0428 19:50:09.864228 26943 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:09.864233 26943 net.cpp:86] Creating Layer relu1
I0428 19:50:09.864236 26943 net.cpp:408] relu1 <- ip1
I0428 19:50:09.864240 26943 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:09.864419 26943 net.cpp:124] Setting up relu1
I0428 19:50:09.864428 26943 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:09.864450 26943 net.cpp:139] Memory required for data: 2114800
I0428 19:50:09.864460 26943 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:09.864469 26943 net.cpp:86] Creating Layer ip2
I0428 19:50:09.864472 26943 net.cpp:408] ip2 <- ip1
I0428 19:50:09.864478 26943 net.cpp:382] ip2 -> ip2
I0428 19:50:09.864596 26943 net.cpp:124] Setting up ip2
I0428 19:50:09.864604 26943 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:09.864609 26943 net.cpp:139] Memory required for data: 2118800
I0428 19:50:09.864626 26943 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:09.864631 26943 net.cpp:86] Creating Layer relu2
I0428 19:50:09.864635 26943 net.cpp:408] relu2 <- ip2
I0428 19:50:09.864639 26943 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:09.864838 26943 net.cpp:124] Setting up relu2
I0428 19:50:09.864848 26943 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:09.864867 26943 net.cpp:139] Memory required for data: 2122800
I0428 19:50:09.864871 26943 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:50:09.864874 26943 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:50:09.864877 26943 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:50:09.864882 26943 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:50:09.864899 26943 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:50:09.864939 26943 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:50:09.864946 26943 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:09.864966 26943 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:09.864969 26943 net.cpp:139] Memory required for data: 2130800
I0428 19:50:09.864972 26943 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:09.864977 26943 net.cpp:86] Creating Layer accuracy
I0428 19:50:09.864980 26943 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:50:09.864985 26943 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:09.864990 26943 net.cpp:382] accuracy -> accuracy
I0428 19:50:09.864997 26943 net.cpp:124] Setting up accuracy
I0428 19:50:09.865001 26943 net.cpp:131] Top shape: (1)
I0428 19:50:09.865003 26943 net.cpp:139] Memory required for data: 2130804
I0428 19:50:09.865006 26943 layer_factory.hpp:77] Creating layer loss
I0428 19:50:09.865011 26943 net.cpp:86] Creating Layer loss
I0428 19:50:09.865015 26943 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:50:09.865018 26943 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:09.865022 26943 net.cpp:382] loss -> loss
I0428 19:50:09.865028 26943 layer_factory.hpp:77] Creating layer loss
I0428 19:50:09.865319 26943 net.cpp:124] Setting up loss
I0428 19:50:09.865329 26943 net.cpp:131] Top shape: (1)
I0428 19:50:09.865334 26943 net.cpp:134]     with loss weight 1
I0428 19:50:09.865341 26943 net.cpp:139] Memory required for data: 2130808
I0428 19:50:09.865345 26943 net.cpp:200] loss needs backward computation.
I0428 19:50:09.865350 26943 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:09.865353 26943 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:50:09.865357 26943 net.cpp:200] relu2 needs backward computation.
I0428 19:50:09.865373 26943 net.cpp:200] ip2 needs backward computation.
I0428 19:50:09.865377 26943 net.cpp:200] relu1 needs backward computation.
I0428 19:50:09.865381 26943 net.cpp:200] ip1 needs backward computation.
I0428 19:50:09.865383 26943 net.cpp:200] pool1 needs backward computation.
I0428 19:50:09.865386 26943 net.cpp:200] conv1 needs backward computation.
I0428 19:50:09.865398 26943 net.cpp:200] pool0 needs backward computation.
I0428 19:50:09.865401 26943 net.cpp:200] conv0 needs backward computation.
I0428 19:50:09.865406 26943 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:09.865409 26943 net.cpp:202] mnist does not need backward computation.
I0428 19:50:09.865412 26943 net.cpp:244] This network produces output accuracy
I0428 19:50:09.865416 26943 net.cpp:244] This network produces output loss
I0428 19:50:09.865425 26943 net.cpp:257] Network initialization done.
I0428 19:50:09.865478 26943 solver.cpp:56] Solver scaffolding done.
I0428 19:50:09.865803 26943 caffe.cpp:248] Starting Optimization
I0428 19:50:09.865818 26943 solver.cpp:273] Solving LeNet
I0428 19:50:09.865823 26943 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:09.866585 26943 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:09.868667 26943 blocking_queue.cpp:49] Waiting for data
I0428 19:50:09.941498 26950 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:09.942021 26943 solver.cpp:398]     Test net output #0: accuracy = 0.1901
I0428 19:50:09.942055 26943 solver.cpp:398]     Test net output #1: loss = 2.2822 (* 1 = 2.2822 loss)
I0428 19:50:09.943878 26943 solver.cpp:219] Iteration 0 (0 iter/s, 0.0780299s/100 iters), loss = 2.26719
I0428 19:50:09.943902 26943 solver.cpp:238]     Train net output #0: loss = 2.26719 (* 1 = 2.26719 loss)
I0428 19:50:09.943914 26943 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:10.011921 26943 solver.cpp:219] Iteration 100 (1470.37 iter/s, 0.06801s/100 iters), loss = 0.597211
I0428 19:50:10.011945 26943 solver.cpp:238]     Train net output #0: loss = 0.597211 (* 1 = 0.597211 loss)
I0428 19:50:10.011951 26943 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:10.080440 26943 solver.cpp:219] Iteration 200 (1460.17 iter/s, 0.0684851s/100 iters), loss = 0.450718
I0428 19:50:10.080507 26943 solver.cpp:238]     Train net output #0: loss = 0.450718 (* 1 = 0.450718 loss)
I0428 19:50:10.080514 26943 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:10.150555 26943 solver.cpp:219] Iteration 300 (1427.72 iter/s, 0.0700415s/100 iters), loss = 0.444408
I0428 19:50:10.150609 26943 solver.cpp:238]     Train net output #0: loss = 0.444408 (* 1 = 0.444408 loss)
I0428 19:50:10.150615 26943 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:10.219239 26943 solver.cpp:219] Iteration 400 (1456.95 iter/s, 0.0686367s/100 iters), loss = 0.155694
I0428 19:50:10.219280 26943 solver.cpp:238]     Train net output #0: loss = 0.155694 (* 1 = 0.155694 loss)
I0428 19:50:10.219285 26943 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:10.286651 26943 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:10.339578 26950 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:10.340042 26943 solver.cpp:398]     Test net output #0: accuracy = 0.9498
I0428 19:50:10.340076 26943 solver.cpp:398]     Test net output #1: loss = 0.158682 (* 1 = 0.158682 loss)
I0428 19:50:10.340847 26943 solver.cpp:219] Iteration 500 (822.784 iter/s, 0.121539s/100 iters), loss = 0.195187
I0428 19:50:10.340874 26943 solver.cpp:238]     Train net output #0: loss = 0.195187 (* 1 = 0.195187 loss)
I0428 19:50:10.340880 26943 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:10.408238 26943 solver.cpp:219] Iteration 600 (1484.63 iter/s, 0.0673567s/100 iters), loss = 0.186885
I0428 19:50:10.408262 26943 solver.cpp:238]     Train net output #0: loss = 0.186885 (* 1 = 0.186885 loss)
I0428 19:50:10.408268 26943 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:10.475827 26943 solver.cpp:219] Iteration 700 (1480.22 iter/s, 0.0675574s/100 iters), loss = 0.229686
I0428 19:50:10.475867 26943 solver.cpp:238]     Train net output #0: loss = 0.229686 (* 1 = 0.229686 loss)
I0428 19:50:10.475888 26943 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:10.544754 26943 solver.cpp:219] Iteration 800 (1451.51 iter/s, 0.0688937s/100 iters), loss = 0.313286
I0428 19:50:10.544792 26943 solver.cpp:238]     Train net output #0: loss = 0.313286 (* 1 = 0.313286 loss)
I0428 19:50:10.544798 26943 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:10.613009 26943 solver.cpp:219] Iteration 900 (1465.76 iter/s, 0.068224s/100 iters), loss = 0.197983
I0428 19:50:10.613047 26943 solver.cpp:238]     Train net output #0: loss = 0.197983 (* 1 = 0.197983 loss)
I0428 19:50:10.613052 26943 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:10.636191 26949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:10.680876 26943 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:10.681635 26943 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:10.682060 26943 solver.cpp:311] Iteration 1000, loss = 0.20062
I0428 19:50:10.682075 26943 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:10.727636 26950 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:10.728122 26943 solver.cpp:398]     Test net output #0: accuracy = 0.9664
I0428 19:50:10.728157 26943 solver.cpp:398]     Test net output #1: loss = 0.104345 (* 1 = 0.104345 loss)
I0428 19:50:10.728163 26943 solver.cpp:316] Optimization Done.
I0428 19:50:10.728165 26943 caffe.cpp:259] Optimization Done.
