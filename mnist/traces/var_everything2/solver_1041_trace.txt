I0428 20:06:55.040503 30984 caffe.cpp:218] Using GPUs 0
I0428 20:06:55.076926 30984 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:55.530661 30984 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1041.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:55.530794 30984 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1041.prototxt
I0428 20:06:55.531117 30984 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:55.531133 30984 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:55.531213 30984 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:55.531276 30984 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:55.531355 30984 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:55.531373 30984 net.cpp:86] Creating Layer mnist
I0428 20:06:55.531379 30984 net.cpp:382] mnist -> data
I0428 20:06:55.531399 30984 net.cpp:382] mnist -> label
I0428 20:06:55.532383 30984 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:55.534579 30984 net.cpp:124] Setting up mnist
I0428 20:06:55.534610 30984 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:55.534616 30984 net.cpp:131] Top shape: 64 (64)
I0428 20:06:55.534618 30984 net.cpp:139] Memory required for data: 200960
I0428 20:06:55.534624 30984 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:55.534647 30984 net.cpp:86] Creating Layer conv0
I0428 20:06:55.534664 30984 net.cpp:408] conv0 <- data
I0428 20:06:55.534673 30984 net.cpp:382] conv0 -> conv0
I0428 20:06:55.766152 30984 net.cpp:124] Setting up conv0
I0428 20:06:55.766177 30984 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:55.766181 30984 net.cpp:139] Memory required for data: 3887360
I0428 20:06:55.766196 30984 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:55.766207 30984 net.cpp:86] Creating Layer pool0
I0428 20:06:55.766211 30984 net.cpp:408] pool0 <- conv0
I0428 20:06:55.766216 30984 net.cpp:382] pool0 -> pool0
I0428 20:06:55.766273 30984 net.cpp:124] Setting up pool0
I0428 20:06:55.766278 30984 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:55.766280 30984 net.cpp:139] Memory required for data: 4808960
I0428 20:06:55.766283 30984 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:55.766294 30984 net.cpp:86] Creating Layer conv1
I0428 20:06:55.766296 30984 net.cpp:408] conv1 <- pool0
I0428 20:06:55.766300 30984 net.cpp:382] conv1 -> conv1
I0428 20:06:55.769016 30984 net.cpp:124] Setting up conv1
I0428 20:06:55.769049 30984 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:55.769054 30984 net.cpp:139] Memory required for data: 4890880
I0428 20:06:55.769062 30984 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:55.769070 30984 net.cpp:86] Creating Layer pool1
I0428 20:06:55.769073 30984 net.cpp:408] pool1 <- conv1
I0428 20:06:55.769078 30984 net.cpp:382] pool1 -> pool1
I0428 20:06:55.769131 30984 net.cpp:124] Setting up pool1
I0428 20:06:55.769137 30984 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:55.769155 30984 net.cpp:139] Memory required for data: 4911360
I0428 20:06:55.769157 30984 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:55.769165 30984 net.cpp:86] Creating Layer ip1
I0428 20:06:55.769167 30984 net.cpp:408] ip1 <- pool1
I0428 20:06:55.769171 30984 net.cpp:382] ip1 -> ip1
I0428 20:06:55.769270 30984 net.cpp:124] Setting up ip1
I0428 20:06:55.769279 30984 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:55.769281 30984 net.cpp:139] Memory required for data: 4917760
I0428 20:06:55.769291 30984 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:55.769299 30984 net.cpp:86] Creating Layer relu1
I0428 20:06:55.769301 30984 net.cpp:408] relu1 <- ip1
I0428 20:06:55.769305 30984 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:55.769477 30984 net.cpp:124] Setting up relu1
I0428 20:06:55.769486 30984 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:55.769490 30984 net.cpp:139] Memory required for data: 4924160
I0428 20:06:55.769492 30984 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:55.769498 30984 net.cpp:86] Creating Layer ip2
I0428 20:06:55.769501 30984 net.cpp:408] ip2 <- ip1
I0428 20:06:55.769505 30984 net.cpp:382] ip2 -> ip2
I0428 20:06:55.769606 30984 net.cpp:124] Setting up ip2
I0428 20:06:55.769613 30984 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:55.769616 30984 net.cpp:139] Memory required for data: 4936960
I0428 20:06:55.769621 30984 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:55.769628 30984 net.cpp:86] Creating Layer relu2
I0428 20:06:55.769629 30984 net.cpp:408] relu2 <- ip2
I0428 20:06:55.769634 30984 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:55.770344 30984 net.cpp:124] Setting up relu2
I0428 20:06:55.770373 30984 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:55.770376 30984 net.cpp:139] Memory required for data: 4949760
I0428 20:06:55.770380 30984 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:55.770387 30984 net.cpp:86] Creating Layer ip3
I0428 20:06:55.770390 30984 net.cpp:408] ip3 <- ip2
I0428 20:06:55.770396 30984 net.cpp:382] ip3 -> ip3
I0428 20:06:55.770493 30984 net.cpp:124] Setting up ip3
I0428 20:06:55.770500 30984 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:55.770503 30984 net.cpp:139] Memory required for data: 4952320
I0428 20:06:55.770510 30984 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:55.770515 30984 net.cpp:86] Creating Layer relu3
I0428 20:06:55.770519 30984 net.cpp:408] relu3 <- ip3
I0428 20:06:55.770522 30984 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:55.770699 30984 net.cpp:124] Setting up relu3
I0428 20:06:55.770707 30984 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:55.770710 30984 net.cpp:139] Memory required for data: 4954880
I0428 20:06:55.770714 30984 layer_factory.hpp:77] Creating layer loss
I0428 20:06:55.770719 30984 net.cpp:86] Creating Layer loss
I0428 20:06:55.770721 30984 net.cpp:408] loss <- ip3
I0428 20:06:55.770725 30984 net.cpp:408] loss <- label
I0428 20:06:55.770732 30984 net.cpp:382] loss -> loss
I0428 20:06:55.770745 30984 layer_factory.hpp:77] Creating layer loss
I0428 20:06:55.770970 30984 net.cpp:124] Setting up loss
I0428 20:06:55.770979 30984 net.cpp:131] Top shape: (1)
I0428 20:06:55.770982 30984 net.cpp:134]     with loss weight 1
I0428 20:06:55.770997 30984 net.cpp:139] Memory required for data: 4954884
I0428 20:06:55.770999 30984 net.cpp:200] loss needs backward computation.
I0428 20:06:55.771003 30984 net.cpp:200] relu3 needs backward computation.
I0428 20:06:55.771005 30984 net.cpp:200] ip3 needs backward computation.
I0428 20:06:55.771008 30984 net.cpp:200] relu2 needs backward computation.
I0428 20:06:55.771010 30984 net.cpp:200] ip2 needs backward computation.
I0428 20:06:55.771013 30984 net.cpp:200] relu1 needs backward computation.
I0428 20:06:55.771015 30984 net.cpp:200] ip1 needs backward computation.
I0428 20:06:55.771028 30984 net.cpp:200] pool1 needs backward computation.
I0428 20:06:55.771031 30984 net.cpp:200] conv1 needs backward computation.
I0428 20:06:55.771034 30984 net.cpp:200] pool0 needs backward computation.
I0428 20:06:55.771036 30984 net.cpp:200] conv0 needs backward computation.
I0428 20:06:55.771039 30984 net.cpp:202] mnist does not need backward computation.
I0428 20:06:55.771042 30984 net.cpp:244] This network produces output loss
I0428 20:06:55.771051 30984 net.cpp:257] Network initialization done.
I0428 20:06:55.771351 30984 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1041.prototxt
I0428 20:06:55.771378 30984 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:55.771462 30984 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:55.771540 30984 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:55.771582 30984 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:55.771595 30984 net.cpp:86] Creating Layer mnist
I0428 20:06:55.771600 30984 net.cpp:382] mnist -> data
I0428 20:06:55.771606 30984 net.cpp:382] mnist -> label
I0428 20:06:55.771687 30984 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:55.773921 30984 net.cpp:124] Setting up mnist
I0428 20:06:55.773952 30984 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:55.773960 30984 net.cpp:131] Top shape: 100 (100)
I0428 20:06:55.773964 30984 net.cpp:139] Memory required for data: 314000
I0428 20:06:55.773967 30984 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:55.773973 30984 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:55.773977 30984 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:55.773982 30984 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:55.773988 30984 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:55.774039 30984 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:55.774044 30984 net.cpp:131] Top shape: 100 (100)
I0428 20:06:55.774047 30984 net.cpp:131] Top shape: 100 (100)
I0428 20:06:55.774050 30984 net.cpp:139] Memory required for data: 314800
I0428 20:06:55.774052 30984 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:55.774061 30984 net.cpp:86] Creating Layer conv0
I0428 20:06:55.774065 30984 net.cpp:408] conv0 <- data
I0428 20:06:55.774070 30984 net.cpp:382] conv0 -> conv0
I0428 20:06:55.775727 30984 net.cpp:124] Setting up conv0
I0428 20:06:55.775741 30984 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:55.775744 30984 net.cpp:139] Memory required for data: 6074800
I0428 20:06:55.775753 30984 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:55.775760 30984 net.cpp:86] Creating Layer pool0
I0428 20:06:55.775763 30984 net.cpp:408] pool0 <- conv0
I0428 20:06:55.775768 30984 net.cpp:382] pool0 -> pool0
I0428 20:06:55.775804 30984 net.cpp:124] Setting up pool0
I0428 20:06:55.775810 30984 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:55.775811 30984 net.cpp:139] Memory required for data: 7514800
I0428 20:06:55.775815 30984 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:55.775822 30984 net.cpp:86] Creating Layer conv1
I0428 20:06:55.775825 30984 net.cpp:408] conv1 <- pool0
I0428 20:06:55.775832 30984 net.cpp:382] conv1 -> conv1
I0428 20:06:55.777916 30984 net.cpp:124] Setting up conv1
I0428 20:06:55.777930 30984 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:55.777935 30984 net.cpp:139] Memory required for data: 7642800
I0428 20:06:55.777945 30984 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:55.777951 30984 net.cpp:86] Creating Layer pool1
I0428 20:06:55.777969 30984 net.cpp:408] pool1 <- conv1
I0428 20:06:55.777976 30984 net.cpp:382] pool1 -> pool1
I0428 20:06:55.778014 30984 net.cpp:124] Setting up pool1
I0428 20:06:55.778022 30984 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:55.778024 30984 net.cpp:139] Memory required for data: 7674800
I0428 20:06:55.778026 30984 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:55.778033 30984 net.cpp:86] Creating Layer ip1
I0428 20:06:55.778035 30984 net.cpp:408] ip1 <- pool1
I0428 20:06:55.778041 30984 net.cpp:382] ip1 -> ip1
I0428 20:06:55.778148 30984 net.cpp:124] Setting up ip1
I0428 20:06:55.778157 30984 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:55.778182 30984 net.cpp:139] Memory required for data: 7684800
I0428 20:06:55.778189 30984 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:55.778195 30984 net.cpp:86] Creating Layer relu1
I0428 20:06:55.778198 30984 net.cpp:408] relu1 <- ip1
I0428 20:06:55.778203 30984 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:55.778465 30984 net.cpp:124] Setting up relu1
I0428 20:06:55.778475 30984 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:55.778478 30984 net.cpp:139] Memory required for data: 7694800
I0428 20:06:55.778486 30984 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:55.778494 30984 net.cpp:86] Creating Layer ip2
I0428 20:06:55.778503 30984 net.cpp:408] ip2 <- ip1
I0428 20:06:55.778509 30984 net.cpp:382] ip2 -> ip2
I0428 20:06:55.778614 30984 net.cpp:124] Setting up ip2
I0428 20:06:55.778621 30984 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:55.778625 30984 net.cpp:139] Memory required for data: 7714800
I0428 20:06:55.778630 30984 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:55.778640 30984 net.cpp:86] Creating Layer relu2
I0428 20:06:55.778642 30984 net.cpp:408] relu2 <- ip2
I0428 20:06:55.778647 30984 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:55.778834 30984 net.cpp:124] Setting up relu2
I0428 20:06:55.778846 30984 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:55.778848 30984 net.cpp:139] Memory required for data: 7734800
I0428 20:06:55.778858 30984 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:55.778864 30984 net.cpp:86] Creating Layer ip3
I0428 20:06:55.778867 30984 net.cpp:408] ip3 <- ip2
I0428 20:06:55.778879 30984 net.cpp:382] ip3 -> ip3
I0428 20:06:55.778988 30984 net.cpp:124] Setting up ip3
I0428 20:06:55.778995 30984 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:55.779005 30984 net.cpp:139] Memory required for data: 7738800
I0428 20:06:55.779012 30984 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:55.779018 30984 net.cpp:86] Creating Layer relu3
I0428 20:06:55.779036 30984 net.cpp:408] relu3 <- ip3
I0428 20:06:55.779039 30984 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:55.779790 30984 net.cpp:124] Setting up relu3
I0428 20:06:55.779803 30984 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:55.779805 30984 net.cpp:139] Memory required for data: 7742800
I0428 20:06:55.779809 30984 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:55.779815 30984 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:55.779819 30984 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:55.779824 30984 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:55.779829 30984 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:55.779872 30984 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:55.779877 30984 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:55.779881 30984 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:55.779883 30984 net.cpp:139] Memory required for data: 7750800
I0428 20:06:55.779894 30984 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:55.779906 30984 net.cpp:86] Creating Layer accuracy
I0428 20:06:55.779908 30984 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:55.779912 30984 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:55.779917 30984 net.cpp:382] accuracy -> accuracy
I0428 20:06:55.779924 30984 net.cpp:124] Setting up accuracy
I0428 20:06:55.779928 30984 net.cpp:131] Top shape: (1)
I0428 20:06:55.779932 30984 net.cpp:139] Memory required for data: 7750804
I0428 20:06:55.779933 30984 layer_factory.hpp:77] Creating layer loss
I0428 20:06:55.779937 30984 net.cpp:86] Creating Layer loss
I0428 20:06:55.779940 30984 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:55.779944 30984 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:55.779949 30984 net.cpp:382] loss -> loss
I0428 20:06:55.779954 30984 layer_factory.hpp:77] Creating layer loss
I0428 20:06:55.780196 30984 net.cpp:124] Setting up loss
I0428 20:06:55.780206 30984 net.cpp:131] Top shape: (1)
I0428 20:06:55.780210 30984 net.cpp:134]     with loss weight 1
I0428 20:06:55.780215 30984 net.cpp:139] Memory required for data: 7750808
I0428 20:06:55.780227 30984 net.cpp:200] loss needs backward computation.
I0428 20:06:55.780231 30984 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:55.780236 30984 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:55.780237 30984 net.cpp:200] relu3 needs backward computation.
I0428 20:06:55.780241 30984 net.cpp:200] ip3 needs backward computation.
I0428 20:06:55.780243 30984 net.cpp:200] relu2 needs backward computation.
I0428 20:06:55.780246 30984 net.cpp:200] ip2 needs backward computation.
I0428 20:06:55.780248 30984 net.cpp:200] relu1 needs backward computation.
I0428 20:06:55.780257 30984 net.cpp:200] ip1 needs backward computation.
I0428 20:06:55.780261 30984 net.cpp:200] pool1 needs backward computation.
I0428 20:06:55.780263 30984 net.cpp:200] conv1 needs backward computation.
I0428 20:06:55.780267 30984 net.cpp:200] pool0 needs backward computation.
I0428 20:06:55.780269 30984 net.cpp:200] conv0 needs backward computation.
I0428 20:06:55.780272 30984 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:55.780277 30984 net.cpp:202] mnist does not need backward computation.
I0428 20:06:55.780278 30984 net.cpp:244] This network produces output accuracy
I0428 20:06:55.780282 30984 net.cpp:244] This network produces output loss
I0428 20:06:55.780294 30984 net.cpp:257] Network initialization done.
I0428 20:06:55.780334 30984 solver.cpp:56] Solver scaffolding done.
I0428 20:06:55.780728 30984 caffe.cpp:248] Starting Optimization
I0428 20:06:55.780738 30984 solver.cpp:273] Solving LeNet
I0428 20:06:55.780741 30984 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:55.781718 30984 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:55.786684 30984 blocking_queue.cpp:49] Waiting for data
I0428 20:06:55.858371 30991 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:55.858966 30984 solver.cpp:398]     Test net output #0: accuracy = 0.1049
I0428 20:06:55.858985 30984 solver.cpp:398]     Test net output #1: loss = 2.31917 (* 1 = 2.31917 loss)
I0428 20:06:55.862663 30984 solver.cpp:219] Iteration 0 (-9.92119e-43 iter/s, 0.0818954s/100 iters), loss = 2.31748
I0428 20:06:55.862689 30984 solver.cpp:238]     Train net output #0: loss = 2.31748 (* 1 = 2.31748 loss)
I0428 20:06:55.862715 30984 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:55.954627 30984 solver.cpp:219] Iteration 100 (1087.97 iter/s, 0.0919142s/100 iters), loss = 1.02061
I0428 20:06:55.954650 30984 solver.cpp:238]     Train net output #0: loss = 1.02061 (* 1 = 1.02061 loss)
I0428 20:06:55.954655 30984 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:56.046157 30984 solver.cpp:219] Iteration 200 (1092.95 iter/s, 0.0914954s/100 iters), loss = 0.539066
I0428 20:06:56.046180 30984 solver.cpp:238]     Train net output #0: loss = 0.539066 (* 1 = 0.539066 loss)
I0428 20:06:56.046186 30984 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:56.137575 30984 solver.cpp:219] Iteration 300 (1094.27 iter/s, 0.0913848s/100 iters), loss = 0.742688
I0428 20:06:56.137598 30984 solver.cpp:238]     Train net output #0: loss = 0.742688 (* 1 = 0.742688 loss)
I0428 20:06:56.137603 30984 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:56.228761 30984 solver.cpp:219] Iteration 400 (1097.04 iter/s, 0.0911544s/100 iters), loss = 0.442413
I0428 20:06:56.228785 30984 solver.cpp:238]     Train net output #0: loss = 0.442413 (* 1 = 0.442413 loss)
I0428 20:06:56.228790 30984 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:56.318886 30984 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:56.373412 30991 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:56.373989 30984 solver.cpp:398]     Test net output #0: accuracy = 0.9479
I0428 20:06:56.374008 30984 solver.cpp:398]     Test net output #1: loss = 0.172637 (* 1 = 0.172637 loss)
I0428 20:06:56.374936 30984 solver.cpp:219] Iteration 500 (684.279 iter/s, 0.146139s/100 iters), loss = 0.177486
I0428 20:06:56.374975 30984 solver.cpp:238]     Train net output #0: loss = 0.177486 (* 1 = 0.177486 loss)
I0428 20:06:56.374982 30984 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:56.473529 30984 solver.cpp:219] Iteration 600 (1014.77 iter/s, 0.098545s/100 iters), loss = 0.141723
I0428 20:06:56.473552 30984 solver.cpp:238]     Train net output #0: loss = 0.141723 (* 1 = 0.141723 loss)
I0428 20:06:56.473558 30984 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:56.566145 30984 solver.cpp:219] Iteration 700 (1080.11 iter/s, 0.0925829s/100 iters), loss = 0.114028
I0428 20:06:56.566169 30984 solver.cpp:238]     Train net output #0: loss = 0.114028 (* 1 = 0.114028 loss)
I0428 20:06:56.566191 30984 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:56.657044 30984 solver.cpp:219] Iteration 800 (1100.54 iter/s, 0.0908648s/100 iters), loss = 0.287513
I0428 20:06:56.657084 30984 solver.cpp:238]     Train net output #0: loss = 0.287513 (* 1 = 0.287513 loss)
I0428 20:06:56.657090 30984 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:56.748205 30984 solver.cpp:219] Iteration 900 (1097.58 iter/s, 0.0911094s/100 iters), loss = 0.20627
I0428 20:06:56.748230 30984 solver.cpp:238]     Train net output #0: loss = 0.20627 (* 1 = 0.20627 loss)
I0428 20:06:56.748236 30984 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:56.778517 30990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:56.838281 30984 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:56.839079 30984 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:56.839648 30984 solver.cpp:311] Iteration 1000, loss = 0.242228
I0428 20:06:56.839663 30984 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:56.914475 30991 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:56.915061 30984 solver.cpp:398]     Test net output #0: accuracy = 0.9669
I0428 20:06:56.915081 30984 solver.cpp:398]     Test net output #1: loss = 0.106825 (* 1 = 0.106825 loss)
I0428 20:06:56.915086 30984 solver.cpp:316] Optimization Done.
I0428 20:06:56.915089 30984 caffe.cpp:259] Optimization Done.
