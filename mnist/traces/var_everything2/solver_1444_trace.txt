I0428 20:24:50.867243  2494 caffe.cpp:218] Using GPUs 0
I0428 20:24:50.904685  2494 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:51.414345  2494 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1444.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:51.414489  2494 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1444.prototxt
I0428 20:24:51.414829  2494 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:51.414845  2494 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:51.414927  2494 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:51.414999  2494 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:51.415094  2494 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:51.415117  2494 net.cpp:86] Creating Layer mnist
I0428 20:24:51.415125  2494 net.cpp:382] mnist -> data
I0428 20:24:51.415148  2494 net.cpp:382] mnist -> label
I0428 20:24:51.416261  2494 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:51.418725  2494 net.cpp:124] Setting up mnist
I0428 20:24:51.418742  2494 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:51.418748  2494 net.cpp:131] Top shape: 64 (64)
I0428 20:24:51.418751  2494 net.cpp:139] Memory required for data: 200960
I0428 20:24:51.418759  2494 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:51.418776  2494 net.cpp:86] Creating Layer conv0
I0428 20:24:51.418783  2494 net.cpp:408] conv0 <- data
I0428 20:24:51.418797  2494 net.cpp:382] conv0 -> conv0
I0428 20:24:51.690477  2494 net.cpp:124] Setting up conv0
I0428 20:24:51.690518  2494 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:24:51.690522  2494 net.cpp:139] Memory required for data: 14946560
I0428 20:24:51.690538  2494 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:51.690567  2494 net.cpp:86] Creating Layer pool0
I0428 20:24:51.690572  2494 net.cpp:408] pool0 <- conv0
I0428 20:24:51.690577  2494 net.cpp:382] pool0 -> pool0
I0428 20:24:51.690624  2494 net.cpp:124] Setting up pool0
I0428 20:24:51.690631  2494 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:24:51.690652  2494 net.cpp:139] Memory required for data: 18632960
I0428 20:24:51.690656  2494 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:51.690668  2494 net.cpp:86] Creating Layer conv1
I0428 20:24:51.690675  2494 net.cpp:408] conv1 <- pool0
I0428 20:24:51.690680  2494 net.cpp:382] conv1 -> conv1
I0428 20:24:51.693687  2494 net.cpp:124] Setting up conv1
I0428 20:24:51.693717  2494 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:24:51.693723  2494 net.cpp:139] Memory required for data: 18665728
I0428 20:24:51.693732  2494 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:51.693739  2494 net.cpp:86] Creating Layer pool1
I0428 20:24:51.693742  2494 net.cpp:408] pool1 <- conv1
I0428 20:24:51.693764  2494 net.cpp:382] pool1 -> pool1
I0428 20:24:51.693804  2494 net.cpp:124] Setting up pool1
I0428 20:24:51.693810  2494 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:24:51.693814  2494 net.cpp:139] Memory required for data: 18673920
I0428 20:24:51.693816  2494 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:51.693825  2494 net.cpp:86] Creating Layer ip1
I0428 20:24:51.693830  2494 net.cpp:408] ip1 <- pool1
I0428 20:24:51.693835  2494 net.cpp:382] ip1 -> ip1
I0428 20:24:51.693934  2494 net.cpp:124] Setting up ip1
I0428 20:24:51.693941  2494 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:51.693944  2494 net.cpp:139] Memory required for data: 18676480
I0428 20:24:51.693953  2494 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:51.693959  2494 net.cpp:86] Creating Layer relu1
I0428 20:24:51.693963  2494 net.cpp:408] relu1 <- ip1
I0428 20:24:51.693967  2494 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:51.694159  2494 net.cpp:124] Setting up relu1
I0428 20:24:51.694169  2494 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:51.694172  2494 net.cpp:139] Memory required for data: 18679040
I0428 20:24:51.694175  2494 layer_factory.hpp:77] Creating layer loss
I0428 20:24:51.694181  2494 net.cpp:86] Creating Layer loss
I0428 20:24:51.694185  2494 net.cpp:408] loss <- ip1
I0428 20:24:51.694190  2494 net.cpp:408] loss <- label
I0428 20:24:51.694195  2494 net.cpp:382] loss -> loss
I0428 20:24:51.694213  2494 layer_factory.hpp:77] Creating layer loss
I0428 20:24:51.695132  2494 net.cpp:124] Setting up loss
I0428 20:24:51.695144  2494 net.cpp:131] Top shape: (1)
I0428 20:24:51.695147  2494 net.cpp:134]     with loss weight 1
I0428 20:24:51.695176  2494 net.cpp:139] Memory required for data: 18679044
I0428 20:24:51.695180  2494 net.cpp:200] loss needs backward computation.
I0428 20:24:51.695184  2494 net.cpp:200] relu1 needs backward computation.
I0428 20:24:51.695188  2494 net.cpp:200] ip1 needs backward computation.
I0428 20:24:51.695190  2494 net.cpp:200] pool1 needs backward computation.
I0428 20:24:51.695194  2494 net.cpp:200] conv1 needs backward computation.
I0428 20:24:51.695196  2494 net.cpp:200] pool0 needs backward computation.
I0428 20:24:51.695199  2494 net.cpp:200] conv0 needs backward computation.
I0428 20:24:51.695202  2494 net.cpp:202] mnist does not need backward computation.
I0428 20:24:51.695205  2494 net.cpp:244] This network produces output loss
I0428 20:24:51.695214  2494 net.cpp:257] Network initialization done.
I0428 20:24:51.695475  2494 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1444.prototxt
I0428 20:24:51.695513  2494 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:51.695603  2494 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:51.695685  2494 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:51.695734  2494 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:51.695746  2494 net.cpp:86] Creating Layer mnist
I0428 20:24:51.695750  2494 net.cpp:382] mnist -> data
I0428 20:24:51.695760  2494 net.cpp:382] mnist -> label
I0428 20:24:51.695848  2494 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:51.697963  2494 net.cpp:124] Setting up mnist
I0428 20:24:51.697976  2494 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:51.697981  2494 net.cpp:131] Top shape: 100 (100)
I0428 20:24:51.697985  2494 net.cpp:139] Memory required for data: 314000
I0428 20:24:51.697988  2494 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:51.698009  2494 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:51.698014  2494 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:51.698034  2494 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:51.698041  2494 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:51.698122  2494 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:51.698129  2494 net.cpp:131] Top shape: 100 (100)
I0428 20:24:51.698133  2494 net.cpp:131] Top shape: 100 (100)
I0428 20:24:51.698137  2494 net.cpp:139] Memory required for data: 314800
I0428 20:24:51.698139  2494 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:51.698150  2494 net.cpp:86] Creating Layer conv0
I0428 20:24:51.698153  2494 net.cpp:408] conv0 <- data
I0428 20:24:51.698158  2494 net.cpp:382] conv0 -> conv0
I0428 20:24:51.699115  2494 net.cpp:124] Setting up conv0
I0428 20:24:51.699128  2494 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:24:51.699148  2494 net.cpp:139] Memory required for data: 23354800
I0428 20:24:51.699156  2494 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:51.699163  2494 net.cpp:86] Creating Layer pool0
I0428 20:24:51.699167  2494 net.cpp:408] pool0 <- conv0
I0428 20:24:51.699187  2494 net.cpp:382] pool0 -> pool0
I0428 20:24:51.699239  2494 net.cpp:124] Setting up pool0
I0428 20:24:51.699246  2494 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:24:51.699249  2494 net.cpp:139] Memory required for data: 29114800
I0428 20:24:51.699252  2494 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:51.699264  2494 net.cpp:86] Creating Layer conv1
I0428 20:24:51.699267  2494 net.cpp:408] conv1 <- pool0
I0428 20:24:51.699273  2494 net.cpp:382] conv1 -> conv1
I0428 20:24:51.701050  2494 net.cpp:124] Setting up conv1
I0428 20:24:51.701078  2494 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:24:51.701097  2494 net.cpp:139] Memory required for data: 29166000
I0428 20:24:51.701107  2494 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:51.701115  2494 net.cpp:86] Creating Layer pool1
I0428 20:24:51.701130  2494 net.cpp:408] pool1 <- conv1
I0428 20:24:51.701136  2494 net.cpp:382] pool1 -> pool1
I0428 20:24:51.701177  2494 net.cpp:124] Setting up pool1
I0428 20:24:51.701184  2494 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:24:51.701189  2494 net.cpp:139] Memory required for data: 29178800
I0428 20:24:51.701191  2494 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:51.701197  2494 net.cpp:86] Creating Layer ip1
I0428 20:24:51.701201  2494 net.cpp:408] ip1 <- pool1
I0428 20:24:51.701207  2494 net.cpp:382] ip1 -> ip1
I0428 20:24:51.701323  2494 net.cpp:124] Setting up ip1
I0428 20:24:51.701333  2494 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:51.701336  2494 net.cpp:139] Memory required for data: 29182800
I0428 20:24:51.701344  2494 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:51.701349  2494 net.cpp:86] Creating Layer relu1
I0428 20:24:51.701354  2494 net.cpp:408] relu1 <- ip1
I0428 20:24:51.701360  2494 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:51.702252  2494 net.cpp:124] Setting up relu1
I0428 20:24:51.702265  2494 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:51.702270  2494 net.cpp:139] Memory required for data: 29186800
I0428 20:24:51.702275  2494 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:24:51.702282  2494 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:24:51.702286  2494 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:24:51.702293  2494 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:24:51.702301  2494 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:24:51.702360  2494 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:24:51.702368  2494 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:51.702371  2494 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:51.702374  2494 net.cpp:139] Memory required for data: 29194800
I0428 20:24:51.702378  2494 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:51.702384  2494 net.cpp:86] Creating Layer accuracy
I0428 20:24:51.702388  2494 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:24:51.702391  2494 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:51.702397  2494 net.cpp:382] accuracy -> accuracy
I0428 20:24:51.702404  2494 net.cpp:124] Setting up accuracy
I0428 20:24:51.702409  2494 net.cpp:131] Top shape: (1)
I0428 20:24:51.702412  2494 net.cpp:139] Memory required for data: 29194804
I0428 20:24:51.702415  2494 layer_factory.hpp:77] Creating layer loss
I0428 20:24:51.702420  2494 net.cpp:86] Creating Layer loss
I0428 20:24:51.702424  2494 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:24:51.702435  2494 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:51.702440  2494 net.cpp:382] loss -> loss
I0428 20:24:51.702447  2494 layer_factory.hpp:77] Creating layer loss
I0428 20:24:51.702698  2494 net.cpp:124] Setting up loss
I0428 20:24:51.702709  2494 net.cpp:131] Top shape: (1)
I0428 20:24:51.702713  2494 net.cpp:134]     with loss weight 1
I0428 20:24:51.702719  2494 net.cpp:139] Memory required for data: 29194808
I0428 20:24:51.702723  2494 net.cpp:200] loss needs backward computation.
I0428 20:24:51.702728  2494 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:51.702733  2494 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:24:51.702736  2494 net.cpp:200] relu1 needs backward computation.
I0428 20:24:51.702739  2494 net.cpp:200] ip1 needs backward computation.
I0428 20:24:51.702742  2494 net.cpp:200] pool1 needs backward computation.
I0428 20:24:51.702751  2494 net.cpp:200] conv1 needs backward computation.
I0428 20:24:51.702756  2494 net.cpp:200] pool0 needs backward computation.
I0428 20:24:51.702759  2494 net.cpp:200] conv0 needs backward computation.
I0428 20:24:51.702764  2494 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:51.702767  2494 net.cpp:202] mnist does not need backward computation.
I0428 20:24:51.702770  2494 net.cpp:244] This network produces output accuracy
I0428 20:24:51.702787  2494 net.cpp:244] This network produces output loss
I0428 20:24:51.702807  2494 net.cpp:257] Network initialization done.
I0428 20:24:51.702843  2494 solver.cpp:56] Solver scaffolding done.
I0428 20:24:51.703092  2494 caffe.cpp:248] Starting Optimization
I0428 20:24:51.703099  2494 solver.cpp:273] Solving LeNet
I0428 20:24:51.703102  2494 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:51.703943  2494 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:51.793881  2506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:51.796183  2494 solver.cpp:398]     Test net output #0: accuracy = 0.0648
I0428 20:24:51.796218  2494 solver.cpp:398]     Test net output #1: loss = 2.34026 (* 1 = 2.34026 loss)
I0428 20:24:51.800469  2494 solver.cpp:219] Iteration 0 (-8.35174e-43 iter/s, 0.0973343s/100 iters), loss = 2.3088
I0428 20:24:51.800508  2494 solver.cpp:238]     Train net output #0: loss = 2.3088 (* 1 = 2.3088 loss)
I0428 20:24:51.800519  2494 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:51.984333  2494 solver.cpp:219] Iteration 100 (544.003 iter/s, 0.183822s/100 iters), loss = 0.758752
I0428 20:24:51.984361  2494 solver.cpp:238]     Train net output #0: loss = 0.758752 (* 1 = 0.758752 loss)
I0428 20:24:51.984369  2494 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:52.171921  2494 solver.cpp:219] Iteration 200 (533.207 iter/s, 0.187544s/100 iters), loss = 0.658646
I0428 20:24:52.171954  2494 solver.cpp:238]     Train net output #0: loss = 0.658646 (* 1 = 0.658646 loss)
I0428 20:24:52.171963  2494 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:52.366106  2494 solver.cpp:219] Iteration 300 (515.11 iter/s, 0.194133s/100 iters), loss = 0.83221
I0428 20:24:52.366158  2494 solver.cpp:238]     Train net output #0: loss = 0.83221 (* 1 = 0.83221 loss)
I0428 20:24:52.366171  2494 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:52.570778  2494 solver.cpp:219] Iteration 400 (488.746 iter/s, 0.204605s/100 iters), loss = 0.655346
I0428 20:24:52.570833  2494 solver.cpp:238]     Train net output #0: loss = 0.655346 (* 1 = 0.655346 loss)
I0428 20:24:52.570854  2494 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:52.770262  2494 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:52.868531  2506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:52.871825  2494 solver.cpp:398]     Test net output #0: accuracy = 0.7543
I0428 20:24:52.871853  2494 solver.cpp:398]     Test net output #1: loss = 0.675594 (* 1 = 0.675594 loss)
I0428 20:24:52.873675  2494 solver.cpp:219] Iteration 500 (330.221 iter/s, 0.302827s/100 iters), loss = 0.698065
I0428 20:24:52.873704  2494 solver.cpp:238]     Train net output #0: loss = 0.698065 (* 1 = 0.698065 loss)
I0428 20:24:52.873713  2494 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:53.067515  2494 solver.cpp:219] Iteration 600 (516.014 iter/s, 0.193793s/100 iters), loss = 0.732637
I0428 20:24:53.067566  2494 solver.cpp:238]     Train net output #0: loss = 0.732637 (* 1 = 0.732637 loss)
I0428 20:24:53.067579  2494 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:53.270061  2494 solver.cpp:219] Iteration 700 (493.877 iter/s, 0.20248s/100 iters), loss = 0.808465
I0428 20:24:53.270114  2494 solver.cpp:238]     Train net output #0: loss = 0.808465 (* 1 = 0.808465 loss)
I0428 20:24:53.270128  2494 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:53.476054  2494 solver.cpp:219] Iteration 800 (485.615 iter/s, 0.205924s/100 iters), loss = 0.716386
I0428 20:24:53.476110  2494 solver.cpp:238]     Train net output #0: loss = 0.716386 (* 1 = 0.716386 loss)
I0428 20:24:53.476125  2494 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:53.682796  2494 solver.cpp:219] Iteration 900 (483.863 iter/s, 0.20667s/100 iters), loss = 0.667623
I0428 20:24:53.682852  2494 solver.cpp:238]     Train net output #0: loss = 0.667623 (* 1 = 0.667623 loss)
I0428 20:24:53.682867  2494 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:53.751827  2503 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:53.885684  2494 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:53.887301  2494 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:53.888475  2494 solver.cpp:311] Iteration 1000, loss = 0.648088
I0428 20:24:53.888514  2494 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:53.989471  2506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:53.992748  2494 solver.cpp:398]     Test net output #0: accuracy = 0.7663
I0428 20:24:53.992774  2494 solver.cpp:398]     Test net output #1: loss = 0.625956 (* 1 = 0.625956 loss)
I0428 20:24:53.992780  2494 solver.cpp:316] Optimization Done.
I0428 20:24:53.992787  2494 caffe.cpp:259] Optimization Done.
