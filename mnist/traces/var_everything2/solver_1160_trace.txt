I0428 20:11:30.173295 32083 caffe.cpp:218] Using GPUs 0
I0428 20:11:30.212034 32083 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:30.668978 32083 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1160.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:30.669131 32083 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1160.prototxt
I0428 20:11:30.669499 32083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:30.669530 32083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:30.669610 32083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:30.669672 32083 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:30.669766 32083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:30.669785 32083 net.cpp:86] Creating Layer mnist
I0428 20:11:30.669792 32083 net.cpp:382] mnist -> data
I0428 20:11:30.669811 32083 net.cpp:382] mnist -> label
I0428 20:11:30.670817 32083 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:30.672997 32083 net.cpp:124] Setting up mnist
I0428 20:11:30.673028 32083 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:30.673053 32083 net.cpp:131] Top shape: 64 (64)
I0428 20:11:30.673075 32083 net.cpp:139] Memory required for data: 200960
I0428 20:11:30.673081 32083 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:30.673094 32083 net.cpp:86] Creating Layer conv0
I0428 20:11:30.673113 32083 net.cpp:408] conv0 <- data
I0428 20:11:30.673125 32083 net.cpp:382] conv0 -> conv0
I0428 20:11:30.904116 32083 net.cpp:124] Setting up conv0
I0428 20:11:30.904158 32083 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:30.904162 32083 net.cpp:139] Memory required for data: 3887360
I0428 20:11:30.904176 32083 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:30.904189 32083 net.cpp:86] Creating Layer pool0
I0428 20:11:30.904208 32083 net.cpp:408] pool0 <- conv0
I0428 20:11:30.904213 32083 net.cpp:382] pool0 -> pool0
I0428 20:11:30.904255 32083 net.cpp:124] Setting up pool0
I0428 20:11:30.904276 32083 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:30.904279 32083 net.cpp:139] Memory required for data: 4808960
I0428 20:11:30.904283 32083 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:30.904292 32083 net.cpp:86] Creating Layer conv1
I0428 20:11:30.904295 32083 net.cpp:408] conv1 <- pool0
I0428 20:11:30.904300 32083 net.cpp:382] conv1 -> conv1
I0428 20:11:30.906369 32083 net.cpp:124] Setting up conv1
I0428 20:11:30.906400 32083 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:30.906404 32083 net.cpp:139] Memory required for data: 5628160
I0428 20:11:30.906414 32083 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:30.906435 32083 net.cpp:86] Creating Layer pool1
I0428 20:11:30.906438 32083 net.cpp:408] pool1 <- conv1
I0428 20:11:30.906460 32083 net.cpp:382] pool1 -> pool1
I0428 20:11:30.906510 32083 net.cpp:124] Setting up pool1
I0428 20:11:30.906517 32083 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:30.906538 32083 net.cpp:139] Memory required for data: 5832960
I0428 20:11:30.906541 32083 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:30.906548 32083 net.cpp:86] Creating Layer ip1
I0428 20:11:30.906551 32083 net.cpp:408] ip1 <- pool1
I0428 20:11:30.906556 32083 net.cpp:382] ip1 -> ip1
I0428 20:11:30.906787 32083 net.cpp:124] Setting up ip1
I0428 20:11:30.906795 32083 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:30.906797 32083 net.cpp:139] Memory required for data: 5839360
I0428 20:11:30.906805 32083 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:30.906810 32083 net.cpp:86] Creating Layer relu1
I0428 20:11:30.906813 32083 net.cpp:408] relu1 <- ip1
I0428 20:11:30.906817 32083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:30.906980 32083 net.cpp:124] Setting up relu1
I0428 20:11:30.906990 32083 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:30.906992 32083 net.cpp:139] Memory required for data: 5845760
I0428 20:11:30.906996 32083 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:30.907002 32083 net.cpp:86] Creating Layer ip2
I0428 20:11:30.907006 32083 net.cpp:408] ip2 <- ip1
I0428 20:11:30.907011 32083 net.cpp:382] ip2 -> ip2
I0428 20:11:30.908004 32083 net.cpp:124] Setting up ip2
I0428 20:11:30.908032 32083 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:30.908036 32083 net.cpp:139] Memory required for data: 5858560
I0428 20:11:30.908042 32083 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:30.908049 32083 net.cpp:86] Creating Layer relu2
I0428 20:11:30.908053 32083 net.cpp:408] relu2 <- ip2
I0428 20:11:30.908058 32083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:30.908895 32083 net.cpp:124] Setting up relu2
I0428 20:11:30.908910 32083 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:30.908913 32083 net.cpp:139] Memory required for data: 5871360
I0428 20:11:30.908917 32083 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:30.908924 32083 net.cpp:86] Creating Layer ip3
I0428 20:11:30.908928 32083 net.cpp:408] ip3 <- ip2
I0428 20:11:30.908934 32083 net.cpp:382] ip3 -> ip3
I0428 20:11:30.909044 32083 net.cpp:124] Setting up ip3
I0428 20:11:30.909052 32083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:30.909056 32083 net.cpp:139] Memory required for data: 5873920
I0428 20:11:30.909065 32083 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:30.909070 32083 net.cpp:86] Creating Layer relu3
I0428 20:11:30.909073 32083 net.cpp:408] relu3 <- ip3
I0428 20:11:30.909077 32083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:30.909298 32083 net.cpp:124] Setting up relu3
I0428 20:11:30.909307 32083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:30.909310 32083 net.cpp:139] Memory required for data: 5876480
I0428 20:11:30.909313 32083 layer_factory.hpp:77] Creating layer loss
I0428 20:11:30.909319 32083 net.cpp:86] Creating Layer loss
I0428 20:11:30.909322 32083 net.cpp:408] loss <- ip3
I0428 20:11:30.909327 32083 net.cpp:408] loss <- label
I0428 20:11:30.909332 32083 net.cpp:382] loss -> loss
I0428 20:11:30.909345 32083 layer_factory.hpp:77] Creating layer loss
I0428 20:11:30.909580 32083 net.cpp:124] Setting up loss
I0428 20:11:30.909605 32083 net.cpp:131] Top shape: (1)
I0428 20:11:30.909608 32083 net.cpp:134]     with loss weight 1
I0428 20:11:30.909622 32083 net.cpp:139] Memory required for data: 5876484
I0428 20:11:30.909626 32083 net.cpp:200] loss needs backward computation.
I0428 20:11:30.909629 32083 net.cpp:200] relu3 needs backward computation.
I0428 20:11:30.909632 32083 net.cpp:200] ip3 needs backward computation.
I0428 20:11:30.909634 32083 net.cpp:200] relu2 needs backward computation.
I0428 20:11:30.909637 32083 net.cpp:200] ip2 needs backward computation.
I0428 20:11:30.909641 32083 net.cpp:200] relu1 needs backward computation.
I0428 20:11:30.909642 32083 net.cpp:200] ip1 needs backward computation.
I0428 20:11:30.909646 32083 net.cpp:200] pool1 needs backward computation.
I0428 20:11:30.909648 32083 net.cpp:200] conv1 needs backward computation.
I0428 20:11:30.909651 32083 net.cpp:200] pool0 needs backward computation.
I0428 20:11:30.909653 32083 net.cpp:200] conv0 needs backward computation.
I0428 20:11:30.909657 32083 net.cpp:202] mnist does not need backward computation.
I0428 20:11:30.909659 32083 net.cpp:244] This network produces output loss
I0428 20:11:30.909668 32083 net.cpp:257] Network initialization done.
I0428 20:11:30.910019 32083 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1160.prototxt
I0428 20:11:30.910060 32083 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:30.910168 32083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:30.910251 32083 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:30.910293 32083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:30.910308 32083 net.cpp:86] Creating Layer mnist
I0428 20:11:30.910315 32083 net.cpp:382] mnist -> data
I0428 20:11:30.910322 32083 net.cpp:382] mnist -> label
I0428 20:11:30.910423 32083 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:30.912410 32083 net.cpp:124] Setting up mnist
I0428 20:11:30.912439 32083 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:30.912446 32083 net.cpp:131] Top shape: 100 (100)
I0428 20:11:30.912448 32083 net.cpp:139] Memory required for data: 314000
I0428 20:11:30.912452 32083 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:30.912458 32083 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:30.912462 32083 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:30.912467 32083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:30.912473 32083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:30.912609 32083 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:30.912617 32083 net.cpp:131] Top shape: 100 (100)
I0428 20:11:30.912621 32083 net.cpp:131] Top shape: 100 (100)
I0428 20:11:30.912623 32083 net.cpp:139] Memory required for data: 314800
I0428 20:11:30.912626 32083 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:30.912636 32083 net.cpp:86] Creating Layer conv0
I0428 20:11:30.912638 32083 net.cpp:408] conv0 <- data
I0428 20:11:30.912644 32083 net.cpp:382] conv0 -> conv0
I0428 20:11:30.914382 32083 net.cpp:124] Setting up conv0
I0428 20:11:30.914412 32083 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:30.914414 32083 net.cpp:139] Memory required for data: 6074800
I0428 20:11:30.914438 32083 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:30.914446 32083 net.cpp:86] Creating Layer pool0
I0428 20:11:30.914449 32083 net.cpp:408] pool0 <- conv0
I0428 20:11:30.914454 32083 net.cpp:382] pool0 -> pool0
I0428 20:11:30.914491 32083 net.cpp:124] Setting up pool0
I0428 20:11:30.914497 32083 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:30.914500 32083 net.cpp:139] Memory required for data: 7514800
I0428 20:11:30.914504 32083 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:30.914511 32083 net.cpp:86] Creating Layer conv1
I0428 20:11:30.914515 32083 net.cpp:408] conv1 <- pool0
I0428 20:11:30.914520 32083 net.cpp:382] conv1 -> conv1
I0428 20:11:30.916211 32083 net.cpp:124] Setting up conv1
I0428 20:11:30.916225 32083 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:30.916229 32083 net.cpp:139] Memory required for data: 8794800
I0428 20:11:30.916254 32083 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:30.916260 32083 net.cpp:86] Creating Layer pool1
I0428 20:11:30.916265 32083 net.cpp:408] pool1 <- conv1
I0428 20:11:30.916270 32083 net.cpp:382] pool1 -> pool1
I0428 20:11:30.916307 32083 net.cpp:124] Setting up pool1
I0428 20:11:30.916319 32083 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:30.916322 32083 net.cpp:139] Memory required for data: 9114800
I0428 20:11:30.916324 32083 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:30.916333 32083 net.cpp:86] Creating Layer ip1
I0428 20:11:30.916337 32083 net.cpp:408] ip1 <- pool1
I0428 20:11:30.916342 32083 net.cpp:382] ip1 -> ip1
I0428 20:11:30.916573 32083 net.cpp:124] Setting up ip1
I0428 20:11:30.916579 32083 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:30.916592 32083 net.cpp:139] Memory required for data: 9124800
I0428 20:11:30.916599 32083 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:30.916604 32083 net.cpp:86] Creating Layer relu1
I0428 20:11:30.916610 32083 net.cpp:408] relu1 <- ip1
I0428 20:11:30.916630 32083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:30.916821 32083 net.cpp:124] Setting up relu1
I0428 20:11:30.916841 32083 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:30.916846 32083 net.cpp:139] Memory required for data: 9134800
I0428 20:11:30.916864 32083 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:30.916872 32083 net.cpp:86] Creating Layer ip2
I0428 20:11:30.916874 32083 net.cpp:408] ip2 <- ip1
I0428 20:11:30.916882 32083 net.cpp:382] ip2 -> ip2
I0428 20:11:30.917078 32083 net.cpp:124] Setting up ip2
I0428 20:11:30.917086 32083 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:30.917090 32083 net.cpp:139] Memory required for data: 9154800
I0428 20:11:30.917102 32083 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:30.917127 32083 net.cpp:86] Creating Layer relu2
I0428 20:11:30.917147 32083 net.cpp:408] relu2 <- ip2
I0428 20:11:30.917153 32083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:30.917361 32083 net.cpp:124] Setting up relu2
I0428 20:11:30.917372 32083 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:30.917376 32083 net.cpp:139] Memory required for data: 9174800
I0428 20:11:30.917378 32083 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:30.917385 32083 net.cpp:86] Creating Layer ip3
I0428 20:11:30.917388 32083 net.cpp:408] ip3 <- ip2
I0428 20:11:30.917393 32083 net.cpp:382] ip3 -> ip3
I0428 20:11:30.917511 32083 net.cpp:124] Setting up ip3
I0428 20:11:30.917518 32083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:30.917521 32083 net.cpp:139] Memory required for data: 9178800
I0428 20:11:30.917536 32083 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:30.917541 32083 net.cpp:86] Creating Layer relu3
I0428 20:11:30.917544 32083 net.cpp:408] relu3 <- ip3
I0428 20:11:30.917549 32083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:30.918378 32083 net.cpp:124] Setting up relu3
I0428 20:11:30.918390 32083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:30.918393 32083 net.cpp:139] Memory required for data: 9182800
I0428 20:11:30.918396 32083 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:30.918402 32083 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:30.918406 32083 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:30.918411 32083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:30.918416 32083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:30.918483 32083 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:30.918490 32083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:30.918495 32083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:30.918498 32083 net.cpp:139] Memory required for data: 9190800
I0428 20:11:30.918501 32083 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:30.918506 32083 net.cpp:86] Creating Layer accuracy
I0428 20:11:30.918509 32083 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:30.918514 32083 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:30.918530 32083 net.cpp:382] accuracy -> accuracy
I0428 20:11:30.918539 32083 net.cpp:124] Setting up accuracy
I0428 20:11:30.918542 32083 net.cpp:131] Top shape: (1)
I0428 20:11:30.918545 32083 net.cpp:139] Memory required for data: 9190804
I0428 20:11:30.918547 32083 layer_factory.hpp:77] Creating layer loss
I0428 20:11:30.918552 32083 net.cpp:86] Creating Layer loss
I0428 20:11:30.918555 32083 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:30.918560 32083 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:30.918565 32083 net.cpp:382] loss -> loss
I0428 20:11:30.918571 32083 layer_factory.hpp:77] Creating layer loss
I0428 20:11:30.918856 32083 net.cpp:124] Setting up loss
I0428 20:11:30.918869 32083 net.cpp:131] Top shape: (1)
I0428 20:11:30.918879 32083 net.cpp:134]     with loss weight 1
I0428 20:11:30.918893 32083 net.cpp:139] Memory required for data: 9190808
I0428 20:11:30.918897 32083 net.cpp:200] loss needs backward computation.
I0428 20:11:30.918901 32083 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:30.918905 32083 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:30.918907 32083 net.cpp:200] relu3 needs backward computation.
I0428 20:11:30.918910 32083 net.cpp:200] ip3 needs backward computation.
I0428 20:11:30.918912 32083 net.cpp:200] relu2 needs backward computation.
I0428 20:11:30.918915 32083 net.cpp:200] ip2 needs backward computation.
I0428 20:11:30.918918 32083 net.cpp:200] relu1 needs backward computation.
I0428 20:11:30.918920 32083 net.cpp:200] ip1 needs backward computation.
I0428 20:11:30.918923 32083 net.cpp:200] pool1 needs backward computation.
I0428 20:11:30.918926 32083 net.cpp:200] conv1 needs backward computation.
I0428 20:11:30.918936 32083 net.cpp:200] pool0 needs backward computation.
I0428 20:11:30.918938 32083 net.cpp:200] conv0 needs backward computation.
I0428 20:11:30.918941 32083 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:30.918946 32083 net.cpp:202] mnist does not need backward computation.
I0428 20:11:30.918947 32083 net.cpp:244] This network produces output accuracy
I0428 20:11:30.918961 32083 net.cpp:244] This network produces output loss
I0428 20:11:30.918972 32083 net.cpp:257] Network initialization done.
I0428 20:11:30.919013 32083 solver.cpp:56] Solver scaffolding done.
I0428 20:11:30.919384 32083 caffe.cpp:248] Starting Optimization
I0428 20:11:30.919389 32083 solver.cpp:273] Solving LeNet
I0428 20:11:30.919394 32083 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:30.920256 32083 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:30.928002 32083 blocking_queue.cpp:49] Waiting for data
I0428 20:11:30.981195 32090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:30.981820 32083 solver.cpp:398]     Test net output #0: accuracy = 0.1228
I0428 20:11:30.981838 32083 solver.cpp:398]     Test net output #1: loss = 2.31046 (* 1 = 2.31046 loss)
I0428 20:11:30.985597 32083 solver.cpp:219] Iteration 0 (3.44074 iter/s, 0.0661627s/100 iters), loss = 2.3184
I0428 20:11:30.985620 32083 solver.cpp:238]     Train net output #0: loss = 2.3184 (* 1 = 2.3184 loss)
I0428 20:11:30.985644 32083 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:31.105479 32083 solver.cpp:219] Iteration 100 (834.398 iter/s, 0.119847s/100 iters), loss = 0.959658
I0428 20:11:31.105504 32083 solver.cpp:238]     Train net output #0: loss = 0.959658 (* 1 = 0.959658 loss)
I0428 20:11:31.105509 32083 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:31.225092 32083 solver.cpp:219] Iteration 200 (836.283 iter/s, 0.119577s/100 iters), loss = 0.421251
I0428 20:11:31.225116 32083 solver.cpp:238]     Train net output #0: loss = 0.421251 (* 1 = 0.421251 loss)
I0428 20:11:31.225121 32083 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:31.346026 32083 solver.cpp:219] Iteration 300 (827.133 iter/s, 0.1209s/100 iters), loss = 0.368079
I0428 20:11:31.346052 32083 solver.cpp:238]     Train net output #0: loss = 0.368079 (* 1 = 0.368079 loss)
I0428 20:11:31.346060 32083 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:31.466742 32083 solver.cpp:219] Iteration 400 (828.643 iter/s, 0.120679s/100 iters), loss = 0.571551
I0428 20:11:31.466768 32083 solver.cpp:238]     Train net output #0: loss = 0.571551 (* 1 = 0.571551 loss)
I0428 20:11:31.466790 32083 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:31.586544 32083 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:31.641125 32090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:31.642961 32083 solver.cpp:398]     Test net output #0: accuracy = 0.8692
I0428 20:11:31.642979 32083 solver.cpp:398]     Test net output #1: loss = 0.343892 (* 1 = 0.343892 loss)
I0428 20:11:31.644131 32083 solver.cpp:219] Iteration 500 (563.858 iter/s, 0.17735s/100 iters), loss = 0.416964
I0428 20:11:31.644170 32083 solver.cpp:238]     Train net output #0: loss = 0.416964 (* 1 = 0.416964 loss)
I0428 20:11:31.644176 32083 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:31.764968 32083 solver.cpp:219] Iteration 600 (827.897 iter/s, 0.120788s/100 iters), loss = 0.169271
I0428 20:11:31.764992 32083 solver.cpp:238]     Train net output #0: loss = 0.169271 (* 1 = 0.169271 loss)
I0428 20:11:31.764998 32083 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:31.884220 32083 solver.cpp:219] Iteration 700 (838.805 iter/s, 0.119217s/100 iters), loss = 0.215401
I0428 20:11:31.884244 32083 solver.cpp:238]     Train net output #0: loss = 0.215401 (* 1 = 0.215401 loss)
I0428 20:11:31.884266 32083 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:32.004722 32083 solver.cpp:219] Iteration 800 (830.1 iter/s, 0.120467s/100 iters), loss = 0.482824
I0428 20:11:32.004779 32083 solver.cpp:238]     Train net output #0: loss = 0.482824 (* 1 = 0.482824 loss)
I0428 20:11:32.004786 32083 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:32.132660 32083 solver.cpp:219] Iteration 900 (781.944 iter/s, 0.127886s/100 iters), loss = 0.200301
I0428 20:11:32.132701 32083 solver.cpp:238]     Train net output #0: loss = 0.200301 (* 1 = 0.200301 loss)
I0428 20:11:32.132709 32083 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:32.173722 32089 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:32.253329 32083 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:32.255036 32083 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:32.256026 32083 solver.cpp:311] Iteration 1000, loss = 0.261602
I0428 20:11:32.256043 32083 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:32.331169 32090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:32.331831 32083 solver.cpp:398]     Test net output #0: accuracy = 0.8807
I0428 20:11:32.331851 32083 solver.cpp:398]     Test net output #1: loss = 0.303265 (* 1 = 0.303265 loss)
I0428 20:11:32.331862 32083 solver.cpp:316] Optimization Done.
I0428 20:11:32.331866 32083 caffe.cpp:259] Optimization Done.
