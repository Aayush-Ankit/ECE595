I0428 20:34:38.038188  4501 caffe.cpp:218] Using GPUs 0
I0428 20:34:38.075076  4501 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:38.530792  4501 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1608.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:38.530954  4501 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1608.prototxt
I0428 20:34:38.531241  4501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:38.531255  4501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:38.531322  4501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:38.531375  4501 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:38.531455  4501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:38.531474  4501 net.cpp:86] Creating Layer mnist
I0428 20:34:38.531481  4501 net.cpp:382] mnist -> data
I0428 20:34:38.531499  4501 net.cpp:382] mnist -> label
I0428 20:34:38.532482  4501 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:38.534746  4501 net.cpp:124] Setting up mnist
I0428 20:34:38.534777  4501 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:38.534783  4501 net.cpp:131] Top shape: 64 (64)
I0428 20:34:38.534786  4501 net.cpp:139] Memory required for data: 200960
I0428 20:34:38.534808  4501 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:38.534821  4501 net.cpp:86] Creating Layer conv0
I0428 20:34:38.534826  4501 net.cpp:408] conv0 <- data
I0428 20:34:38.534837  4501 net.cpp:382] conv0 -> conv0
I0428 20:34:38.766955  4501 net.cpp:124] Setting up conv0
I0428 20:34:38.766981  4501 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:38.766985  4501 net.cpp:139] Memory required for data: 14946560
I0428 20:34:38.767019  4501 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:38.767031  4501 net.cpp:86] Creating Layer pool0
I0428 20:34:38.767035  4501 net.cpp:408] pool0 <- conv0
I0428 20:34:38.767055  4501 net.cpp:382] pool0 -> pool0
I0428 20:34:38.767101  4501 net.cpp:124] Setting up pool0
I0428 20:34:38.767107  4501 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:38.767109  4501 net.cpp:139] Memory required for data: 18632960
I0428 20:34:38.767112  4501 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:38.767122  4501 net.cpp:86] Creating Layer conv1
I0428 20:34:38.767125  4501 net.cpp:408] conv1 <- pool0
I0428 20:34:38.767130  4501 net.cpp:382] conv1 -> conv1
I0428 20:34:38.770535  4501 net.cpp:124] Setting up conv1
I0428 20:34:38.770548  4501 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:38.770568  4501 net.cpp:139] Memory required for data: 19452160
I0428 20:34:38.770576  4501 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:38.770582  4501 net.cpp:86] Creating Layer pool1
I0428 20:34:38.770586  4501 net.cpp:408] pool1 <- conv1
I0428 20:34:38.770606  4501 net.cpp:382] pool1 -> pool1
I0428 20:34:38.770658  4501 net.cpp:124] Setting up pool1
I0428 20:34:38.770663  4501 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:38.770665  4501 net.cpp:139] Memory required for data: 19656960
I0428 20:34:38.770668  4501 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:38.770675  4501 net.cpp:86] Creating Layer ip1
I0428 20:34:38.770678  4501 net.cpp:408] ip1 <- pool1
I0428 20:34:38.770684  4501 net.cpp:382] ip1 -> ip1
I0428 20:34:38.771049  4501 net.cpp:124] Setting up ip1
I0428 20:34:38.771056  4501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:38.771075  4501 net.cpp:139] Memory required for data: 19669760
I0428 20:34:38.771081  4501 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:38.771087  4501 net.cpp:86] Creating Layer relu1
I0428 20:34:38.771090  4501 net.cpp:408] relu1 <- ip1
I0428 20:34:38.771095  4501 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:38.771262  4501 net.cpp:124] Setting up relu1
I0428 20:34:38.771270  4501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:38.771273  4501 net.cpp:139] Memory required for data: 19682560
I0428 20:34:38.771275  4501 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:38.771281  4501 net.cpp:86] Creating Layer ip2
I0428 20:34:38.771284  4501 net.cpp:408] ip2 <- ip1
I0428 20:34:38.771288  4501 net.cpp:382] ip2 -> ip2
I0428 20:34:38.771379  4501 net.cpp:124] Setting up ip2
I0428 20:34:38.771386  4501 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:38.771389  4501 net.cpp:139] Memory required for data: 19685120
I0428 20:34:38.771394  4501 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:38.771399  4501 net.cpp:86] Creating Layer relu2
I0428 20:34:38.771401  4501 net.cpp:408] relu2 <- ip2
I0428 20:34:38.771405  4501 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:38.772163  4501 net.cpp:124] Setting up relu2
I0428 20:34:38.772174  4501 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:38.772193  4501 net.cpp:139] Memory required for data: 19687680
I0428 20:34:38.772197  4501 layer_factory.hpp:77] Creating layer loss
I0428 20:34:38.772203  4501 net.cpp:86] Creating Layer loss
I0428 20:34:38.772207  4501 net.cpp:408] loss <- ip2
I0428 20:34:38.772212  4501 net.cpp:408] loss <- label
I0428 20:34:38.772217  4501 net.cpp:382] loss -> loss
I0428 20:34:38.772235  4501 layer_factory.hpp:77] Creating layer loss
I0428 20:34:38.772508  4501 net.cpp:124] Setting up loss
I0428 20:34:38.772518  4501 net.cpp:131] Top shape: (1)
I0428 20:34:38.772521  4501 net.cpp:134]     with loss weight 1
I0428 20:34:38.772536  4501 net.cpp:139] Memory required for data: 19687684
I0428 20:34:38.772538  4501 net.cpp:200] loss needs backward computation.
I0428 20:34:38.772541  4501 net.cpp:200] relu2 needs backward computation.
I0428 20:34:38.772544  4501 net.cpp:200] ip2 needs backward computation.
I0428 20:34:38.772547  4501 net.cpp:200] relu1 needs backward computation.
I0428 20:34:38.772550  4501 net.cpp:200] ip1 needs backward computation.
I0428 20:34:38.772562  4501 net.cpp:200] pool1 needs backward computation.
I0428 20:34:38.772565  4501 net.cpp:200] conv1 needs backward computation.
I0428 20:34:38.772568  4501 net.cpp:200] pool0 needs backward computation.
I0428 20:34:38.772572  4501 net.cpp:200] conv0 needs backward computation.
I0428 20:34:38.772575  4501 net.cpp:202] mnist does not need backward computation.
I0428 20:34:38.772578  4501 net.cpp:244] This network produces output loss
I0428 20:34:38.772585  4501 net.cpp:257] Network initialization done.
I0428 20:34:38.772920  4501 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1608.prototxt
I0428 20:34:38.772979  4501 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:38.773066  4501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:38.773145  4501 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:38.773219  4501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:38.773234  4501 net.cpp:86] Creating Layer mnist
I0428 20:34:38.773239  4501 net.cpp:382] mnist -> data
I0428 20:34:38.773247  4501 net.cpp:382] mnist -> label
I0428 20:34:38.773349  4501 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:38.774497  4501 net.cpp:124] Setting up mnist
I0428 20:34:38.774524  4501 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:38.774529  4501 net.cpp:131] Top shape: 100 (100)
I0428 20:34:38.774533  4501 net.cpp:139] Memory required for data: 314000
I0428 20:34:38.774536  4501 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:38.774585  4501 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:38.774590  4501 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:38.774595  4501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:38.774601  4501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:38.774657  4501 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:38.774662  4501 net.cpp:131] Top shape: 100 (100)
I0428 20:34:38.774667  4501 net.cpp:131] Top shape: 100 (100)
I0428 20:34:38.774668  4501 net.cpp:139] Memory required for data: 314800
I0428 20:34:38.774672  4501 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:38.774695  4501 net.cpp:86] Creating Layer conv0
I0428 20:34:38.774698  4501 net.cpp:408] conv0 <- data
I0428 20:34:38.774703  4501 net.cpp:382] conv0 -> conv0
I0428 20:34:38.776541  4501 net.cpp:124] Setting up conv0
I0428 20:34:38.776554  4501 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:38.776558  4501 net.cpp:139] Memory required for data: 23354800
I0428 20:34:38.776567  4501 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:38.776589  4501 net.cpp:86] Creating Layer pool0
I0428 20:34:38.776592  4501 net.cpp:408] pool0 <- conv0
I0428 20:34:38.776597  4501 net.cpp:382] pool0 -> pool0
I0428 20:34:38.776633  4501 net.cpp:124] Setting up pool0
I0428 20:34:38.776638  4501 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:38.776640  4501 net.cpp:139] Memory required for data: 29114800
I0428 20:34:38.776643  4501 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:38.776650  4501 net.cpp:86] Creating Layer conv1
I0428 20:34:38.776654  4501 net.cpp:408] conv1 <- pool0
I0428 20:34:38.776659  4501 net.cpp:382] conv1 -> conv1
I0428 20:34:38.779808  4501 net.cpp:124] Setting up conv1
I0428 20:34:38.779820  4501 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:38.779824  4501 net.cpp:139] Memory required for data: 30394800
I0428 20:34:38.779847  4501 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:38.779855  4501 net.cpp:86] Creating Layer pool1
I0428 20:34:38.779872  4501 net.cpp:408] pool1 <- conv1
I0428 20:34:38.779878  4501 net.cpp:382] pool1 -> pool1
I0428 20:34:38.779914  4501 net.cpp:124] Setting up pool1
I0428 20:34:38.779919  4501 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:38.779922  4501 net.cpp:139] Memory required for data: 30714800
I0428 20:34:38.779932  4501 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:38.779938  4501 net.cpp:86] Creating Layer ip1
I0428 20:34:38.779942  4501 net.cpp:408] ip1 <- pool1
I0428 20:34:38.779947  4501 net.cpp:382] ip1 -> ip1
I0428 20:34:38.780267  4501 net.cpp:124] Setting up ip1
I0428 20:34:38.780275  4501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:38.780278  4501 net.cpp:139] Memory required for data: 30734800
I0428 20:34:38.780284  4501 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:38.780308  4501 net.cpp:86] Creating Layer relu1
I0428 20:34:38.780310  4501 net.cpp:408] relu1 <- ip1
I0428 20:34:38.780315  4501 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:38.780473  4501 net.cpp:124] Setting up relu1
I0428 20:34:38.780481  4501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:38.780484  4501 net.cpp:139] Memory required for data: 30754800
I0428 20:34:38.780488  4501 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:38.780505  4501 net.cpp:86] Creating Layer ip2
I0428 20:34:38.780508  4501 net.cpp:408] ip2 <- ip1
I0428 20:34:38.780514  4501 net.cpp:382] ip2 -> ip2
I0428 20:34:38.780613  4501 net.cpp:124] Setting up ip2
I0428 20:34:38.780637  4501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:38.780640  4501 net.cpp:139] Memory required for data: 30758800
I0428 20:34:38.780647  4501 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:38.780650  4501 net.cpp:86] Creating Layer relu2
I0428 20:34:38.780653  4501 net.cpp:408] relu2 <- ip2
I0428 20:34:38.780659  4501 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:38.780839  4501 net.cpp:124] Setting up relu2
I0428 20:34:38.780849  4501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:38.780853  4501 net.cpp:139] Memory required for data: 30762800
I0428 20:34:38.780855  4501 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:34:38.780860  4501 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:34:38.780864  4501 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:34:38.780869  4501 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:34:38.780907  4501 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:34:38.780959  4501 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:34:38.780966  4501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:38.780969  4501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:38.780972  4501 net.cpp:139] Memory required for data: 30770800
I0428 20:34:38.780975  4501 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:38.780980  4501 net.cpp:86] Creating Layer accuracy
I0428 20:34:38.780989  4501 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:34:38.780993  4501 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:38.780997  4501 net.cpp:382] accuracy -> accuracy
I0428 20:34:38.781004  4501 net.cpp:124] Setting up accuracy
I0428 20:34:38.781008  4501 net.cpp:131] Top shape: (1)
I0428 20:34:38.781011  4501 net.cpp:139] Memory required for data: 30770804
I0428 20:34:38.781013  4501 layer_factory.hpp:77] Creating layer loss
I0428 20:34:38.781019  4501 net.cpp:86] Creating Layer loss
I0428 20:34:38.781023  4501 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:34:38.781025  4501 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:38.781029  4501 net.cpp:382] loss -> loss
I0428 20:34:38.781035  4501 layer_factory.hpp:77] Creating layer loss
I0428 20:34:38.781379  4501 net.cpp:124] Setting up loss
I0428 20:34:38.781389  4501 net.cpp:131] Top shape: (1)
I0428 20:34:38.781393  4501 net.cpp:134]     with loss weight 1
I0428 20:34:38.781404  4501 net.cpp:139] Memory required for data: 30770808
I0428 20:34:38.781407  4501 net.cpp:200] loss needs backward computation.
I0428 20:34:38.781416  4501 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:38.781419  4501 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:34:38.781422  4501 net.cpp:200] relu2 needs backward computation.
I0428 20:34:38.781424  4501 net.cpp:200] ip2 needs backward computation.
I0428 20:34:38.781442  4501 net.cpp:200] relu1 needs backward computation.
I0428 20:34:38.781445  4501 net.cpp:200] ip1 needs backward computation.
I0428 20:34:38.781448  4501 net.cpp:200] pool1 needs backward computation.
I0428 20:34:38.781451  4501 net.cpp:200] conv1 needs backward computation.
I0428 20:34:38.781455  4501 net.cpp:200] pool0 needs backward computation.
I0428 20:34:38.781463  4501 net.cpp:200] conv0 needs backward computation.
I0428 20:34:38.781467  4501 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:38.781471  4501 net.cpp:202] mnist does not need backward computation.
I0428 20:34:38.781472  4501 net.cpp:244] This network produces output accuracy
I0428 20:34:38.781476  4501 net.cpp:244] This network produces output loss
I0428 20:34:38.781487  4501 net.cpp:257] Network initialization done.
I0428 20:34:38.781523  4501 solver.cpp:56] Solver scaffolding done.
I0428 20:34:38.781816  4501 caffe.cpp:248] Starting Optimization
I0428 20:34:38.781822  4501 solver.cpp:273] Solving LeNet
I0428 20:34:38.781826  4501 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:38.782614  4501 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:38.832120  4501 blocking_queue.cpp:49] Waiting for data
I0428 20:34:38.895503  4510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:38.897130  4501 solver.cpp:398]     Test net output #0: accuracy = 0.0804
I0428 20:34:38.897163  4501 solver.cpp:398]     Test net output #1: loss = 2.32523 (* 1 = 2.32523 loss)
I0428 20:34:38.901909  4501 solver.cpp:219] Iteration 0 (-4.24696e-31 iter/s, 0.120044s/100 iters), loss = 2.28556
I0428 20:34:38.901948  4501 solver.cpp:238]     Train net output #0: loss = 2.28556 (* 1 = 2.28556 loss)
I0428 20:34:38.901960  4501 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:39.138247  4501 solver.cpp:219] Iteration 100 (423.229 iter/s, 0.236279s/100 iters), loss = 0.243795
I0428 20:34:39.138276  4501 solver.cpp:238]     Train net output #0: loss = 0.243795 (* 1 = 0.243795 loss)
I0428 20:34:39.138283  4501 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:39.362792  4501 solver.cpp:219] Iteration 200 (445.433 iter/s, 0.224501s/100 iters), loss = 0.102617
I0428 20:34:39.362835  4501 solver.cpp:238]     Train net output #0: loss = 0.102617 (* 1 = 0.102617 loss)
I0428 20:34:39.362843  4501 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:39.588358  4501 solver.cpp:219] Iteration 300 (443.449 iter/s, 0.225505s/100 iters), loss = 0.138399
I0428 20:34:39.588390  4501 solver.cpp:238]     Train net output #0: loss = 0.138399 (* 1 = 0.138399 loss)
I0428 20:34:39.588397  4501 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:39.815474  4501 solver.cpp:219] Iteration 400 (440.399 iter/s, 0.227067s/100 iters), loss = 0.0455417
I0428 20:34:39.815516  4501 solver.cpp:238]     Train net output #0: loss = 0.0455417 (* 1 = 0.0455417 loss)
I0428 20:34:39.815523  4501 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:40.040153  4501 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:40.148941  4510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:40.150599  4501 solver.cpp:398]     Test net output #0: accuracy = 0.9728
I0428 20:34:40.150638  4501 solver.cpp:398]     Test net output #1: loss = 0.0921683 (* 1 = 0.0921683 loss)
I0428 20:34:40.152878  4501 solver.cpp:219] Iteration 500 (296.423 iter/s, 0.337356s/100 iters), loss = 0.173288
I0428 20:34:40.152915  4501 solver.cpp:238]     Train net output #0: loss = 0.173288 (* 1 = 0.173288 loss)
I0428 20:34:40.152921  4501 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:40.386247  4501 solver.cpp:219] Iteration 600 (428.573 iter/s, 0.233333s/100 iters), loss = 0.0822957
I0428 20:34:40.386291  4501 solver.cpp:238]     Train net output #0: loss = 0.0822958 (* 1 = 0.0822958 loss)
I0428 20:34:40.386296  4501 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:40.616739  4501 solver.cpp:219] Iteration 700 (433.968 iter/s, 0.230432s/100 iters), loss = 0.111548
I0428 20:34:40.616780  4501 solver.cpp:238]     Train net output #0: loss = 0.111548 (* 1 = 0.111548 loss)
I0428 20:34:40.616786  4501 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:40.850132  4501 solver.cpp:219] Iteration 800 (428.535 iter/s, 0.233353s/100 iters), loss = 0.240648
I0428 20:34:40.850174  4501 solver.cpp:238]     Train net output #0: loss = 0.240648 (* 1 = 0.240648 loss)
I0428 20:34:40.850181  4501 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:41.093086  4501 solver.cpp:219] Iteration 900 (411.702 iter/s, 0.242894s/100 iters), loss = 0.154557
I0428 20:34:41.093127  4501 solver.cpp:238]     Train net output #0: loss = 0.154557 (* 1 = 0.154557 loss)
I0428 20:34:41.093132  4501 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:41.174998  4507 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:41.330992  4501 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:41.335415  4501 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:41.337555  4501 solver.cpp:311] Iteration 1000, loss = 0.0701038
I0428 20:34:41.337571  4501 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:41.442204  4510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:41.444900  4501 solver.cpp:398]     Test net output #0: accuracy = 0.9796
I0428 20:34:41.444936  4501 solver.cpp:398]     Test net output #1: loss = 0.0612401 (* 1 = 0.0612401 loss)
I0428 20:34:41.444942  4501 solver.cpp:316] Optimization Done.
I0428 20:34:41.444947  4501 caffe.cpp:259] Optimization Done.
