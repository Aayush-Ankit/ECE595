I0428 19:49:17.188972 26723 caffe.cpp:218] Using GPUs 0
I0428 19:49:17.228544 26723 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:17.681018 26723 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test570.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:17.681154 26723 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test570.prototxt
I0428 19:49:17.681535 26723 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:17.681550 26723 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:17.681630 26723 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:17.681707 26723 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:17.681787 26723 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:17.681804 26723 net.cpp:86] Creating Layer mnist
I0428 19:49:17.681812 26723 net.cpp:382] mnist -> data
I0428 19:49:17.681829 26723 net.cpp:382] mnist -> label
I0428 19:49:17.682706 26723 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:17.684964 26723 net.cpp:124] Setting up mnist
I0428 19:49:17.684998 26723 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:17.685003 26723 net.cpp:131] Top shape: 64 (64)
I0428 19:49:17.685021 26723 net.cpp:139] Memory required for data: 200960
I0428 19:49:17.685042 26723 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:17.685057 26723 net.cpp:86] Creating Layer conv0
I0428 19:49:17.685089 26723 net.cpp:408] conv0 <- data
I0428 19:49:17.685101 26723 net.cpp:382] conv0 -> conv0
I0428 19:49:17.915132 26723 net.cpp:124] Setting up conv0
I0428 19:49:17.915158 26723 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:17.915163 26723 net.cpp:139] Memory required for data: 938240
I0428 19:49:17.915176 26723 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:17.915189 26723 net.cpp:86] Creating Layer pool0
I0428 19:49:17.915191 26723 net.cpp:408] pool0 <- conv0
I0428 19:49:17.915212 26723 net.cpp:382] pool0 -> pool0
I0428 19:49:17.915256 26723 net.cpp:124] Setting up pool0
I0428 19:49:17.915263 26723 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:17.915266 26723 net.cpp:139] Memory required for data: 1122560
I0428 19:49:17.915268 26723 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:17.915278 26723 net.cpp:86] Creating Layer conv1
I0428 19:49:17.915282 26723 net.cpp:408] conv1 <- pool0
I0428 19:49:17.915287 26723 net.cpp:382] conv1 -> conv1
I0428 19:49:17.917245 26723 net.cpp:124] Setting up conv1
I0428 19:49:17.917260 26723 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:17.917280 26723 net.cpp:139] Memory required for data: 1204480
I0428 19:49:17.917290 26723 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:17.917299 26723 net.cpp:86] Creating Layer pool1
I0428 19:49:17.917302 26723 net.cpp:408] pool1 <- conv1
I0428 19:49:17.917307 26723 net.cpp:382] pool1 -> pool1
I0428 19:49:17.917346 26723 net.cpp:124] Setting up pool1
I0428 19:49:17.917352 26723 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:17.917356 26723 net.cpp:139] Memory required for data: 1224960
I0428 19:49:17.917358 26723 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:17.917366 26723 net.cpp:86] Creating Layer ip1
I0428 19:49:17.917368 26723 net.cpp:408] ip1 <- pool1
I0428 19:49:17.917373 26723 net.cpp:382] ip1 -> ip1
I0428 19:49:17.918393 26723 net.cpp:124] Setting up ip1
I0428 19:49:17.918406 26723 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:17.918424 26723 net.cpp:139] Memory required for data: 1231360
I0428 19:49:17.918448 26723 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:17.918454 26723 net.cpp:86] Creating Layer relu1
I0428 19:49:17.918458 26723 net.cpp:408] relu1 <- ip1
I0428 19:49:17.918463 26723 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:17.918655 26723 net.cpp:124] Setting up relu1
I0428 19:49:17.918664 26723 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:17.918668 26723 net.cpp:139] Memory required for data: 1237760
I0428 19:49:17.918671 26723 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:17.918678 26723 net.cpp:86] Creating Layer ip2
I0428 19:49:17.918682 26723 net.cpp:408] ip2 <- ip1
I0428 19:49:17.918687 26723 net.cpp:382] ip2 -> ip2
I0428 19:49:17.918826 26723 net.cpp:124] Setting up ip2
I0428 19:49:17.918833 26723 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:17.918835 26723 net.cpp:139] Memory required for data: 1244160
I0428 19:49:17.918841 26723 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:17.918846 26723 net.cpp:86] Creating Layer relu2
I0428 19:49:17.918849 26723 net.cpp:408] relu2 <- ip2
I0428 19:49:17.918853 26723 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:17.919626 26723 net.cpp:124] Setting up relu2
I0428 19:49:17.919638 26723 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:17.919659 26723 net.cpp:139] Memory required for data: 1250560
I0428 19:49:17.919662 26723 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:17.919684 26723 net.cpp:86] Creating Layer ip3
I0428 19:49:17.919688 26723 net.cpp:408] ip3 <- ip2
I0428 19:49:17.919693 26723 net.cpp:382] ip3 -> ip3
I0428 19:49:17.919791 26723 net.cpp:124] Setting up ip3
I0428 19:49:17.919798 26723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:17.919801 26723 net.cpp:139] Memory required for data: 1253120
I0428 19:49:17.919811 26723 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:17.919818 26723 net.cpp:86] Creating Layer relu3
I0428 19:49:17.919821 26723 net.cpp:408] relu3 <- ip3
I0428 19:49:17.919826 26723 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:17.920027 26723 net.cpp:124] Setting up relu3
I0428 19:49:17.920037 26723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:17.920039 26723 net.cpp:139] Memory required for data: 1255680
I0428 19:49:17.920042 26723 layer_factory.hpp:77] Creating layer loss
I0428 19:49:17.920048 26723 net.cpp:86] Creating Layer loss
I0428 19:49:17.920052 26723 net.cpp:408] loss <- ip3
I0428 19:49:17.920055 26723 net.cpp:408] loss <- label
I0428 19:49:17.920060 26723 net.cpp:382] loss -> loss
I0428 19:49:17.920074 26723 layer_factory.hpp:77] Creating layer loss
I0428 19:49:17.920330 26723 net.cpp:124] Setting up loss
I0428 19:49:17.920337 26723 net.cpp:131] Top shape: (1)
I0428 19:49:17.920356 26723 net.cpp:134]     with loss weight 1
I0428 19:49:17.920383 26723 net.cpp:139] Memory required for data: 1255684
I0428 19:49:17.920387 26723 net.cpp:200] loss needs backward computation.
I0428 19:49:17.920406 26723 net.cpp:200] relu3 needs backward computation.
I0428 19:49:17.920409 26723 net.cpp:200] ip3 needs backward computation.
I0428 19:49:17.920413 26723 net.cpp:200] relu2 needs backward computation.
I0428 19:49:17.920416 26723 net.cpp:200] ip2 needs backward computation.
I0428 19:49:17.920418 26723 net.cpp:200] relu1 needs backward computation.
I0428 19:49:17.920421 26723 net.cpp:200] ip1 needs backward computation.
I0428 19:49:17.920424 26723 net.cpp:200] pool1 needs backward computation.
I0428 19:49:17.920428 26723 net.cpp:200] conv1 needs backward computation.
I0428 19:49:17.920431 26723 net.cpp:200] pool0 needs backward computation.
I0428 19:49:17.920434 26723 net.cpp:200] conv0 needs backward computation.
I0428 19:49:17.920438 26723 net.cpp:202] mnist does not need backward computation.
I0428 19:49:17.920440 26723 net.cpp:244] This network produces output loss
I0428 19:49:17.920449 26723 net.cpp:257] Network initialization done.
I0428 19:49:17.920804 26723 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test570.prototxt
I0428 19:49:17.920868 26723 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:17.920963 26723 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:17.921058 26723 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:17.921099 26723 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:17.921113 26723 net.cpp:86] Creating Layer mnist
I0428 19:49:17.921118 26723 net.cpp:382] mnist -> data
I0428 19:49:17.921125 26723 net.cpp:382] mnist -> label
I0428 19:49:17.921237 26723 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:17.923220 26723 net.cpp:124] Setting up mnist
I0428 19:49:17.923249 26723 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:17.923259 26723 net.cpp:131] Top shape: 100 (100)
I0428 19:49:17.923262 26723 net.cpp:139] Memory required for data: 314000
I0428 19:49:17.923266 26723 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:17.923280 26723 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:17.923285 26723 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:17.923288 26723 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:17.923295 26723 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:17.923403 26723 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:17.923411 26723 net.cpp:131] Top shape: 100 (100)
I0428 19:49:17.923415 26723 net.cpp:131] Top shape: 100 (100)
I0428 19:49:17.923418 26723 net.cpp:139] Memory required for data: 314800
I0428 19:49:17.923421 26723 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:17.923431 26723 net.cpp:86] Creating Layer conv0
I0428 19:49:17.923434 26723 net.cpp:408] conv0 <- data
I0428 19:49:17.923440 26723 net.cpp:382] conv0 -> conv0
I0428 19:49:17.925035 26723 net.cpp:124] Setting up conv0
I0428 19:49:17.925051 26723 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:17.925055 26723 net.cpp:139] Memory required for data: 1466800
I0428 19:49:17.925065 26723 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:17.925071 26723 net.cpp:86] Creating Layer pool0
I0428 19:49:17.925076 26723 net.cpp:408] pool0 <- conv0
I0428 19:49:17.925079 26723 net.cpp:382] pool0 -> pool0
I0428 19:49:17.925128 26723 net.cpp:124] Setting up pool0
I0428 19:49:17.925133 26723 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:17.925137 26723 net.cpp:139] Memory required for data: 1754800
I0428 19:49:17.925139 26723 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:17.925148 26723 net.cpp:86] Creating Layer conv1
I0428 19:49:17.925150 26723 net.cpp:408] conv1 <- pool0
I0428 19:49:17.925156 26723 net.cpp:382] conv1 -> conv1
I0428 19:49:17.927250 26723 net.cpp:124] Setting up conv1
I0428 19:49:17.927265 26723 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:17.927269 26723 net.cpp:139] Memory required for data: 1882800
I0428 19:49:17.927279 26723 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:17.927300 26723 net.cpp:86] Creating Layer pool1
I0428 19:49:17.927304 26723 net.cpp:408] pool1 <- conv1
I0428 19:49:17.927309 26723 net.cpp:382] pool1 -> pool1
I0428 19:49:17.927348 26723 net.cpp:124] Setting up pool1
I0428 19:49:17.927353 26723 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:17.927356 26723 net.cpp:139] Memory required for data: 1914800
I0428 19:49:17.927359 26723 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:17.927366 26723 net.cpp:86] Creating Layer ip1
I0428 19:49:17.927369 26723 net.cpp:408] ip1 <- pool1
I0428 19:49:17.927381 26723 net.cpp:382] ip1 -> ip1
I0428 19:49:17.927507 26723 net.cpp:124] Setting up ip1
I0428 19:49:17.927516 26723 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:17.927544 26723 net.cpp:139] Memory required for data: 1924800
I0428 19:49:17.927567 26723 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:17.927572 26723 net.cpp:86] Creating Layer relu1
I0428 19:49:17.927575 26723 net.cpp:408] relu1 <- ip1
I0428 19:49:17.927587 26723 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:17.927877 26723 net.cpp:124] Setting up relu1
I0428 19:49:17.927886 26723 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:17.927891 26723 net.cpp:139] Memory required for data: 1934800
I0428 19:49:17.927893 26723 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:17.927899 26723 net.cpp:86] Creating Layer ip2
I0428 19:49:17.927909 26723 net.cpp:408] ip2 <- ip1
I0428 19:49:17.927916 26723 net.cpp:382] ip2 -> ip2
I0428 19:49:17.928033 26723 net.cpp:124] Setting up ip2
I0428 19:49:17.928041 26723 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:17.928045 26723 net.cpp:139] Memory required for data: 1944800
I0428 19:49:17.928050 26723 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:17.928053 26723 net.cpp:86] Creating Layer relu2
I0428 19:49:17.928056 26723 net.cpp:408] relu2 <- ip2
I0428 19:49:17.928066 26723 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:17.928248 26723 net.cpp:124] Setting up relu2
I0428 19:49:17.928258 26723 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:17.928289 26723 net.cpp:139] Memory required for data: 1954800
I0428 19:49:17.928298 26723 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:17.928303 26723 net.cpp:86] Creating Layer ip3
I0428 19:49:17.928321 26723 net.cpp:408] ip3 <- ip2
I0428 19:49:17.928328 26723 net.cpp:382] ip3 -> ip3
I0428 19:49:17.928444 26723 net.cpp:124] Setting up ip3
I0428 19:49:17.928452 26723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:17.928454 26723 net.cpp:139] Memory required for data: 1958800
I0428 19:49:17.928463 26723 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:17.928467 26723 net.cpp:86] Creating Layer relu3
I0428 19:49:17.928472 26723 net.cpp:408] relu3 <- ip3
I0428 19:49:17.928477 26723 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:17.929349 26723 net.cpp:124] Setting up relu3
I0428 19:49:17.929361 26723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:17.929365 26723 net.cpp:139] Memory required for data: 1962800
I0428 19:49:17.929368 26723 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:17.929374 26723 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:17.929392 26723 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:17.929396 26723 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:17.929402 26723 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:17.929445 26723 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:17.929450 26723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:17.929453 26723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:17.929455 26723 net.cpp:139] Memory required for data: 1970800
I0428 19:49:17.929458 26723 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:17.929462 26723 net.cpp:86] Creating Layer accuracy
I0428 19:49:17.929466 26723 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:17.929469 26723 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:17.929474 26723 net.cpp:382] accuracy -> accuracy
I0428 19:49:17.929481 26723 net.cpp:124] Setting up accuracy
I0428 19:49:17.929484 26723 net.cpp:131] Top shape: (1)
I0428 19:49:17.929486 26723 net.cpp:139] Memory required for data: 1970804
I0428 19:49:17.929489 26723 layer_factory.hpp:77] Creating layer loss
I0428 19:49:17.929493 26723 net.cpp:86] Creating Layer loss
I0428 19:49:17.929497 26723 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:17.929499 26723 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:17.929503 26723 net.cpp:382] loss -> loss
I0428 19:49:17.929509 26723 layer_factory.hpp:77] Creating layer loss
I0428 19:49:17.929764 26723 net.cpp:124] Setting up loss
I0428 19:49:17.929772 26723 net.cpp:131] Top shape: (1)
I0428 19:49:17.929775 26723 net.cpp:134]     with loss weight 1
I0428 19:49:17.929780 26723 net.cpp:139] Memory required for data: 1970808
I0428 19:49:17.929793 26723 net.cpp:200] loss needs backward computation.
I0428 19:49:17.929796 26723 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:17.929800 26723 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:17.929802 26723 net.cpp:200] relu3 needs backward computation.
I0428 19:49:17.929805 26723 net.cpp:200] ip3 needs backward computation.
I0428 19:49:17.929811 26723 net.cpp:200] relu2 needs backward computation.
I0428 19:49:17.929814 26723 net.cpp:200] ip2 needs backward computation.
I0428 19:49:17.929817 26723 net.cpp:200] relu1 needs backward computation.
I0428 19:49:17.929819 26723 net.cpp:200] ip1 needs backward computation.
I0428 19:49:17.929822 26723 net.cpp:200] pool1 needs backward computation.
I0428 19:49:17.929826 26723 net.cpp:200] conv1 needs backward computation.
I0428 19:49:17.929828 26723 net.cpp:200] pool0 needs backward computation.
I0428 19:49:17.929831 26723 net.cpp:200] conv0 needs backward computation.
I0428 19:49:17.929834 26723 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:17.929838 26723 net.cpp:202] mnist does not need backward computation.
I0428 19:49:17.929841 26723 net.cpp:244] This network produces output accuracy
I0428 19:49:17.929843 26723 net.cpp:244] This network produces output loss
I0428 19:49:17.929854 26723 net.cpp:257] Network initialization done.
I0428 19:49:17.929893 26723 solver.cpp:56] Solver scaffolding done.
I0428 19:49:17.930210 26723 caffe.cpp:248] Starting Optimization
I0428 19:49:17.930217 26723 solver.cpp:273] Solving LeNet
I0428 19:49:17.930219 26723 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:17.931067 26723 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:17.934721 26723 blocking_queue.cpp:49] Waiting for data
I0428 19:49:18.005790 26730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:18.006281 26723 solver.cpp:398]     Test net output #0: accuracy = 0.1186
I0428 19:49:18.006301 26723 solver.cpp:398]     Test net output #1: loss = 2.29271 (* 1 = 2.29271 loss)
I0428 19:49:18.008095 26723 solver.cpp:219] Iteration 0 (-1.04397e-42 iter/s, 0.0778496s/100 iters), loss = 2.30725
I0428 19:49:18.008157 26723 solver.cpp:238]     Train net output #0: loss = 2.30725 (* 1 = 2.30725 loss)
I0428 19:49:18.008170 26723 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:18.079533 26723 solver.cpp:219] Iteration 100 (1400.92 iter/s, 0.0713817s/100 iters), loss = 1.37547
I0428 19:49:18.079576 26723 solver.cpp:238]     Train net output #0: loss = 1.37547 (* 1 = 1.37547 loss)
I0428 19:49:18.079596 26723 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:18.152556 26723 solver.cpp:219] Iteration 200 (1370.4 iter/s, 0.0729713s/100 iters), loss = 0.925731
I0428 19:49:18.152611 26723 solver.cpp:238]     Train net output #0: loss = 0.925731 (* 1 = 0.925731 loss)
I0428 19:49:18.152617 26723 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:18.224015 26723 solver.cpp:219] Iteration 300 (1400.33 iter/s, 0.0714117s/100 iters), loss = 0.813281
I0428 19:49:18.224056 26723 solver.cpp:238]     Train net output #0: loss = 0.813281 (* 1 = 0.813281 loss)
I0428 19:49:18.224063 26723 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:18.299265 26723 solver.cpp:219] Iteration 400 (1329.49 iter/s, 0.0752169s/100 iters), loss = 0.867523
I0428 19:49:18.299304 26723 solver.cpp:238]     Train net output #0: loss = 0.867523 (* 1 = 0.867523 loss)
I0428 19:49:18.299310 26723 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:18.370829 26723 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:18.446748 26730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:18.447268 26723 solver.cpp:398]     Test net output #0: accuracy = 0.8072
I0428 19:49:18.447290 26723 solver.cpp:398]     Test net output #1: loss = 0.714414 (* 1 = 0.714414 loss)
I0428 19:49:18.448050 26723 solver.cpp:219] Iteration 500 (672.277 iter/s, 0.148748s/100 iters), loss = 0.674527
I0428 19:49:18.448074 26723 solver.cpp:238]     Train net output #0: loss = 0.674527 (* 1 = 0.674527 loss)
I0428 19:49:18.448096 26723 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:18.522987 26723 solver.cpp:219] Iteration 600 (1335.03 iter/s, 0.0749046s/100 iters), loss = 0.580474
I0428 19:49:18.523011 26723 solver.cpp:238]     Train net output #0: loss = 0.580474 (* 1 = 0.580474 loss)
I0428 19:49:18.523017 26723 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:18.594655 26723 solver.cpp:219] Iteration 700 (1395.98 iter/s, 0.0716341s/100 iters), loss = 0.821524
I0428 19:49:18.594677 26723 solver.cpp:238]     Train net output #0: loss = 0.821524 (* 1 = 0.821524 loss)
I0428 19:49:18.594683 26723 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:18.664468 26723 solver.cpp:219] Iteration 800 (1433.04 iter/s, 0.0697815s/100 iters), loss = 0.750173
I0428 19:49:18.664505 26723 solver.cpp:238]     Train net output #0: loss = 0.750173 (* 1 = 0.750173 loss)
I0428 19:49:18.664526 26723 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:18.734954 26723 solver.cpp:219] Iteration 900 (1419.32 iter/s, 0.0704563s/100 iters), loss = 0.677753
I0428 19:49:18.734992 26723 solver.cpp:238]     Train net output #0: loss = 0.677753 (* 1 = 0.677753 loss)
I0428 19:49:18.734998 26723 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:18.758507 26729 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:18.803917 26723 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:18.804684 26723 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:18.805178 26723 solver.cpp:311] Iteration 1000, loss = 0.685808
I0428 19:49:18.805192 26723 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:18.877562 26730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:18.878067 26723 solver.cpp:398]     Test net output #0: accuracy = 0.847
I0428 19:49:18.878084 26723 solver.cpp:398]     Test net output #1: loss = 0.585127 (* 1 = 0.585127 loss)
I0428 19:49:18.878089 26723 solver.cpp:316] Optimization Done.
I0428 19:49:18.878093 26723 caffe.cpp:259] Optimization Done.
