I0428 20:07:46.616384 31228 caffe.cpp:218] Using GPUs 0
I0428 20:07:46.645789 31228 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:47.089635 31228 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1065.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:47.089782 31228 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1065.prototxt
I0428 20:07:47.090140 31228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:47.090185 31228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:47.090282 31228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:47.090348 31228 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:47.090430 31228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:47.090448 31228 net.cpp:86] Creating Layer mnist
I0428 20:07:47.090456 31228 net.cpp:382] mnist -> data
I0428 20:07:47.090473 31228 net.cpp:382] mnist -> label
I0428 20:07:47.091500 31228 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:47.093801 31228 net.cpp:124] Setting up mnist
I0428 20:07:47.093830 31228 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:47.093835 31228 net.cpp:131] Top shape: 64 (64)
I0428 20:07:47.093838 31228 net.cpp:139] Memory required for data: 200960
I0428 20:07:47.093845 31228 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:47.093859 31228 net.cpp:86] Creating Layer conv0
I0428 20:07:47.093893 31228 net.cpp:408] conv0 <- data
I0428 20:07:47.093904 31228 net.cpp:382] conv0 -> conv0
I0428 20:07:47.324270 31228 net.cpp:124] Setting up conv0
I0428 20:07:47.324308 31228 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:47.324312 31228 net.cpp:139] Memory required for data: 3887360
I0428 20:07:47.324327 31228 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:47.324339 31228 net.cpp:86] Creating Layer pool0
I0428 20:07:47.324342 31228 net.cpp:408] pool0 <- conv0
I0428 20:07:47.324347 31228 net.cpp:382] pool0 -> pool0
I0428 20:07:47.324439 31228 net.cpp:124] Setting up pool0
I0428 20:07:47.324472 31228 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:47.324476 31228 net.cpp:139] Memory required for data: 4808960
I0428 20:07:47.324479 31228 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:47.324491 31228 net.cpp:86] Creating Layer conv1
I0428 20:07:47.324493 31228 net.cpp:408] conv1 <- pool0
I0428 20:07:47.324498 31228 net.cpp:382] conv1 -> conv1
I0428 20:07:47.327366 31228 net.cpp:124] Setting up conv1
I0428 20:07:47.327381 31228 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:47.327385 31228 net.cpp:139] Memory required for data: 4972800
I0428 20:07:47.327394 31228 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:47.327415 31228 net.cpp:86] Creating Layer pool1
I0428 20:07:47.327419 31228 net.cpp:408] pool1 <- conv1
I0428 20:07:47.327440 31228 net.cpp:382] pool1 -> pool1
I0428 20:07:47.327476 31228 net.cpp:124] Setting up pool1
I0428 20:07:47.327488 31228 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:47.327491 31228 net.cpp:139] Memory required for data: 5013760
I0428 20:07:47.327494 31228 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:47.327502 31228 net.cpp:86] Creating Layer ip1
I0428 20:07:47.327504 31228 net.cpp:408] ip1 <- pool1
I0428 20:07:47.327508 31228 net.cpp:382] ip1 -> ip1
I0428 20:07:47.328485 31228 net.cpp:124] Setting up ip1
I0428 20:07:47.328498 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.328516 31228 net.cpp:139] Memory required for data: 5016320
I0428 20:07:47.328524 31228 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:47.328531 31228 net.cpp:86] Creating Layer relu1
I0428 20:07:47.328533 31228 net.cpp:408] relu1 <- ip1
I0428 20:07:47.328538 31228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:47.328711 31228 net.cpp:124] Setting up relu1
I0428 20:07:47.328721 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.328724 31228 net.cpp:139] Memory required for data: 5018880
I0428 20:07:47.328727 31228 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:47.328733 31228 net.cpp:86] Creating Layer ip2
I0428 20:07:47.328737 31228 net.cpp:408] ip2 <- ip1
I0428 20:07:47.328742 31228 net.cpp:382] ip2 -> ip2
I0428 20:07:47.328857 31228 net.cpp:124] Setting up ip2
I0428 20:07:47.328866 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.328868 31228 net.cpp:139] Memory required for data: 5021440
I0428 20:07:47.328889 31228 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:47.328896 31228 net.cpp:86] Creating Layer relu2
I0428 20:07:47.328899 31228 net.cpp:408] relu2 <- ip2
I0428 20:07:47.328903 31228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:47.329766 31228 net.cpp:124] Setting up relu2
I0428 20:07:47.329778 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.329797 31228 net.cpp:139] Memory required for data: 5024000
I0428 20:07:47.329800 31228 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:47.329807 31228 net.cpp:86] Creating Layer ip3
I0428 20:07:47.329812 31228 net.cpp:408] ip3 <- ip2
I0428 20:07:47.329818 31228 net.cpp:382] ip3 -> ip3
I0428 20:07:47.329912 31228 net.cpp:124] Setting up ip3
I0428 20:07:47.329921 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.329924 31228 net.cpp:139] Memory required for data: 5026560
I0428 20:07:47.329932 31228 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:47.329937 31228 net.cpp:86] Creating Layer relu3
I0428 20:07:47.329941 31228 net.cpp:408] relu3 <- ip3
I0428 20:07:47.329943 31228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:47.330116 31228 net.cpp:124] Setting up relu3
I0428 20:07:47.330126 31228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:47.330128 31228 net.cpp:139] Memory required for data: 5029120
I0428 20:07:47.330132 31228 layer_factory.hpp:77] Creating layer loss
I0428 20:07:47.330137 31228 net.cpp:86] Creating Layer loss
I0428 20:07:47.330140 31228 net.cpp:408] loss <- ip3
I0428 20:07:47.330144 31228 net.cpp:408] loss <- label
I0428 20:07:47.330149 31228 net.cpp:382] loss -> loss
I0428 20:07:47.330166 31228 layer_factory.hpp:77] Creating layer loss
I0428 20:07:47.330396 31228 net.cpp:124] Setting up loss
I0428 20:07:47.330405 31228 net.cpp:131] Top shape: (1)
I0428 20:07:47.330410 31228 net.cpp:134]     with loss weight 1
I0428 20:07:47.330438 31228 net.cpp:139] Memory required for data: 5029124
I0428 20:07:47.330442 31228 net.cpp:200] loss needs backward computation.
I0428 20:07:47.330462 31228 net.cpp:200] relu3 needs backward computation.
I0428 20:07:47.330466 31228 net.cpp:200] ip3 needs backward computation.
I0428 20:07:47.330468 31228 net.cpp:200] relu2 needs backward computation.
I0428 20:07:47.330471 31228 net.cpp:200] ip2 needs backward computation.
I0428 20:07:47.330474 31228 net.cpp:200] relu1 needs backward computation.
I0428 20:07:47.330477 31228 net.cpp:200] ip1 needs backward computation.
I0428 20:07:47.330480 31228 net.cpp:200] pool1 needs backward computation.
I0428 20:07:47.330483 31228 net.cpp:200] conv1 needs backward computation.
I0428 20:07:47.330487 31228 net.cpp:200] pool0 needs backward computation.
I0428 20:07:47.330490 31228 net.cpp:200] conv0 needs backward computation.
I0428 20:07:47.330493 31228 net.cpp:202] mnist does not need backward computation.
I0428 20:07:47.330497 31228 net.cpp:244] This network produces output loss
I0428 20:07:47.330507 31228 net.cpp:257] Network initialization done.
I0428 20:07:47.330881 31228 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1065.prototxt
I0428 20:07:47.330921 31228 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:47.331007 31228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:47.331082 31228 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:47.331122 31228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:47.331136 31228 net.cpp:86] Creating Layer mnist
I0428 20:07:47.331141 31228 net.cpp:382] mnist -> data
I0428 20:07:47.331148 31228 net.cpp:382] mnist -> label
I0428 20:07:47.331244 31228 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:47.333325 31228 net.cpp:124] Setting up mnist
I0428 20:07:47.333359 31228 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:47.333364 31228 net.cpp:131] Top shape: 100 (100)
I0428 20:07:47.333366 31228 net.cpp:139] Memory required for data: 314000
I0428 20:07:47.333370 31228 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:47.333389 31228 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:47.333395 31228 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:47.333400 31228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:47.333406 31228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:47.333454 31228 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:47.333461 31228 net.cpp:131] Top shape: 100 (100)
I0428 20:07:47.333464 31228 net.cpp:131] Top shape: 100 (100)
I0428 20:07:47.333467 31228 net.cpp:139] Memory required for data: 314800
I0428 20:07:47.333470 31228 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:47.333479 31228 net.cpp:86] Creating Layer conv0
I0428 20:07:47.333482 31228 net.cpp:408] conv0 <- data
I0428 20:07:47.333488 31228 net.cpp:382] conv0 -> conv0
I0428 20:07:47.335285 31228 net.cpp:124] Setting up conv0
I0428 20:07:47.335299 31228 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:47.335304 31228 net.cpp:139] Memory required for data: 6074800
I0428 20:07:47.335312 31228 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:47.335319 31228 net.cpp:86] Creating Layer pool0
I0428 20:07:47.335322 31228 net.cpp:408] pool0 <- conv0
I0428 20:07:47.335326 31228 net.cpp:382] pool0 -> pool0
I0428 20:07:47.335364 31228 net.cpp:124] Setting up pool0
I0428 20:07:47.335369 31228 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:47.335371 31228 net.cpp:139] Memory required for data: 7514800
I0428 20:07:47.335374 31228 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:47.335383 31228 net.cpp:86] Creating Layer conv1
I0428 20:07:47.335386 31228 net.cpp:408] conv1 <- pool0
I0428 20:07:47.335392 31228 net.cpp:382] conv1 -> conv1
I0428 20:07:47.337626 31228 net.cpp:124] Setting up conv1
I0428 20:07:47.337641 31228 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:47.337646 31228 net.cpp:139] Memory required for data: 7770800
I0428 20:07:47.337656 31228 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:47.337661 31228 net.cpp:86] Creating Layer pool1
I0428 20:07:47.337687 31228 net.cpp:408] pool1 <- conv1
I0428 20:07:47.337694 31228 net.cpp:382] pool1 -> pool1
I0428 20:07:47.337754 31228 net.cpp:124] Setting up pool1
I0428 20:07:47.337771 31228 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:47.337774 31228 net.cpp:139] Memory required for data: 7834800
I0428 20:07:47.337777 31228 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:47.337785 31228 net.cpp:86] Creating Layer ip1
I0428 20:07:47.337795 31228 net.cpp:408] ip1 <- pool1
I0428 20:07:47.337800 31228 net.cpp:382] ip1 -> ip1
I0428 20:07:47.337908 31228 net.cpp:124] Setting up ip1
I0428 20:07:47.337918 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.337931 31228 net.cpp:139] Memory required for data: 7838800
I0428 20:07:47.337939 31228 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:47.337944 31228 net.cpp:86] Creating Layer relu1
I0428 20:07:47.337947 31228 net.cpp:408] relu1 <- ip1
I0428 20:07:47.337965 31228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:47.338220 31228 net.cpp:124] Setting up relu1
I0428 20:07:47.338230 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.338233 31228 net.cpp:139] Memory required for data: 7842800
I0428 20:07:47.338237 31228 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:47.338243 31228 net.cpp:86] Creating Layer ip2
I0428 20:07:47.338246 31228 net.cpp:408] ip2 <- ip1
I0428 20:07:47.338253 31228 net.cpp:382] ip2 -> ip2
I0428 20:07:47.338400 31228 net.cpp:124] Setting up ip2
I0428 20:07:47.338408 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.338412 31228 net.cpp:139] Memory required for data: 7846800
I0428 20:07:47.338433 31228 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:47.338438 31228 net.cpp:86] Creating Layer relu2
I0428 20:07:47.338441 31228 net.cpp:408] relu2 <- ip2
I0428 20:07:47.338448 31228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:47.338599 31228 net.cpp:124] Setting up relu2
I0428 20:07:47.338608 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.338618 31228 net.cpp:139] Memory required for data: 7850800
I0428 20:07:47.338620 31228 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:47.338625 31228 net.cpp:86] Creating Layer ip3
I0428 20:07:47.338630 31228 net.cpp:408] ip3 <- ip2
I0428 20:07:47.338634 31228 net.cpp:382] ip3 -> ip3
I0428 20:07:47.338742 31228 net.cpp:124] Setting up ip3
I0428 20:07:47.338752 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.338760 31228 net.cpp:139] Memory required for data: 7854800
I0428 20:07:47.338768 31228 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:47.338773 31228 net.cpp:86] Creating Layer relu3
I0428 20:07:47.338775 31228 net.cpp:408] relu3 <- ip3
I0428 20:07:47.338780 31228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:47.339661 31228 net.cpp:124] Setting up relu3
I0428 20:07:47.339673 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.339678 31228 net.cpp:139] Memory required for data: 7858800
I0428 20:07:47.339680 31228 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:47.339687 31228 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:47.339690 31228 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:47.339694 31228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:47.339700 31228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:47.339743 31228 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:47.339750 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.339752 31228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:47.339756 31228 net.cpp:139] Memory required for data: 7866800
I0428 20:07:47.339757 31228 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:47.339762 31228 net.cpp:86] Creating Layer accuracy
I0428 20:07:47.339766 31228 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:47.339769 31228 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:47.339774 31228 net.cpp:382] accuracy -> accuracy
I0428 20:07:47.339781 31228 net.cpp:124] Setting up accuracy
I0428 20:07:47.339785 31228 net.cpp:131] Top shape: (1)
I0428 20:07:47.339787 31228 net.cpp:139] Memory required for data: 7866804
I0428 20:07:47.339790 31228 layer_factory.hpp:77] Creating layer loss
I0428 20:07:47.339794 31228 net.cpp:86] Creating Layer loss
I0428 20:07:47.339798 31228 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:47.339808 31228 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:47.339814 31228 net.cpp:382] loss -> loss
I0428 20:07:47.339820 31228 layer_factory.hpp:77] Creating layer loss
I0428 20:07:47.340068 31228 net.cpp:124] Setting up loss
I0428 20:07:47.340077 31228 net.cpp:131] Top shape: (1)
I0428 20:07:47.340080 31228 net.cpp:134]     with loss weight 1
I0428 20:07:47.340095 31228 net.cpp:139] Memory required for data: 7866808
I0428 20:07:47.340100 31228 net.cpp:200] loss needs backward computation.
I0428 20:07:47.340111 31228 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:47.340114 31228 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:47.340123 31228 net.cpp:200] relu3 needs backward computation.
I0428 20:07:47.340126 31228 net.cpp:200] ip3 needs backward computation.
I0428 20:07:47.340128 31228 net.cpp:200] relu2 needs backward computation.
I0428 20:07:47.340131 31228 net.cpp:200] ip2 needs backward computation.
I0428 20:07:47.340133 31228 net.cpp:200] relu1 needs backward computation.
I0428 20:07:47.340137 31228 net.cpp:200] ip1 needs backward computation.
I0428 20:07:47.340139 31228 net.cpp:200] pool1 needs backward computation.
I0428 20:07:47.340142 31228 net.cpp:200] conv1 needs backward computation.
I0428 20:07:47.340145 31228 net.cpp:200] pool0 needs backward computation.
I0428 20:07:47.340147 31228 net.cpp:200] conv0 needs backward computation.
I0428 20:07:47.340152 31228 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:47.340160 31228 net.cpp:202] mnist does not need backward computation.
I0428 20:07:47.340162 31228 net.cpp:244] This network produces output accuracy
I0428 20:07:47.340165 31228 net.cpp:244] This network produces output loss
I0428 20:07:47.340176 31228 net.cpp:257] Network initialization done.
I0428 20:07:47.340232 31228 solver.cpp:56] Solver scaffolding done.
I0428 20:07:47.340576 31228 caffe.cpp:248] Starting Optimization
I0428 20:07:47.340595 31228 solver.cpp:273] Solving LeNet
I0428 20:07:47.340597 31228 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:47.341549 31228 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:47.346679 31228 blocking_queue.cpp:49] Waiting for data
I0428 20:07:47.416615 31235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:47.417220 31228 solver.cpp:398]     Test net output #0: accuracy = 0.1256
I0428 20:07:47.417242 31228 solver.cpp:398]     Test net output #1: loss = 2.29277 (* 1 = 2.29277 loss)
I0428 20:07:47.420936 31228 solver.cpp:219] Iteration 0 (-1.14413e-34 iter/s, 0.0802929s/100 iters), loss = 2.29162
I0428 20:07:47.420960 31228 solver.cpp:238]     Train net output #0: loss = 2.29162 (* 1 = 2.29162 loss)
I0428 20:07:47.420987 31228 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:47.513979 31228 solver.cpp:219] Iteration 100 (1075.19 iter/s, 0.0930068s/100 iters), loss = 1.03536
I0428 20:07:47.514003 31228 solver.cpp:238]     Train net output #0: loss = 1.03536 (* 1 = 1.03536 loss)
I0428 20:07:47.514024 31228 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:47.613657 31228 solver.cpp:219] Iteration 200 (1003.58 iter/s, 0.0996436s/100 iters), loss = 0.436003
I0428 20:07:47.613696 31228 solver.cpp:238]     Train net output #0: loss = 0.436003 (* 1 = 0.436003 loss)
I0428 20:07:47.613703 31228 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:47.708595 31228 solver.cpp:219] Iteration 300 (1053.86 iter/s, 0.0948892s/100 iters), loss = 0.280878
I0428 20:07:47.708633 31228 solver.cpp:238]     Train net output #0: loss = 0.280878 (* 1 = 0.280878 loss)
I0428 20:07:47.708640 31228 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:47.801709 31228 solver.cpp:219] Iteration 400 (1074.34 iter/s, 0.0930806s/100 iters), loss = 0.184941
I0428 20:07:47.801748 31228 solver.cpp:238]     Train net output #0: loss = 0.184941 (* 1 = 0.184941 loss)
I0428 20:07:47.801755 31228 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:47.893275 31228 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:47.966133 31235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:47.966779 31228 solver.cpp:398]     Test net output #0: accuracy = 0.9403
I0428 20:07:47.966817 31228 solver.cpp:398]     Test net output #1: loss = 0.19281 (* 1 = 0.19281 loss)
I0428 20:07:47.967834 31228 solver.cpp:219] Iteration 500 (602.092 iter/s, 0.166088s/100 iters), loss = 0.0957879
I0428 20:07:47.967921 31228 solver.cpp:238]     Train net output #0: loss = 0.0957879 (* 1 = 0.0957879 loss)
I0428 20:07:47.967927 31228 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:48.065316 31228 solver.cpp:219] Iteration 600 (1026.83 iter/s, 0.0973868s/100 iters), loss = 0.169233
I0428 20:07:48.065341 31228 solver.cpp:238]     Train net output #0: loss = 0.169233 (* 1 = 0.169233 loss)
I0428 20:07:48.065348 31228 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:48.157845 31228 solver.cpp:219] Iteration 700 (1081.15 iter/s, 0.0924938s/100 iters), loss = 0.160002
I0428 20:07:48.157883 31228 solver.cpp:238]     Train net output #0: loss = 0.160002 (* 1 = 0.160002 loss)
I0428 20:07:48.157891 31228 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:48.252445 31228 solver.cpp:219] Iteration 800 (1057.45 iter/s, 0.0945674s/100 iters), loss = 0.282797
I0428 20:07:48.252485 31228 solver.cpp:238]     Train net output #0: loss = 0.282797 (* 1 = 0.282797 loss)
I0428 20:07:48.252490 31228 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:48.345243 31228 solver.cpp:219] Iteration 900 (1077.99 iter/s, 0.0927652s/100 iters), loss = 0.169969
I0428 20:07:48.345268 31228 solver.cpp:238]     Train net output #0: loss = 0.169969 (* 1 = 0.169969 loss)
I0428 20:07:48.345273 31228 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:48.376322 31234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:48.437515 31228 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:48.438486 31228 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:48.439193 31228 solver.cpp:311] Iteration 1000, loss = 0.164988
I0428 20:07:48.439210 31228 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:48.514891 31235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:48.515506 31228 solver.cpp:398]     Test net output #0: accuracy = 0.961
I0428 20:07:48.515528 31228 solver.cpp:398]     Test net output #1: loss = 0.120191 (* 1 = 0.120191 loss)
I0428 20:07:48.515533 31228 solver.cpp:316] Optimization Done.
I0428 20:07:48.515537 31228 caffe.cpp:259] Optimization Done.
