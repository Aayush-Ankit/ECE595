I0428 20:18:37.602838  1179 caffe.cpp:218] Using GPUs 0
I0428 20:18:37.631748  1179 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:38.081415  1179 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1323.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:38.081557  1179 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1323.prototxt
I0428 20:18:38.081904  1179 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:38.081920  1179 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:38.082000  1179 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:38.082063  1179 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:38.082156  1179 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:38.082191  1179 net.cpp:86] Creating Layer mnist
I0428 20:18:38.082197  1179 net.cpp:382] mnist -> data
I0428 20:18:38.082216  1179 net.cpp:382] mnist -> label
I0428 20:18:38.083220  1179 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:38.085698  1179 net.cpp:124] Setting up mnist
I0428 20:18:38.085729  1179 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:38.085734  1179 net.cpp:131] Top shape: 64 (64)
I0428 20:18:38.085736  1179 net.cpp:139] Memory required for data: 200960
I0428 20:18:38.085742  1179 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:38.085774  1179 net.cpp:86] Creating Layer conv0
I0428 20:18:38.085791  1179 net.cpp:408] conv0 <- data
I0428 20:18:38.085801  1179 net.cpp:382] conv0 -> conv0
I0428 20:18:38.320142  1179 net.cpp:124] Setting up conv0
I0428 20:18:38.320168  1179 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:38.320173  1179 net.cpp:139] Memory required for data: 7573760
I0428 20:18:38.320186  1179 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:38.320199  1179 net.cpp:86] Creating Layer pool0
I0428 20:18:38.320204  1179 net.cpp:408] pool0 <- conv0
I0428 20:18:38.320209  1179 net.cpp:382] pool0 -> pool0
I0428 20:18:38.320267  1179 net.cpp:124] Setting up pool0
I0428 20:18:38.320273  1179 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:38.320276  1179 net.cpp:139] Memory required for data: 9416960
I0428 20:18:38.320279  1179 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:38.320291  1179 net.cpp:86] Creating Layer conv1
I0428 20:18:38.320293  1179 net.cpp:408] conv1 <- pool0
I0428 20:18:38.320297  1179 net.cpp:382] conv1 -> conv1
I0428 20:18:38.323108  1179 net.cpp:124] Setting up conv1
I0428 20:18:38.323138  1179 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:38.323143  1179 net.cpp:139] Memory required for data: 9580800
I0428 20:18:38.323151  1179 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:38.323159  1179 net.cpp:86] Creating Layer pool1
I0428 20:18:38.323163  1179 net.cpp:408] pool1 <- conv1
I0428 20:18:38.323168  1179 net.cpp:382] pool1 -> pool1
I0428 20:18:38.323235  1179 net.cpp:124] Setting up pool1
I0428 20:18:38.323241  1179 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:38.323245  1179 net.cpp:139] Memory required for data: 9621760
I0428 20:18:38.323247  1179 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:38.323254  1179 net.cpp:86] Creating Layer ip1
I0428 20:18:38.323257  1179 net.cpp:408] ip1 <- pool1
I0428 20:18:38.323261  1179 net.cpp:382] ip1 -> ip1
I0428 20:18:38.323400  1179 net.cpp:124] Setting up ip1
I0428 20:18:38.323408  1179 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:38.323411  1179 net.cpp:139] Memory required for data: 9634560
I0428 20:18:38.323418  1179 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:38.323424  1179 net.cpp:86] Creating Layer relu1
I0428 20:18:38.323427  1179 net.cpp:408] relu1 <- ip1
I0428 20:18:38.323431  1179 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:38.323591  1179 net.cpp:124] Setting up relu1
I0428 20:18:38.323599  1179 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:38.323603  1179 net.cpp:139] Memory required for data: 9647360
I0428 20:18:38.323606  1179 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:38.323612  1179 net.cpp:86] Creating Layer ip2
I0428 20:18:38.323616  1179 net.cpp:408] ip2 <- ip1
I0428 20:18:38.323621  1179 net.cpp:382] ip2 -> ip2
I0428 20:18:38.323741  1179 net.cpp:124] Setting up ip2
I0428 20:18:38.323748  1179 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:38.323751  1179 net.cpp:139] Memory required for data: 9660160
I0428 20:18:38.323756  1179 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:38.323761  1179 net.cpp:86] Creating Layer relu2
I0428 20:18:38.323765  1179 net.cpp:408] relu2 <- ip2
I0428 20:18:38.323770  1179 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:38.324503  1179 net.cpp:124] Setting up relu2
I0428 20:18:38.324514  1179 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:38.324533  1179 net.cpp:139] Memory required for data: 9672960
I0428 20:18:38.324537  1179 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:38.324543  1179 net.cpp:86] Creating Layer ip3
I0428 20:18:38.324548  1179 net.cpp:408] ip3 <- ip2
I0428 20:18:38.324553  1179 net.cpp:382] ip3 -> ip3
I0428 20:18:38.324651  1179 net.cpp:124] Setting up ip3
I0428 20:18:38.324666  1179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:38.324669  1179 net.cpp:139] Memory required for data: 9675520
I0428 20:18:38.324676  1179 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:38.324681  1179 net.cpp:86] Creating Layer relu3
I0428 20:18:38.324700  1179 net.cpp:408] relu3 <- ip3
I0428 20:18:38.324704  1179 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:38.324914  1179 net.cpp:124] Setting up relu3
I0428 20:18:38.324924  1179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:38.324928  1179 net.cpp:139] Memory required for data: 9678080
I0428 20:18:38.324931  1179 layer_factory.hpp:77] Creating layer loss
I0428 20:18:38.324937  1179 net.cpp:86] Creating Layer loss
I0428 20:18:38.324940  1179 net.cpp:408] loss <- ip3
I0428 20:18:38.324944  1179 net.cpp:408] loss <- label
I0428 20:18:38.324950  1179 net.cpp:382] loss -> loss
I0428 20:18:38.324970  1179 layer_factory.hpp:77] Creating layer loss
I0428 20:18:38.325273  1179 net.cpp:124] Setting up loss
I0428 20:18:38.325287  1179 net.cpp:131] Top shape: (1)
I0428 20:18:38.325306  1179 net.cpp:134]     with loss weight 1
I0428 20:18:38.325320  1179 net.cpp:139] Memory required for data: 9678084
I0428 20:18:38.325325  1179 net.cpp:200] loss needs backward computation.
I0428 20:18:38.325327  1179 net.cpp:200] relu3 needs backward computation.
I0428 20:18:38.325330  1179 net.cpp:200] ip3 needs backward computation.
I0428 20:18:38.325333  1179 net.cpp:200] relu2 needs backward computation.
I0428 20:18:38.325336  1179 net.cpp:200] ip2 needs backward computation.
I0428 20:18:38.325340  1179 net.cpp:200] relu1 needs backward computation.
I0428 20:18:38.325342  1179 net.cpp:200] ip1 needs backward computation.
I0428 20:18:38.325345  1179 net.cpp:200] pool1 needs backward computation.
I0428 20:18:38.325348  1179 net.cpp:200] conv1 needs backward computation.
I0428 20:18:38.325351  1179 net.cpp:200] pool0 needs backward computation.
I0428 20:18:38.325354  1179 net.cpp:200] conv0 needs backward computation.
I0428 20:18:38.325358  1179 net.cpp:202] mnist does not need backward computation.
I0428 20:18:38.325361  1179 net.cpp:244] This network produces output loss
I0428 20:18:38.325371  1179 net.cpp:257] Network initialization done.
I0428 20:18:38.325752  1179 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1323.prototxt
I0428 20:18:38.325793  1179 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:38.325901  1179 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:38.325978  1179 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:38.326019  1179 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:38.326035  1179 net.cpp:86] Creating Layer mnist
I0428 20:18:38.326038  1179 net.cpp:382] mnist -> data
I0428 20:18:38.326046  1179 net.cpp:382] mnist -> label
I0428 20:18:38.326130  1179 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:38.328204  1179 net.cpp:124] Setting up mnist
I0428 20:18:38.328249  1179 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:38.328254  1179 net.cpp:131] Top shape: 100 (100)
I0428 20:18:38.328258  1179 net.cpp:139] Memory required for data: 314000
I0428 20:18:38.328261  1179 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:38.328272  1179 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:38.328275  1179 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:38.328280  1179 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:38.328287  1179 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:38.328387  1179 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:38.328395  1179 net.cpp:131] Top shape: 100 (100)
I0428 20:18:38.328398  1179 net.cpp:131] Top shape: 100 (100)
I0428 20:18:38.328402  1179 net.cpp:139] Memory required for data: 314800
I0428 20:18:38.328404  1179 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:38.328413  1179 net.cpp:86] Creating Layer conv0
I0428 20:18:38.328416  1179 net.cpp:408] conv0 <- data
I0428 20:18:38.328421  1179 net.cpp:382] conv0 -> conv0
I0428 20:18:38.330046  1179 net.cpp:124] Setting up conv0
I0428 20:18:38.330060  1179 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:38.330080  1179 net.cpp:139] Memory required for data: 11834800
I0428 20:18:38.330088  1179 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:38.330096  1179 net.cpp:86] Creating Layer pool0
I0428 20:18:38.330113  1179 net.cpp:408] pool0 <- conv0
I0428 20:18:38.330117  1179 net.cpp:382] pool0 -> pool0
I0428 20:18:38.330173  1179 net.cpp:124] Setting up pool0
I0428 20:18:38.330181  1179 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:38.330184  1179 net.cpp:139] Memory required for data: 14714800
I0428 20:18:38.330188  1179 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:38.330195  1179 net.cpp:86] Creating Layer conv1
I0428 20:18:38.330199  1179 net.cpp:408] conv1 <- pool0
I0428 20:18:38.330204  1179 net.cpp:382] conv1 -> conv1
I0428 20:18:38.331709  1179 net.cpp:124] Setting up conv1
I0428 20:18:38.331722  1179 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:38.331743  1179 net.cpp:139] Memory required for data: 14970800
I0428 20:18:38.331751  1179 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:38.331758  1179 net.cpp:86] Creating Layer pool1
I0428 20:18:38.331776  1179 net.cpp:408] pool1 <- conv1
I0428 20:18:38.331781  1179 net.cpp:382] pool1 -> pool1
I0428 20:18:38.331818  1179 net.cpp:124] Setting up pool1
I0428 20:18:38.331823  1179 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:38.331827  1179 net.cpp:139] Memory required for data: 15034800
I0428 20:18:38.331830  1179 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:38.331837  1179 net.cpp:86] Creating Layer ip1
I0428 20:18:38.331841  1179 net.cpp:408] ip1 <- pool1
I0428 20:18:38.331846  1179 net.cpp:382] ip1 -> ip1
I0428 20:18:38.331990  1179 net.cpp:124] Setting up ip1
I0428 20:18:38.332000  1179 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:38.332036  1179 net.cpp:139] Memory required for data: 15054800
I0428 20:18:38.332044  1179 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:38.332049  1179 net.cpp:86] Creating Layer relu1
I0428 20:18:38.332053  1179 net.cpp:408] relu1 <- ip1
I0428 20:18:38.332058  1179 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:38.332294  1179 net.cpp:124] Setting up relu1
I0428 20:18:38.332304  1179 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:38.332307  1179 net.cpp:139] Memory required for data: 15074800
I0428 20:18:38.332310  1179 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:38.332319  1179 net.cpp:86] Creating Layer ip2
I0428 20:18:38.332339  1179 net.cpp:408] ip2 <- ip1
I0428 20:18:38.332343  1179 net.cpp:382] ip2 -> ip2
I0428 20:18:38.332459  1179 net.cpp:124] Setting up ip2
I0428 20:18:38.332466  1179 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:38.332470  1179 net.cpp:139] Memory required for data: 15094800
I0428 20:18:38.332476  1179 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:38.332481  1179 net.cpp:86] Creating Layer relu2
I0428 20:18:38.332484  1179 net.cpp:408] relu2 <- ip2
I0428 20:18:38.332489  1179 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:38.332653  1179 net.cpp:124] Setting up relu2
I0428 20:18:38.332660  1179 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:38.332664  1179 net.cpp:139] Memory required for data: 15114800
I0428 20:18:38.332667  1179 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:38.332674  1179 net.cpp:86] Creating Layer ip3
I0428 20:18:38.332676  1179 net.cpp:408] ip3 <- ip2
I0428 20:18:38.332681  1179 net.cpp:382] ip3 -> ip3
I0428 20:18:38.332777  1179 net.cpp:124] Setting up ip3
I0428 20:18:38.332784  1179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:38.332788  1179 net.cpp:139] Memory required for data: 15118800
I0428 20:18:38.332797  1179 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:38.332800  1179 net.cpp:86] Creating Layer relu3
I0428 20:18:38.332803  1179 net.cpp:408] relu3 <- ip3
I0428 20:18:38.332808  1179 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:38.333739  1179 net.cpp:124] Setting up relu3
I0428 20:18:38.333766  1179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:38.333770  1179 net.cpp:139] Memory required for data: 15122800
I0428 20:18:38.333773  1179 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:38.333778  1179 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:38.333783  1179 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:38.333788  1179 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:38.333796  1179 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:38.333832  1179 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:38.333837  1179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:38.333842  1179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:38.333844  1179 net.cpp:139] Memory required for data: 15130800
I0428 20:18:38.333847  1179 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:38.333863  1179 net.cpp:86] Creating Layer accuracy
I0428 20:18:38.333866  1179 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:38.333871  1179 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:38.333875  1179 net.cpp:382] accuracy -> accuracy
I0428 20:18:38.333884  1179 net.cpp:124] Setting up accuracy
I0428 20:18:38.333887  1179 net.cpp:131] Top shape: (1)
I0428 20:18:38.333890  1179 net.cpp:139] Memory required for data: 15130804
I0428 20:18:38.333894  1179 layer_factory.hpp:77] Creating layer loss
I0428 20:18:38.333899  1179 net.cpp:86] Creating Layer loss
I0428 20:18:38.333901  1179 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:38.333905  1179 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:38.333910  1179 net.cpp:382] loss -> loss
I0428 20:18:38.333916  1179 layer_factory.hpp:77] Creating layer loss
I0428 20:18:38.334152  1179 net.cpp:124] Setting up loss
I0428 20:18:38.334161  1179 net.cpp:131] Top shape: (1)
I0428 20:18:38.334164  1179 net.cpp:134]     with loss weight 1
I0428 20:18:38.334180  1179 net.cpp:139] Memory required for data: 15130808
I0428 20:18:38.334184  1179 net.cpp:200] loss needs backward computation.
I0428 20:18:38.334188  1179 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:38.334192  1179 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:38.334195  1179 net.cpp:200] relu3 needs backward computation.
I0428 20:18:38.334198  1179 net.cpp:200] ip3 needs backward computation.
I0428 20:18:38.334202  1179 net.cpp:200] relu2 needs backward computation.
I0428 20:18:38.334203  1179 net.cpp:200] ip2 needs backward computation.
I0428 20:18:38.334208  1179 net.cpp:200] relu1 needs backward computation.
I0428 20:18:38.334209  1179 net.cpp:200] ip1 needs backward computation.
I0428 20:18:38.334213  1179 net.cpp:200] pool1 needs backward computation.
I0428 20:18:38.334223  1179 net.cpp:200] conv1 needs backward computation.
I0428 20:18:38.334225  1179 net.cpp:200] pool0 needs backward computation.
I0428 20:18:38.334229  1179 net.cpp:200] conv0 needs backward computation.
I0428 20:18:38.334233  1179 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:38.334237  1179 net.cpp:202] mnist does not need backward computation.
I0428 20:18:38.334240  1179 net.cpp:244] This network produces output accuracy
I0428 20:18:38.334244  1179 net.cpp:244] This network produces output loss
I0428 20:18:38.334254  1179 net.cpp:257] Network initialization done.
I0428 20:18:38.334295  1179 solver.cpp:56] Solver scaffolding done.
I0428 20:18:38.334715  1179 caffe.cpp:248] Starting Optimization
I0428 20:18:38.334722  1179 solver.cpp:273] Solving LeNet
I0428 20:18:38.334725  1179 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:38.335505  1179 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:38.400631  1186 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:38.402271  1179 solver.cpp:398]     Test net output #0: accuracy = 0.1187
I0428 20:18:38.402307  1179 solver.cpp:398]     Test net output #1: loss = 2.30605 (* 1 = 2.30605 loss)
I0428 20:18:38.406324  1179 solver.cpp:219] Iteration 0 (0 iter/s, 0.0715745s/100 iters), loss = 2.31554
I0428 20:18:38.406361  1179 solver.cpp:238]     Train net output #0: loss = 2.31554 (* 1 = 2.31554 loss)
I0428 20:18:38.406373  1179 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:38.527333  1179 solver.cpp:219] Iteration 100 (826.615 iter/s, 0.120975s/100 iters), loss = 1.02834
I0428 20:18:38.527371  1179 solver.cpp:238]     Train net output #0: loss = 1.02834 (* 1 = 1.02834 loss)
I0428 20:18:38.527377  1179 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:38.655787  1179 solver.cpp:219] Iteration 200 (778.721 iter/s, 0.128416s/100 iters), loss = 1.04084
I0428 20:18:38.655829  1179 solver.cpp:238]     Train net output #0: loss = 1.04084 (* 1 = 1.04084 loss)
I0428 20:18:38.655839  1179 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:38.790624  1179 solver.cpp:219] Iteration 300 (741.955 iter/s, 0.134779s/100 iters), loss = 0.280327
I0428 20:18:38.790678  1179 solver.cpp:238]     Train net output #0: loss = 0.280327 (* 1 = 0.280327 loss)
I0428 20:18:38.790693  1179 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:38.929798  1179 solver.cpp:219] Iteration 400 (718.854 iter/s, 0.13911s/100 iters), loss = 0.161876
I0428 20:18:38.929837  1179 solver.cpp:238]     Train net output #0: loss = 0.161876 (* 1 = 0.161876 loss)
I0428 20:18:38.929847  1179 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:39.054639  1179 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:39.124061  1186 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:39.126389  1179 solver.cpp:398]     Test net output #0: accuracy = 0.9625
I0428 20:18:39.126415  1179 solver.cpp:398]     Test net output #1: loss = 0.120206 (* 1 = 0.120206 loss)
I0428 20:18:39.127569  1179 solver.cpp:219] Iteration 500 (505.769 iter/s, 0.197719s/100 iters), loss = 0.123622
I0428 20:18:39.127598  1179 solver.cpp:238]     Train net output #0: loss = 0.123622 (* 1 = 0.123622 loss)
I0428 20:18:39.127622  1179 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:39.250828  1179 solver.cpp:219] Iteration 600 (811.57 iter/s, 0.123218s/100 iters), loss = 0.0877122
I0428 20:18:39.250857  1179 solver.cpp:238]     Train net output #0: loss = 0.0877121 (* 1 = 0.0877121 loss)
I0428 20:18:39.250865  1179 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:39.374130  1179 solver.cpp:219] Iteration 700 (811.286 iter/s, 0.123261s/100 iters), loss = 0.196323
I0428 20:18:39.374162  1179 solver.cpp:238]     Train net output #0: loss = 0.196323 (* 1 = 0.196323 loss)
I0428 20:18:39.374171  1179 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:39.501399  1179 solver.cpp:219] Iteration 800 (786.041 iter/s, 0.12722s/100 iters), loss = 0.281937
I0428 20:18:39.501451  1179 solver.cpp:238]     Train net output #0: loss = 0.281936 (* 1 = 0.281936 loss)
I0428 20:18:39.501463  1179 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:39.631361  1179 solver.cpp:219] Iteration 900 (769.82 iter/s, 0.129901s/100 iters), loss = 0.172014
I0428 20:18:39.631397  1179 solver.cpp:238]     Train net output #0: loss = 0.172014 (* 1 = 0.172014 loss)
I0428 20:18:39.631405  1179 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:39.673187  1185 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:39.754436  1179 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:39.755784  1179 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:39.756635  1179 solver.cpp:311] Iteration 1000, loss = 0.110485
I0428 20:18:39.756654  1179 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:39.824653  1186 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:39.826977  1179 solver.cpp:398]     Test net output #0: accuracy = 0.9747
I0428 20:18:39.826998  1179 solver.cpp:398]     Test net output #1: loss = 0.0792651 (* 1 = 0.0792651 loss)
I0428 20:18:39.827004  1179 solver.cpp:316] Optimization Done.
I0428 20:18:39.827008  1179 caffe.cpp:259] Optimization Done.
