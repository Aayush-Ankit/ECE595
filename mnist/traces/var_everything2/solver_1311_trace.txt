I0428 20:18:07.410733  1059 caffe.cpp:218] Using GPUs 0
I0428 20:18:07.440582  1059 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:07.886060  1059 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1311.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:07.886193  1059 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1311.prototxt
I0428 20:18:07.886533  1059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:07.886564  1059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:07.886648  1059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:07.886714  1059 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:07.886796  1059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:07.886816  1059 net.cpp:86] Creating Layer mnist
I0428 20:18:07.886823  1059 net.cpp:382] mnist -> data
I0428 20:18:07.886842  1059 net.cpp:382] mnist -> label
I0428 20:18:07.887720  1059 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:07.889854  1059 net.cpp:124] Setting up mnist
I0428 20:18:07.889885  1059 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:07.889890  1059 net.cpp:131] Top shape: 64 (64)
I0428 20:18:07.889894  1059 net.cpp:139] Memory required for data: 200960
I0428 20:18:07.889909  1059 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:07.889924  1059 net.cpp:86] Creating Layer conv0
I0428 20:18:07.889940  1059 net.cpp:408] conv0 <- data
I0428 20:18:07.889951  1059 net.cpp:382] conv0 -> conv0
I0428 20:18:08.115475  1059 net.cpp:124] Setting up conv0
I0428 20:18:08.115500  1059 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:08.115504  1059 net.cpp:139] Memory required for data: 7573760
I0428 20:18:08.115519  1059 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:08.115545  1059 net.cpp:86] Creating Layer pool0
I0428 20:18:08.115550  1059 net.cpp:408] pool0 <- conv0
I0428 20:18:08.115556  1059 net.cpp:382] pool0 -> pool0
I0428 20:18:08.115600  1059 net.cpp:124] Setting up pool0
I0428 20:18:08.115607  1059 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:08.115610  1059 net.cpp:139] Memory required for data: 9416960
I0428 20:18:08.115614  1059 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:08.115624  1059 net.cpp:86] Creating Layer conv1
I0428 20:18:08.115628  1059 net.cpp:408] conv1 <- pool0
I0428 20:18:08.115633  1059 net.cpp:382] conv1 -> conv1
I0428 20:18:08.118537  1059 net.cpp:124] Setting up conv1
I0428 20:18:08.118551  1059 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:08.118556  1059 net.cpp:139] Memory required for data: 9580800
I0428 20:18:08.118579  1059 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:08.118587  1059 net.cpp:86] Creating Layer pool1
I0428 20:18:08.118590  1059 net.cpp:408] pool1 <- conv1
I0428 20:18:08.118595  1059 net.cpp:382] pool1 -> pool1
I0428 20:18:08.118631  1059 net.cpp:124] Setting up pool1
I0428 20:18:08.118639  1059 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:08.118643  1059 net.cpp:139] Memory required for data: 9621760
I0428 20:18:08.118645  1059 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:08.118652  1059 net.cpp:86] Creating Layer ip1
I0428 20:18:08.118655  1059 net.cpp:408] ip1 <- pool1
I0428 20:18:08.118659  1059 net.cpp:382] ip1 -> ip1
I0428 20:18:08.118775  1059 net.cpp:124] Setting up ip1
I0428 20:18:08.118782  1059 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:08.118785  1059 net.cpp:139] Memory required for data: 9628160
I0428 20:18:08.118793  1059 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:08.118798  1059 net.cpp:86] Creating Layer relu1
I0428 20:18:08.118801  1059 net.cpp:408] relu1 <- ip1
I0428 20:18:08.118805  1059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:08.118968  1059 net.cpp:124] Setting up relu1
I0428 20:18:08.118976  1059 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:08.118979  1059 net.cpp:139] Memory required for data: 9634560
I0428 20:18:08.118983  1059 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:08.118988  1059 net.cpp:86] Creating Layer ip2
I0428 20:18:08.118993  1059 net.cpp:408] ip2 <- ip1
I0428 20:18:08.118998  1059 net.cpp:382] ip2 -> ip2
I0428 20:18:08.119089  1059 net.cpp:124] Setting up ip2
I0428 20:18:08.119110  1059 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:08.119114  1059 net.cpp:139] Memory required for data: 9640960
I0428 20:18:08.119119  1059 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:08.119125  1059 net.cpp:86] Creating Layer relu2
I0428 20:18:08.119128  1059 net.cpp:408] relu2 <- ip2
I0428 20:18:08.119132  1059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:08.119897  1059 net.cpp:124] Setting up relu2
I0428 20:18:08.119910  1059 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:08.119930  1059 net.cpp:139] Memory required for data: 9647360
I0428 20:18:08.119933  1059 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:08.119954  1059 net.cpp:86] Creating Layer ip3
I0428 20:18:08.119957  1059 net.cpp:408] ip3 <- ip2
I0428 20:18:08.119963  1059 net.cpp:382] ip3 -> ip3
I0428 20:18:08.120061  1059 net.cpp:124] Setting up ip3
I0428 20:18:08.120069  1059 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:08.120072  1059 net.cpp:139] Memory required for data: 9649920
I0428 20:18:08.120080  1059 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:08.120085  1059 net.cpp:86] Creating Layer relu3
I0428 20:18:08.120090  1059 net.cpp:408] relu3 <- ip3
I0428 20:18:08.120093  1059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:08.120251  1059 net.cpp:124] Setting up relu3
I0428 20:18:08.120260  1059 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:08.120262  1059 net.cpp:139] Memory required for data: 9652480
I0428 20:18:08.120275  1059 layer_factory.hpp:77] Creating layer loss
I0428 20:18:08.120281  1059 net.cpp:86] Creating Layer loss
I0428 20:18:08.120285  1059 net.cpp:408] loss <- ip3
I0428 20:18:08.120288  1059 net.cpp:408] loss <- label
I0428 20:18:08.120293  1059 net.cpp:382] loss -> loss
I0428 20:18:08.120311  1059 layer_factory.hpp:77] Creating layer loss
I0428 20:18:08.120549  1059 net.cpp:124] Setting up loss
I0428 20:18:08.120558  1059 net.cpp:131] Top shape: (1)
I0428 20:18:08.120561  1059 net.cpp:134]     with loss weight 1
I0428 20:18:08.120575  1059 net.cpp:139] Memory required for data: 9652484
I0428 20:18:08.120579  1059 net.cpp:200] loss needs backward computation.
I0428 20:18:08.120584  1059 net.cpp:200] relu3 needs backward computation.
I0428 20:18:08.120585  1059 net.cpp:200] ip3 needs backward computation.
I0428 20:18:08.120589  1059 net.cpp:200] relu2 needs backward computation.
I0428 20:18:08.120591  1059 net.cpp:200] ip2 needs backward computation.
I0428 20:18:08.120594  1059 net.cpp:200] relu1 needs backward computation.
I0428 20:18:08.120597  1059 net.cpp:200] ip1 needs backward computation.
I0428 20:18:08.120599  1059 net.cpp:200] pool1 needs backward computation.
I0428 20:18:08.120602  1059 net.cpp:200] conv1 needs backward computation.
I0428 20:18:08.120605  1059 net.cpp:200] pool0 needs backward computation.
I0428 20:18:08.120609  1059 net.cpp:200] conv0 needs backward computation.
I0428 20:18:08.120612  1059 net.cpp:202] mnist does not need backward computation.
I0428 20:18:08.120615  1059 net.cpp:244] This network produces output loss
I0428 20:18:08.120625  1059 net.cpp:257] Network initialization done.
I0428 20:18:08.121004  1059 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1311.prototxt
I0428 20:18:08.121034  1059 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:08.121140  1059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:08.121225  1059 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:08.121315  1059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:08.121328  1059 net.cpp:86] Creating Layer mnist
I0428 20:18:08.121332  1059 net.cpp:382] mnist -> data
I0428 20:18:08.121340  1059 net.cpp:382] mnist -> label
I0428 20:18:08.121419  1059 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:08.123522  1059 net.cpp:124] Setting up mnist
I0428 20:18:08.123553  1059 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:08.123558  1059 net.cpp:131] Top shape: 100 (100)
I0428 20:18:08.123561  1059 net.cpp:139] Memory required for data: 314000
I0428 20:18:08.123564  1059 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:08.123597  1059 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:08.123602  1059 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:08.123607  1059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:08.123615  1059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:08.123710  1059 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:08.123718  1059 net.cpp:131] Top shape: 100 (100)
I0428 20:18:08.123723  1059 net.cpp:131] Top shape: 100 (100)
I0428 20:18:08.123725  1059 net.cpp:139] Memory required for data: 314800
I0428 20:18:08.123728  1059 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:08.123738  1059 net.cpp:86] Creating Layer conv0
I0428 20:18:08.123740  1059 net.cpp:408] conv0 <- data
I0428 20:18:08.123745  1059 net.cpp:382] conv0 -> conv0
I0428 20:18:08.125248  1059 net.cpp:124] Setting up conv0
I0428 20:18:08.125294  1059 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:08.125300  1059 net.cpp:139] Memory required for data: 11834800
I0428 20:18:08.125313  1059 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:08.125335  1059 net.cpp:86] Creating Layer pool0
I0428 20:18:08.125339  1059 net.cpp:408] pool0 <- conv0
I0428 20:18:08.125344  1059 net.cpp:382] pool0 -> pool0
I0428 20:18:08.125399  1059 net.cpp:124] Setting up pool0
I0428 20:18:08.125407  1059 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:08.125411  1059 net.cpp:139] Memory required for data: 14714800
I0428 20:18:08.125414  1059 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:08.125423  1059 net.cpp:86] Creating Layer conv1
I0428 20:18:08.125430  1059 net.cpp:408] conv1 <- pool0
I0428 20:18:08.125435  1059 net.cpp:382] conv1 -> conv1
I0428 20:18:08.127008  1059 net.cpp:124] Setting up conv1
I0428 20:18:08.127022  1059 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:08.127040  1059 net.cpp:139] Memory required for data: 14970800
I0428 20:18:08.127049  1059 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:08.127055  1059 net.cpp:86] Creating Layer pool1
I0428 20:18:08.127059  1059 net.cpp:408] pool1 <- conv1
I0428 20:18:08.127064  1059 net.cpp:382] pool1 -> pool1
I0428 20:18:08.127102  1059 net.cpp:124] Setting up pool1
I0428 20:18:08.127110  1059 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:08.127112  1059 net.cpp:139] Memory required for data: 15034800
I0428 20:18:08.127115  1059 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:08.127137  1059 net.cpp:86] Creating Layer ip1
I0428 20:18:08.127143  1059 net.cpp:408] ip1 <- pool1
I0428 20:18:08.127149  1059 net.cpp:382] ip1 -> ip1
I0428 20:18:08.127272  1059 net.cpp:124] Setting up ip1
I0428 20:18:08.127280  1059 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:08.127295  1059 net.cpp:139] Memory required for data: 15044800
I0428 20:18:08.127302  1059 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:08.127310  1059 net.cpp:86] Creating Layer relu1
I0428 20:18:08.127331  1059 net.cpp:408] relu1 <- ip1
I0428 20:18:08.127336  1059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:08.127518  1059 net.cpp:124] Setting up relu1
I0428 20:18:08.127527  1059 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:08.127530  1059 net.cpp:139] Memory required for data: 15054800
I0428 20:18:08.127534  1059 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:08.127542  1059 net.cpp:86] Creating Layer ip2
I0428 20:18:08.127545  1059 net.cpp:408] ip2 <- ip1
I0428 20:18:08.127552  1059 net.cpp:382] ip2 -> ip2
I0428 20:18:08.127666  1059 net.cpp:124] Setting up ip2
I0428 20:18:08.127687  1059 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:08.127691  1059 net.cpp:139] Memory required for data: 15064800
I0428 20:18:08.127696  1059 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:08.127701  1059 net.cpp:86] Creating Layer relu2
I0428 20:18:08.127704  1059 net.cpp:408] relu2 <- ip2
I0428 20:18:08.127717  1059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:08.127863  1059 net.cpp:124] Setting up relu2
I0428 20:18:08.127871  1059 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:08.127874  1059 net.cpp:139] Memory required for data: 15074800
I0428 20:18:08.127877  1059 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:08.127883  1059 net.cpp:86] Creating Layer ip3
I0428 20:18:08.127887  1059 net.cpp:408] ip3 <- ip2
I0428 20:18:08.127892  1059 net.cpp:382] ip3 -> ip3
I0428 20:18:08.128006  1059 net.cpp:124] Setting up ip3
I0428 20:18:08.128013  1059 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:08.128016  1059 net.cpp:139] Memory required for data: 15078800
I0428 20:18:08.128024  1059 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:08.128029  1059 net.cpp:86] Creating Layer relu3
I0428 20:18:08.128032  1059 net.cpp:408] relu3 <- ip3
I0428 20:18:08.128036  1059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:08.128916  1059 net.cpp:124] Setting up relu3
I0428 20:18:08.128928  1059 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:08.128932  1059 net.cpp:139] Memory required for data: 15082800
I0428 20:18:08.128937  1059 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:08.128942  1059 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:08.128947  1059 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:08.128952  1059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:08.128957  1059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:08.128994  1059 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:08.129001  1059 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:08.129006  1059 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:08.129009  1059 net.cpp:139] Memory required for data: 15090800
I0428 20:18:08.129014  1059 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:08.129019  1059 net.cpp:86] Creating Layer accuracy
I0428 20:18:08.129022  1059 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:08.129027  1059 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:08.129031  1059 net.cpp:382] accuracy -> accuracy
I0428 20:18:08.129040  1059 net.cpp:124] Setting up accuracy
I0428 20:18:08.129043  1059 net.cpp:131] Top shape: (1)
I0428 20:18:08.129046  1059 net.cpp:139] Memory required for data: 15090804
I0428 20:18:08.129055  1059 layer_factory.hpp:77] Creating layer loss
I0428 20:18:08.129060  1059 net.cpp:86] Creating Layer loss
I0428 20:18:08.129062  1059 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:08.129071  1059 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:08.129076  1059 net.cpp:382] loss -> loss
I0428 20:18:08.129086  1059 layer_factory.hpp:77] Creating layer loss
I0428 20:18:08.129336  1059 net.cpp:124] Setting up loss
I0428 20:18:08.129345  1059 net.cpp:131] Top shape: (1)
I0428 20:18:08.129349  1059 net.cpp:134]     with loss weight 1
I0428 20:18:08.129366  1059 net.cpp:139] Memory required for data: 15090808
I0428 20:18:08.129370  1059 net.cpp:200] loss needs backward computation.
I0428 20:18:08.129374  1059 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:08.129384  1059 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:08.129387  1059 net.cpp:200] relu3 needs backward computation.
I0428 20:18:08.129390  1059 net.cpp:200] ip3 needs backward computation.
I0428 20:18:08.129393  1059 net.cpp:200] relu2 needs backward computation.
I0428 20:18:08.129396  1059 net.cpp:200] ip2 needs backward computation.
I0428 20:18:08.129403  1059 net.cpp:200] relu1 needs backward computation.
I0428 20:18:08.129406  1059 net.cpp:200] ip1 needs backward computation.
I0428 20:18:08.129410  1059 net.cpp:200] pool1 needs backward computation.
I0428 20:18:08.129412  1059 net.cpp:200] conv1 needs backward computation.
I0428 20:18:08.129416  1059 net.cpp:200] pool0 needs backward computation.
I0428 20:18:08.129420  1059 net.cpp:200] conv0 needs backward computation.
I0428 20:18:08.129423  1059 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:08.129427  1059 net.cpp:202] mnist does not need backward computation.
I0428 20:18:08.129431  1059 net.cpp:244] This network produces output accuracy
I0428 20:18:08.129433  1059 net.cpp:244] This network produces output loss
I0428 20:18:08.129444  1059 net.cpp:257] Network initialization done.
I0428 20:18:08.129487  1059 solver.cpp:56] Solver scaffolding done.
I0428 20:18:08.129858  1059 caffe.cpp:248] Starting Optimization
I0428 20:18:08.129864  1059 solver.cpp:273] Solving LeNet
I0428 20:18:08.129866  1059 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:08.130784  1059 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:08.137110  1059 blocking_queue.cpp:49] Waiting for data
I0428 20:18:08.207976  1066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:08.208714  1059 solver.cpp:398]     Test net output #0: accuracy = 0.1101
I0428 20:18:08.208745  1059 solver.cpp:398]     Test net output #1: loss = 2.31185 (* 1 = 2.31185 loss)
I0428 20:18:08.212911  1059 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829911s/100 iters), loss = 2.3037
I0428 20:18:08.212952  1059 solver.cpp:238]     Train net output #0: loss = 2.3037 (* 1 = 2.3037 loss)
I0428 20:18:08.212963  1059 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:08.333961  1059 solver.cpp:219] Iteration 100 (826.461 iter/s, 0.120998s/100 iters), loss = 0.561793
I0428 20:18:08.333999  1059 solver.cpp:238]     Train net output #0: loss = 0.561793 (* 1 = 0.561793 loss)
I0428 20:18:08.334005  1059 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:08.449044  1059 solver.cpp:219] Iteration 200 (869.191 iter/s, 0.115049s/100 iters), loss = 0.746132
I0428 20:18:08.449082  1059 solver.cpp:238]     Train net output #0: loss = 0.746132 (* 1 = 0.746132 loss)
I0428 20:18:08.449089  1059 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:08.564142  1059 solver.cpp:219] Iteration 300 (869.075 iter/s, 0.115065s/100 iters), loss = 0.419163
I0428 20:18:08.564182  1059 solver.cpp:238]     Train net output #0: loss = 0.419163 (* 1 = 0.419163 loss)
I0428 20:18:08.564188  1059 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:08.680634  1059 solver.cpp:219] Iteration 400 (858.69 iter/s, 0.116456s/100 iters), loss = 0.524148
I0428 20:18:08.680676  1059 solver.cpp:238]     Train net output #0: loss = 0.524148 (* 1 = 0.524148 loss)
I0428 20:18:08.680683  1059 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:08.798463  1059 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:08.862709  1066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:08.865092  1059 solver.cpp:398]     Test net output #0: accuracy = 0.8596
I0428 20:18:08.865128  1059 solver.cpp:398]     Test net output #1: loss = 0.396678 (* 1 = 0.396678 loss)
I0428 20:18:08.866271  1059 solver.cpp:219] Iteration 500 (538.841 iter/s, 0.185584s/100 iters), loss = 0.413863
I0428 20:18:08.866324  1059 solver.cpp:238]     Train net output #0: loss = 0.413863 (* 1 = 0.413863 loss)
I0428 20:18:08.866348  1059 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:08.988953  1059 solver.cpp:219] Iteration 600 (815.576 iter/s, 0.122613s/100 iters), loss = 0.42182
I0428 20:18:08.989003  1059 solver.cpp:238]     Train net output #0: loss = 0.42182 (* 1 = 0.42182 loss)
I0428 20:18:08.989027  1059 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:09.125468  1059 solver.cpp:219] Iteration 700 (732.841 iter/s, 0.136455s/100 iters), loss = 0.243292
I0428 20:18:09.125500  1059 solver.cpp:238]     Train net output #0: loss = 0.243293 (* 1 = 0.243293 loss)
I0428 20:18:09.125509  1059 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:09.248741  1059 solver.cpp:219] Iteration 800 (811.496 iter/s, 0.123229s/100 iters), loss = 0.531979
I0428 20:18:09.248771  1059 solver.cpp:238]     Train net output #0: loss = 0.531979 (* 1 = 0.531979 loss)
I0428 20:18:09.248778  1059 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:09.375280  1059 solver.cpp:219] Iteration 900 (790.528 iter/s, 0.126498s/100 iters), loss = 0.689585
I0428 20:18:09.375313  1059 solver.cpp:238]     Train net output #0: loss = 0.689585 (* 1 = 0.689585 loss)
I0428 20:18:09.375321  1059 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:09.417666  1065 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:09.503600  1059 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:09.504848  1059 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:09.505700  1059 solver.cpp:311] Iteration 1000, loss = 0.417871
I0428 20:18:09.505720  1059 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:09.575212  1066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:09.576364  1059 solver.cpp:398]     Test net output #0: accuracy = 0.8752
I0428 20:18:09.576385  1059 solver.cpp:398]     Test net output #1: loss = 0.323305 (* 1 = 0.323305 loss)
I0428 20:18:09.576391  1059 solver.cpp:316] Optimization Done.
I0428 20:18:09.576395  1059 caffe.cpp:259] Optimization Done.
