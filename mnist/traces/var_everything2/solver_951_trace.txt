I0428 20:03:25.535254 30179 caffe.cpp:218] Using GPUs 0
I0428 20:03:25.577865 30179 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:26.178349 30179 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test951.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:26.178519 30179 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test951.prototxt
I0428 20:03:26.179091 30179 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:26.179116 30179 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:26.179255 30179 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:26.179368 30179 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:26.179491 30179 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:26.179520 30179 net.cpp:86] Creating Layer mnist
I0428 20:03:26.179532 30179 net.cpp:382] mnist -> data
I0428 20:03:26.179558 30179 net.cpp:382] mnist -> label
I0428 20:03:26.180970 30179 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:26.184139 30179 net.cpp:124] Setting up mnist
I0428 20:03:26.184159 30179 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:26.184168 30179 net.cpp:131] Top shape: 64 (64)
I0428 20:03:26.184173 30179 net.cpp:139] Memory required for data: 200960
I0428 20:03:26.184182 30179 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:26.184202 30179 net.cpp:86] Creating Layer conv0
I0428 20:03:26.184227 30179 net.cpp:408] conv0 <- data
I0428 20:03:26.184242 30179 net.cpp:382] conv0 -> conv0
I0428 20:03:26.481660 30179 net.cpp:124] Setting up conv0
I0428 20:03:26.481693 30179 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:26.481699 30179 net.cpp:139] Memory required for data: 1675520
I0428 20:03:26.481717 30179 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:26.481746 30179 net.cpp:86] Creating Layer pool0
I0428 20:03:26.481752 30179 net.cpp:408] pool0 <- conv0
I0428 20:03:26.481760 30179 net.cpp:382] pool0 -> pool0
I0428 20:03:26.481812 30179 net.cpp:124] Setting up pool0
I0428 20:03:26.481822 30179 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:26.481827 30179 net.cpp:139] Memory required for data: 2044160
I0428 20:03:26.481830 30179 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:26.481844 30179 net.cpp:86] Creating Layer conv1
I0428 20:03:26.481850 30179 net.cpp:408] conv1 <- pool0
I0428 20:03:26.481856 30179 net.cpp:382] conv1 -> conv1
I0428 20:03:26.484516 30179 net.cpp:124] Setting up conv1
I0428 20:03:26.484549 30179 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:26.484553 30179 net.cpp:139] Memory required for data: 3682560
I0428 20:03:26.484565 30179 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:26.484589 30179 net.cpp:86] Creating Layer pool1
I0428 20:03:26.484594 30179 net.cpp:408] pool1 <- conv1
I0428 20:03:26.484601 30179 net.cpp:382] pool1 -> pool1
I0428 20:03:26.484660 30179 net.cpp:124] Setting up pool1
I0428 20:03:26.484670 30179 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:26.484678 30179 net.cpp:139] Memory required for data: 4092160
I0428 20:03:26.484683 30179 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:26.484691 30179 net.cpp:86] Creating Layer ip1
I0428 20:03:26.484697 30179 net.cpp:408] ip1 <- pool1
I0428 20:03:26.484704 30179 net.cpp:382] ip1 -> ip1
I0428 20:03:26.486208 30179 net.cpp:124] Setting up ip1
I0428 20:03:26.486239 30179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:26.486243 30179 net.cpp:139] Memory required for data: 4094720
I0428 20:03:26.486254 30179 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:26.486263 30179 net.cpp:86] Creating Layer relu1
I0428 20:03:26.486268 30179 net.cpp:408] relu1 <- ip1
I0428 20:03:26.486274 30179 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:26.486476 30179 net.cpp:124] Setting up relu1
I0428 20:03:26.486487 30179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:26.486492 30179 net.cpp:139] Memory required for data: 4097280
I0428 20:03:26.486500 30179 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:26.486510 30179 net.cpp:86] Creating Layer ip2
I0428 20:03:26.486515 30179 net.cpp:408] ip2 <- ip1
I0428 20:03:26.486522 30179 net.cpp:382] ip2 -> ip2
I0428 20:03:26.486639 30179 net.cpp:124] Setting up ip2
I0428 20:03:26.486649 30179 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:26.486654 30179 net.cpp:139] Memory required for data: 4103680
I0428 20:03:26.486661 30179 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:26.486670 30179 net.cpp:86] Creating Layer relu2
I0428 20:03:26.486676 30179 net.cpp:408] relu2 <- ip2
I0428 20:03:26.486682 30179 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:26.487674 30179 net.cpp:124] Setting up relu2
I0428 20:03:26.487689 30179 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:26.487695 30179 net.cpp:139] Memory required for data: 4110080
I0428 20:03:26.487700 30179 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:26.487709 30179 net.cpp:86] Creating Layer ip3
I0428 20:03:26.487716 30179 net.cpp:408] ip3 <- ip2
I0428 20:03:26.487723 30179 net.cpp:382] ip3 -> ip3
I0428 20:03:26.487856 30179 net.cpp:124] Setting up ip3
I0428 20:03:26.487865 30179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:26.487870 30179 net.cpp:139] Memory required for data: 4112640
I0428 20:03:26.487881 30179 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:26.487890 30179 net.cpp:86] Creating Layer relu3
I0428 20:03:26.487895 30179 net.cpp:408] relu3 <- ip3
I0428 20:03:26.487900 30179 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:26.488157 30179 net.cpp:124] Setting up relu3
I0428 20:03:26.488168 30179 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:26.488174 30179 net.cpp:139] Memory required for data: 4115200
I0428 20:03:26.488179 30179 layer_factory.hpp:77] Creating layer loss
I0428 20:03:26.488188 30179 net.cpp:86] Creating Layer loss
I0428 20:03:26.488193 30179 net.cpp:408] loss <- ip3
I0428 20:03:26.488200 30179 net.cpp:408] loss <- label
I0428 20:03:26.488209 30179 net.cpp:382] loss -> loss
I0428 20:03:26.488232 30179 layer_factory.hpp:77] Creating layer loss
I0428 20:03:26.488539 30179 net.cpp:124] Setting up loss
I0428 20:03:26.488550 30179 net.cpp:131] Top shape: (1)
I0428 20:03:26.488556 30179 net.cpp:134]     with loss weight 1
I0428 20:03:26.488574 30179 net.cpp:139] Memory required for data: 4115204
I0428 20:03:26.488579 30179 net.cpp:200] loss needs backward computation.
I0428 20:03:26.488584 30179 net.cpp:200] relu3 needs backward computation.
I0428 20:03:26.488589 30179 net.cpp:200] ip3 needs backward computation.
I0428 20:03:26.488593 30179 net.cpp:200] relu2 needs backward computation.
I0428 20:03:26.488597 30179 net.cpp:200] ip2 needs backward computation.
I0428 20:03:26.488601 30179 net.cpp:200] relu1 needs backward computation.
I0428 20:03:26.488605 30179 net.cpp:200] ip1 needs backward computation.
I0428 20:03:26.488610 30179 net.cpp:200] pool1 needs backward computation.
I0428 20:03:26.488616 30179 net.cpp:200] conv1 needs backward computation.
I0428 20:03:26.488621 30179 net.cpp:200] pool0 needs backward computation.
I0428 20:03:26.488626 30179 net.cpp:200] conv0 needs backward computation.
I0428 20:03:26.488631 30179 net.cpp:202] mnist does not need backward computation.
I0428 20:03:26.488636 30179 net.cpp:244] This network produces output loss
I0428 20:03:26.488648 30179 net.cpp:257] Network initialization done.
I0428 20:03:26.489184 30179 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test951.prototxt
I0428 20:03:26.489223 30179 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:26.489351 30179 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:26.489498 30179 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:26.489552 30179 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:26.489567 30179 net.cpp:86] Creating Layer mnist
I0428 20:03:26.489573 30179 net.cpp:382] mnist -> data
I0428 20:03:26.489584 30179 net.cpp:382] mnist -> label
I0428 20:03:26.489711 30179 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:26.492293 30179 net.cpp:124] Setting up mnist
I0428 20:03:26.492310 30179 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:26.492316 30179 net.cpp:131] Top shape: 100 (100)
I0428 20:03:26.492336 30179 net.cpp:139] Memory required for data: 314000
I0428 20:03:26.492341 30179 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:26.492367 30179 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:26.492372 30179 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:26.492382 30179 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:26.492390 30179 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:26.492475 30179 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:26.492486 30179 net.cpp:131] Top shape: 100 (100)
I0428 20:03:26.492491 30179 net.cpp:131] Top shape: 100 (100)
I0428 20:03:26.492496 30179 net.cpp:139] Memory required for data: 314800
I0428 20:03:26.492501 30179 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:26.492514 30179 net.cpp:86] Creating Layer conv0
I0428 20:03:26.492521 30179 net.cpp:408] conv0 <- data
I0428 20:03:26.492528 30179 net.cpp:382] conv0 -> conv0
I0428 20:03:26.494688 30179 net.cpp:124] Setting up conv0
I0428 20:03:26.494705 30179 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:26.494717 30179 net.cpp:139] Memory required for data: 2618800
I0428 20:03:26.494730 30179 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:26.494740 30179 net.cpp:86] Creating Layer pool0
I0428 20:03:26.494753 30179 net.cpp:408] pool0 <- conv0
I0428 20:03:26.494761 30179 net.cpp:382] pool0 -> pool0
I0428 20:03:26.494808 30179 net.cpp:124] Setting up pool0
I0428 20:03:26.494837 30179 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:26.494844 30179 net.cpp:139] Memory required for data: 3194800
I0428 20:03:26.494848 30179 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:26.494863 30179 net.cpp:86] Creating Layer conv1
I0428 20:03:26.494869 30179 net.cpp:408] conv1 <- pool0
I0428 20:03:26.494892 30179 net.cpp:382] conv1 -> conv1
I0428 20:03:26.497252 30179 net.cpp:124] Setting up conv1
I0428 20:03:26.497268 30179 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:26.497273 30179 net.cpp:139] Memory required for data: 5754800
I0428 20:03:26.497284 30179 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:26.497293 30179 net.cpp:86] Creating Layer pool1
I0428 20:03:26.497298 30179 net.cpp:408] pool1 <- conv1
I0428 20:03:26.497305 30179 net.cpp:382] pool1 -> pool1
I0428 20:03:26.497385 30179 net.cpp:124] Setting up pool1
I0428 20:03:26.497396 30179 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:26.497400 30179 net.cpp:139] Memory required for data: 6394800
I0428 20:03:26.497406 30179 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:26.497414 30179 net.cpp:86] Creating Layer ip1
I0428 20:03:26.497418 30179 net.cpp:408] ip1 <- pool1
I0428 20:03:26.497426 30179 net.cpp:382] ip1 -> ip1
I0428 20:03:26.497694 30179 net.cpp:124] Setting up ip1
I0428 20:03:26.497704 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.497722 30179 net.cpp:139] Memory required for data: 6398800
I0428 20:03:26.497735 30179 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:26.497742 30179 net.cpp:86] Creating Layer relu1
I0428 20:03:26.497747 30179 net.cpp:408] relu1 <- ip1
I0428 20:03:26.497753 30179 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:26.497990 30179 net.cpp:124] Setting up relu1
I0428 20:03:26.498001 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.498006 30179 net.cpp:139] Memory required for data: 6402800
I0428 20:03:26.498010 30179 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:26.498019 30179 net.cpp:86] Creating Layer ip2
I0428 20:03:26.498025 30179 net.cpp:408] ip2 <- ip1
I0428 20:03:26.498034 30179 net.cpp:382] ip2 -> ip2
I0428 20:03:26.498172 30179 net.cpp:124] Setting up ip2
I0428 20:03:26.498194 30179 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:26.498216 30179 net.cpp:139] Memory required for data: 6412800
I0428 20:03:26.498224 30179 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:26.498231 30179 net.cpp:86] Creating Layer relu2
I0428 20:03:26.498237 30179 net.cpp:408] relu2 <- ip2
I0428 20:03:26.498246 30179 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:26.498445 30179 net.cpp:124] Setting up relu2
I0428 20:03:26.498456 30179 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:26.498461 30179 net.cpp:139] Memory required for data: 6422800
I0428 20:03:26.498466 30179 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:26.498474 30179 net.cpp:86] Creating Layer ip3
I0428 20:03:26.498479 30179 net.cpp:408] ip3 <- ip2
I0428 20:03:26.498486 30179 net.cpp:382] ip3 -> ip3
I0428 20:03:26.498620 30179 net.cpp:124] Setting up ip3
I0428 20:03:26.498628 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.498633 30179 net.cpp:139] Memory required for data: 6426800
I0428 20:03:26.498643 30179 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:26.498652 30179 net.cpp:86] Creating Layer relu3
I0428 20:03:26.498658 30179 net.cpp:408] relu3 <- ip3
I0428 20:03:26.498663 30179 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:26.499683 30179 net.cpp:124] Setting up relu3
I0428 20:03:26.499698 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.499704 30179 net.cpp:139] Memory required for data: 6430800
I0428 20:03:26.499709 30179 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:26.499732 30179 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:26.499739 30179 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:26.499745 30179 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:26.499754 30179 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:26.499817 30179 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:26.499826 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.499833 30179 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:26.499836 30179 net.cpp:139] Memory required for data: 6438800
I0428 20:03:26.499840 30179 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:26.499847 30179 net.cpp:86] Creating Layer accuracy
I0428 20:03:26.499852 30179 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:26.499857 30179 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:26.499866 30179 net.cpp:382] accuracy -> accuracy
I0428 20:03:26.499876 30179 net.cpp:124] Setting up accuracy
I0428 20:03:26.499882 30179 net.cpp:131] Top shape: (1)
I0428 20:03:26.499886 30179 net.cpp:139] Memory required for data: 6438804
I0428 20:03:26.499905 30179 layer_factory.hpp:77] Creating layer loss
I0428 20:03:26.499912 30179 net.cpp:86] Creating Layer loss
I0428 20:03:26.499917 30179 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:26.499922 30179 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:26.499945 30179 net.cpp:382] loss -> loss
I0428 20:03:26.499955 30179 layer_factory.hpp:77] Creating layer loss
I0428 20:03:26.500257 30179 net.cpp:124] Setting up loss
I0428 20:03:26.500269 30179 net.cpp:131] Top shape: (1)
I0428 20:03:26.500274 30179 net.cpp:134]     with loss weight 1
I0428 20:03:26.500294 30179 net.cpp:139] Memory required for data: 6438808
I0428 20:03:26.500299 30179 net.cpp:200] loss needs backward computation.
I0428 20:03:26.500304 30179 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:26.500310 30179 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:26.500315 30179 net.cpp:200] relu3 needs backward computation.
I0428 20:03:26.500319 30179 net.cpp:200] ip3 needs backward computation.
I0428 20:03:26.500339 30179 net.cpp:200] relu2 needs backward computation.
I0428 20:03:26.500344 30179 net.cpp:200] ip2 needs backward computation.
I0428 20:03:26.500347 30179 net.cpp:200] relu1 needs backward computation.
I0428 20:03:26.500351 30179 net.cpp:200] ip1 needs backward computation.
I0428 20:03:26.500355 30179 net.cpp:200] pool1 needs backward computation.
I0428 20:03:26.500360 30179 net.cpp:200] conv1 needs backward computation.
I0428 20:03:26.500365 30179 net.cpp:200] pool0 needs backward computation.
I0428 20:03:26.500370 30179 net.cpp:200] conv0 needs backward computation.
I0428 20:03:26.500375 30179 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:26.500380 30179 net.cpp:202] mnist does not need backward computation.
I0428 20:03:26.500385 30179 net.cpp:244] This network produces output accuracy
I0428 20:03:26.500389 30179 net.cpp:244] This network produces output loss
I0428 20:03:26.500404 30179 net.cpp:257] Network initialization done.
I0428 20:03:26.500458 30179 solver.cpp:56] Solver scaffolding done.
I0428 20:03:26.500916 30179 caffe.cpp:248] Starting Optimization
I0428 20:03:26.500941 30179 solver.cpp:273] Solving LeNet
I0428 20:03:26.500946 30179 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:26.501202 30179 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:26.565440 30187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:26.567704 30179 solver.cpp:398]     Test net output #0: accuracy = 0.122
I0428 20:03:26.567728 30179 solver.cpp:398]     Test net output #1: loss = 2.30352 (* 1 = 2.30352 loss)
I0428 20:03:26.572098 30179 solver.cpp:219] Iteration 0 (-5.66272e-31 iter/s, 0.0711178s/100 iters), loss = 2.30312
I0428 20:03:26.572141 30179 solver.cpp:238]     Train net output #0: loss = 2.30312 (* 1 = 2.30312 loss)
I0428 20:03:26.572171 30179 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:26.733918 30179 solver.cpp:219] Iteration 100 (618.195 iter/s, 0.161761s/100 iters), loss = 1.41327
I0428 20:03:26.733965 30179 solver.cpp:238]     Train net output #0: loss = 1.41327 (* 1 = 1.41327 loss)
I0428 20:03:26.733974 30179 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:26.896477 30179 solver.cpp:219] Iteration 200 (615.39 iter/s, 0.162499s/100 iters), loss = 0.869509
I0428 20:03:26.896505 30179 solver.cpp:238]     Train net output #0: loss = 0.869509 (* 1 = 0.869509 loss)
I0428 20:03:26.896513 30179 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:27.057483 30179 solver.cpp:219] Iteration 300 (621.255 iter/s, 0.160965s/100 iters), loss = 0.592687
I0428 20:03:27.057528 30179 solver.cpp:238]     Train net output #0: loss = 0.592687 (* 1 = 0.592687 loss)
I0428 20:03:27.057535 30179 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:27.218631 30179 solver.cpp:219] Iteration 400 (620.772 iter/s, 0.16109s/100 iters), loss = 0.499272
I0428 20:03:27.218675 30179 solver.cpp:238]     Train net output #0: loss = 0.499272 (* 1 = 0.499272 loss)
I0428 20:03:27.218683 30179 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:27.373718 30179 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:27.432116 30187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:27.433737 30179 solver.cpp:398]     Test net output #0: accuracy = 0.7464
I0428 20:03:27.433759 30179 solver.cpp:398]     Test net output #1: loss = 0.653857 (* 1 = 0.653857 loss)
I0428 20:03:27.435303 30179 solver.cpp:219] Iteration 500 (461.651 iter/s, 0.216614s/100 iters), loss = 0.687238
I0428 20:03:27.435326 30179 solver.cpp:238]     Train net output #0: loss = 0.687238 (* 1 = 0.687238 loss)
I0428 20:03:27.435364 30179 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:27.593508 30179 solver.cpp:219] Iteration 600 (632.243 iter/s, 0.158167s/100 iters), loss = 0.78405
I0428 20:03:27.593536 30179 solver.cpp:238]     Train net output #0: loss = 0.78405 (* 1 = 0.78405 loss)
I0428 20:03:27.593545 30179 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:27.746161 30179 solver.cpp:219] Iteration 700 (655.248 iter/s, 0.152614s/100 iters), loss = 0.565863
I0428 20:03:27.746201 30179 solver.cpp:238]     Train net output #0: loss = 0.565863 (* 1 = 0.565863 loss)
I0428 20:03:27.746208 30179 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:27.913857 30179 solver.cpp:219] Iteration 800 (596.472 iter/s, 0.167652s/100 iters), loss = 0.679696
I0428 20:03:27.913909 30179 solver.cpp:238]     Train net output #0: loss = 0.679696 (* 1 = 0.679696 loss)
I0428 20:03:27.913923 30179 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:28.100103 30179 solver.cpp:219] Iteration 900 (537.116 iter/s, 0.186179s/100 iters), loss = 0.824398
I0428 20:03:28.100157 30179 solver.cpp:238]     Train net output #0: loss = 0.824398 (* 1 = 0.824398 loss)
I0428 20:03:28.100170 30179 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:28.162097 30186 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:28.285425 30179 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:28.287901 30179 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:28.289134 30179 solver.cpp:311] Iteration 1000, loss = 0.649359
I0428 20:03:28.289162 30179 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:28.302537 30179 blocking_queue.cpp:49] Waiting for data
I0428 20:03:28.355970 30187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:28.358119 30179 solver.cpp:398]     Test net output #0: accuracy = 0.7647
I0428 20:03:28.358156 30179 solver.cpp:398]     Test net output #1: loss = 0.579529 (* 1 = 0.579529 loss)
I0428 20:03:28.358162 30179 solver.cpp:316] Optimization Done.
I0428 20:03:28.358166 30179 caffe.cpp:259] Optimization Done.
