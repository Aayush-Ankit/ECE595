I0428 20:24:57.493655  2515 caffe.cpp:218] Using GPUs 0
I0428 20:24:57.523571  2515 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:57.963951  2515 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1446.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:57.964107  2515 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1446.prototxt
I0428 20:24:57.964427  2515 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:57.964444  2515 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:57.964521  2515 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:24:57.964602  2515 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:57.964710  2515 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:57.964737  2515 net.cpp:86] Creating Layer mnist
I0428 20:24:57.964746  2515 net.cpp:382] mnist -> data
I0428 20:24:57.964772  2515 net.cpp:382] mnist -> label
I0428 20:24:57.965852  2515 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:57.967878  2515 net.cpp:124] Setting up mnist
I0428 20:24:57.967905  2515 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:57.967911  2515 net.cpp:131] Top shape: 64 (64)
I0428 20:24:57.967913  2515 net.cpp:139] Memory required for data: 200960
I0428 20:24:57.967918  2515 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:57.967931  2515 net.cpp:86] Creating Layer conv0
I0428 20:24:57.967936  2515 net.cpp:408] conv0 <- data
I0428 20:24:57.967943  2515 net.cpp:382] conv0 -> conv0
I0428 20:24:58.284579  2515 net.cpp:124] Setting up conv0
I0428 20:24:58.284612  2515 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:24:58.284617  2515 net.cpp:139] Memory required for data: 14946560
I0428 20:24:58.284659  2515 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:58.284679  2515 net.cpp:86] Creating Layer pool0
I0428 20:24:58.284683  2515 net.cpp:408] pool0 <- conv0
I0428 20:24:58.284690  2515 net.cpp:382] pool0 -> pool0
I0428 20:24:58.284749  2515 net.cpp:124] Setting up pool0
I0428 20:24:58.284757  2515 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:24:58.284761  2515 net.cpp:139] Memory required for data: 18632960
I0428 20:24:58.284765  2515 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:58.284777  2515 net.cpp:86] Creating Layer conv1
I0428 20:24:58.284783  2515 net.cpp:408] conv1 <- pool0
I0428 20:24:58.284790  2515 net.cpp:382] conv1 -> conv1
I0428 20:24:58.287979  2515 net.cpp:124] Setting up conv1
I0428 20:24:58.287997  2515 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:24:58.288002  2515 net.cpp:139] Memory required for data: 18665728
I0428 20:24:58.288012  2515 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:58.288022  2515 net.cpp:86] Creating Layer pool1
I0428 20:24:58.288027  2515 net.cpp:408] pool1 <- conv1
I0428 20:24:58.288033  2515 net.cpp:382] pool1 -> pool1
I0428 20:24:58.288087  2515 net.cpp:124] Setting up pool1
I0428 20:24:58.288095  2515 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:24:58.288100  2515 net.cpp:139] Memory required for data: 18673920
I0428 20:24:58.288102  2515 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:58.288110  2515 net.cpp:86] Creating Layer ip1
I0428 20:24:58.288116  2515 net.cpp:408] ip1 <- pool1
I0428 20:24:58.288122  2515 net.cpp:382] ip1 -> ip1
I0428 20:24:58.288246  2515 net.cpp:124] Setting up ip1
I0428 20:24:58.288255  2515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:58.288259  2515 net.cpp:139] Memory required for data: 18676480
I0428 20:24:58.288269  2515 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:58.288276  2515 net.cpp:86] Creating Layer relu1
I0428 20:24:58.288283  2515 net.cpp:408] relu1 <- ip1
I0428 20:24:58.288288  2515 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:58.288494  2515 net.cpp:124] Setting up relu1
I0428 20:24:58.288506  2515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:58.288509  2515 net.cpp:139] Memory required for data: 18679040
I0428 20:24:58.288513  2515 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:58.288521  2515 net.cpp:86] Creating Layer ip2
I0428 20:24:58.288525  2515 net.cpp:408] ip2 <- ip1
I0428 20:24:58.288532  2515 net.cpp:382] ip2 -> ip2
I0428 20:24:58.288643  2515 net.cpp:124] Setting up ip2
I0428 20:24:58.288651  2515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:58.288655  2515 net.cpp:139] Memory required for data: 18681600
I0428 20:24:58.288661  2515 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:58.288669  2515 net.cpp:86] Creating Layer relu2
I0428 20:24:58.288673  2515 net.cpp:408] relu2 <- ip2
I0428 20:24:58.288678  2515 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:58.289976  2515 net.cpp:124] Setting up relu2
I0428 20:24:58.290005  2515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:58.290014  2515 net.cpp:139] Memory required for data: 18684160
I0428 20:24:58.290021  2515 layer_factory.hpp:77] Creating layer loss
I0428 20:24:58.290033  2515 net.cpp:86] Creating Layer loss
I0428 20:24:58.290040  2515 net.cpp:408] loss <- ip2
I0428 20:24:58.290050  2515 net.cpp:408] loss <- label
I0428 20:24:58.290061  2515 net.cpp:382] loss -> loss
I0428 20:24:58.290096  2515 layer_factory.hpp:77] Creating layer loss
I0428 20:24:58.290563  2515 net.cpp:124] Setting up loss
I0428 20:24:58.290581  2515 net.cpp:131] Top shape: (1)
I0428 20:24:58.290588  2515 net.cpp:134]     with loss weight 1
I0428 20:24:58.290611  2515 net.cpp:139] Memory required for data: 18684164
I0428 20:24:58.290618  2515 net.cpp:200] loss needs backward computation.
I0428 20:24:58.290626  2515 net.cpp:200] relu2 needs backward computation.
I0428 20:24:58.290633  2515 net.cpp:200] ip2 needs backward computation.
I0428 20:24:58.290639  2515 net.cpp:200] relu1 needs backward computation.
I0428 20:24:58.290645  2515 net.cpp:200] ip1 needs backward computation.
I0428 20:24:58.290676  2515 net.cpp:200] pool1 needs backward computation.
I0428 20:24:58.290683  2515 net.cpp:200] conv1 needs backward computation.
I0428 20:24:58.290690  2515 net.cpp:200] pool0 needs backward computation.
I0428 20:24:58.290698  2515 net.cpp:200] conv0 needs backward computation.
I0428 20:24:58.290705  2515 net.cpp:202] mnist does not need backward computation.
I0428 20:24:58.290712  2515 net.cpp:244] This network produces output loss
I0428 20:24:58.290729  2515 net.cpp:257] Network initialization done.
I0428 20:24:58.291281  2515 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1446.prototxt
I0428 20:24:58.291330  2515 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:58.291497  2515 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:24:58.291617  2515 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:58.291694  2515 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:58.291715  2515 net.cpp:86] Creating Layer mnist
I0428 20:24:58.291724  2515 net.cpp:382] mnist -> data
I0428 20:24:58.291739  2515 net.cpp:382] mnist -> label
I0428 20:24:58.291906  2515 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:58.295264  2515 net.cpp:124] Setting up mnist
I0428 20:24:58.295295  2515 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:58.295308  2515 net.cpp:131] Top shape: 100 (100)
I0428 20:24:58.295316  2515 net.cpp:139] Memory required for data: 314000
I0428 20:24:58.295325  2515 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:58.295338  2515 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:58.295347  2515 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:58.295357  2515 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:58.295372  2515 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:58.295604  2515 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:58.295619  2515 net.cpp:131] Top shape: 100 (100)
I0428 20:24:58.295629  2515 net.cpp:131] Top shape: 100 (100)
I0428 20:24:58.295634  2515 net.cpp:139] Memory required for data: 314800
I0428 20:24:58.295640  2515 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:58.295657  2515 net.cpp:86] Creating Layer conv0
I0428 20:24:58.295665  2515 net.cpp:408] conv0 <- data
I0428 20:24:58.295675  2515 net.cpp:382] conv0 -> conv0
I0428 20:24:58.298467  2515 net.cpp:124] Setting up conv0
I0428 20:24:58.298494  2515 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:24:58.298516  2515 net.cpp:139] Memory required for data: 23354800
I0428 20:24:58.298537  2515 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:58.298552  2515 net.cpp:86] Creating Layer pool0
I0428 20:24:58.298566  2515 net.cpp:408] pool0 <- conv0
I0428 20:24:58.298588  2515 net.cpp:382] pool0 -> pool0
I0428 20:24:58.298660  2515 net.cpp:124] Setting up pool0
I0428 20:24:58.298672  2515 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:24:58.298681  2515 net.cpp:139] Memory required for data: 29114800
I0428 20:24:58.298686  2515 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:58.298707  2515 net.cpp:86] Creating Layer conv1
I0428 20:24:58.298715  2515 net.cpp:408] conv1 <- pool0
I0428 20:24:58.298728  2515 net.cpp:382] conv1 -> conv1
I0428 20:24:58.301651  2515 net.cpp:124] Setting up conv1
I0428 20:24:58.301676  2515 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:24:58.301698  2515 net.cpp:139] Memory required for data: 29166000
I0428 20:24:58.301717  2515 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:58.301729  2515 net.cpp:86] Creating Layer pool1
I0428 20:24:58.301736  2515 net.cpp:408] pool1 <- conv1
I0428 20:24:58.301748  2515 net.cpp:382] pool1 -> pool1
I0428 20:24:58.301821  2515 net.cpp:124] Setting up pool1
I0428 20:24:58.301832  2515 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:24:58.301839  2515 net.cpp:139] Memory required for data: 29178800
I0428 20:24:58.301844  2515 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:58.301869  2515 net.cpp:86] Creating Layer ip1
I0428 20:24:58.301877  2515 net.cpp:408] ip1 <- pool1
I0428 20:24:58.301885  2515 net.cpp:382] ip1 -> ip1
I0428 20:24:58.302076  2515 net.cpp:124] Setting up ip1
I0428 20:24:58.302093  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.302100  2515 net.cpp:139] Memory required for data: 29182800
I0428 20:24:58.302114  2515 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:58.302126  2515 net.cpp:86] Creating Layer relu1
I0428 20:24:58.302134  2515 net.cpp:408] relu1 <- ip1
I0428 20:24:58.302141  2515 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:58.302552  2515 net.cpp:124] Setting up relu1
I0428 20:24:58.302567  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.302577  2515 net.cpp:139] Memory required for data: 29186800
I0428 20:24:58.302584  2515 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:58.302604  2515 net.cpp:86] Creating Layer ip2
I0428 20:24:58.302613  2515 net.cpp:408] ip2 <- ip1
I0428 20:24:58.302623  2515 net.cpp:382] ip2 -> ip2
I0428 20:24:58.302815  2515 net.cpp:124] Setting up ip2
I0428 20:24:58.302830  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.302837  2515 net.cpp:139] Memory required for data: 29190800
I0428 20:24:58.302847  2515 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:58.302857  2515 net.cpp:86] Creating Layer relu2
I0428 20:24:58.302865  2515 net.cpp:408] relu2 <- ip2
I0428 20:24:58.302873  2515 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:58.303171  2515 net.cpp:124] Setting up relu2
I0428 20:24:58.303185  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.303192  2515 net.cpp:139] Memory required for data: 29194800
I0428 20:24:58.303198  2515 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:24:58.303208  2515 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:24:58.303215  2515 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:24:58.303225  2515 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:24:58.303256  2515 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:24:58.303334  2515 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:24:58.303345  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.303354  2515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:58.303360  2515 net.cpp:139] Memory required for data: 29202800
I0428 20:24:58.303365  2515 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:58.303377  2515 net.cpp:86] Creating Layer accuracy
I0428 20:24:58.303385  2515 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:24:58.303391  2515 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:58.303400  2515 net.cpp:382] accuracy -> accuracy
I0428 20:24:58.303416  2515 net.cpp:124] Setting up accuracy
I0428 20:24:58.303423  2515 net.cpp:131] Top shape: (1)
I0428 20:24:58.303431  2515 net.cpp:139] Memory required for data: 29202804
I0428 20:24:58.303436  2515 layer_factory.hpp:77] Creating layer loss
I0428 20:24:58.303447  2515 net.cpp:86] Creating Layer loss
I0428 20:24:58.303454  2515 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:24:58.303462  2515 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:58.303470  2515 net.cpp:382] loss -> loss
I0428 20:24:58.303481  2515 layer_factory.hpp:77] Creating layer loss
I0428 20:24:58.303917  2515 net.cpp:124] Setting up loss
I0428 20:24:58.303931  2515 net.cpp:131] Top shape: (1)
I0428 20:24:58.303938  2515 net.cpp:134]     with loss weight 1
I0428 20:24:58.303951  2515 net.cpp:139] Memory required for data: 29202808
I0428 20:24:58.303956  2515 net.cpp:200] loss needs backward computation.
I0428 20:24:58.303964  2515 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:58.303972  2515 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:24:58.303979  2515 net.cpp:200] relu2 needs backward computation.
I0428 20:24:58.303984  2515 net.cpp:200] ip2 needs backward computation.
I0428 20:24:58.303990  2515 net.cpp:200] relu1 needs backward computation.
I0428 20:24:58.303997  2515 net.cpp:200] ip1 needs backward computation.
I0428 20:24:58.304003  2515 net.cpp:200] pool1 needs backward computation.
I0428 20:24:58.304008  2515 net.cpp:200] conv1 needs backward computation.
I0428 20:24:58.304015  2515 net.cpp:200] pool0 needs backward computation.
I0428 20:24:58.304020  2515 net.cpp:200] conv0 needs backward computation.
I0428 20:24:58.304030  2515 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:58.304049  2515 net.cpp:202] mnist does not need backward computation.
I0428 20:24:58.304054  2515 net.cpp:244] This network produces output accuracy
I0428 20:24:58.304059  2515 net.cpp:244] This network produces output loss
I0428 20:24:58.304078  2515 net.cpp:257] Network initialization done.
I0428 20:24:58.304147  2515 solver.cpp:56] Solver scaffolding done.
I0428 20:24:58.304635  2515 caffe.cpp:248] Starting Optimization
I0428 20:24:58.304644  2515 solver.cpp:273] Solving LeNet
I0428 20:24:58.304649  2515 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:58.305927  2515 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:58.407230  2522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:58.409510  2515 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 20:24:58.409533  2515 solver.cpp:398]     Test net output #1: loss = 2.31769 (* 1 = 2.31769 loss)
I0428 20:24:58.414413  2515 solver.cpp:219] Iteration 0 (-1.84424e-34 iter/s, 0.109729s/100 iters), loss = 2.32907
I0428 20:24:58.414444  2515 solver.cpp:238]     Train net output #0: loss = 2.32907 (* 1 = 2.32907 loss)
I0428 20:24:58.414458  2515 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:58.615979  2515 solver.cpp:219] Iteration 100 (496.261 iter/s, 0.201507s/100 iters), loss = 0.672207
I0428 20:24:58.616039  2515 solver.cpp:238]     Train net output #0: loss = 0.672207 (* 1 = 0.672207 loss)
I0428 20:24:58.616055  2515 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:58.834328  2515 solver.cpp:219] Iteration 200 (458.14 iter/s, 0.218274s/100 iters), loss = 0.569964
I0428 20:24:58.834409  2515 solver.cpp:238]     Train net output #0: loss = 0.569964 (* 1 = 0.569964 loss)
I0428 20:24:58.834424  2515 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:59.050318  2515 solver.cpp:219] Iteration 300 (463.184 iter/s, 0.215897s/100 iters), loss = 0.650065
I0428 20:24:59.050359  2515 solver.cpp:238]     Train net output #0: loss = 0.650065 (* 1 = 0.650065 loss)
I0428 20:24:59.050369  2515 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:59.256446  2515 solver.cpp:219] Iteration 400 (485.277 iter/s, 0.206068s/100 iters), loss = 0.583444
I0428 20:24:59.256505  2515 solver.cpp:238]     Train net output #0: loss = 0.583444 (* 1 = 0.583444 loss)
I0428 20:24:59.256518  2515 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:59.468762  2515 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:59.570327  2522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:59.572928  2515 solver.cpp:398]     Test net output #0: accuracy = 0.8262
I0428 20:24:59.572957  2515 solver.cpp:398]     Test net output #1: loss = 0.533407 (* 1 = 0.533407 loss)
I0428 20:24:59.574859  2515 solver.cpp:219] Iteration 500 (314.13 iter/s, 0.318339s/100 iters), loss = 0.627934
I0428 20:24:59.574888  2515 solver.cpp:238]     Train net output #0: loss = 0.627934 (* 1 = 0.627934 loss)
I0428 20:24:59.574898  2515 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:59.787001  2515 solver.cpp:219] Iteration 600 (471.498 iter/s, 0.21209s/100 iters), loss = 0.56741
I0428 20:24:59.787062  2515 solver.cpp:238]     Train net output #0: loss = 0.56741 (* 1 = 0.56741 loss)
I0428 20:24:59.787076  2515 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:00.003119  2515 solver.cpp:219] Iteration 700 (462.874 iter/s, 0.216041s/100 iters), loss = 0.598705
I0428 20:25:00.003172  2515 solver.cpp:238]     Train net output #0: loss = 0.598705 (* 1 = 0.598705 loss)
I0428 20:25:00.003185  2515 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:00.216795  2515 solver.cpp:219] Iteration 800 (468.151 iter/s, 0.213606s/100 iters), loss = 0.597013
I0428 20:25:00.216856  2515 solver.cpp:238]     Train net output #0: loss = 0.597013 (* 1 = 0.597013 loss)
I0428 20:25:00.216868  2515 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:00.426997  2515 solver.cpp:219] Iteration 900 (475.908 iter/s, 0.210125s/100 iters), loss = 0.633375
I0428 20:25:00.427047  2515 solver.cpp:238]     Train net output #0: loss = 0.633375 (* 1 = 0.633375 loss)
I0428 20:25:00.427059  2515 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:00.497527  2521 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:00.636932  2515 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:00.638604  2515 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:00.639693  2515 solver.cpp:311] Iteration 1000, loss = 0.497783
I0428 20:25:00.639721  2515 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:00.738955  2522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:00.741569  2515 solver.cpp:398]     Test net output #0: accuracy = 0.8559
I0428 20:25:00.741593  2515 solver.cpp:398]     Test net output #1: loss = 0.411674 (* 1 = 0.411674 loss)
I0428 20:25:00.741600  2515 solver.cpp:316] Optimization Done.
I0428 20:25:00.741603  2515 caffe.cpp:259] Optimization Done.
