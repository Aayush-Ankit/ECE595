I0428 19:37:21.685307 23805 caffe.cpp:218] Using GPUs 0
I0428 19:37:21.722513 23805 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:22.187198 23805 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test257.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:22.187330 23805 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test257.prototxt
I0428 19:37:22.187651 23805 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:22.187681 23805 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:22.187752 23805 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:22.187811 23805 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:22.187904 23805 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:22.187922 23805 net.cpp:86] Creating Layer mnist
I0428 19:37:22.187929 23805 net.cpp:382] mnist -> data
I0428 19:37:22.187947 23805 net.cpp:382] mnist -> label
I0428 19:37:22.188895 23805 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:22.191313 23805 net.cpp:124] Setting up mnist
I0428 19:37:22.191359 23805 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:22.191381 23805 net.cpp:131] Top shape: 64 (64)
I0428 19:37:22.191385 23805 net.cpp:139] Memory required for data: 200960
I0428 19:37:22.191390 23805 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:22.191402 23805 net.cpp:86] Creating Layer conv0
I0428 19:37:22.191407 23805 net.cpp:408] conv0 <- data
I0428 19:37:22.191417 23805 net.cpp:382] conv0 -> conv0
I0428 19:37:22.421299 23805 net.cpp:124] Setting up conv0
I0428 19:37:22.421325 23805 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:22.421329 23805 net.cpp:139] Memory required for data: 14946560
I0428 19:37:22.421344 23805 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:22.421357 23805 net.cpp:86] Creating Layer pool0
I0428 19:37:22.421393 23805 net.cpp:408] pool0 <- conv0
I0428 19:37:22.421401 23805 net.cpp:382] pool0 -> pool0
I0428 19:37:22.421447 23805 net.cpp:124] Setting up pool0
I0428 19:37:22.421453 23805 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:22.421456 23805 net.cpp:139] Memory required for data: 18632960
I0428 19:37:22.421459 23805 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:22.421466 23805 net.cpp:86] Creating Layer ip1
I0428 19:37:22.421469 23805 net.cpp:408] ip1 <- pool0
I0428 19:37:22.421476 23805 net.cpp:382] ip1 -> ip1
I0428 19:37:22.424595 23805 net.cpp:124] Setting up ip1
I0428 19:37:22.424608 23805 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:22.424628 23805 net.cpp:139] Memory required for data: 18639360
I0428 19:37:22.424635 23805 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:22.424643 23805 net.cpp:86] Creating Layer relu1
I0428 19:37:22.424645 23805 net.cpp:408] relu1 <- ip1
I0428 19:37:22.424649 23805 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:22.424845 23805 net.cpp:124] Setting up relu1
I0428 19:37:22.424854 23805 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:22.424857 23805 net.cpp:139] Memory required for data: 18645760
I0428 19:37:22.424860 23805 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:22.424867 23805 net.cpp:86] Creating Layer ip2
I0428 19:37:22.424886 23805 net.cpp:408] ip2 <- ip1
I0428 19:37:22.424892 23805 net.cpp:382] ip2 -> ip2
I0428 19:37:22.425026 23805 net.cpp:124] Setting up ip2
I0428 19:37:22.425034 23805 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:22.425037 23805 net.cpp:139] Memory required for data: 18648320
I0428 19:37:22.425046 23805 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:22.425052 23805 net.cpp:86] Creating Layer relu2
I0428 19:37:22.425055 23805 net.cpp:408] relu2 <- ip2
I0428 19:37:22.425060 23805 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:22.425927 23805 net.cpp:124] Setting up relu2
I0428 19:37:22.425953 23805 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:22.425973 23805 net.cpp:139] Memory required for data: 18650880
I0428 19:37:22.425976 23805 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:22.425983 23805 net.cpp:86] Creating Layer ip3
I0428 19:37:22.425987 23805 net.cpp:408] ip3 <- ip2
I0428 19:37:22.425992 23805 net.cpp:382] ip3 -> ip3
I0428 19:37:22.426084 23805 net.cpp:124] Setting up ip3
I0428 19:37:22.426090 23805 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:22.426092 23805 net.cpp:139] Memory required for data: 18653440
I0428 19:37:22.426098 23805 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:22.426105 23805 net.cpp:86] Creating Layer relu3
I0428 19:37:22.426107 23805 net.cpp:408] relu3 <- ip3
I0428 19:37:22.426111 23805 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:22.426270 23805 net.cpp:124] Setting up relu3
I0428 19:37:22.426276 23805 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:22.426280 23805 net.cpp:139] Memory required for data: 18656000
I0428 19:37:22.426282 23805 layer_factory.hpp:77] Creating layer loss
I0428 19:37:22.426287 23805 net.cpp:86] Creating Layer loss
I0428 19:37:22.426290 23805 net.cpp:408] loss <- ip3
I0428 19:37:22.426295 23805 net.cpp:408] loss <- label
I0428 19:37:22.426300 23805 net.cpp:382] loss -> loss
I0428 19:37:22.426312 23805 layer_factory.hpp:77] Creating layer loss
I0428 19:37:22.426532 23805 net.cpp:124] Setting up loss
I0428 19:37:22.426540 23805 net.cpp:131] Top shape: (1)
I0428 19:37:22.426543 23805 net.cpp:134]     with loss weight 1
I0428 19:37:22.426556 23805 net.cpp:139] Memory required for data: 18656004
I0428 19:37:22.426560 23805 net.cpp:200] loss needs backward computation.
I0428 19:37:22.426563 23805 net.cpp:200] relu3 needs backward computation.
I0428 19:37:22.426566 23805 net.cpp:200] ip3 needs backward computation.
I0428 19:37:22.426569 23805 net.cpp:200] relu2 needs backward computation.
I0428 19:37:22.426573 23805 net.cpp:200] ip2 needs backward computation.
I0428 19:37:22.426574 23805 net.cpp:200] relu1 needs backward computation.
I0428 19:37:22.426578 23805 net.cpp:200] ip1 needs backward computation.
I0428 19:37:22.426590 23805 net.cpp:200] pool0 needs backward computation.
I0428 19:37:22.426594 23805 net.cpp:200] conv0 needs backward computation.
I0428 19:37:22.426596 23805 net.cpp:202] mnist does not need backward computation.
I0428 19:37:22.426599 23805 net.cpp:244] This network produces output loss
I0428 19:37:22.426607 23805 net.cpp:257] Network initialization done.
I0428 19:37:22.426928 23805 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test257.prototxt
I0428 19:37:22.426954 23805 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:22.427055 23805 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:22.427144 23805 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:22.427186 23805 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:22.427197 23805 net.cpp:86] Creating Layer mnist
I0428 19:37:22.427202 23805 net.cpp:382] mnist -> data
I0428 19:37:22.427209 23805 net.cpp:382] mnist -> label
I0428 19:37:22.427289 23805 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:22.429567 23805 net.cpp:124] Setting up mnist
I0428 19:37:22.429595 23805 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:22.429600 23805 net.cpp:131] Top shape: 100 (100)
I0428 19:37:22.429605 23805 net.cpp:139] Memory required for data: 314000
I0428 19:37:22.429607 23805 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:22.429615 23805 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:22.429617 23805 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:22.429621 23805 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:22.429627 23805 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:22.429661 23805 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:22.429666 23805 net.cpp:131] Top shape: 100 (100)
I0428 19:37:22.429668 23805 net.cpp:131] Top shape: 100 (100)
I0428 19:37:22.429672 23805 net.cpp:139] Memory required for data: 314800
I0428 19:37:22.429683 23805 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:22.429692 23805 net.cpp:86] Creating Layer conv0
I0428 19:37:22.429694 23805 net.cpp:408] conv0 <- data
I0428 19:37:22.429698 23805 net.cpp:382] conv0 -> conv0
I0428 19:37:22.431324 23805 net.cpp:124] Setting up conv0
I0428 19:37:22.431336 23805 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:22.431339 23805 net.cpp:139] Memory required for data: 23354800
I0428 19:37:22.431349 23805 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:22.431354 23805 net.cpp:86] Creating Layer pool0
I0428 19:37:22.431357 23805 net.cpp:408] pool0 <- conv0
I0428 19:37:22.431361 23805 net.cpp:382] pool0 -> pool0
I0428 19:37:22.431409 23805 net.cpp:124] Setting up pool0
I0428 19:37:22.431416 23805 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:22.431419 23805 net.cpp:139] Memory required for data: 29114800
I0428 19:37:22.431421 23805 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:22.431427 23805 net.cpp:86] Creating Layer ip1
I0428 19:37:22.431432 23805 net.cpp:408] ip1 <- pool0
I0428 19:37:22.431435 23805 net.cpp:382] ip1 -> ip1
I0428 19:37:22.433755 23805 net.cpp:124] Setting up ip1
I0428 19:37:22.433764 23805 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:22.433768 23805 net.cpp:139] Memory required for data: 29124800
I0428 19:37:22.433775 23805 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:22.433781 23805 net.cpp:86] Creating Layer relu1
I0428 19:37:22.433784 23805 net.cpp:408] relu1 <- ip1
I0428 19:37:22.433789 23805 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:22.433969 23805 net.cpp:124] Setting up relu1
I0428 19:37:22.433980 23805 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:22.433984 23805 net.cpp:139] Memory required for data: 29134800
I0428 19:37:22.433993 23805 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:22.434000 23805 net.cpp:86] Creating Layer ip2
I0428 19:37:22.434002 23805 net.cpp:408] ip2 <- ip1
I0428 19:37:22.434006 23805 net.cpp:382] ip2 -> ip2
I0428 19:37:22.434092 23805 net.cpp:124] Setting up ip2
I0428 19:37:22.434099 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.434103 23805 net.cpp:139] Memory required for data: 29138800
I0428 19:37:22.434108 23805 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:22.434113 23805 net.cpp:86] Creating Layer relu2
I0428 19:37:22.434116 23805 net.cpp:408] relu2 <- ip2
I0428 19:37:22.434119 23805 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:22.434880 23805 net.cpp:124] Setting up relu2
I0428 19:37:22.434892 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.434896 23805 net.cpp:139] Memory required for data: 29142800
I0428 19:37:22.434900 23805 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:22.434907 23805 net.cpp:86] Creating Layer ip3
I0428 19:37:22.434911 23805 net.cpp:408] ip3 <- ip2
I0428 19:37:22.434916 23805 net.cpp:382] ip3 -> ip3
I0428 19:37:22.435031 23805 net.cpp:124] Setting up ip3
I0428 19:37:22.435052 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.435055 23805 net.cpp:139] Memory required for data: 29146800
I0428 19:37:22.435060 23805 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:22.435065 23805 net.cpp:86] Creating Layer relu3
I0428 19:37:22.435068 23805 net.cpp:408] relu3 <- ip3
I0428 19:37:22.435071 23805 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:22.435211 23805 net.cpp:124] Setting up relu3
I0428 19:37:22.435219 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.435221 23805 net.cpp:139] Memory required for data: 29150800
I0428 19:37:22.435225 23805 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:22.435228 23805 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:22.435231 23805 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:22.435235 23805 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:22.435240 23805 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:22.435271 23805 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:22.435277 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.435292 23805 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:22.435295 23805 net.cpp:139] Memory required for data: 29158800
I0428 19:37:22.435298 23805 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:22.435303 23805 net.cpp:86] Creating Layer accuracy
I0428 19:37:22.435307 23805 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:22.435310 23805 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:22.435314 23805 net.cpp:382] accuracy -> accuracy
I0428 19:37:22.435322 23805 net.cpp:124] Setting up accuracy
I0428 19:37:22.435325 23805 net.cpp:131] Top shape: (1)
I0428 19:37:22.435328 23805 net.cpp:139] Memory required for data: 29158804
I0428 19:37:22.435331 23805 layer_factory.hpp:77] Creating layer loss
I0428 19:37:22.435335 23805 net.cpp:86] Creating Layer loss
I0428 19:37:22.435338 23805 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:22.435341 23805 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:22.435345 23805 net.cpp:382] loss -> loss
I0428 19:37:22.435350 23805 layer_factory.hpp:77] Creating layer loss
I0428 19:37:22.435561 23805 net.cpp:124] Setting up loss
I0428 19:37:22.435570 23805 net.cpp:131] Top shape: (1)
I0428 19:37:22.435573 23805 net.cpp:134]     with loss weight 1
I0428 19:37:22.435580 23805 net.cpp:139] Memory required for data: 29158808
I0428 19:37:22.435582 23805 net.cpp:200] loss needs backward computation.
I0428 19:37:22.435586 23805 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:22.435590 23805 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:22.435593 23805 net.cpp:200] relu3 needs backward computation.
I0428 19:37:22.435596 23805 net.cpp:200] ip3 needs backward computation.
I0428 19:37:22.435600 23805 net.cpp:200] relu2 needs backward computation.
I0428 19:37:22.435601 23805 net.cpp:200] ip2 needs backward computation.
I0428 19:37:22.435605 23805 net.cpp:200] relu1 needs backward computation.
I0428 19:37:22.435607 23805 net.cpp:200] ip1 needs backward computation.
I0428 19:37:22.435611 23805 net.cpp:200] pool0 needs backward computation.
I0428 19:37:22.435613 23805 net.cpp:200] conv0 needs backward computation.
I0428 19:37:22.435616 23805 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:22.435621 23805 net.cpp:202] mnist does not need backward computation.
I0428 19:37:22.435622 23805 net.cpp:244] This network produces output accuracy
I0428 19:37:22.435626 23805 net.cpp:244] This network produces output loss
I0428 19:37:22.435636 23805 net.cpp:257] Network initialization done.
I0428 19:37:22.435669 23805 solver.cpp:56] Solver scaffolding done.
I0428 19:37:22.435967 23805 caffe.cpp:248] Starting Optimization
I0428 19:37:22.435973 23805 solver.cpp:273] Solving LeNet
I0428 19:37:22.435976 23805 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:22.437314 23805 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:22.596640 23818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:22.601114 23805 solver.cpp:398]     Test net output #0: accuracy = 0.0962
I0428 19:37:22.601133 23805 solver.cpp:398]     Test net output #1: loss = 2.3136 (* 1 = 2.3136 loss)
I0428 19:37:22.606024 23805 solver.cpp:219] Iteration 0 (0 iter/s, 0.17001s/100 iters), loss = 2.32005
I0428 19:37:22.606047 23805 solver.cpp:238]     Train net output #0: loss = 2.32005 (* 1 = 2.32005 loss)
I0428 19:37:22.606075 23805 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:22.833637 23805 solver.cpp:219] Iteration 100 (439.422 iter/s, 0.227572s/100 iters), loss = 0.437199
I0428 19:37:22.833681 23805 solver.cpp:238]     Train net output #0: loss = 0.437199 (* 1 = 0.437199 loss)
I0428 19:37:22.833703 23805 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:23.062109 23805 solver.cpp:219] Iteration 200 (437.803 iter/s, 0.228413s/100 iters), loss = 0.286241
I0428 19:37:23.062136 23805 solver.cpp:238]     Train net output #0: loss = 0.286241 (* 1 = 0.286241 loss)
I0428 19:37:23.062142 23805 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:23.289862 23805 solver.cpp:219] Iteration 300 (439.157 iter/s, 0.227709s/100 iters), loss = 0.225377
I0428 19:37:23.289902 23805 solver.cpp:238]     Train net output #0: loss = 0.225377 (* 1 = 0.225377 loss)
I0428 19:37:23.289909 23805 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:23.515244 23805 solver.cpp:219] Iteration 400 (443.803 iter/s, 0.225325s/100 iters), loss = 0.15203
I0428 19:37:23.515270 23805 solver.cpp:238]     Train net output #0: loss = 0.15203 (* 1 = 0.15203 loss)
I0428 19:37:23.515276 23805 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:23.739791 23805 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:23.897070 23818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:23.901473 23805 solver.cpp:398]     Test net output #0: accuracy = 0.9486
I0428 19:37:23.901497 23805 solver.cpp:398]     Test net output #1: loss = 0.170615 (* 1 = 0.170615 loss)
I0428 19:37:23.903784 23805 solver.cpp:219] Iteration 500 (257.407 iter/s, 0.388489s/100 iters), loss = 0.190388
I0428 19:37:23.903807 23805 solver.cpp:238]     Train net output #0: loss = 0.190388 (* 1 = 0.190388 loss)
I0428 19:37:23.903828 23805 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:24.136111 23805 solver.cpp:219] Iteration 600 (430.501 iter/s, 0.232287s/100 iters), loss = 0.133064
I0428 19:37:24.136138 23805 solver.cpp:238]     Train net output #0: loss = 0.133064 (* 1 = 0.133064 loss)
I0428 19:37:24.136145 23805 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:24.366739 23805 solver.cpp:219] Iteration 700 (433.683 iter/s, 0.230583s/100 iters), loss = 0.240335
I0428 19:37:24.366770 23805 solver.cpp:238]     Train net output #0: loss = 0.240335 (* 1 = 0.240335 loss)
I0428 19:37:24.366775 23805 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:24.595710 23805 solver.cpp:219] Iteration 800 (436.823 iter/s, 0.228925s/100 iters), loss = 0.355953
I0428 19:37:24.595738 23805 solver.cpp:238]     Train net output #0: loss = 0.355953 (* 1 = 0.355953 loss)
I0428 19:37:24.595746 23805 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:24.825090 23805 solver.cpp:219] Iteration 900 (436.045 iter/s, 0.229334s/100 iters), loss = 0.210312
I0428 19:37:24.825120 23805 solver.cpp:238]     Train net output #0: loss = 0.210312 (* 1 = 0.210312 loss)
I0428 19:37:24.825127 23805 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:24.901094 23817 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:25.052125 23805 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:25.057445 23805 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:25.061486 23805 solver.cpp:311] Iteration 1000, loss = 0.119266
I0428 19:37:25.061502 23805 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:25.217977 23818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:25.222400 23805 solver.cpp:398]     Test net output #0: accuracy = 0.9658
I0428 19:37:25.222419 23805 solver.cpp:398]     Test net output #1: loss = 0.114971 (* 1 = 0.114971 loss)
I0428 19:37:25.222424 23805 solver.cpp:316] Optimization Done.
I0428 19:37:25.222427 23805 caffe.cpp:259] Optimization Done.
