I0428 20:23:47.938484  2317 caffe.cpp:218] Using GPUs 0
I0428 20:23:47.974910  2317 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:48.486107  2317 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1427.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:48.486245  2317 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1427.prototxt
I0428 20:23:48.486668  2317 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:48.486687  2317 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:48.486789  2317 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:48.486867  2317 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:48.486966  2317 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:48.486989  2317 net.cpp:86] Creating Layer mnist
I0428 20:23:48.486999  2317 net.cpp:382] mnist -> data
I0428 20:23:48.487020  2317 net.cpp:382] mnist -> label
I0428 20:23:48.488108  2317 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:48.490576  2317 net.cpp:124] Setting up mnist
I0428 20:23:48.490593  2317 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:48.490600  2317 net.cpp:131] Top shape: 64 (64)
I0428 20:23:48.490603  2317 net.cpp:139] Memory required for data: 200960
I0428 20:23:48.490610  2317 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:48.490628  2317 net.cpp:86] Creating Layer conv0
I0428 20:23:48.490648  2317 net.cpp:408] conv0 <- data
I0428 20:23:48.490663  2317 net.cpp:382] conv0 -> conv0
I0428 20:23:48.758292  2317 net.cpp:124] Setting up conv0
I0428 20:23:48.758317  2317 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:48.758322  2317 net.cpp:139] Memory required for data: 7573760
I0428 20:23:48.758335  2317 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:48.758348  2317 net.cpp:86] Creating Layer pool0
I0428 20:23:48.758352  2317 net.cpp:408] pool0 <- conv0
I0428 20:23:48.758357  2317 net.cpp:382] pool0 -> pool0
I0428 20:23:48.758416  2317 net.cpp:124] Setting up pool0
I0428 20:23:48.758424  2317 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:48.758426  2317 net.cpp:139] Memory required for data: 9416960
I0428 20:23:48.758430  2317 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:48.758440  2317 net.cpp:86] Creating Layer conv1
I0428 20:23:48.758443  2317 net.cpp:408] conv1 <- pool0
I0428 20:23:48.758447  2317 net.cpp:382] conv1 -> conv1
I0428 20:23:48.762008  2317 net.cpp:124] Setting up conv1
I0428 20:23:48.762038  2317 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:48.762042  2317 net.cpp:139] Memory required for data: 11055360
I0428 20:23:48.762050  2317 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:48.762058  2317 net.cpp:86] Creating Layer pool1
I0428 20:23:48.762076  2317 net.cpp:408] pool1 <- conv1
I0428 20:23:48.762082  2317 net.cpp:382] pool1 -> pool1
I0428 20:23:48.762120  2317 net.cpp:124] Setting up pool1
I0428 20:23:48.762127  2317 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:48.762130  2317 net.cpp:139] Memory required for data: 11464960
I0428 20:23:48.762133  2317 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:48.762141  2317 net.cpp:86] Creating Layer ip1
I0428 20:23:48.762143  2317 net.cpp:408] ip1 <- pool1
I0428 20:23:48.762150  2317 net.cpp:382] ip1 -> ip1
I0428 20:23:48.762498  2317 net.cpp:124] Setting up ip1
I0428 20:23:48.762506  2317 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:48.762508  2317 net.cpp:139] Memory required for data: 11471360
I0428 20:23:48.762531  2317 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:48.762538  2317 net.cpp:86] Creating Layer relu1
I0428 20:23:48.762542  2317 net.cpp:408] relu1 <- ip1
I0428 20:23:48.762545  2317 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:48.762708  2317 net.cpp:124] Setting up relu1
I0428 20:23:48.762718  2317 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:48.762722  2317 net.cpp:139] Memory required for data: 11477760
I0428 20:23:48.762724  2317 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:48.762730  2317 net.cpp:86] Creating Layer ip2
I0428 20:23:48.762733  2317 net.cpp:408] ip2 <- ip1
I0428 20:23:48.762738  2317 net.cpp:382] ip2 -> ip2
I0428 20:23:48.762830  2317 net.cpp:124] Setting up ip2
I0428 20:23:48.762837  2317 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:48.762840  2317 net.cpp:139] Memory required for data: 11480320
I0428 20:23:48.762845  2317 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:48.762856  2317 net.cpp:86] Creating Layer relu2
I0428 20:23:48.762859  2317 net.cpp:408] relu2 <- ip2
I0428 20:23:48.762863  2317 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:48.763665  2317 net.cpp:124] Setting up relu2
I0428 20:23:48.763677  2317 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:48.763680  2317 net.cpp:139] Memory required for data: 11482880
I0428 20:23:48.763684  2317 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:48.763690  2317 net.cpp:86] Creating Layer ip3
I0428 20:23:48.763694  2317 net.cpp:408] ip3 <- ip2
I0428 20:23:48.763700  2317 net.cpp:382] ip3 -> ip3
I0428 20:23:48.763797  2317 net.cpp:124] Setting up ip3
I0428 20:23:48.763803  2317 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:48.763806  2317 net.cpp:139] Memory required for data: 11485440
I0428 20:23:48.763814  2317 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:48.763818  2317 net.cpp:86] Creating Layer relu3
I0428 20:23:48.763821  2317 net.cpp:408] relu3 <- ip3
I0428 20:23:48.763826  2317 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:48.763991  2317 net.cpp:124] Setting up relu3
I0428 20:23:48.764000  2317 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:48.764003  2317 net.cpp:139] Memory required for data: 11488000
I0428 20:23:48.764006  2317 layer_factory.hpp:77] Creating layer loss
I0428 20:23:48.764012  2317 net.cpp:86] Creating Layer loss
I0428 20:23:48.764015  2317 net.cpp:408] loss <- ip3
I0428 20:23:48.764019  2317 net.cpp:408] loss <- label
I0428 20:23:48.764024  2317 net.cpp:382] loss -> loss
I0428 20:23:48.764040  2317 layer_factory.hpp:77] Creating layer loss
I0428 20:23:48.764299  2317 net.cpp:124] Setting up loss
I0428 20:23:48.764308  2317 net.cpp:131] Top shape: (1)
I0428 20:23:48.764312  2317 net.cpp:134]     with loss weight 1
I0428 20:23:48.764327  2317 net.cpp:139] Memory required for data: 11488004
I0428 20:23:48.764329  2317 net.cpp:200] loss needs backward computation.
I0428 20:23:48.764333  2317 net.cpp:200] relu3 needs backward computation.
I0428 20:23:48.764336  2317 net.cpp:200] ip3 needs backward computation.
I0428 20:23:48.764339  2317 net.cpp:200] relu2 needs backward computation.
I0428 20:23:48.764343  2317 net.cpp:200] ip2 needs backward computation.
I0428 20:23:48.764344  2317 net.cpp:200] relu1 needs backward computation.
I0428 20:23:48.764348  2317 net.cpp:200] ip1 needs backward computation.
I0428 20:23:48.764350  2317 net.cpp:200] pool1 needs backward computation.
I0428 20:23:48.764353  2317 net.cpp:200] conv1 needs backward computation.
I0428 20:23:48.764356  2317 net.cpp:200] pool0 needs backward computation.
I0428 20:23:48.764359  2317 net.cpp:200] conv0 needs backward computation.
I0428 20:23:48.764363  2317 net.cpp:202] mnist does not need backward computation.
I0428 20:23:48.764365  2317 net.cpp:244] This network produces output loss
I0428 20:23:48.764376  2317 net.cpp:257] Network initialization done.
I0428 20:23:48.764703  2317 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1427.prototxt
I0428 20:23:48.764729  2317 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:48.764842  2317 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:48.764920  2317 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:48.764961  2317 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:48.764973  2317 net.cpp:86] Creating Layer mnist
I0428 20:23:48.764978  2317 net.cpp:382] mnist -> data
I0428 20:23:48.764986  2317 net.cpp:382] mnist -> label
I0428 20:23:48.765065  2317 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:48.766252  2317 net.cpp:124] Setting up mnist
I0428 20:23:48.766265  2317 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:48.766270  2317 net.cpp:131] Top shape: 100 (100)
I0428 20:23:48.766273  2317 net.cpp:139] Memory required for data: 314000
I0428 20:23:48.766276  2317 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:48.766286  2317 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:48.766290  2317 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:48.766294  2317 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:48.766300  2317 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:48.766381  2317 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:48.766387  2317 net.cpp:131] Top shape: 100 (100)
I0428 20:23:48.766391  2317 net.cpp:131] Top shape: 100 (100)
I0428 20:23:48.766394  2317 net.cpp:139] Memory required for data: 314800
I0428 20:23:48.766396  2317 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:48.766407  2317 net.cpp:86] Creating Layer conv0
I0428 20:23:48.766410  2317 net.cpp:408] conv0 <- data
I0428 20:23:48.766415  2317 net.cpp:382] conv0 -> conv0
I0428 20:23:48.768180  2317 net.cpp:124] Setting up conv0
I0428 20:23:48.768193  2317 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:48.768196  2317 net.cpp:139] Memory required for data: 11834800
I0428 20:23:48.768205  2317 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:48.768213  2317 net.cpp:86] Creating Layer pool0
I0428 20:23:48.768215  2317 net.cpp:408] pool0 <- conv0
I0428 20:23:48.768221  2317 net.cpp:382] pool0 -> pool0
I0428 20:23:48.768255  2317 net.cpp:124] Setting up pool0
I0428 20:23:48.768262  2317 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:48.768265  2317 net.cpp:139] Memory required for data: 14714800
I0428 20:23:48.768273  2317 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:48.768281  2317 net.cpp:86] Creating Layer conv1
I0428 20:23:48.768285  2317 net.cpp:408] conv1 <- pool0
I0428 20:23:48.768290  2317 net.cpp:382] conv1 -> conv1
I0428 20:23:48.771273  2317 net.cpp:124] Setting up conv1
I0428 20:23:48.771303  2317 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:48.771307  2317 net.cpp:139] Memory required for data: 17274800
I0428 20:23:48.771332  2317 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:48.771339  2317 net.cpp:86] Creating Layer pool1
I0428 20:23:48.771351  2317 net.cpp:408] pool1 <- conv1
I0428 20:23:48.771356  2317 net.cpp:382] pool1 -> pool1
I0428 20:23:48.771394  2317 net.cpp:124] Setting up pool1
I0428 20:23:48.771400  2317 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:48.771404  2317 net.cpp:139] Memory required for data: 17914800
I0428 20:23:48.771407  2317 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:48.771414  2317 net.cpp:86] Creating Layer ip1
I0428 20:23:48.771416  2317 net.cpp:408] ip1 <- pool1
I0428 20:23:48.771422  2317 net.cpp:382] ip1 -> ip1
I0428 20:23:48.771752  2317 net.cpp:124] Setting up ip1
I0428 20:23:48.771772  2317 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:48.771776  2317 net.cpp:139] Memory required for data: 17924800
I0428 20:23:48.771800  2317 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:48.771809  2317 net.cpp:86] Creating Layer relu1
I0428 20:23:48.771813  2317 net.cpp:408] relu1 <- ip1
I0428 20:23:48.771818  2317 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:48.771996  2317 net.cpp:124] Setting up relu1
I0428 20:23:48.772006  2317 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:48.772008  2317 net.cpp:139] Memory required for data: 17934800
I0428 20:23:48.772011  2317 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:48.772019  2317 net.cpp:86] Creating Layer ip2
I0428 20:23:48.772022  2317 net.cpp:408] ip2 <- ip1
I0428 20:23:48.772027  2317 net.cpp:382] ip2 -> ip2
I0428 20:23:48.772140  2317 net.cpp:124] Setting up ip2
I0428 20:23:48.772146  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.772148  2317 net.cpp:139] Memory required for data: 17938800
I0428 20:23:48.772153  2317 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:48.772159  2317 net.cpp:86] Creating Layer relu2
I0428 20:23:48.772162  2317 net.cpp:408] relu2 <- ip2
I0428 20:23:48.772166  2317 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:48.772332  2317 net.cpp:124] Setting up relu2
I0428 20:23:48.772341  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.772343  2317 net.cpp:139] Memory required for data: 17942800
I0428 20:23:48.772346  2317 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:48.772352  2317 net.cpp:86] Creating Layer ip3
I0428 20:23:48.772372  2317 net.cpp:408] ip3 <- ip2
I0428 20:23:48.772378  2317 net.cpp:382] ip3 -> ip3
I0428 20:23:48.772475  2317 net.cpp:124] Setting up ip3
I0428 20:23:48.772483  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.772486  2317 net.cpp:139] Memory required for data: 17946800
I0428 20:23:48.772495  2317 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:48.772500  2317 net.cpp:86] Creating Layer relu3
I0428 20:23:48.772502  2317 net.cpp:408] relu3 <- ip3
I0428 20:23:48.772506  2317 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:48.773391  2317 net.cpp:124] Setting up relu3
I0428 20:23:48.773402  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.773406  2317 net.cpp:139] Memory required for data: 17950800
I0428 20:23:48.773409  2317 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:48.773416  2317 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:48.773418  2317 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:48.773424  2317 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:48.773430  2317 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:48.773465  2317 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:48.773473  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.773476  2317 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:48.773478  2317 net.cpp:139] Memory required for data: 17958800
I0428 20:23:48.773481  2317 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:48.773488  2317 net.cpp:86] Creating Layer accuracy
I0428 20:23:48.773490  2317 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:48.773494  2317 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:48.773499  2317 net.cpp:382] accuracy -> accuracy
I0428 20:23:48.773504  2317 net.cpp:124] Setting up accuracy
I0428 20:23:48.773507  2317 net.cpp:131] Top shape: (1)
I0428 20:23:48.773510  2317 net.cpp:139] Memory required for data: 17958804
I0428 20:23:48.773514  2317 layer_factory.hpp:77] Creating layer loss
I0428 20:23:48.773519  2317 net.cpp:86] Creating Layer loss
I0428 20:23:48.773521  2317 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:48.773525  2317 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:48.773528  2317 net.cpp:382] loss -> loss
I0428 20:23:48.773535  2317 layer_factory.hpp:77] Creating layer loss
I0428 20:23:48.773807  2317 net.cpp:124] Setting up loss
I0428 20:23:48.773815  2317 net.cpp:131] Top shape: (1)
I0428 20:23:48.773818  2317 net.cpp:134]     with loss weight 1
I0428 20:23:48.773850  2317 net.cpp:139] Memory required for data: 17958808
I0428 20:23:48.773854  2317 net.cpp:200] loss needs backward computation.
I0428 20:23:48.773859  2317 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:48.773862  2317 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:48.773865  2317 net.cpp:200] relu3 needs backward computation.
I0428 20:23:48.773869  2317 net.cpp:200] ip3 needs backward computation.
I0428 20:23:48.773872  2317 net.cpp:200] relu2 needs backward computation.
I0428 20:23:48.773874  2317 net.cpp:200] ip2 needs backward computation.
I0428 20:23:48.773877  2317 net.cpp:200] relu1 needs backward computation.
I0428 20:23:48.773880  2317 net.cpp:200] ip1 needs backward computation.
I0428 20:23:48.773885  2317 net.cpp:200] pool1 needs backward computation.
I0428 20:23:48.773887  2317 net.cpp:200] conv1 needs backward computation.
I0428 20:23:48.773890  2317 net.cpp:200] pool0 needs backward computation.
I0428 20:23:48.773893  2317 net.cpp:200] conv0 needs backward computation.
I0428 20:23:48.773897  2317 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:48.773901  2317 net.cpp:202] mnist does not need backward computation.
I0428 20:23:48.773905  2317 net.cpp:244] This network produces output accuracy
I0428 20:23:48.773907  2317 net.cpp:244] This network produces output loss
I0428 20:23:48.773919  2317 net.cpp:257] Network initialization done.
I0428 20:23:48.773963  2317 solver.cpp:56] Solver scaffolding done.
I0428 20:23:48.774351  2317 caffe.cpp:248] Starting Optimization
I0428 20:23:48.774358  2317 solver.cpp:273] Solving LeNet
I0428 20:23:48.774360  2317 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:48.774544  2317 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:48.862772  2324 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:48.865856  2317 solver.cpp:398]     Test net output #0: accuracy = 0.0688
I0428 20:23:48.865876  2317 solver.cpp:398]     Test net output #1: loss = 2.34456 (* 1 = 2.34456 loss)
I0428 20:23:48.871327  2317 solver.cpp:219] Iteration 0 (-3.05856e-31 iter/s, 0.096939s/100 iters), loss = 2.34466
I0428 20:23:48.871367  2317 solver.cpp:238]     Train net output #0: loss = 2.34466 (* 1 = 2.34466 loss)
I0428 20:23:48.871393  2317 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:49.098740  2317 solver.cpp:219] Iteration 100 (439.845 iter/s, 0.227353s/100 iters), loss = 0.352077
I0428 20:23:49.098778  2317 solver.cpp:238]     Train net output #0: loss = 0.352077 (* 1 = 0.352077 loss)
I0428 20:23:49.098786  2317 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:49.318042  2317 solver.cpp:219] Iteration 200 (456.097 iter/s, 0.219252s/100 iters), loss = 0.196275
I0428 20:23:49.318069  2317 solver.cpp:238]     Train net output #0: loss = 0.196275 (* 1 = 0.196275 loss)
I0428 20:23:49.318076  2317 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:49.543324  2317 solver.cpp:219] Iteration 300 (443.977 iter/s, 0.225237s/100 iters), loss = 0.274578
I0428 20:23:49.543362  2317 solver.cpp:238]     Train net output #0: loss = 0.274578 (* 1 = 0.274578 loss)
I0428 20:23:49.543372  2317 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:49.762936  2317 solver.cpp:219] Iteration 400 (455.456 iter/s, 0.21956s/100 iters), loss = 0.139554
I0428 20:23:49.762965  2317 solver.cpp:238]     Train net output #0: loss = 0.139554 (* 1 = 0.139554 loss)
I0428 20:23:49.762972  2317 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:49.987823  2317 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:49.999181  2317 blocking_queue.cpp:49] Waiting for data
I0428 20:23:50.076944  2324 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:50.078243  2317 solver.cpp:398]     Test net output #0: accuracy = 0.9631
I0428 20:23:50.078264  2317 solver.cpp:398]     Test net output #1: loss = 0.118259 (* 1 = 0.118259 loss)
I0428 20:23:50.080543  2317 solver.cpp:219] Iteration 500 (314.902 iter/s, 0.317559s/100 iters), loss = 0.149273
I0428 20:23:50.080612  2317 solver.cpp:238]     Train net output #0: loss = 0.149273 (* 1 = 0.149273 loss)
I0428 20:23:50.080634  2317 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:50.301811  2317 solver.cpp:219] Iteration 600 (452.119 iter/s, 0.221181s/100 iters), loss = 0.0861932
I0428 20:23:50.301847  2317 solver.cpp:238]     Train net output #0: loss = 0.0861932 (* 1 = 0.0861932 loss)
I0428 20:23:50.301856  2317 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:50.539726  2317 solver.cpp:219] Iteration 700 (420.414 iter/s, 0.237861s/100 iters), loss = 0.115707
I0428 20:23:50.539763  2317 solver.cpp:238]     Train net output #0: loss = 0.115707 (* 1 = 0.115707 loss)
I0428 20:23:50.539772  2317 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:50.781422  2317 solver.cpp:219] Iteration 800 (413.833 iter/s, 0.241644s/100 iters), loss = 0.348027
I0428 20:23:50.781456  2317 solver.cpp:238]     Train net output #0: loss = 0.348027 (* 1 = 0.348027 loss)
I0428 20:23:50.781464  2317 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:51.021031  2317 solver.cpp:219] Iteration 900 (417.433 iter/s, 0.23956s/100 iters), loss = 0.19659
I0428 20:23:51.021065  2317 solver.cpp:238]     Train net output #0: loss = 0.19659 (* 1 = 0.19659 loss)
I0428 20:23:51.021073  2317 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:51.098115  2323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:51.251932  2317 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:51.257208  2317 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:51.259373  2317 solver.cpp:311] Iteration 1000, loss = 0.128353
I0428 20:23:51.259393  2317 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:51.349503  2324 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:51.350922  2317 solver.cpp:398]     Test net output #0: accuracy = 0.9758
I0428 20:23:51.350945  2317 solver.cpp:398]     Test net output #1: loss = 0.0797551 (* 1 = 0.0797551 loss)
I0428 20:23:51.350951  2317 solver.cpp:316] Optimization Done.
I0428 20:23:51.350955  2317 caffe.cpp:259] Optimization Done.
