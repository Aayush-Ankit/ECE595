I0428 19:42:42.201498 25131 caffe.cpp:218] Using GPUs 0
I0428 19:42:42.240674 25131 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:42.684249 25131 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test401.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:42.684408 25131 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test401.prototxt
I0428 19:42:42.684763 25131 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:42.684792 25131 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:42.684919 25131 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:42.684979 25131 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:42.685066 25131 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:42.685088 25131 net.cpp:86] Creating Layer mnist
I0428 19:42:42.685096 25131 net.cpp:382] mnist -> data
I0428 19:42:42.685114 25131 net.cpp:382] mnist -> label
I0428 19:42:42.686069 25131 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:42.688251 25131 net.cpp:124] Setting up mnist
I0428 19:42:42.688282 25131 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:42.688287 25131 net.cpp:131] Top shape: 64 (64)
I0428 19:42:42.688289 25131 net.cpp:139] Memory required for data: 200960
I0428 19:42:42.688297 25131 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:42.688309 25131 net.cpp:86] Creating Layer conv0
I0428 19:42:42.688314 25131 net.cpp:408] conv0 <- data
I0428 19:42:42.688323 25131 net.cpp:382] conv0 -> conv0
I0428 19:42:42.916553 25131 net.cpp:124] Setting up conv0
I0428 19:42:42.916594 25131 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:42.916597 25131 net.cpp:139] Memory required for data: 495872
I0428 19:42:42.916628 25131 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:42.916641 25131 net.cpp:86] Creating Layer pool0
I0428 19:42:42.916645 25131 net.cpp:408] pool0 <- conv0
I0428 19:42:42.916651 25131 net.cpp:382] pool0 -> pool0
I0428 19:42:42.916712 25131 net.cpp:124] Setting up pool0
I0428 19:42:42.916720 25131 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:42.916723 25131 net.cpp:139] Memory required for data: 569600
I0428 19:42:42.916726 25131 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:42.916739 25131 net.cpp:86] Creating Layer conv1
I0428 19:42:42.916744 25131 net.cpp:408] conv1 <- pool0
I0428 19:42:42.916749 25131 net.cpp:382] conv1 -> conv1
I0428 19:42:42.919685 25131 net.cpp:124] Setting up conv1
I0428 19:42:42.919715 25131 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:42.919720 25131 net.cpp:139] Memory required for data: 979200
I0428 19:42:42.919728 25131 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:42.919735 25131 net.cpp:86] Creating Layer pool1
I0428 19:42:42.919739 25131 net.cpp:408] pool1 <- conv1
I0428 19:42:42.919744 25131 net.cpp:382] pool1 -> pool1
I0428 19:42:42.919826 25131 net.cpp:124] Setting up pool1
I0428 19:42:42.919832 25131 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:42.919836 25131 net.cpp:139] Memory required for data: 1081600
I0428 19:42:42.919838 25131 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:42.919847 25131 net.cpp:86] Creating Layer ip1
I0428 19:42:42.919850 25131 net.cpp:408] ip1 <- pool1
I0428 19:42:42.919855 25131 net.cpp:382] ip1 -> ip1
I0428 19:42:42.920064 25131 net.cpp:124] Setting up ip1
I0428 19:42:42.920073 25131 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:42.920075 25131 net.cpp:139] Memory required for data: 1094400
I0428 19:42:42.920083 25131 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:42.920090 25131 net.cpp:86] Creating Layer relu1
I0428 19:42:42.920110 25131 net.cpp:408] relu1 <- ip1
I0428 19:42:42.920115 25131 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:42.920298 25131 net.cpp:124] Setting up relu1
I0428 19:42:42.920307 25131 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:42.920310 25131 net.cpp:139] Memory required for data: 1107200
I0428 19:42:42.920313 25131 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:42.920320 25131 net.cpp:86] Creating Layer ip2
I0428 19:42:42.920323 25131 net.cpp:408] ip2 <- ip1
I0428 19:42:42.920327 25131 net.cpp:382] ip2 -> ip2
I0428 19:42:42.920508 25131 net.cpp:124] Setting up ip2
I0428 19:42:42.920516 25131 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:42.920518 25131 net.cpp:139] Memory required for data: 1109760
I0428 19:42:42.920524 25131 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:42.920532 25131 net.cpp:86] Creating Layer relu2
I0428 19:42:42.920538 25131 net.cpp:408] relu2 <- ip2
I0428 19:42:42.920542 25131 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:42.921389 25131 net.cpp:124] Setting up relu2
I0428 19:42:42.921401 25131 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:42.921419 25131 net.cpp:139] Memory required for data: 1112320
I0428 19:42:42.921422 25131 layer_factory.hpp:77] Creating layer loss
I0428 19:42:42.921429 25131 net.cpp:86] Creating Layer loss
I0428 19:42:42.921432 25131 net.cpp:408] loss <- ip2
I0428 19:42:42.921437 25131 net.cpp:408] loss <- label
I0428 19:42:42.921442 25131 net.cpp:382] loss -> loss
I0428 19:42:42.921460 25131 layer_factory.hpp:77] Creating layer loss
I0428 19:42:42.921690 25131 net.cpp:124] Setting up loss
I0428 19:42:42.921700 25131 net.cpp:131] Top shape: (1)
I0428 19:42:42.921703 25131 net.cpp:134]     with loss weight 1
I0428 19:42:42.921718 25131 net.cpp:139] Memory required for data: 1112324
I0428 19:42:42.921721 25131 net.cpp:200] loss needs backward computation.
I0428 19:42:42.921741 25131 net.cpp:200] relu2 needs backward computation.
I0428 19:42:42.921743 25131 net.cpp:200] ip2 needs backward computation.
I0428 19:42:42.921746 25131 net.cpp:200] relu1 needs backward computation.
I0428 19:42:42.921748 25131 net.cpp:200] ip1 needs backward computation.
I0428 19:42:42.921761 25131 net.cpp:200] pool1 needs backward computation.
I0428 19:42:42.921763 25131 net.cpp:200] conv1 needs backward computation.
I0428 19:42:42.921766 25131 net.cpp:200] pool0 needs backward computation.
I0428 19:42:42.921769 25131 net.cpp:200] conv0 needs backward computation.
I0428 19:42:42.921772 25131 net.cpp:202] mnist does not need backward computation.
I0428 19:42:42.921775 25131 net.cpp:244] This network produces output loss
I0428 19:42:42.921784 25131 net.cpp:257] Network initialization done.
I0428 19:42:42.922063 25131 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test401.prototxt
I0428 19:42:42.922087 25131 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:42.922173 25131 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:42.922251 25131 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:42.922292 25131 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:42.922305 25131 net.cpp:86] Creating Layer mnist
I0428 19:42:42.922313 25131 net.cpp:382] mnist -> data
I0428 19:42:42.922319 25131 net.cpp:382] mnist -> label
I0428 19:42:42.922418 25131 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:42.924391 25131 net.cpp:124] Setting up mnist
I0428 19:42:42.924434 25131 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:42.924439 25131 net.cpp:131] Top shape: 100 (100)
I0428 19:42:42.924443 25131 net.cpp:139] Memory required for data: 314000
I0428 19:42:42.924461 25131 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:42.924487 25131 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:42.924494 25131 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:42.924499 25131 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:42.924520 25131 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:42.924563 25131 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:42.924581 25131 net.cpp:131] Top shape: 100 (100)
I0428 19:42:42.924584 25131 net.cpp:131] Top shape: 100 (100)
I0428 19:42:42.924587 25131 net.cpp:139] Memory required for data: 314800
I0428 19:42:42.924590 25131 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:42.924599 25131 net.cpp:86] Creating Layer conv0
I0428 19:42:42.924604 25131 net.cpp:408] conv0 <- data
I0428 19:42:42.924610 25131 net.cpp:382] conv0 -> conv0
I0428 19:42:42.926535 25131 net.cpp:124] Setting up conv0
I0428 19:42:42.926549 25131 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:42.926564 25131 net.cpp:139] Memory required for data: 775600
I0428 19:42:42.926573 25131 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:42.926581 25131 net.cpp:86] Creating Layer pool0
I0428 19:42:42.926585 25131 net.cpp:408] pool0 <- conv0
I0428 19:42:42.926589 25131 net.cpp:382] pool0 -> pool0
I0428 19:42:42.926630 25131 net.cpp:124] Setting up pool0
I0428 19:42:42.926636 25131 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:42.926640 25131 net.cpp:139] Memory required for data: 890800
I0428 19:42:42.926642 25131 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:42.926652 25131 net.cpp:86] Creating Layer conv1
I0428 19:42:42.926658 25131 net.cpp:408] conv1 <- pool0
I0428 19:42:42.926664 25131 net.cpp:382] conv1 -> conv1
I0428 19:42:42.928282 25131 net.cpp:124] Setting up conv1
I0428 19:42:42.928295 25131 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:42.928300 25131 net.cpp:139] Memory required for data: 1530800
I0428 19:42:42.928309 25131 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:42.928316 25131 net.cpp:86] Creating Layer pool1
I0428 19:42:42.928319 25131 net.cpp:408] pool1 <- conv1
I0428 19:42:42.928324 25131 net.cpp:382] pool1 -> pool1
I0428 19:42:42.928361 25131 net.cpp:124] Setting up pool1
I0428 19:42:42.928369 25131 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:42.928371 25131 net.cpp:139] Memory required for data: 1690800
I0428 19:42:42.928375 25131 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:42.928395 25131 net.cpp:86] Creating Layer ip1
I0428 19:42:42.928398 25131 net.cpp:408] ip1 <- pool1
I0428 19:42:42.928405 25131 net.cpp:382] ip1 -> ip1
I0428 19:42:42.928652 25131 net.cpp:124] Setting up ip1
I0428 19:42:42.928659 25131 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:42.928663 25131 net.cpp:139] Memory required for data: 1710800
I0428 19:42:42.928670 25131 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:42.928678 25131 net.cpp:86] Creating Layer relu1
I0428 19:42:42.928680 25131 net.cpp:408] relu1 <- ip1
I0428 19:42:42.928685 25131 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:42.928881 25131 net.cpp:124] Setting up relu1
I0428 19:42:42.928890 25131 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:42.928894 25131 net.cpp:139] Memory required for data: 1730800
I0428 19:42:42.928897 25131 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:42.928905 25131 net.cpp:86] Creating Layer ip2
I0428 19:42:42.928907 25131 net.cpp:408] ip2 <- ip1
I0428 19:42:42.928913 25131 net.cpp:382] ip2 -> ip2
I0428 19:42:42.929014 25131 net.cpp:124] Setting up ip2
I0428 19:42:42.929021 25131 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:42.929024 25131 net.cpp:139] Memory required for data: 1734800
I0428 19:42:42.929029 25131 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:42.929035 25131 net.cpp:86] Creating Layer relu2
I0428 19:42:42.929039 25131 net.cpp:408] relu2 <- ip2
I0428 19:42:42.929041 25131 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:42.929234 25131 net.cpp:124] Setting up relu2
I0428 19:42:42.929241 25131 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:42.929245 25131 net.cpp:139] Memory required for data: 1738800
I0428 19:42:42.929247 25131 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:42.929253 25131 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:42.929257 25131 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:42.929261 25131 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:42.929278 25131 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:42.929381 25131 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:42.929388 25131 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:42.929392 25131 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:42.929395 25131 net.cpp:139] Memory required for data: 1746800
I0428 19:42:42.929399 25131 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:42.929404 25131 net.cpp:86] Creating Layer accuracy
I0428 19:42:42.929407 25131 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:42.929412 25131 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:42.929416 25131 net.cpp:382] accuracy -> accuracy
I0428 19:42:42.929424 25131 net.cpp:124] Setting up accuracy
I0428 19:42:42.929428 25131 net.cpp:131] Top shape: (1)
I0428 19:42:42.929431 25131 net.cpp:139] Memory required for data: 1746804
I0428 19:42:42.929435 25131 layer_factory.hpp:77] Creating layer loss
I0428 19:42:42.929438 25131 net.cpp:86] Creating Layer loss
I0428 19:42:42.929441 25131 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:42.929445 25131 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:42.929450 25131 net.cpp:382] loss -> loss
I0428 19:42:42.929456 25131 layer_factory.hpp:77] Creating layer loss
I0428 19:42:42.929731 25131 net.cpp:124] Setting up loss
I0428 19:42:42.929740 25131 net.cpp:131] Top shape: (1)
I0428 19:42:42.929744 25131 net.cpp:134]     with loss weight 1
I0428 19:42:42.929750 25131 net.cpp:139] Memory required for data: 1746808
I0428 19:42:42.929754 25131 net.cpp:200] loss needs backward computation.
I0428 19:42:42.929757 25131 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:42.929761 25131 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:42.929764 25131 net.cpp:200] relu2 needs backward computation.
I0428 19:42:42.929774 25131 net.cpp:200] ip2 needs backward computation.
I0428 19:42:42.929776 25131 net.cpp:200] relu1 needs backward computation.
I0428 19:42:42.929780 25131 net.cpp:200] ip1 needs backward computation.
I0428 19:42:42.929782 25131 net.cpp:200] pool1 needs backward computation.
I0428 19:42:42.929786 25131 net.cpp:200] conv1 needs backward computation.
I0428 19:42:42.929790 25131 net.cpp:200] pool0 needs backward computation.
I0428 19:42:42.929792 25131 net.cpp:200] conv0 needs backward computation.
I0428 19:42:42.929796 25131 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:42.929800 25131 net.cpp:202] mnist does not need backward computation.
I0428 19:42:42.929803 25131 net.cpp:244] This network produces output accuracy
I0428 19:42:42.929806 25131 net.cpp:244] This network produces output loss
I0428 19:42:42.929817 25131 net.cpp:257] Network initialization done.
I0428 19:42:42.929855 25131 solver.cpp:56] Solver scaffolding done.
I0428 19:42:42.930150 25131 caffe.cpp:248] Starting Optimization
I0428 19:42:42.930157 25131 solver.cpp:273] Solving LeNet
I0428 19:42:42.930160 25131 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:42.930986 25131 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:42.934069 25131 blocking_queue.cpp:49] Waiting for data
I0428 19:42:43.006820 25138 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:43.007256 25131 solver.cpp:398]     Test net output #0: accuracy = 0.0545
I0428 19:42:43.007292 25131 solver.cpp:398]     Test net output #1: loss = 2.34782 (* 1 = 2.34782 loss)
I0428 19:42:43.008456 25131 solver.cpp:219] Iteration 0 (-1.05658e-42 iter/s, 0.0782696s/100 iters), loss = 2.34893
I0428 19:42:43.008491 25131 solver.cpp:238]     Train net output #0: loss = 2.34893 (* 1 = 2.34893 loss)
I0428 19:42:43.008503 25131 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:43.087560 25131 solver.cpp:219] Iteration 100 (1265.13 iter/s, 0.0790432s/100 iters), loss = 0.744869
I0428 19:42:43.087586 25131 solver.cpp:238]     Train net output #0: loss = 0.744869 (* 1 = 0.744869 loss)
I0428 19:42:43.087592 25131 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:43.163079 25131 solver.cpp:219] Iteration 200 (1324.87 iter/s, 0.075479s/100 iters), loss = 0.709567
I0428 19:42:43.163115 25131 solver.cpp:238]     Train net output #0: loss = 0.709567 (* 1 = 0.709567 loss)
I0428 19:42:43.163121 25131 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:43.239308 25131 solver.cpp:219] Iteration 300 (1312.62 iter/s, 0.0761836s/100 iters), loss = 0.714463
I0428 19:42:43.239348 25131 solver.cpp:238]     Train net output #0: loss = 0.714463 (* 1 = 0.714463 loss)
I0428 19:42:43.239354 25131 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:43.314815 25131 solver.cpp:219] Iteration 400 (1325.01 iter/s, 0.0754708s/100 iters), loss = 0.555956
I0428 19:42:43.314854 25131 solver.cpp:238]     Train net output #0: loss = 0.555956 (* 1 = 0.555956 loss)
I0428 19:42:43.314860 25131 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:43.405163 25131 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:43.464650 25138 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:43.465092 25131 solver.cpp:398]     Test net output #0: accuracy = 0.7728
I0428 19:42:43.465116 25131 solver.cpp:398]     Test net output #1: loss = 0.591985 (* 1 = 0.591985 loss)
I0428 19:42:43.465986 25131 solver.cpp:219] Iteration 500 (661.667 iter/s, 0.151133s/100 iters), loss = 0.505905
I0428 19:42:43.466024 25131 solver.cpp:238]     Train net output #0: loss = 0.505905 (* 1 = 0.505905 loss)
I0428 19:42:43.466032 25131 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:43.552652 25131 solver.cpp:219] Iteration 600 (1154.46 iter/s, 0.0866203s/100 iters), loss = 0.557636
I0428 19:42:43.552701 25131 solver.cpp:238]     Train net output #0: loss = 0.557636 (* 1 = 0.557636 loss)
I0428 19:42:43.552717 25131 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:43.646081 25131 solver.cpp:219] Iteration 700 (1071.09 iter/s, 0.0933631s/100 iters), loss = 0.866838
I0428 19:42:43.646116 25131 solver.cpp:238]     Train net output #0: loss = 0.866838 (* 1 = 0.866838 loss)
I0428 19:42:43.646126 25131 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:43.727138 25131 solver.cpp:219] Iteration 800 (1234.39 iter/s, 0.0810117s/100 iters), loss = 0.618927
I0428 19:42:43.727166 25131 solver.cpp:238]     Train net output #0: loss = 0.618927 (* 1 = 0.618927 loss)
I0428 19:42:43.727174 25131 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:43.812047 25131 solver.cpp:219] Iteration 900 (1178.38 iter/s, 0.084862s/100 iters), loss = 0.487993
I0428 19:42:43.812091 25131 solver.cpp:238]     Train net output #0: loss = 0.487993 (* 1 = 0.487993 loss)
I0428 19:42:43.812103 25131 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:43.843853 25137 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:43.900897 25131 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:43.901983 25131 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:43.902578 25131 solver.cpp:311] Iteration 1000, loss = 0.675637
I0428 19:42:43.902598 25131 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:43.977572 25138 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:43.978018 25131 solver.cpp:398]     Test net output #0: accuracy = 0.7803
I0428 19:42:43.978045 25131 solver.cpp:398]     Test net output #1: loss = 0.552404 (* 1 = 0.552404 loss)
I0428 19:42:43.978060 25131 solver.cpp:316] Optimization Done.
I0428 19:42:43.978063 25131 caffe.cpp:259] Optimization Done.
