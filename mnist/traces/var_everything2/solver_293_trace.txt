I0428 19:39:04.299974 24206 caffe.cpp:218] Using GPUs 0
I0428 19:39:04.341581 24206 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:04.859735 24206 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test293.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:04.859891 24206 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test293.prototxt
I0428 19:39:04.860306 24206 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:04.860330 24206 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:04.860447 24206 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:04.860560 24206 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:04.860694 24206 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:04.860726 24206 net.cpp:86] Creating Layer mnist
I0428 19:39:04.860738 24206 net.cpp:382] mnist -> data
I0428 19:39:04.860770 24206 net.cpp:382] mnist -> label
I0428 19:39:04.862025 24206 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:04.864426 24206 net.cpp:124] Setting up mnist
I0428 19:39:04.864447 24206 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:04.864459 24206 net.cpp:131] Top shape: 64 (64)
I0428 19:39:04.864464 24206 net.cpp:139] Memory required for data: 200960
I0428 19:39:04.864475 24206 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:04.864498 24206 net.cpp:86] Creating Layer conv0
I0428 19:39:04.864521 24206 net.cpp:408] conv0 <- data
I0428 19:39:04.864539 24206 net.cpp:382] conv0 -> conv0
I0428 19:39:05.147538 24206 net.cpp:124] Setting up conv0
I0428 19:39:05.147573 24206 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:05.147580 24206 net.cpp:139] Memory required for data: 495872
I0428 19:39:05.147605 24206 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:05.147625 24206 net.cpp:86] Creating Layer pool0
I0428 19:39:05.147634 24206 net.cpp:408] pool0 <- conv0
I0428 19:39:05.147645 24206 net.cpp:382] pool0 -> pool0
I0428 19:39:05.147724 24206 net.cpp:124] Setting up pool0
I0428 19:39:05.147735 24206 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:05.147742 24206 net.cpp:139] Memory required for data: 569600
I0428 19:39:05.147749 24206 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:05.147768 24206 net.cpp:86] Creating Layer conv1
I0428 19:39:05.147775 24206 net.cpp:408] conv1 <- pool0
I0428 19:39:05.147786 24206 net.cpp:382] conv1 -> conv1
I0428 19:39:05.149910 24206 net.cpp:124] Setting up conv1
I0428 19:39:05.149930 24206 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:05.149936 24206 net.cpp:139] Memory required for data: 602368
I0428 19:39:05.149952 24206 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:05.149966 24206 net.cpp:86] Creating Layer pool1
I0428 19:39:05.149973 24206 net.cpp:408] pool1 <- conv1
I0428 19:39:05.149983 24206 net.cpp:382] pool1 -> pool1
I0428 19:39:05.150038 24206 net.cpp:124] Setting up pool1
I0428 19:39:05.150048 24206 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:05.150055 24206 net.cpp:139] Memory required for data: 610560
I0428 19:39:05.150061 24206 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:05.150074 24206 net.cpp:86] Creating Layer ip1
I0428 19:39:05.150087 24206 net.cpp:408] ip1 <- pool1
I0428 19:39:05.150097 24206 net.cpp:382] ip1 -> ip1
I0428 19:39:05.150218 24206 net.cpp:124] Setting up ip1
I0428 19:39:05.150229 24206 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:05.150235 24206 net.cpp:139] Memory required for data: 613120
I0428 19:39:05.150250 24206 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:05.150260 24206 net.cpp:86] Creating Layer relu1
I0428 19:39:05.150271 24206 net.cpp:408] relu1 <- ip1
I0428 19:39:05.150281 24206 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:05.150482 24206 net.cpp:124] Setting up relu1
I0428 19:39:05.150496 24206 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:05.150502 24206 net.cpp:139] Memory required for data: 615680
I0428 19:39:05.150509 24206 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:05.150521 24206 net.cpp:86] Creating Layer ip2
I0428 19:39:05.150528 24206 net.cpp:408] ip2 <- ip1
I0428 19:39:05.150538 24206 net.cpp:382] ip2 -> ip2
I0428 19:39:05.150662 24206 net.cpp:124] Setting up ip2
I0428 19:39:05.150673 24206 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:05.150681 24206 net.cpp:139] Memory required for data: 628480
I0428 19:39:05.150691 24206 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:05.150703 24206 net.cpp:86] Creating Layer relu2
I0428 19:39:05.150709 24206 net.cpp:408] relu2 <- ip2
I0428 19:39:05.150718 24206 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:05.151563 24206 net.cpp:124] Setting up relu2
I0428 19:39:05.151581 24206 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:05.151587 24206 net.cpp:139] Memory required for data: 641280
I0428 19:39:05.151594 24206 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:05.151607 24206 net.cpp:86] Creating Layer ip3
I0428 19:39:05.151614 24206 net.cpp:408] ip3 <- ip2
I0428 19:39:05.151625 24206 net.cpp:382] ip3 -> ip3
I0428 19:39:05.151756 24206 net.cpp:124] Setting up ip3
I0428 19:39:05.151767 24206 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:05.151773 24206 net.cpp:139] Memory required for data: 643840
I0428 19:39:05.151789 24206 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:05.151800 24206 net.cpp:86] Creating Layer relu3
I0428 19:39:05.151808 24206 net.cpp:408] relu3 <- ip3
I0428 19:39:05.151818 24206 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:05.152021 24206 net.cpp:124] Setting up relu3
I0428 19:39:05.152034 24206 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:05.152040 24206 net.cpp:139] Memory required for data: 646400
I0428 19:39:05.152046 24206 layer_factory.hpp:77] Creating layer loss
I0428 19:39:05.152057 24206 net.cpp:86] Creating Layer loss
I0428 19:39:05.152065 24206 net.cpp:408] loss <- ip3
I0428 19:39:05.152072 24206 net.cpp:408] loss <- label
I0428 19:39:05.152082 24206 net.cpp:382] loss -> loss
I0428 19:39:05.152110 24206 layer_factory.hpp:77] Creating layer loss
I0428 19:39:05.152386 24206 net.cpp:124] Setting up loss
I0428 19:39:05.152400 24206 net.cpp:131] Top shape: (1)
I0428 19:39:05.152406 24206 net.cpp:134]     with loss weight 1
I0428 19:39:05.152431 24206 net.cpp:139] Memory required for data: 646404
I0428 19:39:05.152438 24206 net.cpp:200] loss needs backward computation.
I0428 19:39:05.152446 24206 net.cpp:200] relu3 needs backward computation.
I0428 19:39:05.152451 24206 net.cpp:200] ip3 needs backward computation.
I0428 19:39:05.152458 24206 net.cpp:200] relu2 needs backward computation.
I0428 19:39:05.152464 24206 net.cpp:200] ip2 needs backward computation.
I0428 19:39:05.152470 24206 net.cpp:200] relu1 needs backward computation.
I0428 19:39:05.152477 24206 net.cpp:200] ip1 needs backward computation.
I0428 19:39:05.152482 24206 net.cpp:200] pool1 needs backward computation.
I0428 19:39:05.152488 24206 net.cpp:200] conv1 needs backward computation.
I0428 19:39:05.152495 24206 net.cpp:200] pool0 needs backward computation.
I0428 19:39:05.152501 24206 net.cpp:200] conv0 needs backward computation.
I0428 19:39:05.152508 24206 net.cpp:202] mnist does not need backward computation.
I0428 19:39:05.152514 24206 net.cpp:244] This network produces output loss
I0428 19:39:05.152531 24206 net.cpp:257] Network initialization done.
I0428 19:39:05.152930 24206 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test293.prototxt
I0428 19:39:05.152972 24206 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:05.153093 24206 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:05.153233 24206 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:05.153300 24206 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:05.153324 24206 net.cpp:86] Creating Layer mnist
I0428 19:39:05.153334 24206 net.cpp:382] mnist -> data
I0428 19:39:05.153348 24206 net.cpp:382] mnist -> label
I0428 19:39:05.153491 24206 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:05.155825 24206 net.cpp:124] Setting up mnist
I0428 19:39:05.155843 24206 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:05.155853 24206 net.cpp:131] Top shape: 100 (100)
I0428 19:39:05.155859 24206 net.cpp:139] Memory required for data: 314000
I0428 19:39:05.155866 24206 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:05.155879 24206 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:05.155885 24206 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:05.155894 24206 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:05.155907 24206 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:05.156007 24206 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:05.156018 24206 net.cpp:131] Top shape: 100 (100)
I0428 19:39:05.156026 24206 net.cpp:131] Top shape: 100 (100)
I0428 19:39:05.156033 24206 net.cpp:139] Memory required for data: 314800
I0428 19:39:05.156038 24206 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:05.156054 24206 net.cpp:86] Creating Layer conv0
I0428 19:39:05.156062 24206 net.cpp:408] conv0 <- data
I0428 19:39:05.156074 24206 net.cpp:382] conv0 -> conv0
I0428 19:39:05.157647 24206 net.cpp:124] Setting up conv0
I0428 19:39:05.157666 24206 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:05.157675 24206 net.cpp:139] Memory required for data: 775600
I0428 19:39:05.157691 24206 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:05.157702 24206 net.cpp:86] Creating Layer pool0
I0428 19:39:05.157711 24206 net.cpp:408] pool0 <- conv0
I0428 19:39:05.157721 24206 net.cpp:382] pool0 -> pool0
I0428 19:39:05.157776 24206 net.cpp:124] Setting up pool0
I0428 19:39:05.157788 24206 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:05.157794 24206 net.cpp:139] Memory required for data: 890800
I0428 19:39:05.157801 24206 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:05.157816 24206 net.cpp:86] Creating Layer conv1
I0428 19:39:05.157825 24206 net.cpp:408] conv1 <- pool0
I0428 19:39:05.157836 24206 net.cpp:382] conv1 -> conv1
I0428 19:39:05.159478 24206 net.cpp:124] Setting up conv1
I0428 19:39:05.159497 24206 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:05.159504 24206 net.cpp:139] Memory required for data: 942000
I0428 19:39:05.159520 24206 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:05.159531 24206 net.cpp:86] Creating Layer pool1
I0428 19:39:05.159538 24206 net.cpp:408] pool1 <- conv1
I0428 19:39:05.159548 24206 net.cpp:382] pool1 -> pool1
I0428 19:39:05.159601 24206 net.cpp:124] Setting up pool1
I0428 19:39:05.159611 24206 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:05.159618 24206 net.cpp:139] Memory required for data: 954800
I0428 19:39:05.159626 24206 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:05.159638 24206 net.cpp:86] Creating Layer ip1
I0428 19:39:05.159646 24206 net.cpp:408] ip1 <- pool1
I0428 19:39:05.159656 24206 net.cpp:382] ip1 -> ip1
I0428 19:39:05.159780 24206 net.cpp:124] Setting up ip1
I0428 19:39:05.159792 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.159812 24206 net.cpp:139] Memory required for data: 958800
I0428 19:39:05.159827 24206 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:05.159842 24206 net.cpp:86] Creating Layer relu1
I0428 19:39:05.159850 24206 net.cpp:408] relu1 <- ip1
I0428 19:39:05.159859 24206 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:05.160143 24206 net.cpp:124] Setting up relu1
I0428 19:39:05.160156 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.160162 24206 net.cpp:139] Memory required for data: 962800
I0428 19:39:05.160169 24206 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:05.160182 24206 net.cpp:86] Creating Layer ip2
I0428 19:39:05.160189 24206 net.cpp:408] ip2 <- ip1
I0428 19:39:05.160200 24206 net.cpp:382] ip2 -> ip2
I0428 19:39:05.160329 24206 net.cpp:124] Setting up ip2
I0428 19:39:05.160339 24206 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:05.160346 24206 net.cpp:139] Memory required for data: 982800
I0428 19:39:05.160357 24206 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:05.160367 24206 net.cpp:86] Creating Layer relu2
I0428 19:39:05.160378 24206 net.cpp:408] relu2 <- ip2
I0428 19:39:05.160390 24206 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:05.160580 24206 net.cpp:124] Setting up relu2
I0428 19:39:05.160593 24206 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:05.160599 24206 net.cpp:139] Memory required for data: 1002800
I0428 19:39:05.160605 24206 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:05.160616 24206 net.cpp:86] Creating Layer ip3
I0428 19:39:05.160624 24206 net.cpp:408] ip3 <- ip2
I0428 19:39:05.160632 24206 net.cpp:382] ip3 -> ip3
I0428 19:39:05.160768 24206 net.cpp:124] Setting up ip3
I0428 19:39:05.160778 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.160784 24206 net.cpp:139] Memory required for data: 1006800
I0428 19:39:05.160799 24206 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:05.160818 24206 net.cpp:86] Creating Layer relu3
I0428 19:39:05.160841 24206 net.cpp:408] relu3 <- ip3
I0428 19:39:05.160850 24206 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:05.161818 24206 net.cpp:124] Setting up relu3
I0428 19:39:05.161834 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.161837 24206 net.cpp:139] Memory required for data: 1010800
I0428 19:39:05.161841 24206 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:05.161847 24206 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:05.161851 24206 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:05.161859 24206 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:05.161867 24206 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:05.161921 24206 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:05.161928 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.161934 24206 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:05.161938 24206 net.cpp:139] Memory required for data: 1018800
I0428 19:39:05.161942 24206 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:05.161948 24206 net.cpp:86] Creating Layer accuracy
I0428 19:39:05.161952 24206 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:05.161957 24206 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:05.161962 24206 net.cpp:382] accuracy -> accuracy
I0428 19:39:05.161972 24206 net.cpp:124] Setting up accuracy
I0428 19:39:05.161976 24206 net.cpp:131] Top shape: (1)
I0428 19:39:05.161979 24206 net.cpp:139] Memory required for data: 1018804
I0428 19:39:05.161983 24206 layer_factory.hpp:77] Creating layer loss
I0428 19:39:05.161988 24206 net.cpp:86] Creating Layer loss
I0428 19:39:05.161991 24206 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:05.161996 24206 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:05.162000 24206 net.cpp:382] loss -> loss
I0428 19:39:05.162008 24206 layer_factory.hpp:77] Creating layer loss
I0428 19:39:05.162293 24206 net.cpp:124] Setting up loss
I0428 19:39:05.162303 24206 net.cpp:131] Top shape: (1)
I0428 19:39:05.162307 24206 net.cpp:134]     with loss weight 1
I0428 19:39:05.162314 24206 net.cpp:139] Memory required for data: 1018808
I0428 19:39:05.162331 24206 net.cpp:200] loss needs backward computation.
I0428 19:39:05.162335 24206 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:05.162341 24206 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:05.162345 24206 net.cpp:200] relu3 needs backward computation.
I0428 19:39:05.162349 24206 net.cpp:200] ip3 needs backward computation.
I0428 19:39:05.162353 24206 net.cpp:200] relu2 needs backward computation.
I0428 19:39:05.162356 24206 net.cpp:200] ip2 needs backward computation.
I0428 19:39:05.162359 24206 net.cpp:200] relu1 needs backward computation.
I0428 19:39:05.162362 24206 net.cpp:200] ip1 needs backward computation.
I0428 19:39:05.162366 24206 net.cpp:200] pool1 needs backward computation.
I0428 19:39:05.162370 24206 net.cpp:200] conv1 needs backward computation.
I0428 19:39:05.162374 24206 net.cpp:200] pool0 needs backward computation.
I0428 19:39:05.162377 24206 net.cpp:200] conv0 needs backward computation.
I0428 19:39:05.162382 24206 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:05.162387 24206 net.cpp:202] mnist does not need backward computation.
I0428 19:39:05.162390 24206 net.cpp:244] This network produces output accuracy
I0428 19:39:05.162395 24206 net.cpp:244] This network produces output loss
I0428 19:39:05.162408 24206 net.cpp:257] Network initialization done.
I0428 19:39:05.162457 24206 solver.cpp:56] Solver scaffolding done.
I0428 19:39:05.162855 24206 caffe.cpp:248] Starting Optimization
I0428 19:39:05.162863 24206 solver.cpp:273] Solving LeNet
I0428 19:39:05.162865 24206 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:05.163718 24206 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:05.166898 24206 blocking_queue.cpp:49] Waiting for data
I0428 19:39:05.225612 24213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:05.226068 24206 solver.cpp:398]     Test net output #0: accuracy = 0.0914
I0428 19:39:05.226089 24206 solver.cpp:398]     Test net output #1: loss = 2.3111 (* 1 = 2.3111 loss)
I0428 19:39:05.228001 24206 solver.cpp:219] Iteration 0 (0 iter/s, 0.0651099s/100 iters), loss = 2.3361
I0428 19:39:05.228029 24206 solver.cpp:238]     Train net output #0: loss = 2.3361 (* 1 = 2.3361 loss)
I0428 19:39:05.228041 24206 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:05.301029 24206 solver.cpp:219] Iteration 100 (1370.11 iter/s, 0.0729866s/100 iters), loss = 1.51373
I0428 19:39:05.301060 24206 solver.cpp:238]     Train net output #0: loss = 1.51373 (* 1 = 1.51373 loss)
I0428 19:39:05.301069 24206 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:05.373754 24206 solver.cpp:219] Iteration 200 (1375.81 iter/s, 0.0726845s/100 iters), loss = 0.959257
I0428 19:39:05.373782 24206 solver.cpp:238]     Train net output #0: loss = 0.959257 (* 1 = 0.959257 loss)
I0428 19:39:05.373790 24206 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:05.451725 24206 solver.cpp:219] Iteration 300 (1283.14 iter/s, 0.0779336s/100 iters), loss = 0.842728
I0428 19:39:05.451755 24206 solver.cpp:238]     Train net output #0: loss = 0.842728 (* 1 = 0.842728 loss)
I0428 19:39:05.451761 24206 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:05.529525 24206 solver.cpp:219] Iteration 400 (1285.98 iter/s, 0.0777615s/100 iters), loss = 1.10571
I0428 19:39:05.529553 24206 solver.cpp:238]     Train net output #0: loss = 1.10571 (* 1 = 1.10571 loss)
I0428 19:39:05.529561 24206 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:05.600111 24206 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:05.644363 24213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:05.644837 24206 solver.cpp:398]     Test net output #0: accuracy = 0.7131
I0428 19:39:05.644871 24206 solver.cpp:398]     Test net output #1: loss = 0.858488 (* 1 = 0.858488 loss)
I0428 19:39:05.645611 24206 solver.cpp:219] Iteration 500 (861.721 iter/s, 0.116047s/100 iters), loss = 1.06639
I0428 19:39:05.645634 24206 solver.cpp:238]     Train net output #0: loss = 1.06639 (* 1 = 1.06639 loss)
I0428 19:39:05.645655 24206 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:05.712117 24206 solver.cpp:219] Iteration 600 (1504.32 iter/s, 0.066475s/100 iters), loss = 0.592703
I0428 19:39:05.712157 24206 solver.cpp:238]     Train net output #0: loss = 0.592703 (* 1 = 0.592703 loss)
I0428 19:39:05.712162 24206 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:05.777851 24206 solver.cpp:219] Iteration 700 (1522.01 iter/s, 0.0657027s/100 iters), loss = 0.725455
I0428 19:39:05.777891 24206 solver.cpp:238]     Train net output #0: loss = 0.725455 (* 1 = 0.725455 loss)
I0428 19:39:05.777897 24206 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:05.844269 24206 solver.cpp:219] Iteration 800 (1506.32 iter/s, 0.0663869s/100 iters), loss = 0.842197
I0428 19:39:05.844310 24206 solver.cpp:238]     Train net output #0: loss = 0.842197 (* 1 = 0.842197 loss)
I0428 19:39:05.844316 24206 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:05.910867 24206 solver.cpp:219] Iteration 900 (1502.27 iter/s, 0.0665661s/100 iters), loss = 0.669827
I0428 19:39:05.910907 24206 solver.cpp:238]     Train net output #0: loss = 0.669827 (* 1 = 0.669827 loss)
I0428 19:39:05.910912 24206 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:05.933313 24212 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:05.977138 24206 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:05.977772 24206 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:05.978193 24206 solver.cpp:311] Iteration 1000, loss = 0.687331
I0428 19:39:05.978206 24206 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:06.024488 24213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:06.024950 24206 solver.cpp:398]     Test net output #0: accuracy = 0.7375
I0428 19:39:06.024986 24206 solver.cpp:398]     Test net output #1: loss = 0.761862 (* 1 = 0.761862 loss)
I0428 19:39:06.024991 24206 solver.cpp:316] Optimization Done.
I0428 19:39:06.024994 24206 caffe.cpp:259] Optimization Done.
