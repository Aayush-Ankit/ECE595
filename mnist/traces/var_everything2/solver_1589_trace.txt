I0428 20:33:29.008987  4299 caffe.cpp:218] Using GPUs 0
I0428 20:33:29.038882  4299 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:29.478389  4299 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1589.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:29.478530  4299 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1589.prototxt
I0428 20:33:29.478899  4299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:29.478914  4299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:29.478992  4299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:29.479054  4299 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:29.479133  4299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:29.479152  4299 net.cpp:86] Creating Layer mnist
I0428 20:33:29.479159  4299 net.cpp:382] mnist -> data
I0428 20:33:29.479177  4299 net.cpp:382] mnist -> label
I0428 20:33:29.480118  4299 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:29.482264  4299 net.cpp:124] Setting up mnist
I0428 20:33:29.482311  4299 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:29.482316  4299 net.cpp:131] Top shape: 64 (64)
I0428 20:33:29.482318  4299 net.cpp:139] Memory required for data: 200960
I0428 20:33:29.482323  4299 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:29.482355  4299 net.cpp:86] Creating Layer conv0
I0428 20:33:29.482372  4299 net.cpp:408] conv0 <- data
I0428 20:33:29.482384  4299 net.cpp:382] conv0 -> conv0
I0428 20:33:29.711681  4299 net.cpp:124] Setting up conv0
I0428 20:33:29.711707  4299 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:29.711711  4299 net.cpp:139] Memory required for data: 14946560
I0428 20:33:29.711725  4299 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:29.711736  4299 net.cpp:86] Creating Layer pool0
I0428 20:33:29.711740  4299 net.cpp:408] pool0 <- conv0
I0428 20:33:29.711745  4299 net.cpp:382] pool0 -> pool0
I0428 20:33:29.711804  4299 net.cpp:124] Setting up pool0
I0428 20:33:29.711809  4299 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:29.711812  4299 net.cpp:139] Memory required for data: 18632960
I0428 20:33:29.711815  4299 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:29.711827  4299 net.cpp:86] Creating Layer conv1
I0428 20:33:29.711828  4299 net.cpp:408] conv1 <- pool0
I0428 20:33:29.711833  4299 net.cpp:382] conv1 -> conv1
I0428 20:33:29.714129  4299 net.cpp:124] Setting up conv1
I0428 20:33:29.714159  4299 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:29.714161  4299 net.cpp:139] Memory required for data: 19042560
I0428 20:33:29.714170  4299 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:29.714179  4299 net.cpp:86] Creating Layer pool1
I0428 20:33:29.714182  4299 net.cpp:408] pool1 <- conv1
I0428 20:33:29.714186  4299 net.cpp:382] pool1 -> pool1
I0428 20:33:29.714237  4299 net.cpp:124] Setting up pool1
I0428 20:33:29.714242  4299 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:29.714246  4299 net.cpp:139] Memory required for data: 19144960
I0428 20:33:29.714248  4299 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:29.714254  4299 net.cpp:86] Creating Layer ip1
I0428 20:33:29.714257  4299 net.cpp:408] ip1 <- pool1
I0428 20:33:29.714262  4299 net.cpp:382] ip1 -> ip1
I0428 20:33:29.715355  4299 net.cpp:124] Setting up ip1
I0428 20:33:29.715368  4299 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:29.715373  4299 net.cpp:139] Memory required for data: 19151360
I0428 20:33:29.715380  4299 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:29.715387  4299 net.cpp:86] Creating Layer relu1
I0428 20:33:29.715391  4299 net.cpp:408] relu1 <- ip1
I0428 20:33:29.715395  4299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:29.715592  4299 net.cpp:124] Setting up relu1
I0428 20:33:29.715600  4299 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:29.715603  4299 net.cpp:139] Memory required for data: 19157760
I0428 20:33:29.715606  4299 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:29.715628  4299 net.cpp:86] Creating Layer ip2
I0428 20:33:29.715631  4299 net.cpp:408] ip2 <- ip1
I0428 20:33:29.715636  4299 net.cpp:382] ip2 -> ip2
I0428 20:33:29.715744  4299 net.cpp:124] Setting up ip2
I0428 20:33:29.715750  4299 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:29.715754  4299 net.cpp:139] Memory required for data: 19170560
I0428 20:33:29.715759  4299 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:29.715764  4299 net.cpp:86] Creating Layer relu2
I0428 20:33:29.715767  4299 net.cpp:408] relu2 <- ip2
I0428 20:33:29.715771  4299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:29.716583  4299 net.cpp:124] Setting up relu2
I0428 20:33:29.716594  4299 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:29.716614  4299 net.cpp:139] Memory required for data: 19183360
I0428 20:33:29.716616  4299 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:29.716624  4299 net.cpp:86] Creating Layer ip3
I0428 20:33:29.716626  4299 net.cpp:408] ip3 <- ip2
I0428 20:33:29.716632  4299 net.cpp:382] ip3 -> ip3
I0428 20:33:29.716760  4299 net.cpp:124] Setting up ip3
I0428 20:33:29.716768  4299 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:29.716770  4299 net.cpp:139] Memory required for data: 19185920
I0428 20:33:29.716778  4299 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:29.716784  4299 net.cpp:86] Creating Layer relu3
I0428 20:33:29.716786  4299 net.cpp:408] relu3 <- ip3
I0428 20:33:29.716804  4299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:29.717005  4299 net.cpp:124] Setting up relu3
I0428 20:33:29.717013  4299 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:29.717017  4299 net.cpp:139] Memory required for data: 19188480
I0428 20:33:29.717021  4299 layer_factory.hpp:77] Creating layer loss
I0428 20:33:29.717032  4299 net.cpp:86] Creating Layer loss
I0428 20:33:29.717036  4299 net.cpp:408] loss <- ip3
I0428 20:33:29.717041  4299 net.cpp:408] loss <- label
I0428 20:33:29.717046  4299 net.cpp:382] loss -> loss
I0428 20:33:29.717061  4299 layer_factory.hpp:77] Creating layer loss
I0428 20:33:29.717375  4299 net.cpp:124] Setting up loss
I0428 20:33:29.717384  4299 net.cpp:131] Top shape: (1)
I0428 20:33:29.717402  4299 net.cpp:134]     with loss weight 1
I0428 20:33:29.717432  4299 net.cpp:139] Memory required for data: 19188484
I0428 20:33:29.717435  4299 net.cpp:200] loss needs backward computation.
I0428 20:33:29.717440  4299 net.cpp:200] relu3 needs backward computation.
I0428 20:33:29.717444  4299 net.cpp:200] ip3 needs backward computation.
I0428 20:33:29.717447  4299 net.cpp:200] relu2 needs backward computation.
I0428 20:33:29.717450  4299 net.cpp:200] ip2 needs backward computation.
I0428 20:33:29.717453  4299 net.cpp:200] relu1 needs backward computation.
I0428 20:33:29.717456  4299 net.cpp:200] ip1 needs backward computation.
I0428 20:33:29.717459  4299 net.cpp:200] pool1 needs backward computation.
I0428 20:33:29.717463  4299 net.cpp:200] conv1 needs backward computation.
I0428 20:33:29.717465  4299 net.cpp:200] pool0 needs backward computation.
I0428 20:33:29.717469  4299 net.cpp:200] conv0 needs backward computation.
I0428 20:33:29.717489  4299 net.cpp:202] mnist does not need backward computation.
I0428 20:33:29.717491  4299 net.cpp:244] This network produces output loss
I0428 20:33:29.717500  4299 net.cpp:257] Network initialization done.
I0428 20:33:29.717922  4299 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1589.prototxt
I0428 20:33:29.717964  4299 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:29.718052  4299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:29.718144  4299 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:29.718204  4299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:29.718216  4299 net.cpp:86] Creating Layer mnist
I0428 20:33:29.718221  4299 net.cpp:382] mnist -> data
I0428 20:33:29.718243  4299 net.cpp:382] mnist -> label
I0428 20:33:29.718323  4299 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:29.720410  4299 net.cpp:124] Setting up mnist
I0428 20:33:29.720439  4299 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:29.720445  4299 net.cpp:131] Top shape: 100 (100)
I0428 20:33:29.720448  4299 net.cpp:139] Memory required for data: 314000
I0428 20:33:29.720453  4299 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:29.720459  4299 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:29.720463  4299 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:29.720468  4299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:29.720474  4299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:29.720553  4299 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:29.720559  4299 net.cpp:131] Top shape: 100 (100)
I0428 20:33:29.720562  4299 net.cpp:131] Top shape: 100 (100)
I0428 20:33:29.720566  4299 net.cpp:139] Memory required for data: 314800
I0428 20:33:29.720568  4299 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:29.720577  4299 net.cpp:86] Creating Layer conv0
I0428 20:33:29.720579  4299 net.cpp:408] conv0 <- data
I0428 20:33:29.720584  4299 net.cpp:382] conv0 -> conv0
I0428 20:33:29.722261  4299 net.cpp:124] Setting up conv0
I0428 20:33:29.722275  4299 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:29.722278  4299 net.cpp:139] Memory required for data: 23354800
I0428 20:33:29.722287  4299 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:29.722293  4299 net.cpp:86] Creating Layer pool0
I0428 20:33:29.722296  4299 net.cpp:408] pool0 <- conv0
I0428 20:33:29.722302  4299 net.cpp:382] pool0 -> pool0
I0428 20:33:29.722335  4299 net.cpp:124] Setting up pool0
I0428 20:33:29.722340  4299 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:29.722343  4299 net.cpp:139] Memory required for data: 29114800
I0428 20:33:29.722345  4299 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:29.722353  4299 net.cpp:86] Creating Layer conv1
I0428 20:33:29.722357  4299 net.cpp:408] conv1 <- pool0
I0428 20:33:29.722360  4299 net.cpp:382] conv1 -> conv1
I0428 20:33:29.724357  4299 net.cpp:124] Setting up conv1
I0428 20:33:29.724385  4299 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:29.724390  4299 net.cpp:139] Memory required for data: 29754800
I0428 20:33:29.724397  4299 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:29.724419  4299 net.cpp:86] Creating Layer pool1
I0428 20:33:29.724422  4299 net.cpp:408] pool1 <- conv1
I0428 20:33:29.724427  4299 net.cpp:382] pool1 -> pool1
I0428 20:33:29.724460  4299 net.cpp:124] Setting up pool1
I0428 20:33:29.724465  4299 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:29.724468  4299 net.cpp:139] Memory required for data: 29914800
I0428 20:33:29.724472  4299 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:29.724476  4299 net.cpp:86] Creating Layer ip1
I0428 20:33:29.724480  4299 net.cpp:408] ip1 <- pool1
I0428 20:33:29.724485  4299 net.cpp:382] ip1 -> ip1
I0428 20:33:29.724664  4299 net.cpp:124] Setting up ip1
I0428 20:33:29.724685  4299 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:29.724689  4299 net.cpp:139] Memory required for data: 29924800
I0428 20:33:29.724711  4299 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:29.724716  4299 net.cpp:86] Creating Layer relu1
I0428 20:33:29.724720  4299 net.cpp:408] relu1 <- ip1
I0428 20:33:29.724725  4299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:29.724946  4299 net.cpp:124] Setting up relu1
I0428 20:33:29.724958  4299 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:29.724962  4299 net.cpp:139] Memory required for data: 29934800
I0428 20:33:29.724966  4299 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:29.724972  4299 net.cpp:86] Creating Layer ip2
I0428 20:33:29.724975  4299 net.cpp:408] ip2 <- ip1
I0428 20:33:29.724982  4299 net.cpp:382] ip2 -> ip2
I0428 20:33:29.725086  4299 net.cpp:124] Setting up ip2
I0428 20:33:29.725093  4299 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:29.725096  4299 net.cpp:139] Memory required for data: 29954800
I0428 20:33:29.725102  4299 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:29.725106  4299 net.cpp:86] Creating Layer relu2
I0428 20:33:29.725109  4299 net.cpp:408] relu2 <- ip2
I0428 20:33:29.725113  4299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:29.725327  4299 net.cpp:124] Setting up relu2
I0428 20:33:29.725335  4299 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:29.725338  4299 net.cpp:139] Memory required for data: 29974800
I0428 20:33:29.725340  4299 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:29.725345  4299 net.cpp:86] Creating Layer ip3
I0428 20:33:29.725348  4299 net.cpp:408] ip3 <- ip2
I0428 20:33:29.725353  4299 net.cpp:382] ip3 -> ip3
I0428 20:33:29.725507  4299 net.cpp:124] Setting up ip3
I0428 20:33:29.725514  4299 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:29.725517  4299 net.cpp:139] Memory required for data: 29978800
I0428 20:33:29.725531  4299 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:29.725536  4299 net.cpp:86] Creating Layer relu3
I0428 20:33:29.725539  4299 net.cpp:408] relu3 <- ip3
I0428 20:33:29.725543  4299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:29.726326  4299 net.cpp:124] Setting up relu3
I0428 20:33:29.726338  4299 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:29.726341  4299 net.cpp:139] Memory required for data: 29982800
I0428 20:33:29.726344  4299 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:29.726351  4299 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:29.726353  4299 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:29.726358  4299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:29.726364  4299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:29.726410  4299 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:29.726415  4299 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:29.726419  4299 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:29.726421  4299 net.cpp:139] Memory required for data: 29990800
I0428 20:33:29.726424  4299 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:29.726429  4299 net.cpp:86] Creating Layer accuracy
I0428 20:33:29.726433  4299 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:29.726436  4299 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:29.726440  4299 net.cpp:382] accuracy -> accuracy
I0428 20:33:29.726447  4299 net.cpp:124] Setting up accuracy
I0428 20:33:29.726450  4299 net.cpp:131] Top shape: (1)
I0428 20:33:29.726454  4299 net.cpp:139] Memory required for data: 29990804
I0428 20:33:29.726467  4299 layer_factory.hpp:77] Creating layer loss
I0428 20:33:29.726471  4299 net.cpp:86] Creating Layer loss
I0428 20:33:29.726475  4299 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:29.726477  4299 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:29.726481  4299 net.cpp:382] loss -> loss
I0428 20:33:29.726486  4299 layer_factory.hpp:77] Creating layer loss
I0428 20:33:29.726728  4299 net.cpp:124] Setting up loss
I0428 20:33:29.726737  4299 net.cpp:131] Top shape: (1)
I0428 20:33:29.726740  4299 net.cpp:134]     with loss weight 1
I0428 20:33:29.726771  4299 net.cpp:139] Memory required for data: 29990808
I0428 20:33:29.726775  4299 net.cpp:200] loss needs backward computation.
I0428 20:33:29.726788  4299 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:29.726791  4299 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:29.726794  4299 net.cpp:200] relu3 needs backward computation.
I0428 20:33:29.726817  4299 net.cpp:200] ip3 needs backward computation.
I0428 20:33:29.726821  4299 net.cpp:200] relu2 needs backward computation.
I0428 20:33:29.726824  4299 net.cpp:200] ip2 needs backward computation.
I0428 20:33:29.726827  4299 net.cpp:200] relu1 needs backward computation.
I0428 20:33:29.726835  4299 net.cpp:200] ip1 needs backward computation.
I0428 20:33:29.726838  4299 net.cpp:200] pool1 needs backward computation.
I0428 20:33:29.726841  4299 net.cpp:200] conv1 needs backward computation.
I0428 20:33:29.726845  4299 net.cpp:200] pool0 needs backward computation.
I0428 20:33:29.726850  4299 net.cpp:200] conv0 needs backward computation.
I0428 20:33:29.726853  4299 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:29.726857  4299 net.cpp:202] mnist does not need backward computation.
I0428 20:33:29.726860  4299 net.cpp:244] This network produces output accuracy
I0428 20:33:29.726873  4299 net.cpp:244] This network produces output loss
I0428 20:33:29.726896  4299 net.cpp:257] Network initialization done.
I0428 20:33:29.726969  4299 solver.cpp:56] Solver scaffolding done.
I0428 20:33:29.727344  4299 caffe.cpp:248] Starting Optimization
I0428 20:33:29.727365  4299 solver.cpp:273] Solving LeNet
I0428 20:33:29.727368  4299 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:29.728180  4299 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:29.825274  4307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:29.827788  4299 solver.cpp:398]     Test net output #0: accuracy = 0.0825
I0428 20:33:29.827806  4299 solver.cpp:398]     Test net output #1: loss = 2.31976 (* 1 = 2.31976 loss)
I0428 20:33:29.832253  4299 solver.cpp:219] Iteration 0 (-6.93059e-31 iter/s, 0.10486s/100 iters), loss = 2.3096
I0428 20:33:29.832275  4299 solver.cpp:238]     Train net output #0: loss = 2.3096 (* 1 = 2.3096 loss)
I0428 20:33:29.832304  4299 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:30.040434  4299 solver.cpp:219] Iteration 100 (480.448 iter/s, 0.208139s/100 iters), loss = 0.817067
I0428 20:33:30.040482  4299 solver.cpp:238]     Train net output #0: loss = 0.817067 (* 1 = 0.817067 loss)
I0428 20:33:30.040494  4299 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:30.249783  4299 solver.cpp:219] Iteration 200 (477.808 iter/s, 0.209289s/100 iters), loss = 0.21374
I0428 20:33:30.249815  4299 solver.cpp:238]     Train net output #0: loss = 0.21374 (* 1 = 0.21374 loss)
I0428 20:33:30.249825  4299 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:30.460572  4299 solver.cpp:219] Iteration 300 (474.511 iter/s, 0.210743s/100 iters), loss = 0.201941
I0428 20:33:30.460598  4299 solver.cpp:238]     Train net output #0: loss = 0.201941 (* 1 = 0.201941 loss)
I0428 20:33:30.460620  4299 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:30.673619  4299 solver.cpp:219] Iteration 400 (469.476 iter/s, 0.213003s/100 iters), loss = 0.0695961
I0428 20:33:30.673651  4299 solver.cpp:238]     Train net output #0: loss = 0.0695961 (* 1 = 0.0695961 loss)
I0428 20:33:30.673657  4299 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:30.880954  4299 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:30.978557  4307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:30.982192  4299 solver.cpp:398]     Test net output #0: accuracy = 0.9668
I0428 20:33:30.982215  4299 solver.cpp:398]     Test net output #1: loss = 0.108974 (* 1 = 0.108974 loss)
I0428 20:33:30.984159  4299 solver.cpp:219] Iteration 500 (322.071 iter/s, 0.31049s/100 iters), loss = 0.119625
I0428 20:33:30.984182  4299 solver.cpp:238]     Train net output #0: loss = 0.119625 (* 1 = 0.119625 loss)
I0428 20:33:30.984236  4299 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:31.197752  4299 solver.cpp:219] Iteration 600 (468.268 iter/s, 0.213553s/100 iters), loss = 0.0909956
I0428 20:33:31.197782  4299 solver.cpp:238]     Train net output #0: loss = 0.0909956 (* 1 = 0.0909956 loss)
I0428 20:33:31.197791  4299 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:31.407176  4299 solver.cpp:219] Iteration 700 (477.602 iter/s, 0.209379s/100 iters), loss = 0.145004
I0428 20:33:31.407202  4299 solver.cpp:238]     Train net output #0: loss = 0.145004 (* 1 = 0.145004 loss)
I0428 20:33:31.407207  4299 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:31.625459  4299 solver.cpp:219] Iteration 800 (458.207 iter/s, 0.218242s/100 iters), loss = 0.224506
I0428 20:33:31.625489  4299 solver.cpp:238]     Train net output #0: loss = 0.224506 (* 1 = 0.224506 loss)
I0428 20:33:31.625497  4299 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:31.839043  4299 solver.cpp:219] Iteration 900 (468.299 iter/s, 0.213539s/100 iters), loss = 0.163399
I0428 20:33:31.839071  4299 solver.cpp:238]     Train net output #0: loss = 0.163399 (* 1 = 0.163399 loss)
I0428 20:33:31.839078  4299 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:31.910104  4305 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:32.048225  4299 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:32.050763  4299 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:32.052194  4299 solver.cpp:311] Iteration 1000, loss = 0.176566
I0428 20:33:32.052209  4299 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:32.148398  4307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:32.151736  4299 solver.cpp:398]     Test net output #0: accuracy = 0.9758
I0428 20:33:32.151754  4299 solver.cpp:398]     Test net output #1: loss = 0.0750913 (* 1 = 0.0750913 loss)
I0428 20:33:32.151759  4299 solver.cpp:316] Optimization Done.
I0428 20:33:32.151778  4299 caffe.cpp:259] Optimization Done.
