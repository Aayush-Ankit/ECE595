I0428 20:05:50.741346 30732 caffe.cpp:218] Using GPUs 0
I0428 20:05:50.779023 30732 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:51.314720 30732 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1011.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:51.314855 30732 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1011.prototxt
I0428 20:05:51.315253 30732 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:51.315271 30732 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:51.315368 30732 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:51.315443 30732 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:51.315548 30732 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:51.315572 30732 net.cpp:86] Creating Layer mnist
I0428 20:05:51.315580 30732 net.cpp:382] mnist -> data
I0428 20:05:51.315603 30732 net.cpp:382] mnist -> label
I0428 20:05:51.316687 30732 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:51.319146 30732 net.cpp:124] Setting up mnist
I0428 20:05:51.319164 30732 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:51.319170 30732 net.cpp:131] Top shape: 64 (64)
I0428 20:05:51.319175 30732 net.cpp:139] Memory required for data: 200960
I0428 20:05:51.319182 30732 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:51.319197 30732 net.cpp:86] Creating Layer conv0
I0428 20:05:51.319218 30732 net.cpp:408] conv0 <- data
I0428 20:05:51.319231 30732 net.cpp:382] conv0 -> conv0
I0428 20:05:51.610532 30732 net.cpp:124] Setting up conv0
I0428 20:05:51.610563 30732 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:51.610569 30732 net.cpp:139] Memory required for data: 3887360
I0428 20:05:51.610585 30732 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:51.610604 30732 net.cpp:86] Creating Layer pool0
I0428 20:05:51.610607 30732 net.cpp:408] pool0 <- conv0
I0428 20:05:51.610613 30732 net.cpp:382] pool0 -> pool0
I0428 20:05:51.610666 30732 net.cpp:124] Setting up pool0
I0428 20:05:51.610672 30732 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:51.610676 30732 net.cpp:139] Memory required for data: 4808960
I0428 20:05:51.610679 30732 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:51.610692 30732 net.cpp:86] Creating Layer conv1
I0428 20:05:51.610695 30732 net.cpp:408] conv1 <- pool0
I0428 20:05:51.610700 30732 net.cpp:382] conv1 -> conv1
I0428 20:05:51.613844 30732 net.cpp:124] Setting up conv1
I0428 20:05:51.613863 30732 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:51.613868 30732 net.cpp:139] Memory required for data: 4841728
I0428 20:05:51.613879 30732 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:51.613888 30732 net.cpp:86] Creating Layer pool1
I0428 20:05:51.613909 30732 net.cpp:408] pool1 <- conv1
I0428 20:05:51.613916 30732 net.cpp:382] pool1 -> pool1
I0428 20:05:51.613968 30732 net.cpp:124] Setting up pool1
I0428 20:05:51.613976 30732 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:51.613981 30732 net.cpp:139] Memory required for data: 4849920
I0428 20:05:51.613984 30732 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:51.613991 30732 net.cpp:86] Creating Layer ip1
I0428 20:05:51.613996 30732 net.cpp:408] ip1 <- pool1
I0428 20:05:51.614001 30732 net.cpp:382] ip1 -> ip1
I0428 20:05:51.614135 30732 net.cpp:124] Setting up ip1
I0428 20:05:51.614142 30732 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:51.614146 30732 net.cpp:139] Memory required for data: 4862720
I0428 20:05:51.614156 30732 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:51.614161 30732 net.cpp:86] Creating Layer relu1
I0428 20:05:51.614166 30732 net.cpp:408] relu1 <- ip1
I0428 20:05:51.614171 30732 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:51.614365 30732 net.cpp:124] Setting up relu1
I0428 20:05:51.614375 30732 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:51.614379 30732 net.cpp:139] Memory required for data: 4875520
I0428 20:05:51.614382 30732 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:51.614390 30732 net.cpp:86] Creating Layer ip2
I0428 20:05:51.614394 30732 net.cpp:408] ip2 <- ip1
I0428 20:05:51.614400 30732 net.cpp:382] ip2 -> ip2
I0428 20:05:51.614524 30732 net.cpp:124] Setting up ip2
I0428 20:05:51.614532 30732 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:51.614537 30732 net.cpp:139] Memory required for data: 4888320
I0428 20:05:51.614542 30732 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:51.614549 30732 net.cpp:86] Creating Layer relu2
I0428 20:05:51.614553 30732 net.cpp:408] relu2 <- ip2
I0428 20:05:51.614558 30732 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:51.615401 30732 net.cpp:124] Setting up relu2
I0428 20:05:51.615417 30732 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:51.615420 30732 net.cpp:139] Memory required for data: 4901120
I0428 20:05:51.615424 30732 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:51.615433 30732 net.cpp:86] Creating Layer ip3
I0428 20:05:51.615437 30732 net.cpp:408] ip3 <- ip2
I0428 20:05:51.615443 30732 net.cpp:382] ip3 -> ip3
I0428 20:05:51.615562 30732 net.cpp:124] Setting up ip3
I0428 20:05:51.615571 30732 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:51.615576 30732 net.cpp:139] Memory required for data: 4903680
I0428 20:05:51.615584 30732 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:51.615591 30732 net.cpp:86] Creating Layer relu3
I0428 20:05:51.615594 30732 net.cpp:408] relu3 <- ip3
I0428 20:05:51.615599 30732 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:51.615792 30732 net.cpp:124] Setting up relu3
I0428 20:05:51.615803 30732 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:51.615806 30732 net.cpp:139] Memory required for data: 4906240
I0428 20:05:51.615810 30732 layer_factory.hpp:77] Creating layer loss
I0428 20:05:51.615818 30732 net.cpp:86] Creating Layer loss
I0428 20:05:51.615820 30732 net.cpp:408] loss <- ip3
I0428 20:05:51.615825 30732 net.cpp:408] loss <- label
I0428 20:05:51.615833 30732 net.cpp:382] loss -> loss
I0428 20:05:51.615854 30732 layer_factory.hpp:77] Creating layer loss
I0428 20:05:51.616118 30732 net.cpp:124] Setting up loss
I0428 20:05:51.616128 30732 net.cpp:131] Top shape: (1)
I0428 20:05:51.616132 30732 net.cpp:134]     with loss weight 1
I0428 20:05:51.616149 30732 net.cpp:139] Memory required for data: 4906244
I0428 20:05:51.616153 30732 net.cpp:200] loss needs backward computation.
I0428 20:05:51.616158 30732 net.cpp:200] relu3 needs backward computation.
I0428 20:05:51.616161 30732 net.cpp:200] ip3 needs backward computation.
I0428 20:05:51.616164 30732 net.cpp:200] relu2 needs backward computation.
I0428 20:05:51.616168 30732 net.cpp:200] ip2 needs backward computation.
I0428 20:05:51.616171 30732 net.cpp:200] relu1 needs backward computation.
I0428 20:05:51.616175 30732 net.cpp:200] ip1 needs backward computation.
I0428 20:05:51.616178 30732 net.cpp:200] pool1 needs backward computation.
I0428 20:05:51.616183 30732 net.cpp:200] conv1 needs backward computation.
I0428 20:05:51.616186 30732 net.cpp:200] pool0 needs backward computation.
I0428 20:05:51.616189 30732 net.cpp:200] conv0 needs backward computation.
I0428 20:05:51.616194 30732 net.cpp:202] mnist does not need backward computation.
I0428 20:05:51.616197 30732 net.cpp:244] This network produces output loss
I0428 20:05:51.616209 30732 net.cpp:257] Network initialization done.
I0428 20:05:51.616586 30732 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1011.prototxt
I0428 20:05:51.616619 30732 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:51.616727 30732 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:51.616828 30732 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:51.616879 30732 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:51.616897 30732 net.cpp:86] Creating Layer mnist
I0428 20:05:51.616904 30732 net.cpp:382] mnist -> data
I0428 20:05:51.616912 30732 net.cpp:382] mnist -> label
I0428 20:05:51.617012 30732 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:51.619199 30732 net.cpp:124] Setting up mnist
I0428 20:05:51.619215 30732 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:51.619220 30732 net.cpp:131] Top shape: 100 (100)
I0428 20:05:51.619225 30732 net.cpp:139] Memory required for data: 314000
I0428 20:05:51.619228 30732 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:51.619240 30732 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:51.619246 30732 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:51.619251 30732 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:51.619259 30732 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:51.619314 30732 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:51.619320 30732 net.cpp:131] Top shape: 100 (100)
I0428 20:05:51.619325 30732 net.cpp:131] Top shape: 100 (100)
I0428 20:05:51.619328 30732 net.cpp:139] Memory required for data: 314800
I0428 20:05:51.619333 30732 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:51.619341 30732 net.cpp:86] Creating Layer conv0
I0428 20:05:51.619345 30732 net.cpp:408] conv0 <- data
I0428 20:05:51.619351 30732 net.cpp:382] conv0 -> conv0
I0428 20:05:51.621206 30732 net.cpp:124] Setting up conv0
I0428 20:05:51.621223 30732 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:51.621229 30732 net.cpp:139] Memory required for data: 6074800
I0428 20:05:51.621240 30732 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:51.621248 30732 net.cpp:86] Creating Layer pool0
I0428 20:05:51.621251 30732 net.cpp:408] pool0 <- conv0
I0428 20:05:51.621258 30732 net.cpp:382] pool0 -> pool0
I0428 20:05:51.621300 30732 net.cpp:124] Setting up pool0
I0428 20:05:51.621316 30732 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:51.621320 30732 net.cpp:139] Memory required for data: 7514800
I0428 20:05:51.621323 30732 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:51.621335 30732 net.cpp:86] Creating Layer conv1
I0428 20:05:51.621338 30732 net.cpp:408] conv1 <- pool0
I0428 20:05:51.621345 30732 net.cpp:382] conv1 -> conv1
I0428 20:05:51.623621 30732 net.cpp:124] Setting up conv1
I0428 20:05:51.623638 30732 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:51.623642 30732 net.cpp:139] Memory required for data: 7566000
I0428 20:05:51.623653 30732 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:51.623661 30732 net.cpp:86] Creating Layer pool1
I0428 20:05:51.623666 30732 net.cpp:408] pool1 <- conv1
I0428 20:05:51.623672 30732 net.cpp:382] pool1 -> pool1
I0428 20:05:51.623723 30732 net.cpp:124] Setting up pool1
I0428 20:05:51.623734 30732 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:51.623739 30732 net.cpp:139] Memory required for data: 7578800
I0428 20:05:51.623742 30732 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:51.623749 30732 net.cpp:86] Creating Layer ip1
I0428 20:05:51.623752 30732 net.cpp:408] ip1 <- pool1
I0428 20:05:51.623759 30732 net.cpp:382] ip1 -> ip1
I0428 20:05:51.623939 30732 net.cpp:124] Setting up ip1
I0428 20:05:51.623949 30732 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:51.623965 30732 net.cpp:139] Memory required for data: 7598800
I0428 20:05:51.623975 30732 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:51.623980 30732 net.cpp:86] Creating Layer relu1
I0428 20:05:51.623984 30732 net.cpp:408] relu1 <- ip1
I0428 20:05:51.623991 30732 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:51.624187 30732 net.cpp:124] Setting up relu1
I0428 20:05:51.624198 30732 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:51.624202 30732 net.cpp:139] Memory required for data: 7618800
I0428 20:05:51.624205 30732 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:51.624214 30732 net.cpp:86] Creating Layer ip2
I0428 20:05:51.624218 30732 net.cpp:408] ip2 <- ip1
I0428 20:05:51.624224 30732 net.cpp:382] ip2 -> ip2
I0428 20:05:51.624356 30732 net.cpp:124] Setting up ip2
I0428 20:05:51.624363 30732 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:51.624367 30732 net.cpp:139] Memory required for data: 7638800
I0428 20:05:51.624373 30732 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:51.624379 30732 net.cpp:86] Creating Layer relu2
I0428 20:05:51.624383 30732 net.cpp:408] relu2 <- ip2
I0428 20:05:51.624388 30732 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:51.624557 30732 net.cpp:124] Setting up relu2
I0428 20:05:51.624567 30732 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:51.624570 30732 net.cpp:139] Memory required for data: 7658800
I0428 20:05:51.624574 30732 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:51.624580 30732 net.cpp:86] Creating Layer ip3
I0428 20:05:51.624584 30732 net.cpp:408] ip3 <- ip2
I0428 20:05:51.624590 30732 net.cpp:382] ip3 -> ip3
I0428 20:05:51.624703 30732 net.cpp:124] Setting up ip3
I0428 20:05:51.624711 30732 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:51.624716 30732 net.cpp:139] Memory required for data: 7662800
I0428 20:05:51.624725 30732 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:51.624730 30732 net.cpp:86] Creating Layer relu3
I0428 20:05:51.624734 30732 net.cpp:408] relu3 <- ip3
I0428 20:05:51.624739 30732 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:51.625674 30732 net.cpp:124] Setting up relu3
I0428 20:05:51.625689 30732 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:51.625694 30732 net.cpp:139] Memory required for data: 7666800
I0428 20:05:51.625697 30732 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:51.625704 30732 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:51.625707 30732 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:51.625715 30732 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:51.625721 30732 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:51.625764 30732 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:51.625771 30732 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:51.625777 30732 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:51.625780 30732 net.cpp:139] Memory required for data: 7674800
I0428 20:05:51.625784 30732 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:51.625790 30732 net.cpp:86] Creating Layer accuracy
I0428 20:05:51.625794 30732 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:51.625799 30732 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:51.625804 30732 net.cpp:382] accuracy -> accuracy
I0428 20:05:51.625813 30732 net.cpp:124] Setting up accuracy
I0428 20:05:51.625816 30732 net.cpp:131] Top shape: (1)
I0428 20:05:51.625820 30732 net.cpp:139] Memory required for data: 7674804
I0428 20:05:51.625824 30732 layer_factory.hpp:77] Creating layer loss
I0428 20:05:51.625830 30732 net.cpp:86] Creating Layer loss
I0428 20:05:51.625834 30732 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:51.625838 30732 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:51.625844 30732 net.cpp:382] loss -> loss
I0428 20:05:51.625850 30732 layer_factory.hpp:77] Creating layer loss
I0428 20:05:51.626119 30732 net.cpp:124] Setting up loss
I0428 20:05:51.626130 30732 net.cpp:131] Top shape: (1)
I0428 20:05:51.626134 30732 net.cpp:134]     with loss weight 1
I0428 20:05:51.626142 30732 net.cpp:139] Memory required for data: 7674808
I0428 20:05:51.626159 30732 net.cpp:200] loss needs backward computation.
I0428 20:05:51.626164 30732 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:51.626170 30732 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:51.626173 30732 net.cpp:200] relu3 needs backward computation.
I0428 20:05:51.626178 30732 net.cpp:200] ip3 needs backward computation.
I0428 20:05:51.626181 30732 net.cpp:200] relu2 needs backward computation.
I0428 20:05:51.626185 30732 net.cpp:200] ip2 needs backward computation.
I0428 20:05:51.626188 30732 net.cpp:200] relu1 needs backward computation.
I0428 20:05:51.626191 30732 net.cpp:200] ip1 needs backward computation.
I0428 20:05:51.626196 30732 net.cpp:200] pool1 needs backward computation.
I0428 20:05:51.626199 30732 net.cpp:200] conv1 needs backward computation.
I0428 20:05:51.626204 30732 net.cpp:200] pool0 needs backward computation.
I0428 20:05:51.626207 30732 net.cpp:200] conv0 needs backward computation.
I0428 20:05:51.626214 30732 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:51.626217 30732 net.cpp:202] mnist does not need backward computation.
I0428 20:05:51.626221 30732 net.cpp:244] This network produces output accuracy
I0428 20:05:51.626225 30732 net.cpp:244] This network produces output loss
I0428 20:05:51.626238 30732 net.cpp:257] Network initialization done.
I0428 20:05:51.626288 30732 solver.cpp:56] Solver scaffolding done.
I0428 20:05:51.626691 30732 caffe.cpp:248] Starting Optimization
I0428 20:05:51.626698 30732 solver.cpp:273] Solving LeNet
I0428 20:05:51.626701 30732 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:51.627668 30732 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:51.633739 30732 blocking_queue.cpp:49] Waiting for data
I0428 20:05:51.705874 30741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:51.706722 30732 solver.cpp:398]     Test net output #0: accuracy = 0.0784
I0428 20:05:51.706778 30732 solver.cpp:398]     Test net output #1: loss = 2.31909 (* 1 = 2.31909 loss)
I0428 20:05:51.711228 30732 solver.cpp:219] Iteration 0 (0 iter/s, 0.0844841s/100 iters), loss = 2.31388
I0428 20:05:51.711271 30732 solver.cpp:238]     Train net output #0: loss = 2.31388 (* 1 = 2.31388 loss)
I0428 20:05:51.711289 30732 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:51.807307 30732 solver.cpp:219] Iteration 100 (1041.37 iter/s, 0.0960277s/100 iters), loss = 1.0988
I0428 20:05:51.807339 30732 solver.cpp:238]     Train net output #0: loss = 1.0988 (* 1 = 1.0988 loss)
I0428 20:05:51.807348 30732 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:51.898257 30732 solver.cpp:219] Iteration 200 (1100.03 iter/s, 0.0909066s/100 iters), loss = 0.550119
I0428 20:05:51.898288 30732 solver.cpp:238]     Train net output #0: loss = 0.550119 (* 1 = 0.550119 loss)
I0428 20:05:51.898296 30732 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:51.988663 30732 solver.cpp:219] Iteration 300 (1106.62 iter/s, 0.0903649s/100 iters), loss = 0.57803
I0428 20:05:51.988694 30732 solver.cpp:238]     Train net output #0: loss = 0.57803 (* 1 = 0.57803 loss)
I0428 20:05:51.988703 30732 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:52.079103 30732 solver.cpp:219] Iteration 400 (1106.2 iter/s, 0.0903997s/100 iters), loss = 0.37183
I0428 20:05:52.079134 30732 solver.cpp:238]     Train net output #0: loss = 0.37183 (* 1 = 0.37183 loss)
I0428 20:05:52.079143 30732 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:52.180512 30732 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:52.235893 30741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:52.237257 30732 solver.cpp:398]     Test net output #0: accuracy = 0.9093
I0428 20:05:52.237282 30732 solver.cpp:398]     Test net output #1: loss = 0.292462 (* 1 = 0.292462 loss)
I0428 20:05:52.238169 30732 solver.cpp:219] Iteration 500 (628.844 iter/s, 0.159022s/100 iters), loss = 0.33144
I0428 20:05:52.238196 30732 solver.cpp:238]     Train net output #0: loss = 0.33144 (* 1 = 0.33144 loss)
I0428 20:05:52.238227 30732 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:52.329056 30732 solver.cpp:219] Iteration 600 (1100.74 iter/s, 0.0908483s/100 iters), loss = 0.166714
I0428 20:05:52.329087 30732 solver.cpp:238]     Train net output #0: loss = 0.166714 (* 1 = 0.166714 loss)
I0428 20:05:52.329097 30732 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:52.425772 30732 solver.cpp:219] Iteration 700 (1034.4 iter/s, 0.0966748s/100 iters), loss = 0.28695
I0428 20:05:52.425803 30732 solver.cpp:238]     Train net output #0: loss = 0.28695 (* 1 = 0.28695 loss)
I0428 20:05:52.425812 30732 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:52.515183 30732 solver.cpp:219] Iteration 800 (1118.95 iter/s, 0.0893696s/100 iters), loss = 0.283639
I0428 20:05:52.515215 30732 solver.cpp:238]     Train net output #0: loss = 0.283639 (* 1 = 0.283639 loss)
I0428 20:05:52.515223 30732 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:52.604802 30732 solver.cpp:219] Iteration 900 (1116.33 iter/s, 0.0895795s/100 iters), loss = 0.308414
I0428 20:05:52.604852 30732 solver.cpp:238]     Train net output #0: loss = 0.308414 (* 1 = 0.308414 loss)
I0428 20:05:52.604859 30732 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:52.633702 30740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:52.690043 30732 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:52.690774 30732 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:52.691402 30732 solver.cpp:311] Iteration 1000, loss = 0.132199
I0428 20:05:52.691416 30732 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:52.766312 30741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:52.766928 30732 solver.cpp:398]     Test net output #0: accuracy = 0.9499
I0428 20:05:52.766948 30732 solver.cpp:398]     Test net output #1: loss = 0.153709 (* 1 = 0.153709 loss)
I0428 20:05:52.766969 30732 solver.cpp:316] Optimization Done.
I0428 20:05:52.766973 30732 caffe.cpp:259] Optimization Done.
