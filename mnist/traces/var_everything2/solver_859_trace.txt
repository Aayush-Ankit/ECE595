I0428 19:59:49.755622 29335 caffe.cpp:218] Using GPUs 0
I0428 19:59:49.793716 29335 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:50.306110 29335 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test859.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:50.306247 29335 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test859.prototxt
I0428 19:59:50.306596 29335 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:50.306610 29335 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:50.306694 29335 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:50.306777 29335 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:50.306881 29335 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:50.306906 29335 net.cpp:86] Creating Layer mnist
I0428 19:59:50.306913 29335 net.cpp:382] mnist -> data
I0428 19:59:50.306937 29335 net.cpp:382] mnist -> label
I0428 19:59:50.308017 29335 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:50.310678 29335 net.cpp:124] Setting up mnist
I0428 19:59:50.310698 29335 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:50.310729 29335 net.cpp:131] Top shape: 64 (64)
I0428 19:59:50.310734 29335 net.cpp:139] Memory required for data: 200960
I0428 19:59:50.310741 29335 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:50.310757 29335 net.cpp:86] Creating Layer conv0
I0428 19:59:50.310762 29335 net.cpp:408] conv0 <- data
I0428 19:59:50.310776 29335 net.cpp:382] conv0 -> conv0
I0428 19:59:50.571876 29335 net.cpp:124] Setting up conv0
I0428 19:59:50.571918 29335 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:50.571921 29335 net.cpp:139] Memory required for data: 1675520
I0428 19:59:50.571936 29335 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:50.571949 29335 net.cpp:86] Creating Layer pool0
I0428 19:59:50.571952 29335 net.cpp:408] pool0 <- conv0
I0428 19:59:50.571972 29335 net.cpp:382] pool0 -> pool0
I0428 19:59:50.572018 29335 net.cpp:124] Setting up pool0
I0428 19:59:50.572023 29335 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:50.572041 29335 net.cpp:139] Memory required for data: 2044160
I0428 19:59:50.572044 29335 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:50.572055 29335 net.cpp:86] Creating Layer conv1
I0428 19:59:50.572058 29335 net.cpp:408] conv1 <- pool0
I0428 19:59:50.572063 29335 net.cpp:382] conv1 -> conv1
I0428 19:59:50.574798 29335 net.cpp:124] Setting up conv1
I0428 19:59:50.574813 29335 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:59:50.574817 29335 net.cpp:139] Memory required for data: 2453760
I0428 19:59:50.574826 29335 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:50.574832 29335 net.cpp:86] Creating Layer pool1
I0428 19:59:50.574836 29335 net.cpp:408] pool1 <- conv1
I0428 19:59:50.574841 29335 net.cpp:382] pool1 -> pool1
I0428 19:59:50.574877 29335 net.cpp:124] Setting up pool1
I0428 19:59:50.574904 29335 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:59:50.574908 29335 net.cpp:139] Memory required for data: 2556160
I0428 19:59:50.574910 29335 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:50.574916 29335 net.cpp:86] Creating Layer ip1
I0428 19:59:50.574919 29335 net.cpp:408] ip1 <- pool1
I0428 19:59:50.574923 29335 net.cpp:382] ip1 -> ip1
I0428 19:59:50.575891 29335 net.cpp:124] Setting up ip1
I0428 19:59:50.575902 29335 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:50.575906 29335 net.cpp:139] Memory required for data: 2558720
I0428 19:59:50.575913 29335 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:50.575919 29335 net.cpp:86] Creating Layer relu1
I0428 19:59:50.575922 29335 net.cpp:408] relu1 <- ip1
I0428 19:59:50.575927 29335 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:50.576097 29335 net.cpp:124] Setting up relu1
I0428 19:59:50.576105 29335 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:50.576108 29335 net.cpp:139] Memory required for data: 2561280
I0428 19:59:50.576112 29335 layer_factory.hpp:77] Creating layer loss
I0428 19:59:50.576117 29335 net.cpp:86] Creating Layer loss
I0428 19:59:50.576126 29335 net.cpp:408] loss <- ip1
I0428 19:59:50.576130 29335 net.cpp:408] loss <- label
I0428 19:59:50.576134 29335 net.cpp:382] loss -> loss
I0428 19:59:50.576148 29335 layer_factory.hpp:77] Creating layer loss
I0428 19:59:50.576974 29335 net.cpp:124] Setting up loss
I0428 19:59:50.576987 29335 net.cpp:131] Top shape: (1)
I0428 19:59:50.576989 29335 net.cpp:134]     with loss weight 1
I0428 19:59:50.577004 29335 net.cpp:139] Memory required for data: 2561284
I0428 19:59:50.577008 29335 net.cpp:200] loss needs backward computation.
I0428 19:59:50.577013 29335 net.cpp:200] relu1 needs backward computation.
I0428 19:59:50.577015 29335 net.cpp:200] ip1 needs backward computation.
I0428 19:59:50.577018 29335 net.cpp:200] pool1 needs backward computation.
I0428 19:59:50.577020 29335 net.cpp:200] conv1 needs backward computation.
I0428 19:59:50.577023 29335 net.cpp:200] pool0 needs backward computation.
I0428 19:59:50.577026 29335 net.cpp:200] conv0 needs backward computation.
I0428 19:59:50.577029 29335 net.cpp:202] mnist does not need backward computation.
I0428 19:59:50.577033 29335 net.cpp:244] This network produces output loss
I0428 19:59:50.577040 29335 net.cpp:257] Network initialization done.
I0428 19:59:50.577330 29335 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test859.prototxt
I0428 19:59:50.577353 29335 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:50.577425 29335 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:50.577491 29335 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:50.577535 29335 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:50.577546 29335 net.cpp:86] Creating Layer mnist
I0428 19:59:50.577550 29335 net.cpp:382] mnist -> data
I0428 19:59:50.577558 29335 net.cpp:382] mnist -> label
I0428 19:59:50.577651 29335 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:50.579658 29335 net.cpp:124] Setting up mnist
I0428 19:59:50.579680 29335 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:50.579685 29335 net.cpp:131] Top shape: 100 (100)
I0428 19:59:50.579689 29335 net.cpp:139] Memory required for data: 314000
I0428 19:59:50.579691 29335 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:50.579699 29335 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:50.579701 29335 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:50.579706 29335 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:50.579712 29335 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:50.579818 29335 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:50.579839 29335 net.cpp:131] Top shape: 100 (100)
I0428 19:59:50.579843 29335 net.cpp:131] Top shape: 100 (100)
I0428 19:59:50.579845 29335 net.cpp:139] Memory required for data: 314800
I0428 19:59:50.579849 29335 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:50.579856 29335 net.cpp:86] Creating Layer conv0
I0428 19:59:50.579859 29335 net.cpp:408] conv0 <- data
I0428 19:59:50.579874 29335 net.cpp:382] conv0 -> conv0
I0428 19:59:50.580744 29335 net.cpp:124] Setting up conv0
I0428 19:59:50.580756 29335 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:50.580760 29335 net.cpp:139] Memory required for data: 2618800
I0428 19:59:50.580767 29335 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:50.580787 29335 net.cpp:86] Creating Layer pool0
I0428 19:59:50.580790 29335 net.cpp:408] pool0 <- conv0
I0428 19:59:50.580796 29335 net.cpp:382] pool0 -> pool0
I0428 19:59:50.580852 29335 net.cpp:124] Setting up pool0
I0428 19:59:50.580857 29335 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:50.580859 29335 net.cpp:139] Memory required for data: 3194800
I0428 19:59:50.580862 29335 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:50.580870 29335 net.cpp:86] Creating Layer conv1
I0428 19:59:50.580873 29335 net.cpp:408] conv1 <- pool0
I0428 19:59:50.580878 29335 net.cpp:382] conv1 -> conv1
I0428 19:59:50.582973 29335 net.cpp:124] Setting up conv1
I0428 19:59:50.582988 29335 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:59:50.582991 29335 net.cpp:139] Memory required for data: 3834800
I0428 19:59:50.582999 29335 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:50.583006 29335 net.cpp:86] Creating Layer pool1
I0428 19:59:50.583020 29335 net.cpp:408] pool1 <- conv1
I0428 19:59:50.583035 29335 net.cpp:382] pool1 -> pool1
I0428 19:59:50.583103 29335 net.cpp:124] Setting up pool1
I0428 19:59:50.583109 29335 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:59:50.583112 29335 net.cpp:139] Memory required for data: 3994800
I0428 19:59:50.583114 29335 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:50.583120 29335 net.cpp:86] Creating Layer ip1
I0428 19:59:50.583123 29335 net.cpp:408] ip1 <- pool1
I0428 19:59:50.583147 29335 net.cpp:382] ip1 -> ip1
I0428 19:59:50.583259 29335 net.cpp:124] Setting up ip1
I0428 19:59:50.583266 29335 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:50.583269 29335 net.cpp:139] Memory required for data: 3998800
I0428 19:59:50.583276 29335 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:50.583279 29335 net.cpp:86] Creating Layer relu1
I0428 19:59:50.583282 29335 net.cpp:408] relu1 <- ip1
I0428 19:59:50.583287 29335 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:50.584143 29335 net.cpp:124] Setting up relu1
I0428 19:59:50.584156 29335 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:50.584159 29335 net.cpp:139] Memory required for data: 4002800
I0428 19:59:50.584163 29335 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:59:50.584170 29335 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:59:50.584174 29335 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:59:50.584180 29335 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:59:50.584187 29335 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:59:50.584261 29335 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:59:50.584270 29335 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:50.584273 29335 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:50.584275 29335 net.cpp:139] Memory required for data: 4010800
I0428 19:59:50.584278 29335 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:50.584297 29335 net.cpp:86] Creating Layer accuracy
I0428 19:59:50.584300 29335 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:59:50.584309 29335 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:50.584313 29335 net.cpp:382] accuracy -> accuracy
I0428 19:59:50.584319 29335 net.cpp:124] Setting up accuracy
I0428 19:59:50.584323 29335 net.cpp:131] Top shape: (1)
I0428 19:59:50.584326 29335 net.cpp:139] Memory required for data: 4010804
I0428 19:59:50.584328 29335 layer_factory.hpp:77] Creating layer loss
I0428 19:59:50.584332 29335 net.cpp:86] Creating Layer loss
I0428 19:59:50.584336 29335 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:59:50.584338 29335 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:50.584342 29335 net.cpp:382] loss -> loss
I0428 19:59:50.584348 29335 layer_factory.hpp:77] Creating layer loss
I0428 19:59:50.584558 29335 net.cpp:124] Setting up loss
I0428 19:59:50.584566 29335 net.cpp:131] Top shape: (1)
I0428 19:59:50.584569 29335 net.cpp:134]     with loss weight 1
I0428 19:59:50.584575 29335 net.cpp:139] Memory required for data: 4010808
I0428 19:59:50.584578 29335 net.cpp:200] loss needs backward computation.
I0428 19:59:50.584581 29335 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:50.584585 29335 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:59:50.584599 29335 net.cpp:200] relu1 needs backward computation.
I0428 19:59:50.584602 29335 net.cpp:200] ip1 needs backward computation.
I0428 19:59:50.584604 29335 net.cpp:200] pool1 needs backward computation.
I0428 19:59:50.584609 29335 net.cpp:200] conv1 needs backward computation.
I0428 19:59:50.584611 29335 net.cpp:200] pool0 needs backward computation.
I0428 19:59:50.584614 29335 net.cpp:200] conv0 needs backward computation.
I0428 19:59:50.584617 29335 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:50.584620 29335 net.cpp:202] mnist does not need backward computation.
I0428 19:59:50.584623 29335 net.cpp:244] This network produces output accuracy
I0428 19:59:50.584626 29335 net.cpp:244] This network produces output loss
I0428 19:59:50.584643 29335 net.cpp:257] Network initialization done.
I0428 19:59:50.584674 29335 solver.cpp:56] Solver scaffolding done.
I0428 19:59:50.584942 29335 caffe.cpp:248] Starting Optimization
I0428 19:59:50.584950 29335 solver.cpp:273] Solving LeNet
I0428 19:59:50.584954 29335 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:50.585077 29335 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:50.588521 29335 blocking_queue.cpp:49] Waiting for data
I0428 19:59:50.658759 29342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:50.659234 29335 solver.cpp:398]     Test net output #0: accuracy = 0.0399
I0428 19:59:50.659251 29335 solver.cpp:398]     Test net output #1: loss = 2.3835 (* 1 = 2.3835 loss)
I0428 19:59:50.661391 29335 solver.cpp:219] Iteration 0 (0 iter/s, 0.0764119s/100 iters), loss = 2.37054
I0428 19:59:50.661424 29335 solver.cpp:238]     Train net output #0: loss = 2.37054 (* 1 = 2.37054 loss)
I0428 19:59:50.661435 29335 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:50.735321 29335 solver.cpp:219] Iteration 100 (1353.41 iter/s, 0.0738873s/100 iters), loss = 0.871958
I0428 19:59:50.735345 29335 solver.cpp:238]     Train net output #0: loss = 0.871958 (* 1 = 0.871958 loss)
I0428 19:59:50.735368 29335 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:50.808109 29335 solver.cpp:219] Iteration 200 (1374.49 iter/s, 0.0727542s/100 iters), loss = 0.684878
I0428 19:59:50.808135 29335 solver.cpp:238]     Train net output #0: loss = 0.684878 (* 1 = 0.684878 loss)
I0428 19:59:50.808157 29335 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:50.880900 29335 solver.cpp:219] Iteration 300 (1374.45 iter/s, 0.0727562s/100 iters), loss = 0.40757
I0428 19:59:50.880925 29335 solver.cpp:238]     Train net output #0: loss = 0.40757 (* 1 = 0.40757 loss)
I0428 19:59:50.880947 29335 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:50.954138 29335 solver.cpp:219] Iteration 400 (1366.07 iter/s, 0.0732027s/100 iters), loss = 0.500446
I0428 19:59:50.954162 29335 solver.cpp:238]     Train net output #0: loss = 0.500446 (* 1 = 0.500446 loss)
I0428 19:59:50.954169 29335 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:51.026952 29335 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:51.098971 29342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:51.099550 29335 solver.cpp:398]     Test net output #0: accuracy = 0.9249
I0428 19:59:51.099581 29335 solver.cpp:398]     Test net output #1: loss = 0.374455 (* 1 = 0.374455 loss)
I0428 19:59:51.100567 29335 solver.cpp:219] Iteration 500 (683.111 iter/s, 0.146389s/100 iters), loss = 0.346317
I0428 19:59:51.100620 29335 solver.cpp:238]     Train net output #0: loss = 0.346317 (* 1 = 0.346317 loss)
I0428 19:59:51.100633 29335 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:51.182938 29335 solver.cpp:219] Iteration 600 (1214.88 iter/s, 0.0823127s/100 iters), loss = 0.30916
I0428 19:59:51.182970 29335 solver.cpp:238]     Train net output #0: loss = 0.30916 (* 1 = 0.30916 loss)
I0428 19:59:51.182977 29335 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:51.257027 29335 solver.cpp:219] Iteration 700 (1350.47 iter/s, 0.0740485s/100 iters), loss = 0.453472
I0428 19:59:51.257053 29335 solver.cpp:238]     Train net output #0: loss = 0.453472 (* 1 = 0.453472 loss)
I0428 19:59:51.257074 29335 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:51.330493 29335 solver.cpp:219] Iteration 800 (1361.8 iter/s, 0.073432s/100 iters), loss = 0.371523
I0428 19:59:51.330533 29335 solver.cpp:238]     Train net output #0: loss = 0.371523 (* 1 = 0.371523 loss)
I0428 19:59:51.330555 29335 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:51.412310 29335 solver.cpp:219] Iteration 900 (1223.03 iter/s, 0.0817643s/100 iters), loss = 0.21403
I0428 19:59:51.412343 29335 solver.cpp:238]     Train net output #0: loss = 0.21403 (* 1 = 0.21403 loss)
I0428 19:59:51.412348 29335 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:51.442112 29341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:51.498059 29335 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:51.498790 29335 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:51.499274 29335 solver.cpp:311] Iteration 1000, loss = 0.156587
I0428 19:59:51.499292 29335 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:51.574530 29342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:51.575037 29335 solver.cpp:398]     Test net output #0: accuracy = 0.9703
I0428 19:59:51.575057 29335 solver.cpp:398]     Test net output #1: loss = 0.0956543 (* 1 = 0.0956543 loss)
I0428 19:59:51.575072 29335 solver.cpp:316] Optimization Done.
I0428 19:59:51.575078 29335 caffe.cpp:259] Optimization Done.
