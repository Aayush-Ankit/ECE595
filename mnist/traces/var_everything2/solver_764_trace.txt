I0428 19:56:36.544628 28475 caffe.cpp:218] Using GPUs 0
I0428 19:56:36.577296 28475 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:37.052794 28475 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test764.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:37.053047 28475 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test764.prototxt
I0428 19:56:37.053970 28475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:37.054005 28475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:37.054123 28475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:37.054224 28475 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:37.054338 28475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:37.054366 28475 net.cpp:86] Creating Layer mnist
I0428 19:56:37.054374 28475 net.cpp:382] mnist -> data
I0428 19:56:37.054399 28475 net.cpp:382] mnist -> label
I0428 19:56:37.055582 28475 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:37.058917 28475 net.cpp:124] Setting up mnist
I0428 19:56:37.058959 28475 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:37.058972 28475 net.cpp:131] Top shape: 64 (64)
I0428 19:56:37.058979 28475 net.cpp:139] Memory required for data: 200960
I0428 19:56:37.058990 28475 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:37.059025 28475 net.cpp:86] Creating Layer conv0
I0428 19:56:37.059059 28475 net.cpp:408] conv0 <- data
I0428 19:56:37.059082 28475 net.cpp:382] conv0 -> conv0
I0428 19:56:37.372200 28475 net.cpp:124] Setting up conv0
I0428 19:56:37.372231 28475 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:37.372236 28475 net.cpp:139] Memory required for data: 1675520
I0428 19:56:37.372252 28475 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:37.372267 28475 net.cpp:86] Creating Layer pool0
I0428 19:56:37.372272 28475 net.cpp:408] pool0 <- conv0
I0428 19:56:37.372278 28475 net.cpp:382] pool0 -> pool0
I0428 19:56:37.372337 28475 net.cpp:124] Setting up pool0
I0428 19:56:37.372344 28475 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:37.372349 28475 net.cpp:139] Memory required for data: 2044160
I0428 19:56:37.372351 28475 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:37.372364 28475 net.cpp:86] Creating Layer conv1
I0428 19:56:37.372369 28475 net.cpp:408] conv1 <- pool0
I0428 19:56:37.372373 28475 net.cpp:382] conv1 -> conv1
I0428 19:56:37.374560 28475 net.cpp:124] Setting up conv1
I0428 19:56:37.374577 28475 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:37.374581 28475 net.cpp:139] Memory required for data: 2076928
I0428 19:56:37.374593 28475 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:37.374603 28475 net.cpp:86] Creating Layer pool1
I0428 19:56:37.374606 28475 net.cpp:408] pool1 <- conv1
I0428 19:56:37.374614 28475 net.cpp:382] pool1 -> pool1
I0428 19:56:37.374661 28475 net.cpp:124] Setting up pool1
I0428 19:56:37.374668 28475 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:37.374671 28475 net.cpp:139] Memory required for data: 2085120
I0428 19:56:37.374675 28475 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:37.374683 28475 net.cpp:86] Creating Layer ip1
I0428 19:56:37.374687 28475 net.cpp:408] ip1 <- pool1
I0428 19:56:37.374696 28475 net.cpp:382] ip1 -> ip1
I0428 19:56:37.374836 28475 net.cpp:124] Setting up ip1
I0428 19:56:37.374845 28475 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:37.374848 28475 net.cpp:139] Memory required for data: 2091520
I0428 19:56:37.374857 28475 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:37.374866 28475 net.cpp:86] Creating Layer relu1
I0428 19:56:37.374869 28475 net.cpp:408] relu1 <- ip1
I0428 19:56:37.374876 28475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:37.375078 28475 net.cpp:124] Setting up relu1
I0428 19:56:37.375089 28475 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:37.375092 28475 net.cpp:139] Memory required for data: 2097920
I0428 19:56:37.375097 28475 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:37.375104 28475 net.cpp:86] Creating Layer ip2
I0428 19:56:37.375108 28475 net.cpp:408] ip2 <- ip1
I0428 19:56:37.375114 28475 net.cpp:382] ip2 -> ip2
I0428 19:56:37.375231 28475 net.cpp:124] Setting up ip2
I0428 19:56:37.375239 28475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:37.375242 28475 net.cpp:139] Memory required for data: 2100480
I0428 19:56:37.375248 28475 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:37.375257 28475 net.cpp:86] Creating Layer relu2
I0428 19:56:37.375259 28475 net.cpp:408] relu2 <- ip2
I0428 19:56:37.375267 28475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:37.376111 28475 net.cpp:124] Setting up relu2
I0428 19:56:37.376126 28475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:37.376129 28475 net.cpp:139] Memory required for data: 2103040
I0428 19:56:37.376133 28475 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:37.376142 28475 net.cpp:86] Creating Layer ip3
I0428 19:56:37.376145 28475 net.cpp:408] ip3 <- ip2
I0428 19:56:37.376153 28475 net.cpp:382] ip3 -> ip3
I0428 19:56:37.376278 28475 net.cpp:124] Setting up ip3
I0428 19:56:37.376287 28475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:37.376291 28475 net.cpp:139] Memory required for data: 2105600
I0428 19:56:37.376299 28475 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:37.376307 28475 net.cpp:86] Creating Layer relu3
I0428 19:56:37.376310 28475 net.cpp:408] relu3 <- ip3
I0428 19:56:37.376315 28475 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:37.376525 28475 net.cpp:124] Setting up relu3
I0428 19:56:37.376535 28475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:37.376539 28475 net.cpp:139] Memory required for data: 2108160
I0428 19:56:37.376543 28475 layer_factory.hpp:77] Creating layer loss
I0428 19:56:37.376551 28475 net.cpp:86] Creating Layer loss
I0428 19:56:37.376555 28475 net.cpp:408] loss <- ip3
I0428 19:56:37.376559 28475 net.cpp:408] loss <- label
I0428 19:56:37.376566 28475 net.cpp:382] loss -> loss
I0428 19:56:37.376581 28475 layer_factory.hpp:77] Creating layer loss
I0428 19:56:37.376891 28475 net.cpp:124] Setting up loss
I0428 19:56:37.376902 28475 net.cpp:131] Top shape: (1)
I0428 19:56:37.376915 28475 net.cpp:134]     with loss weight 1
I0428 19:56:37.376930 28475 net.cpp:139] Memory required for data: 2108164
I0428 19:56:37.376935 28475 net.cpp:200] loss needs backward computation.
I0428 19:56:37.376938 28475 net.cpp:200] relu3 needs backward computation.
I0428 19:56:37.376941 28475 net.cpp:200] ip3 needs backward computation.
I0428 19:56:37.376945 28475 net.cpp:200] relu2 needs backward computation.
I0428 19:56:37.376947 28475 net.cpp:200] ip2 needs backward computation.
I0428 19:56:37.376950 28475 net.cpp:200] relu1 needs backward computation.
I0428 19:56:37.376953 28475 net.cpp:200] ip1 needs backward computation.
I0428 19:56:37.376957 28475 net.cpp:200] pool1 needs backward computation.
I0428 19:56:37.376960 28475 net.cpp:200] conv1 needs backward computation.
I0428 19:56:37.376965 28475 net.cpp:200] pool0 needs backward computation.
I0428 19:56:37.376967 28475 net.cpp:200] conv0 needs backward computation.
I0428 19:56:37.376973 28475 net.cpp:202] mnist does not need backward computation.
I0428 19:56:37.376976 28475 net.cpp:244] This network produces output loss
I0428 19:56:37.376987 28475 net.cpp:257] Network initialization done.
I0428 19:56:37.377377 28475 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test764.prototxt
I0428 19:56:37.377408 28475 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:37.377516 28475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:37.377614 28475 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:37.377665 28475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:37.377679 28475 net.cpp:86] Creating Layer mnist
I0428 19:56:37.377686 28475 net.cpp:382] mnist -> data
I0428 19:56:37.377696 28475 net.cpp:382] mnist -> label
I0428 19:56:37.377796 28475 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:37.380167 28475 net.cpp:124] Setting up mnist
I0428 19:56:37.380189 28475 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:37.380194 28475 net.cpp:131] Top shape: 100 (100)
I0428 19:56:37.380206 28475 net.cpp:139] Memory required for data: 314000
I0428 19:56:37.380210 28475 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:37.380218 28475 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:37.380223 28475 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:37.380261 28475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:37.380270 28475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:37.380399 28475 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:37.380409 28475 net.cpp:131] Top shape: 100 (100)
I0428 19:56:37.380414 28475 net.cpp:131] Top shape: 100 (100)
I0428 19:56:37.380417 28475 net.cpp:139] Memory required for data: 314800
I0428 19:56:37.380421 28475 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:37.380430 28475 net.cpp:86] Creating Layer conv0
I0428 19:56:37.380434 28475 net.cpp:408] conv0 <- data
I0428 19:56:37.380441 28475 net.cpp:382] conv0 -> conv0
I0428 19:56:37.382189 28475 net.cpp:124] Setting up conv0
I0428 19:56:37.382205 28475 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:37.382210 28475 net.cpp:139] Memory required for data: 2618800
I0428 19:56:37.382220 28475 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:37.382228 28475 net.cpp:86] Creating Layer pool0
I0428 19:56:37.382231 28475 net.cpp:408] pool0 <- conv0
I0428 19:56:37.382238 28475 net.cpp:382] pool0 -> pool0
I0428 19:56:37.382292 28475 net.cpp:124] Setting up pool0
I0428 19:56:37.382298 28475 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:37.382302 28475 net.cpp:139] Memory required for data: 3194800
I0428 19:56:37.382304 28475 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:37.382318 28475 net.cpp:86] Creating Layer conv1
I0428 19:56:37.382323 28475 net.cpp:408] conv1 <- pool0
I0428 19:56:37.382328 28475 net.cpp:382] conv1 -> conv1
I0428 19:56:37.384665 28475 net.cpp:124] Setting up conv1
I0428 19:56:37.384680 28475 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:37.384685 28475 net.cpp:139] Memory required for data: 3246000
I0428 19:56:37.384706 28475 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:37.384714 28475 net.cpp:86] Creating Layer pool1
I0428 19:56:37.384718 28475 net.cpp:408] pool1 <- conv1
I0428 19:56:37.384726 28475 net.cpp:382] pool1 -> pool1
I0428 19:56:37.384779 28475 net.cpp:124] Setting up pool1
I0428 19:56:37.384785 28475 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:37.384789 28475 net.cpp:139] Memory required for data: 3258800
I0428 19:56:37.384793 28475 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:37.384801 28475 net.cpp:86] Creating Layer ip1
I0428 19:56:37.384805 28475 net.cpp:408] ip1 <- pool1
I0428 19:56:37.384819 28475 net.cpp:382] ip1 -> ip1
I0428 19:56:37.384982 28475 net.cpp:124] Setting up ip1
I0428 19:56:37.384992 28475 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:37.385007 28475 net.cpp:139] Memory required for data: 3268800
I0428 19:56:37.385016 28475 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:37.385022 28475 net.cpp:86] Creating Layer relu1
I0428 19:56:37.385026 28475 net.cpp:408] relu1 <- ip1
I0428 19:56:37.385032 28475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:37.385315 28475 net.cpp:124] Setting up relu1
I0428 19:56:37.385326 28475 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:37.385329 28475 net.cpp:139] Memory required for data: 3278800
I0428 19:56:37.385334 28475 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:37.385344 28475 net.cpp:86] Creating Layer ip2
I0428 19:56:37.385347 28475 net.cpp:408] ip2 <- ip1
I0428 19:56:37.385354 28475 net.cpp:382] ip2 -> ip2
I0428 19:56:37.385473 28475 net.cpp:124] Setting up ip2
I0428 19:56:37.385481 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.385485 28475 net.cpp:139] Memory required for data: 3282800
I0428 19:56:37.385491 28475 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:37.385502 28475 net.cpp:86] Creating Layer relu2
I0428 19:56:37.385512 28475 net.cpp:408] relu2 <- ip2
I0428 19:56:37.385519 28475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:37.385706 28475 net.cpp:124] Setting up relu2
I0428 19:56:37.385715 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.385720 28475 net.cpp:139] Memory required for data: 3286800
I0428 19:56:37.385723 28475 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:37.385731 28475 net.cpp:86] Creating Layer ip3
I0428 19:56:37.385735 28475 net.cpp:408] ip3 <- ip2
I0428 19:56:37.385740 28475 net.cpp:382] ip3 -> ip3
I0428 19:56:37.385862 28475 net.cpp:124] Setting up ip3
I0428 19:56:37.385879 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.385882 28475 net.cpp:139] Memory required for data: 3290800
I0428 19:56:37.385891 28475 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:37.385897 28475 net.cpp:86] Creating Layer relu3
I0428 19:56:37.385901 28475 net.cpp:408] relu3 <- ip3
I0428 19:56:37.385906 28475 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:37.386790 28475 net.cpp:124] Setting up relu3
I0428 19:56:37.386806 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.386809 28475 net.cpp:139] Memory required for data: 3294800
I0428 19:56:37.386813 28475 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:37.386819 28475 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:37.386823 28475 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:37.386828 28475 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:37.386835 28475 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:37.386925 28475 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:37.386934 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.386939 28475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:37.386941 28475 net.cpp:139] Memory required for data: 3302800
I0428 19:56:37.386945 28475 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:37.386950 28475 net.cpp:86] Creating Layer accuracy
I0428 19:56:37.386955 28475 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:37.386960 28475 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:37.386965 28475 net.cpp:382] accuracy -> accuracy
I0428 19:56:37.386975 28475 net.cpp:124] Setting up accuracy
I0428 19:56:37.386978 28475 net.cpp:131] Top shape: (1)
I0428 19:56:37.386982 28475 net.cpp:139] Memory required for data: 3302804
I0428 19:56:37.386986 28475 layer_factory.hpp:77] Creating layer loss
I0428 19:56:37.386991 28475 net.cpp:86] Creating Layer loss
I0428 19:56:37.386996 28475 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:37.387001 28475 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:37.387006 28475 net.cpp:382] loss -> loss
I0428 19:56:37.387012 28475 layer_factory.hpp:77] Creating layer loss
I0428 19:56:37.387293 28475 net.cpp:124] Setting up loss
I0428 19:56:37.387303 28475 net.cpp:131] Top shape: (1)
I0428 19:56:37.387307 28475 net.cpp:134]     with loss weight 1
I0428 19:56:37.387315 28475 net.cpp:139] Memory required for data: 3302808
I0428 19:56:37.387331 28475 net.cpp:200] loss needs backward computation.
I0428 19:56:37.387336 28475 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:37.387341 28475 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:37.387344 28475 net.cpp:200] relu3 needs backward computation.
I0428 19:56:37.387348 28475 net.cpp:200] ip3 needs backward computation.
I0428 19:56:37.387352 28475 net.cpp:200] relu2 needs backward computation.
I0428 19:56:37.387356 28475 net.cpp:200] ip2 needs backward computation.
I0428 19:56:37.387358 28475 net.cpp:200] relu1 needs backward computation.
I0428 19:56:37.387362 28475 net.cpp:200] ip1 needs backward computation.
I0428 19:56:37.387364 28475 net.cpp:200] pool1 needs backward computation.
I0428 19:56:37.387368 28475 net.cpp:200] conv1 needs backward computation.
I0428 19:56:37.387372 28475 net.cpp:200] pool0 needs backward computation.
I0428 19:56:37.387377 28475 net.cpp:200] conv0 needs backward computation.
I0428 19:56:37.387380 28475 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:37.387385 28475 net.cpp:202] mnist does not need backward computation.
I0428 19:56:37.387388 28475 net.cpp:244] This network produces output accuracy
I0428 19:56:37.387393 28475 net.cpp:244] This network produces output loss
I0428 19:56:37.387406 28475 net.cpp:257] Network initialization done.
I0428 19:56:37.387456 28475 solver.cpp:56] Solver scaffolding done.
I0428 19:56:37.387864 28475 caffe.cpp:248] Starting Optimization
I0428 19:56:37.387871 28475 solver.cpp:273] Solving LeNet
I0428 19:56:37.387874 28475 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:37.388857 28475 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:37.392683 28475 blocking_queue.cpp:49] Waiting for data
I0428 19:56:37.463138 28482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:37.463660 28475 solver.cpp:398]     Test net output #0: accuracy = 0.0704
I0428 19:56:37.463681 28475 solver.cpp:398]     Test net output #1: loss = 2.33665 (* 1 = 2.33665 loss)
I0428 19:56:37.466300 28475 solver.cpp:219] Iteration 0 (-3.30477e-31 iter/s, 0.07838s/100 iters), loss = 2.33061
I0428 19:56:37.466328 28475 solver.cpp:238]     Train net output #0: loss = 2.33061 (* 1 = 2.33061 loss)
I0428 19:56:37.466341 28475 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:37.542654 28475 solver.cpp:219] Iteration 100 (1310.38 iter/s, 0.0763136s/100 iters), loss = 1.08645
I0428 19:56:37.542685 28475 solver.cpp:238]     Train net output #0: loss = 1.08645 (* 1 = 1.08645 loss)
I0428 19:56:37.542692 28475 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:37.618441 28475 solver.cpp:219] Iteration 200 (1320.16 iter/s, 0.0757483s/100 iters), loss = 1.20899
I0428 19:56:37.618470 28475 solver.cpp:238]     Train net output #0: loss = 1.20899 (* 1 = 1.20899 loss)
I0428 19:56:37.618477 28475 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:37.694058 28475 solver.cpp:219] Iteration 300 (1323.11 iter/s, 0.0755794s/100 iters), loss = 0.675954
I0428 19:56:37.694087 28475 solver.cpp:238]     Train net output #0: loss = 0.675954 (* 1 = 0.675954 loss)
I0428 19:56:37.694094 28475 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:37.769775 28475 solver.cpp:219] Iteration 400 (1321.34 iter/s, 0.0756806s/100 iters), loss = 0.804609
I0428 19:56:37.769804 28475 solver.cpp:238]     Train net output #0: loss = 0.804609 (* 1 = 0.804609 loss)
I0428 19:56:37.769811 28475 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:37.844816 28475 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:37.897171 28482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:37.897694 28475 solver.cpp:398]     Test net output #0: accuracy = 0.7456
I0428 19:56:37.897716 28475 solver.cpp:398]     Test net output #1: loss = 0.729413 (* 1 = 0.729413 loss)
I0428 19:56:37.898505 28475 solver.cpp:219] Iteration 500 (777.072 iter/s, 0.128688s/100 iters), loss = 1.01845
I0428 19:56:37.898563 28475 solver.cpp:238]     Train net output #0: loss = 1.01845 (* 1 = 1.01845 loss)
I0428 19:56:37.898587 28475 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:37.974311 28475 solver.cpp:219] Iteration 600 (1320.26 iter/s, 0.0757426s/100 iters), loss = 0.723443
I0428 19:56:37.974335 28475 solver.cpp:238]     Train net output #0: loss = 0.723443 (* 1 = 0.723443 loss)
I0428 19:56:37.974342 28475 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:38.048388 28475 solver.cpp:219] Iteration 700 (1350.56 iter/s, 0.0740434s/100 iters), loss = 0.905396
I0428 19:56:38.048427 28475 solver.cpp:238]     Train net output #0: loss = 0.905396 (* 1 = 0.905396 loss)
I0428 19:56:38.048434 28475 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:38.122551 28475 solver.cpp:219] Iteration 800 (1348.97 iter/s, 0.0741304s/100 iters), loss = 0.604586
I0428 19:56:38.122592 28475 solver.cpp:238]     Train net output #0: loss = 0.604586 (* 1 = 0.604586 loss)
I0428 19:56:38.122598 28475 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:38.198863 28475 solver.cpp:219] Iteration 900 (1311 iter/s, 0.0762778s/100 iters), loss = 0.474835
I0428 19:56:38.198904 28475 solver.cpp:238]     Train net output #0: loss = 0.474835 (* 1 = 0.474835 loss)
I0428 19:56:38.198911 28475 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:38.227944 28481 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:38.275708 28475 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:38.276376 28475 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:38.277134 28475 solver.cpp:311] Iteration 1000, loss = 0.600266
I0428 19:56:38.277168 28475 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:38.353729 28482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:38.354310 28475 solver.cpp:398]     Test net output #0: accuracy = 0.8583
I0428 19:56:38.354347 28475 solver.cpp:398]     Test net output #1: loss = 0.435049 (* 1 = 0.435049 loss)
I0428 19:56:38.354357 28475 solver.cpp:316] Optimization Done.
I0428 19:56:38.354362 28475 caffe.cpp:259] Optimization Done.
