I0428 19:29:42.060330 22094 caffe.cpp:218] Using GPUs 0
I0428 19:29:42.101217 22094 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:42.620520 22094 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test67.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:42.620661 22094 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test67.prototxt
I0428 19:29:42.621026 22094 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:42.621042 22094 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:42.621127 22094 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:42.621194 22094 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:42.621296 22094 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:42.621320 22094 net.cpp:86] Creating Layer mnist
I0428 19:29:42.621326 22094 net.cpp:382] mnist -> data
I0428 19:29:42.621348 22094 net.cpp:382] mnist -> label
I0428 19:29:42.622423 22094 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:42.624876 22094 net.cpp:124] Setting up mnist
I0428 19:29:42.624892 22094 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:42.624899 22094 net.cpp:131] Top shape: 64 (64)
I0428 19:29:42.624902 22094 net.cpp:139] Memory required for data: 200960
I0428 19:29:42.624910 22094 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:42.624927 22094 net.cpp:86] Creating Layer conv0
I0428 19:29:42.624933 22094 net.cpp:408] conv0 <- data
I0428 19:29:42.624943 22094 net.cpp:382] conv0 -> conv0
I0428 19:29:42.905943 22094 net.cpp:124] Setting up conv0
I0428 19:29:42.905972 22094 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:42.905975 22094 net.cpp:139] Memory required for data: 495872
I0428 19:29:42.905992 22094 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:42.906003 22094 net.cpp:86] Creating Layer pool0
I0428 19:29:42.906023 22094 net.cpp:408] pool0 <- conv0
I0428 19:29:42.906028 22094 net.cpp:382] pool0 -> pool0
I0428 19:29:42.906075 22094 net.cpp:124] Setting up pool0
I0428 19:29:42.906085 22094 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:42.906087 22094 net.cpp:139] Memory required for data: 569600
I0428 19:29:42.906090 22094 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:42.906097 22094 net.cpp:86] Creating Layer ip1
I0428 19:29:42.906101 22094 net.cpp:408] ip1 <- pool0
I0428 19:29:42.906105 22094 net.cpp:382] ip1 -> ip1
I0428 19:29:42.907058 22094 net.cpp:124] Setting up ip1
I0428 19:29:42.907071 22094 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:42.907074 22094 net.cpp:139] Memory required for data: 576000
I0428 19:29:42.907083 22094 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:42.907089 22094 net.cpp:86] Creating Layer relu1
I0428 19:29:42.907093 22094 net.cpp:408] relu1 <- ip1
I0428 19:29:42.907097 22094 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:42.907287 22094 net.cpp:124] Setting up relu1
I0428 19:29:42.907297 22094 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:42.907300 22094 net.cpp:139] Memory required for data: 582400
I0428 19:29:42.907304 22094 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:42.907311 22094 net.cpp:86] Creating Layer ip2
I0428 19:29:42.907315 22094 net.cpp:408] ip2 <- ip1
I0428 19:29:42.907320 22094 net.cpp:382] ip2 -> ip2
I0428 19:29:42.908282 22094 net.cpp:124] Setting up ip2
I0428 19:29:42.908294 22094 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:42.908298 22094 net.cpp:139] Memory required for data: 595200
I0428 19:29:42.908305 22094 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:42.908313 22094 net.cpp:86] Creating Layer relu2
I0428 19:29:42.908316 22094 net.cpp:408] relu2 <- ip2
I0428 19:29:42.908320 22094 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:42.909062 22094 net.cpp:124] Setting up relu2
I0428 19:29:42.909076 22094 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:42.909080 22094 net.cpp:139] Memory required for data: 608000
I0428 19:29:42.909083 22094 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:42.909090 22094 net.cpp:86] Creating Layer ip3
I0428 19:29:42.909095 22094 net.cpp:408] ip3 <- ip2
I0428 19:29:42.909099 22094 net.cpp:382] ip3 -> ip3
I0428 19:29:42.909214 22094 net.cpp:124] Setting up ip3
I0428 19:29:42.909221 22094 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:42.909224 22094 net.cpp:139] Memory required for data: 610560
I0428 19:29:42.909230 22094 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:42.909236 22094 net.cpp:86] Creating Layer relu3
I0428 19:29:42.909240 22094 net.cpp:408] relu3 <- ip3
I0428 19:29:42.909243 22094 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:42.909391 22094 net.cpp:124] Setting up relu3
I0428 19:29:42.909399 22094 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:42.909402 22094 net.cpp:139] Memory required for data: 613120
I0428 19:29:42.909405 22094 layer_factory.hpp:77] Creating layer loss
I0428 19:29:42.909411 22094 net.cpp:86] Creating Layer loss
I0428 19:29:42.909415 22094 net.cpp:408] loss <- ip3
I0428 19:29:42.909418 22094 net.cpp:408] loss <- label
I0428 19:29:42.909423 22094 net.cpp:382] loss -> loss
I0428 19:29:42.909437 22094 layer_factory.hpp:77] Creating layer loss
I0428 19:29:42.909658 22094 net.cpp:124] Setting up loss
I0428 19:29:42.909667 22094 net.cpp:131] Top shape: (1)
I0428 19:29:42.909670 22094 net.cpp:134]     with loss weight 1
I0428 19:29:42.909684 22094 net.cpp:139] Memory required for data: 613124
I0428 19:29:42.909688 22094 net.cpp:200] loss needs backward computation.
I0428 19:29:42.909692 22094 net.cpp:200] relu3 needs backward computation.
I0428 19:29:42.909694 22094 net.cpp:200] ip3 needs backward computation.
I0428 19:29:42.909698 22094 net.cpp:200] relu2 needs backward computation.
I0428 19:29:42.909700 22094 net.cpp:200] ip2 needs backward computation.
I0428 19:29:42.909703 22094 net.cpp:200] relu1 needs backward computation.
I0428 19:29:42.909705 22094 net.cpp:200] ip1 needs backward computation.
I0428 19:29:42.909719 22094 net.cpp:200] pool0 needs backward computation.
I0428 19:29:42.909723 22094 net.cpp:200] conv0 needs backward computation.
I0428 19:29:42.909726 22094 net.cpp:202] mnist does not need backward computation.
I0428 19:29:42.909729 22094 net.cpp:244] This network produces output loss
I0428 19:29:42.909737 22094 net.cpp:257] Network initialization done.
I0428 19:29:42.910014 22094 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test67.prototxt
I0428 19:29:42.910058 22094 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:42.910138 22094 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:42.910202 22094 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:42.910245 22094 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:42.910259 22094 net.cpp:86] Creating Layer mnist
I0428 19:29:42.910262 22094 net.cpp:382] mnist -> data
I0428 19:29:42.910271 22094 net.cpp:382] mnist -> label
I0428 19:29:42.910370 22094 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:42.912212 22094 net.cpp:124] Setting up mnist
I0428 19:29:42.912225 22094 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:42.912230 22094 net.cpp:131] Top shape: 100 (100)
I0428 19:29:42.912233 22094 net.cpp:139] Memory required for data: 314000
I0428 19:29:42.912236 22094 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:42.912243 22094 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:42.912246 22094 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:42.912251 22094 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:42.912257 22094 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:42.912314 22094 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:42.912319 22094 net.cpp:131] Top shape: 100 (100)
I0428 19:29:42.912323 22094 net.cpp:131] Top shape: 100 (100)
I0428 19:29:42.912327 22094 net.cpp:139] Memory required for data: 314800
I0428 19:29:42.912338 22094 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:42.912348 22094 net.cpp:86] Creating Layer conv0
I0428 19:29:42.912350 22094 net.cpp:408] conv0 <- data
I0428 19:29:42.912355 22094 net.cpp:382] conv0 -> conv0
I0428 19:29:42.914119 22094 net.cpp:124] Setting up conv0
I0428 19:29:42.914134 22094 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:42.914137 22094 net.cpp:139] Memory required for data: 775600
I0428 19:29:42.914147 22094 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:42.914153 22094 net.cpp:86] Creating Layer pool0
I0428 19:29:42.914157 22094 net.cpp:408] pool0 <- conv0
I0428 19:29:42.914161 22094 net.cpp:382] pool0 -> pool0
I0428 19:29:42.914197 22094 net.cpp:124] Setting up pool0
I0428 19:29:42.914202 22094 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:42.914206 22094 net.cpp:139] Memory required for data: 890800
I0428 19:29:42.914208 22094 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:42.914214 22094 net.cpp:86] Creating Layer ip1
I0428 19:29:42.914217 22094 net.cpp:408] ip1 <- pool0
I0428 19:29:42.914222 22094 net.cpp:382] ip1 -> ip1
I0428 19:29:42.914352 22094 net.cpp:124] Setting up ip1
I0428 19:29:42.914361 22094 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:42.914363 22094 net.cpp:139] Memory required for data: 900800
I0428 19:29:42.914371 22094 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:42.914376 22094 net.cpp:86] Creating Layer relu1
I0428 19:29:42.914378 22094 net.cpp:408] relu1 <- ip1
I0428 19:29:42.914382 22094 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:42.914536 22094 net.cpp:124] Setting up relu1
I0428 19:29:42.914546 22094 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:42.914548 22094 net.cpp:139] Memory required for data: 910800
I0428 19:29:42.914551 22094 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:42.914557 22094 net.cpp:86] Creating Layer ip2
I0428 19:29:42.914561 22094 net.cpp:408] ip2 <- ip1
I0428 19:29:42.914564 22094 net.cpp:382] ip2 -> ip2
I0428 19:29:42.914669 22094 net.cpp:124] Setting up ip2
I0428 19:29:42.914675 22094 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:42.914679 22094 net.cpp:139] Memory required for data: 930800
I0428 19:29:42.914685 22094 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:42.914690 22094 net.cpp:86] Creating Layer relu2
I0428 19:29:42.914695 22094 net.cpp:408] relu2 <- ip2
I0428 19:29:42.914698 22094 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:42.915562 22094 net.cpp:124] Setting up relu2
I0428 19:29:42.915575 22094 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:42.915578 22094 net.cpp:139] Memory required for data: 950800
I0428 19:29:42.915581 22094 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:42.915590 22094 net.cpp:86] Creating Layer ip3
I0428 19:29:42.915592 22094 net.cpp:408] ip3 <- ip2
I0428 19:29:42.915598 22094 net.cpp:382] ip3 -> ip3
I0428 19:29:42.915752 22094 net.cpp:124] Setting up ip3
I0428 19:29:42.915761 22094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:42.915765 22094 net.cpp:139] Memory required for data: 954800
I0428 19:29:42.915771 22094 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:42.915776 22094 net.cpp:86] Creating Layer relu3
I0428 19:29:42.915778 22094 net.cpp:408] relu3 <- ip3
I0428 19:29:42.915794 22094 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:42.915946 22094 net.cpp:124] Setting up relu3
I0428 19:29:42.915953 22094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:42.915957 22094 net.cpp:139] Memory required for data: 958800
I0428 19:29:42.915961 22094 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:42.915964 22094 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:42.915967 22094 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:42.915972 22094 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:42.915978 22094 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:42.916013 22094 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:42.916023 22094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:42.916026 22094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:42.916039 22094 net.cpp:139] Memory required for data: 966800
I0428 19:29:42.916043 22094 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:42.916048 22094 net.cpp:86] Creating Layer accuracy
I0428 19:29:42.916055 22094 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:42.916059 22094 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:42.916064 22094 net.cpp:382] accuracy -> accuracy
I0428 19:29:42.916070 22094 net.cpp:124] Setting up accuracy
I0428 19:29:42.916074 22094 net.cpp:131] Top shape: (1)
I0428 19:29:42.916077 22094 net.cpp:139] Memory required for data: 966804
I0428 19:29:42.916085 22094 layer_factory.hpp:77] Creating layer loss
I0428 19:29:42.916090 22094 net.cpp:86] Creating Layer loss
I0428 19:29:42.916092 22094 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:42.916095 22094 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:42.916100 22094 net.cpp:382] loss -> loss
I0428 19:29:42.916106 22094 layer_factory.hpp:77] Creating layer loss
I0428 19:29:42.916332 22094 net.cpp:124] Setting up loss
I0428 19:29:42.916342 22094 net.cpp:131] Top shape: (1)
I0428 19:29:42.916345 22094 net.cpp:134]     with loss weight 1
I0428 19:29:42.916352 22094 net.cpp:139] Memory required for data: 966808
I0428 19:29:42.916354 22094 net.cpp:200] loss needs backward computation.
I0428 19:29:42.916358 22094 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:42.916370 22094 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:42.916373 22094 net.cpp:200] relu3 needs backward computation.
I0428 19:29:42.916376 22094 net.cpp:200] ip3 needs backward computation.
I0428 19:29:42.916396 22094 net.cpp:200] relu2 needs backward computation.
I0428 19:29:42.916399 22094 net.cpp:200] ip2 needs backward computation.
I0428 19:29:42.916401 22094 net.cpp:200] relu1 needs backward computation.
I0428 19:29:42.916410 22094 net.cpp:200] ip1 needs backward computation.
I0428 19:29:42.916414 22094 net.cpp:200] pool0 needs backward computation.
I0428 19:29:42.916415 22094 net.cpp:200] conv0 needs backward computation.
I0428 19:29:42.916419 22094 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:42.916422 22094 net.cpp:202] mnist does not need backward computation.
I0428 19:29:42.916425 22094 net.cpp:244] This network produces output accuracy
I0428 19:29:42.916429 22094 net.cpp:244] This network produces output loss
I0428 19:29:42.916453 22094 net.cpp:257] Network initialization done.
I0428 19:29:42.916491 22094 solver.cpp:56] Solver scaffolding done.
I0428 19:29:42.916805 22094 caffe.cpp:248] Starting Optimization
I0428 19:29:42.916833 22094 solver.cpp:273] Solving LeNet
I0428 19:29:42.916836 22094 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:42.918205 22094 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:42.919234 22094 blocking_queue.cpp:49] Waiting for data
I0428 19:29:42.995194 22101 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:42.995707 22094 solver.cpp:398]     Test net output #0: accuracy = 0.0671
I0428 19:29:42.995738 22094 solver.cpp:398]     Test net output #1: loss = 2.31246 (* 1 = 2.31246 loss)
I0428 19:29:42.997926 22094 solver.cpp:219] Iteration 0 (-1.24632e-30 iter/s, 0.0810557s/100 iters), loss = 2.2987
I0428 19:29:42.997963 22094 solver.cpp:238]     Train net output #0: loss = 2.2987 (* 1 = 2.2987 loss)
I0428 19:29:42.997978 22094 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:43.065896 22094 solver.cpp:219] Iteration 100 (1472.23 iter/s, 0.067924s/100 iters), loss = 0.908697
I0428 19:29:43.065927 22094 solver.cpp:238]     Train net output #0: loss = 0.908697 (* 1 = 0.908697 loss)
I0428 19:29:43.065934 22094 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:43.123642 22094 solver.cpp:219] Iteration 200 (1732.87 iter/s, 0.0577077s/100 iters), loss = 0.757206
I0428 19:29:43.123667 22094 solver.cpp:238]     Train net output #0: loss = 0.757206 (* 1 = 0.757206 loss)
I0428 19:29:43.123673 22094 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:43.177467 22094 solver.cpp:219] Iteration 300 (1859.02 iter/s, 0.0537917s/100 iters), loss = 0.78251
I0428 19:29:43.177492 22094 solver.cpp:238]     Train net output #0: loss = 0.78251 (* 1 = 0.78251 loss)
I0428 19:29:43.177515 22094 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:43.231744 22094 solver.cpp:219] Iteration 400 (1843.54 iter/s, 0.0542433s/100 iters), loss = 0.912343
I0428 19:29:43.231781 22094 solver.cpp:238]     Train net output #0: loss = 0.912343 (* 1 = 0.912343 loss)
I0428 19:29:43.231786 22094 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:43.287292 22094 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:43.362308 22101 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:43.362838 22094 solver.cpp:398]     Test net output #0: accuracy = 0.743
I0428 19:29:43.362869 22094 solver.cpp:398]     Test net output #1: loss = 0.69988 (* 1 = 0.69988 loss)
I0428 19:29:43.363661 22094 solver.cpp:219] Iteration 500 (758.271 iter/s, 0.131879s/100 iters), loss = 0.974584
I0428 19:29:43.363698 22094 solver.cpp:238]     Train net output #0: loss = 0.974584 (* 1 = 0.974584 loss)
I0428 19:29:43.363709 22094 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:43.433992 22094 solver.cpp:219] Iteration 600 (1422.77 iter/s, 0.0702855s/100 iters), loss = 0.550567
I0428 19:29:43.434021 22094 solver.cpp:238]     Train net output #0: loss = 0.550567 (* 1 = 0.550567 loss)
I0428 19:29:43.434028 22094 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:43.492223 22094 solver.cpp:219] Iteration 700 (1718.39 iter/s, 0.0581939s/100 iters), loss = 0.690098
I0428 19:29:43.492249 22094 solver.cpp:238]     Train net output #0: loss = 0.690098 (* 1 = 0.690098 loss)
I0428 19:29:43.492254 22094 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:43.546936 22094 solver.cpp:219] Iteration 800 (1828.84 iter/s, 0.0546796s/100 iters), loss = 0.75999
I0428 19:29:43.546959 22094 solver.cpp:238]     Train net output #0: loss = 0.75999 (* 1 = 0.75999 loss)
I0428 19:29:43.546983 22094 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:43.601105 22094 solver.cpp:219] Iteration 900 (1847.1 iter/s, 0.0541389s/100 iters), loss = 0.38539
I0428 19:29:43.601128 22094 solver.cpp:238]     Train net output #0: loss = 0.38539 (* 1 = 0.38539 loss)
I0428 19:29:43.601151 22094 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:43.619222 22100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:43.654865 22094 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:43.655525 22094 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:43.655933 22094 solver.cpp:311] Iteration 1000, loss = 0.52336
I0428 19:29:43.655949 22094 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:43.730962 22101 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:43.731355 22094 solver.cpp:398]     Test net output #0: accuracy = 0.7622
I0428 19:29:43.731374 22094 solver.cpp:398]     Test net output #1: loss = 0.626547 (* 1 = 0.626547 loss)
I0428 19:29:43.731379 22094 solver.cpp:316] Optimization Done.
I0428 19:29:43.731381 22094 caffe.cpp:259] Optimization Done.
