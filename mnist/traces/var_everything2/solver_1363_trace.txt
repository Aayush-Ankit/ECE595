I0428 20:20:26.689080  1552 caffe.cpp:218] Using GPUs 0
I0428 20:20:26.727413  1552 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:27.240563  1552 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1363.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:27.240701  1552 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1363.prototxt
I0428 20:20:27.241137  1552 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:27.241156  1552 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:27.241259  1552 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:27.241339  1552 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:27.241441  1552 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:27.241466  1552 net.cpp:86] Creating Layer mnist
I0428 20:20:27.241475  1552 net.cpp:382] mnist -> data
I0428 20:20:27.241499  1552 net.cpp:382] mnist -> label
I0428 20:20:27.242601  1552 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:27.245079  1552 net.cpp:124] Setting up mnist
I0428 20:20:27.245097  1552 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:27.245103  1552 net.cpp:131] Top shape: 64 (64)
I0428 20:20:27.245106  1552 net.cpp:139] Memory required for data: 200960
I0428 20:20:27.245116  1552 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:27.245143  1552 net.cpp:86] Creating Layer conv0
I0428 20:20:27.245174  1552 net.cpp:408] conv0 <- data
I0428 20:20:27.245187  1552 net.cpp:382] conv0 -> conv0
I0428 20:20:27.538087  1552 net.cpp:124] Setting up conv0
I0428 20:20:27.538117  1552 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:27.538122  1552 net.cpp:139] Memory required for data: 7573760
I0428 20:20:27.538141  1552 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:27.538156  1552 net.cpp:86] Creating Layer pool0
I0428 20:20:27.538159  1552 net.cpp:408] pool0 <- conv0
I0428 20:20:27.538166  1552 net.cpp:382] pool0 -> pool0
I0428 20:20:27.538231  1552 net.cpp:124] Setting up pool0
I0428 20:20:27.538240  1552 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:27.538244  1552 net.cpp:139] Memory required for data: 9416960
I0428 20:20:27.538249  1552 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:27.538261  1552 net.cpp:86] Creating Layer conv1
I0428 20:20:27.538267  1552 net.cpp:408] conv1 <- pool0
I0428 20:20:27.538274  1552 net.cpp:382] conv1 -> conv1
I0428 20:20:27.540629  1552 net.cpp:124] Setting up conv1
I0428 20:20:27.540647  1552 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:27.540650  1552 net.cpp:139] Memory required for data: 9826560
I0428 20:20:27.540660  1552 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:27.540669  1552 net.cpp:86] Creating Layer pool1
I0428 20:20:27.540674  1552 net.cpp:408] pool1 <- conv1
I0428 20:20:27.540679  1552 net.cpp:382] pool1 -> pool1
I0428 20:20:27.540727  1552 net.cpp:124] Setting up pool1
I0428 20:20:27.540733  1552 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:27.540737  1552 net.cpp:139] Memory required for data: 9928960
I0428 20:20:27.540740  1552 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:27.540750  1552 net.cpp:86] Creating Layer ip1
I0428 20:20:27.540752  1552 net.cpp:408] ip1 <- pool1
I0428 20:20:27.540758  1552 net.cpp:382] ip1 -> ip1
I0428 20:20:27.541023  1552 net.cpp:124] Setting up ip1
I0428 20:20:27.541034  1552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:27.541038  1552 net.cpp:139] Memory required for data: 9941760
I0428 20:20:27.541046  1552 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:27.541054  1552 net.cpp:86] Creating Layer relu1
I0428 20:20:27.541057  1552 net.cpp:408] relu1 <- ip1
I0428 20:20:27.541062  1552 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:27.541260  1552 net.cpp:124] Setting up relu1
I0428 20:20:27.541270  1552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:27.541275  1552 net.cpp:139] Memory required for data: 9954560
I0428 20:20:27.541278  1552 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:27.541285  1552 net.cpp:86] Creating Layer ip2
I0428 20:20:27.541290  1552 net.cpp:408] ip2 <- ip1
I0428 20:20:27.541296  1552 net.cpp:382] ip2 -> ip2
I0428 20:20:27.541424  1552 net.cpp:124] Setting up ip2
I0428 20:20:27.541431  1552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:27.541435  1552 net.cpp:139] Memory required for data: 9967360
I0428 20:20:27.541442  1552 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:27.541450  1552 net.cpp:86] Creating Layer relu2
I0428 20:20:27.541452  1552 net.cpp:408] relu2 <- ip2
I0428 20:20:27.541457  1552 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:27.542299  1552 net.cpp:124] Setting up relu2
I0428 20:20:27.542313  1552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:27.542317  1552 net.cpp:139] Memory required for data: 9980160
I0428 20:20:27.542321  1552 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:27.542330  1552 net.cpp:86] Creating Layer ip3
I0428 20:20:27.542343  1552 net.cpp:408] ip3 <- ip2
I0428 20:20:27.542351  1552 net.cpp:382] ip3 -> ip3
I0428 20:20:27.542469  1552 net.cpp:124] Setting up ip3
I0428 20:20:27.542477  1552 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:27.542480  1552 net.cpp:139] Memory required for data: 9982720
I0428 20:20:27.542490  1552 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:27.542496  1552 net.cpp:86] Creating Layer relu3
I0428 20:20:27.542500  1552 net.cpp:408] relu3 <- ip3
I0428 20:20:27.542505  1552 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:27.542706  1552 net.cpp:124] Setting up relu3
I0428 20:20:27.542716  1552 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:27.542721  1552 net.cpp:139] Memory required for data: 9985280
I0428 20:20:27.542723  1552 layer_factory.hpp:77] Creating layer loss
I0428 20:20:27.542735  1552 net.cpp:86] Creating Layer loss
I0428 20:20:27.542742  1552 net.cpp:408] loss <- ip3
I0428 20:20:27.542745  1552 net.cpp:408] loss <- label
I0428 20:20:27.542752  1552 net.cpp:382] loss -> loss
I0428 20:20:27.542769  1552 layer_factory.hpp:77] Creating layer loss
I0428 20:20:27.543048  1552 net.cpp:124] Setting up loss
I0428 20:20:27.543059  1552 net.cpp:131] Top shape: (1)
I0428 20:20:27.543063  1552 net.cpp:134]     with loss weight 1
I0428 20:20:27.543079  1552 net.cpp:139] Memory required for data: 9985284
I0428 20:20:27.543083  1552 net.cpp:200] loss needs backward computation.
I0428 20:20:27.543087  1552 net.cpp:200] relu3 needs backward computation.
I0428 20:20:27.543092  1552 net.cpp:200] ip3 needs backward computation.
I0428 20:20:27.543094  1552 net.cpp:200] relu2 needs backward computation.
I0428 20:20:27.543097  1552 net.cpp:200] ip2 needs backward computation.
I0428 20:20:27.543102  1552 net.cpp:200] relu1 needs backward computation.
I0428 20:20:27.543104  1552 net.cpp:200] ip1 needs backward computation.
I0428 20:20:27.543107  1552 net.cpp:200] pool1 needs backward computation.
I0428 20:20:27.543112  1552 net.cpp:200] conv1 needs backward computation.
I0428 20:20:27.543117  1552 net.cpp:200] pool0 needs backward computation.
I0428 20:20:27.543119  1552 net.cpp:200] conv0 needs backward computation.
I0428 20:20:27.543123  1552 net.cpp:202] mnist does not need backward computation.
I0428 20:20:27.543126  1552 net.cpp:244] This network produces output loss
I0428 20:20:27.543138  1552 net.cpp:257] Network initialization done.
I0428 20:20:27.543522  1552 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1363.prototxt
I0428 20:20:27.543555  1552 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:27.543665  1552 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:27.543763  1552 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:27.543813  1552 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:27.543828  1552 net.cpp:86] Creating Layer mnist
I0428 20:20:27.543835  1552 net.cpp:382] mnist -> data
I0428 20:20:27.543844  1552 net.cpp:382] mnist -> label
I0428 20:20:27.543948  1552 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:27.546142  1552 net.cpp:124] Setting up mnist
I0428 20:20:27.546159  1552 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:27.546164  1552 net.cpp:131] Top shape: 100 (100)
I0428 20:20:27.546169  1552 net.cpp:139] Memory required for data: 314000
I0428 20:20:27.546172  1552 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:27.546180  1552 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:27.546196  1552 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:27.546203  1552 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:27.546211  1552 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:27.546340  1552 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:27.546350  1552 net.cpp:131] Top shape: 100 (100)
I0428 20:20:27.546355  1552 net.cpp:131] Top shape: 100 (100)
I0428 20:20:27.546358  1552 net.cpp:139] Memory required for data: 314800
I0428 20:20:27.546362  1552 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:27.546375  1552 net.cpp:86] Creating Layer conv0
I0428 20:20:27.546380  1552 net.cpp:408] conv0 <- data
I0428 20:20:27.546387  1552 net.cpp:382] conv0 -> conv0
I0428 20:20:27.548199  1552 net.cpp:124] Setting up conv0
I0428 20:20:27.548216  1552 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:27.548220  1552 net.cpp:139] Memory required for data: 11834800
I0428 20:20:27.548233  1552 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:27.548244  1552 net.cpp:86] Creating Layer pool0
I0428 20:20:27.548249  1552 net.cpp:408] pool0 <- conv0
I0428 20:20:27.548256  1552 net.cpp:382] pool0 -> pool0
I0428 20:20:27.548300  1552 net.cpp:124] Setting up pool0
I0428 20:20:27.548307  1552 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:27.548311  1552 net.cpp:139] Memory required for data: 14714800
I0428 20:20:27.548316  1552 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:27.548326  1552 net.cpp:86] Creating Layer conv1
I0428 20:20:27.548331  1552 net.cpp:408] conv1 <- pool0
I0428 20:20:27.548339  1552 net.cpp:382] conv1 -> conv1
I0428 20:20:27.550277  1552 net.cpp:124] Setting up conv1
I0428 20:20:27.550294  1552 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:27.550298  1552 net.cpp:139] Memory required for data: 15354800
I0428 20:20:27.550308  1552 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:27.550318  1552 net.cpp:86] Creating Layer pool1
I0428 20:20:27.550328  1552 net.cpp:408] pool1 <- conv1
I0428 20:20:27.550338  1552 net.cpp:382] pool1 -> pool1
I0428 20:20:27.550391  1552 net.cpp:124] Setting up pool1
I0428 20:20:27.550403  1552 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:27.550406  1552 net.cpp:139] Memory required for data: 15514800
I0428 20:20:27.550410  1552 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:27.550416  1552 net.cpp:86] Creating Layer ip1
I0428 20:20:27.550420  1552 net.cpp:408] ip1 <- pool1
I0428 20:20:27.550427  1552 net.cpp:382] ip1 -> ip1
I0428 20:20:27.550689  1552 net.cpp:124] Setting up ip1
I0428 20:20:27.550698  1552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:27.550714  1552 net.cpp:139] Memory required for data: 15534800
I0428 20:20:27.550722  1552 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:27.550730  1552 net.cpp:86] Creating Layer relu1
I0428 20:20:27.550734  1552 net.cpp:408] relu1 <- ip1
I0428 20:20:27.550741  1552 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:27.550951  1552 net.cpp:124] Setting up relu1
I0428 20:20:27.550962  1552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:27.550966  1552 net.cpp:139] Memory required for data: 15554800
I0428 20:20:27.550971  1552 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:27.550981  1552 net.cpp:86] Creating Layer ip2
I0428 20:20:27.550984  1552 net.cpp:408] ip2 <- ip1
I0428 20:20:27.550992  1552 net.cpp:382] ip2 -> ip2
I0428 20:20:27.551168  1552 net.cpp:124] Setting up ip2
I0428 20:20:27.551177  1552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:27.551188  1552 net.cpp:139] Memory required for data: 15574800
I0428 20:20:27.551194  1552 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:27.551201  1552 net.cpp:86] Creating Layer relu2
I0428 20:20:27.551205  1552 net.cpp:408] relu2 <- ip2
I0428 20:20:27.551216  1552 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:27.551407  1552 net.cpp:124] Setting up relu2
I0428 20:20:27.551417  1552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:27.551422  1552 net.cpp:139] Memory required for data: 15594800
I0428 20:20:27.551426  1552 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:27.551434  1552 net.cpp:86] Creating Layer ip3
I0428 20:20:27.551436  1552 net.cpp:408] ip3 <- ip2
I0428 20:20:27.551443  1552 net.cpp:382] ip3 -> ip3
I0428 20:20:27.551565  1552 net.cpp:124] Setting up ip3
I0428 20:20:27.551574  1552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:27.551578  1552 net.cpp:139] Memory required for data: 15598800
I0428 20:20:27.551586  1552 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:27.551592  1552 net.cpp:86] Creating Layer relu3
I0428 20:20:27.551597  1552 net.cpp:408] relu3 <- ip3
I0428 20:20:27.551602  1552 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:27.552520  1552 net.cpp:124] Setting up relu3
I0428 20:20:27.552534  1552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:27.552537  1552 net.cpp:139] Memory required for data: 15602800
I0428 20:20:27.552541  1552 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:27.552547  1552 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:27.552551  1552 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:27.552557  1552 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:27.552566  1552 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:27.552611  1552 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:27.552618  1552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:27.552623  1552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:27.552626  1552 net.cpp:139] Memory required for data: 15610800
I0428 20:20:27.552629  1552 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:27.552645  1552 net.cpp:86] Creating Layer accuracy
I0428 20:20:27.552649  1552 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:27.552654  1552 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:27.552659  1552 net.cpp:382] accuracy -> accuracy
I0428 20:20:27.552666  1552 net.cpp:124] Setting up accuracy
I0428 20:20:27.552672  1552 net.cpp:131] Top shape: (1)
I0428 20:20:27.552676  1552 net.cpp:139] Memory required for data: 15610804
I0428 20:20:27.552680  1552 layer_factory.hpp:77] Creating layer loss
I0428 20:20:27.552686  1552 net.cpp:86] Creating Layer loss
I0428 20:20:27.552690  1552 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:27.552695  1552 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:27.552709  1552 net.cpp:382] loss -> loss
I0428 20:20:27.552716  1552 layer_factory.hpp:77] Creating layer loss
I0428 20:20:27.553009  1552 net.cpp:124] Setting up loss
I0428 20:20:27.553020  1552 net.cpp:131] Top shape: (1)
I0428 20:20:27.553025  1552 net.cpp:134]     with loss weight 1
I0428 20:20:27.553042  1552 net.cpp:139] Memory required for data: 15610808
I0428 20:20:27.553047  1552 net.cpp:200] loss needs backward computation.
I0428 20:20:27.553061  1552 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:27.553064  1552 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:27.553068  1552 net.cpp:200] relu3 needs backward computation.
I0428 20:20:27.553071  1552 net.cpp:200] ip3 needs backward computation.
I0428 20:20:27.553074  1552 net.cpp:200] relu2 needs backward computation.
I0428 20:20:27.553078  1552 net.cpp:200] ip2 needs backward computation.
I0428 20:20:27.553081  1552 net.cpp:200] relu1 needs backward computation.
I0428 20:20:27.553084  1552 net.cpp:200] ip1 needs backward computation.
I0428 20:20:27.553087  1552 net.cpp:200] pool1 needs backward computation.
I0428 20:20:27.553092  1552 net.cpp:200] conv1 needs backward computation.
I0428 20:20:27.553094  1552 net.cpp:200] pool0 needs backward computation.
I0428 20:20:27.553098  1552 net.cpp:200] conv0 needs backward computation.
I0428 20:20:27.553102  1552 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:27.553107  1552 net.cpp:202] mnist does not need backward computation.
I0428 20:20:27.553112  1552 net.cpp:244] This network produces output accuracy
I0428 20:20:27.553115  1552 net.cpp:244] This network produces output loss
I0428 20:20:27.553128  1552 net.cpp:257] Network initialization done.
I0428 20:20:27.553177  1552 solver.cpp:56] Solver scaffolding done.
I0428 20:20:27.553572  1552 caffe.cpp:248] Starting Optimization
I0428 20:20:27.553580  1552 solver.cpp:273] Solving LeNet
I0428 20:20:27.553583  1552 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:27.554477  1552 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:27.562013  1552 blocking_queue.cpp:49] Waiting for data
I0428 20:20:27.631978  1559 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:27.632910  1552 solver.cpp:398]     Test net output #0: accuracy = 0.0562
I0428 20:20:27.632935  1552 solver.cpp:398]     Test net output #1: loss = 2.3179 (* 1 = 2.3179 loss)
I0428 20:20:27.637403  1552 solver.cpp:219] Iteration 0 (-5.87276e-31 iter/s, 0.0837889s/100 iters), loss = 2.32152
I0428 20:20:27.637430  1552 solver.cpp:238]     Train net output #0: loss = 2.32152 (* 1 = 2.32152 loss)
I0428 20:20:27.637442  1552 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:27.774180  1552 solver.cpp:219] Iteration 100 (731.327 iter/s, 0.136738s/100 iters), loss = 0.260232
I0428 20:20:27.774221  1552 solver.cpp:238]     Train net output #0: loss = 0.260232 (* 1 = 0.260232 loss)
I0428 20:20:27.774227  1552 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:27.913445  1552 solver.cpp:219] Iteration 200 (718.24 iter/s, 0.139229s/100 iters), loss = 0.190351
I0428 20:20:27.913486  1552 solver.cpp:238]     Train net output #0: loss = 0.190351 (* 1 = 0.190351 loss)
I0428 20:20:27.913492  1552 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:28.049486  1552 solver.cpp:219] Iteration 300 (735.269 iter/s, 0.136005s/100 iters), loss = 0.200335
I0428 20:20:28.049525  1552 solver.cpp:238]     Train net output #0: loss = 0.200335 (* 1 = 0.200335 loss)
I0428 20:20:28.049531  1552 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:28.191673  1552 solver.cpp:219] Iteration 400 (703.469 iter/s, 0.142153s/100 iters), loss = 0.0738184
I0428 20:20:28.191699  1552 solver.cpp:238]     Train net output #0: loss = 0.0738183 (* 1 = 0.0738183 loss)
I0428 20:20:28.191705  1552 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:28.335405  1552 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:28.409556  1559 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:28.411959  1552 solver.cpp:398]     Test net output #0: accuracy = 0.9597
I0428 20:20:28.411984  1552 solver.cpp:398]     Test net output #1: loss = 0.120923 (* 1 = 0.120923 loss)
I0428 20:20:28.413298  1552 solver.cpp:219] Iteration 500 (451.3 iter/s, 0.221582s/100 iters), loss = 0.0895194
I0428 20:20:28.413342  1552 solver.cpp:238]     Train net output #0: loss = 0.0895193 (* 1 = 0.0895193 loss)
I0428 20:20:28.413352  1552 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:28.555671  1552 solver.cpp:219] Iteration 600 (702.664 iter/s, 0.142316s/100 iters), loss = 0.104382
I0428 20:20:28.555711  1552 solver.cpp:238]     Train net output #0: loss = 0.104381 (* 1 = 0.104381 loss)
I0428 20:20:28.555721  1552 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:28.708572  1552 solver.cpp:219] Iteration 700 (654.247 iter/s, 0.152847s/100 iters), loss = 0.163249
I0428 20:20:28.708619  1552 solver.cpp:238]     Train net output #0: loss = 0.163249 (* 1 = 0.163249 loss)
I0428 20:20:28.708631  1552 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:28.865731  1552 solver.cpp:219] Iteration 800 (636.537 iter/s, 0.1571s/100 iters), loss = 0.191734
I0428 20:20:28.865769  1552 solver.cpp:238]     Train net output #0: loss = 0.191733 (* 1 = 0.191733 loss)
I0428 20:20:28.865779  1552 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:29.002837  1552 solver.cpp:219] Iteration 900 (729.617 iter/s, 0.137058s/100 iters), loss = 0.131818
I0428 20:20:29.002878  1552 solver.cpp:238]     Train net output #0: loss = 0.131818 (* 1 = 0.131818 loss)
I0428 20:20:29.002885  1552 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:29.049960  1558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:29.142060  1552 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:29.143893  1552 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:29.144984  1552 solver.cpp:311] Iteration 1000, loss = 0.0822775
I0428 20:20:29.145001  1552 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:29.220027  1559 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:29.222005  1552 solver.cpp:398]     Test net output #0: accuracy = 0.974
I0428 20:20:29.222028  1552 solver.cpp:398]     Test net output #1: loss = 0.0766056 (* 1 = 0.0766056 loss)
I0428 20:20:29.222033  1552 solver.cpp:316] Optimization Done.
I0428 20:20:29.222038  1552 caffe.cpp:259] Optimization Done.
