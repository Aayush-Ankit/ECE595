I0428 20:08:06.504807 31308 caffe.cpp:218] Using GPUs 0
I0428 20:08:06.534852 31308 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:06.982115 31308 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1074.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:06.982249 31308 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1074.prototxt
I0428 20:08:06.982573 31308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:06.982587 31308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:06.982666 31308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:06.982728 31308 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:06.982825 31308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:06.982843 31308 net.cpp:86] Creating Layer mnist
I0428 20:08:06.982851 31308 net.cpp:382] mnist -> data
I0428 20:08:06.982868 31308 net.cpp:382] mnist -> label
I0428 20:08:06.983764 31308 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:06.986042 31308 net.cpp:124] Setting up mnist
I0428 20:08:06.986073 31308 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:06.986078 31308 net.cpp:131] Top shape: 64 (64)
I0428 20:08:06.986081 31308 net.cpp:139] Memory required for data: 200960
I0428 20:08:06.986088 31308 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:06.986116 31308 net.cpp:86] Creating Layer conv0
I0428 20:08:06.986135 31308 net.cpp:408] conv0 <- data
I0428 20:08:06.986145 31308 net.cpp:382] conv0 -> conv0
I0428 20:08:07.217399 31308 net.cpp:124] Setting up conv0
I0428 20:08:07.217440 31308 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:07.217444 31308 net.cpp:139] Memory required for data: 3887360
I0428 20:08:07.217458 31308 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:07.217486 31308 net.cpp:86] Creating Layer pool0
I0428 20:08:07.217490 31308 net.cpp:408] pool0 <- conv0
I0428 20:08:07.217495 31308 net.cpp:382] pool0 -> pool0
I0428 20:08:07.217541 31308 net.cpp:124] Setting up pool0
I0428 20:08:07.217548 31308 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:07.217551 31308 net.cpp:139] Memory required for data: 4808960
I0428 20:08:07.217555 31308 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:07.217564 31308 net.cpp:86] Creating Layer conv1
I0428 20:08:07.217567 31308 net.cpp:408] conv1 <- pool0
I0428 20:08:07.217572 31308 net.cpp:382] conv1 -> conv1
I0428 20:08:07.220229 31308 net.cpp:124] Setting up conv1
I0428 20:08:07.220274 31308 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:07.220278 31308 net.cpp:139] Memory required for data: 4972800
I0428 20:08:07.220286 31308 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:07.220294 31308 net.cpp:86] Creating Layer pool1
I0428 20:08:07.220312 31308 net.cpp:408] pool1 <- conv1
I0428 20:08:07.220317 31308 net.cpp:382] pool1 -> pool1
I0428 20:08:07.220353 31308 net.cpp:124] Setting up pool1
I0428 20:08:07.220360 31308 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:07.220363 31308 net.cpp:139] Memory required for data: 5013760
I0428 20:08:07.220366 31308 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:07.220373 31308 net.cpp:86] Creating Layer ip1
I0428 20:08:07.220376 31308 net.cpp:408] ip1 <- pool1
I0428 20:08:07.220381 31308 net.cpp:382] ip1 -> ip1
I0428 20:08:07.221405 31308 net.cpp:124] Setting up ip1
I0428 20:08:07.221418 31308 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:07.221422 31308 net.cpp:139] Memory required for data: 5020160
I0428 20:08:07.221431 31308 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:07.221436 31308 net.cpp:86] Creating Layer relu1
I0428 20:08:07.221439 31308 net.cpp:408] relu1 <- ip1
I0428 20:08:07.221444 31308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:07.221606 31308 net.cpp:124] Setting up relu1
I0428 20:08:07.221614 31308 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:07.221617 31308 net.cpp:139] Memory required for data: 5026560
I0428 20:08:07.221621 31308 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:07.221626 31308 net.cpp:86] Creating Layer ip2
I0428 20:08:07.221644 31308 net.cpp:408] ip2 <- ip1
I0428 20:08:07.221649 31308 net.cpp:382] ip2 -> ip2
I0428 20:08:07.221747 31308 net.cpp:124] Setting up ip2
I0428 20:08:07.221755 31308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:07.221757 31308 net.cpp:139] Memory required for data: 5029120
I0428 20:08:07.221762 31308 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:07.221767 31308 net.cpp:86] Creating Layer relu2
I0428 20:08:07.221771 31308 net.cpp:408] relu2 <- ip2
I0428 20:08:07.221774 31308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:07.222488 31308 net.cpp:124] Setting up relu2
I0428 20:08:07.222501 31308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:07.222519 31308 net.cpp:139] Memory required for data: 5031680
I0428 20:08:07.222523 31308 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:07.222530 31308 net.cpp:86] Creating Layer ip3
I0428 20:08:07.222533 31308 net.cpp:408] ip3 <- ip2
I0428 20:08:07.222538 31308 net.cpp:382] ip3 -> ip3
I0428 20:08:07.222641 31308 net.cpp:124] Setting up ip3
I0428 20:08:07.222648 31308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:07.222651 31308 net.cpp:139] Memory required for data: 5034240
I0428 20:08:07.222658 31308 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:07.222663 31308 net.cpp:86] Creating Layer relu3
I0428 20:08:07.222666 31308 net.cpp:408] relu3 <- ip3
I0428 20:08:07.222671 31308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:07.222839 31308 net.cpp:124] Setting up relu3
I0428 20:08:07.222847 31308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:07.222851 31308 net.cpp:139] Memory required for data: 5036800
I0428 20:08:07.222854 31308 layer_factory.hpp:77] Creating layer loss
I0428 20:08:07.222859 31308 net.cpp:86] Creating Layer loss
I0428 20:08:07.222862 31308 net.cpp:408] loss <- ip3
I0428 20:08:07.222867 31308 net.cpp:408] loss <- label
I0428 20:08:07.222872 31308 net.cpp:382] loss -> loss
I0428 20:08:07.222889 31308 layer_factory.hpp:77] Creating layer loss
I0428 20:08:07.223100 31308 net.cpp:124] Setting up loss
I0428 20:08:07.223109 31308 net.cpp:131] Top shape: (1)
I0428 20:08:07.223114 31308 net.cpp:134]     with loss weight 1
I0428 20:08:07.223129 31308 net.cpp:139] Memory required for data: 5036804
I0428 20:08:07.223131 31308 net.cpp:200] loss needs backward computation.
I0428 20:08:07.223135 31308 net.cpp:200] relu3 needs backward computation.
I0428 20:08:07.223139 31308 net.cpp:200] ip3 needs backward computation.
I0428 20:08:07.223141 31308 net.cpp:200] relu2 needs backward computation.
I0428 20:08:07.223145 31308 net.cpp:200] ip2 needs backward computation.
I0428 20:08:07.223158 31308 net.cpp:200] relu1 needs backward computation.
I0428 20:08:07.223160 31308 net.cpp:200] ip1 needs backward computation.
I0428 20:08:07.223163 31308 net.cpp:200] pool1 needs backward computation.
I0428 20:08:07.223166 31308 net.cpp:200] conv1 needs backward computation.
I0428 20:08:07.223170 31308 net.cpp:200] pool0 needs backward computation.
I0428 20:08:07.223172 31308 net.cpp:200] conv0 needs backward computation.
I0428 20:08:07.223176 31308 net.cpp:202] mnist does not need backward computation.
I0428 20:08:07.223178 31308 net.cpp:244] This network produces output loss
I0428 20:08:07.223187 31308 net.cpp:257] Network initialization done.
I0428 20:08:07.223522 31308 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1074.prototxt
I0428 20:08:07.223564 31308 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:07.223651 31308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:07.223739 31308 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:07.223781 31308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:07.223793 31308 net.cpp:86] Creating Layer mnist
I0428 20:08:07.223798 31308 net.cpp:382] mnist -> data
I0428 20:08:07.223805 31308 net.cpp:382] mnist -> label
I0428 20:08:07.223881 31308 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:07.225817 31308 net.cpp:124] Setting up mnist
I0428 20:08:07.225829 31308 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:07.225850 31308 net.cpp:131] Top shape: 100 (100)
I0428 20:08:07.225853 31308 net.cpp:139] Memory required for data: 314000
I0428 20:08:07.225857 31308 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:07.225867 31308 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:07.225870 31308 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:07.225874 31308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:07.225881 31308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:07.225967 31308 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:07.225975 31308 net.cpp:131] Top shape: 100 (100)
I0428 20:08:07.225977 31308 net.cpp:131] Top shape: 100 (100)
I0428 20:08:07.225980 31308 net.cpp:139] Memory required for data: 314800
I0428 20:08:07.225983 31308 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:07.225991 31308 net.cpp:86] Creating Layer conv0
I0428 20:08:07.225994 31308 net.cpp:408] conv0 <- data
I0428 20:08:07.225999 31308 net.cpp:382] conv0 -> conv0
I0428 20:08:07.227449 31308 net.cpp:124] Setting up conv0
I0428 20:08:07.227479 31308 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:07.227483 31308 net.cpp:139] Memory required for data: 6074800
I0428 20:08:07.227493 31308 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:07.227499 31308 net.cpp:86] Creating Layer pool0
I0428 20:08:07.227502 31308 net.cpp:408] pool0 <- conv0
I0428 20:08:07.227507 31308 net.cpp:382] pool0 -> pool0
I0428 20:08:07.227542 31308 net.cpp:124] Setting up pool0
I0428 20:08:07.227550 31308 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:07.227553 31308 net.cpp:139] Memory required for data: 7514800
I0428 20:08:07.227556 31308 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:07.227565 31308 net.cpp:86] Creating Layer conv1
I0428 20:08:07.227568 31308 net.cpp:408] conv1 <- pool0
I0428 20:08:07.227573 31308 net.cpp:382] conv1 -> conv1
I0428 20:08:07.229691 31308 net.cpp:124] Setting up conv1
I0428 20:08:07.229718 31308 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:07.229722 31308 net.cpp:139] Memory required for data: 7770800
I0428 20:08:07.229732 31308 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:07.229753 31308 net.cpp:86] Creating Layer pool1
I0428 20:08:07.229758 31308 net.cpp:408] pool1 <- conv1
I0428 20:08:07.229763 31308 net.cpp:382] pool1 -> pool1
I0428 20:08:07.229800 31308 net.cpp:124] Setting up pool1
I0428 20:08:07.229809 31308 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:07.229811 31308 net.cpp:139] Memory required for data: 7834800
I0428 20:08:07.229822 31308 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:07.229828 31308 net.cpp:86] Creating Layer ip1
I0428 20:08:07.229832 31308 net.cpp:408] ip1 <- pool1
I0428 20:08:07.229837 31308 net.cpp:382] ip1 -> ip1
I0428 20:08:07.230008 31308 net.cpp:124] Setting up ip1
I0428 20:08:07.230017 31308 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:07.230054 31308 net.cpp:139] Memory required for data: 7844800
I0428 20:08:07.230062 31308 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:07.230068 31308 net.cpp:86] Creating Layer relu1
I0428 20:08:07.230072 31308 net.cpp:408] relu1 <- ip1
I0428 20:08:07.230077 31308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:07.230258 31308 net.cpp:124] Setting up relu1
I0428 20:08:07.230268 31308 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:07.230273 31308 net.cpp:139] Memory required for data: 7854800
I0428 20:08:07.230275 31308 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:07.230283 31308 net.cpp:86] Creating Layer ip2
I0428 20:08:07.230286 31308 net.cpp:408] ip2 <- ip1
I0428 20:08:07.230291 31308 net.cpp:382] ip2 -> ip2
I0428 20:08:07.230388 31308 net.cpp:124] Setting up ip2
I0428 20:08:07.230396 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.230399 31308 net.cpp:139] Memory required for data: 7858800
I0428 20:08:07.230404 31308 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:07.230409 31308 net.cpp:86] Creating Layer relu2
I0428 20:08:07.230412 31308 net.cpp:408] relu2 <- ip2
I0428 20:08:07.230417 31308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:07.230556 31308 net.cpp:124] Setting up relu2
I0428 20:08:07.230564 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.230567 31308 net.cpp:139] Memory required for data: 7862800
I0428 20:08:07.230571 31308 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:07.230576 31308 net.cpp:86] Creating Layer ip3
I0428 20:08:07.230579 31308 net.cpp:408] ip3 <- ip2
I0428 20:08:07.230584 31308 net.cpp:382] ip3 -> ip3
I0428 20:08:07.230672 31308 net.cpp:124] Setting up ip3
I0428 20:08:07.230679 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.230682 31308 net.cpp:139] Memory required for data: 7866800
I0428 20:08:07.230690 31308 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:07.230695 31308 net.cpp:86] Creating Layer relu3
I0428 20:08:07.230697 31308 net.cpp:408] relu3 <- ip3
I0428 20:08:07.230701 31308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:07.231474 31308 net.cpp:124] Setting up relu3
I0428 20:08:07.231485 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.231505 31308 net.cpp:139] Memory required for data: 7870800
I0428 20:08:07.231508 31308 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:07.231513 31308 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:07.231518 31308 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:07.231523 31308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:07.231528 31308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:07.231566 31308 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:07.231588 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.231592 31308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:07.231595 31308 net.cpp:139] Memory required for data: 7878800
I0428 20:08:07.231598 31308 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:07.231603 31308 net.cpp:86] Creating Layer accuracy
I0428 20:08:07.231606 31308 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:07.231611 31308 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:07.231616 31308 net.cpp:382] accuracy -> accuracy
I0428 20:08:07.231622 31308 net.cpp:124] Setting up accuracy
I0428 20:08:07.231642 31308 net.cpp:131] Top shape: (1)
I0428 20:08:07.231644 31308 net.cpp:139] Memory required for data: 7878804
I0428 20:08:07.231647 31308 layer_factory.hpp:77] Creating layer loss
I0428 20:08:07.231652 31308 net.cpp:86] Creating Layer loss
I0428 20:08:07.231657 31308 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:07.231660 31308 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:07.231664 31308 net.cpp:382] loss -> loss
I0428 20:08:07.231672 31308 layer_factory.hpp:77] Creating layer loss
I0428 20:08:07.231905 31308 net.cpp:124] Setting up loss
I0428 20:08:07.231915 31308 net.cpp:131] Top shape: (1)
I0428 20:08:07.231927 31308 net.cpp:134]     with loss weight 1
I0428 20:08:07.231951 31308 net.cpp:139] Memory required for data: 7878808
I0428 20:08:07.231956 31308 net.cpp:200] loss needs backward computation.
I0428 20:08:07.231974 31308 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:07.231979 31308 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:07.231982 31308 net.cpp:200] relu3 needs backward computation.
I0428 20:08:07.231986 31308 net.cpp:200] ip3 needs backward computation.
I0428 20:08:07.231988 31308 net.cpp:200] relu2 needs backward computation.
I0428 20:08:07.231992 31308 net.cpp:200] ip2 needs backward computation.
I0428 20:08:07.231995 31308 net.cpp:200] relu1 needs backward computation.
I0428 20:08:07.231998 31308 net.cpp:200] ip1 needs backward computation.
I0428 20:08:07.232002 31308 net.cpp:200] pool1 needs backward computation.
I0428 20:08:07.232005 31308 net.cpp:200] conv1 needs backward computation.
I0428 20:08:07.232009 31308 net.cpp:200] pool0 needs backward computation.
I0428 20:08:07.232012 31308 net.cpp:200] conv0 needs backward computation.
I0428 20:08:07.232017 31308 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:07.232024 31308 net.cpp:202] mnist does not need backward computation.
I0428 20:08:07.232028 31308 net.cpp:244] This network produces output accuracy
I0428 20:08:07.232031 31308 net.cpp:244] This network produces output loss
I0428 20:08:07.232041 31308 net.cpp:257] Network initialization done.
I0428 20:08:07.232084 31308 solver.cpp:56] Solver scaffolding done.
I0428 20:08:07.232419 31308 caffe.cpp:248] Starting Optimization
I0428 20:08:07.232425 31308 solver.cpp:273] Solving LeNet
I0428 20:08:07.232445 31308 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:07.233268 31308 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:07.237867 31308 blocking_queue.cpp:49] Waiting for data
I0428 20:08:07.309079 31315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:07.309680 31308 solver.cpp:398]     Test net output #0: accuracy = 0.139
I0428 20:08:07.309715 31308 solver.cpp:398]     Test net output #1: loss = 2.2998 (* 1 = 2.2998 loss)
I0428 20:08:07.313400 31308 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809308s/100 iters), loss = 2.29565
I0428 20:08:07.313423 31308 solver.cpp:238]     Train net output #0: loss = 2.29565 (* 1 = 2.29565 loss)
I0428 20:08:07.313436 31308 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:07.411996 31308 solver.cpp:219] Iteration 100 (1014.59 iter/s, 0.098562s/100 iters), loss = 1.2644
I0428 20:08:07.412020 31308 solver.cpp:238]     Train net output #0: loss = 1.2644 (* 1 = 1.2644 loss)
I0428 20:08:07.412026 31308 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:07.509295 31308 solver.cpp:219] Iteration 200 (1028.12 iter/s, 0.0972646s/100 iters), loss = 1.04167
I0428 20:08:07.509326 31308 solver.cpp:238]     Train net output #0: loss = 1.04167 (* 1 = 1.04167 loss)
I0428 20:08:07.509332 31308 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:07.606418 31308 solver.cpp:219] Iteration 300 (1029.99 iter/s, 0.0970887s/100 iters), loss = 1.03664
I0428 20:08:07.606443 31308 solver.cpp:238]     Train net output #0: loss = 1.03664 (* 1 = 1.03664 loss)
I0428 20:08:07.606465 31308 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:07.710237 31308 solver.cpp:219] Iteration 400 (963.688 iter/s, 0.103768s/100 iters), loss = 1.0029
I0428 20:08:07.710279 31308 solver.cpp:238]     Train net output #0: loss = 1.0029 (* 1 = 1.0029 loss)
I0428 20:08:07.710285 31308 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:07.804181 31308 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:07.879647 31315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:07.880292 31308 solver.cpp:398]     Test net output #0: accuracy = 0.7031
I0428 20:08:07.880321 31308 solver.cpp:398]     Test net output #1: loss = 0.953178 (* 1 = 0.953178 loss)
I0428 20:08:07.881299 31308 solver.cpp:219] Iteration 500 (584.775 iter/s, 0.171006s/100 iters), loss = 1.07044
I0428 20:08:07.881330 31308 solver.cpp:238]     Train net output #0: loss = 1.07044 (* 1 = 1.07044 loss)
I0428 20:08:07.881356 31308 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:07.980845 31308 solver.cpp:219] Iteration 600 (1004.96 iter/s, 0.099506s/100 iters), loss = 0.775116
I0428 20:08:07.980873 31308 solver.cpp:238]     Train net output #0: loss = 0.775116 (* 1 = 0.775116 loss)
I0428 20:08:07.980883 31308 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:08.079092 31308 solver.cpp:219] Iteration 700 (1018.22 iter/s, 0.0982106s/100 iters), loss = 1.20043
I0428 20:08:08.079135 31308 solver.cpp:238]     Train net output #0: loss = 1.20043 (* 1 = 1.20043 loss)
I0428 20:08:08.079141 31308 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:08.174928 31308 solver.cpp:219] Iteration 800 (1043.83 iter/s, 0.0958012s/100 iters), loss = 0.862427
I0428 20:08:08.174969 31308 solver.cpp:238]     Train net output #0: loss = 0.862427 (* 1 = 0.862427 loss)
I0428 20:08:08.174976 31308 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:08.269163 31308 solver.cpp:219] Iteration 900 (1061.75 iter/s, 0.0941845s/100 iters), loss = 0.63816
I0428 20:08:08.269204 31308 solver.cpp:238]     Train net output #0: loss = 0.63816 (* 1 = 0.63816 loss)
I0428 20:08:08.269220 31308 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:08.300715 31314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:08.362771 31308 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:08.363620 31308 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:08.364176 31308 solver.cpp:311] Iteration 1000, loss = 0.694361
I0428 20:08:08.364190 31308 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:08.439873 31315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:08.440500 31308 solver.cpp:398]     Test net output #0: accuracy = 0.8507
I0428 20:08:08.440538 31308 solver.cpp:398]     Test net output #1: loss = 0.57786 (* 1 = 0.57786 loss)
I0428 20:08:08.440543 31308 solver.cpp:316] Optimization Done.
I0428 20:08:08.440546 31308 caffe.cpp:259] Optimization Done.
