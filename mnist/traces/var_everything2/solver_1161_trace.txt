I0428 20:11:32.614267 32091 caffe.cpp:218] Using GPUs 0
I0428 20:11:32.653548 32091 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:33.106779 32091 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1161.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:33.106912 32091 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1161.prototxt
I0428 20:11:33.107239 32091 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:33.107256 32091 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:33.107336 32091 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:33.107400 32091 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:33.107481 32091 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:33.107502 32091 net.cpp:86] Creating Layer mnist
I0428 20:11:33.107508 32091 net.cpp:382] mnist -> data
I0428 20:11:33.107527 32091 net.cpp:382] mnist -> label
I0428 20:11:33.108436 32091 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:33.110599 32091 net.cpp:124] Setting up mnist
I0428 20:11:33.110628 32091 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:33.110633 32091 net.cpp:131] Top shape: 64 (64)
I0428 20:11:33.110636 32091 net.cpp:139] Memory required for data: 200960
I0428 20:11:33.110642 32091 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:33.110654 32091 net.cpp:86] Creating Layer conv0
I0428 20:11:33.110687 32091 net.cpp:408] conv0 <- data
I0428 20:11:33.110697 32091 net.cpp:382] conv0 -> conv0
I0428 20:11:33.346189 32091 net.cpp:124] Setting up conv0
I0428 20:11:33.346228 32091 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:33.346231 32091 net.cpp:139] Memory required for data: 3887360
I0428 20:11:33.346246 32091 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:33.346259 32091 net.cpp:86] Creating Layer pool0
I0428 20:11:33.346262 32091 net.cpp:408] pool0 <- conv0
I0428 20:11:33.346267 32091 net.cpp:382] pool0 -> pool0
I0428 20:11:33.346341 32091 net.cpp:124] Setting up pool0
I0428 20:11:33.346346 32091 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:33.346349 32091 net.cpp:139] Memory required for data: 4808960
I0428 20:11:33.346352 32091 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:33.346362 32091 net.cpp:86] Creating Layer conv1
I0428 20:11:33.346365 32091 net.cpp:408] conv1 <- pool0
I0428 20:11:33.346370 32091 net.cpp:382] conv1 -> conv1
I0428 20:11:33.348376 32091 net.cpp:124] Setting up conv1
I0428 20:11:33.348405 32091 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:33.348409 32091 net.cpp:139] Memory required for data: 5628160
I0428 20:11:33.348418 32091 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:33.348428 32091 net.cpp:86] Creating Layer pool1
I0428 20:11:33.348430 32091 net.cpp:408] pool1 <- conv1
I0428 20:11:33.348435 32091 net.cpp:382] pool1 -> pool1
I0428 20:11:33.348487 32091 net.cpp:124] Setting up pool1
I0428 20:11:33.348493 32091 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:33.348496 32091 net.cpp:139] Memory required for data: 5832960
I0428 20:11:33.348498 32091 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:33.348505 32091 net.cpp:86] Creating Layer ip1
I0428 20:11:33.348510 32091 net.cpp:408] ip1 <- pool1
I0428 20:11:33.348513 32091 net.cpp:382] ip1 -> ip1
I0428 20:11:33.348899 32091 net.cpp:124] Setting up ip1
I0428 20:11:33.348907 32091 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:33.348925 32091 net.cpp:139] Memory required for data: 5845760
I0428 20:11:33.348933 32091 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:33.348938 32091 net.cpp:86] Creating Layer relu1
I0428 20:11:33.348942 32091 net.cpp:408] relu1 <- ip1
I0428 20:11:33.348947 32091 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:33.349112 32091 net.cpp:124] Setting up relu1
I0428 20:11:33.349120 32091 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:33.349123 32091 net.cpp:139] Memory required for data: 5858560
I0428 20:11:33.349126 32091 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:33.349133 32091 net.cpp:86] Creating Layer ip2
I0428 20:11:33.349136 32091 net.cpp:408] ip2 <- ip1
I0428 20:11:33.349155 32091 net.cpp:382] ip2 -> ip2
I0428 20:11:33.349247 32091 net.cpp:124] Setting up ip2
I0428 20:11:33.349254 32091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:33.349257 32091 net.cpp:139] Memory required for data: 5861120
I0428 20:11:33.349262 32091 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:33.349268 32091 net.cpp:86] Creating Layer relu2
I0428 20:11:33.349274 32091 net.cpp:408] relu2 <- ip2
I0428 20:11:33.349278 32091 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:33.350103 32091 net.cpp:124] Setting up relu2
I0428 20:11:33.350114 32091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:33.350133 32091 net.cpp:139] Memory required for data: 5863680
I0428 20:11:33.350136 32091 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:33.350144 32091 net.cpp:86] Creating Layer ip3
I0428 20:11:33.350148 32091 net.cpp:408] ip3 <- ip2
I0428 20:11:33.350153 32091 net.cpp:382] ip3 -> ip3
I0428 20:11:33.350282 32091 net.cpp:124] Setting up ip3
I0428 20:11:33.350291 32091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:33.350293 32091 net.cpp:139] Memory required for data: 5866240
I0428 20:11:33.350301 32091 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:33.350306 32091 net.cpp:86] Creating Layer relu3
I0428 20:11:33.350309 32091 net.cpp:408] relu3 <- ip3
I0428 20:11:33.350316 32091 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:33.350497 32091 net.cpp:124] Setting up relu3
I0428 20:11:33.350505 32091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:33.350508 32091 net.cpp:139] Memory required for data: 5868800
I0428 20:11:33.350512 32091 layer_factory.hpp:77] Creating layer loss
I0428 20:11:33.350517 32091 net.cpp:86] Creating Layer loss
I0428 20:11:33.350519 32091 net.cpp:408] loss <- ip3
I0428 20:11:33.350523 32091 net.cpp:408] loss <- label
I0428 20:11:33.350529 32091 net.cpp:382] loss -> loss
I0428 20:11:33.350546 32091 layer_factory.hpp:77] Creating layer loss
I0428 20:11:33.350811 32091 net.cpp:124] Setting up loss
I0428 20:11:33.350836 32091 net.cpp:131] Top shape: (1)
I0428 20:11:33.350838 32091 net.cpp:134]     with loss weight 1
I0428 20:11:33.350853 32091 net.cpp:139] Memory required for data: 5868804
I0428 20:11:33.350857 32091 net.cpp:200] loss needs backward computation.
I0428 20:11:33.350860 32091 net.cpp:200] relu3 needs backward computation.
I0428 20:11:33.350863 32091 net.cpp:200] ip3 needs backward computation.
I0428 20:11:33.350865 32091 net.cpp:200] relu2 needs backward computation.
I0428 20:11:33.350868 32091 net.cpp:200] ip2 needs backward computation.
I0428 20:11:33.350872 32091 net.cpp:200] relu1 needs backward computation.
I0428 20:11:33.350874 32091 net.cpp:200] ip1 needs backward computation.
I0428 20:11:33.350878 32091 net.cpp:200] pool1 needs backward computation.
I0428 20:11:33.350880 32091 net.cpp:200] conv1 needs backward computation.
I0428 20:11:33.350883 32091 net.cpp:200] pool0 needs backward computation.
I0428 20:11:33.350885 32091 net.cpp:200] conv0 needs backward computation.
I0428 20:11:33.350889 32091 net.cpp:202] mnist does not need backward computation.
I0428 20:11:33.350891 32091 net.cpp:244] This network produces output loss
I0428 20:11:33.350903 32091 net.cpp:257] Network initialization done.
I0428 20:11:33.351253 32091 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1161.prototxt
I0428 20:11:33.351295 32091 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:33.351418 32091 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:33.351498 32091 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:33.351542 32091 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:33.351570 32091 net.cpp:86] Creating Layer mnist
I0428 20:11:33.351577 32091 net.cpp:382] mnist -> data
I0428 20:11:33.351584 32091 net.cpp:382] mnist -> label
I0428 20:11:33.351691 32091 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:33.353818 32091 net.cpp:124] Setting up mnist
I0428 20:11:33.353843 32091 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:33.353848 32091 net.cpp:131] Top shape: 100 (100)
I0428 20:11:33.353866 32091 net.cpp:139] Memory required for data: 314000
I0428 20:11:33.353869 32091 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:33.353899 32091 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:33.353904 32091 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:33.353909 32091 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:33.353915 32091 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:33.353966 32091 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:33.353973 32091 net.cpp:131] Top shape: 100 (100)
I0428 20:11:33.353977 32091 net.cpp:131] Top shape: 100 (100)
I0428 20:11:33.353981 32091 net.cpp:139] Memory required for data: 314800
I0428 20:11:33.353983 32091 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:33.353992 32091 net.cpp:86] Creating Layer conv0
I0428 20:11:33.353996 32091 net.cpp:408] conv0 <- data
I0428 20:11:33.354001 32091 net.cpp:382] conv0 -> conv0
I0428 20:11:33.355746 32091 net.cpp:124] Setting up conv0
I0428 20:11:33.355758 32091 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:33.355762 32091 net.cpp:139] Memory required for data: 6074800
I0428 20:11:33.355772 32091 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:33.355777 32091 net.cpp:86] Creating Layer pool0
I0428 20:11:33.355780 32091 net.cpp:408] pool0 <- conv0
I0428 20:11:33.355784 32091 net.cpp:382] pool0 -> pool0
I0428 20:11:33.355852 32091 net.cpp:124] Setting up pool0
I0428 20:11:33.355857 32091 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:33.355860 32091 net.cpp:139] Memory required for data: 7514800
I0428 20:11:33.355864 32091 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:33.355871 32091 net.cpp:86] Creating Layer conv1
I0428 20:11:33.355875 32091 net.cpp:408] conv1 <- pool0
I0428 20:11:33.355880 32091 net.cpp:382] conv1 -> conv1
I0428 20:11:33.357838 32091 net.cpp:124] Setting up conv1
I0428 20:11:33.357852 32091 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:33.357856 32091 net.cpp:139] Memory required for data: 8794800
I0428 20:11:33.357863 32091 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:33.357894 32091 net.cpp:86] Creating Layer pool1
I0428 20:11:33.357903 32091 net.cpp:408] pool1 <- conv1
I0428 20:11:33.357908 32091 net.cpp:382] pool1 -> pool1
I0428 20:11:33.357945 32091 net.cpp:124] Setting up pool1
I0428 20:11:33.357951 32091 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:33.357954 32091 net.cpp:139] Memory required for data: 9114800
I0428 20:11:33.357956 32091 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:33.357969 32091 net.cpp:86] Creating Layer ip1
I0428 20:11:33.357971 32091 net.cpp:408] ip1 <- pool1
I0428 20:11:33.357976 32091 net.cpp:382] ip1 -> ip1
I0428 20:11:33.358366 32091 net.cpp:124] Setting up ip1
I0428 20:11:33.358374 32091 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:33.358393 32091 net.cpp:139] Memory required for data: 9134800
I0428 20:11:33.358407 32091 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:33.358412 32091 net.cpp:86] Creating Layer relu1
I0428 20:11:33.358422 32091 net.cpp:408] relu1 <- ip1
I0428 20:11:33.358436 32091 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:33.358639 32091 net.cpp:124] Setting up relu1
I0428 20:11:33.358647 32091 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:33.358650 32091 net.cpp:139] Memory required for data: 9154800
I0428 20:11:33.358654 32091 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:33.358661 32091 net.cpp:86] Creating Layer ip2
I0428 20:11:33.358664 32091 net.cpp:408] ip2 <- ip1
I0428 20:11:33.358676 32091 net.cpp:382] ip2 -> ip2
I0428 20:11:33.358856 32091 net.cpp:124] Setting up ip2
I0428 20:11:33.358865 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.358867 32091 net.cpp:139] Memory required for data: 9158800
I0428 20:11:33.358872 32091 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:33.358877 32091 net.cpp:86] Creating Layer relu2
I0428 20:11:33.358891 32091 net.cpp:408] relu2 <- ip2
I0428 20:11:33.358896 32091 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:33.359071 32091 net.cpp:124] Setting up relu2
I0428 20:11:33.359081 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.359084 32091 net.cpp:139] Memory required for data: 9162800
I0428 20:11:33.359087 32091 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:33.359092 32091 net.cpp:86] Creating Layer ip3
I0428 20:11:33.359096 32091 net.cpp:408] ip3 <- ip2
I0428 20:11:33.359100 32091 net.cpp:382] ip3 -> ip3
I0428 20:11:33.359208 32091 net.cpp:124] Setting up ip3
I0428 20:11:33.359215 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.359218 32091 net.cpp:139] Memory required for data: 9166800
I0428 20:11:33.359226 32091 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:33.359230 32091 net.cpp:86] Creating Layer relu3
I0428 20:11:33.359233 32091 net.cpp:408] relu3 <- ip3
I0428 20:11:33.359238 32091 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:33.360031 32091 net.cpp:124] Setting up relu3
I0428 20:11:33.360043 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.360045 32091 net.cpp:139] Memory required for data: 9170800
I0428 20:11:33.360049 32091 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:33.360054 32091 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:33.360056 32091 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:33.360061 32091 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:33.360067 32091 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:33.360111 32091 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:33.360117 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.360121 32091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:33.360123 32091 net.cpp:139] Memory required for data: 9178800
I0428 20:11:33.360126 32091 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:33.360141 32091 net.cpp:86] Creating Layer accuracy
I0428 20:11:33.360144 32091 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:33.360148 32091 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:33.360153 32091 net.cpp:382] accuracy -> accuracy
I0428 20:11:33.360159 32091 net.cpp:124] Setting up accuracy
I0428 20:11:33.360163 32091 net.cpp:131] Top shape: (1)
I0428 20:11:33.360165 32091 net.cpp:139] Memory required for data: 9178804
I0428 20:11:33.360168 32091 layer_factory.hpp:77] Creating layer loss
I0428 20:11:33.360172 32091 net.cpp:86] Creating Layer loss
I0428 20:11:33.360174 32091 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:33.360178 32091 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:33.360182 32091 net.cpp:382] loss -> loss
I0428 20:11:33.360186 32091 layer_factory.hpp:77] Creating layer loss
I0428 20:11:33.360440 32091 net.cpp:124] Setting up loss
I0428 20:11:33.360450 32091 net.cpp:131] Top shape: (1)
I0428 20:11:33.360453 32091 net.cpp:134]     with loss weight 1
I0428 20:11:33.360468 32091 net.cpp:139] Memory required for data: 9178808
I0428 20:11:33.360472 32091 net.cpp:200] loss needs backward computation.
I0428 20:11:33.360482 32091 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:33.360486 32091 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:33.360488 32091 net.cpp:200] relu3 needs backward computation.
I0428 20:11:33.360502 32091 net.cpp:200] ip3 needs backward computation.
I0428 20:11:33.360504 32091 net.cpp:200] relu2 needs backward computation.
I0428 20:11:33.360507 32091 net.cpp:200] ip2 needs backward computation.
I0428 20:11:33.360509 32091 net.cpp:200] relu1 needs backward computation.
I0428 20:11:33.360517 32091 net.cpp:200] ip1 needs backward computation.
I0428 20:11:33.360519 32091 net.cpp:200] pool1 needs backward computation.
I0428 20:11:33.360522 32091 net.cpp:200] conv1 needs backward computation.
I0428 20:11:33.360525 32091 net.cpp:200] pool0 needs backward computation.
I0428 20:11:33.360527 32091 net.cpp:200] conv0 needs backward computation.
I0428 20:11:33.360532 32091 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:33.360534 32091 net.cpp:202] mnist does not need backward computation.
I0428 20:11:33.360538 32091 net.cpp:244] This network produces output accuracy
I0428 20:11:33.360540 32091 net.cpp:244] This network produces output loss
I0428 20:11:33.360551 32091 net.cpp:257] Network initialization done.
I0428 20:11:33.360606 32091 solver.cpp:56] Solver scaffolding done.
I0428 20:11:33.361014 32091 caffe.cpp:248] Starting Optimization
I0428 20:11:33.361023 32091 solver.cpp:273] Solving LeNet
I0428 20:11:33.361027 32091 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:33.362038 32091 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:33.367986 32091 blocking_queue.cpp:49] Waiting for data
I0428 20:11:33.441027 32098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:33.442030 32091 solver.cpp:398]     Test net output #0: accuracy = 0.1011
I0428 20:11:33.442060 32091 solver.cpp:398]     Test net output #1: loss = 2.3068 (* 1 = 2.3068 loss)
I0428 20:11:33.447110 32091 solver.cpp:219] Iteration 0 (-6.53267e-31 iter/s, 0.0860465s/100 iters), loss = 2.30083
I0428 20:11:33.447141 32091 solver.cpp:238]     Train net output #0: loss = 2.30083 (* 1 = 2.30083 loss)
I0428 20:11:33.447158 32091 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:33.575250 32091 solver.cpp:219] Iteration 100 (780.682 iter/s, 0.128093s/100 iters), loss = 0.519426
I0428 20:11:33.575275 32091 solver.cpp:238]     Train net output #0: loss = 0.519426 (* 1 = 0.519426 loss)
I0428 20:11:33.575280 32091 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:33.698751 32091 solver.cpp:219] Iteration 200 (809.949 iter/s, 0.123465s/100 iters), loss = 0.294621
I0428 20:11:33.698773 32091 solver.cpp:238]     Train net output #0: loss = 0.294621 (* 1 = 0.294621 loss)
I0428 20:11:33.698778 32091 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:33.820636 32091 solver.cpp:219] Iteration 300 (820.668 iter/s, 0.121852s/100 iters), loss = 0.19056
I0428 20:11:33.820658 32091 solver.cpp:238]     Train net output #0: loss = 0.19056 (* 1 = 0.19056 loss)
I0428 20:11:33.820680 32091 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:33.943671 32091 solver.cpp:219] Iteration 400 (813.002 iter/s, 0.123001s/100 iters), loss = 0.127616
I0428 20:11:33.943694 32091 solver.cpp:238]     Train net output #0: loss = 0.127616 (* 1 = 0.127616 loss)
I0428 20:11:33.943699 32091 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:34.064779 32091 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:34.122277 32098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:34.122915 32091 solver.cpp:398]     Test net output #0: accuracy = 0.9633
I0428 20:11:34.122932 32091 solver.cpp:398]     Test net output #1: loss = 0.123513 (* 1 = 0.123513 loss)
I0428 20:11:34.124321 32091 solver.cpp:219] Iteration 500 (553.67 iter/s, 0.180613s/100 iters), loss = 0.0765328
I0428 20:11:34.124361 32091 solver.cpp:238]     Train net output #0: loss = 0.0765328 (* 1 = 0.0765328 loss)
I0428 20:11:34.124366 32091 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:34.253254 32091 solver.cpp:219] Iteration 600 (775.899 iter/s, 0.128883s/100 iters), loss = 0.114066
I0428 20:11:34.253281 32091 solver.cpp:238]     Train net output #0: loss = 0.114066 (* 1 = 0.114066 loss)
I0428 20:11:34.253305 32091 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:34.375332 32091 solver.cpp:219] Iteration 700 (819.504 iter/s, 0.122025s/100 iters), loss = 0.136305
I0428 20:11:34.375355 32091 solver.cpp:238]     Train net output #0: loss = 0.136305 (* 1 = 0.136305 loss)
I0428 20:11:34.375377 32091 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:34.502560 32091 solver.cpp:219] Iteration 800 (786.206 iter/s, 0.127193s/100 iters), loss = 0.18671
I0428 20:11:34.502584 32091 solver.cpp:238]     Train net output #0: loss = 0.18671 (* 1 = 0.18671 loss)
I0428 20:11:34.502593 32091 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:34.632235 32091 solver.cpp:219] Iteration 900 (771.383 iter/s, 0.129637s/100 iters), loss = 0.0866106
I0428 20:11:34.632259 32091 solver.cpp:238]     Train net output #0: loss = 0.0866106 (* 1 = 0.0866106 loss)
I0428 20:11:34.632266 32091 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:34.679358 32097 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:34.763612 32091 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:34.765632 32091 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:34.766662 32091 solver.cpp:311] Iteration 1000, loss = 0.0809793
I0428 20:11:34.766676 32091 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:34.822393 32098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:34.823070 32091 solver.cpp:398]     Test net output #0: accuracy = 0.9775
I0428 20:11:34.823086 32091 solver.cpp:398]     Test net output #1: loss = 0.0737861 (* 1 = 0.0737861 loss)
I0428 20:11:34.823091 32091 solver.cpp:316] Optimization Done.
I0428 20:11:34.823093 32091 caffe.cpp:259] Optimization Done.
