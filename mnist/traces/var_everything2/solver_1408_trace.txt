I0428 20:22:38.499078  2034 caffe.cpp:218] Using GPUs 0
I0428 20:22:38.527859  2034 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:38.979471  2034 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1408.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:38.979625  2034 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1408.prototxt
I0428 20:22:38.979931  2034 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:38.979945  2034 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:38.980017  2034 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:38.980078  2034 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:38.980160  2034 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:38.980180  2034 net.cpp:86] Creating Layer mnist
I0428 20:22:38.980188  2034 net.cpp:382] mnist -> data
I0428 20:22:38.980206  2034 net.cpp:382] mnist -> label
I0428 20:22:38.981216  2034 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:38.983394  2034 net.cpp:124] Setting up mnist
I0428 20:22:38.983428  2034 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:38.983433  2034 net.cpp:131] Top shape: 64 (64)
I0428 20:22:38.983436  2034 net.cpp:139] Memory required for data: 200960
I0428 20:22:38.983443  2034 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:38.983458  2034 net.cpp:86] Creating Layer conv0
I0428 20:22:38.983463  2034 net.cpp:408] conv0 <- data
I0428 20:22:38.983486  2034 net.cpp:382] conv0 -> conv0
I0428 20:22:39.298379  2034 net.cpp:124] Setting up conv0
I0428 20:22:39.298413  2034 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:39.298418  2034 net.cpp:139] Memory required for data: 7573760
I0428 20:22:39.298457  2034 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:39.298471  2034 net.cpp:86] Creating Layer pool0
I0428 20:22:39.298476  2034 net.cpp:408] pool0 <- conv0
I0428 20:22:39.298485  2034 net.cpp:382] pool0 -> pool0
I0428 20:22:39.298543  2034 net.cpp:124] Setting up pool0
I0428 20:22:39.298553  2034 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:39.298557  2034 net.cpp:139] Memory required for data: 9416960
I0428 20:22:39.298560  2034 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:39.298579  2034 net.cpp:86] Creating Layer conv1
I0428 20:22:39.298589  2034 net.cpp:408] conv1 <- pool0
I0428 20:22:39.298596  2034 net.cpp:382] conv1 -> conv1
I0428 20:22:39.302620  2034 net.cpp:124] Setting up conv1
I0428 20:22:39.302639  2034 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:22:39.302644  2034 net.cpp:139] Memory required for data: 11055360
I0428 20:22:39.302655  2034 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:39.302664  2034 net.cpp:86] Creating Layer pool1
I0428 20:22:39.302669  2034 net.cpp:408] pool1 <- conv1
I0428 20:22:39.302675  2034 net.cpp:382] pool1 -> pool1
I0428 20:22:39.302722  2034 net.cpp:124] Setting up pool1
I0428 20:22:39.302729  2034 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:22:39.302733  2034 net.cpp:139] Memory required for data: 11464960
I0428 20:22:39.302736  2034 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:39.302745  2034 net.cpp:86] Creating Layer ip1
I0428 20:22:39.302748  2034 net.cpp:408] ip1 <- pool1
I0428 20:22:39.302755  2034 net.cpp:382] ip1 -> ip1
I0428 20:22:39.303933  2034 net.cpp:124] Setting up ip1
I0428 20:22:39.303948  2034 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:39.303951  2034 net.cpp:139] Memory required for data: 11467520
I0428 20:22:39.303961  2034 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:39.303968  2034 net.cpp:86] Creating Layer relu1
I0428 20:22:39.303972  2034 net.cpp:408] relu1 <- ip1
I0428 20:22:39.303980  2034 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:39.304198  2034 net.cpp:124] Setting up relu1
I0428 20:22:39.304209  2034 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:39.304214  2034 net.cpp:139] Memory required for data: 11470080
I0428 20:22:39.304217  2034 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:39.304226  2034 net.cpp:86] Creating Layer ip2
I0428 20:22:39.304230  2034 net.cpp:408] ip2 <- ip1
I0428 20:22:39.304236  2034 net.cpp:382] ip2 -> ip2
I0428 20:22:39.304358  2034 net.cpp:124] Setting up ip2
I0428 20:22:39.304366  2034 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:39.304370  2034 net.cpp:139] Memory required for data: 11472640
I0428 20:22:39.304378  2034 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:39.304386  2034 net.cpp:86] Creating Layer relu2
I0428 20:22:39.304390  2034 net.cpp:408] relu2 <- ip2
I0428 20:22:39.304396  2034 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:39.305266  2034 net.cpp:124] Setting up relu2
I0428 20:22:39.305284  2034 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:39.305287  2034 net.cpp:139] Memory required for data: 11475200
I0428 20:22:39.305291  2034 layer_factory.hpp:77] Creating layer loss
I0428 20:22:39.305299  2034 net.cpp:86] Creating Layer loss
I0428 20:22:39.305304  2034 net.cpp:408] loss <- ip2
I0428 20:22:39.305308  2034 net.cpp:408] loss <- label
I0428 20:22:39.305315  2034 net.cpp:382] loss -> loss
I0428 20:22:39.305335  2034 layer_factory.hpp:77] Creating layer loss
I0428 20:22:39.305629  2034 net.cpp:124] Setting up loss
I0428 20:22:39.305641  2034 net.cpp:131] Top shape: (1)
I0428 20:22:39.305645  2034 net.cpp:134]     with loss weight 1
I0428 20:22:39.305667  2034 net.cpp:139] Memory required for data: 11475204
I0428 20:22:39.305671  2034 net.cpp:200] loss needs backward computation.
I0428 20:22:39.305676  2034 net.cpp:200] relu2 needs backward computation.
I0428 20:22:39.305680  2034 net.cpp:200] ip2 needs backward computation.
I0428 20:22:39.305683  2034 net.cpp:200] relu1 needs backward computation.
I0428 20:22:39.305686  2034 net.cpp:200] ip1 needs backward computation.
I0428 20:22:39.305701  2034 net.cpp:200] pool1 needs backward computation.
I0428 20:22:39.305706  2034 net.cpp:200] conv1 needs backward computation.
I0428 20:22:39.305709  2034 net.cpp:200] pool0 needs backward computation.
I0428 20:22:39.305712  2034 net.cpp:200] conv0 needs backward computation.
I0428 20:22:39.305716  2034 net.cpp:202] mnist does not need backward computation.
I0428 20:22:39.305721  2034 net.cpp:244] This network produces output loss
I0428 20:22:39.305730  2034 net.cpp:257] Network initialization done.
I0428 20:22:39.306087  2034 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1408.prototxt
I0428 20:22:39.306115  2034 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:39.306218  2034 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:39.306298  2034 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:39.306350  2034 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:39.306363  2034 net.cpp:86] Creating Layer mnist
I0428 20:22:39.306373  2034 net.cpp:382] mnist -> data
I0428 20:22:39.306382  2034 net.cpp:382] mnist -> label
I0428 20:22:39.306488  2034 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:39.307732  2034 net.cpp:124] Setting up mnist
I0428 20:22:39.307747  2034 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:39.307755  2034 net.cpp:131] Top shape: 100 (100)
I0428 20:22:39.307760  2034 net.cpp:139] Memory required for data: 314000
I0428 20:22:39.307765  2034 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:39.307773  2034 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:39.307776  2034 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:39.307782  2034 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:39.307790  2034 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:39.307858  2034 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:39.307865  2034 net.cpp:131] Top shape: 100 (100)
I0428 20:22:39.307870  2034 net.cpp:131] Top shape: 100 (100)
I0428 20:22:39.307873  2034 net.cpp:139] Memory required for data: 314800
I0428 20:22:39.307878  2034 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:39.307888  2034 net.cpp:86] Creating Layer conv0
I0428 20:22:39.307893  2034 net.cpp:408] conv0 <- data
I0428 20:22:39.307899  2034 net.cpp:382] conv0 -> conv0
I0428 20:22:39.309865  2034 net.cpp:124] Setting up conv0
I0428 20:22:39.309882  2034 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:39.309886  2034 net.cpp:139] Memory required for data: 11834800
I0428 20:22:39.309897  2034 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:39.309906  2034 net.cpp:86] Creating Layer pool0
I0428 20:22:39.309911  2034 net.cpp:408] pool0 <- conv0
I0428 20:22:39.309916  2034 net.cpp:382] pool0 -> pool0
I0428 20:22:39.309962  2034 net.cpp:124] Setting up pool0
I0428 20:22:39.309968  2034 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:39.309973  2034 net.cpp:139] Memory required for data: 14714800
I0428 20:22:39.309975  2034 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:39.309988  2034 net.cpp:86] Creating Layer conv1
I0428 20:22:39.309991  2034 net.cpp:408] conv1 <- pool0
I0428 20:22:39.310000  2034 net.cpp:382] conv1 -> conv1
I0428 20:22:39.313596  2034 net.cpp:124] Setting up conv1
I0428 20:22:39.313613  2034 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:22:39.313617  2034 net.cpp:139] Memory required for data: 17274800
I0428 20:22:39.313628  2034 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:39.313637  2034 net.cpp:86] Creating Layer pool1
I0428 20:22:39.313640  2034 net.cpp:408] pool1 <- conv1
I0428 20:22:39.313648  2034 net.cpp:382] pool1 -> pool1
I0428 20:22:39.313694  2034 net.cpp:124] Setting up pool1
I0428 20:22:39.313701  2034 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:22:39.313705  2034 net.cpp:139] Memory required for data: 17914800
I0428 20:22:39.313719  2034 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:39.313725  2034 net.cpp:86] Creating Layer ip1
I0428 20:22:39.313729  2034 net.cpp:408] ip1 <- pool1
I0428 20:22:39.313737  2034 net.cpp:382] ip1 -> ip1
I0428 20:22:39.313959  2034 net.cpp:124] Setting up ip1
I0428 20:22:39.313969  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.313973  2034 net.cpp:139] Memory required for data: 17918800
I0428 20:22:39.313983  2034 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:39.313992  2034 net.cpp:86] Creating Layer relu1
I0428 20:22:39.313995  2034 net.cpp:408] relu1 <- ip1
I0428 20:22:39.314002  2034 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:39.314200  2034 net.cpp:124] Setting up relu1
I0428 20:22:39.314210  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.314214  2034 net.cpp:139] Memory required for data: 17922800
I0428 20:22:39.314218  2034 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:39.314227  2034 net.cpp:86] Creating Layer ip2
I0428 20:22:39.314232  2034 net.cpp:408] ip2 <- ip1
I0428 20:22:39.314239  2034 net.cpp:382] ip2 -> ip2
I0428 20:22:39.314365  2034 net.cpp:124] Setting up ip2
I0428 20:22:39.314373  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.314378  2034 net.cpp:139] Memory required for data: 17926800
I0428 20:22:39.314383  2034 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:39.314389  2034 net.cpp:86] Creating Layer relu2
I0428 20:22:39.314393  2034 net.cpp:408] relu2 <- ip2
I0428 20:22:39.314398  2034 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:39.314669  2034 net.cpp:124] Setting up relu2
I0428 20:22:39.314689  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.314693  2034 net.cpp:139] Memory required for data: 17930800
I0428 20:22:39.314698  2034 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:22:39.314703  2034 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:22:39.314718  2034 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:22:39.314723  2034 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:22:39.314743  2034 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:22:39.314792  2034 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:22:39.314800  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.314805  2034 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:39.314808  2034 net.cpp:139] Memory required for data: 17938800
I0428 20:22:39.314811  2034 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:39.314820  2034 net.cpp:86] Creating Layer accuracy
I0428 20:22:39.314823  2034 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:22:39.314827  2034 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:39.314832  2034 net.cpp:382] accuracy -> accuracy
I0428 20:22:39.314841  2034 net.cpp:124] Setting up accuracy
I0428 20:22:39.314846  2034 net.cpp:131] Top shape: (1)
I0428 20:22:39.314855  2034 net.cpp:139] Memory required for data: 17938804
I0428 20:22:39.314859  2034 layer_factory.hpp:77] Creating layer loss
I0428 20:22:39.314867  2034 net.cpp:86] Creating Layer loss
I0428 20:22:39.314870  2034 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:22:39.314874  2034 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:39.314879  2034 net.cpp:382] loss -> loss
I0428 20:22:39.314893  2034 layer_factory.hpp:77] Creating layer loss
I0428 20:22:39.315177  2034 net.cpp:124] Setting up loss
I0428 20:22:39.315188  2034 net.cpp:131] Top shape: (1)
I0428 20:22:39.315192  2034 net.cpp:134]     with loss weight 1
I0428 20:22:39.315199  2034 net.cpp:139] Memory required for data: 17938808
I0428 20:22:39.315203  2034 net.cpp:200] loss needs backward computation.
I0428 20:22:39.315208  2034 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:39.315213  2034 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:22:39.315217  2034 net.cpp:200] relu2 needs backward computation.
I0428 20:22:39.315219  2034 net.cpp:200] ip2 needs backward computation.
I0428 20:22:39.315223  2034 net.cpp:200] relu1 needs backward computation.
I0428 20:22:39.315235  2034 net.cpp:200] ip1 needs backward computation.
I0428 20:22:39.315239  2034 net.cpp:200] pool1 needs backward computation.
I0428 20:22:39.315248  2034 net.cpp:200] conv1 needs backward computation.
I0428 20:22:39.315253  2034 net.cpp:200] pool0 needs backward computation.
I0428 20:22:39.315255  2034 net.cpp:200] conv0 needs backward computation.
I0428 20:22:39.315259  2034 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:39.315270  2034 net.cpp:202] mnist does not need backward computation.
I0428 20:22:39.315275  2034 net.cpp:244] This network produces output accuracy
I0428 20:22:39.315279  2034 net.cpp:244] This network produces output loss
I0428 20:22:39.315291  2034 net.cpp:257] Network initialization done.
I0428 20:22:39.315335  2034 solver.cpp:56] Solver scaffolding done.
I0428 20:22:39.315661  2034 caffe.cpp:248] Starting Optimization
I0428 20:22:39.315668  2034 solver.cpp:273] Solving LeNet
I0428 20:22:39.315672  2034 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:39.315951  2034 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:39.405194  2042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:39.406497  2034 solver.cpp:398]     Test net output #0: accuracy = 0.1131
I0428 20:22:39.406522  2034 solver.cpp:398]     Test net output #1: loss = 2.37877 (* 1 = 2.37877 loss)
I0428 20:22:39.412569  2034 solver.cpp:219] Iteration 0 (-1.75587e-31 iter/s, 0.0968632s/100 iters), loss = 2.39275
I0428 20:22:39.412598  2034 solver.cpp:238]     Train net output #0: loss = 2.39275 (* 1 = 2.39275 loss)
I0428 20:22:39.412611  2034 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:39.639664  2034 solver.cpp:219] Iteration 100 (440.464 iter/s, 0.227033s/100 iters), loss = 0.61701
I0428 20:22:39.639729  2034 solver.cpp:238]     Train net output #0: loss = 0.61701 (* 1 = 0.61701 loss)
I0428 20:22:39.639744  2034 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:39.870712  2034 solver.cpp:219] Iteration 200 (432.956 iter/s, 0.23097s/100 iters), loss = 0.220297
I0428 20:22:39.870787  2034 solver.cpp:238]     Train net output #0: loss = 0.220297 (* 1 = 0.220297 loss)
I0428 20:22:39.870800  2034 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:40.103509  2034 solver.cpp:219] Iteration 300 (429.725 iter/s, 0.232707s/100 iters), loss = 0.100002
I0428 20:22:40.103559  2034 solver.cpp:238]     Train net output #0: loss = 0.100002 (* 1 = 0.100002 loss)
I0428 20:22:40.103571  2034 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:40.335539  2034 solver.cpp:219] Iteration 400 (431.102 iter/s, 0.231964s/100 iters), loss = 0.0654385
I0428 20:22:40.335589  2034 solver.cpp:238]     Train net output #0: loss = 0.0654386 (* 1 = 0.0654386 loss)
I0428 20:22:40.335602  2034 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:40.564054  2034 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:40.576963  2034 blocking_queue.cpp:49] Waiting for data
I0428 20:22:40.664101  2042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:40.665362  2034 solver.cpp:398]     Test net output #0: accuracy = 0.9678
I0428 20:22:40.665397  2034 solver.cpp:398]     Test net output #1: loss = 0.103891 (* 1 = 0.103891 loss)
I0428 20:22:40.667670  2034 solver.cpp:219] Iteration 500 (301.151 iter/s, 0.33206s/100 iters), loss = 0.129379
I0428 20:22:40.667706  2034 solver.cpp:238]     Train net output #0: loss = 0.129379 (* 1 = 0.129379 loss)
I0428 20:22:40.667716  2034 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:40.896327  2034 solver.cpp:219] Iteration 600 (437.434 iter/s, 0.228606s/100 iters), loss = 0.0781529
I0428 20:22:40.896363  2034 solver.cpp:238]     Train net output #0: loss = 0.0781531 (* 1 = 0.0781531 loss)
I0428 20:22:40.896371  2034 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:41.125540  2034 solver.cpp:219] Iteration 700 (436.38 iter/s, 0.229158s/100 iters), loss = 0.0954388
I0428 20:22:41.125591  2034 solver.cpp:238]     Train net output #0: loss = 0.0954389 (* 1 = 0.0954389 loss)
I0428 20:22:41.125603  2034 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:41.356230  2034 solver.cpp:219] Iteration 800 (433.61 iter/s, 0.230622s/100 iters), loss = 0.246317
I0428 20:22:41.356276  2034 solver.cpp:238]     Train net output #0: loss = 0.246317 (* 1 = 0.246317 loss)
I0428 20:22:41.356287  2034 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:41.588368  2034 solver.cpp:219] Iteration 900 (430.895 iter/s, 0.232075s/100 iters), loss = 0.161883
I0428 20:22:41.588415  2034 solver.cpp:238]     Train net output #0: loss = 0.161883 (* 1 = 0.161883 loss)
I0428 20:22:41.588426  2034 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:41.665488  2041 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:41.811477  2034 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:41.816396  2034 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:41.818315  2034 solver.cpp:311] Iteration 1000, loss = 0.13493
I0428 20:22:41.818336  2034 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:41.904299  2042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:41.905792  2034 solver.cpp:398]     Test net output #0: accuracy = 0.9765
I0428 20:22:41.905817  2034 solver.cpp:398]     Test net output #1: loss = 0.071781 (* 1 = 0.071781 loss)
I0428 20:22:41.905823  2034 solver.cpp:316] Optimization Done.
I0428 20:22:41.905827  2034 caffe.cpp:259] Optimization Done.
