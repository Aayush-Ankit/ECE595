I0428 19:42:53.038642 25212 caffe.cpp:218] Using GPUs 0
I0428 19:42:53.079329 25212 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:53.530447 25212 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test406.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:53.530597 25212 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test406.prototxt
I0428 19:42:53.530937 25212 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:53.530952 25212 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:53.531030 25212 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:53.531097 25212 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:53.531177 25212 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:53.531196 25212 net.cpp:86] Creating Layer mnist
I0428 19:42:53.531203 25212 net.cpp:382] mnist -> data
I0428 19:42:53.531221 25212 net.cpp:382] mnist -> label
I0428 19:42:53.532146 25212 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:53.534369 25212 net.cpp:124] Setting up mnist
I0428 19:42:53.534400 25212 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:53.534407 25212 net.cpp:131] Top shape: 64 (64)
I0428 19:42:53.534410 25212 net.cpp:139] Memory required for data: 200960
I0428 19:42:53.534417 25212 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:53.534442 25212 net.cpp:86] Creating Layer conv0
I0428 19:42:53.534473 25212 net.cpp:408] conv0 <- data
I0428 19:42:53.534483 25212 net.cpp:382] conv0 -> conv0
I0428 19:42:53.762104 25212 net.cpp:124] Setting up conv0
I0428 19:42:53.762131 25212 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:53.762135 25212 net.cpp:139] Memory required for data: 495872
I0428 19:42:53.762151 25212 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:53.762178 25212 net.cpp:86] Creating Layer pool0
I0428 19:42:53.762182 25212 net.cpp:408] pool0 <- conv0
I0428 19:42:53.762187 25212 net.cpp:382] pool0 -> pool0
I0428 19:42:53.762233 25212 net.cpp:124] Setting up pool0
I0428 19:42:53.762243 25212 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:53.762246 25212 net.cpp:139] Memory required for data: 569600
I0428 19:42:53.762249 25212 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:53.762259 25212 net.cpp:86] Creating Layer conv1
I0428 19:42:53.762261 25212 net.cpp:408] conv1 <- pool0
I0428 19:42:53.762266 25212 net.cpp:382] conv1 -> conv1
I0428 19:42:53.764905 25212 net.cpp:124] Setting up conv1
I0428 19:42:53.764935 25212 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:53.764938 25212 net.cpp:139] Memory required for data: 979200
I0428 19:42:53.764946 25212 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:53.764953 25212 net.cpp:86] Creating Layer pool1
I0428 19:42:53.764957 25212 net.cpp:408] pool1 <- conv1
I0428 19:42:53.764961 25212 net.cpp:382] pool1 -> pool1
I0428 19:42:53.765012 25212 net.cpp:124] Setting up pool1
I0428 19:42:53.765018 25212 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:53.765020 25212 net.cpp:139] Memory required for data: 1081600
I0428 19:42:53.765023 25212 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:53.765030 25212 net.cpp:86] Creating Layer ip1
I0428 19:42:53.765033 25212 net.cpp:408] ip1 <- pool1
I0428 19:42:53.765053 25212 net.cpp:382] ip1 -> ip1
I0428 19:42:53.765184 25212 net.cpp:124] Setting up ip1
I0428 19:42:53.765192 25212 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:53.765211 25212 net.cpp:139] Memory required for data: 1084160
I0428 19:42:53.765218 25212 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:53.765240 25212 net.cpp:86] Creating Layer relu1
I0428 19:42:53.765244 25212 net.cpp:408] relu1 <- ip1
I0428 19:42:53.765249 25212 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:53.765424 25212 net.cpp:124] Setting up relu1
I0428 19:42:53.765432 25212 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:53.765435 25212 net.cpp:139] Memory required for data: 1086720
I0428 19:42:53.765439 25212 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:53.765445 25212 net.cpp:86] Creating Layer ip2
I0428 19:42:53.765449 25212 net.cpp:408] ip2 <- ip1
I0428 19:42:53.765453 25212 net.cpp:382] ip2 -> ip2
I0428 19:42:53.765575 25212 net.cpp:124] Setting up ip2
I0428 19:42:53.765596 25212 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:53.765599 25212 net.cpp:139] Memory required for data: 1093120
I0428 19:42:53.765604 25212 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:53.765610 25212 net.cpp:86] Creating Layer relu2
I0428 19:42:53.765614 25212 net.cpp:408] relu2 <- ip2
I0428 19:42:53.765617 25212 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:53.766355 25212 net.cpp:124] Setting up relu2
I0428 19:42:53.766367 25212 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:53.766386 25212 net.cpp:139] Memory required for data: 1099520
I0428 19:42:53.766389 25212 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:53.766396 25212 net.cpp:86] Creating Layer ip3
I0428 19:42:53.766399 25212 net.cpp:408] ip3 <- ip2
I0428 19:42:53.766404 25212 net.cpp:382] ip3 -> ip3
I0428 19:42:53.766499 25212 net.cpp:124] Setting up ip3
I0428 19:42:53.766506 25212 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:53.766510 25212 net.cpp:139] Memory required for data: 1102080
I0428 19:42:53.766517 25212 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:53.766522 25212 net.cpp:86] Creating Layer relu3
I0428 19:42:53.766525 25212 net.cpp:408] relu3 <- ip3
I0428 19:42:53.766530 25212 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:53.766698 25212 net.cpp:124] Setting up relu3
I0428 19:42:53.766706 25212 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:53.766710 25212 net.cpp:139] Memory required for data: 1104640
I0428 19:42:53.766712 25212 layer_factory.hpp:77] Creating layer loss
I0428 19:42:53.766718 25212 net.cpp:86] Creating Layer loss
I0428 19:42:53.766721 25212 net.cpp:408] loss <- ip3
I0428 19:42:53.766724 25212 net.cpp:408] loss <- label
I0428 19:42:53.766729 25212 net.cpp:382] loss -> loss
I0428 19:42:53.766742 25212 layer_factory.hpp:77] Creating layer loss
I0428 19:42:53.766969 25212 net.cpp:124] Setting up loss
I0428 19:42:53.766978 25212 net.cpp:131] Top shape: (1)
I0428 19:42:53.766981 25212 net.cpp:134]     with loss weight 1
I0428 19:42:53.766994 25212 net.cpp:139] Memory required for data: 1104644
I0428 19:42:53.766999 25212 net.cpp:200] loss needs backward computation.
I0428 19:42:53.767001 25212 net.cpp:200] relu3 needs backward computation.
I0428 19:42:53.767004 25212 net.cpp:200] ip3 needs backward computation.
I0428 19:42:53.767007 25212 net.cpp:200] relu2 needs backward computation.
I0428 19:42:53.767010 25212 net.cpp:200] ip2 needs backward computation.
I0428 19:42:53.767014 25212 net.cpp:200] relu1 needs backward computation.
I0428 19:42:53.767015 25212 net.cpp:200] ip1 needs backward computation.
I0428 19:42:53.767019 25212 net.cpp:200] pool1 needs backward computation.
I0428 19:42:53.767021 25212 net.cpp:200] conv1 needs backward computation.
I0428 19:42:53.767025 25212 net.cpp:200] pool0 needs backward computation.
I0428 19:42:53.767029 25212 net.cpp:200] conv0 needs backward computation.
I0428 19:42:53.767031 25212 net.cpp:202] mnist does not need backward computation.
I0428 19:42:53.767035 25212 net.cpp:244] This network produces output loss
I0428 19:42:53.767043 25212 net.cpp:257] Network initialization done.
I0428 19:42:53.767391 25212 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test406.prototxt
I0428 19:42:53.767432 25212 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:53.767518 25212 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:53.767592 25212 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:53.767637 25212 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:53.767649 25212 net.cpp:86] Creating Layer mnist
I0428 19:42:53.767654 25212 net.cpp:382] mnist -> data
I0428 19:42:53.767662 25212 net.cpp:382] mnist -> label
I0428 19:42:53.767753 25212 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:53.769845 25212 net.cpp:124] Setting up mnist
I0428 19:42:53.769872 25212 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:53.769877 25212 net.cpp:131] Top shape: 100 (100)
I0428 19:42:53.769881 25212 net.cpp:139] Memory required for data: 314000
I0428 19:42:53.769884 25212 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:53.769891 25212 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:53.769894 25212 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:53.769899 25212 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:53.769906 25212 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:53.769946 25212 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:53.769951 25212 net.cpp:131] Top shape: 100 (100)
I0428 19:42:53.769955 25212 net.cpp:131] Top shape: 100 (100)
I0428 19:42:53.769958 25212 net.cpp:139] Memory required for data: 314800
I0428 19:42:53.769960 25212 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:53.769968 25212 net.cpp:86] Creating Layer conv0
I0428 19:42:53.769971 25212 net.cpp:408] conv0 <- data
I0428 19:42:53.769975 25212 net.cpp:382] conv0 -> conv0
I0428 19:42:53.771543 25212 net.cpp:124] Setting up conv0
I0428 19:42:53.771571 25212 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:53.771575 25212 net.cpp:139] Memory required for data: 775600
I0428 19:42:53.771585 25212 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:53.771591 25212 net.cpp:86] Creating Layer pool0
I0428 19:42:53.771595 25212 net.cpp:408] pool0 <- conv0
I0428 19:42:53.771600 25212 net.cpp:382] pool0 -> pool0
I0428 19:42:53.771656 25212 net.cpp:124] Setting up pool0
I0428 19:42:53.771662 25212 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:53.771666 25212 net.cpp:139] Memory required for data: 890800
I0428 19:42:53.771669 25212 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:53.771677 25212 net.cpp:86] Creating Layer conv1
I0428 19:42:53.771680 25212 net.cpp:408] conv1 <- pool0
I0428 19:42:53.771685 25212 net.cpp:382] conv1 -> conv1
I0428 19:42:53.773293 25212 net.cpp:124] Setting up conv1
I0428 19:42:53.773324 25212 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:53.773327 25212 net.cpp:139] Memory required for data: 1530800
I0428 19:42:53.773342 25212 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:53.773351 25212 net.cpp:86] Creating Layer pool1
I0428 19:42:53.773355 25212 net.cpp:408] pool1 <- conv1
I0428 19:42:53.773360 25212 net.cpp:382] pool1 -> pool1
I0428 19:42:53.773398 25212 net.cpp:124] Setting up pool1
I0428 19:42:53.773404 25212 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:53.773408 25212 net.cpp:139] Memory required for data: 1690800
I0428 19:42:53.773411 25212 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:53.773423 25212 net.cpp:86] Creating Layer ip1
I0428 19:42:53.773427 25212 net.cpp:408] ip1 <- pool1
I0428 19:42:53.773432 25212 net.cpp:382] ip1 -> ip1
I0428 19:42:53.773555 25212 net.cpp:124] Setting up ip1
I0428 19:42:53.773564 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.773579 25212 net.cpp:139] Memory required for data: 1694800
I0428 19:42:53.773587 25212 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:53.773593 25212 net.cpp:86] Creating Layer relu1
I0428 19:42:53.773597 25212 net.cpp:408] relu1 <- ip1
I0428 19:42:53.773602 25212 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:53.773774 25212 net.cpp:124] Setting up relu1
I0428 19:42:53.773797 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.773802 25212 net.cpp:139] Memory required for data: 1698800
I0428 19:42:53.773805 25212 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:53.773813 25212 net.cpp:86] Creating Layer ip2
I0428 19:42:53.773815 25212 net.cpp:408] ip2 <- ip1
I0428 19:42:53.773828 25212 net.cpp:382] ip2 -> ip2
I0428 19:42:53.773929 25212 net.cpp:124] Setting up ip2
I0428 19:42:53.773936 25212 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:53.773941 25212 net.cpp:139] Memory required for data: 1708800
I0428 19:42:53.773946 25212 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:53.773950 25212 net.cpp:86] Creating Layer relu2
I0428 19:42:53.773953 25212 net.cpp:408] relu2 <- ip2
I0428 19:42:53.773957 25212 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:53.774164 25212 net.cpp:124] Setting up relu2
I0428 19:42:53.774173 25212 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:53.774175 25212 net.cpp:139] Memory required for data: 1718800
I0428 19:42:53.774178 25212 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:53.774185 25212 net.cpp:86] Creating Layer ip3
I0428 19:42:53.774188 25212 net.cpp:408] ip3 <- ip2
I0428 19:42:53.774193 25212 net.cpp:382] ip3 -> ip3
I0428 19:42:53.774305 25212 net.cpp:124] Setting up ip3
I0428 19:42:53.774312 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.774315 25212 net.cpp:139] Memory required for data: 1722800
I0428 19:42:53.774323 25212 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:53.774329 25212 net.cpp:86] Creating Layer relu3
I0428 19:42:53.774333 25212 net.cpp:408] relu3 <- ip3
I0428 19:42:53.774336 25212 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:53.775130 25212 net.cpp:124] Setting up relu3
I0428 19:42:53.775142 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.775169 25212 net.cpp:139] Memory required for data: 1726800
I0428 19:42:53.775172 25212 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:53.775178 25212 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:53.775182 25212 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:53.775187 25212 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:53.775192 25212 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:53.775245 25212 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:53.775250 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.775254 25212 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:53.775257 25212 net.cpp:139] Memory required for data: 1734800
I0428 19:42:53.775261 25212 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:53.775267 25212 net.cpp:86] Creating Layer accuracy
I0428 19:42:53.775270 25212 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:53.775274 25212 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:53.775279 25212 net.cpp:382] accuracy -> accuracy
I0428 19:42:53.775285 25212 net.cpp:124] Setting up accuracy
I0428 19:42:53.775290 25212 net.cpp:131] Top shape: (1)
I0428 19:42:53.775292 25212 net.cpp:139] Memory required for data: 1734804
I0428 19:42:53.775301 25212 layer_factory.hpp:77] Creating layer loss
I0428 19:42:53.775306 25212 net.cpp:86] Creating Layer loss
I0428 19:42:53.775310 25212 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:53.775312 25212 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:53.775317 25212 net.cpp:382] loss -> loss
I0428 19:42:53.775323 25212 layer_factory.hpp:77] Creating layer loss
I0428 19:42:53.775555 25212 net.cpp:124] Setting up loss
I0428 19:42:53.775565 25212 net.cpp:131] Top shape: (1)
I0428 19:42:53.775569 25212 net.cpp:134]     with loss weight 1
I0428 19:42:53.775576 25212 net.cpp:139] Memory required for data: 1734808
I0428 19:42:53.775589 25212 net.cpp:200] loss needs backward computation.
I0428 19:42:53.775594 25212 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:53.775599 25212 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:53.775602 25212 net.cpp:200] relu3 needs backward computation.
I0428 19:42:53.775605 25212 net.cpp:200] ip3 needs backward computation.
I0428 19:42:53.775609 25212 net.cpp:200] relu2 needs backward computation.
I0428 19:42:53.775612 25212 net.cpp:200] ip2 needs backward computation.
I0428 19:42:53.775615 25212 net.cpp:200] relu1 needs backward computation.
I0428 19:42:53.775619 25212 net.cpp:200] ip1 needs backward computation.
I0428 19:42:53.775621 25212 net.cpp:200] pool1 needs backward computation.
I0428 19:42:53.775624 25212 net.cpp:200] conv1 needs backward computation.
I0428 19:42:53.775627 25212 net.cpp:200] pool0 needs backward computation.
I0428 19:42:53.775648 25212 net.cpp:200] conv0 needs backward computation.
I0428 19:42:53.775651 25212 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:53.775656 25212 net.cpp:202] mnist does not need backward computation.
I0428 19:42:53.775658 25212 net.cpp:244] This network produces output accuracy
I0428 19:42:53.775662 25212 net.cpp:244] This network produces output loss
I0428 19:42:53.775672 25212 net.cpp:257] Network initialization done.
I0428 19:42:53.775713 25212 solver.cpp:56] Solver scaffolding done.
I0428 19:42:53.776113 25212 caffe.cpp:248] Starting Optimization
I0428 19:42:53.776119 25212 solver.cpp:273] Solving LeNet
I0428 19:42:53.776121 25212 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:53.776407 25212 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:53.780128 25212 blocking_queue.cpp:49] Waiting for data
I0428 19:42:53.852314 25219 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:53.852807 25212 solver.cpp:398]     Test net output #0: accuracy = 0.0879
I0428 19:42:53.852847 25212 solver.cpp:398]     Test net output #1: loss = 2.34038 (* 1 = 2.34038 loss)
I0428 19:42:53.854224 25212 solver.cpp:219] Iteration 0 (0 iter/s, 0.0780636s/100 iters), loss = 2.33366
I0428 19:42:53.854264 25212 solver.cpp:238]     Train net output #0: loss = 2.33366 (* 1 = 2.33366 loss)
I0428 19:42:53.854279 25212 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:53.943563 25212 solver.cpp:219] Iteration 100 (1119.77 iter/s, 0.0893041s/100 iters), loss = 1.11912
I0428 19:42:53.943588 25212 solver.cpp:238]     Train net output #0: loss = 1.11912 (* 1 = 1.11912 loss)
I0428 19:42:53.943593 25212 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:54.026650 25212 solver.cpp:219] Iteration 200 (1204.04 iter/s, 0.0830536s/100 iters), loss = 0.874658
I0428 19:42:54.026674 25212 solver.cpp:238]     Train net output #0: loss = 0.874658 (* 1 = 0.874658 loss)
I0428 19:42:54.026679 25212 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:54.108705 25212 solver.cpp:219] Iteration 300 (1219.18 iter/s, 0.0820224s/100 iters), loss = 0.889494
I0428 19:42:54.108728 25212 solver.cpp:238]     Train net output #0: loss = 0.889494 (* 1 = 0.889494 loss)
I0428 19:42:54.108734 25212 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:54.191362 25212 solver.cpp:219] Iteration 400 (1210.29 iter/s, 0.0826246s/100 iters), loss = 0.800707
I0428 19:42:54.191386 25212 solver.cpp:238]     Train net output #0: loss = 0.800707 (* 1 = 0.800707 loss)
I0428 19:42:54.191407 25212 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:54.274271 25212 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:54.353430 25219 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:54.354058 25212 solver.cpp:398]     Test net output #0: accuracy = 0.7502
I0428 19:42:54.354090 25212 solver.cpp:398]     Test net output #1: loss = 0.823832 (* 1 = 0.823832 loss)
I0428 19:42:54.355283 25212 solver.cpp:219] Iteration 500 (610.203 iter/s, 0.16388s/100 iters), loss = 0.732623
I0428 19:42:54.355319 25212 solver.cpp:238]     Train net output #0: loss = 0.732623 (* 1 = 0.732623 loss)
I0428 19:42:54.355360 25212 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:54.445909 25212 solver.cpp:219] Iteration 600 (1104 iter/s, 0.09058s/100 iters), loss = 0.774684
I0428 19:42:54.445940 25212 solver.cpp:238]     Train net output #0: loss = 0.774684 (* 1 = 0.774684 loss)
I0428 19:42:54.445947 25212 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:54.535991 25212 solver.cpp:219] Iteration 700 (1110.6 iter/s, 0.0900413s/100 iters), loss = 1.24378
I0428 19:42:54.536021 25212 solver.cpp:238]     Train net output #0: loss = 1.24378 (* 1 = 1.24378 loss)
I0428 19:42:54.536029 25212 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:54.626024 25212 solver.cpp:219] Iteration 800 (1111.21 iter/s, 0.0899923s/100 iters), loss = 1.02737
I0428 19:42:54.626055 25212 solver.cpp:238]     Train net output #0: loss = 1.02737 (* 1 = 1.02737 loss)
I0428 19:42:54.626062 25212 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:54.714455 25212 solver.cpp:219] Iteration 900 (1131.33 iter/s, 0.0883917s/100 iters), loss = 0.785979
I0428 19:42:54.714483 25212 solver.cpp:238]     Train net output #0: loss = 0.785979 (* 1 = 0.785979 loss)
I0428 19:42:54.714490 25212 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:54.742243 25218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:54.795780 25212 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:54.796603 25212 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:54.797042 25212 solver.cpp:311] Iteration 1000, loss = 1.02753
I0428 19:42:54.797073 25212 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:54.860553 25219 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:54.861157 25212 solver.cpp:398]     Test net output #0: accuracy = 0.7723
I0428 19:42:54.861196 25212 solver.cpp:398]     Test net output #1: loss = 0.780139 (* 1 = 0.780139 loss)
I0428 19:42:54.861203 25212 solver.cpp:316] Optimization Done.
I0428 19:42:54.861207 25212 caffe.cpp:259] Optimization Done.
