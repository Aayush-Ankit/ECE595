I0428 20:11:12.283885 32024 caffe.cpp:218] Using GPUs 0
I0428 20:11:12.313859 32024 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:12.818163 32024 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1153.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:12.818301 32024 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1153.prototxt
I0428 20:11:12.818701 32024 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:12.818719 32024 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:12.818817 32024 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:12.818892 32024 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:12.818984 32024 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:12.819006 32024 net.cpp:86] Creating Layer mnist
I0428 20:11:12.819015 32024 net.cpp:382] mnist -> data
I0428 20:11:12.819036 32024 net.cpp:382] mnist -> label
I0428 20:11:12.820070 32024 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:12.822448 32024 net.cpp:124] Setting up mnist
I0428 20:11:12.822464 32024 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:12.822470 32024 net.cpp:131] Top shape: 64 (64)
I0428 20:11:12.822474 32024 net.cpp:139] Memory required for data: 200960
I0428 20:11:12.822480 32024 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:12.822507 32024 net.cpp:86] Creating Layer conv0
I0428 20:11:12.822535 32024 net.cpp:408] conv0 <- data
I0428 20:11:12.822549 32024 net.cpp:382] conv0 -> conv0
I0428 20:11:13.060598 32024 net.cpp:124] Setting up conv0
I0428 20:11:13.060624 32024 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:13.060628 32024 net.cpp:139] Memory required for data: 3887360
I0428 20:11:13.060659 32024 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:13.060672 32024 net.cpp:86] Creating Layer pool0
I0428 20:11:13.060675 32024 net.cpp:408] pool0 <- conv0
I0428 20:11:13.060680 32024 net.cpp:382] pool0 -> pool0
I0428 20:11:13.060724 32024 net.cpp:124] Setting up pool0
I0428 20:11:13.060731 32024 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:13.060734 32024 net.cpp:139] Memory required for data: 4808960
I0428 20:11:13.060737 32024 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:13.060748 32024 net.cpp:86] Creating Layer conv1
I0428 20:11:13.060751 32024 net.cpp:408] conv1 <- pool0
I0428 20:11:13.060755 32024 net.cpp:382] conv1 -> conv1
I0428 20:11:13.062968 32024 net.cpp:124] Setting up conv1
I0428 20:11:13.062999 32024 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:13.063004 32024 net.cpp:139] Memory required for data: 5628160
I0428 20:11:13.063012 32024 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:13.063020 32024 net.cpp:86] Creating Layer pool1
I0428 20:11:13.063024 32024 net.cpp:408] pool1 <- conv1
I0428 20:11:13.063029 32024 net.cpp:382] pool1 -> pool1
I0428 20:11:13.063066 32024 net.cpp:124] Setting up pool1
I0428 20:11:13.063073 32024 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:13.063076 32024 net.cpp:139] Memory required for data: 5832960
I0428 20:11:13.063079 32024 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:13.063086 32024 net.cpp:86] Creating Layer ip1
I0428 20:11:13.063089 32024 net.cpp:408] ip1 <- pool1
I0428 20:11:13.063094 32024 net.cpp:382] ip1 -> ip1
I0428 20:11:13.063314 32024 net.cpp:124] Setting up ip1
I0428 20:11:13.063321 32024 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:13.063324 32024 net.cpp:139] Memory required for data: 5839360
I0428 20:11:13.063331 32024 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:13.063336 32024 net.cpp:86] Creating Layer relu1
I0428 20:11:13.063340 32024 net.cpp:408] relu1 <- ip1
I0428 20:11:13.063344 32024 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:13.063521 32024 net.cpp:124] Setting up relu1
I0428 20:11:13.063530 32024 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:13.063534 32024 net.cpp:139] Memory required for data: 5845760
I0428 20:11:13.063537 32024 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:13.063544 32024 net.cpp:86] Creating Layer ip2
I0428 20:11:13.063546 32024 net.cpp:408] ip2 <- ip1
I0428 20:11:13.063551 32024 net.cpp:382] ip2 -> ip2
I0428 20:11:13.063643 32024 net.cpp:124] Setting up ip2
I0428 20:11:13.063650 32024 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:13.063653 32024 net.cpp:139] Memory required for data: 5848320
I0428 20:11:13.063659 32024 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:13.063664 32024 net.cpp:86] Creating Layer relu2
I0428 20:11:13.063668 32024 net.cpp:408] relu2 <- ip2
I0428 20:11:13.063673 32024 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:13.064436 32024 net.cpp:124] Setting up relu2
I0428 20:11:13.064448 32024 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:13.064468 32024 net.cpp:139] Memory required for data: 5850880
I0428 20:11:13.064471 32024 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:13.064478 32024 net.cpp:86] Creating Layer ip3
I0428 20:11:13.064481 32024 net.cpp:408] ip3 <- ip2
I0428 20:11:13.064489 32024 net.cpp:382] ip3 -> ip3
I0428 20:11:13.064602 32024 net.cpp:124] Setting up ip3
I0428 20:11:13.064610 32024 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:13.064613 32024 net.cpp:139] Memory required for data: 5853440
I0428 20:11:13.064620 32024 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:13.064625 32024 net.cpp:86] Creating Layer relu3
I0428 20:11:13.064630 32024 net.cpp:408] relu3 <- ip3
I0428 20:11:13.064633 32024 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:13.064798 32024 net.cpp:124] Setting up relu3
I0428 20:11:13.064806 32024 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:13.064815 32024 net.cpp:139] Memory required for data: 5856000
I0428 20:11:13.064829 32024 layer_factory.hpp:77] Creating layer loss
I0428 20:11:13.064836 32024 net.cpp:86] Creating Layer loss
I0428 20:11:13.064854 32024 net.cpp:408] loss <- ip3
I0428 20:11:13.064858 32024 net.cpp:408] loss <- label
I0428 20:11:13.064878 32024 net.cpp:382] loss -> loss
I0428 20:11:13.064896 32024 layer_factory.hpp:77] Creating layer loss
I0428 20:11:13.065135 32024 net.cpp:124] Setting up loss
I0428 20:11:13.065145 32024 net.cpp:131] Top shape: (1)
I0428 20:11:13.065147 32024 net.cpp:134]     with loss weight 1
I0428 20:11:13.065163 32024 net.cpp:139] Memory required for data: 5856004
I0428 20:11:13.065166 32024 net.cpp:200] loss needs backward computation.
I0428 20:11:13.065171 32024 net.cpp:200] relu3 needs backward computation.
I0428 20:11:13.065173 32024 net.cpp:200] ip3 needs backward computation.
I0428 20:11:13.065176 32024 net.cpp:200] relu2 needs backward computation.
I0428 20:11:13.065179 32024 net.cpp:200] ip2 needs backward computation.
I0428 20:11:13.065182 32024 net.cpp:200] relu1 needs backward computation.
I0428 20:11:13.065186 32024 net.cpp:200] ip1 needs backward computation.
I0428 20:11:13.065188 32024 net.cpp:200] pool1 needs backward computation.
I0428 20:11:13.065192 32024 net.cpp:200] conv1 needs backward computation.
I0428 20:11:13.065196 32024 net.cpp:200] pool0 needs backward computation.
I0428 20:11:13.065199 32024 net.cpp:200] conv0 needs backward computation.
I0428 20:11:13.065202 32024 net.cpp:202] mnist does not need backward computation.
I0428 20:11:13.065206 32024 net.cpp:244] This network produces output loss
I0428 20:11:13.065214 32024 net.cpp:257] Network initialization done.
I0428 20:11:13.065559 32024 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1153.prototxt
I0428 20:11:13.065601 32024 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:13.065706 32024 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:13.065786 32024 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:13.065830 32024 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:13.065842 32024 net.cpp:86] Creating Layer mnist
I0428 20:11:13.065847 32024 net.cpp:382] mnist -> data
I0428 20:11:13.065855 32024 net.cpp:382] mnist -> label
I0428 20:11:13.065938 32024 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:13.068034 32024 net.cpp:124] Setting up mnist
I0428 20:11:13.068048 32024 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:13.068068 32024 net.cpp:131] Top shape: 100 (100)
I0428 20:11:13.068071 32024 net.cpp:139] Memory required for data: 314000
I0428 20:11:13.068075 32024 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:13.068085 32024 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:13.068089 32024 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:13.068094 32024 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:13.068101 32024 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:13.068191 32024 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:13.068197 32024 net.cpp:131] Top shape: 100 (100)
I0428 20:11:13.068202 32024 net.cpp:131] Top shape: 100 (100)
I0428 20:11:13.068204 32024 net.cpp:139] Memory required for data: 314800
I0428 20:11:13.068207 32024 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:13.068215 32024 net.cpp:86] Creating Layer conv0
I0428 20:11:13.068218 32024 net.cpp:408] conv0 <- data
I0428 20:11:13.068223 32024 net.cpp:382] conv0 -> conv0
I0428 20:11:13.069977 32024 net.cpp:124] Setting up conv0
I0428 20:11:13.069998 32024 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:13.070003 32024 net.cpp:139] Memory required for data: 6074800
I0428 20:11:13.070011 32024 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:13.070034 32024 net.cpp:86] Creating Layer pool0
I0428 20:11:13.070039 32024 net.cpp:408] pool0 <- conv0
I0428 20:11:13.070044 32024 net.cpp:382] pool0 -> pool0
I0428 20:11:13.070096 32024 net.cpp:124] Setting up pool0
I0428 20:11:13.070102 32024 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:13.070106 32024 net.cpp:139] Memory required for data: 7514800
I0428 20:11:13.070109 32024 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:13.070117 32024 net.cpp:86] Creating Layer conv1
I0428 20:11:13.070121 32024 net.cpp:408] conv1 <- pool0
I0428 20:11:13.070125 32024 net.cpp:382] conv1 -> conv1
I0428 20:11:13.071897 32024 net.cpp:124] Setting up conv1
I0428 20:11:13.071913 32024 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:13.071918 32024 net.cpp:139] Memory required for data: 8794800
I0428 20:11:13.071928 32024 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:13.071933 32024 net.cpp:86] Creating Layer pool1
I0428 20:11:13.071938 32024 net.cpp:408] pool1 <- conv1
I0428 20:11:13.071949 32024 net.cpp:382] pool1 -> pool1
I0428 20:11:13.071985 32024 net.cpp:124] Setting up pool1
I0428 20:11:13.071990 32024 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:13.071995 32024 net.cpp:139] Memory required for data: 9114800
I0428 20:11:13.071997 32024 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:13.072017 32024 net.cpp:86] Creating Layer ip1
I0428 20:11:13.072021 32024 net.cpp:408] ip1 <- pool1
I0428 20:11:13.072026 32024 net.cpp:382] ip1 -> ip1
I0428 20:11:13.072245 32024 net.cpp:124] Setting up ip1
I0428 20:11:13.072253 32024 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:13.072269 32024 net.cpp:139] Memory required for data: 9124800
I0428 20:11:13.072278 32024 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:13.072283 32024 net.cpp:86] Creating Layer relu1
I0428 20:11:13.072286 32024 net.cpp:408] relu1 <- ip1
I0428 20:11:13.072290 32024 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:13.072445 32024 net.cpp:124] Setting up relu1
I0428 20:11:13.072454 32024 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:13.072458 32024 net.cpp:139] Memory required for data: 9134800
I0428 20:11:13.072461 32024 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:13.072468 32024 net.cpp:86] Creating Layer ip2
I0428 20:11:13.072471 32024 net.cpp:408] ip2 <- ip1
I0428 20:11:13.072476 32024 net.cpp:382] ip2 -> ip2
I0428 20:11:13.072588 32024 net.cpp:124] Setting up ip2
I0428 20:11:13.072595 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.072598 32024 net.cpp:139] Memory required for data: 9138800
I0428 20:11:13.072603 32024 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:13.072608 32024 net.cpp:86] Creating Layer relu2
I0428 20:11:13.072612 32024 net.cpp:408] relu2 <- ip2
I0428 20:11:13.072615 32024 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:13.072859 32024 net.cpp:124] Setting up relu2
I0428 20:11:13.072867 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.072870 32024 net.cpp:139] Memory required for data: 9142800
I0428 20:11:13.072873 32024 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:13.072880 32024 net.cpp:86] Creating Layer ip3
I0428 20:11:13.072882 32024 net.cpp:408] ip3 <- ip2
I0428 20:11:13.072886 32024 net.cpp:382] ip3 -> ip3
I0428 20:11:13.072983 32024 net.cpp:124] Setting up ip3
I0428 20:11:13.072990 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.072993 32024 net.cpp:139] Memory required for data: 9146800
I0428 20:11:13.073001 32024 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:13.073005 32024 net.cpp:86] Creating Layer relu3
I0428 20:11:13.073009 32024 net.cpp:408] relu3 <- ip3
I0428 20:11:13.073014 32024 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:13.073892 32024 net.cpp:124] Setting up relu3
I0428 20:11:13.073904 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.073925 32024 net.cpp:139] Memory required for data: 9150800
I0428 20:11:13.073927 32024 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:13.073933 32024 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:13.073936 32024 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:13.073942 32024 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:13.073949 32024 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:13.074007 32024 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:13.074015 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.074018 32024 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:13.074023 32024 net.cpp:139] Memory required for data: 9158800
I0428 20:11:13.074025 32024 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:13.074031 32024 net.cpp:86] Creating Layer accuracy
I0428 20:11:13.074035 32024 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:13.074039 32024 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:13.074045 32024 net.cpp:382] accuracy -> accuracy
I0428 20:11:13.074053 32024 net.cpp:124] Setting up accuracy
I0428 20:11:13.074056 32024 net.cpp:131] Top shape: (1)
I0428 20:11:13.074060 32024 net.cpp:139] Memory required for data: 9158804
I0428 20:11:13.074064 32024 layer_factory.hpp:77] Creating layer loss
I0428 20:11:13.074067 32024 net.cpp:86] Creating Layer loss
I0428 20:11:13.074077 32024 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:13.074081 32024 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:13.074086 32024 net.cpp:382] loss -> loss
I0428 20:11:13.074092 32024 layer_factory.hpp:77] Creating layer loss
I0428 20:11:13.074348 32024 net.cpp:124] Setting up loss
I0428 20:11:13.074357 32024 net.cpp:131] Top shape: (1)
I0428 20:11:13.074362 32024 net.cpp:134]     with loss weight 1
I0428 20:11:13.074378 32024 net.cpp:139] Memory required for data: 9158808
I0428 20:11:13.074383 32024 net.cpp:200] loss needs backward computation.
I0428 20:11:13.074393 32024 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:13.074407 32024 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:13.074426 32024 net.cpp:200] relu3 needs backward computation.
I0428 20:11:13.074429 32024 net.cpp:200] ip3 needs backward computation.
I0428 20:11:13.074432 32024 net.cpp:200] relu2 needs backward computation.
I0428 20:11:13.074435 32024 net.cpp:200] ip2 needs backward computation.
I0428 20:11:13.074439 32024 net.cpp:200] relu1 needs backward computation.
I0428 20:11:13.074441 32024 net.cpp:200] ip1 needs backward computation.
I0428 20:11:13.074445 32024 net.cpp:200] pool1 needs backward computation.
I0428 20:11:13.074448 32024 net.cpp:200] conv1 needs backward computation.
I0428 20:11:13.074452 32024 net.cpp:200] pool0 needs backward computation.
I0428 20:11:13.074455 32024 net.cpp:200] conv0 needs backward computation.
I0428 20:11:13.074458 32024 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:13.074463 32024 net.cpp:202] mnist does not need backward computation.
I0428 20:11:13.074465 32024 net.cpp:244] This network produces output accuracy
I0428 20:11:13.074470 32024 net.cpp:244] This network produces output loss
I0428 20:11:13.074481 32024 net.cpp:257] Network initialization done.
I0428 20:11:13.074524 32024 solver.cpp:56] Solver scaffolding done.
I0428 20:11:13.074924 32024 caffe.cpp:248] Starting Optimization
I0428 20:11:13.074930 32024 solver.cpp:273] Solving LeNet
I0428 20:11:13.074934 32024 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:13.075846 32024 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:13.082234 32024 blocking_queue.cpp:49] Waiting for data
I0428 20:11:13.151064 32031 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:13.151698 32024 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 20:11:13.151718 32024 solver.cpp:398]     Test net output #1: loss = 2.31165 (* 1 = 2.31165 loss)
I0428 20:11:13.155856 32024 solver.cpp:219] Iteration 0 (-1.02155e-42 iter/s, 0.0808919s/100 iters), loss = 2.32329
I0428 20:11:13.155880 32024 solver.cpp:238]     Train net output #0: loss = 2.32329 (* 1 = 2.32329 loss)
I0428 20:11:13.155891 32024 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:13.277755 32024 solver.cpp:219] Iteration 100 (820.607 iter/s, 0.121861s/100 iters), loss = 0.656653
I0428 20:11:13.277797 32024 solver.cpp:238]     Train net output #0: loss = 0.656653 (* 1 = 0.656653 loss)
I0428 20:11:13.277804 32024 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:13.400336 32024 solver.cpp:219] Iteration 200 (816.142 iter/s, 0.122528s/100 iters), loss = 0.224923
I0428 20:11:13.400377 32024 solver.cpp:238]     Train net output #0: loss = 0.224923 (* 1 = 0.224923 loss)
I0428 20:11:13.400384 32024 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:13.522372 32024 solver.cpp:219] Iteration 300 (819.78 iter/s, 0.121984s/100 iters), loss = 0.372952
I0428 20:11:13.522413 32024 solver.cpp:238]     Train net output #0: loss = 0.372952 (* 1 = 0.372952 loss)
I0428 20:11:13.522418 32024 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:13.644771 32024 solver.cpp:219] Iteration 400 (817.24 iter/s, 0.122363s/100 iters), loss = 0.103279
I0428 20:11:13.644815 32024 solver.cpp:238]     Train net output #0: loss = 0.103279 (* 1 = 0.103279 loss)
I0428 20:11:13.644821 32024 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:13.764545 32024 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:13.819470 32031 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:13.821352 32024 solver.cpp:398]     Test net output #0: accuracy = 0.9505
I0428 20:11:13.821388 32024 solver.cpp:398]     Test net output #1: loss = 0.168726 (* 1 = 0.168726 loss)
I0428 20:11:13.822515 32024 solver.cpp:219] Iteration 500 (562.724 iter/s, 0.177707s/100 iters), loss = 0.132345
I0428 20:11:13.822583 32024 solver.cpp:238]     Train net output #0: loss = 0.132345 (* 1 = 0.132345 loss)
I0428 20:11:13.822589 32024 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:13.940848 32024 solver.cpp:219] Iteration 600 (845.516 iter/s, 0.118271s/100 iters), loss = 0.127881
I0428 20:11:13.940906 32024 solver.cpp:238]     Train net output #0: loss = 0.127881 (* 1 = 0.127881 loss)
I0428 20:11:13.940912 32024 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:14.062117 32024 solver.cpp:219] Iteration 700 (824.967 iter/s, 0.121217s/100 iters), loss = 0.238449
I0428 20:11:14.062144 32024 solver.cpp:238]     Train net output #0: loss = 0.238449 (* 1 = 0.238449 loss)
I0428 20:11:14.062151 32024 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:14.182860 32024 solver.cpp:219] Iteration 800 (828.466 iter/s, 0.120705s/100 iters), loss = 0.16157
I0428 20:11:14.182888 32024 solver.cpp:238]     Train net output #0: loss = 0.16157 (* 1 = 0.16157 loss)
I0428 20:11:14.182893 32024 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:14.305665 32024 solver.cpp:219] Iteration 900 (814.556 iter/s, 0.122766s/100 iters), loss = 0.15594
I0428 20:11:14.305706 32024 solver.cpp:238]     Train net output #0: loss = 0.15594 (* 1 = 0.15594 loss)
I0428 20:11:14.305712 32024 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:14.347154 32030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:14.426053 32024 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:14.427798 32024 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:14.428784 32024 solver.cpp:311] Iteration 1000, loss = 0.119908
I0428 20:11:14.428799 32024 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:14.496747 32031 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:14.497447 32024 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0428 20:11:14.497469 32024 solver.cpp:398]     Test net output #1: loss = 0.0818353 (* 1 = 0.0818353 loss)
I0428 20:11:14.497474 32024 solver.cpp:316] Optimization Done.
I0428 20:11:14.497478 32024 caffe.cpp:259] Optimization Done.
