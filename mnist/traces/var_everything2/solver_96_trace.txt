I0428 19:30:36.616855 22339 caffe.cpp:218] Using GPUs 0
I0428 19:30:36.654137 22339 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:37.160082 22339 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test96.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:37.160231 22339 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test96.prototxt
I0428 19:30:37.160537 22339 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:37.160550 22339 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:37.160640 22339 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:37.160704 22339 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:37.160790 22339 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:37.160833 22339 net.cpp:86] Creating Layer mnist
I0428 19:30:37.160841 22339 net.cpp:382] mnist -> data
I0428 19:30:37.160863 22339 net.cpp:382] mnist -> label
I0428 19:30:37.161903 22339 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:37.164381 22339 net.cpp:124] Setting up mnist
I0428 19:30:37.164420 22339 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:37.164425 22339 net.cpp:131] Top shape: 64 (64)
I0428 19:30:37.164429 22339 net.cpp:139] Memory required for data: 200960
I0428 19:30:37.164435 22339 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:37.164449 22339 net.cpp:86] Creating Layer conv0
I0428 19:30:37.164454 22339 net.cpp:408] conv0 <- data
I0428 19:30:37.164464 22339 net.cpp:382] conv0 -> conv0
I0428 19:30:37.402707 22339 net.cpp:124] Setting up conv0
I0428 19:30:37.402750 22339 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:37.402755 22339 net.cpp:139] Memory required for data: 938240
I0428 19:30:37.402768 22339 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:37.402781 22339 net.cpp:86] Creating Layer pool0
I0428 19:30:37.402802 22339 net.cpp:408] pool0 <- conv0
I0428 19:30:37.402808 22339 net.cpp:382] pool0 -> pool0
I0428 19:30:37.402870 22339 net.cpp:124] Setting up pool0
I0428 19:30:37.402879 22339 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:37.402882 22339 net.cpp:139] Memory required for data: 1122560
I0428 19:30:37.402886 22339 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:37.402894 22339 net.cpp:86] Creating Layer ip1
I0428 19:30:37.402896 22339 net.cpp:408] ip1 <- pool0
I0428 19:30:37.402901 22339 net.cpp:382] ip1 -> ip1
I0428 19:30:37.403872 22339 net.cpp:124] Setting up ip1
I0428 19:30:37.403885 22339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:37.403904 22339 net.cpp:139] Memory required for data: 1125120
I0428 19:30:37.403913 22339 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:37.403919 22339 net.cpp:86] Creating Layer relu1
I0428 19:30:37.403923 22339 net.cpp:408] relu1 <- ip1
I0428 19:30:37.403944 22339 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:37.404142 22339 net.cpp:124] Setting up relu1
I0428 19:30:37.404150 22339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:37.404155 22339 net.cpp:139] Memory required for data: 1127680
I0428 19:30:37.404157 22339 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:37.404163 22339 net.cpp:86] Creating Layer ip2
I0428 19:30:37.404166 22339 net.cpp:408] ip2 <- ip1
I0428 19:30:37.404171 22339 net.cpp:382] ip2 -> ip2
I0428 19:30:37.404276 22339 net.cpp:124] Setting up ip2
I0428 19:30:37.404284 22339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:37.404286 22339 net.cpp:139] Memory required for data: 1140480
I0428 19:30:37.404294 22339 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:37.404297 22339 net.cpp:86] Creating Layer relu2
I0428 19:30:37.404300 22339 net.cpp:408] relu2 <- ip2
I0428 19:30:37.404304 22339 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:37.405149 22339 net.cpp:124] Setting up relu2
I0428 19:30:37.405161 22339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:37.405180 22339 net.cpp:139] Memory required for data: 1153280
I0428 19:30:37.405184 22339 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:37.405190 22339 net.cpp:86] Creating Layer ip3
I0428 19:30:37.405194 22339 net.cpp:408] ip3 <- ip2
I0428 19:30:37.405200 22339 net.cpp:382] ip3 -> ip3
I0428 19:30:37.405297 22339 net.cpp:124] Setting up ip3
I0428 19:30:37.405304 22339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:37.405308 22339 net.cpp:139] Memory required for data: 1155840
I0428 19:30:37.405313 22339 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:37.405319 22339 net.cpp:86] Creating Layer relu3
I0428 19:30:37.405323 22339 net.cpp:408] relu3 <- ip3
I0428 19:30:37.405326 22339 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:37.405480 22339 net.cpp:124] Setting up relu3
I0428 19:30:37.405488 22339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:37.405491 22339 net.cpp:139] Memory required for data: 1158400
I0428 19:30:37.405494 22339 layer_factory.hpp:77] Creating layer loss
I0428 19:30:37.405499 22339 net.cpp:86] Creating Layer loss
I0428 19:30:37.405503 22339 net.cpp:408] loss <- ip3
I0428 19:30:37.405506 22339 net.cpp:408] loss <- label
I0428 19:30:37.405511 22339 net.cpp:382] loss -> loss
I0428 19:30:37.405529 22339 layer_factory.hpp:77] Creating layer loss
I0428 19:30:37.405742 22339 net.cpp:124] Setting up loss
I0428 19:30:37.405751 22339 net.cpp:131] Top shape: (1)
I0428 19:30:37.405755 22339 net.cpp:134]     with loss weight 1
I0428 19:30:37.405768 22339 net.cpp:139] Memory required for data: 1158404
I0428 19:30:37.405771 22339 net.cpp:200] loss needs backward computation.
I0428 19:30:37.405776 22339 net.cpp:200] relu3 needs backward computation.
I0428 19:30:37.405777 22339 net.cpp:200] ip3 needs backward computation.
I0428 19:30:37.405781 22339 net.cpp:200] relu2 needs backward computation.
I0428 19:30:37.405782 22339 net.cpp:200] ip2 needs backward computation.
I0428 19:30:37.405786 22339 net.cpp:200] relu1 needs backward computation.
I0428 19:30:37.405788 22339 net.cpp:200] ip1 needs backward computation.
I0428 19:30:37.405815 22339 net.cpp:200] pool0 needs backward computation.
I0428 19:30:37.405818 22339 net.cpp:200] conv0 needs backward computation.
I0428 19:30:37.405822 22339 net.cpp:202] mnist does not need backward computation.
I0428 19:30:37.405823 22339 net.cpp:244] This network produces output loss
I0428 19:30:37.405831 22339 net.cpp:257] Network initialization done.
I0428 19:30:37.406129 22339 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test96.prototxt
I0428 19:30:37.406172 22339 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:37.406253 22339 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:37.406314 22339 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:37.406373 22339 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:37.406385 22339 net.cpp:86] Creating Layer mnist
I0428 19:30:37.406389 22339 net.cpp:382] mnist -> data
I0428 19:30:37.406397 22339 net.cpp:382] mnist -> label
I0428 19:30:37.406491 22339 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:37.408486 22339 net.cpp:124] Setting up mnist
I0428 19:30:37.408499 22339 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:37.408504 22339 net.cpp:131] Top shape: 100 (100)
I0428 19:30:37.408524 22339 net.cpp:139] Memory required for data: 314000
I0428 19:30:37.408527 22339 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:37.408535 22339 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:37.408538 22339 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:37.408543 22339 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:37.408550 22339 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:37.408645 22339 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:37.408653 22339 net.cpp:131] Top shape: 100 (100)
I0428 19:30:37.408671 22339 net.cpp:131] Top shape: 100 (100)
I0428 19:30:37.408674 22339 net.cpp:139] Memory required for data: 314800
I0428 19:30:37.408687 22339 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:37.408697 22339 net.cpp:86] Creating Layer conv0
I0428 19:30:37.408701 22339 net.cpp:408] conv0 <- data
I0428 19:30:37.408706 22339 net.cpp:382] conv0 -> conv0
I0428 19:30:37.410337 22339 net.cpp:124] Setting up conv0
I0428 19:30:37.410367 22339 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:37.410372 22339 net.cpp:139] Memory required for data: 1466800
I0428 19:30:37.410382 22339 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:37.410389 22339 net.cpp:86] Creating Layer pool0
I0428 19:30:37.410392 22339 net.cpp:408] pool0 <- conv0
I0428 19:30:37.410396 22339 net.cpp:382] pool0 -> pool0
I0428 19:30:37.410437 22339 net.cpp:124] Setting up pool0
I0428 19:30:37.410444 22339 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:37.410446 22339 net.cpp:139] Memory required for data: 1754800
I0428 19:30:37.410449 22339 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:37.410455 22339 net.cpp:86] Creating Layer ip1
I0428 19:30:37.410459 22339 net.cpp:408] ip1 <- pool0
I0428 19:30:37.410466 22339 net.cpp:382] ip1 -> ip1
I0428 19:30:37.410650 22339 net.cpp:124] Setting up ip1
I0428 19:30:37.410660 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.410662 22339 net.cpp:139] Memory required for data: 1758800
I0428 19:30:37.410670 22339 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:37.410676 22339 net.cpp:86] Creating Layer relu1
I0428 19:30:37.410681 22339 net.cpp:408] relu1 <- ip1
I0428 19:30:37.410686 22339 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:37.410866 22339 net.cpp:124] Setting up relu1
I0428 19:30:37.410873 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.410878 22339 net.cpp:139] Memory required for data: 1762800
I0428 19:30:37.410881 22339 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:37.410887 22339 net.cpp:86] Creating Layer ip2
I0428 19:30:37.410890 22339 net.cpp:408] ip2 <- ip1
I0428 19:30:37.410897 22339 net.cpp:382] ip2 -> ip2
I0428 19:30:37.411008 22339 net.cpp:124] Setting up ip2
I0428 19:30:37.411015 22339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:37.411018 22339 net.cpp:139] Memory required for data: 1782800
I0428 19:30:37.411026 22339 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:37.411031 22339 net.cpp:86] Creating Layer relu2
I0428 19:30:37.411034 22339 net.cpp:408] relu2 <- ip2
I0428 19:30:37.411038 22339 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:37.411949 22339 net.cpp:124] Setting up relu2
I0428 19:30:37.411978 22339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:37.411980 22339 net.cpp:139] Memory required for data: 1802800
I0428 19:30:37.411983 22339 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:37.411991 22339 net.cpp:86] Creating Layer ip3
I0428 19:30:37.411999 22339 net.cpp:408] ip3 <- ip2
I0428 19:30:37.412006 22339 net.cpp:382] ip3 -> ip3
I0428 19:30:37.412117 22339 net.cpp:124] Setting up ip3
I0428 19:30:37.412124 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.412127 22339 net.cpp:139] Memory required for data: 1806800
I0428 19:30:37.412133 22339 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:37.412137 22339 net.cpp:86] Creating Layer relu3
I0428 19:30:37.412140 22339 net.cpp:408] relu3 <- ip3
I0428 19:30:37.412147 22339 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:37.412304 22339 net.cpp:124] Setting up relu3
I0428 19:30:37.412313 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.412317 22339 net.cpp:139] Memory required for data: 1810800
I0428 19:30:37.412319 22339 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:37.412324 22339 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:37.412328 22339 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:37.412334 22339 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:37.412339 22339 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:37.412379 22339 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:37.412386 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.412390 22339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:37.412402 22339 net.cpp:139] Memory required for data: 1818800
I0428 19:30:37.412405 22339 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:37.412413 22339 net.cpp:86] Creating Layer accuracy
I0428 19:30:37.412417 22339 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:37.412421 22339 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:37.412431 22339 net.cpp:382] accuracy -> accuracy
I0428 19:30:37.412437 22339 net.cpp:124] Setting up accuracy
I0428 19:30:37.412441 22339 net.cpp:131] Top shape: (1)
I0428 19:30:37.412444 22339 net.cpp:139] Memory required for data: 1818804
I0428 19:30:37.412447 22339 layer_factory.hpp:77] Creating layer loss
I0428 19:30:37.412453 22339 net.cpp:86] Creating Layer loss
I0428 19:30:37.412456 22339 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:37.412461 22339 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:37.412463 22339 net.cpp:382] loss -> loss
I0428 19:30:37.412469 22339 layer_factory.hpp:77] Creating layer loss
I0428 19:30:37.412741 22339 net.cpp:124] Setting up loss
I0428 19:30:37.412751 22339 net.cpp:131] Top shape: (1)
I0428 19:30:37.412755 22339 net.cpp:134]     with loss weight 1
I0428 19:30:37.412761 22339 net.cpp:139] Memory required for data: 1818808
I0428 19:30:37.412765 22339 net.cpp:200] loss needs backward computation.
I0428 19:30:37.412770 22339 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:37.412773 22339 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:37.412776 22339 net.cpp:200] relu3 needs backward computation.
I0428 19:30:37.412780 22339 net.cpp:200] ip3 needs backward computation.
I0428 19:30:37.412782 22339 net.cpp:200] relu2 needs backward computation.
I0428 19:30:37.412786 22339 net.cpp:200] ip2 needs backward computation.
I0428 19:30:37.412788 22339 net.cpp:200] relu1 needs backward computation.
I0428 19:30:37.412791 22339 net.cpp:200] ip1 needs backward computation.
I0428 19:30:37.412793 22339 net.cpp:200] pool0 needs backward computation.
I0428 19:30:37.412796 22339 net.cpp:200] conv0 needs backward computation.
I0428 19:30:37.412801 22339 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:37.412807 22339 net.cpp:202] mnist does not need backward computation.
I0428 19:30:37.412832 22339 net.cpp:244] This network produces output accuracy
I0428 19:30:37.412837 22339 net.cpp:244] This network produces output loss
I0428 19:30:37.412849 22339 net.cpp:257] Network initialization done.
I0428 19:30:37.412889 22339 solver.cpp:56] Solver scaffolding done.
I0428 19:30:37.413265 22339 caffe.cpp:248] Starting Optimization
I0428 19:30:37.413271 22339 solver.cpp:273] Solving LeNet
I0428 19:30:37.413274 22339 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:37.414103 22339 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:37.417260 22339 blocking_queue.cpp:49] Waiting for data
I0428 19:30:37.490090 22346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:37.490535 22339 solver.cpp:398]     Test net output #0: accuracy = 0.0486
I0428 19:30:37.490568 22339 solver.cpp:398]     Test net output #1: loss = 2.32223 (* 1 = 2.32223 loss)
I0428 19:30:37.492843 22339 solver.cpp:219] Iteration 0 (-2.70503e-31 iter/s, 0.079522s/100 iters), loss = 2.30753
I0428 19:30:37.492889 22339 solver.cpp:238]     Train net output #0: loss = 2.30753 (* 1 = 2.30753 loss)
I0428 19:30:37.492902 22339 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:37.556128 22339 solver.cpp:219] Iteration 100 (1581.69 iter/s, 0.0632234s/100 iters), loss = 1.32475
I0428 19:30:37.556170 22339 solver.cpp:238]     Train net output #0: loss = 1.32475 (* 1 = 1.32475 loss)
I0428 19:30:37.556180 22339 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:37.622746 22339 solver.cpp:219] Iteration 200 (1502.1 iter/s, 0.0665733s/100 iters), loss = 1.03372
I0428 19:30:37.622776 22339 solver.cpp:238]     Train net output #0: loss = 1.03372 (* 1 = 1.03372 loss)
I0428 19:30:37.622783 22339 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:37.682178 22339 solver.cpp:219] Iteration 300 (1683.69 iter/s, 0.0593932s/100 iters), loss = 0.853591
I0428 19:30:37.682201 22339 solver.cpp:238]     Train net output #0: loss = 0.853591 (* 1 = 0.853591 loss)
I0428 19:30:37.682206 22339 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:37.738332 22339 solver.cpp:219] Iteration 400 (1781.79 iter/s, 0.0561234s/100 iters), loss = 0.76232
I0428 19:30:37.738371 22339 solver.cpp:238]     Train net output #0: loss = 0.76232 (* 1 = 0.76232 loss)
I0428 19:30:37.738376 22339 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:37.794337 22339 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:37.869001 22346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:37.869504 22339 solver.cpp:398]     Test net output #0: accuracy = 0.6648
I0428 19:30:37.869531 22339 solver.cpp:398]     Test net output #1: loss = 0.873835 (* 1 = 0.873835 loss)
I0428 19:30:37.870276 22339 solver.cpp:219] Iteration 500 (758.201 iter/s, 0.131891s/100 iters), loss = 0.967235
I0428 19:30:37.870308 22339 solver.cpp:238]     Train net output #0: loss = 0.967235 (* 1 = 0.967235 loss)
I0428 19:30:37.870317 22339 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:37.936014 22339 solver.cpp:219] Iteration 600 (1522.12 iter/s, 0.0656979s/100 iters), loss = 0.914671
I0428 19:30:37.936044 22339 solver.cpp:238]     Train net output #0: loss = 0.914671 (* 1 = 0.914671 loss)
I0428 19:30:37.936051 22339 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:37.995256 22339 solver.cpp:219] Iteration 700 (1689.08 iter/s, 0.0592037s/100 iters), loss = 1.16735
I0428 19:30:37.995280 22339 solver.cpp:238]     Train net output #0: loss = 1.16735 (* 1 = 1.16735 loss)
I0428 19:30:37.995286 22339 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:38.050925 22339 solver.cpp:219] Iteration 800 (1797.4 iter/s, 0.055636s/100 iters), loss = 1.03247
I0428 19:30:38.050962 22339 solver.cpp:238]     Train net output #0: loss = 1.03247 (* 1 = 1.03247 loss)
I0428 19:30:38.050967 22339 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:38.105798 22339 solver.cpp:219] Iteration 900 (1823.41 iter/s, 0.0548424s/100 iters), loss = 0.718399
I0428 19:30:38.105835 22339 solver.cpp:238]     Train net output #0: loss = 0.718399 (* 1 = 0.718399 loss)
I0428 19:30:38.105840 22339 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:38.125784 22345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:38.163518 22339 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:38.164229 22339 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:38.164624 22339 solver.cpp:311] Iteration 1000, loss = 0.941958
I0428 19:30:38.164655 22339 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:38.240515 22346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:38.240964 22339 solver.cpp:398]     Test net output #0: accuracy = 0.6781
I0428 19:30:38.240998 22339 solver.cpp:398]     Test net output #1: loss = 0.810241 (* 1 = 0.810241 loss)
I0428 19:30:38.241003 22339 solver.cpp:316] Optimization Done.
I0428 19:30:38.241006 22339 caffe.cpp:259] Optimization Done.
