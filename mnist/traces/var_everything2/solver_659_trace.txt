I0428 19:52:20.411681 27492 caffe.cpp:218] Using GPUs 0
I0428 19:52:20.450309 27492 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:20.964448 27492 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test659.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:20.964610 27492 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test659.prototxt
I0428 19:52:20.965411 27492 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:20.965450 27492 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:20.965628 27492 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:20.965754 27492 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:20.965909 27492 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:20.965946 27492 net.cpp:86] Creating Layer mnist
I0428 19:52:20.965958 27492 net.cpp:382] mnist -> data
I0428 19:52:20.965991 27492 net.cpp:382] mnist -> label
I0428 19:52:20.967638 27492 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:20.971386 27492 net.cpp:124] Setting up mnist
I0428 19:52:20.971415 27492 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:20.971428 27492 net.cpp:131] Top shape: 64 (64)
I0428 19:52:20.971434 27492 net.cpp:139] Memory required for data: 200960
I0428 19:52:20.971446 27492 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:20.971470 27492 net.cpp:86] Creating Layer conv0
I0428 19:52:20.971503 27492 net.cpp:408] conv0 <- data
I0428 19:52:20.971525 27492 net.cpp:382] conv0 -> conv0
I0428 19:52:21.285647 27492 net.cpp:124] Setting up conv0
I0428 19:52:21.285678 27492 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:21.285683 27492 net.cpp:139] Memory required for data: 938240
I0428 19:52:21.285701 27492 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:21.285715 27492 net.cpp:86] Creating Layer pool0
I0428 19:52:21.285720 27492 net.cpp:408] pool0 <- conv0
I0428 19:52:21.285727 27492 net.cpp:382] pool0 -> pool0
I0428 19:52:21.285782 27492 net.cpp:124] Setting up pool0
I0428 19:52:21.285789 27492 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:21.285794 27492 net.cpp:139] Memory required for data: 1122560
I0428 19:52:21.285797 27492 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:21.285810 27492 net.cpp:86] Creating Layer conv1
I0428 19:52:21.285815 27492 net.cpp:408] conv1 <- pool0
I0428 19:52:21.285820 27492 net.cpp:382] conv1 -> conv1
I0428 19:52:21.289042 27492 net.cpp:124] Setting up conv1
I0428 19:52:21.289062 27492 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:21.289067 27492 net.cpp:139] Memory required for data: 1532160
I0428 19:52:21.289077 27492 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:21.289086 27492 net.cpp:86] Creating Layer pool1
I0428 19:52:21.289091 27492 net.cpp:408] pool1 <- conv1
I0428 19:52:21.289098 27492 net.cpp:382] pool1 -> pool1
I0428 19:52:21.289144 27492 net.cpp:124] Setting up pool1
I0428 19:52:21.289149 27492 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:21.289153 27492 net.cpp:139] Memory required for data: 1634560
I0428 19:52:21.289157 27492 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:21.289165 27492 net.cpp:86] Creating Layer ip1
I0428 19:52:21.289168 27492 net.cpp:408] ip1 <- pool1
I0428 19:52:21.289175 27492 net.cpp:382] ip1 -> ip1
I0428 19:52:21.289423 27492 net.cpp:124] Setting up ip1
I0428 19:52:21.289433 27492 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:21.289438 27492 net.cpp:139] Memory required for data: 1647360
I0428 19:52:21.289445 27492 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:21.289453 27492 net.cpp:86] Creating Layer relu1
I0428 19:52:21.289456 27492 net.cpp:408] relu1 <- ip1
I0428 19:52:21.289461 27492 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:21.289666 27492 net.cpp:124] Setting up relu1
I0428 19:52:21.289677 27492 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:21.289681 27492 net.cpp:139] Memory required for data: 1660160
I0428 19:52:21.289685 27492 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:21.289693 27492 net.cpp:86] Creating Layer ip2
I0428 19:52:21.289696 27492 net.cpp:408] ip2 <- ip1
I0428 19:52:21.289703 27492 net.cpp:382] ip2 -> ip2
I0428 19:52:21.289822 27492 net.cpp:124] Setting up ip2
I0428 19:52:21.289831 27492 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:21.289835 27492 net.cpp:139] Memory required for data: 1666560
I0428 19:52:21.289841 27492 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:21.289849 27492 net.cpp:86] Creating Layer relu2
I0428 19:52:21.289852 27492 net.cpp:408] relu2 <- ip2
I0428 19:52:21.289857 27492 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:21.290707 27492 net.cpp:124] Setting up relu2
I0428 19:52:21.290724 27492 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:21.290727 27492 net.cpp:139] Memory required for data: 1672960
I0428 19:52:21.290732 27492 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:21.290740 27492 net.cpp:86] Creating Layer ip3
I0428 19:52:21.290745 27492 net.cpp:408] ip3 <- ip2
I0428 19:52:21.290751 27492 net.cpp:382] ip3 -> ip3
I0428 19:52:21.290879 27492 net.cpp:124] Setting up ip3
I0428 19:52:21.290889 27492 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:21.290892 27492 net.cpp:139] Memory required for data: 1675520
I0428 19:52:21.290902 27492 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:21.290908 27492 net.cpp:86] Creating Layer relu3
I0428 19:52:21.290911 27492 net.cpp:408] relu3 <- ip3
I0428 19:52:21.290916 27492 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:21.291117 27492 net.cpp:124] Setting up relu3
I0428 19:52:21.291128 27492 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:21.291132 27492 net.cpp:139] Memory required for data: 1678080
I0428 19:52:21.291136 27492 layer_factory.hpp:77] Creating layer loss
I0428 19:52:21.291143 27492 net.cpp:86] Creating Layer loss
I0428 19:52:21.291147 27492 net.cpp:408] loss <- ip3
I0428 19:52:21.291152 27492 net.cpp:408] loss <- label
I0428 19:52:21.291158 27492 net.cpp:382] loss -> loss
I0428 19:52:21.291177 27492 layer_factory.hpp:77] Creating layer loss
I0428 19:52:21.291446 27492 net.cpp:124] Setting up loss
I0428 19:52:21.291457 27492 net.cpp:131] Top shape: (1)
I0428 19:52:21.291462 27492 net.cpp:134]     with loss weight 1
I0428 19:52:21.291478 27492 net.cpp:139] Memory required for data: 1678084
I0428 19:52:21.291482 27492 net.cpp:200] loss needs backward computation.
I0428 19:52:21.291487 27492 net.cpp:200] relu3 needs backward computation.
I0428 19:52:21.291491 27492 net.cpp:200] ip3 needs backward computation.
I0428 19:52:21.291494 27492 net.cpp:200] relu2 needs backward computation.
I0428 19:52:21.291497 27492 net.cpp:200] ip2 needs backward computation.
I0428 19:52:21.291501 27492 net.cpp:200] relu1 needs backward computation.
I0428 19:52:21.291504 27492 net.cpp:200] ip1 needs backward computation.
I0428 19:52:21.291508 27492 net.cpp:200] pool1 needs backward computation.
I0428 19:52:21.291512 27492 net.cpp:200] conv1 needs backward computation.
I0428 19:52:21.291515 27492 net.cpp:200] pool0 needs backward computation.
I0428 19:52:21.291519 27492 net.cpp:200] conv0 needs backward computation.
I0428 19:52:21.291523 27492 net.cpp:202] mnist does not need backward computation.
I0428 19:52:21.291527 27492 net.cpp:244] This network produces output loss
I0428 19:52:21.291538 27492 net.cpp:257] Network initialization done.
I0428 19:52:21.291921 27492 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test659.prototxt
I0428 19:52:21.291954 27492 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:21.292064 27492 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:21.292160 27492 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:21.292210 27492 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:21.292224 27492 net.cpp:86] Creating Layer mnist
I0428 19:52:21.292230 27492 net.cpp:382] mnist -> data
I0428 19:52:21.292239 27492 net.cpp:382] mnist -> label
I0428 19:52:21.292347 27492 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:21.295011 27492 net.cpp:124] Setting up mnist
I0428 19:52:21.295028 27492 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:21.295037 27492 net.cpp:131] Top shape: 100 (100)
I0428 19:52:21.295040 27492 net.cpp:139] Memory required for data: 314000
I0428 19:52:21.295044 27492 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:21.295053 27492 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:21.295056 27492 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:21.295063 27492 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:21.295069 27492 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:21.295130 27492 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:21.295146 27492 net.cpp:131] Top shape: 100 (100)
I0428 19:52:21.295150 27492 net.cpp:131] Top shape: 100 (100)
I0428 19:52:21.295155 27492 net.cpp:139] Memory required for data: 314800
I0428 19:52:21.295158 27492 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:21.295168 27492 net.cpp:86] Creating Layer conv0
I0428 19:52:21.295173 27492 net.cpp:408] conv0 <- data
I0428 19:52:21.295181 27492 net.cpp:382] conv0 -> conv0
I0428 19:52:21.297170 27492 net.cpp:124] Setting up conv0
I0428 19:52:21.297188 27492 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:21.297194 27492 net.cpp:139] Memory required for data: 1466800
I0428 19:52:21.297204 27492 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:21.297214 27492 net.cpp:86] Creating Layer pool0
I0428 19:52:21.297219 27492 net.cpp:408] pool0 <- conv0
I0428 19:52:21.297224 27492 net.cpp:382] pool0 -> pool0
I0428 19:52:21.297269 27492 net.cpp:124] Setting up pool0
I0428 19:52:21.297276 27492 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:21.297279 27492 net.cpp:139] Memory required for data: 1754800
I0428 19:52:21.297283 27492 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:21.297294 27492 net.cpp:86] Creating Layer conv1
I0428 19:52:21.297298 27492 net.cpp:408] conv1 <- pool0
I0428 19:52:21.297305 27492 net.cpp:382] conv1 -> conv1
I0428 19:52:21.299695 27492 net.cpp:124] Setting up conv1
I0428 19:52:21.299710 27492 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:21.299715 27492 net.cpp:139] Memory required for data: 2394800
I0428 19:52:21.299726 27492 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:21.299734 27492 net.cpp:86] Creating Layer pool1
I0428 19:52:21.299738 27492 net.cpp:408] pool1 <- conv1
I0428 19:52:21.299746 27492 net.cpp:382] pool1 -> pool1
I0428 19:52:21.299798 27492 net.cpp:124] Setting up pool1
I0428 19:52:21.299808 27492 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:21.299810 27492 net.cpp:139] Memory required for data: 2554800
I0428 19:52:21.299814 27492 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:21.299823 27492 net.cpp:86] Creating Layer ip1
I0428 19:52:21.299826 27492 net.cpp:408] ip1 <- pool1
I0428 19:52:21.299831 27492 net.cpp:382] ip1 -> ip1
I0428 19:52:21.300132 27492 net.cpp:124] Setting up ip1
I0428 19:52:21.300143 27492 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:21.300159 27492 net.cpp:139] Memory required for data: 2574800
I0428 19:52:21.300168 27492 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:21.300176 27492 net.cpp:86] Creating Layer relu1
I0428 19:52:21.300181 27492 net.cpp:408] relu1 <- ip1
I0428 19:52:21.300187 27492 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:21.300400 27492 net.cpp:124] Setting up relu1
I0428 19:52:21.300411 27492 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:21.300415 27492 net.cpp:139] Memory required for data: 2594800
I0428 19:52:21.300420 27492 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:21.300429 27492 net.cpp:86] Creating Layer ip2
I0428 19:52:21.300433 27492 net.cpp:408] ip2 <- ip1
I0428 19:52:21.300441 27492 net.cpp:382] ip2 -> ip2
I0428 19:52:21.300575 27492 net.cpp:124] Setting up ip2
I0428 19:52:21.300585 27492 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:21.300588 27492 net.cpp:139] Memory required for data: 2604800
I0428 19:52:21.300595 27492 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:21.300601 27492 net.cpp:86] Creating Layer relu2
I0428 19:52:21.300604 27492 net.cpp:408] relu2 <- ip2
I0428 19:52:21.300609 27492 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:21.300861 27492 net.cpp:124] Setting up relu2
I0428 19:52:21.300873 27492 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:21.300878 27492 net.cpp:139] Memory required for data: 2614800
I0428 19:52:21.300880 27492 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:21.300887 27492 net.cpp:86] Creating Layer ip3
I0428 19:52:21.300891 27492 net.cpp:408] ip3 <- ip2
I0428 19:52:21.300899 27492 net.cpp:382] ip3 -> ip3
I0428 19:52:21.301043 27492 net.cpp:124] Setting up ip3
I0428 19:52:21.301053 27492 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:21.301056 27492 net.cpp:139] Memory required for data: 2618800
I0428 19:52:21.301066 27492 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:21.301072 27492 net.cpp:86] Creating Layer relu3
I0428 19:52:21.301076 27492 net.cpp:408] relu3 <- ip3
I0428 19:52:21.301082 27492 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:21.302017 27492 net.cpp:124] Setting up relu3
I0428 19:52:21.302032 27492 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:21.302037 27492 net.cpp:139] Memory required for data: 2622800
I0428 19:52:21.302040 27492 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:21.302047 27492 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:21.302050 27492 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:21.302058 27492 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:21.302065 27492 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:21.302124 27492 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:21.302134 27492 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:21.302139 27492 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:21.302142 27492 net.cpp:139] Memory required for data: 2630800
I0428 19:52:21.302152 27492 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:21.302160 27492 net.cpp:86] Creating Layer accuracy
I0428 19:52:21.302165 27492 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:21.302170 27492 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:21.302176 27492 net.cpp:382] accuracy -> accuracy
I0428 19:52:21.302186 27492 net.cpp:124] Setting up accuracy
I0428 19:52:21.302191 27492 net.cpp:131] Top shape: (1)
I0428 19:52:21.302196 27492 net.cpp:139] Memory required for data: 2630804
I0428 19:52:21.302199 27492 layer_factory.hpp:77] Creating layer loss
I0428 19:52:21.302204 27492 net.cpp:86] Creating Layer loss
I0428 19:52:21.302208 27492 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:21.302212 27492 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:21.302217 27492 net.cpp:382] loss -> loss
I0428 19:52:21.302225 27492 layer_factory.hpp:77] Creating layer loss
I0428 19:52:21.302525 27492 net.cpp:124] Setting up loss
I0428 19:52:21.302536 27492 net.cpp:131] Top shape: (1)
I0428 19:52:21.302541 27492 net.cpp:134]     with loss weight 1
I0428 19:52:21.302548 27492 net.cpp:139] Memory required for data: 2630808
I0428 19:52:21.302563 27492 net.cpp:200] loss needs backward computation.
I0428 19:52:21.302568 27492 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:21.302573 27492 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:21.302577 27492 net.cpp:200] relu3 needs backward computation.
I0428 19:52:21.302580 27492 net.cpp:200] ip3 needs backward computation.
I0428 19:52:21.302583 27492 net.cpp:200] relu2 needs backward computation.
I0428 19:52:21.302587 27492 net.cpp:200] ip2 needs backward computation.
I0428 19:52:21.302592 27492 net.cpp:200] relu1 needs backward computation.
I0428 19:52:21.302594 27492 net.cpp:200] ip1 needs backward computation.
I0428 19:52:21.302597 27492 net.cpp:200] pool1 needs backward computation.
I0428 19:52:21.302603 27492 net.cpp:200] conv1 needs backward computation.
I0428 19:52:21.302605 27492 net.cpp:200] pool0 needs backward computation.
I0428 19:52:21.302609 27492 net.cpp:200] conv0 needs backward computation.
I0428 19:52:21.302613 27492 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:21.302618 27492 net.cpp:202] mnist does not need backward computation.
I0428 19:52:21.302621 27492 net.cpp:244] This network produces output accuracy
I0428 19:52:21.302625 27492 net.cpp:244] This network produces output loss
I0428 19:52:21.302639 27492 net.cpp:257] Network initialization done.
I0428 19:52:21.302690 27492 solver.cpp:56] Solver scaffolding done.
I0428 19:52:21.303129 27492 caffe.cpp:248] Starting Optimization
I0428 19:52:21.303136 27492 solver.cpp:273] Solving LeNet
I0428 19:52:21.303140 27492 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:21.303356 27492 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:21.308642 27492 blocking_queue.cpp:49] Waiting for data
I0428 19:52:21.379541 27499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:21.380275 27492 solver.cpp:398]     Test net output #0: accuracy = 0.0945
I0428 19:52:21.380311 27492 solver.cpp:398]     Test net output #1: loss = 2.30397 (* 1 = 2.30397 loss)
I0428 19:52:21.384130 27492 solver.cpp:219] Iteration 0 (-5.07186e-31 iter/s, 0.0809513s/100 iters), loss = 2.30547
I0428 19:52:21.384176 27492 solver.cpp:238]     Train net output #0: loss = 2.30547 (* 1 = 2.30547 loss)
I0428 19:52:21.384196 27492 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:21.484235 27492 solver.cpp:219] Iteration 100 (999.53 iter/s, 0.100047s/100 iters), loss = 0.815569
I0428 19:52:21.484267 27492 solver.cpp:238]     Train net output #0: loss = 0.815569 (* 1 = 0.815569 loss)
I0428 19:52:21.484277 27492 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:21.575713 27492 solver.cpp:219] Iteration 200 (1093.67 iter/s, 0.091435s/100 iters), loss = 0.295108
I0428 19:52:21.575744 27492 solver.cpp:238]     Train net output #0: loss = 0.295108 (* 1 = 0.295108 loss)
I0428 19:52:21.575752 27492 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:21.667068 27492 solver.cpp:219] Iteration 300 (1095.14 iter/s, 0.0913121s/100 iters), loss = 0.556965
I0428 19:52:21.667099 27492 solver.cpp:238]     Train net output #0: loss = 0.556965 (* 1 = 0.556965 loss)
I0428 19:52:21.667107 27492 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:21.757594 27492 solver.cpp:219] Iteration 400 (1105.15 iter/s, 0.0904856s/100 iters), loss = 0.262729
I0428 19:52:21.757627 27492 solver.cpp:238]     Train net output #0: loss = 0.262729 (* 1 = 0.262729 loss)
I0428 19:52:21.757634 27492 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:21.847671 27492 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:21.900998 27499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:21.901540 27492 solver.cpp:398]     Test net output #0: accuracy = 0.866
I0428 19:52:21.901562 27492 solver.cpp:398]     Test net output #1: loss = 0.34428 (* 1 = 0.34428 loss)
I0428 19:52:21.902456 27492 solver.cpp:219] Iteration 500 (690.526 iter/s, 0.144817s/100 iters), loss = 0.258871
I0428 19:52:21.902519 27492 solver.cpp:238]     Train net output #0: loss = 0.258871 (* 1 = 0.258871 loss)
I0428 19:52:21.902530 27492 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:21.997272 27492 solver.cpp:219] Iteration 600 (1055.45 iter/s, 0.0947464s/100 iters), loss = 0.35351
I0428 19:52:21.997304 27492 solver.cpp:238]     Train net output #0: loss = 0.35351 (* 1 = 0.35351 loss)
I0428 19:52:21.997313 27492 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:22.088670 27492 solver.cpp:219] Iteration 700 (1094.62 iter/s, 0.0913562s/100 iters), loss = 0.506139
I0428 19:52:22.088701 27492 solver.cpp:238]     Train net output #0: loss = 0.506139 (* 1 = 0.506139 loss)
I0428 19:52:22.088711 27492 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:22.180084 27492 solver.cpp:219] Iteration 800 (1094.42 iter/s, 0.0913725s/100 iters), loss = 0.474158
I0428 19:52:22.180117 27492 solver.cpp:238]     Train net output #0: loss = 0.474158 (* 1 = 0.474158 loss)
I0428 19:52:22.180126 27492 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:22.274744 27492 solver.cpp:219] Iteration 900 (1056.87 iter/s, 0.0946186s/100 iters), loss = 0.450902
I0428 19:52:22.274770 27492 solver.cpp:238]     Train net output #0: loss = 0.450902 (* 1 = 0.450902 loss)
I0428 19:52:22.274777 27492 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:22.309517 27498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:22.369874 27492 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:22.370975 27492 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:22.371528 27492 solver.cpp:311] Iteration 1000, loss = 0.431741
I0428 19:52:22.371542 27492 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:22.445469 27499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:22.446040 27492 solver.cpp:398]     Test net output #0: accuracy = 0.8775
I0428 19:52:22.446074 27492 solver.cpp:398]     Test net output #1: loss = 0.308812 (* 1 = 0.308812 loss)
I0428 19:52:22.446094 27492 solver.cpp:316] Optimization Done.
I0428 19:52:22.446097 27492 caffe.cpp:259] Optimization Done.
