I0428 20:20:20.940521  1535 caffe.cpp:218] Using GPUs 0
I0428 20:20:20.973290  1535 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:21.494813  1535 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1361.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:21.494953  1535 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1361.prototxt
I0428 20:20:21.495374  1535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:21.495393  1535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:21.495496  1535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:21.495576  1535 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:21.495682  1535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:21.495705  1535 net.cpp:86] Creating Layer mnist
I0428 20:20:21.495713  1535 net.cpp:382] mnist -> data
I0428 20:20:21.495736  1535 net.cpp:382] mnist -> label
I0428 20:20:21.496860  1535 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:21.499323  1535 net.cpp:124] Setting up mnist
I0428 20:20:21.499342  1535 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:21.499348  1535 net.cpp:131] Top shape: 64 (64)
I0428 20:20:21.499354  1535 net.cpp:139] Memory required for data: 200960
I0428 20:20:21.499362  1535 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:21.499399  1535 net.cpp:86] Creating Layer conv0
I0428 20:20:21.499423  1535 net.cpp:408] conv0 <- data
I0428 20:20:21.499435  1535 net.cpp:382] conv0 -> conv0
I0428 20:20:21.789500  1535 net.cpp:124] Setting up conv0
I0428 20:20:21.789530  1535 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:21.789535  1535 net.cpp:139] Memory required for data: 7573760
I0428 20:20:21.789552  1535 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:21.789566  1535 net.cpp:86] Creating Layer pool0
I0428 20:20:21.789572  1535 net.cpp:408] pool0 <- conv0
I0428 20:20:21.789577  1535 net.cpp:382] pool0 -> pool0
I0428 20:20:21.789629  1535 net.cpp:124] Setting up pool0
I0428 20:20:21.789638  1535 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:21.789641  1535 net.cpp:139] Memory required for data: 9416960
I0428 20:20:21.789645  1535 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:21.789657  1535 net.cpp:86] Creating Layer conv1
I0428 20:20:21.789664  1535 net.cpp:408] conv1 <- pool0
I0428 20:20:21.789670  1535 net.cpp:382] conv1 -> conv1
I0428 20:20:21.791955  1535 net.cpp:124] Setting up conv1
I0428 20:20:21.791971  1535 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:21.791976  1535 net.cpp:139] Memory required for data: 9826560
I0428 20:20:21.791986  1535 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:21.791995  1535 net.cpp:86] Creating Layer pool1
I0428 20:20:21.791998  1535 net.cpp:408] pool1 <- conv1
I0428 20:20:21.792004  1535 net.cpp:382] pool1 -> pool1
I0428 20:20:21.792047  1535 net.cpp:124] Setting up pool1
I0428 20:20:21.792052  1535 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:21.792055  1535 net.cpp:139] Memory required for data: 9928960
I0428 20:20:21.792059  1535 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:21.792067  1535 net.cpp:86] Creating Layer ip1
I0428 20:20:21.792070  1535 net.cpp:408] ip1 <- pool1
I0428 20:20:21.792075  1535 net.cpp:382] ip1 -> ip1
I0428 20:20:21.792320  1535 net.cpp:124] Setting up ip1
I0428 20:20:21.792330  1535 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:21.792333  1535 net.cpp:139] Memory required for data: 9941760
I0428 20:20:21.792342  1535 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:21.792348  1535 net.cpp:86] Creating Layer relu1
I0428 20:20:21.792352  1535 net.cpp:408] relu1 <- ip1
I0428 20:20:21.792357  1535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:21.792541  1535 net.cpp:124] Setting up relu1
I0428 20:20:21.792551  1535 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:21.792556  1535 net.cpp:139] Memory required for data: 9954560
I0428 20:20:21.792558  1535 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:21.792565  1535 net.cpp:86] Creating Layer ip2
I0428 20:20:21.792569  1535 net.cpp:408] ip2 <- ip1
I0428 20:20:21.792575  1535 net.cpp:382] ip2 -> ip2
I0428 20:20:21.792691  1535 net.cpp:124] Setting up ip2
I0428 20:20:21.792699  1535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:21.792703  1535 net.cpp:139] Memory required for data: 9960960
I0428 20:20:21.792709  1535 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:21.792716  1535 net.cpp:86] Creating Layer relu2
I0428 20:20:21.792721  1535 net.cpp:408] relu2 <- ip2
I0428 20:20:21.792724  1535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:21.793551  1535 net.cpp:124] Setting up relu2
I0428 20:20:21.793566  1535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:21.793570  1535 net.cpp:139] Memory required for data: 9967360
I0428 20:20:21.793573  1535 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:21.793581  1535 net.cpp:86] Creating Layer ip3
I0428 20:20:21.793586  1535 net.cpp:408] ip3 <- ip2
I0428 20:20:21.793591  1535 net.cpp:382] ip3 -> ip3
I0428 20:20:21.793697  1535 net.cpp:124] Setting up ip3
I0428 20:20:21.793706  1535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:21.793710  1535 net.cpp:139] Memory required for data: 9969920
I0428 20:20:21.793720  1535 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:21.793725  1535 net.cpp:86] Creating Layer relu3
I0428 20:20:21.793728  1535 net.cpp:408] relu3 <- ip3
I0428 20:20:21.793733  1535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:21.793913  1535 net.cpp:124] Setting up relu3
I0428 20:20:21.793923  1535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:21.793926  1535 net.cpp:139] Memory required for data: 9972480
I0428 20:20:21.793931  1535 layer_factory.hpp:77] Creating layer loss
I0428 20:20:21.793936  1535 net.cpp:86] Creating Layer loss
I0428 20:20:21.793941  1535 net.cpp:408] loss <- ip3
I0428 20:20:21.793944  1535 net.cpp:408] loss <- label
I0428 20:20:21.793951  1535 net.cpp:382] loss -> loss
I0428 20:20:21.793965  1535 layer_factory.hpp:77] Creating layer loss
I0428 20:20:21.794206  1535 net.cpp:124] Setting up loss
I0428 20:20:21.794216  1535 net.cpp:131] Top shape: (1)
I0428 20:20:21.794220  1535 net.cpp:134]     with loss weight 1
I0428 20:20:21.794239  1535 net.cpp:139] Memory required for data: 9972484
I0428 20:20:21.794242  1535 net.cpp:200] loss needs backward computation.
I0428 20:20:21.794246  1535 net.cpp:200] relu3 needs backward computation.
I0428 20:20:21.794250  1535 net.cpp:200] ip3 needs backward computation.
I0428 20:20:21.794255  1535 net.cpp:200] relu2 needs backward computation.
I0428 20:20:21.794257  1535 net.cpp:200] ip2 needs backward computation.
I0428 20:20:21.794260  1535 net.cpp:200] relu1 needs backward computation.
I0428 20:20:21.794263  1535 net.cpp:200] ip1 needs backward computation.
I0428 20:20:21.794267  1535 net.cpp:200] pool1 needs backward computation.
I0428 20:20:21.794270  1535 net.cpp:200] conv1 needs backward computation.
I0428 20:20:21.794275  1535 net.cpp:200] pool0 needs backward computation.
I0428 20:20:21.794277  1535 net.cpp:200] conv0 needs backward computation.
I0428 20:20:21.794281  1535 net.cpp:202] mnist does not need backward computation.
I0428 20:20:21.794284  1535 net.cpp:244] This network produces output loss
I0428 20:20:21.794296  1535 net.cpp:257] Network initialization done.
I0428 20:20:21.794648  1535 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1361.prototxt
I0428 20:20:21.794677  1535 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:21.794776  1535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:21.794860  1535 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:21.794908  1535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:21.794921  1535 net.cpp:86] Creating Layer mnist
I0428 20:20:21.794927  1535 net.cpp:382] mnist -> data
I0428 20:20:21.794935  1535 net.cpp:382] mnist -> label
I0428 20:20:21.795027  1535 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:21.797055  1535 net.cpp:124] Setting up mnist
I0428 20:20:21.797070  1535 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:21.797076  1535 net.cpp:131] Top shape: 100 (100)
I0428 20:20:21.797080  1535 net.cpp:139] Memory required for data: 314000
I0428 20:20:21.797085  1535 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:21.797091  1535 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:21.797096  1535 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:21.797101  1535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:21.797108  1535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:21.797200  1535 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:21.797209  1535 net.cpp:131] Top shape: 100 (100)
I0428 20:20:21.797214  1535 net.cpp:131] Top shape: 100 (100)
I0428 20:20:21.797216  1535 net.cpp:139] Memory required for data: 314800
I0428 20:20:21.797219  1535 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:21.797230  1535 net.cpp:86] Creating Layer conv0
I0428 20:20:21.797232  1535 net.cpp:408] conv0 <- data
I0428 20:20:21.797238  1535 net.cpp:382] conv0 -> conv0
I0428 20:20:21.799031  1535 net.cpp:124] Setting up conv0
I0428 20:20:21.799046  1535 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:21.799051  1535 net.cpp:139] Memory required for data: 11834800
I0428 20:20:21.799062  1535 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:21.799069  1535 net.cpp:86] Creating Layer pool0
I0428 20:20:21.799072  1535 net.cpp:408] pool0 <- conv0
I0428 20:20:21.799080  1535 net.cpp:382] pool0 -> pool0
I0428 20:20:21.799118  1535 net.cpp:124] Setting up pool0
I0428 20:20:21.799125  1535 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:21.799129  1535 net.cpp:139] Memory required for data: 14714800
I0428 20:20:21.799131  1535 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:21.799141  1535 net.cpp:86] Creating Layer conv1
I0428 20:20:21.799145  1535 net.cpp:408] conv1 <- pool0
I0428 20:20:21.799150  1535 net.cpp:382] conv1 -> conv1
I0428 20:20:21.800974  1535 net.cpp:124] Setting up conv1
I0428 20:20:21.800990  1535 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:21.800993  1535 net.cpp:139] Memory required for data: 15354800
I0428 20:20:21.801004  1535 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:21.801012  1535 net.cpp:86] Creating Layer pool1
I0428 20:20:21.801014  1535 net.cpp:408] pool1 <- conv1
I0428 20:20:21.801021  1535 net.cpp:382] pool1 -> pool1
I0428 20:20:21.801062  1535 net.cpp:124] Setting up pool1
I0428 20:20:21.801069  1535 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:21.801072  1535 net.cpp:139] Memory required for data: 15514800
I0428 20:20:21.801075  1535 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:21.801082  1535 net.cpp:86] Creating Layer ip1
I0428 20:20:21.801086  1535 net.cpp:408] ip1 <- pool1
I0428 20:20:21.801092  1535 net.cpp:382] ip1 -> ip1
I0428 20:20:21.801331  1535 net.cpp:124] Setting up ip1
I0428 20:20:21.801340  1535 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:21.801354  1535 net.cpp:139] Memory required for data: 15534800
I0428 20:20:21.801362  1535 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:21.801368  1535 net.cpp:86] Creating Layer relu1
I0428 20:20:21.801373  1535 net.cpp:408] relu1 <- ip1
I0428 20:20:21.801380  1535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:21.801589  1535 net.cpp:124] Setting up relu1
I0428 20:20:21.801599  1535 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:21.801602  1535 net.cpp:139] Memory required for data: 15554800
I0428 20:20:21.801606  1535 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:21.801615  1535 net.cpp:86] Creating Layer ip2
I0428 20:20:21.801618  1535 net.cpp:408] ip2 <- ip1
I0428 20:20:21.801623  1535 net.cpp:382] ip2 -> ip2
I0428 20:20:21.801759  1535 net.cpp:124] Setting up ip2
I0428 20:20:21.801766  1535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:21.801770  1535 net.cpp:139] Memory required for data: 15564800
I0428 20:20:21.801776  1535 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:21.801782  1535 net.cpp:86] Creating Layer relu2
I0428 20:20:21.801785  1535 net.cpp:408] relu2 <- ip2
I0428 20:20:21.801789  1535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:21.801995  1535 net.cpp:124] Setting up relu2
I0428 20:20:21.802006  1535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:21.802008  1535 net.cpp:139] Memory required for data: 15574800
I0428 20:20:21.802012  1535 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:21.802019  1535 net.cpp:86] Creating Layer ip3
I0428 20:20:21.802023  1535 net.cpp:408] ip3 <- ip2
I0428 20:20:21.802028  1535 net.cpp:382] ip3 -> ip3
I0428 20:20:21.802139  1535 net.cpp:124] Setting up ip3
I0428 20:20:21.802146  1535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:21.802150  1535 net.cpp:139] Memory required for data: 15578800
I0428 20:20:21.802158  1535 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:21.802165  1535 net.cpp:86] Creating Layer relu3
I0428 20:20:21.802167  1535 net.cpp:408] relu3 <- ip3
I0428 20:20:21.802171  1535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:21.803001  1535 net.cpp:124] Setting up relu3
I0428 20:20:21.803014  1535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:21.803019  1535 net.cpp:139] Memory required for data: 15582800
I0428 20:20:21.803021  1535 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:21.803027  1535 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:21.803030  1535 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:21.803036  1535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:21.803043  1535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:21.803092  1535 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:21.803098  1535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:21.803102  1535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:21.803105  1535 net.cpp:139] Memory required for data: 15590800
I0428 20:20:21.803109  1535 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:21.803115  1535 net.cpp:86] Creating Layer accuracy
I0428 20:20:21.803119  1535 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:21.803123  1535 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:21.803128  1535 net.cpp:382] accuracy -> accuracy
I0428 20:20:21.803135  1535 net.cpp:124] Setting up accuracy
I0428 20:20:21.803140  1535 net.cpp:131] Top shape: (1)
I0428 20:20:21.803143  1535 net.cpp:139] Memory required for data: 15590804
I0428 20:20:21.803146  1535 layer_factory.hpp:77] Creating layer loss
I0428 20:20:21.803153  1535 net.cpp:86] Creating Layer loss
I0428 20:20:21.803155  1535 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:21.803159  1535 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:21.803164  1535 net.cpp:382] loss -> loss
I0428 20:20:21.803170  1535 layer_factory.hpp:77] Creating layer loss
I0428 20:20:21.803431  1535 net.cpp:124] Setting up loss
I0428 20:20:21.803458  1535 net.cpp:131] Top shape: (1)
I0428 20:20:21.803462  1535 net.cpp:134]     with loss weight 1
I0428 20:20:21.803478  1535 net.cpp:139] Memory required for data: 15590808
I0428 20:20:21.803483  1535 net.cpp:200] loss needs backward computation.
I0428 20:20:21.803486  1535 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:21.803490  1535 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:21.803493  1535 net.cpp:200] relu3 needs backward computation.
I0428 20:20:21.803496  1535 net.cpp:200] ip3 needs backward computation.
I0428 20:20:21.803501  1535 net.cpp:200] relu2 needs backward computation.
I0428 20:20:21.803504  1535 net.cpp:200] ip2 needs backward computation.
I0428 20:20:21.803508  1535 net.cpp:200] relu1 needs backward computation.
I0428 20:20:21.803511  1535 net.cpp:200] ip1 needs backward computation.
I0428 20:20:21.803515  1535 net.cpp:200] pool1 needs backward computation.
I0428 20:20:21.803519  1535 net.cpp:200] conv1 needs backward computation.
I0428 20:20:21.803522  1535 net.cpp:200] pool0 needs backward computation.
I0428 20:20:21.803525  1535 net.cpp:200] conv0 needs backward computation.
I0428 20:20:21.803529  1535 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:21.803534  1535 net.cpp:202] mnist does not need backward computation.
I0428 20:20:21.803537  1535 net.cpp:244] This network produces output accuracy
I0428 20:20:21.803541  1535 net.cpp:244] This network produces output loss
I0428 20:20:21.803553  1535 net.cpp:257] Network initialization done.
I0428 20:20:21.803598  1535 solver.cpp:56] Solver scaffolding done.
I0428 20:20:21.803961  1535 caffe.cpp:248] Starting Optimization
I0428 20:20:21.803967  1535 solver.cpp:273] Solving LeNet
I0428 20:20:21.803970  1535 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:21.804286  1535 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:21.811375  1535 blocking_queue.cpp:49] Waiting for data
I0428 20:20:21.881748  1542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:21.882526  1535 solver.cpp:398]     Test net output #0: accuracy = 0.077
I0428 20:20:21.882560  1535 solver.cpp:398]     Test net output #1: loss = 2.29705 (* 1 = 2.29705 loss)
I0428 20:20:21.886909  1535 solver.cpp:219] Iteration 0 (-2.2547e-31 iter/s, 0.0829092s/100 iters), loss = 2.29468
I0428 20:20:21.886950  1535 solver.cpp:238]     Train net output #0: loss = 2.29468 (* 1 = 2.29468 loss)
I0428 20:20:21.886960  1535 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:22.024502  1535 solver.cpp:219] Iteration 100 (726.988 iter/s, 0.137554s/100 iters), loss = 0.601193
I0428 20:20:22.024526  1535 solver.cpp:238]     Train net output #0: loss = 0.601193 (* 1 = 0.601193 loss)
I0428 20:20:22.024533  1535 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:22.162317  1535 solver.cpp:219] Iteration 200 (725.821 iter/s, 0.137775s/100 iters), loss = 0.3589
I0428 20:20:22.162354  1535 solver.cpp:238]     Train net output #0: loss = 0.3589 (* 1 = 0.3589 loss)
I0428 20:20:22.162360  1535 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:22.313321  1535 solver.cpp:219] Iteration 300 (662.467 iter/s, 0.150951s/100 iters), loss = 0.379304
I0428 20:20:22.313362  1535 solver.cpp:238]     Train net output #0: loss = 0.379304 (* 1 = 0.379304 loss)
I0428 20:20:22.313372  1535 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:22.465936  1535 solver.cpp:219] Iteration 400 (655.476 iter/s, 0.152561s/100 iters), loss = 0.543385
I0428 20:20:22.465981  1535 solver.cpp:238]     Train net output #0: loss = 0.543385 (* 1 = 0.543385 loss)
I0428 20:20:22.465991  1535 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:22.621564  1535 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:22.696693  1542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:22.697660  1535 solver.cpp:398]     Test net output #0: accuracy = 0.8759
I0428 20:20:22.697687  1535 solver.cpp:398]     Test net output #1: loss = 0.324509 (* 1 = 0.324509 loss)
I0428 20:20:22.699074  1535 solver.cpp:219] Iteration 500 (429.039 iter/s, 0.233079s/100 iters), loss = 0.453672
I0428 20:20:22.699118  1535 solver.cpp:238]     Train net output #0: loss = 0.453672 (* 1 = 0.453672 loss)
I0428 20:20:22.699127  1535 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:22.840379  1535 solver.cpp:219] Iteration 600 (707.967 iter/s, 0.14125s/100 iters), loss = 0.160263
I0428 20:20:22.840411  1535 solver.cpp:238]     Train net output #0: loss = 0.160263 (* 1 = 0.160263 loss)
I0428 20:20:22.840420  1535 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:22.982883  1535 solver.cpp:219] Iteration 700 (701.956 iter/s, 0.142459s/100 iters), loss = 0.323157
I0428 20:20:22.982915  1535 solver.cpp:238]     Train net output #0: loss = 0.323157 (* 1 = 0.323157 loss)
I0428 20:20:22.982923  1535 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:23.121911  1535 solver.cpp:219] Iteration 800 (719.516 iter/s, 0.138982s/100 iters), loss = 0.379344
I0428 20:20:23.121943  1535 solver.cpp:238]     Train net output #0: loss = 0.379344 (* 1 = 0.379344 loss)
I0428 20:20:23.121951  1535 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:23.260490  1535 solver.cpp:219] Iteration 900 (721.85 iter/s, 0.138533s/100 iters), loss = 0.203807
I0428 20:20:23.260524  1535 solver.cpp:238]     Train net output #0: loss = 0.203807 (* 1 = 0.203807 loss)
I0428 20:20:23.260531  1535 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:23.306670  1541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:23.399446  1535 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:23.401448  1535 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:23.402559  1535 solver.cpp:311] Iteration 1000, loss = 0.234688
I0428 20:20:23.402580  1535 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:23.485278  1542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:23.486721  1535 solver.cpp:398]     Test net output #0: accuracy = 0.8818
I0428 20:20:23.486757  1535 solver.cpp:398]     Test net output #1: loss = 0.293219 (* 1 = 0.293219 loss)
I0428 20:20:23.486768  1535 solver.cpp:316] Optimization Done.
I0428 20:20:23.486774  1535 caffe.cpp:259] Optimization Done.
