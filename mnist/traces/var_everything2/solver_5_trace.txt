I0428 19:27:50.215773 21462 caffe.cpp:218] Using GPUs 0
I0428 19:27:50.253401 21462 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:27:50.762608 21462 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test5.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:27:50.762754 21462 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test5.prototxt
I0428 19:27:50.763029 21462 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:27:50.763043 21462 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:27:50.763108 21462 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:50.763175 21462 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:50.763276 21462 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:27:50.763300 21462 net.cpp:86] Creating Layer mnist
I0428 19:27:50.763308 21462 net.cpp:382] mnist -> data
I0428 19:27:50.763330 21462 net.cpp:382] mnist -> label
I0428 19:27:50.764423 21462 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:27:50.766885 21462 net.cpp:124] Setting up mnist
I0428 19:27:50.766903 21462 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:27:50.766911 21462 net.cpp:131] Top shape: 64 (64)
I0428 19:27:50.766913 21462 net.cpp:139] Memory required for data: 200960
I0428 19:27:50.766921 21462 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:50.766932 21462 net.cpp:86] Creating Layer ip1
I0428 19:27:50.766937 21462 net.cpp:408] ip1 <- data
I0428 19:27:50.766950 21462 net.cpp:382] ip1 -> ip1
I0428 19:27:50.768179 21462 net.cpp:124] Setting up ip1
I0428 19:27:50.768194 21462 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:50.768198 21462 net.cpp:139] Memory required for data: 203520
I0428 19:27:50.768214 21462 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:50.768224 21462 net.cpp:86] Creating Layer relu1
I0428 19:27:50.768227 21462 net.cpp:408] relu1 <- ip1
I0428 19:27:50.768234 21462 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:51.054389 21462 net.cpp:124] Setting up relu1
I0428 19:27:51.054419 21462 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:51.054422 21462 net.cpp:139] Memory required for data: 206080
I0428 19:27:51.054427 21462 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:51.054440 21462 net.cpp:86] Creating Layer ip2
I0428 19:27:51.054445 21462 net.cpp:408] ip2 <- ip1
I0428 19:27:51.054453 21462 net.cpp:382] ip2 -> ip2
I0428 19:27:51.054575 21462 net.cpp:124] Setting up ip2
I0428 19:27:51.054584 21462 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:51.054587 21462 net.cpp:139] Memory required for data: 208640
I0428 19:27:51.054597 21462 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:51.054621 21462 net.cpp:86] Creating Layer relu2
I0428 19:27:51.054625 21462 net.cpp:408] relu2 <- ip2
I0428 19:27:51.054630 21462 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:51.055433 21462 net.cpp:124] Setting up relu2
I0428 19:27:51.055447 21462 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:51.055451 21462 net.cpp:139] Memory required for data: 211200
I0428 19:27:51.055454 21462 layer_factory.hpp:77] Creating layer loss
I0428 19:27:51.055461 21462 net.cpp:86] Creating Layer loss
I0428 19:27:51.055465 21462 net.cpp:408] loss <- ip2
I0428 19:27:51.055469 21462 net.cpp:408] loss <- label
I0428 19:27:51.055475 21462 net.cpp:382] loss -> loss
I0428 19:27:51.055497 21462 layer_factory.hpp:77] Creating layer loss
I0428 19:27:51.056614 21462 net.cpp:124] Setting up loss
I0428 19:27:51.056628 21462 net.cpp:131] Top shape: (1)
I0428 19:27:51.056632 21462 net.cpp:134]     with loss weight 1
I0428 19:27:51.056648 21462 net.cpp:139] Memory required for data: 211204
I0428 19:27:51.056651 21462 net.cpp:200] loss needs backward computation.
I0428 19:27:51.056655 21462 net.cpp:200] relu2 needs backward computation.
I0428 19:27:51.056659 21462 net.cpp:200] ip2 needs backward computation.
I0428 19:27:51.056663 21462 net.cpp:200] relu1 needs backward computation.
I0428 19:27:51.056665 21462 net.cpp:200] ip1 needs backward computation.
I0428 19:27:51.056669 21462 net.cpp:202] mnist does not need backward computation.
I0428 19:27:51.056673 21462 net.cpp:244] This network produces output loss
I0428 19:27:51.056679 21462 net.cpp:257] Network initialization done.
I0428 19:27:51.056897 21462 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test5.prototxt
I0428 19:27:51.056921 21462 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:27:51.056988 21462 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:51.057042 21462 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:51.057088 21462 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:27:51.057101 21462 net.cpp:86] Creating Layer mnist
I0428 19:27:51.057106 21462 net.cpp:382] mnist -> data
I0428 19:27:51.057113 21462 net.cpp:382] mnist -> label
I0428 19:27:51.057204 21462 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:27:51.059360 21462 net.cpp:124] Setting up mnist
I0428 19:27:51.059373 21462 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:27:51.059396 21462 net.cpp:131] Top shape: 100 (100)
I0428 19:27:51.059398 21462 net.cpp:139] Memory required for data: 314000
I0428 19:27:51.059404 21462 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:27:51.059415 21462 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:27:51.059419 21462 net.cpp:408] label_mnist_1_split <- label
I0428 19:27:51.059445 21462 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:27:51.059470 21462 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:27:51.059566 21462 net.cpp:124] Setting up label_mnist_1_split
I0428 19:27:51.059576 21462 net.cpp:131] Top shape: 100 (100)
I0428 19:27:51.059579 21462 net.cpp:131] Top shape: 100 (100)
I0428 19:27:51.059582 21462 net.cpp:139] Memory required for data: 314800
I0428 19:27:51.059587 21462 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:51.059593 21462 net.cpp:86] Creating Layer ip1
I0428 19:27:51.059597 21462 net.cpp:408] ip1 <- data
I0428 19:27:51.059602 21462 net.cpp:382] ip1 -> ip1
I0428 19:27:51.059785 21462 net.cpp:124] Setting up ip1
I0428 19:27:51.059793 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.059798 21462 net.cpp:139] Memory required for data: 318800
I0428 19:27:51.059806 21462 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:51.059811 21462 net.cpp:86] Creating Layer relu1
I0428 19:27:51.059816 21462 net.cpp:408] relu1 <- ip1
I0428 19:27:51.059821 21462 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:51.060008 21462 net.cpp:124] Setting up relu1
I0428 19:27:51.060017 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.060020 21462 net.cpp:139] Memory required for data: 322800
I0428 19:27:51.060024 21462 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:51.060032 21462 net.cpp:86] Creating Layer ip2
I0428 19:27:51.060035 21462 net.cpp:408] ip2 <- ip1
I0428 19:27:51.060040 21462 net.cpp:382] ip2 -> ip2
I0428 19:27:51.060143 21462 net.cpp:124] Setting up ip2
I0428 19:27:51.060150 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.060153 21462 net.cpp:139] Memory required for data: 326800
I0428 19:27:51.060161 21462 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:51.060166 21462 net.cpp:86] Creating Layer relu2
I0428 19:27:51.060169 21462 net.cpp:408] relu2 <- ip2
I0428 19:27:51.060173 21462 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:51.060997 21462 net.cpp:124] Setting up relu2
I0428 19:27:51.061012 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.061014 21462 net.cpp:139] Memory required for data: 330800
I0428 19:27:51.061018 21462 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:27:51.061023 21462 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:27:51.061028 21462 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:27:51.061033 21462 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:27:51.061043 21462 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:27:51.061084 21462 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:27:51.061090 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.061094 21462 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:51.061097 21462 net.cpp:139] Memory required for data: 338800
I0428 19:27:51.061100 21462 layer_factory.hpp:77] Creating layer accuracy
I0428 19:27:51.061105 21462 net.cpp:86] Creating Layer accuracy
I0428 19:27:51.061108 21462 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:27:51.061113 21462 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:27:51.061117 21462 net.cpp:382] accuracy -> accuracy
I0428 19:27:51.061130 21462 net.cpp:124] Setting up accuracy
I0428 19:27:51.061134 21462 net.cpp:131] Top shape: (1)
I0428 19:27:51.061137 21462 net.cpp:139] Memory required for data: 338804
I0428 19:27:51.061141 21462 layer_factory.hpp:77] Creating layer loss
I0428 19:27:51.061147 21462 net.cpp:86] Creating Layer loss
I0428 19:27:51.061151 21462 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:27:51.061154 21462 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:27:51.061158 21462 net.cpp:382] loss -> loss
I0428 19:27:51.061164 21462 layer_factory.hpp:77] Creating layer loss
I0428 19:27:51.061493 21462 net.cpp:124] Setting up loss
I0428 19:27:51.061503 21462 net.cpp:131] Top shape: (1)
I0428 19:27:51.061507 21462 net.cpp:134]     with loss weight 1
I0428 19:27:51.061513 21462 net.cpp:139] Memory required for data: 338808
I0428 19:27:51.061517 21462 net.cpp:200] loss needs backward computation.
I0428 19:27:51.061530 21462 net.cpp:202] accuracy does not need backward computation.
I0428 19:27:51.061537 21462 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:27:51.061552 21462 net.cpp:200] relu2 needs backward computation.
I0428 19:27:51.061554 21462 net.cpp:200] ip2 needs backward computation.
I0428 19:27:51.061558 21462 net.cpp:200] relu1 needs backward computation.
I0428 19:27:51.061560 21462 net.cpp:200] ip1 needs backward computation.
I0428 19:27:51.061564 21462 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:27:51.061568 21462 net.cpp:202] mnist does not need backward computation.
I0428 19:27:51.061571 21462 net.cpp:244] This network produces output accuracy
I0428 19:27:51.061574 21462 net.cpp:244] This network produces output loss
I0428 19:27:51.061596 21462 net.cpp:257] Network initialization done.
I0428 19:27:51.061625 21462 solver.cpp:56] Solver scaffolding done.
I0428 19:27:51.061775 21462 caffe.cpp:248] Starting Optimization
I0428 19:27:51.061782 21462 solver.cpp:273] Solving LeNet
I0428 19:27:51.061785 21462 solver.cpp:274] Learning Rate Policy: inv
I0428 19:27:51.061875 21462 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:27:51.061942 21462 blocking_queue.cpp:49] Waiting for data
I0428 19:27:51.141675 21469 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:51.142035 21462 solver.cpp:398]     Test net output #0: accuracy = 0.129
I0428 19:27:51.142057 21462 solver.cpp:398]     Test net output #1: loss = 2.30709 (* 1 = 2.30709 loss)
I0428 19:27:51.142659 21462 solver.cpp:219] Iteration 0 (0 iter/s, 0.0808315s/100 iters), loss = 2.30859
I0428 19:27:51.142698 21462 solver.cpp:238]     Train net output #0: loss = 2.30859 (* 1 = 2.30859 loss)
I0428 19:27:51.142709 21462 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:27:51.193956 21462 solver.cpp:219] Iteration 100 (1951.52 iter/s, 0.051242s/100 iters), loss = 1.44231
I0428 19:27:51.194002 21462 solver.cpp:238]     Train net output #0: loss = 1.44231 (* 1 = 1.44231 loss)
I0428 19:27:51.194015 21462 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:27:51.239320 21462 solver.cpp:219] Iteration 200 (2206.92 iter/s, 0.045312s/100 iters), loss = 1.3288
I0428 19:27:51.239352 21462 solver.cpp:238]     Train net output #0: loss = 1.3288 (* 1 = 1.3288 loss)
I0428 19:27:51.239361 21462 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:27:51.284037 21462 solver.cpp:219] Iteration 300 (2238.18 iter/s, 0.0446792s/100 iters), loss = 1.23661
I0428 19:27:51.284063 21462 solver.cpp:238]     Train net output #0: loss = 1.23661 (* 1 = 1.23661 loss)
I0428 19:27:51.284070 21462 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:27:51.339999 21462 solver.cpp:219] Iteration 400 (1788.02 iter/s, 0.0559278s/100 iters), loss = 1.39568
I0428 19:27:51.340026 21462 solver.cpp:238]     Train net output #0: loss = 1.39568 (* 1 = 1.39568 loss)
I0428 19:27:51.340034 21462 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:27:51.386093 21462 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:27:51.441763 21469 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:51.442145 21462 solver.cpp:398]     Test net output #0: accuracy = 0.5875
I0428 19:27:51.442167 21462 solver.cpp:398]     Test net output #1: loss = 1.19087 (* 1 = 1.19087 loss)
I0428 19:27:51.442594 21462 solver.cpp:219] Iteration 500 (975.061 iter/s, 0.102558s/100 iters), loss = 1.23312
I0428 19:27:51.442617 21462 solver.cpp:238]     Train net output #0: loss = 1.23312 (* 1 = 1.23312 loss)
I0428 19:27:51.442625 21462 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:27:51.499680 21462 solver.cpp:219] Iteration 600 (1752.72 iter/s, 0.0570541s/100 iters), loss = 1.13225
I0428 19:27:51.499706 21462 solver.cpp:238]     Train net output #0: loss = 1.13225 (* 1 = 1.13225 loss)
I0428 19:27:51.499712 21462 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:27:51.547732 21462 solver.cpp:219] Iteration 700 (2082.49 iter/s, 0.0480195s/100 iters), loss = 1.24779
I0428 19:27:51.547758 21462 solver.cpp:238]     Train net output #0: loss = 1.24779 (* 1 = 1.24779 loss)
I0428 19:27:51.547781 21462 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:27:51.588495 21462 solver.cpp:219] Iteration 800 (2455.28 iter/s, 0.0407286s/100 iters), loss = 1.22369
I0428 19:27:51.588521 21462 solver.cpp:238]     Train net output #0: loss = 1.22369 (* 1 = 1.22369 loss)
I0428 19:27:51.588528 21462 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:27:51.631752 21462 solver.cpp:219] Iteration 900 (2313.91 iter/s, 0.0432169s/100 iters), loss = 1.00761
I0428 19:27:51.631805 21462 solver.cpp:238]     Train net output #0: loss = 1.00761 (* 1 = 1.00761 loss)
I0428 19:27:51.631819 21462 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:27:51.649664 21468 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:51.681694 21462 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:27:51.682325 21462 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:27:51.682792 21462 solver.cpp:311] Iteration 1000, loss = 0.904134
I0428 19:27:51.682816 21462 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:27:51.737773 21469 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:51.738164 21462 solver.cpp:398]     Test net output #0: accuracy = 0.7098
I0428 19:27:51.738186 21462 solver.cpp:398]     Test net output #1: loss = 0.945591 (* 1 = 0.945591 loss)
I0428 19:27:51.738193 21462 solver.cpp:316] Optimization Done.
I0428 19:27:51.738196 21462 caffe.cpp:259] Optimization Done.
