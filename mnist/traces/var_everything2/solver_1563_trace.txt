I0428 20:31:54.793725  4026 caffe.cpp:218] Using GPUs 0
I0428 20:31:54.834228  4026 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:55.356369  4026 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1563.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:55.356533  4026 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1563.prototxt
I0428 20:31:55.356917  4026 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:55.356938  4026 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:55.357036  4026 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:31:55.357134  4026 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:55.357273  4026 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:55.357307  4026 net.cpp:86] Creating Layer mnist
I0428 20:31:55.357319  4026 net.cpp:382] mnist -> data
I0428 20:31:55.357350  4026 net.cpp:382] mnist -> label
I0428 20:31:55.358592  4026 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:55.361080  4026 net.cpp:124] Setting up mnist
I0428 20:31:55.361100  4026 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:55.361110  4026 net.cpp:131] Top shape: 64 (64)
I0428 20:31:55.361117  4026 net.cpp:139] Memory required for data: 200960
I0428 20:31:55.361129  4026 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:55.361151  4026 net.cpp:86] Creating Layer conv0
I0428 20:31:55.361161  4026 net.cpp:408] conv0 <- data
I0428 20:31:55.361179  4026 net.cpp:382] conv0 -> conv0
I0428 20:31:55.653728  4026 net.cpp:124] Setting up conv0
I0428 20:31:55.653761  4026 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:55.653769  4026 net.cpp:139] Memory required for data: 14946560
I0428 20:31:55.653813  4026 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:55.653836  4026 net.cpp:86] Creating Layer pool0
I0428 20:31:55.653844  4026 net.cpp:408] pool0 <- conv0
I0428 20:31:55.653854  4026 net.cpp:382] pool0 -> pool0
I0428 20:31:55.653918  4026 net.cpp:124] Setting up pool0
I0428 20:31:55.653928  4026 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:55.653934  4026 net.cpp:139] Memory required for data: 18632960
I0428 20:31:55.653940  4026 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:55.653959  4026 net.cpp:86] Creating Layer conv1
I0428 20:31:55.653966  4026 net.cpp:408] conv1 <- pool0
I0428 20:31:55.653976  4026 net.cpp:382] conv1 -> conv1
I0428 20:31:55.656462  4026 net.cpp:124] Setting up conv1
I0428 20:31:55.656481  4026 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:31:55.656488  4026 net.cpp:139] Memory required for data: 19042560
I0428 20:31:55.656503  4026 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:55.656517  4026 net.cpp:86] Creating Layer pool1
I0428 20:31:55.656523  4026 net.cpp:408] pool1 <- conv1
I0428 20:31:55.656533  4026 net.cpp:382] pool1 -> pool1
I0428 20:31:55.656584  4026 net.cpp:124] Setting up pool1
I0428 20:31:55.656594  4026 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:31:55.656600  4026 net.cpp:139] Memory required for data: 19144960
I0428 20:31:55.656606  4026 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:55.656620  4026 net.cpp:86] Creating Layer ip1
I0428 20:31:55.656631  4026 net.cpp:408] ip1 <- pool1
I0428 20:31:55.656641  4026 net.cpp:382] ip1 -> ip1
I0428 20:31:55.656795  4026 net.cpp:124] Setting up ip1
I0428 20:31:55.656806  4026 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:55.656818  4026 net.cpp:139] Memory required for data: 19147520
I0428 20:31:55.656832  4026 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:55.656843  4026 net.cpp:86] Creating Layer relu1
I0428 20:31:55.656849  4026 net.cpp:408] relu1 <- ip1
I0428 20:31:55.656858  4026 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:55.657050  4026 net.cpp:124] Setting up relu1
I0428 20:31:55.657063  4026 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:55.657069  4026 net.cpp:139] Memory required for data: 19150080
I0428 20:31:55.657075  4026 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:55.657086  4026 net.cpp:86] Creating Layer ip2
I0428 20:31:55.657094  4026 net.cpp:408] ip2 <- ip1
I0428 20:31:55.657102  4026 net.cpp:382] ip2 -> ip2
I0428 20:31:55.657213  4026 net.cpp:124] Setting up ip2
I0428 20:31:55.657223  4026 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:55.657229  4026 net.cpp:139] Memory required for data: 19152640
I0428 20:31:55.657240  4026 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:55.657250  4026 net.cpp:86] Creating Layer relu2
I0428 20:31:55.657258  4026 net.cpp:408] relu2 <- ip2
I0428 20:31:55.657265  4026 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:55.658090  4026 net.cpp:124] Setting up relu2
I0428 20:31:55.658107  4026 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:55.658114  4026 net.cpp:139] Memory required for data: 19155200
I0428 20:31:55.658120  4026 layer_factory.hpp:77] Creating layer loss
I0428 20:31:55.658131  4026 net.cpp:86] Creating Layer loss
I0428 20:31:55.658138  4026 net.cpp:408] loss <- ip2
I0428 20:31:55.658146  4026 net.cpp:408] loss <- label
I0428 20:31:55.658155  4026 net.cpp:382] loss -> loss
I0428 20:31:55.658180  4026 layer_factory.hpp:77] Creating layer loss
I0428 20:31:55.658443  4026 net.cpp:124] Setting up loss
I0428 20:31:55.658457  4026 net.cpp:131] Top shape: (1)
I0428 20:31:55.658463  4026 net.cpp:134]     with loss weight 1
I0428 20:31:55.658485  4026 net.cpp:139] Memory required for data: 19155204
I0428 20:31:55.658493  4026 net.cpp:200] loss needs backward computation.
I0428 20:31:55.658499  4026 net.cpp:200] relu2 needs backward computation.
I0428 20:31:55.658505  4026 net.cpp:200] ip2 needs backward computation.
I0428 20:31:55.658511  4026 net.cpp:200] relu1 needs backward computation.
I0428 20:31:55.658517  4026 net.cpp:200] ip1 needs backward computation.
I0428 20:31:55.658535  4026 net.cpp:200] pool1 needs backward computation.
I0428 20:31:55.658542  4026 net.cpp:200] conv1 needs backward computation.
I0428 20:31:55.658548  4026 net.cpp:200] pool0 needs backward computation.
I0428 20:31:55.658555  4026 net.cpp:200] conv0 needs backward computation.
I0428 20:31:55.658561  4026 net.cpp:202] mnist does not need backward computation.
I0428 20:31:55.658567  4026 net.cpp:244] This network produces output loss
I0428 20:31:55.658582  4026 net.cpp:257] Network initialization done.
I0428 20:31:55.658921  4026 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1563.prototxt
I0428 20:31:55.658959  4026 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:55.659062  4026 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:31:55.659173  4026 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:55.659241  4026 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:55.659263  4026 net.cpp:86] Creating Layer mnist
I0428 20:31:55.659272  4026 net.cpp:382] mnist -> data
I0428 20:31:55.659286  4026 net.cpp:382] mnist -> label
I0428 20:31:55.659418  4026 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:55.661875  4026 net.cpp:124] Setting up mnist
I0428 20:31:55.661893  4026 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:55.661902  4026 net.cpp:131] Top shape: 100 (100)
I0428 20:31:55.661908  4026 net.cpp:139] Memory required for data: 314000
I0428 20:31:55.661916  4026 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:55.661927  4026 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:55.661934  4026 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:55.661943  4026 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:55.661957  4026 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:55.662080  4026 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:55.662091  4026 net.cpp:131] Top shape: 100 (100)
I0428 20:31:55.662097  4026 net.cpp:131] Top shape: 100 (100)
I0428 20:31:55.662104  4026 net.cpp:139] Memory required for data: 314800
I0428 20:31:55.662111  4026 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:55.662125  4026 net.cpp:86] Creating Layer conv0
I0428 20:31:55.662132  4026 net.cpp:408] conv0 <- data
I0428 20:31:55.662143  4026 net.cpp:382] conv0 -> conv0
I0428 20:31:55.663723  4026 net.cpp:124] Setting up conv0
I0428 20:31:55.663741  4026 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:55.663748  4026 net.cpp:139] Memory required for data: 23354800
I0428 20:31:55.663764  4026 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:55.663775  4026 net.cpp:86] Creating Layer pool0
I0428 20:31:55.663782  4026 net.cpp:408] pool0 <- conv0
I0428 20:31:55.663791  4026 net.cpp:382] pool0 -> pool0
I0428 20:31:55.663847  4026 net.cpp:124] Setting up pool0
I0428 20:31:55.663857  4026 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:55.663863  4026 net.cpp:139] Memory required for data: 29114800
I0428 20:31:55.663869  4026 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:55.663884  4026 net.cpp:86] Creating Layer conv1
I0428 20:31:55.663892  4026 net.cpp:408] conv1 <- pool0
I0428 20:31:55.663902  4026 net.cpp:382] conv1 -> conv1
I0428 20:31:55.665928  4026 net.cpp:124] Setting up conv1
I0428 20:31:55.665946  4026 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:31:55.665952  4026 net.cpp:139] Memory required for data: 29754800
I0428 20:31:55.665967  4026 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:55.665978  4026 net.cpp:86] Creating Layer pool1
I0428 20:31:55.665985  4026 net.cpp:408] pool1 <- conv1
I0428 20:31:55.665997  4026 net.cpp:382] pool1 -> pool1
I0428 20:31:55.666051  4026 net.cpp:124] Setting up pool1
I0428 20:31:55.666060  4026 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:31:55.666066  4026 net.cpp:139] Memory required for data: 29914800
I0428 20:31:55.666072  4026 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:55.666084  4026 net.cpp:86] Creating Layer ip1
I0428 20:31:55.666090  4026 net.cpp:408] ip1 <- pool1
I0428 20:31:55.666126  4026 net.cpp:382] ip1 -> ip1
I0428 20:31:55.666260  4026 net.cpp:124] Setting up ip1
I0428 20:31:55.666271  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.666277  4026 net.cpp:139] Memory required for data: 29918800
I0428 20:31:55.666290  4026 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:55.666299  4026 net.cpp:86] Creating Layer relu1
I0428 20:31:55.666306  4026 net.cpp:408] relu1 <- ip1
I0428 20:31:55.666316  4026 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:55.666491  4026 net.cpp:124] Setting up relu1
I0428 20:31:55.666501  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.666507  4026 net.cpp:139] Memory required for data: 29922800
I0428 20:31:55.666513  4026 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:55.666525  4026 net.cpp:86] Creating Layer ip2
I0428 20:31:55.666532  4026 net.cpp:408] ip2 <- ip1
I0428 20:31:55.666543  4026 net.cpp:382] ip2 -> ip2
I0428 20:31:55.666666  4026 net.cpp:124] Setting up ip2
I0428 20:31:55.666674  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.666681  4026 net.cpp:139] Memory required for data: 29926800
I0428 20:31:55.666690  4026 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:55.666698  4026 net.cpp:86] Creating Layer relu2
I0428 20:31:55.666704  4026 net.cpp:408] relu2 <- ip2
I0428 20:31:55.666712  4026 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:55.666955  4026 net.cpp:124] Setting up relu2
I0428 20:31:55.666966  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.666972  4026 net.cpp:139] Memory required for data: 29930800
I0428 20:31:55.666978  4026 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:31:55.666987  4026 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:31:55.666995  4026 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:31:55.667003  4026 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:31:55.667026  4026 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:31:55.667073  4026 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:31:55.667083  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.667089  4026 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:55.667094  4026 net.cpp:139] Memory required for data: 29938800
I0428 20:31:55.667100  4026 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:55.667112  4026 net.cpp:86] Creating Layer accuracy
I0428 20:31:55.667119  4026 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:31:55.667129  4026 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:55.667136  4026 net.cpp:382] accuracy -> accuracy
I0428 20:31:55.667150  4026 net.cpp:124] Setting up accuracy
I0428 20:31:55.667158  4026 net.cpp:131] Top shape: (1)
I0428 20:31:55.667165  4026 net.cpp:139] Memory required for data: 29938804
I0428 20:31:55.667170  4026 layer_factory.hpp:77] Creating layer loss
I0428 20:31:55.667178  4026 net.cpp:86] Creating Layer loss
I0428 20:31:55.667184  4026 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:31:55.667192  4026 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:55.667201  4026 net.cpp:382] loss -> loss
I0428 20:31:55.667212  4026 layer_factory.hpp:77] Creating layer loss
I0428 20:31:55.667459  4026 net.cpp:124] Setting up loss
I0428 20:31:55.667470  4026 net.cpp:131] Top shape: (1)
I0428 20:31:55.667476  4026 net.cpp:134]     with loss weight 1
I0428 20:31:55.667486  4026 net.cpp:139] Memory required for data: 29938808
I0428 20:31:55.667492  4026 net.cpp:200] loss needs backward computation.
I0428 20:31:55.667500  4026 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:55.667506  4026 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:31:55.667513  4026 net.cpp:200] relu2 needs backward computation.
I0428 20:31:55.667518  4026 net.cpp:200] ip2 needs backward computation.
I0428 20:31:55.667526  4026 net.cpp:200] relu1 needs backward computation.
I0428 20:31:55.667531  4026 net.cpp:200] ip1 needs backward computation.
I0428 20:31:55.667537  4026 net.cpp:200] pool1 needs backward computation.
I0428 20:31:55.667543  4026 net.cpp:200] conv1 needs backward computation.
I0428 20:31:55.667549  4026 net.cpp:200] pool0 needs backward computation.
I0428 20:31:55.667556  4026 net.cpp:200] conv0 needs backward computation.
I0428 20:31:55.667562  4026 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:55.667569  4026 net.cpp:202] mnist does not need backward computation.
I0428 20:31:55.667574  4026 net.cpp:244] This network produces output accuracy
I0428 20:31:55.667582  4026 net.cpp:244] This network produces output loss
I0428 20:31:55.667598  4026 net.cpp:257] Network initialization done.
I0428 20:31:55.667649  4026 solver.cpp:56] Solver scaffolding done.
I0428 20:31:55.667965  4026 caffe.cpp:248] Starting Optimization
I0428 20:31:55.667974  4026 solver.cpp:273] Solving LeNet
I0428 20:31:55.667979  4026 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:55.668231  4026 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:55.762277  4033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:55.764639  4026 solver.cpp:398]     Test net output #0: accuracy = 0.0807
I0428 20:31:55.764660  4026 solver.cpp:398]     Test net output #1: loss = 2.31042 (* 1 = 2.31042 loss)
I0428 20:31:55.769048  4026 solver.cpp:219] Iteration 0 (0 iter/s, 0.101018s/100 iters), loss = 2.3172
I0428 20:31:55.769076  4026 solver.cpp:238]     Train net output #0: loss = 2.3172 (* 1 = 2.3172 loss)
I0428 20:31:55.769093  4026 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:55.979687  4026 solver.cpp:219] Iteration 100 (474.85 iter/s, 0.210593s/100 iters), loss = 0.4353
I0428 20:31:55.979746  4026 solver.cpp:238]     Train net output #0: loss = 0.4353 (* 1 = 0.4353 loss)
I0428 20:31:55.979766  4026 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:56.198951  4026 solver.cpp:219] Iteration 200 (456.216 iter/s, 0.219194s/100 iters), loss = 0.137096
I0428 20:31:56.199034  4026 solver.cpp:238]     Train net output #0: loss = 0.137096 (* 1 = 0.137096 loss)
I0428 20:31:56.199056  4026 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:56.419369  4026 solver.cpp:219] Iteration 300 (453.875 iter/s, 0.220325s/100 iters), loss = 0.20443
I0428 20:31:56.419428  4026 solver.cpp:238]     Train net output #0: loss = 0.20443 (* 1 = 0.20443 loss)
I0428 20:31:56.419450  4026 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:56.639961  4026 solver.cpp:219] Iteration 400 (453.468 iter/s, 0.220522s/100 iters), loss = 0.113441
I0428 20:31:56.640017  4026 solver.cpp:238]     Train net output #0: loss = 0.113441 (* 1 = 0.113441 loss)
I0428 20:31:56.640036  4026 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:56.854856  4026 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:56.955432  4033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:56.957731  4026 solver.cpp:398]     Test net output #0: accuracy = 0.959
I0428 20:31:56.957762  4026 solver.cpp:398]     Test net output #1: loss = 0.130458 (* 1 = 0.130458 loss)
I0428 20:31:56.959722  4026 solver.cpp:219] Iteration 500 (312.8 iter/s, 0.319693s/100 iters), loss = 0.113892
I0428 20:31:56.959755  4026 solver.cpp:238]     Train net output #0: loss = 0.113892 (* 1 = 0.113892 loss)
I0428 20:31:56.959769  4026 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:57.175433  4026 solver.cpp:219] Iteration 600 (463.687 iter/s, 0.215663s/100 iters), loss = 0.146572
I0428 20:31:57.175484  4026 solver.cpp:238]     Train net output #0: loss = 0.146573 (* 1 = 0.146573 loss)
I0428 20:31:57.175503  4026 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:57.393255  4026 solver.cpp:219] Iteration 700 (459.224 iter/s, 0.217759s/100 iters), loss = 0.0948397
I0428 20:31:57.393319  4026 solver.cpp:238]     Train net output #0: loss = 0.0948398 (* 1 = 0.0948398 loss)
I0428 20:31:57.393338  4026 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:57.610802  4026 solver.cpp:219] Iteration 800 (459.84 iter/s, 0.217467s/100 iters), loss = 0.307544
I0428 20:31:57.610869  4026 solver.cpp:238]     Train net output #0: loss = 0.307544 (* 1 = 0.307544 loss)
I0428 20:31:57.610890  4026 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:57.830461  4026 solver.cpp:219] Iteration 900 (455.416 iter/s, 0.219579s/100 iters), loss = 0.159932
I0428 20:31:57.830518  4026 solver.cpp:238]     Train net output #0: loss = 0.159932 (* 1 = 0.159932 loss)
I0428 20:31:57.830539  4026 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:57.903107  4032 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:58.044358  4026 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:58.047243  4026 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:58.049145  4026 solver.cpp:311] Iteration 1000, loss = 0.0643254
I0428 20:31:58.049190  4026 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:58.148408  4033 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:58.150755  4026 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0428 20:31:58.150782  4026 solver.cpp:398]     Test net output #1: loss = 0.0708034 (* 1 = 0.0708034 loss)
I0428 20:31:58.150792  4026 solver.cpp:316] Optimization Done.
I0428 20:31:58.150799  4026 caffe.cpp:259] Optimization Done.
