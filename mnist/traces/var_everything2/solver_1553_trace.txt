I0428 20:31:18.727192  3933 caffe.cpp:218] Using GPUs 0
I0428 20:31:18.773739  3933 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:19.291029  3933 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1553.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:19.291201  3933 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1553.prototxt
I0428 20:31:19.291627  3933 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:19.291653  3933 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:19.291769  3933 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:19.291885  3933 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:19.292017  3933 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:19.292052  3933 net.cpp:86] Creating Layer mnist
I0428 20:31:19.292063  3933 net.cpp:382] mnist -> data
I0428 20:31:19.292095  3933 net.cpp:382] mnist -> label
I0428 20:31:19.293370  3933 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:19.295819  3933 net.cpp:124] Setting up mnist
I0428 20:31:19.295840  3933 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:19.295850  3933 net.cpp:131] Top shape: 64 (64)
I0428 20:31:19.295857  3933 net.cpp:139] Memory required for data: 200960
I0428 20:31:19.295867  3933 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:19.295892  3933 net.cpp:86] Creating Layer conv0
I0428 20:31:19.295917  3933 net.cpp:408] conv0 <- data
I0428 20:31:19.295935  3933 net.cpp:382] conv0 -> conv0
I0428 20:31:19.586797  3933 net.cpp:124] Setting up conv0
I0428 20:31:19.586832  3933 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:19.586838  3933 net.cpp:139] Memory required for data: 14946560
I0428 20:31:19.586863  3933 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:19.586882  3933 net.cpp:86] Creating Layer pool0
I0428 20:31:19.586890  3933 net.cpp:408] pool0 <- conv0
I0428 20:31:19.586904  3933 net.cpp:382] pool0 -> pool0
I0428 20:31:19.586978  3933 net.cpp:124] Setting up pool0
I0428 20:31:19.586989  3933 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:19.586995  3933 net.cpp:139] Memory required for data: 18632960
I0428 20:31:19.587002  3933 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:19.587023  3933 net.cpp:86] Creating Layer conv1
I0428 20:31:19.587031  3933 net.cpp:408] conv1 <- pool0
I0428 20:31:19.587043  3933 net.cpp:382] conv1 -> conv1
I0428 20:31:19.589424  3933 net.cpp:124] Setting up conv1
I0428 20:31:19.589444  3933 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:19.589452  3933 net.cpp:139] Memory required for data: 18796800
I0428 20:31:19.589468  3933 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:19.589483  3933 net.cpp:86] Creating Layer pool1
I0428 20:31:19.589490  3933 net.cpp:408] pool1 <- conv1
I0428 20:31:19.589500  3933 net.cpp:382] pool1 -> pool1
I0428 20:31:19.589555  3933 net.cpp:124] Setting up pool1
I0428 20:31:19.589568  3933 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:19.589576  3933 net.cpp:139] Memory required for data: 18837760
I0428 20:31:19.589581  3933 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:19.589596  3933 net.cpp:86] Creating Layer ip1
I0428 20:31:19.589608  3933 net.cpp:408] ip1 <- pool1
I0428 20:31:19.589618  3933 net.cpp:382] ip1 -> ip1
I0428 20:31:19.590781  3933 net.cpp:124] Setting up ip1
I0428 20:31:19.590798  3933 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:19.590806  3933 net.cpp:139] Memory required for data: 18850560
I0428 20:31:19.590821  3933 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:19.590836  3933 net.cpp:86] Creating Layer relu1
I0428 20:31:19.590848  3933 net.cpp:408] relu1 <- ip1
I0428 20:31:19.590858  3933 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:19.591081  3933 net.cpp:124] Setting up relu1
I0428 20:31:19.591094  3933 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:19.591100  3933 net.cpp:139] Memory required for data: 18863360
I0428 20:31:19.591107  3933 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:19.591121  3933 net.cpp:86] Creating Layer ip2
I0428 20:31:19.591127  3933 net.cpp:408] ip2 <- ip1
I0428 20:31:19.591137  3933 net.cpp:382] ip2 -> ip2
I0428 20:31:19.591270  3933 net.cpp:124] Setting up ip2
I0428 20:31:19.591280  3933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:19.591286  3933 net.cpp:139] Memory required for data: 18865920
I0428 20:31:19.591297  3933 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:19.591313  3933 net.cpp:86] Creating Layer relu2
I0428 20:31:19.591321  3933 net.cpp:408] relu2 <- ip2
I0428 20:31:19.591331  3933 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:19.592209  3933 net.cpp:124] Setting up relu2
I0428 20:31:19.592226  3933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:19.592232  3933 net.cpp:139] Memory required for data: 18868480
I0428 20:31:19.592239  3933 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:19.592253  3933 net.cpp:86] Creating Layer ip3
I0428 20:31:19.592260  3933 net.cpp:408] ip3 <- ip2
I0428 20:31:19.592273  3933 net.cpp:382] ip3 -> ip3
I0428 20:31:19.592406  3933 net.cpp:124] Setting up ip3
I0428 20:31:19.592417  3933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:19.592423  3933 net.cpp:139] Memory required for data: 18871040
I0428 20:31:19.592438  3933 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:19.592449  3933 net.cpp:86] Creating Layer relu3
I0428 20:31:19.592456  3933 net.cpp:408] relu3 <- ip3
I0428 20:31:19.592464  3933 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:19.592685  3933 net.cpp:124] Setting up relu3
I0428 20:31:19.592697  3933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:19.592703  3933 net.cpp:139] Memory required for data: 18873600
I0428 20:31:19.592710  3933 layer_factory.hpp:77] Creating layer loss
I0428 20:31:19.592720  3933 net.cpp:86] Creating Layer loss
I0428 20:31:19.592726  3933 net.cpp:408] loss <- ip3
I0428 20:31:19.592734  3933 net.cpp:408] loss <- label
I0428 20:31:19.592744  3933 net.cpp:382] loss -> loss
I0428 20:31:19.592772  3933 layer_factory.hpp:77] Creating layer loss
I0428 20:31:19.593081  3933 net.cpp:124] Setting up loss
I0428 20:31:19.593096  3933 net.cpp:131] Top shape: (1)
I0428 20:31:19.593101  3933 net.cpp:134]     with loss weight 1
I0428 20:31:19.593123  3933 net.cpp:139] Memory required for data: 18873604
I0428 20:31:19.593130  3933 net.cpp:200] loss needs backward computation.
I0428 20:31:19.593137  3933 net.cpp:200] relu3 needs backward computation.
I0428 20:31:19.593143  3933 net.cpp:200] ip3 needs backward computation.
I0428 20:31:19.593149  3933 net.cpp:200] relu2 needs backward computation.
I0428 20:31:19.593155  3933 net.cpp:200] ip2 needs backward computation.
I0428 20:31:19.593161  3933 net.cpp:200] relu1 needs backward computation.
I0428 20:31:19.593166  3933 net.cpp:200] ip1 needs backward computation.
I0428 20:31:19.593173  3933 net.cpp:200] pool1 needs backward computation.
I0428 20:31:19.593178  3933 net.cpp:200] conv1 needs backward computation.
I0428 20:31:19.593184  3933 net.cpp:200] pool0 needs backward computation.
I0428 20:31:19.593190  3933 net.cpp:200] conv0 needs backward computation.
I0428 20:31:19.593197  3933 net.cpp:202] mnist does not need backward computation.
I0428 20:31:19.593204  3933 net.cpp:244] This network produces output loss
I0428 20:31:19.593222  3933 net.cpp:257] Network initialization done.
I0428 20:31:19.593621  3933 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1553.prototxt
I0428 20:31:19.593660  3933 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:19.593783  3933 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:19.593931  3933 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:19.594002  3933 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:19.594024  3933 net.cpp:86] Creating Layer mnist
I0428 20:31:19.594034  3933 net.cpp:382] mnist -> data
I0428 20:31:19.594048  3933 net.cpp:382] mnist -> label
I0428 20:31:19.594197  3933 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:19.596575  3933 net.cpp:124] Setting up mnist
I0428 20:31:19.596603  3933 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:19.596616  3933 net.cpp:131] Top shape: 100 (100)
I0428 20:31:19.596621  3933 net.cpp:139] Memory required for data: 314000
I0428 20:31:19.596628  3933 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:19.596644  3933 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:19.596652  3933 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:19.596662  3933 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:19.596673  3933 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:19.596758  3933 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:19.596770  3933 net.cpp:131] Top shape: 100 (100)
I0428 20:31:19.596777  3933 net.cpp:131] Top shape: 100 (100)
I0428 20:31:19.596782  3933 net.cpp:139] Memory required for data: 314800
I0428 20:31:19.596789  3933 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:19.596807  3933 net.cpp:86] Creating Layer conv0
I0428 20:31:19.596823  3933 net.cpp:408] conv0 <- data
I0428 20:31:19.596837  3933 net.cpp:382] conv0 -> conv0
I0428 20:31:19.598636  3933 net.cpp:124] Setting up conv0
I0428 20:31:19.598655  3933 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:19.598662  3933 net.cpp:139] Memory required for data: 23354800
I0428 20:31:19.598680  3933 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:19.598693  3933 net.cpp:86] Creating Layer pool0
I0428 20:31:19.598701  3933 net.cpp:408] pool0 <- conv0
I0428 20:31:19.598711  3933 net.cpp:382] pool0 -> pool0
I0428 20:31:19.598764  3933 net.cpp:124] Setting up pool0
I0428 20:31:19.598774  3933 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:19.598780  3933 net.cpp:139] Memory required for data: 29114800
I0428 20:31:19.598786  3933 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:19.598803  3933 net.cpp:86] Creating Layer conv1
I0428 20:31:19.598811  3933 net.cpp:408] conv1 <- pool0
I0428 20:31:19.598824  3933 net.cpp:382] conv1 -> conv1
I0428 20:31:19.600739  3933 net.cpp:124] Setting up conv1
I0428 20:31:19.600759  3933 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:19.600766  3933 net.cpp:139] Memory required for data: 29370800
I0428 20:31:19.600782  3933 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:19.600793  3933 net.cpp:86] Creating Layer pool1
I0428 20:31:19.600800  3933 net.cpp:408] pool1 <- conv1
I0428 20:31:19.600821  3933 net.cpp:382] pool1 -> pool1
I0428 20:31:19.600873  3933 net.cpp:124] Setting up pool1
I0428 20:31:19.600884  3933 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:19.600891  3933 net.cpp:139] Memory required for data: 29434800
I0428 20:31:19.600898  3933 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:19.600911  3933 net.cpp:86] Creating Layer ip1
I0428 20:31:19.600917  3933 net.cpp:408] ip1 <- pool1
I0428 20:31:19.600929  3933 net.cpp:382] ip1 -> ip1
I0428 20:31:19.601122  3933 net.cpp:124] Setting up ip1
I0428 20:31:19.601145  3933 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:19.601151  3933 net.cpp:139] Memory required for data: 29454800
I0428 20:31:19.601166  3933 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:19.601176  3933 net.cpp:86] Creating Layer relu1
I0428 20:31:19.601184  3933 net.cpp:408] relu1 <- ip1
I0428 20:31:19.601193  3933 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:19.601402  3933 net.cpp:124] Setting up relu1
I0428 20:31:19.601415  3933 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:19.601421  3933 net.cpp:139] Memory required for data: 29474800
I0428 20:31:19.601428  3933 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:19.601440  3933 net.cpp:86] Creating Layer ip2
I0428 20:31:19.601447  3933 net.cpp:408] ip2 <- ip1
I0428 20:31:19.601459  3933 net.cpp:382] ip2 -> ip2
I0428 20:31:19.601655  3933 net.cpp:124] Setting up ip2
I0428 20:31:19.601665  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.601670  3933 net.cpp:139] Memory required for data: 29478800
I0428 20:31:19.601681  3933 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:19.601691  3933 net.cpp:86] Creating Layer relu2
I0428 20:31:19.601702  3933 net.cpp:408] relu2 <- ip2
I0428 20:31:19.601713  3933 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:19.601912  3933 net.cpp:124] Setting up relu2
I0428 20:31:19.601924  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.601938  3933 net.cpp:139] Memory required for data: 29482800
I0428 20:31:19.601944  3933 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:19.601958  3933 net.cpp:86] Creating Layer ip3
I0428 20:31:19.601966  3933 net.cpp:408] ip3 <- ip2
I0428 20:31:19.601976  3933 net.cpp:382] ip3 -> ip3
I0428 20:31:19.602103  3933 net.cpp:124] Setting up ip3
I0428 20:31:19.602114  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.602120  3933 net.cpp:139] Memory required for data: 29486800
I0428 20:31:19.602135  3933 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:19.602145  3933 net.cpp:86] Creating Layer relu3
I0428 20:31:19.602151  3933 net.cpp:408] relu3 <- ip3
I0428 20:31:19.602162  3933 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:19.603099  3933 net.cpp:124] Setting up relu3
I0428 20:31:19.603116  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.603127  3933 net.cpp:139] Memory required for data: 29490800
I0428 20:31:19.603132  3933 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:19.603144  3933 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:19.603152  3933 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:19.603160  3933 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:19.603173  3933 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:19.603230  3933 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:19.603240  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.603248  3933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:19.603255  3933 net.cpp:139] Memory required for data: 29498800
I0428 20:31:19.603263  3933 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:19.603272  3933 net.cpp:86] Creating Layer accuracy
I0428 20:31:19.603279  3933 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:19.603288  3933 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:19.603299  3933 net.cpp:382] accuracy -> accuracy
I0428 20:31:19.603313  3933 net.cpp:124] Setting up accuracy
I0428 20:31:19.603323  3933 net.cpp:131] Top shape: (1)
I0428 20:31:19.603329  3933 net.cpp:139] Memory required for data: 29498804
I0428 20:31:19.603337  3933 layer_factory.hpp:77] Creating layer loss
I0428 20:31:19.603344  3933 net.cpp:86] Creating Layer loss
I0428 20:31:19.603353  3933 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:19.603359  3933 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:19.603370  3933 net.cpp:382] loss -> loss
I0428 20:31:19.603382  3933 layer_factory.hpp:77] Creating layer loss
I0428 20:31:19.603682  3933 net.cpp:124] Setting up loss
I0428 20:31:19.603696  3933 net.cpp:131] Top shape: (1)
I0428 20:31:19.603703  3933 net.cpp:134]     with loss weight 1
I0428 20:31:19.603729  3933 net.cpp:139] Memory required for data: 29498808
I0428 20:31:19.603737  3933 net.cpp:200] loss needs backward computation.
I0428 20:31:19.603745  3933 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:19.603754  3933 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:19.603760  3933 net.cpp:200] relu3 needs backward computation.
I0428 20:31:19.603766  3933 net.cpp:200] ip3 needs backward computation.
I0428 20:31:19.603772  3933 net.cpp:200] relu2 needs backward computation.
I0428 20:31:19.603778  3933 net.cpp:200] ip2 needs backward computation.
I0428 20:31:19.603785  3933 net.cpp:200] relu1 needs backward computation.
I0428 20:31:19.603790  3933 net.cpp:200] ip1 needs backward computation.
I0428 20:31:19.603796  3933 net.cpp:200] pool1 needs backward computation.
I0428 20:31:19.603802  3933 net.cpp:200] conv1 needs backward computation.
I0428 20:31:19.603809  3933 net.cpp:200] pool0 needs backward computation.
I0428 20:31:19.603816  3933 net.cpp:200] conv0 needs backward computation.
I0428 20:31:19.603823  3933 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:19.603834  3933 net.cpp:202] mnist does not need backward computation.
I0428 20:31:19.603840  3933 net.cpp:244] This network produces output accuracy
I0428 20:31:19.603850  3933 net.cpp:244] This network produces output loss
I0428 20:31:19.603871  3933 net.cpp:257] Network initialization done.
I0428 20:31:19.603929  3933 solver.cpp:56] Solver scaffolding done.
I0428 20:31:19.604383  3933 caffe.cpp:248] Starting Optimization
I0428 20:31:19.604391  3933 solver.cpp:273] Solving LeNet
I0428 20:31:19.604396  3933 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:19.605298  3933 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:19.706692  3942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:19.709398  3933 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 20:31:19.709429  3933 solver.cpp:398]     Test net output #1: loss = 2.3129 (* 1 = 2.3129 loss)
I0428 20:31:19.714340  3933 solver.cpp:219] Iteration 0 (0 iter/s, 0.109899s/100 iters), loss = 2.31195
I0428 20:31:19.714375  3933 solver.cpp:238]     Train net output #0: loss = 2.31195 (* 1 = 2.31195 loss)
I0428 20:31:19.714396  3933 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:19.938725  3933 solver.cpp:219] Iteration 100 (445.787 iter/s, 0.224323s/100 iters), loss = 1.06804
I0428 20:31:19.938781  3933 solver.cpp:238]     Train net output #0: loss = 1.06804 (* 1 = 1.06804 loss)
I0428 20:31:19.938796  3933 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:20.167697  3933 solver.cpp:219] Iteration 200 (436.872 iter/s, 0.2289s/100 iters), loss = 0.356012
I0428 20:31:20.167747  3933 solver.cpp:238]     Train net output #0: loss = 0.356012 (* 1 = 0.356012 loss)
I0428 20:31:20.167759  3933 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:20.393126  3933 solver.cpp:219] Iteration 300 (443.732 iter/s, 0.225361s/100 iters), loss = 0.297428
I0428 20:31:20.393174  3933 solver.cpp:238]     Train net output #0: loss = 0.297428 (* 1 = 0.297428 loss)
I0428 20:31:20.393187  3933 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:20.618957  3933 solver.cpp:219] Iteration 400 (442.938 iter/s, 0.225765s/100 iters), loss = 0.149485
I0428 20:31:20.619002  3933 solver.cpp:238]     Train net output #0: loss = 0.149485 (* 1 = 0.149485 loss)
I0428 20:31:20.619014  3933 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:20.839610  3933 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:20.942706  3942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:20.945492  3933 solver.cpp:398]     Test net output #0: accuracy = 0.9575
I0428 20:31:20.945520  3933 solver.cpp:398]     Test net output #1: loss = 0.139311 (* 1 = 0.139311 loss)
I0428 20:31:20.947505  3933 solver.cpp:219] Iteration 500 (304.428 iter/s, 0.328485s/100 iters), loss = 0.149113
I0428 20:31:20.947532  3933 solver.cpp:238]     Train net output #0: loss = 0.149113 (* 1 = 0.149113 loss)
I0428 20:31:20.947558  3933 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:21.159214  3933 solver.cpp:219] Iteration 600 (472.445 iter/s, 0.211665s/100 iters), loss = 0.055745
I0428 20:31:21.159252  3933 solver.cpp:238]     Train net output #0: loss = 0.0557449 (* 1 = 0.0557449 loss)
I0428 20:31:21.159262  3933 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:21.375192  3933 solver.cpp:219] Iteration 700 (463.131 iter/s, 0.215922s/100 iters), loss = 0.186872
I0428 20:31:21.375233  3933 solver.cpp:238]     Train net output #0: loss = 0.186872 (* 1 = 0.186872 loss)
I0428 20:31:21.375243  3933 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:21.596720  3933 solver.cpp:219] Iteration 800 (451.537 iter/s, 0.221466s/100 iters), loss = 0.337392
I0428 20:31:21.596779  3933 solver.cpp:238]     Train net output #0: loss = 0.337392 (* 1 = 0.337392 loss)
I0428 20:31:21.596793  3933 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:21.825254  3933 solver.cpp:219] Iteration 900 (437.716 iter/s, 0.228458s/100 iters), loss = 0.126793
I0428 20:31:21.825306  3933 solver.cpp:238]     Train net output #0: loss = 0.126793 (* 1 = 0.126793 loss)
I0428 20:31:21.825320  3933 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:21.897598  3941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:22.038856  3933 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:22.041379  3933 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:22.042923  3933 solver.cpp:311] Iteration 1000, loss = 0.107644
I0428 20:31:22.042949  3933 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:22.146780  3942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:22.149551  3933 solver.cpp:398]     Test net output #0: accuracy = 0.9743
I0428 20:31:22.149574  3933 solver.cpp:398]     Test net output #1: loss = 0.0859031 (* 1 = 0.0859031 loss)
I0428 20:31:22.149595  3933 solver.cpp:316] Optimization Done.
I0428 20:31:22.149600  3933 caffe.cpp:259] Optimization Done.
