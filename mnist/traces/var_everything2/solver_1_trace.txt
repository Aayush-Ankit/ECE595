I0428 19:27:43.317592 21383 caffe.cpp:218] Using GPUs 0
I0428 19:27:43.358132 21383 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:27:43.873316 21383 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:27:43.873464 21383 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1.prototxt
I0428 19:27:43.873708 21383 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:27:43.873723 21383 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:27:43.873785 21383 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:27:43.873853 21383 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:43.873963 21383 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:27:43.873996 21383 net.cpp:86] Creating Layer mnist
I0428 19:27:43.874007 21383 net.cpp:382] mnist -> data
I0428 19:27:43.874038 21383 net.cpp:382] mnist -> label
I0428 19:27:43.875150 21383 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:27:43.877640 21383 net.cpp:124] Setting up mnist
I0428 19:27:43.877660 21383 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:27:43.877671 21383 net.cpp:131] Top shape: 64 (64)
I0428 19:27:43.877676 21383 net.cpp:139] Memory required for data: 200960
I0428 19:27:43.877687 21383 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:43.877706 21383 net.cpp:86] Creating Layer ip1
I0428 19:27:43.877720 21383 net.cpp:408] ip1 <- data
I0428 19:27:43.877739 21383 net.cpp:382] ip1 -> ip1
I0428 19:27:43.878957 21383 net.cpp:124] Setting up ip1
I0428 19:27:43.878973 21383 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:43.878980 21383 net.cpp:139] Memory required for data: 203520
I0428 19:27:43.879007 21383 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:43.879024 21383 net.cpp:86] Creating Layer relu1
I0428 19:27:43.879034 21383 net.cpp:408] relu1 <- ip1
I0428 19:27:43.879045 21383 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:44.154999 21383 net.cpp:124] Setting up relu1
I0428 19:27:44.155030 21383 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:44.155035 21383 net.cpp:139] Memory required for data: 206080
I0428 19:27:44.155041 21383 layer_factory.hpp:77] Creating layer loss
I0428 19:27:44.155055 21383 net.cpp:86] Creating Layer loss
I0428 19:27:44.155061 21383 net.cpp:408] loss <- ip1
I0428 19:27:44.155069 21383 net.cpp:408] loss <- label
I0428 19:27:44.155078 21383 net.cpp:382] loss -> loss
I0428 19:27:44.155102 21383 layer_factory.hpp:77] Creating layer loss
I0428 19:27:44.156880 21383 net.cpp:124] Setting up loss
I0428 19:27:44.156895 21383 net.cpp:131] Top shape: (1)
I0428 19:27:44.156903 21383 net.cpp:134]     with loss weight 1
I0428 19:27:44.156924 21383 net.cpp:139] Memory required for data: 206084
I0428 19:27:44.156929 21383 net.cpp:200] loss needs backward computation.
I0428 19:27:44.156936 21383 net.cpp:200] relu1 needs backward computation.
I0428 19:27:44.156942 21383 net.cpp:200] ip1 needs backward computation.
I0428 19:27:44.156971 21383 net.cpp:202] mnist does not need backward computation.
I0428 19:27:44.156977 21383 net.cpp:244] This network produces output loss
I0428 19:27:44.156988 21383 net.cpp:257] Network initialization done.
I0428 19:27:44.157218 21383 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1.prototxt
I0428 19:27:44.157243 21383 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:27:44.157300 21383 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:27:44.157400 21383 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:44.157456 21383 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:27:44.157474 21383 net.cpp:86] Creating Layer mnist
I0428 19:27:44.157480 21383 net.cpp:382] mnist -> data
I0428 19:27:44.157492 21383 net.cpp:382] mnist -> label
I0428 19:27:44.157603 21383 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:27:44.159543 21383 net.cpp:124] Setting up mnist
I0428 19:27:44.159579 21383 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:27:44.159600 21383 net.cpp:131] Top shape: 100 (100)
I0428 19:27:44.159621 21383 net.cpp:139] Memory required for data: 314000
I0428 19:27:44.159628 21383 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:27:44.159643 21383 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:27:44.159653 21383 net.cpp:408] label_mnist_1_split <- label
I0428 19:27:44.159662 21383 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:27:44.159673 21383 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:27:44.159751 21383 net.cpp:124] Setting up label_mnist_1_split
I0428 19:27:44.159759 21383 net.cpp:131] Top shape: 100 (100)
I0428 19:27:44.159766 21383 net.cpp:131] Top shape: 100 (100)
I0428 19:27:44.159771 21383 net.cpp:139] Memory required for data: 314800
I0428 19:27:44.159776 21383 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:44.159787 21383 net.cpp:86] Creating Layer ip1
I0428 19:27:44.159793 21383 net.cpp:408] ip1 <- data
I0428 19:27:44.159801 21383 net.cpp:382] ip1 -> ip1
I0428 19:27:44.159953 21383 net.cpp:124] Setting up ip1
I0428 19:27:44.159962 21383 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:44.159967 21383 net.cpp:139] Memory required for data: 318800
I0428 19:27:44.159982 21383 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:44.159991 21383 net.cpp:86] Creating Layer relu1
I0428 19:27:44.159997 21383 net.cpp:408] relu1 <- ip1
I0428 19:27:44.160004 21383 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:44.160171 21383 net.cpp:124] Setting up relu1
I0428 19:27:44.160181 21383 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:44.160187 21383 net.cpp:139] Memory required for data: 322800
I0428 19:27:44.160192 21383 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:27:44.160200 21383 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:27:44.160205 21383 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:27:44.160213 21383 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:27:44.160223 21383 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:27:44.160264 21383 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:27:44.160281 21383 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:44.160290 21383 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:44.160295 21383 net.cpp:139] Memory required for data: 330800
I0428 19:27:44.160300 21383 layer_factory.hpp:77] Creating layer accuracy
I0428 19:27:44.160312 21383 net.cpp:86] Creating Layer accuracy
I0428 19:27:44.160334 21383 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:27:44.160341 21383 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:27:44.160364 21383 net.cpp:382] accuracy -> accuracy
I0428 19:27:44.160377 21383 net.cpp:124] Setting up accuracy
I0428 19:27:44.160385 21383 net.cpp:131] Top shape: (1)
I0428 19:27:44.160390 21383 net.cpp:139] Memory required for data: 330804
I0428 19:27:44.160395 21383 layer_factory.hpp:77] Creating layer loss
I0428 19:27:44.160403 21383 net.cpp:86] Creating Layer loss
I0428 19:27:44.160409 21383 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:27:44.160415 21383 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:27:44.160423 21383 net.cpp:382] loss -> loss
I0428 19:27:44.160435 21383 layer_factory.hpp:77] Creating layer loss
I0428 19:27:44.160714 21383 net.cpp:124] Setting up loss
I0428 19:27:44.160724 21383 net.cpp:131] Top shape: (1)
I0428 19:27:44.160729 21383 net.cpp:134]     with loss weight 1
I0428 19:27:44.160738 21383 net.cpp:139] Memory required for data: 330808
I0428 19:27:44.160743 21383 net.cpp:200] loss needs backward computation.
I0428 19:27:44.160749 21383 net.cpp:202] accuracy does not need backward computation.
I0428 19:27:44.160755 21383 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:27:44.160760 21383 net.cpp:200] relu1 needs backward computation.
I0428 19:27:44.160765 21383 net.cpp:200] ip1 needs backward computation.
I0428 19:27:44.160770 21383 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:27:44.160778 21383 net.cpp:202] mnist does not need backward computation.
I0428 19:27:44.160782 21383 net.cpp:244] This network produces output accuracy
I0428 19:27:44.160789 21383 net.cpp:244] This network produces output loss
I0428 19:27:44.160799 21383 net.cpp:257] Network initialization done.
I0428 19:27:44.160835 21383 solver.cpp:56] Solver scaffolding done.
I0428 19:27:44.160917 21383 caffe.cpp:248] Starting Optimization
I0428 19:27:44.160923 21383 solver.cpp:273] Solving LeNet
I0428 19:27:44.160928 21383 solver.cpp:274] Learning Rate Policy: inv
I0428 19:27:44.160977 21383 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:27:44.161037 21383 blocking_queue.cpp:49] Waiting for data
I0428 19:27:44.238373 21393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:44.238811 21383 solver.cpp:398]     Test net output #0: accuracy = 0.0695
I0428 19:27:44.238847 21383 solver.cpp:398]     Test net output #1: loss = 2.33859 (* 1 = 2.33859 loss)
I0428 19:27:44.239431 21383 solver.cpp:219] Iteration 0 (2.90105 iter/s, 0.0784712s/100 iters), loss = 2.30956
I0428 19:27:44.239473 21383 solver.cpp:238]     Train net output #0: loss = 2.30956 (* 1 = 2.30956 loss)
I0428 19:27:44.239502 21383 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:27:44.296807 21383 solver.cpp:219] Iteration 100 (1744.3 iter/s, 0.0573297s/100 iters), loss = 1.34482
I0428 19:27:44.296854 21383 solver.cpp:238]     Train net output #0: loss = 1.34482 (* 1 = 1.34482 loss)
I0428 19:27:44.296869 21383 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:27:44.343662 21383 solver.cpp:219] Iteration 200 (2136.52 iter/s, 0.046805s/100 iters), loss = 1.23256
I0428 19:27:44.343695 21383 solver.cpp:238]     Train net output #0: loss = 1.23256 (* 1 = 1.23256 loss)
I0428 19:27:44.343708 21383 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:27:44.384536 21383 solver.cpp:219] Iteration 300 (2448.75 iter/s, 0.0408371s/100 iters), loss = 1.368
I0428 19:27:44.384565 21383 solver.cpp:238]     Train net output #0: loss = 1.368 (* 1 = 1.368 loss)
I0428 19:27:44.384575 21383 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:27:44.424728 21383 solver.cpp:219] Iteration 400 (2490.09 iter/s, 0.0401592s/100 iters), loss = 0.743914
I0428 19:27:44.424772 21383 solver.cpp:238]     Train net output #0: loss = 0.743914 (* 1 = 0.743914 loss)
I0428 19:27:44.424792 21383 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:27:44.465462 21383 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:27:44.525135 21393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:44.525557 21383 solver.cpp:398]     Test net output #0: accuracy = 0.7042
I0428 19:27:44.525594 21383 solver.cpp:398]     Test net output #1: loss = 0.883461 (* 1 = 0.883461 loss)
I0428 19:27:44.526064 21383 solver.cpp:219] Iteration 500 (987.324 iter/s, 0.101284s/100 iters), loss = 0.911156
I0428 19:27:44.526104 21383 solver.cpp:238]     Train net output #0: loss = 0.911156 (* 1 = 0.911156 loss)
I0428 19:27:44.526118 21383 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:27:44.576863 21383 solver.cpp:219] Iteration 600 (1970.54 iter/s, 0.0507474s/100 iters), loss = 0.887839
I0428 19:27:44.576901 21383 solver.cpp:238]     Train net output #0: loss = 0.887839 (* 1 = 0.887839 loss)
I0428 19:27:44.576910 21383 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:27:44.619642 21383 solver.cpp:219] Iteration 700 (2340.3 iter/s, 0.0427295s/100 iters), loss = 0.729906
I0428 19:27:44.619676 21383 solver.cpp:238]     Train net output #0: loss = 0.729906 (* 1 = 0.729906 loss)
I0428 19:27:44.619684 21383 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:27:44.669016 21383 solver.cpp:219] Iteration 800 (2027.28 iter/s, 0.0493271s/100 iters), loss = 0.930634
I0428 19:27:44.669060 21383 solver.cpp:238]     Train net output #0: loss = 0.930634 (* 1 = 0.930634 loss)
I0428 19:27:44.669070 21383 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:27:44.697422 21383 blocking_queue.cpp:49] Waiting for data
I0428 19:27:44.721868 21383 solver.cpp:219] Iteration 900 (1894.21 iter/s, 0.0527923s/100 iters), loss = 0.933766
I0428 19:27:44.721928 21383 solver.cpp:238]     Train net output #0: loss = 0.933766 (* 1 = 0.933766 loss)
I0428 19:27:44.721942 21383 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:27:44.738167 21392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:44.764993 21383 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:27:44.765612 21383 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:27:44.766095 21383 solver.cpp:311] Iteration 1000, loss = 0.809351
I0428 19:27:44.766124 21383 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:27:44.818363 21393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:44.818764 21383 solver.cpp:398]     Test net output #0: accuracy = 0.7109
I0428 19:27:44.818802 21383 solver.cpp:398]     Test net output #1: loss = 0.827183 (* 1 = 0.827183 loss)
I0428 19:27:44.818810 21383 solver.cpp:316] Optimization Done.
I0428 19:27:44.818815 21383 caffe.cpp:259] Optimization Done.
