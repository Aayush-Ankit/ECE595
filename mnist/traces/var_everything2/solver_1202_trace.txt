I0428 20:13:35.182569 32487 caffe.cpp:218] Using GPUs 0
I0428 20:13:35.220252 32487 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:35.731708 32487 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1202.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:35.731848 32487 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1202.prototxt
I0428 20:13:35.732261 32487 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:35.732281 32487 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:35.732384 32487 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:35.732465 32487 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:35.732559 32487 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:35.732583 32487 net.cpp:86] Creating Layer mnist
I0428 20:13:35.732592 32487 net.cpp:382] mnist -> data
I0428 20:13:35.732614 32487 net.cpp:382] mnist -> label
I0428 20:13:35.733705 32487 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:35.736194 32487 net.cpp:124] Setting up mnist
I0428 20:13:35.736212 32487 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:35.736219 32487 net.cpp:131] Top shape: 64 (64)
I0428 20:13:35.736222 32487 net.cpp:139] Memory required for data: 200960
I0428 20:13:35.736230 32487 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:35.736276 32487 net.cpp:86] Creating Layer conv0
I0428 20:13:35.736299 32487 net.cpp:408] conv0 <- data
I0428 20:13:35.736311 32487 net.cpp:382] conv0 -> conv0
I0428 20:13:35.991809 32487 net.cpp:124] Setting up conv0
I0428 20:13:35.991850 32487 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:35.991855 32487 net.cpp:139] Memory required for data: 3887360
I0428 20:13:35.991883 32487 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:35.991896 32487 net.cpp:86] Creating Layer pool0
I0428 20:13:35.991900 32487 net.cpp:408] pool0 <- conv0
I0428 20:13:35.991922 32487 net.cpp:382] pool0 -> pool0
I0428 20:13:35.991967 32487 net.cpp:124] Setting up pool0
I0428 20:13:35.991972 32487 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:35.991976 32487 net.cpp:139] Memory required for data: 4808960
I0428 20:13:35.991978 32487 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:35.991991 32487 net.cpp:86] Creating Layer conv1
I0428 20:13:35.991996 32487 net.cpp:408] conv1 <- pool0
I0428 20:13:35.991999 32487 net.cpp:382] conv1 -> conv1
I0428 20:13:35.994324 32487 net.cpp:124] Setting up conv1
I0428 20:13:35.994338 32487 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:35.994341 32487 net.cpp:139] Memory required for data: 6447360
I0428 20:13:35.994349 32487 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:35.994356 32487 net.cpp:86] Creating Layer pool1
I0428 20:13:35.994359 32487 net.cpp:408] pool1 <- conv1
I0428 20:13:35.994364 32487 net.cpp:382] pool1 -> pool1
I0428 20:13:35.994413 32487 net.cpp:124] Setting up pool1
I0428 20:13:35.994418 32487 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:35.994421 32487 net.cpp:139] Memory required for data: 6856960
I0428 20:13:35.994424 32487 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:35.994431 32487 net.cpp:86] Creating Layer ip1
I0428 20:13:35.994433 32487 net.cpp:408] ip1 <- pool1
I0428 20:13:35.994437 32487 net.cpp:382] ip1 -> ip1
I0428 20:13:35.995877 32487 net.cpp:124] Setting up ip1
I0428 20:13:35.995889 32487 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:35.995908 32487 net.cpp:139] Memory required for data: 6869760
I0428 20:13:35.995915 32487 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:35.995921 32487 net.cpp:86] Creating Layer relu1
I0428 20:13:35.995924 32487 net.cpp:408] relu1 <- ip1
I0428 20:13:35.995929 32487 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:35.996091 32487 net.cpp:124] Setting up relu1
I0428 20:13:35.996100 32487 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:35.996104 32487 net.cpp:139] Memory required for data: 6882560
I0428 20:13:35.996106 32487 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:35.996114 32487 net.cpp:86] Creating Layer ip2
I0428 20:13:35.996116 32487 net.cpp:408] ip2 <- ip1
I0428 20:13:35.996120 32487 net.cpp:382] ip2 -> ip2
I0428 20:13:35.996245 32487 net.cpp:124] Setting up ip2
I0428 20:13:35.996253 32487 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:35.996255 32487 net.cpp:139] Memory required for data: 6885120
I0428 20:13:35.996261 32487 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:35.996268 32487 net.cpp:86] Creating Layer relu2
I0428 20:13:35.996270 32487 net.cpp:408] relu2 <- ip2
I0428 20:13:35.996274 32487 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:35.997076 32487 net.cpp:124] Setting up relu2
I0428 20:13:35.997104 32487 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:35.997108 32487 net.cpp:139] Memory required for data: 6887680
I0428 20:13:35.997112 32487 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:35.997118 32487 net.cpp:86] Creating Layer ip3
I0428 20:13:35.997123 32487 net.cpp:408] ip3 <- ip2
I0428 20:13:35.997143 32487 net.cpp:382] ip3 -> ip3
I0428 20:13:35.997252 32487 net.cpp:124] Setting up ip3
I0428 20:13:35.997261 32487 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:35.997263 32487 net.cpp:139] Memory required for data: 6890240
I0428 20:13:35.997272 32487 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:35.997277 32487 net.cpp:86] Creating Layer relu3
I0428 20:13:35.997279 32487 net.cpp:408] relu3 <- ip3
I0428 20:13:35.997283 32487 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:35.997445 32487 net.cpp:124] Setting up relu3
I0428 20:13:35.997454 32487 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:35.997457 32487 net.cpp:139] Memory required for data: 6892800
I0428 20:13:35.997460 32487 layer_factory.hpp:77] Creating layer loss
I0428 20:13:35.997467 32487 net.cpp:86] Creating Layer loss
I0428 20:13:35.997469 32487 net.cpp:408] loss <- ip3
I0428 20:13:35.997473 32487 net.cpp:408] loss <- label
I0428 20:13:35.997479 32487 net.cpp:382] loss -> loss
I0428 20:13:35.997493 32487 layer_factory.hpp:77] Creating layer loss
I0428 20:13:35.997743 32487 net.cpp:124] Setting up loss
I0428 20:13:35.997752 32487 net.cpp:131] Top shape: (1)
I0428 20:13:35.997756 32487 net.cpp:134]     with loss weight 1
I0428 20:13:35.997769 32487 net.cpp:139] Memory required for data: 6892804
I0428 20:13:35.997772 32487 net.cpp:200] loss needs backward computation.
I0428 20:13:35.997776 32487 net.cpp:200] relu3 needs backward computation.
I0428 20:13:35.997779 32487 net.cpp:200] ip3 needs backward computation.
I0428 20:13:35.997782 32487 net.cpp:200] relu2 needs backward computation.
I0428 20:13:35.997784 32487 net.cpp:200] ip2 needs backward computation.
I0428 20:13:35.997788 32487 net.cpp:200] relu1 needs backward computation.
I0428 20:13:35.997790 32487 net.cpp:200] ip1 needs backward computation.
I0428 20:13:35.997793 32487 net.cpp:200] pool1 needs backward computation.
I0428 20:13:35.997797 32487 net.cpp:200] conv1 needs backward computation.
I0428 20:13:35.997799 32487 net.cpp:200] pool0 needs backward computation.
I0428 20:13:35.997802 32487 net.cpp:200] conv0 needs backward computation.
I0428 20:13:35.997807 32487 net.cpp:202] mnist does not need backward computation.
I0428 20:13:35.997808 32487 net.cpp:244] This network produces output loss
I0428 20:13:35.997817 32487 net.cpp:257] Network initialization done.
I0428 20:13:35.998170 32487 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1202.prototxt
I0428 20:13:35.998210 32487 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:35.998309 32487 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:35.998404 32487 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:35.998450 32487 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:35.998461 32487 net.cpp:86] Creating Layer mnist
I0428 20:13:35.998466 32487 net.cpp:382] mnist -> data
I0428 20:13:35.998473 32487 net.cpp:382] mnist -> label
I0428 20:13:35.998556 32487 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:35.999629 32487 net.cpp:124] Setting up mnist
I0428 20:13:35.999655 32487 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:35.999660 32487 net.cpp:131] Top shape: 100 (100)
I0428 20:13:35.999663 32487 net.cpp:139] Memory required for data: 314000
I0428 20:13:35.999666 32487 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:35.999673 32487 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:35.999691 32487 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:35.999696 32487 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:35.999702 32487 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:35.999773 32487 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:35.999779 32487 net.cpp:131] Top shape: 100 (100)
I0428 20:13:35.999783 32487 net.cpp:131] Top shape: 100 (100)
I0428 20:13:35.999785 32487 net.cpp:139] Memory required for data: 314800
I0428 20:13:35.999788 32487 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:35.999795 32487 net.cpp:86] Creating Layer conv0
I0428 20:13:35.999799 32487 net.cpp:408] conv0 <- data
I0428 20:13:35.999804 32487 net.cpp:382] conv0 -> conv0
I0428 20:13:36.001415 32487 net.cpp:124] Setting up conv0
I0428 20:13:36.001428 32487 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:36.001432 32487 net.cpp:139] Memory required for data: 6074800
I0428 20:13:36.001441 32487 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:36.001461 32487 net.cpp:86] Creating Layer pool0
I0428 20:13:36.001464 32487 net.cpp:408] pool0 <- conv0
I0428 20:13:36.001484 32487 net.cpp:382] pool0 -> pool0
I0428 20:13:36.001518 32487 net.cpp:124] Setting up pool0
I0428 20:13:36.001523 32487 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:36.001526 32487 net.cpp:139] Memory required for data: 7514800
I0428 20:13:36.001529 32487 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:36.001538 32487 net.cpp:86] Creating Layer conv1
I0428 20:13:36.001540 32487 net.cpp:408] conv1 <- pool0
I0428 20:13:36.001544 32487 net.cpp:382] conv1 -> conv1
I0428 20:13:36.003520 32487 net.cpp:124] Setting up conv1
I0428 20:13:36.003533 32487 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:36.003538 32487 net.cpp:139] Memory required for data: 10074800
I0428 20:13:36.003547 32487 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:36.003553 32487 net.cpp:86] Creating Layer pool1
I0428 20:13:36.003557 32487 net.cpp:408] pool1 <- conv1
I0428 20:13:36.003562 32487 net.cpp:382] pool1 -> pool1
I0428 20:13:36.003607 32487 net.cpp:124] Setting up pool1
I0428 20:13:36.003612 32487 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:36.003621 32487 net.cpp:139] Memory required for data: 10714800
I0428 20:13:36.003624 32487 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:36.003630 32487 net.cpp:86] Creating Layer ip1
I0428 20:13:36.003633 32487 net.cpp:408] ip1 <- pool1
I0428 20:13:36.003638 32487 net.cpp:382] ip1 -> ip1
I0428 20:13:36.004247 32487 net.cpp:124] Setting up ip1
I0428 20:13:36.004257 32487 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:36.004271 32487 net.cpp:139] Memory required for data: 10734800
I0428 20:13:36.004278 32487 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:36.004292 32487 net.cpp:86] Creating Layer relu1
I0428 20:13:36.004295 32487 net.cpp:408] relu1 <- ip1
I0428 20:13:36.004300 32487 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:36.004523 32487 net.cpp:124] Setting up relu1
I0428 20:13:36.004531 32487 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:36.004535 32487 net.cpp:139] Memory required for data: 10754800
I0428 20:13:36.004539 32487 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:36.004545 32487 net.cpp:86] Creating Layer ip2
I0428 20:13:36.004549 32487 net.cpp:408] ip2 <- ip1
I0428 20:13:36.004554 32487 net.cpp:382] ip2 -> ip2
I0428 20:13:36.004684 32487 net.cpp:124] Setting up ip2
I0428 20:13:36.004693 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.004695 32487 net.cpp:139] Memory required for data: 10758800
I0428 20:13:36.004721 32487 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:36.004726 32487 net.cpp:86] Creating Layer relu2
I0428 20:13:36.004729 32487 net.cpp:408] relu2 <- ip2
I0428 20:13:36.004734 32487 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:36.004926 32487 net.cpp:124] Setting up relu2
I0428 20:13:36.004936 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.004940 32487 net.cpp:139] Memory required for data: 10762800
I0428 20:13:36.004943 32487 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:36.004948 32487 net.cpp:86] Creating Layer ip3
I0428 20:13:36.004951 32487 net.cpp:408] ip3 <- ip2
I0428 20:13:36.004957 32487 net.cpp:382] ip3 -> ip3
I0428 20:13:36.005053 32487 net.cpp:124] Setting up ip3
I0428 20:13:36.005060 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.005064 32487 net.cpp:139] Memory required for data: 10766800
I0428 20:13:36.005070 32487 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:36.005075 32487 net.cpp:86] Creating Layer relu3
I0428 20:13:36.005079 32487 net.cpp:408] relu3 <- ip3
I0428 20:13:36.005084 32487 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:36.006060 32487 net.cpp:124] Setting up relu3
I0428 20:13:36.006072 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.006080 32487 net.cpp:139] Memory required for data: 10770800
I0428 20:13:36.006089 32487 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:36.006095 32487 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:36.006098 32487 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:36.006109 32487 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:36.006114 32487 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:36.006150 32487 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:36.006156 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.006160 32487 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:36.006162 32487 net.cpp:139] Memory required for data: 10778800
I0428 20:13:36.006181 32487 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:36.006186 32487 net.cpp:86] Creating Layer accuracy
I0428 20:13:36.006189 32487 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:36.006193 32487 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:36.006197 32487 net.cpp:382] accuracy -> accuracy
I0428 20:13:36.006203 32487 net.cpp:124] Setting up accuracy
I0428 20:13:36.006207 32487 net.cpp:131] Top shape: (1)
I0428 20:13:36.006211 32487 net.cpp:139] Memory required for data: 10778804
I0428 20:13:36.006219 32487 layer_factory.hpp:77] Creating layer loss
I0428 20:13:36.006223 32487 net.cpp:86] Creating Layer loss
I0428 20:13:36.006227 32487 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:36.006230 32487 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:36.006237 32487 net.cpp:382] loss -> loss
I0428 20:13:36.006242 32487 layer_factory.hpp:77] Creating layer loss
I0428 20:13:36.006489 32487 net.cpp:124] Setting up loss
I0428 20:13:36.006511 32487 net.cpp:131] Top shape: (1)
I0428 20:13:36.006515 32487 net.cpp:134]     with loss weight 1
I0428 20:13:36.006531 32487 net.cpp:139] Memory required for data: 10778808
I0428 20:13:36.006534 32487 net.cpp:200] loss needs backward computation.
I0428 20:13:36.006538 32487 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:36.006541 32487 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:36.006544 32487 net.cpp:200] relu3 needs backward computation.
I0428 20:13:36.006547 32487 net.cpp:200] ip3 needs backward computation.
I0428 20:13:36.006551 32487 net.cpp:200] relu2 needs backward computation.
I0428 20:13:36.006554 32487 net.cpp:200] ip2 needs backward computation.
I0428 20:13:36.006557 32487 net.cpp:200] relu1 needs backward computation.
I0428 20:13:36.006561 32487 net.cpp:200] ip1 needs backward computation.
I0428 20:13:36.006563 32487 net.cpp:200] pool1 needs backward computation.
I0428 20:13:36.006566 32487 net.cpp:200] conv1 needs backward computation.
I0428 20:13:36.006568 32487 net.cpp:200] pool0 needs backward computation.
I0428 20:13:36.006572 32487 net.cpp:200] conv0 needs backward computation.
I0428 20:13:36.006575 32487 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:36.006579 32487 net.cpp:202] mnist does not need backward computation.
I0428 20:13:36.006582 32487 net.cpp:244] This network produces output accuracy
I0428 20:13:36.006585 32487 net.cpp:244] This network produces output loss
I0428 20:13:36.006595 32487 net.cpp:257] Network initialization done.
I0428 20:13:36.006634 32487 solver.cpp:56] Solver scaffolding done.
I0428 20:13:36.006939 32487 caffe.cpp:248] Starting Optimization
I0428 20:13:36.006947 32487 solver.cpp:273] Solving LeNet
I0428 20:13:36.006949 32487 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:36.007782 32487 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:36.015122 32487 blocking_queue.cpp:49] Waiting for data
I0428 20:13:36.085800 32494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:36.086628 32487 solver.cpp:398]     Test net output #0: accuracy = 0.1012
I0428 20:13:36.086647 32487 solver.cpp:398]     Test net output #1: loss = 2.30569 (* 1 = 2.30569 loss)
I0428 20:13:36.091562 32487 solver.cpp:219] Iteration 0 (-7.56485e-31 iter/s, 0.0845752s/100 iters), loss = 2.2962
I0428 20:13:36.091596 32487 solver.cpp:238]     Train net output #0: loss = 2.2962 (* 1 = 2.2962 loss)
I0428 20:13:36.091606 32487 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:36.257835 32487 solver.cpp:219] Iteration 100 (601.554 iter/s, 0.166236s/100 iters), loss = 0.398928
I0428 20:13:36.257860 32487 solver.cpp:238]     Train net output #0: loss = 0.398928 (* 1 = 0.398928 loss)
I0428 20:13:36.257882 32487 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:36.424785 32487 solver.cpp:219] Iteration 200 (599.122 iter/s, 0.166911s/100 iters), loss = 0.272513
I0428 20:13:36.424816 32487 solver.cpp:238]     Train net output #0: loss = 0.272513 (* 1 = 0.272513 loss)
I0428 20:13:36.424839 32487 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:36.594548 32487 solver.cpp:219] Iteration 300 (589.224 iter/s, 0.169715s/100 iters), loss = 0.270935
I0428 20:13:36.594584 32487 solver.cpp:238]     Train net output #0: loss = 0.270935 (* 1 = 0.270935 loss)
I0428 20:13:36.594593 32487 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:36.795974 32487 solver.cpp:219] Iteration 400 (496.594 iter/s, 0.201372s/100 iters), loss = 0.0935371
I0428 20:13:36.796020 32487 solver.cpp:238]     Train net output #0: loss = 0.0935371 (* 1 = 0.0935371 loss)
I0428 20:13:36.796037 32487 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:37.008028 32487 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:37.082223 32494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:37.084702 32487 solver.cpp:398]     Test net output #0: accuracy = 0.9664
I0428 20:13:37.084727 32487 solver.cpp:398]     Test net output #1: loss = 0.107123 (* 1 = 0.107123 loss)
I0428 20:13:37.086594 32487 solver.cpp:219] Iteration 500 (344.168 iter/s, 0.290556s/100 iters), loss = 0.116037
I0428 20:13:37.086639 32487 solver.cpp:238]     Train net output #0: loss = 0.116037 (* 1 = 0.116037 loss)
I0428 20:13:37.086647 32487 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:37.293187 32487 solver.cpp:219] Iteration 600 (484.199 iter/s, 0.206526s/100 iters), loss = 0.0920892
I0428 20:13:37.293241 32487 solver.cpp:238]     Train net output #0: loss = 0.0920892 (* 1 = 0.0920892 loss)
I0428 20:13:37.293256 32487 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:37.504784 32487 solver.cpp:219] Iteration 700 (472.74 iter/s, 0.211533s/100 iters), loss = 0.112881
I0428 20:13:37.504825 32487 solver.cpp:238]     Train net output #0: loss = 0.112881 (* 1 = 0.112881 loss)
I0428 20:13:37.504834 32487 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:37.714841 32487 solver.cpp:219] Iteration 800 (476.186 iter/s, 0.210002s/100 iters), loss = 0.2354
I0428 20:13:37.714874 32487 solver.cpp:238]     Train net output #0: loss = 0.2354 (* 1 = 0.2354 loss)
I0428 20:13:37.714880 32487 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:37.923101 32487 solver.cpp:219] Iteration 900 (480.28 iter/s, 0.208212s/100 iters), loss = 0.116211
I0428 20:13:37.923133 32487 solver.cpp:238]     Train net output #0: loss = 0.116211 (* 1 = 0.116211 loss)
I0428 20:13:37.923141 32487 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:37.993597 32493 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:38.132542 32487 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:38.136018 32487 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:38.137869 32487 solver.cpp:311] Iteration 1000, loss = 0.120848
I0428 20:13:38.137888 32487 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:38.216135 32494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:38.216951 32487 solver.cpp:398]     Test net output #0: accuracy = 0.9765
I0428 20:13:38.216974 32487 solver.cpp:398]     Test net output #1: loss = 0.0711694 (* 1 = 0.0711694 loss)
I0428 20:13:38.216980 32487 solver.cpp:316] Optimization Done.
I0428 20:13:38.216984 32487 caffe.cpp:259] Optimization Done.
