I0428 20:03:37.064158 30214 caffe.cpp:218] Using GPUs 0
I0428 20:03:37.101524 30214 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:37.613785 30214 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test955.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:37.613934 30214 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test955.prototxt
I0428 20:03:37.614351 30214 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:37.614370 30214 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:37.614475 30214 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:37.614555 30214 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:37.614652 30214 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:37.614677 30214 net.cpp:86] Creating Layer mnist
I0428 20:03:37.614686 30214 net.cpp:382] mnist -> data
I0428 20:03:37.614707 30214 net.cpp:382] mnist -> label
I0428 20:03:37.615808 30214 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:37.618279 30214 net.cpp:124] Setting up mnist
I0428 20:03:37.618297 30214 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:37.618305 30214 net.cpp:131] Top shape: 64 (64)
I0428 20:03:37.618310 30214 net.cpp:139] Memory required for data: 200960
I0428 20:03:37.618317 30214 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:37.618332 30214 net.cpp:86] Creating Layer conv0
I0428 20:03:37.618352 30214 net.cpp:408] conv0 <- data
I0428 20:03:37.618366 30214 net.cpp:382] conv0 -> conv0
I0428 20:03:37.901161 30214 net.cpp:124] Setting up conv0
I0428 20:03:37.901188 30214 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:37.901192 30214 net.cpp:139] Memory required for data: 1675520
I0428 20:03:37.901207 30214 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:37.901219 30214 net.cpp:86] Creating Layer pool0
I0428 20:03:37.901223 30214 net.cpp:408] pool0 <- conv0
I0428 20:03:37.901229 30214 net.cpp:382] pool0 -> pool0
I0428 20:03:37.901283 30214 net.cpp:124] Setting up pool0
I0428 20:03:37.901288 30214 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:37.901291 30214 net.cpp:139] Memory required for data: 2044160
I0428 20:03:37.901293 30214 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:37.901304 30214 net.cpp:86] Creating Layer conv1
I0428 20:03:37.901306 30214 net.cpp:408] conv1 <- pool0
I0428 20:03:37.901310 30214 net.cpp:382] conv1 -> conv1
I0428 20:03:37.903298 30214 net.cpp:124] Setting up conv1
I0428 20:03:37.903329 30214 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:37.903333 30214 net.cpp:139] Memory required for data: 3682560
I0428 20:03:37.903342 30214 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:37.903352 30214 net.cpp:86] Creating Layer pool1
I0428 20:03:37.903355 30214 net.cpp:408] pool1 <- conv1
I0428 20:03:37.903360 30214 net.cpp:382] pool1 -> pool1
I0428 20:03:37.903412 30214 net.cpp:124] Setting up pool1
I0428 20:03:37.903432 30214 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:37.903435 30214 net.cpp:139] Memory required for data: 4092160
I0428 20:03:37.903439 30214 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:37.903445 30214 net.cpp:86] Creating Layer ip1
I0428 20:03:37.903448 30214 net.cpp:408] ip1 <- pool1
I0428 20:03:37.903453 30214 net.cpp:382] ip1 -> ip1
I0428 20:03:37.904567 30214 net.cpp:124] Setting up ip1
I0428 20:03:37.904579 30214 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:37.904597 30214 net.cpp:139] Memory required for data: 4094720
I0428 20:03:37.904605 30214 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:37.904611 30214 net.cpp:86] Creating Layer relu1
I0428 20:03:37.904614 30214 net.cpp:408] relu1 <- ip1
I0428 20:03:37.904619 30214 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:37.904781 30214 net.cpp:124] Setting up relu1
I0428 20:03:37.904790 30214 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:37.904793 30214 net.cpp:139] Memory required for data: 4097280
I0428 20:03:37.904796 30214 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:37.904803 30214 net.cpp:86] Creating Layer ip2
I0428 20:03:37.904805 30214 net.cpp:408] ip2 <- ip1
I0428 20:03:37.904829 30214 net.cpp:382] ip2 -> ip2
I0428 20:03:37.904965 30214 net.cpp:124] Setting up ip2
I0428 20:03:37.904973 30214 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:37.904976 30214 net.cpp:139] Memory required for data: 4110080
I0428 20:03:37.904983 30214 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:37.904989 30214 net.cpp:86] Creating Layer relu2
I0428 20:03:37.904992 30214 net.cpp:408] relu2 <- ip2
I0428 20:03:37.904997 30214 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:37.905870 30214 net.cpp:124] Setting up relu2
I0428 20:03:37.905882 30214 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:37.905901 30214 net.cpp:139] Memory required for data: 4122880
I0428 20:03:37.905905 30214 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:37.905911 30214 net.cpp:86] Creating Layer ip3
I0428 20:03:37.905915 30214 net.cpp:408] ip3 <- ip2
I0428 20:03:37.905920 30214 net.cpp:382] ip3 -> ip3
I0428 20:03:37.906033 30214 net.cpp:124] Setting up ip3
I0428 20:03:37.906041 30214 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:37.906044 30214 net.cpp:139] Memory required for data: 4125440
I0428 20:03:37.906051 30214 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:37.906057 30214 net.cpp:86] Creating Layer relu3
I0428 20:03:37.906059 30214 net.cpp:408] relu3 <- ip3
I0428 20:03:37.906064 30214 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:37.906224 30214 net.cpp:124] Setting up relu3
I0428 20:03:37.906231 30214 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:37.906234 30214 net.cpp:139] Memory required for data: 4128000
I0428 20:03:37.906237 30214 layer_factory.hpp:77] Creating layer loss
I0428 20:03:37.906244 30214 net.cpp:86] Creating Layer loss
I0428 20:03:37.906246 30214 net.cpp:408] loss <- ip3
I0428 20:03:37.906250 30214 net.cpp:408] loss <- label
I0428 20:03:37.906255 30214 net.cpp:382] loss -> loss
I0428 20:03:37.906270 30214 layer_factory.hpp:77] Creating layer loss
I0428 20:03:37.906518 30214 net.cpp:124] Setting up loss
I0428 20:03:37.906527 30214 net.cpp:131] Top shape: (1)
I0428 20:03:37.906530 30214 net.cpp:134]     with loss weight 1
I0428 20:03:37.906544 30214 net.cpp:139] Memory required for data: 4128004
I0428 20:03:37.906548 30214 net.cpp:200] loss needs backward computation.
I0428 20:03:37.906551 30214 net.cpp:200] relu3 needs backward computation.
I0428 20:03:37.906553 30214 net.cpp:200] ip3 needs backward computation.
I0428 20:03:37.906556 30214 net.cpp:200] relu2 needs backward computation.
I0428 20:03:37.906559 30214 net.cpp:200] ip2 needs backward computation.
I0428 20:03:37.906579 30214 net.cpp:200] relu1 needs backward computation.
I0428 20:03:37.906581 30214 net.cpp:200] ip1 needs backward computation.
I0428 20:03:37.906584 30214 net.cpp:200] pool1 needs backward computation.
I0428 20:03:37.906587 30214 net.cpp:200] conv1 needs backward computation.
I0428 20:03:37.906590 30214 net.cpp:200] pool0 needs backward computation.
I0428 20:03:37.906594 30214 net.cpp:200] conv0 needs backward computation.
I0428 20:03:37.906596 30214 net.cpp:202] mnist does not need backward computation.
I0428 20:03:37.906599 30214 net.cpp:244] This network produces output loss
I0428 20:03:37.906608 30214 net.cpp:257] Network initialization done.
I0428 20:03:37.906985 30214 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test955.prototxt
I0428 20:03:37.907042 30214 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:37.907132 30214 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:37.907215 30214 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:37.907259 30214 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:37.907271 30214 net.cpp:86] Creating Layer mnist
I0428 20:03:37.907276 30214 net.cpp:382] mnist -> data
I0428 20:03:37.907284 30214 net.cpp:382] mnist -> label
I0428 20:03:37.907395 30214 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:37.909575 30214 net.cpp:124] Setting up mnist
I0428 20:03:37.909605 30214 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:37.909610 30214 net.cpp:131] Top shape: 100 (100)
I0428 20:03:37.909613 30214 net.cpp:139] Memory required for data: 314000
I0428 20:03:37.909617 30214 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:37.909636 30214 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:37.909639 30214 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:37.909658 30214 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:37.909665 30214 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:37.909782 30214 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:37.909790 30214 net.cpp:131] Top shape: 100 (100)
I0428 20:03:37.909795 30214 net.cpp:131] Top shape: 100 (100)
I0428 20:03:37.909798 30214 net.cpp:139] Memory required for data: 314800
I0428 20:03:37.909801 30214 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:37.909809 30214 net.cpp:86] Creating Layer conv0
I0428 20:03:37.909813 30214 net.cpp:408] conv0 <- data
I0428 20:03:37.909817 30214 net.cpp:382] conv0 -> conv0
I0428 20:03:37.911417 30214 net.cpp:124] Setting up conv0
I0428 20:03:37.911430 30214 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:37.911434 30214 net.cpp:139] Memory required for data: 2618800
I0428 20:03:37.911442 30214 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:37.911448 30214 net.cpp:86] Creating Layer pool0
I0428 20:03:37.911451 30214 net.cpp:408] pool0 <- conv0
I0428 20:03:37.911455 30214 net.cpp:382] pool0 -> pool0
I0428 20:03:37.911487 30214 net.cpp:124] Setting up pool0
I0428 20:03:37.911492 30214 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:37.911495 30214 net.cpp:139] Memory required for data: 3194800
I0428 20:03:37.911497 30214 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:37.911505 30214 net.cpp:86] Creating Layer conv1
I0428 20:03:37.911509 30214 net.cpp:408] conv1 <- pool0
I0428 20:03:37.911512 30214 net.cpp:382] conv1 -> conv1
I0428 20:03:37.913264 30214 net.cpp:124] Setting up conv1
I0428 20:03:37.913278 30214 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:37.913282 30214 net.cpp:139] Memory required for data: 5754800
I0428 20:03:37.913291 30214 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:37.913297 30214 net.cpp:86] Creating Layer pool1
I0428 20:03:37.913307 30214 net.cpp:408] pool1 <- conv1
I0428 20:03:37.913313 30214 net.cpp:382] pool1 -> pool1
I0428 20:03:37.913363 30214 net.cpp:124] Setting up pool1
I0428 20:03:37.913369 30214 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:37.913372 30214 net.cpp:139] Memory required for data: 6394800
I0428 20:03:37.913375 30214 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:37.913381 30214 net.cpp:86] Creating Layer ip1
I0428 20:03:37.913384 30214 net.cpp:408] ip1 <- pool1
I0428 20:03:37.913389 30214 net.cpp:382] ip1 -> ip1
I0428 20:03:37.913579 30214 net.cpp:124] Setting up ip1
I0428 20:03:37.913589 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.913601 30214 net.cpp:139] Memory required for data: 6398800
I0428 20:03:37.913609 30214 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:37.913614 30214 net.cpp:86] Creating Layer relu1
I0428 20:03:37.913616 30214 net.cpp:408] relu1 <- ip1
I0428 20:03:37.913620 30214 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:37.913772 30214 net.cpp:124] Setting up relu1
I0428 20:03:37.913780 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.913784 30214 net.cpp:139] Memory required for data: 6402800
I0428 20:03:37.913787 30214 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:37.913794 30214 net.cpp:86] Creating Layer ip2
I0428 20:03:37.913796 30214 net.cpp:408] ip2 <- ip1
I0428 20:03:37.913801 30214 net.cpp:382] ip2 -> ip2
I0428 20:03:37.913909 30214 net.cpp:124] Setting up ip2
I0428 20:03:37.913916 30214 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:37.913920 30214 net.cpp:139] Memory required for data: 6422800
I0428 20:03:37.913925 30214 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:37.913945 30214 net.cpp:86] Creating Layer relu2
I0428 20:03:37.913949 30214 net.cpp:408] relu2 <- ip2
I0428 20:03:37.913952 30214 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:37.914098 30214 net.cpp:124] Setting up relu2
I0428 20:03:37.914105 30214 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:37.914108 30214 net.cpp:139] Memory required for data: 6442800
I0428 20:03:37.914111 30214 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:37.914116 30214 net.cpp:86] Creating Layer ip3
I0428 20:03:37.914132 30214 net.cpp:408] ip3 <- ip2
I0428 20:03:37.914137 30214 net.cpp:382] ip3 -> ip3
I0428 20:03:37.914288 30214 net.cpp:124] Setting up ip3
I0428 20:03:37.914295 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.914299 30214 net.cpp:139] Memory required for data: 6446800
I0428 20:03:37.914306 30214 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:37.914311 30214 net.cpp:86] Creating Layer relu3
I0428 20:03:37.914314 30214 net.cpp:408] relu3 <- ip3
I0428 20:03:37.914319 30214 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:37.915155 30214 net.cpp:124] Setting up relu3
I0428 20:03:37.915168 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.915171 30214 net.cpp:139] Memory required for data: 6450800
I0428 20:03:37.915174 30214 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:37.915179 30214 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:37.915184 30214 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:37.915189 30214 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:37.915194 30214 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:37.915232 30214 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:37.915237 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.915241 30214 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:37.915244 30214 net.cpp:139] Memory required for data: 6458800
I0428 20:03:37.915246 30214 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:37.915251 30214 net.cpp:86] Creating Layer accuracy
I0428 20:03:37.915261 30214 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:37.915266 30214 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:37.915269 30214 net.cpp:382] accuracy -> accuracy
I0428 20:03:37.915277 30214 net.cpp:124] Setting up accuracy
I0428 20:03:37.915280 30214 net.cpp:131] Top shape: (1)
I0428 20:03:37.915283 30214 net.cpp:139] Memory required for data: 6458804
I0428 20:03:37.915285 30214 layer_factory.hpp:77] Creating layer loss
I0428 20:03:37.915290 30214 net.cpp:86] Creating Layer loss
I0428 20:03:37.915298 30214 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:37.915302 30214 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:37.915307 30214 net.cpp:382] loss -> loss
I0428 20:03:37.915318 30214 layer_factory.hpp:77] Creating layer loss
I0428 20:03:37.915540 30214 net.cpp:124] Setting up loss
I0428 20:03:37.915563 30214 net.cpp:131] Top shape: (1)
I0428 20:03:37.915567 30214 net.cpp:134]     with loss weight 1
I0428 20:03:37.915603 30214 net.cpp:139] Memory required for data: 6458808
I0428 20:03:37.915607 30214 net.cpp:200] loss needs backward computation.
I0428 20:03:37.915611 30214 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:37.915614 30214 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:37.915617 30214 net.cpp:200] relu3 needs backward computation.
I0428 20:03:37.915619 30214 net.cpp:200] ip3 needs backward computation.
I0428 20:03:37.915622 30214 net.cpp:200] relu2 needs backward computation.
I0428 20:03:37.915626 30214 net.cpp:200] ip2 needs backward computation.
I0428 20:03:37.915627 30214 net.cpp:200] relu1 needs backward computation.
I0428 20:03:37.915650 30214 net.cpp:200] ip1 needs backward computation.
I0428 20:03:37.915653 30214 net.cpp:200] pool1 needs backward computation.
I0428 20:03:37.915657 30214 net.cpp:200] conv1 needs backward computation.
I0428 20:03:37.915660 30214 net.cpp:200] pool0 needs backward computation.
I0428 20:03:37.915668 30214 net.cpp:200] conv0 needs backward computation.
I0428 20:03:37.915673 30214 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:37.915676 30214 net.cpp:202] mnist does not need backward computation.
I0428 20:03:37.915678 30214 net.cpp:244] This network produces output accuracy
I0428 20:03:37.915683 30214 net.cpp:244] This network produces output loss
I0428 20:03:37.915693 30214 net.cpp:257] Network initialization done.
I0428 20:03:37.915750 30214 solver.cpp:56] Solver scaffolding done.
I0428 20:03:37.916097 30214 caffe.cpp:248] Starting Optimization
I0428 20:03:37.916103 30214 solver.cpp:273] Solving LeNet
I0428 20:03:37.916106 30214 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:37.916931 30214 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:37.922011 30214 blocking_queue.cpp:49] Waiting for data
I0428 20:03:37.993106 30221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:37.993773 30214 solver.cpp:398]     Test net output #0: accuracy = 0.0889
I0428 20:03:37.993791 30214 solver.cpp:398]     Test net output #1: loss = 2.31566 (* 1 = 2.31566 loss)
I0428 20:03:37.997719 30214 solver.cpp:219] Iteration 0 (-1.01314e-42 iter/s, 0.0815882s/100 iters), loss = 2.31108
I0428 20:03:37.997741 30214 solver.cpp:238]     Train net output #0: loss = 2.31108 (* 1 = 2.31108 loss)
I0428 20:03:37.997766 30214 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:38.150055 30214 solver.cpp:219] Iteration 100 (656.597 iter/s, 0.1523s/100 iters), loss = 1.15024
I0428 20:03:38.150089 30214 solver.cpp:238]     Train net output #0: loss = 1.15024 (* 1 = 1.15024 loss)
I0428 20:03:38.150096 30214 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:38.309959 30214 solver.cpp:219] Iteration 200 (625.557 iter/s, 0.159858s/100 iters), loss = 1.41563
I0428 20:03:38.309989 30214 solver.cpp:238]     Train net output #0: loss = 1.41563 (* 1 = 1.41563 loss)
I0428 20:03:38.309996 30214 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:38.457617 30214 solver.cpp:219] Iteration 300 (677.439 iter/s, 0.147615s/100 iters), loss = 1.56611
I0428 20:03:38.457648 30214 solver.cpp:238]     Train net output #0: loss = 1.56611 (* 1 = 1.56611 loss)
I0428 20:03:38.457656 30214 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:38.607067 30214 solver.cpp:219] Iteration 400 (669.309 iter/s, 0.149408s/100 iters), loss = 1.34896
I0428 20:03:38.607091 30214 solver.cpp:238]     Train net output #0: loss = 1.34896 (* 1 = 1.34896 loss)
I0428 20:03:38.607098 30214 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:38.753993 30214 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:38.809816 30221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:38.811666 30214 solver.cpp:398]     Test net output #0: accuracy = 0.581
I0428 20:03:38.811686 30214 solver.cpp:398]     Test net output #1: loss = 1.22166 (* 1 = 1.22166 loss)
I0428 20:03:38.812958 30214 solver.cpp:219] Iteration 500 (485.792 iter/s, 0.20585s/100 iters), loss = 1.06891
I0428 20:03:38.812999 30214 solver.cpp:238]     Train net output #0: loss = 1.06891 (* 1 = 1.06891 loss)
I0428 20:03:38.813006 30214 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:38.964018 30214 solver.cpp:219] Iteration 600 (662.22 iter/s, 0.151007s/100 iters), loss = 1.12517
I0428 20:03:38.964046 30214 solver.cpp:238]     Train net output #0: loss = 1.12517 (* 1 = 1.12517 loss)
I0428 20:03:38.964053 30214 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:39.116837 30214 solver.cpp:219] Iteration 700 (654.55 iter/s, 0.152777s/100 iters), loss = 1.20937
I0428 20:03:39.116868 30214 solver.cpp:238]     Train net output #0: loss = 1.20937 (* 1 = 1.20937 loss)
I0428 20:03:39.116874 30214 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:39.273888 30214 solver.cpp:219] Iteration 800 (636.911 iter/s, 0.157008s/100 iters), loss = 1.42284
I0428 20:03:39.273916 30214 solver.cpp:238]     Train net output #0: loss = 1.42284 (* 1 = 1.42284 loss)
I0428 20:03:39.273923 30214 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:39.424988 30214 solver.cpp:219] Iteration 900 (662.004 iter/s, 0.151056s/100 iters), loss = 1.13322
I0428 20:03:39.425019 30214 solver.cpp:238]     Train net output #0: loss = 1.13322 (* 1 = 1.13322 loss)
I0428 20:03:39.425025 30214 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:39.473450 30220 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:39.570359 30214 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:39.572183 30214 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:39.573004 30214 solver.cpp:311] Iteration 1000, loss = 1.19117
I0428 20:03:39.573024 30214 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:39.627442 30221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:39.629303 30214 solver.cpp:398]     Test net output #0: accuracy = 0.6809
I0428 20:03:39.629321 30214 solver.cpp:398]     Test net output #1: loss = 1.00134 (* 1 = 1.00134 loss)
I0428 20:03:39.629326 30214 solver.cpp:316] Optimization Done.
I0428 20:03:39.629345 30214 caffe.cpp:259] Optimization Done.
