I0428 20:37:22.705261  4933 caffe.cpp:218] Using GPUs 0
I0428 20:37:22.737886  4933 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:23.224627  4933 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1650.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:23.224781  4933 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1650.prototxt
I0428 20:37:23.225227  4933 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:23.225268  4933 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:23.225347  4933 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:23.225411  4933 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:23.225492  4933 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:23.225510  4933 net.cpp:86] Creating Layer mnist
I0428 20:37:23.225518  4933 net.cpp:382] mnist -> data
I0428 20:37:23.225536  4933 net.cpp:382] mnist -> label
I0428 20:37:23.226477  4933 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:23.228685  4933 net.cpp:124] Setting up mnist
I0428 20:37:23.228715  4933 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:23.228723  4933 net.cpp:131] Top shape: 64 (64)
I0428 20:37:23.228725  4933 net.cpp:139] Memory required for data: 200960
I0428 20:37:23.228730  4933 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:23.228744  4933 net.cpp:86] Creating Layer conv0
I0428 20:37:23.228760  4933 net.cpp:408] conv0 <- data
I0428 20:37:23.228770  4933 net.cpp:382] conv0 -> conv0
I0428 20:37:23.465103  4933 net.cpp:124] Setting up conv0
I0428 20:37:23.465145  4933 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:23.465163  4933 net.cpp:139] Memory required for data: 14946560
I0428 20:37:23.465193  4933 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:23.465207  4933 net.cpp:86] Creating Layer pool0
I0428 20:37:23.465211  4933 net.cpp:408] pool0 <- conv0
I0428 20:37:23.465216  4933 net.cpp:382] pool0 -> pool0
I0428 20:37:23.465265  4933 net.cpp:124] Setting up pool0
I0428 20:37:23.465270  4933 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:23.465273  4933 net.cpp:139] Memory required for data: 18632960
I0428 20:37:23.465276  4933 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:23.465288  4933 net.cpp:86] Creating Layer conv1
I0428 20:37:23.465291  4933 net.cpp:408] conv1 <- pool0
I0428 20:37:23.465298  4933 net.cpp:382] conv1 -> conv1
I0428 20:37:23.469502  4933 net.cpp:124] Setting up conv1
I0428 20:37:23.469533  4933 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:23.469537  4933 net.cpp:139] Memory required for data: 20271360
I0428 20:37:23.469545  4933 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:23.469553  4933 net.cpp:86] Creating Layer pool1
I0428 20:37:23.469558  4933 net.cpp:408] pool1 <- conv1
I0428 20:37:23.469563  4933 net.cpp:382] pool1 -> pool1
I0428 20:37:23.469615  4933 net.cpp:124] Setting up pool1
I0428 20:37:23.469622  4933 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:23.469625  4933 net.cpp:139] Memory required for data: 20680960
I0428 20:37:23.469627  4933 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:23.469635  4933 net.cpp:86] Creating Layer ip1
I0428 20:37:23.469637  4933 net.cpp:408] ip1 <- pool1
I0428 20:37:23.469643  4933 net.cpp:382] ip1 -> ip1
I0428 20:37:23.470672  4933 net.cpp:124] Setting up ip1
I0428 20:37:23.470700  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.470705  4933 net.cpp:139] Memory required for data: 20683520
I0428 20:37:23.470712  4933 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:23.470718  4933 net.cpp:86] Creating Layer relu1
I0428 20:37:23.470721  4933 net.cpp:408] relu1 <- ip1
I0428 20:37:23.470726  4933 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:23.470903  4933 net.cpp:124] Setting up relu1
I0428 20:37:23.470912  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.470916  4933 net.cpp:139] Memory required for data: 20686080
I0428 20:37:23.470918  4933 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:23.470927  4933 net.cpp:86] Creating Layer ip2
I0428 20:37:23.470929  4933 net.cpp:408] ip2 <- ip1
I0428 20:37:23.470934  4933 net.cpp:382] ip2 -> ip2
I0428 20:37:23.471030  4933 net.cpp:124] Setting up ip2
I0428 20:37:23.471037  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.471040  4933 net.cpp:139] Memory required for data: 20688640
I0428 20:37:23.471045  4933 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:23.471050  4933 net.cpp:86] Creating Layer relu2
I0428 20:37:23.471053  4933 net.cpp:408] relu2 <- ip2
I0428 20:37:23.471058  4933 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:23.471817  4933 net.cpp:124] Setting up relu2
I0428 20:37:23.471829  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.471848  4933 net.cpp:139] Memory required for data: 20691200
I0428 20:37:23.471851  4933 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:23.471859  4933 net.cpp:86] Creating Layer ip3
I0428 20:37:23.471863  4933 net.cpp:408] ip3 <- ip2
I0428 20:37:23.471868  4933 net.cpp:382] ip3 -> ip3
I0428 20:37:23.471971  4933 net.cpp:124] Setting up ip3
I0428 20:37:23.471977  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.471981  4933 net.cpp:139] Memory required for data: 20693760
I0428 20:37:23.471987  4933 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:23.471995  4933 net.cpp:86] Creating Layer relu3
I0428 20:37:23.471998  4933 net.cpp:408] relu3 <- ip3
I0428 20:37:23.472017  4933 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:23.472172  4933 net.cpp:124] Setting up relu3
I0428 20:37:23.472179  4933 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:23.472182  4933 net.cpp:139] Memory required for data: 20696320
I0428 20:37:23.472185  4933 layer_factory.hpp:77] Creating layer loss
I0428 20:37:23.472193  4933 net.cpp:86] Creating Layer loss
I0428 20:37:23.472195  4933 net.cpp:408] loss <- ip3
I0428 20:37:23.472198  4933 net.cpp:408] loss <- label
I0428 20:37:23.472203  4933 net.cpp:382] loss -> loss
I0428 20:37:23.472216  4933 layer_factory.hpp:77] Creating layer loss
I0428 20:37:23.472455  4933 net.cpp:124] Setting up loss
I0428 20:37:23.472463  4933 net.cpp:131] Top shape: (1)
I0428 20:37:23.472466  4933 net.cpp:134]     with loss weight 1
I0428 20:37:23.472479  4933 net.cpp:139] Memory required for data: 20696324
I0428 20:37:23.472482  4933 net.cpp:200] loss needs backward computation.
I0428 20:37:23.472486  4933 net.cpp:200] relu3 needs backward computation.
I0428 20:37:23.472488  4933 net.cpp:200] ip3 needs backward computation.
I0428 20:37:23.472491  4933 net.cpp:200] relu2 needs backward computation.
I0428 20:37:23.472493  4933 net.cpp:200] ip2 needs backward computation.
I0428 20:37:23.472496  4933 net.cpp:200] relu1 needs backward computation.
I0428 20:37:23.472499  4933 net.cpp:200] ip1 needs backward computation.
I0428 20:37:23.472501  4933 net.cpp:200] pool1 needs backward computation.
I0428 20:37:23.472504  4933 net.cpp:200] conv1 needs backward computation.
I0428 20:37:23.472507  4933 net.cpp:200] pool0 needs backward computation.
I0428 20:37:23.472510  4933 net.cpp:200] conv0 needs backward computation.
I0428 20:37:23.472513  4933 net.cpp:202] mnist does not need backward computation.
I0428 20:37:23.472515  4933 net.cpp:244] This network produces output loss
I0428 20:37:23.472525  4933 net.cpp:257] Network initialization done.
I0428 20:37:23.472903  4933 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1650.prototxt
I0428 20:37:23.472947  4933 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:23.473044  4933 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:23.473148  4933 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:23.473219  4933 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:23.473232  4933 net.cpp:86] Creating Layer mnist
I0428 20:37:23.473237  4933 net.cpp:382] mnist -> data
I0428 20:37:23.473244  4933 net.cpp:382] mnist -> label
I0428 20:37:23.473326  4933 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:23.475183  4933 net.cpp:124] Setting up mnist
I0428 20:37:23.475198  4933 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:23.475203  4933 net.cpp:131] Top shape: 100 (100)
I0428 20:37:23.475204  4933 net.cpp:139] Memory required for data: 314000
I0428 20:37:23.475208  4933 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:23.475214  4933 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:23.475217  4933 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:23.475248  4933 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:23.475255  4933 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:23.475307  4933 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:23.475312  4933 net.cpp:131] Top shape: 100 (100)
I0428 20:37:23.475317  4933 net.cpp:131] Top shape: 100 (100)
I0428 20:37:23.475318  4933 net.cpp:139] Memory required for data: 314800
I0428 20:37:23.475322  4933 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:23.475332  4933 net.cpp:86] Creating Layer conv0
I0428 20:37:23.475334  4933 net.cpp:408] conv0 <- data
I0428 20:37:23.475339  4933 net.cpp:382] conv0 -> conv0
I0428 20:37:23.477180  4933 net.cpp:124] Setting up conv0
I0428 20:37:23.477210  4933 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:23.477213  4933 net.cpp:139] Memory required for data: 23354800
I0428 20:37:23.477222  4933 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:23.477228  4933 net.cpp:86] Creating Layer pool0
I0428 20:37:23.477231  4933 net.cpp:408] pool0 <- conv0
I0428 20:37:23.477236  4933 net.cpp:382] pool0 -> pool0
I0428 20:37:23.477272  4933 net.cpp:124] Setting up pool0
I0428 20:37:23.477278  4933 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:23.477282  4933 net.cpp:139] Memory required for data: 29114800
I0428 20:37:23.477284  4933 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:23.477293  4933 net.cpp:86] Creating Layer conv1
I0428 20:37:23.477295  4933 net.cpp:408] conv1 <- pool0
I0428 20:37:23.477300  4933 net.cpp:382] conv1 -> conv1
I0428 20:37:23.480146  4933 net.cpp:124] Setting up conv1
I0428 20:37:23.480160  4933 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:23.480165  4933 net.cpp:139] Memory required for data: 31674800
I0428 20:37:23.480172  4933 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:23.480178  4933 net.cpp:86] Creating Layer pool1
I0428 20:37:23.480197  4933 net.cpp:408] pool1 <- conv1
I0428 20:37:23.480201  4933 net.cpp:382] pool1 -> pool1
I0428 20:37:23.480237  4933 net.cpp:124] Setting up pool1
I0428 20:37:23.480242  4933 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:23.480244  4933 net.cpp:139] Memory required for data: 32314800
I0428 20:37:23.480247  4933 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:23.480265  4933 net.cpp:86] Creating Layer ip1
I0428 20:37:23.480268  4933 net.cpp:408] ip1 <- pool1
I0428 20:37:23.480273  4933 net.cpp:382] ip1 -> ip1
I0428 20:37:23.480453  4933 net.cpp:124] Setting up ip1
I0428 20:37:23.480470  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.480473  4933 net.cpp:139] Memory required for data: 32318800
I0428 20:37:23.480480  4933 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:23.480486  4933 net.cpp:86] Creating Layer relu1
I0428 20:37:23.480489  4933 net.cpp:408] relu1 <- ip1
I0428 20:37:23.480494  4933 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:23.480654  4933 net.cpp:124] Setting up relu1
I0428 20:37:23.480662  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.480665  4933 net.cpp:139] Memory required for data: 32322800
I0428 20:37:23.480676  4933 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:23.480685  4933 net.cpp:86] Creating Layer ip2
I0428 20:37:23.480695  4933 net.cpp:408] ip2 <- ip1
I0428 20:37:23.480700  4933 net.cpp:382] ip2 -> ip2
I0428 20:37:23.480799  4933 net.cpp:124] Setting up ip2
I0428 20:37:23.480805  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.480813  4933 net.cpp:139] Memory required for data: 32326800
I0428 20:37:23.480835  4933 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:23.480841  4933 net.cpp:86] Creating Layer relu2
I0428 20:37:23.480844  4933 net.cpp:408] relu2 <- ip2
I0428 20:37:23.480849  4933 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:23.481050  4933 net.cpp:124] Setting up relu2
I0428 20:37:23.481060  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.481063  4933 net.cpp:139] Memory required for data: 32330800
I0428 20:37:23.481066  4933 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:23.481072  4933 net.cpp:86] Creating Layer ip3
I0428 20:37:23.481076  4933 net.cpp:408] ip3 <- ip2
I0428 20:37:23.481081  4933 net.cpp:382] ip3 -> ip3
I0428 20:37:23.481250  4933 net.cpp:124] Setting up ip3
I0428 20:37:23.481256  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.481259  4933 net.cpp:139] Memory required for data: 32334800
I0428 20:37:23.481267  4933 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:23.481272  4933 net.cpp:86] Creating Layer relu3
I0428 20:37:23.481276  4933 net.cpp:408] relu3 <- ip3
I0428 20:37:23.481279  4933 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:23.482000  4933 net.cpp:124] Setting up relu3
I0428 20:37:23.482013  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.482017  4933 net.cpp:139] Memory required for data: 32338800
I0428 20:37:23.482028  4933 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:23.482033  4933 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:23.482035  4933 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:23.482040  4933 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:23.482053  4933 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:23.482091  4933 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:23.482095  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.482100  4933 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:23.482101  4933 net.cpp:139] Memory required for data: 32346800
I0428 20:37:23.482105  4933 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:23.482111  4933 net.cpp:86] Creating Layer accuracy
I0428 20:37:23.482115  4933 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:23.482118  4933 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:23.482133  4933 net.cpp:382] accuracy -> accuracy
I0428 20:37:23.482139  4933 net.cpp:124] Setting up accuracy
I0428 20:37:23.482143  4933 net.cpp:131] Top shape: (1)
I0428 20:37:23.482146  4933 net.cpp:139] Memory required for data: 32346804
I0428 20:37:23.482148  4933 layer_factory.hpp:77] Creating layer loss
I0428 20:37:23.482154  4933 net.cpp:86] Creating Layer loss
I0428 20:37:23.482157  4933 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:23.482167  4933 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:23.482170  4933 net.cpp:382] loss -> loss
I0428 20:37:23.482177  4933 layer_factory.hpp:77] Creating layer loss
I0428 20:37:23.482463  4933 net.cpp:124] Setting up loss
I0428 20:37:23.482472  4933 net.cpp:131] Top shape: (1)
I0428 20:37:23.482475  4933 net.cpp:134]     with loss weight 1
I0428 20:37:23.482491  4933 net.cpp:139] Memory required for data: 32346808
I0428 20:37:23.482494  4933 net.cpp:200] loss needs backward computation.
I0428 20:37:23.482498  4933 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:23.482501  4933 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:23.482504  4933 net.cpp:200] relu3 needs backward computation.
I0428 20:37:23.482507  4933 net.cpp:200] ip3 needs backward computation.
I0428 20:37:23.482509  4933 net.cpp:200] relu2 needs backward computation.
I0428 20:37:23.482512  4933 net.cpp:200] ip2 needs backward computation.
I0428 20:37:23.482514  4933 net.cpp:200] relu1 needs backward computation.
I0428 20:37:23.482517  4933 net.cpp:200] ip1 needs backward computation.
I0428 20:37:23.482519  4933 net.cpp:200] pool1 needs backward computation.
I0428 20:37:23.482522  4933 net.cpp:200] conv1 needs backward computation.
I0428 20:37:23.482525  4933 net.cpp:200] pool0 needs backward computation.
I0428 20:37:23.482528  4933 net.cpp:200] conv0 needs backward computation.
I0428 20:37:23.482532  4933 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:23.482537  4933 net.cpp:202] mnist does not need backward computation.
I0428 20:37:23.482539  4933 net.cpp:244] This network produces output accuracy
I0428 20:37:23.482542  4933 net.cpp:244] This network produces output loss
I0428 20:37:23.482553  4933 net.cpp:257] Network initialization done.
I0428 20:37:23.482591  4933 solver.cpp:56] Solver scaffolding done.
I0428 20:37:23.482936  4933 caffe.cpp:248] Starting Optimization
I0428 20:37:23.482942  4933 solver.cpp:273] Solving LeNet
I0428 20:37:23.482945  4933 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:23.483713  4933 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:23.612009  4940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:23.615422  4933 solver.cpp:398]     Test net output #0: accuracy = 0.0977
I0428 20:37:23.615440  4933 solver.cpp:398]     Test net output #1: loss = 2.32631 (* 1 = 2.32631 loss)
I0428 20:37:23.620738  4933 solver.cpp:219] Iteration 0 (0 iter/s, 0.137765s/100 iters), loss = 2.35507
I0428 20:37:23.620761  4933 solver.cpp:238]     Train net output #0: loss = 2.35507 (* 1 = 2.35507 loss)
I0428 20:37:23.620787  4933 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:23.893172  4933 solver.cpp:219] Iteration 100 (367.143 iter/s, 0.272374s/100 iters), loss = 0.542489
I0428 20:37:23.893214  4933 solver.cpp:238]     Train net output #0: loss = 0.542489 (* 1 = 0.542489 loss)
I0428 20:37:23.893220  4933 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:24.153429  4933 solver.cpp:219] Iteration 200 (384.325 iter/s, 0.260196s/100 iters), loss = 0.347989
I0428 20:37:24.153470  4933 solver.cpp:238]     Train net output #0: loss = 0.347989 (* 1 = 0.347989 loss)
I0428 20:37:24.153476  4933 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:24.417599  4933 solver.cpp:219] Iteration 300 (378.629 iter/s, 0.264111s/100 iters), loss = 0.24556
I0428 20:37:24.417641  4933 solver.cpp:238]     Train net output #0: loss = 0.24556 (* 1 = 0.24556 loss)
I0428 20:37:24.417647  4933 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:24.688026  4933 solver.cpp:219] Iteration 400 (369.872 iter/s, 0.270364s/100 iters), loss = 0.303779
I0428 20:37:24.688060  4933 solver.cpp:238]     Train net output #0: loss = 0.303779 (* 1 = 0.303779 loss)
I0428 20:37:24.688066  4933 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:24.951937  4933 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:25.077437  4940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:25.080801  4933 solver.cpp:398]     Test net output #0: accuracy = 0.9546
I0428 20:37:25.080832  4933 solver.cpp:398]     Test net output #1: loss = 0.156194 (* 1 = 0.156194 loss)
I0428 20:37:25.083390  4933 solver.cpp:219] Iteration 500 (252.967 iter/s, 0.395308s/100 iters), loss = 0.191365
I0428 20:37:25.083415  4933 solver.cpp:238]     Train net output #0: loss = 0.191365 (* 1 = 0.191365 loss)
I0428 20:37:25.083446  4933 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:25.356838  4933 solver.cpp:219] Iteration 600 (365.764 iter/s, 0.273401s/100 iters), loss = 0.151077
I0428 20:37:25.356892  4933 solver.cpp:238]     Train net output #0: loss = 0.151077 (* 1 = 0.151077 loss)
I0428 20:37:25.356899  4933 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:25.629170  4933 solver.cpp:219] Iteration 700 (367.296 iter/s, 0.27226s/100 iters), loss = 0.165754
I0428 20:37:25.629215  4933 solver.cpp:238]     Train net output #0: loss = 0.165754 (* 1 = 0.165754 loss)
I0428 20:37:25.629222  4933 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:25.903528  4933 solver.cpp:219] Iteration 800 (364.57 iter/s, 0.274296s/100 iters), loss = 0.379381
I0428 20:37:25.903571  4933 solver.cpp:238]     Train net output #0: loss = 0.37938 (* 1 = 0.37938 loss)
I0428 20:37:25.903578  4933 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:26.181113  4933 solver.cpp:219] Iteration 900 (360.333 iter/s, 0.277521s/100 iters), loss = 0.201697
I0428 20:37:26.181154  4933 solver.cpp:238]     Train net output #0: loss = 0.201697 (* 1 = 0.201697 loss)
I0428 20:37:26.181160  4933 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:26.272613  4939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:26.457615  4933 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:26.463024  4933 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:26.466063  4933 solver.cpp:311] Iteration 1000, loss = 0.0954411
I0428 20:37:26.466079  4933 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:26.594339  4940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:26.597892  4933 solver.cpp:398]     Test net output #0: accuracy = 0.9718
I0428 20:37:26.597913  4933 solver.cpp:398]     Test net output #1: loss = 0.0977351 (* 1 = 0.0977351 loss)
I0428 20:37:26.597918  4933 solver.cpp:316] Optimization Done.
I0428 20:37:26.597920  4933 caffe.cpp:259] Optimization Done.
