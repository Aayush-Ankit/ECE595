I0428 20:21:11.865092  1710 caffe.cpp:218] Using GPUs 0
I0428 20:21:11.902503  1710 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:12.415496  1710 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1379.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:12.415634  1710 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1379.prototxt
I0428 20:21:12.416038  1710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:12.416054  1710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:12.416152  1710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:12.416224  1710 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:12.416324  1710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:12.416348  1710 net.cpp:86] Creating Layer mnist
I0428 20:21:12.416357  1710 net.cpp:382] mnist -> data
I0428 20:21:12.416378  1710 net.cpp:382] mnist -> label
I0428 20:21:12.417479  1710 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:12.420131  1710 net.cpp:124] Setting up mnist
I0428 20:21:12.420150  1710 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:12.420156  1710 net.cpp:131] Top shape: 64 (64)
I0428 20:21:12.420161  1710 net.cpp:139] Memory required for data: 200960
I0428 20:21:12.420168  1710 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:12.420184  1710 net.cpp:86] Creating Layer conv0
I0428 20:21:12.420215  1710 net.cpp:408] conv0 <- data
I0428 20:21:12.420228  1710 net.cpp:382] conv0 -> conv0
I0428 20:21:12.711258  1710 net.cpp:124] Setting up conv0
I0428 20:21:12.711287  1710 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:12.711290  1710 net.cpp:139] Memory required for data: 7573760
I0428 20:21:12.711308  1710 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:12.711320  1710 net.cpp:86] Creating Layer pool0
I0428 20:21:12.711324  1710 net.cpp:408] pool0 <- conv0
I0428 20:21:12.711330  1710 net.cpp:382] pool0 -> pool0
I0428 20:21:12.711380  1710 net.cpp:124] Setting up pool0
I0428 20:21:12.711387  1710 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:12.711391  1710 net.cpp:139] Memory required for data: 9416960
I0428 20:21:12.711395  1710 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:12.711405  1710 net.cpp:86] Creating Layer conv1
I0428 20:21:12.711412  1710 net.cpp:408] conv1 <- pool0
I0428 20:21:12.711417  1710 net.cpp:382] conv1 -> conv1
I0428 20:21:12.713698  1710 net.cpp:124] Setting up conv1
I0428 20:21:12.713713  1710 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:12.713717  1710 net.cpp:139] Memory required for data: 10236160
I0428 20:21:12.713726  1710 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:12.713734  1710 net.cpp:86] Creating Layer pool1
I0428 20:21:12.713737  1710 net.cpp:408] pool1 <- conv1
I0428 20:21:12.713743  1710 net.cpp:382] pool1 -> pool1
I0428 20:21:12.713781  1710 net.cpp:124] Setting up pool1
I0428 20:21:12.713786  1710 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:12.713790  1710 net.cpp:139] Memory required for data: 10440960
I0428 20:21:12.713793  1710 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:12.713800  1710 net.cpp:86] Creating Layer ip1
I0428 20:21:12.713804  1710 net.cpp:408] ip1 <- pool1
I0428 20:21:12.713809  1710 net.cpp:382] ip1 -> ip1
I0428 20:21:12.714813  1710 net.cpp:124] Setting up ip1
I0428 20:21:12.714826  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.714830  1710 net.cpp:139] Memory required for data: 10443520
I0428 20:21:12.714839  1710 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:12.714845  1710 net.cpp:86] Creating Layer relu1
I0428 20:21:12.714849  1710 net.cpp:408] relu1 <- ip1
I0428 20:21:12.714854  1710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:12.715034  1710 net.cpp:124] Setting up relu1
I0428 20:21:12.715044  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.715060  1710 net.cpp:139] Memory required for data: 10446080
I0428 20:21:12.715065  1710 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:12.715070  1710 net.cpp:86] Creating Layer ip2
I0428 20:21:12.715075  1710 net.cpp:408] ip2 <- ip1
I0428 20:21:12.715080  1710 net.cpp:382] ip2 -> ip2
I0428 20:21:12.715178  1710 net.cpp:124] Setting up ip2
I0428 20:21:12.715185  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.715188  1710 net.cpp:139] Memory required for data: 10448640
I0428 20:21:12.715194  1710 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:12.715200  1710 net.cpp:86] Creating Layer relu2
I0428 20:21:12.715204  1710 net.cpp:408] relu2 <- ip2
I0428 20:21:12.715209  1710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:12.715958  1710 net.cpp:124] Setting up relu2
I0428 20:21:12.715971  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.715975  1710 net.cpp:139] Memory required for data: 10451200
I0428 20:21:12.715979  1710 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:12.715986  1710 net.cpp:86] Creating Layer ip3
I0428 20:21:12.715989  1710 net.cpp:408] ip3 <- ip2
I0428 20:21:12.715996  1710 net.cpp:382] ip3 -> ip3
I0428 20:21:12.716095  1710 net.cpp:124] Setting up ip3
I0428 20:21:12.716104  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.716106  1710 net.cpp:139] Memory required for data: 10453760
I0428 20:21:12.716114  1710 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:12.716120  1710 net.cpp:86] Creating Layer relu3
I0428 20:21:12.716123  1710 net.cpp:408] relu3 <- ip3
I0428 20:21:12.716127  1710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:12.716308  1710 net.cpp:124] Setting up relu3
I0428 20:21:12.716317  1710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:12.716321  1710 net.cpp:139] Memory required for data: 10456320
I0428 20:21:12.716325  1710 layer_factory.hpp:77] Creating layer loss
I0428 20:21:12.716331  1710 net.cpp:86] Creating Layer loss
I0428 20:21:12.716334  1710 net.cpp:408] loss <- ip3
I0428 20:21:12.716338  1710 net.cpp:408] loss <- label
I0428 20:21:12.716344  1710 net.cpp:382] loss -> loss
I0428 20:21:12.716359  1710 layer_factory.hpp:77] Creating layer loss
I0428 20:21:12.716589  1710 net.cpp:124] Setting up loss
I0428 20:21:12.716598  1710 net.cpp:131] Top shape: (1)
I0428 20:21:12.716603  1710 net.cpp:134]     with loss weight 1
I0428 20:21:12.716617  1710 net.cpp:139] Memory required for data: 10456324
I0428 20:21:12.716621  1710 net.cpp:200] loss needs backward computation.
I0428 20:21:12.716625  1710 net.cpp:200] relu3 needs backward computation.
I0428 20:21:12.716629  1710 net.cpp:200] ip3 needs backward computation.
I0428 20:21:12.716631  1710 net.cpp:200] relu2 needs backward computation.
I0428 20:21:12.716634  1710 net.cpp:200] ip2 needs backward computation.
I0428 20:21:12.716637  1710 net.cpp:200] relu1 needs backward computation.
I0428 20:21:12.716640  1710 net.cpp:200] ip1 needs backward computation.
I0428 20:21:12.716644  1710 net.cpp:200] pool1 needs backward computation.
I0428 20:21:12.716646  1710 net.cpp:200] conv1 needs backward computation.
I0428 20:21:12.716650  1710 net.cpp:200] pool0 needs backward computation.
I0428 20:21:12.716653  1710 net.cpp:200] conv0 needs backward computation.
I0428 20:21:12.716657  1710 net.cpp:202] mnist does not need backward computation.
I0428 20:21:12.716660  1710 net.cpp:244] This network produces output loss
I0428 20:21:12.716670  1710 net.cpp:257] Network initialization done.
I0428 20:21:12.717017  1710 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1379.prototxt
I0428 20:21:12.717046  1710 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:12.717141  1710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:12.717231  1710 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:12.717278  1710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:12.717289  1710 net.cpp:86] Creating Layer mnist
I0428 20:21:12.717294  1710 net.cpp:382] mnist -> data
I0428 20:21:12.717303  1710 net.cpp:382] mnist -> label
I0428 20:21:12.717387  1710 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:12.719288  1710 net.cpp:124] Setting up mnist
I0428 20:21:12.719319  1710 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:12.719324  1710 net.cpp:131] Top shape: 100 (100)
I0428 20:21:12.719328  1710 net.cpp:139] Memory required for data: 314000
I0428 20:21:12.719331  1710 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:12.719338  1710 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:12.719342  1710 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:12.719347  1710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:12.719353  1710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:12.719482  1710 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:12.719491  1710 net.cpp:131] Top shape: 100 (100)
I0428 20:21:12.719494  1710 net.cpp:131] Top shape: 100 (100)
I0428 20:21:12.719497  1710 net.cpp:139] Memory required for data: 314800
I0428 20:21:12.719501  1710 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:12.719508  1710 net.cpp:86] Creating Layer conv0
I0428 20:21:12.719512  1710 net.cpp:408] conv0 <- data
I0428 20:21:12.719517  1710 net.cpp:382] conv0 -> conv0
I0428 20:21:12.721083  1710 net.cpp:124] Setting up conv0
I0428 20:21:12.721098  1710 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:12.721102  1710 net.cpp:139] Memory required for data: 11834800
I0428 20:21:12.721112  1710 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:12.721119  1710 net.cpp:86] Creating Layer pool0
I0428 20:21:12.721123  1710 net.cpp:408] pool0 <- conv0
I0428 20:21:12.721128  1710 net.cpp:382] pool0 -> pool0
I0428 20:21:12.721165  1710 net.cpp:124] Setting up pool0
I0428 20:21:12.721173  1710 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:12.721175  1710 net.cpp:139] Memory required for data: 14714800
I0428 20:21:12.721179  1710 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:12.721187  1710 net.cpp:86] Creating Layer conv1
I0428 20:21:12.721204  1710 net.cpp:408] conv1 <- pool0
I0428 20:21:12.721210  1710 net.cpp:382] conv1 -> conv1
I0428 20:21:12.723006  1710 net.cpp:124] Setting up conv1
I0428 20:21:12.723019  1710 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:12.723024  1710 net.cpp:139] Memory required for data: 15994800
I0428 20:21:12.723033  1710 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:12.723039  1710 net.cpp:86] Creating Layer pool1
I0428 20:21:12.723043  1710 net.cpp:408] pool1 <- conv1
I0428 20:21:12.723048  1710 net.cpp:382] pool1 -> pool1
I0428 20:21:12.723084  1710 net.cpp:124] Setting up pool1
I0428 20:21:12.723093  1710 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:12.723096  1710 net.cpp:139] Memory required for data: 16314800
I0428 20:21:12.723099  1710 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:12.723105  1710 net.cpp:86] Creating Layer ip1
I0428 20:21:12.723116  1710 net.cpp:408] ip1 <- pool1
I0428 20:21:12.723121  1710 net.cpp:382] ip1 -> ip1
I0428 20:21:12.723309  1710 net.cpp:124] Setting up ip1
I0428 20:21:12.723331  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.723352  1710 net.cpp:139] Memory required for data: 16318800
I0428 20:21:12.723361  1710 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:12.723366  1710 net.cpp:86] Creating Layer relu1
I0428 20:21:12.723371  1710 net.cpp:408] relu1 <- ip1
I0428 20:21:12.723374  1710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:12.723531  1710 net.cpp:124] Setting up relu1
I0428 20:21:12.723541  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.723543  1710 net.cpp:139] Memory required for data: 16322800
I0428 20:21:12.723547  1710 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:12.723556  1710 net.cpp:86] Creating Layer ip2
I0428 20:21:12.723558  1710 net.cpp:408] ip2 <- ip1
I0428 20:21:12.723564  1710 net.cpp:382] ip2 -> ip2
I0428 20:21:12.723657  1710 net.cpp:124] Setting up ip2
I0428 20:21:12.723664  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.723666  1710 net.cpp:139] Memory required for data: 16326800
I0428 20:21:12.723672  1710 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:12.723676  1710 net.cpp:86] Creating Layer relu2
I0428 20:21:12.723680  1710 net.cpp:408] relu2 <- ip2
I0428 20:21:12.723685  1710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:12.723831  1710 net.cpp:124] Setting up relu2
I0428 20:21:12.723840  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.723851  1710 net.cpp:139] Memory required for data: 16330800
I0428 20:21:12.723861  1710 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:12.723867  1710 net.cpp:86] Creating Layer ip3
I0428 20:21:12.723870  1710 net.cpp:408] ip3 <- ip2
I0428 20:21:12.723875  1710 net.cpp:382] ip3 -> ip3
I0428 20:21:12.723989  1710 net.cpp:124] Setting up ip3
I0428 20:21:12.723995  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.723999  1710 net.cpp:139] Memory required for data: 16334800
I0428 20:21:12.724007  1710 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:12.724012  1710 net.cpp:86] Creating Layer relu3
I0428 20:21:12.724015  1710 net.cpp:408] relu3 <- ip3
I0428 20:21:12.724020  1710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:12.724819  1710 net.cpp:124] Setting up relu3
I0428 20:21:12.724833  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.724835  1710 net.cpp:139] Memory required for data: 16338800
I0428 20:21:12.724845  1710 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:12.724850  1710 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:12.724854  1710 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:12.724859  1710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:12.724866  1710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:12.724903  1710 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:12.724910  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.724915  1710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:12.724918  1710 net.cpp:139] Memory required for data: 16346800
I0428 20:21:12.724921  1710 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:12.724926  1710 net.cpp:86] Creating Layer accuracy
I0428 20:21:12.724930  1710 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:12.724933  1710 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:12.724938  1710 net.cpp:382] accuracy -> accuracy
I0428 20:21:12.724946  1710 net.cpp:124] Setting up accuracy
I0428 20:21:12.724949  1710 net.cpp:131] Top shape: (1)
I0428 20:21:12.724952  1710 net.cpp:139] Memory required for data: 16346804
I0428 20:21:12.724956  1710 layer_factory.hpp:77] Creating layer loss
I0428 20:21:12.724959  1710 net.cpp:86] Creating Layer loss
I0428 20:21:12.724963  1710 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:12.724967  1710 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:12.724972  1710 net.cpp:382] loss -> loss
I0428 20:21:12.724977  1710 layer_factory.hpp:77] Creating layer loss
I0428 20:21:12.725204  1710 net.cpp:124] Setting up loss
I0428 20:21:12.725214  1710 net.cpp:131] Top shape: (1)
I0428 20:21:12.725216  1710 net.cpp:134]     with loss weight 1
I0428 20:21:12.725234  1710 net.cpp:139] Memory required for data: 16346808
I0428 20:21:12.725239  1710 net.cpp:200] loss needs backward computation.
I0428 20:21:12.725242  1710 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:12.725245  1710 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:12.725248  1710 net.cpp:200] relu3 needs backward computation.
I0428 20:21:12.725252  1710 net.cpp:200] ip3 needs backward computation.
I0428 20:21:12.725267  1710 net.cpp:200] relu2 needs backward computation.
I0428 20:21:12.725270  1710 net.cpp:200] ip2 needs backward computation.
I0428 20:21:12.725273  1710 net.cpp:200] relu1 needs backward computation.
I0428 20:21:12.725276  1710 net.cpp:200] ip1 needs backward computation.
I0428 20:21:12.725281  1710 net.cpp:200] pool1 needs backward computation.
I0428 20:21:12.725283  1710 net.cpp:200] conv1 needs backward computation.
I0428 20:21:12.725287  1710 net.cpp:200] pool0 needs backward computation.
I0428 20:21:12.725291  1710 net.cpp:200] conv0 needs backward computation.
I0428 20:21:12.725294  1710 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:12.725298  1710 net.cpp:202] mnist does not need backward computation.
I0428 20:21:12.725301  1710 net.cpp:244] This network produces output accuracy
I0428 20:21:12.725304  1710 net.cpp:244] This network produces output loss
I0428 20:21:12.725314  1710 net.cpp:257] Network initialization done.
I0428 20:21:12.725356  1710 solver.cpp:56] Solver scaffolding done.
I0428 20:21:12.725704  1710 caffe.cpp:248] Starting Optimization
I0428 20:21:12.725710  1710 solver.cpp:273] Solving LeNet
I0428 20:21:12.725713  1710 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:12.725930  1710 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:12.733973  1710 blocking_queue.cpp:49] Waiting for data
I0428 20:21:12.806464  1717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:12.807587  1710 solver.cpp:398]     Test net output #0: accuracy = 0.0897
I0428 20:21:12.807628  1710 solver.cpp:398]     Test net output #1: loss = 2.31968 (* 1 = 2.31968 loss)
I0428 20:21:12.811928  1710 solver.cpp:219] Iteration 0 (0 iter/s, 0.086179s/100 iters), loss = 2.33182
I0428 20:21:12.811952  1710 solver.cpp:238]     Train net output #0: loss = 2.33182 (* 1 = 2.33182 loss)
I0428 20:21:12.811981  1710 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:12.971289  1710 solver.cpp:219] Iteration 100 (627.655 iter/s, 0.159323s/100 iters), loss = 0.467232
I0428 20:21:12.971313  1710 solver.cpp:238]     Train net output #0: loss = 0.467232 (* 1 = 0.467232 loss)
I0428 20:21:12.971334  1710 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:13.130064  1710 solver.cpp:219] Iteration 200 (629.971 iter/s, 0.158737s/100 iters), loss = 0.316656
I0428 20:21:13.130086  1710 solver.cpp:238]     Train net output #0: loss = 0.316656 (* 1 = 0.316656 loss)
I0428 20:21:13.130092  1710 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:13.288485  1710 solver.cpp:219] Iteration 300 (631.368 iter/s, 0.158386s/100 iters), loss = 0.250004
I0428 20:21:13.288522  1710 solver.cpp:238]     Train net output #0: loss = 0.250004 (* 1 = 0.250004 loss)
I0428 20:21:13.288528  1710 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:13.446367  1710 solver.cpp:219] Iteration 400 (633.531 iter/s, 0.157846s/100 iters), loss = 0.26001
I0428 20:21:13.446389  1710 solver.cpp:238]     Train net output #0: loss = 0.26001 (* 1 = 0.26001 loss)
I0428 20:21:13.446396  1710 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:13.603162  1710 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:13.676146  1717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:13.678786  1710 solver.cpp:398]     Test net output #0: accuracy = 0.9543
I0428 20:21:13.678803  1710 solver.cpp:398]     Test net output #1: loss = 0.155842 (* 1 = 0.155842 loss)
I0428 20:21:13.680269  1710 solver.cpp:219] Iteration 500 (427.6 iter/s, 0.233863s/100 iters), loss = 0.168504
I0428 20:21:13.680315  1710 solver.cpp:238]     Train net output #0: loss = 0.168504 (* 1 = 0.168504 loss)
I0428 20:21:13.680321  1710 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:13.839568  1710 solver.cpp:219] Iteration 600 (627.945 iter/s, 0.15925s/100 iters), loss = 0.067714
I0428 20:21:13.839604  1710 solver.cpp:238]     Train net output #0: loss = 0.067714 (* 1 = 0.067714 loss)
I0428 20:21:13.839612  1710 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:13.999614  1710 solver.cpp:219] Iteration 700 (624.979 iter/s, 0.160005s/100 iters), loss = 0.193242
I0428 20:21:13.999644  1710 solver.cpp:238]     Train net output #0: loss = 0.193243 (* 1 = 0.193243 loss)
I0428 20:21:13.999650  1710 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:14.159883  1710 solver.cpp:219] Iteration 800 (624.109 iter/s, 0.160228s/100 iters), loss = 0.223511
I0428 20:21:14.159921  1710 solver.cpp:238]     Train net output #0: loss = 0.223511 (* 1 = 0.223511 loss)
I0428 20:21:14.159927  1710 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:14.320825  1710 solver.cpp:219] Iteration 900 (621.492 iter/s, 0.160903s/100 iters), loss = 0.128369
I0428 20:21:14.320863  1710 solver.cpp:238]     Train net output #0: loss = 0.128369 (* 1 = 0.128369 loss)
I0428 20:21:14.320870  1710 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:14.373407  1716 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:14.479080  1710 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:14.481178  1710 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:14.482463  1710 solver.cpp:311] Iteration 1000, loss = 0.205109
I0428 20:21:14.482481  1710 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:14.555377  1717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:14.558043  1710 solver.cpp:398]     Test net output #0: accuracy = 0.967
I0428 20:21:14.558063  1710 solver.cpp:398]     Test net output #1: loss = 0.106095 (* 1 = 0.106095 loss)
I0428 20:21:14.558068  1710 solver.cpp:316] Optimization Done.
I0428 20:21:14.558086  1710 caffe.cpp:259] Optimization Done.
