I0428 20:10:56.745669 31974 caffe.cpp:218] Using GPUs 0
I0428 20:10:56.780932 31974 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:57.293622 31974 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1147.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:57.293769 31974 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1147.prototxt
I0428 20:10:57.294191 31974 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:57.294211 31974 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:57.294314 31974 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:57.294396 31974 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:57.294495 31974 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:57.294519 31974 net.cpp:86] Creating Layer mnist
I0428 20:10:57.294528 31974 net.cpp:382] mnist -> data
I0428 20:10:57.294550 31974 net.cpp:382] mnist -> label
I0428 20:10:57.295653 31974 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:57.298132 31974 net.cpp:124] Setting up mnist
I0428 20:10:57.298151 31974 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:57.298177 31974 net.cpp:131] Top shape: 64 (64)
I0428 20:10:57.298180 31974 net.cpp:139] Memory required for data: 200960
I0428 20:10:57.298188 31974 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:57.298203 31974 net.cpp:86] Creating Layer conv0
I0428 20:10:57.298225 31974 net.cpp:408] conv0 <- data
I0428 20:10:57.298240 31974 net.cpp:382] conv0 -> conv0
I0428 20:10:57.574551 31974 net.cpp:124] Setting up conv0
I0428 20:10:57.574592 31974 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:57.574595 31974 net.cpp:139] Memory required for data: 3887360
I0428 20:10:57.574609 31974 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:57.574622 31974 net.cpp:86] Creating Layer pool0
I0428 20:10:57.574627 31974 net.cpp:408] pool0 <- conv0
I0428 20:10:57.574632 31974 net.cpp:382] pool0 -> pool0
I0428 20:10:57.574690 31974 net.cpp:124] Setting up pool0
I0428 20:10:57.574697 31974 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:57.574699 31974 net.cpp:139] Memory required for data: 4808960
I0428 20:10:57.574702 31974 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:57.574713 31974 net.cpp:86] Creating Layer conv1
I0428 20:10:57.574717 31974 net.cpp:408] conv1 <- pool0
I0428 20:10:57.574720 31974 net.cpp:382] conv1 -> conv1
I0428 20:10:57.576807 31974 net.cpp:124] Setting up conv1
I0428 20:10:57.576843 31974 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:57.576846 31974 net.cpp:139] Memory required for data: 5628160
I0428 20:10:57.576855 31974 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:57.576864 31974 net.cpp:86] Creating Layer pool1
I0428 20:10:57.576869 31974 net.cpp:408] pool1 <- conv1
I0428 20:10:57.576874 31974 net.cpp:382] pool1 -> pool1
I0428 20:10:57.576911 31974 net.cpp:124] Setting up pool1
I0428 20:10:57.576916 31974 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:57.576920 31974 net.cpp:139] Memory required for data: 5832960
I0428 20:10:57.576922 31974 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:57.576930 31974 net.cpp:86] Creating Layer ip1
I0428 20:10:57.576932 31974 net.cpp:408] ip1 <- pool1
I0428 20:10:57.576937 31974 net.cpp:382] ip1 -> ip1
I0428 20:10:57.577988 31974 net.cpp:124] Setting up ip1
I0428 20:10:57.578001 31974 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:57.578021 31974 net.cpp:139] Memory required for data: 5835520
I0428 20:10:57.578044 31974 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:57.578050 31974 net.cpp:86] Creating Layer relu1
I0428 20:10:57.578053 31974 net.cpp:408] relu1 <- ip1
I0428 20:10:57.578058 31974 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:57.578253 31974 net.cpp:124] Setting up relu1
I0428 20:10:57.578261 31974 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:57.578265 31974 net.cpp:139] Memory required for data: 5838080
I0428 20:10:57.578268 31974 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:57.578274 31974 net.cpp:86] Creating Layer ip2
I0428 20:10:57.578276 31974 net.cpp:408] ip2 <- ip1
I0428 20:10:57.578281 31974 net.cpp:382] ip2 -> ip2
I0428 20:10:57.578371 31974 net.cpp:124] Setting up ip2
I0428 20:10:57.578377 31974 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:57.578379 31974 net.cpp:139] Memory required for data: 5844480
I0428 20:10:57.578384 31974 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:57.578390 31974 net.cpp:86] Creating Layer relu2
I0428 20:10:57.578393 31974 net.cpp:408] relu2 <- ip2
I0428 20:10:57.578397 31974 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:57.579222 31974 net.cpp:124] Setting up relu2
I0428 20:10:57.579251 31974 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:57.579253 31974 net.cpp:139] Memory required for data: 5850880
I0428 20:10:57.579257 31974 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:57.579278 31974 net.cpp:86] Creating Layer ip3
I0428 20:10:57.579282 31974 net.cpp:408] ip3 <- ip2
I0428 20:10:57.579288 31974 net.cpp:382] ip3 -> ip3
I0428 20:10:57.579380 31974 net.cpp:124] Setting up ip3
I0428 20:10:57.579386 31974 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:57.579390 31974 net.cpp:139] Memory required for data: 5853440
I0428 20:10:57.579396 31974 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:57.579401 31974 net.cpp:86] Creating Layer relu3
I0428 20:10:57.579404 31974 net.cpp:408] relu3 <- ip3
I0428 20:10:57.579408 31974 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:57.579565 31974 net.cpp:124] Setting up relu3
I0428 20:10:57.579572 31974 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:57.579576 31974 net.cpp:139] Memory required for data: 5856000
I0428 20:10:57.579578 31974 layer_factory.hpp:77] Creating layer loss
I0428 20:10:57.579584 31974 net.cpp:86] Creating Layer loss
I0428 20:10:57.579587 31974 net.cpp:408] loss <- ip3
I0428 20:10:57.579591 31974 net.cpp:408] loss <- label
I0428 20:10:57.579596 31974 net.cpp:382] loss -> loss
I0428 20:10:57.579612 31974 layer_factory.hpp:77] Creating layer loss
I0428 20:10:57.579838 31974 net.cpp:124] Setting up loss
I0428 20:10:57.579846 31974 net.cpp:131] Top shape: (1)
I0428 20:10:57.579865 31974 net.cpp:134]     with loss weight 1
I0428 20:10:57.579882 31974 net.cpp:139] Memory required for data: 5856004
I0428 20:10:57.579886 31974 net.cpp:200] loss needs backward computation.
I0428 20:10:57.579890 31974 net.cpp:200] relu3 needs backward computation.
I0428 20:10:57.579893 31974 net.cpp:200] ip3 needs backward computation.
I0428 20:10:57.579896 31974 net.cpp:200] relu2 needs backward computation.
I0428 20:10:57.579900 31974 net.cpp:200] ip2 needs backward computation.
I0428 20:10:57.579902 31974 net.cpp:200] relu1 needs backward computation.
I0428 20:10:57.579905 31974 net.cpp:200] ip1 needs backward computation.
I0428 20:10:57.579908 31974 net.cpp:200] pool1 needs backward computation.
I0428 20:10:57.579911 31974 net.cpp:200] conv1 needs backward computation.
I0428 20:10:57.579915 31974 net.cpp:200] pool0 needs backward computation.
I0428 20:10:57.579918 31974 net.cpp:200] conv0 needs backward computation.
I0428 20:10:57.579921 31974 net.cpp:202] mnist does not need backward computation.
I0428 20:10:57.579924 31974 net.cpp:244] This network produces output loss
I0428 20:10:57.579933 31974 net.cpp:257] Network initialization done.
I0428 20:10:57.580318 31974 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1147.prototxt
I0428 20:10:57.580374 31974 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:57.580459 31974 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:57.580535 31974 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:57.580575 31974 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:57.580592 31974 net.cpp:86] Creating Layer mnist
I0428 20:10:57.580596 31974 net.cpp:382] mnist -> data
I0428 20:10:57.580603 31974 net.cpp:382] mnist -> label
I0428 20:10:57.580682 31974 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:57.582741 31974 net.cpp:124] Setting up mnist
I0428 20:10:57.582770 31974 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:57.582777 31974 net.cpp:131] Top shape: 100 (100)
I0428 20:10:57.582779 31974 net.cpp:139] Memory required for data: 314000
I0428 20:10:57.582783 31974 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:57.582793 31974 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:57.582797 31974 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:57.582801 31974 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:57.582808 31974 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:57.582891 31974 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:57.582898 31974 net.cpp:131] Top shape: 100 (100)
I0428 20:10:57.582902 31974 net.cpp:131] Top shape: 100 (100)
I0428 20:10:57.582906 31974 net.cpp:139] Memory required for data: 314800
I0428 20:10:57.582908 31974 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:57.582917 31974 net.cpp:86] Creating Layer conv0
I0428 20:10:57.582921 31974 net.cpp:408] conv0 <- data
I0428 20:10:57.582926 31974 net.cpp:382] conv0 -> conv0
I0428 20:10:57.584625 31974 net.cpp:124] Setting up conv0
I0428 20:10:57.584637 31974 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:57.584656 31974 net.cpp:139] Memory required for data: 6074800
I0428 20:10:57.584666 31974 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:57.584672 31974 net.cpp:86] Creating Layer pool0
I0428 20:10:57.584676 31974 net.cpp:408] pool0 <- conv0
I0428 20:10:57.584681 31974 net.cpp:382] pool0 -> pool0
I0428 20:10:57.584731 31974 net.cpp:124] Setting up pool0
I0428 20:10:57.584751 31974 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:57.584754 31974 net.cpp:139] Memory required for data: 7514800
I0428 20:10:57.584758 31974 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:57.584765 31974 net.cpp:86] Creating Layer conv1
I0428 20:10:57.584769 31974 net.cpp:408] conv1 <- pool0
I0428 20:10:57.584774 31974 net.cpp:382] conv1 -> conv1
I0428 20:10:57.586546 31974 net.cpp:124] Setting up conv1
I0428 20:10:57.586575 31974 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:57.586580 31974 net.cpp:139] Memory required for data: 8794800
I0428 20:10:57.586588 31974 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:57.586596 31974 net.cpp:86] Creating Layer pool1
I0428 20:10:57.586616 31974 net.cpp:408] pool1 <- conv1
I0428 20:10:57.586621 31974 net.cpp:382] pool1 -> pool1
I0428 20:10:57.586658 31974 net.cpp:124] Setting up pool1
I0428 20:10:57.586663 31974 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:57.586668 31974 net.cpp:139] Memory required for data: 9114800
I0428 20:10:57.586670 31974 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:57.586676 31974 net.cpp:86] Creating Layer ip1
I0428 20:10:57.586679 31974 net.cpp:408] ip1 <- pool1
I0428 20:10:57.586684 31974 net.cpp:382] ip1 -> ip1
I0428 20:10:57.586838 31974 net.cpp:124] Setting up ip1
I0428 20:10:57.586848 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.586861 31974 net.cpp:139] Memory required for data: 9118800
I0428 20:10:57.586869 31974 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:57.586874 31974 net.cpp:86] Creating Layer relu1
I0428 20:10:57.586879 31974 net.cpp:408] relu1 <- ip1
I0428 20:10:57.586884 31974 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:57.587050 31974 net.cpp:124] Setting up relu1
I0428 20:10:57.587059 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.587062 31974 net.cpp:139] Memory required for data: 9122800
I0428 20:10:57.587065 31974 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:57.587072 31974 net.cpp:86] Creating Layer ip2
I0428 20:10:57.587076 31974 net.cpp:408] ip2 <- ip1
I0428 20:10:57.587080 31974 net.cpp:382] ip2 -> ip2
I0428 20:10:57.587172 31974 net.cpp:124] Setting up ip2
I0428 20:10:57.587178 31974 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:57.587182 31974 net.cpp:139] Memory required for data: 9132800
I0428 20:10:57.587186 31974 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:57.587191 31974 net.cpp:86] Creating Layer relu2
I0428 20:10:57.587194 31974 net.cpp:408] relu2 <- ip2
I0428 20:10:57.587198 31974 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:57.587395 31974 net.cpp:124] Setting up relu2
I0428 20:10:57.587404 31974 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:57.587407 31974 net.cpp:139] Memory required for data: 9142800
I0428 20:10:57.587410 31974 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:57.587416 31974 net.cpp:86] Creating Layer ip3
I0428 20:10:57.587419 31974 net.cpp:408] ip3 <- ip2
I0428 20:10:57.587424 31974 net.cpp:382] ip3 -> ip3
I0428 20:10:57.587589 31974 net.cpp:124] Setting up ip3
I0428 20:10:57.587595 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.587599 31974 net.cpp:139] Memory required for data: 9146800
I0428 20:10:57.587622 31974 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:57.587627 31974 net.cpp:86] Creating Layer relu3
I0428 20:10:57.587630 31974 net.cpp:408] relu3 <- ip3
I0428 20:10:57.587635 31974 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:57.588466 31974 net.cpp:124] Setting up relu3
I0428 20:10:57.588477 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.588496 31974 net.cpp:139] Memory required for data: 9150800
I0428 20:10:57.588500 31974 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:57.588505 31974 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:57.588507 31974 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:57.588513 31974 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:57.588520 31974 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:57.588557 31974 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:57.588562 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.588565 31974 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:57.588567 31974 net.cpp:139] Memory required for data: 9158800
I0428 20:10:57.588570 31974 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:57.588575 31974 net.cpp:86] Creating Layer accuracy
I0428 20:10:57.588578 31974 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:57.588582 31974 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:57.588587 31974 net.cpp:382] accuracy -> accuracy
I0428 20:10:57.588593 31974 net.cpp:124] Setting up accuracy
I0428 20:10:57.588596 31974 net.cpp:131] Top shape: (1)
I0428 20:10:57.588598 31974 net.cpp:139] Memory required for data: 9158804
I0428 20:10:57.588601 31974 layer_factory.hpp:77] Creating layer loss
I0428 20:10:57.588605 31974 net.cpp:86] Creating Layer loss
I0428 20:10:57.588608 31974 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:57.588611 31974 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:57.588615 31974 net.cpp:382] loss -> loss
I0428 20:10:57.588620 31974 layer_factory.hpp:77] Creating layer loss
I0428 20:10:57.588891 31974 net.cpp:124] Setting up loss
I0428 20:10:57.588901 31974 net.cpp:131] Top shape: (1)
I0428 20:10:57.588904 31974 net.cpp:134]     with loss weight 1
I0428 20:10:57.588922 31974 net.cpp:139] Memory required for data: 9158808
I0428 20:10:57.588927 31974 net.cpp:200] loss needs backward computation.
I0428 20:10:57.588930 31974 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:57.588935 31974 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:57.588939 31974 net.cpp:200] relu3 needs backward computation.
I0428 20:10:57.588943 31974 net.cpp:200] ip3 needs backward computation.
I0428 20:10:57.588946 31974 net.cpp:200] relu2 needs backward computation.
I0428 20:10:57.588949 31974 net.cpp:200] ip2 needs backward computation.
I0428 20:10:57.588953 31974 net.cpp:200] relu1 needs backward computation.
I0428 20:10:57.588956 31974 net.cpp:200] ip1 needs backward computation.
I0428 20:10:57.588959 31974 net.cpp:200] pool1 needs backward computation.
I0428 20:10:57.588970 31974 net.cpp:200] conv1 needs backward computation.
I0428 20:10:57.588973 31974 net.cpp:200] pool0 needs backward computation.
I0428 20:10:57.588977 31974 net.cpp:200] conv0 needs backward computation.
I0428 20:10:57.588981 31974 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:57.588985 31974 net.cpp:202] mnist does not need backward computation.
I0428 20:10:57.588989 31974 net.cpp:244] This network produces output accuracy
I0428 20:10:57.588992 31974 net.cpp:244] This network produces output loss
I0428 20:10:57.589004 31974 net.cpp:257] Network initialization done.
I0428 20:10:57.589047 31974 solver.cpp:56] Solver scaffolding done.
I0428 20:10:57.589429 31974 caffe.cpp:248] Starting Optimization
I0428 20:10:57.589437 31974 solver.cpp:273] Solving LeNet
I0428 20:10:57.589453 31974 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:57.590349 31974 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:57.596057 31974 blocking_queue.cpp:49] Waiting for data
I0428 20:10:57.667055 31981 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:57.667686 31974 solver.cpp:398]     Test net output #0: accuracy = 0.0665
I0428 20:10:57.667723 31974 solver.cpp:398]     Test net output #1: loss = 2.30356 (* 1 = 2.30356 loss)
I0428 20:10:57.671386 31974 solver.cpp:219] Iteration 0 (0 iter/s, 0.0818903s/100 iters), loss = 2.29951
I0428 20:10:57.671425 31974 solver.cpp:238]     Train net output #0: loss = 2.29951 (* 1 = 2.29951 loss)
I0428 20:10:57.671437 31974 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:57.791455 31974 solver.cpp:219] Iteration 100 (833.202 iter/s, 0.120019s/100 iters), loss = 0.721566
I0428 20:10:57.791496 31974 solver.cpp:238]     Train net output #0: loss = 0.721566 (* 1 = 0.721566 loss)
I0428 20:10:57.791503 31974 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:57.920099 31974 solver.cpp:219] Iteration 200 (777.66 iter/s, 0.128591s/100 iters), loss = 0.23794
I0428 20:10:57.920123 31974 solver.cpp:238]     Train net output #0: loss = 0.23794 (* 1 = 0.23794 loss)
I0428 20:10:57.920130 31974 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:58.044070 31974 solver.cpp:219] Iteration 300 (806.876 iter/s, 0.123935s/100 iters), loss = 0.211385
I0428 20:10:58.044111 31974 solver.cpp:238]     Train net output #0: loss = 0.211385 (* 1 = 0.211385 loss)
I0428 20:10:58.044119 31974 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:58.163544 31974 solver.cpp:219] Iteration 400 (837.26 iter/s, 0.119437s/100 iters), loss = 0.162931
I0428 20:10:58.163569 31974 solver.cpp:238]     Train net output #0: loss = 0.162931 (* 1 = 0.162931 loss)
I0428 20:10:58.163594 31974 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:58.280380 31974 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:58.349009 31981 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:58.349640 31974 solver.cpp:398]     Test net output #0: accuracy = 0.9575
I0428 20:10:58.349676 31974 solver.cpp:398]     Test net output #1: loss = 0.132398 (* 1 = 0.132398 loss)
I0428 20:10:58.350874 31974 solver.cpp:219] Iteration 500 (533.93 iter/s, 0.187291s/100 iters), loss = 0.11504
I0428 20:10:58.350920 31974 solver.cpp:238]     Train net output #0: loss = 0.11504 (* 1 = 0.11504 loss)
I0428 20:10:58.350950 31974 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:58.482868 31974 solver.cpp:219] Iteration 600 (757.917 iter/s, 0.131941s/100 iters), loss = 0.072614
I0428 20:10:58.482910 31974 solver.cpp:238]     Train net output #0: loss = 0.0726141 (* 1 = 0.0726141 loss)
I0428 20:10:58.482918 31974 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:58.610579 31974 solver.cpp:219] Iteration 700 (783.274 iter/s, 0.127669s/100 iters), loss = 0.12004
I0428 20:10:58.610617 31974 solver.cpp:238]     Train net output #0: loss = 0.12004 (* 1 = 0.12004 loss)
I0428 20:10:58.610628 31974 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:58.738356 31974 solver.cpp:219] Iteration 800 (782.897 iter/s, 0.127731s/100 iters), loss = 0.258539
I0428 20:10:58.738399 31974 solver.cpp:238]     Train net output #0: loss = 0.258539 (* 1 = 0.258539 loss)
I0428 20:10:58.738407 31974 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:58.858578 31974 solver.cpp:219] Iteration 900 (832.166 iter/s, 0.120168s/100 iters), loss = 0.10489
I0428 20:10:58.858621 31974 solver.cpp:238]     Train net output #0: loss = 0.10489 (* 1 = 0.10489 loss)
I0428 20:10:58.858629 31974 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:58.898782 31980 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:58.976436 31974 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:58.977905 31974 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:58.978785 31974 solver.cpp:311] Iteration 1000, loss = 0.115106
I0428 20:10:58.978807 31974 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:59.034457 31981 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:59.035881 31974 solver.cpp:398]     Test net output #0: accuracy = 0.9728
I0428 20:10:59.035902 31974 solver.cpp:398]     Test net output #1: loss = 0.0891838 (* 1 = 0.0891838 loss)
I0428 20:10:59.035908 31974 solver.cpp:316] Optimization Done.
I0428 20:10:59.035914 31974 caffe.cpp:259] Optimization Done.
