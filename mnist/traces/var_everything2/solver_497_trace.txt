I0428 19:46:41.711057 26045 caffe.cpp:218] Using GPUs 0
I0428 19:46:41.749142 26045 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:42.259845 26045 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test497.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:42.259987 26045 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test497.prototxt
I0428 19:46:42.260403 26045 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:42.260422 26045 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:42.260525 26045 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:42.260606 26045 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:42.260705 26045 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:42.260728 26045 net.cpp:86] Creating Layer mnist
I0428 19:46:42.260737 26045 net.cpp:382] mnist -> data
I0428 19:46:42.260759 26045 net.cpp:382] mnist -> label
I0428 19:46:42.262012 26045 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:42.264477 26045 net.cpp:124] Setting up mnist
I0428 19:46:42.264494 26045 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:42.264503 26045 net.cpp:131] Top shape: 64 (64)
I0428 19:46:42.264505 26045 net.cpp:139] Memory required for data: 200960
I0428 19:46:42.264513 26045 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:42.264528 26045 net.cpp:86] Creating Layer conv0
I0428 19:46:42.264547 26045 net.cpp:408] conv0 <- data
I0428 19:46:42.264561 26045 net.cpp:382] conv0 -> conv0
I0428 19:46:42.505797 26045 net.cpp:124] Setting up conv0
I0428 19:46:42.505838 26045 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:42.505842 26045 net.cpp:139] Memory required for data: 495872
I0428 19:46:42.505856 26045 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:42.505869 26045 net.cpp:86] Creating Layer pool0
I0428 19:46:42.505873 26045 net.cpp:408] pool0 <- conv0
I0428 19:46:42.505878 26045 net.cpp:382] pool0 -> pool0
I0428 19:46:42.505937 26045 net.cpp:124] Setting up pool0
I0428 19:46:42.505942 26045 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:42.505945 26045 net.cpp:139] Memory required for data: 569600
I0428 19:46:42.505949 26045 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:42.505959 26045 net.cpp:86] Creating Layer conv1
I0428 19:46:42.505961 26045 net.cpp:408] conv1 <- pool0
I0428 19:46:42.505980 26045 net.cpp:382] conv1 -> conv1
I0428 19:46:42.508741 26045 net.cpp:124] Setting up conv1
I0428 19:46:42.508754 26045 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:42.508774 26045 net.cpp:139] Memory required for data: 2208000
I0428 19:46:42.508782 26045 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:42.508790 26045 net.cpp:86] Creating Layer pool1
I0428 19:46:42.508795 26045 net.cpp:408] pool1 <- conv1
I0428 19:46:42.508800 26045 net.cpp:382] pool1 -> pool1
I0428 19:46:42.508875 26045 net.cpp:124] Setting up pool1
I0428 19:46:42.508884 26045 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:42.508889 26045 net.cpp:139] Memory required for data: 2617600
I0428 19:46:42.508894 26045 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:42.508905 26045 net.cpp:86] Creating Layer ip1
I0428 19:46:42.508908 26045 net.cpp:408] ip1 <- pool1
I0428 19:46:42.508915 26045 net.cpp:382] ip1 -> ip1
I0428 19:46:42.509266 26045 net.cpp:124] Setting up ip1
I0428 19:46:42.509274 26045 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:42.509292 26045 net.cpp:139] Memory required for data: 2624000
I0428 19:46:42.509299 26045 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:42.509305 26045 net.cpp:86] Creating Layer relu1
I0428 19:46:42.509310 26045 net.cpp:408] relu1 <- ip1
I0428 19:46:42.509313 26045 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:42.509485 26045 net.cpp:124] Setting up relu1
I0428 19:46:42.509495 26045 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:42.509497 26045 net.cpp:139] Memory required for data: 2630400
I0428 19:46:42.509500 26045 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:42.509508 26045 net.cpp:86] Creating Layer ip2
I0428 19:46:42.509511 26045 net.cpp:408] ip2 <- ip1
I0428 19:46:42.509517 26045 net.cpp:382] ip2 -> ip2
I0428 19:46:42.510560 26045 net.cpp:124] Setting up ip2
I0428 19:46:42.510572 26045 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:42.510591 26045 net.cpp:139] Memory required for data: 2643200
I0428 19:46:42.510596 26045 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:42.510604 26045 net.cpp:86] Creating Layer relu2
I0428 19:46:42.510608 26045 net.cpp:408] relu2 <- ip2
I0428 19:46:42.510612 26045 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:42.511441 26045 net.cpp:124] Setting up relu2
I0428 19:46:42.511453 26045 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:42.511471 26045 net.cpp:139] Memory required for data: 2656000
I0428 19:46:42.511474 26045 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:42.511482 26045 net.cpp:86] Creating Layer ip3
I0428 19:46:42.511487 26045 net.cpp:408] ip3 <- ip2
I0428 19:46:42.511492 26045 net.cpp:382] ip3 -> ip3
I0428 19:46:42.511595 26045 net.cpp:124] Setting up ip3
I0428 19:46:42.511601 26045 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:42.511605 26045 net.cpp:139] Memory required for data: 2658560
I0428 19:46:42.511611 26045 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:42.511620 26045 net.cpp:86] Creating Layer relu3
I0428 19:46:42.511622 26045 net.cpp:408] relu3 <- ip3
I0428 19:46:42.511642 26045 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:42.511823 26045 net.cpp:124] Setting up relu3
I0428 19:46:42.511847 26045 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:42.511850 26045 net.cpp:139] Memory required for data: 2661120
I0428 19:46:42.511853 26045 layer_factory.hpp:77] Creating layer loss
I0428 19:46:42.511860 26045 net.cpp:86] Creating Layer loss
I0428 19:46:42.511863 26045 net.cpp:408] loss <- ip3
I0428 19:46:42.511868 26045 net.cpp:408] loss <- label
I0428 19:46:42.511873 26045 net.cpp:382] loss -> loss
I0428 19:46:42.511888 26045 layer_factory.hpp:77] Creating layer loss
I0428 19:46:42.512177 26045 net.cpp:124] Setting up loss
I0428 19:46:42.512187 26045 net.cpp:131] Top shape: (1)
I0428 19:46:42.512189 26045 net.cpp:134]     with loss weight 1
I0428 19:46:42.512203 26045 net.cpp:139] Memory required for data: 2661124
I0428 19:46:42.512207 26045 net.cpp:200] loss needs backward computation.
I0428 19:46:42.512210 26045 net.cpp:200] relu3 needs backward computation.
I0428 19:46:42.512212 26045 net.cpp:200] ip3 needs backward computation.
I0428 19:46:42.512215 26045 net.cpp:200] relu2 needs backward computation.
I0428 19:46:42.512218 26045 net.cpp:200] ip2 needs backward computation.
I0428 19:46:42.512222 26045 net.cpp:200] relu1 needs backward computation.
I0428 19:46:42.512223 26045 net.cpp:200] ip1 needs backward computation.
I0428 19:46:42.512226 26045 net.cpp:200] pool1 needs backward computation.
I0428 19:46:42.512229 26045 net.cpp:200] conv1 needs backward computation.
I0428 19:46:42.512233 26045 net.cpp:200] pool0 needs backward computation.
I0428 19:46:42.512235 26045 net.cpp:200] conv0 needs backward computation.
I0428 19:46:42.512238 26045 net.cpp:202] mnist does not need backward computation.
I0428 19:46:42.512241 26045 net.cpp:244] This network produces output loss
I0428 19:46:42.512253 26045 net.cpp:257] Network initialization done.
I0428 19:46:42.512604 26045 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test497.prototxt
I0428 19:46:42.512660 26045 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:42.512751 26045 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:42.512878 26045 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:42.512961 26045 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:42.512976 26045 net.cpp:86] Creating Layer mnist
I0428 19:46:42.512981 26045 net.cpp:382] mnist -> data
I0428 19:46:42.512990 26045 net.cpp:382] mnist -> label
I0428 19:46:42.513108 26045 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:42.515131 26045 net.cpp:124] Setting up mnist
I0428 19:46:42.515161 26045 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:42.515166 26045 net.cpp:131] Top shape: 100 (100)
I0428 19:46:42.515168 26045 net.cpp:139] Memory required for data: 314000
I0428 19:46:42.515172 26045 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:42.515228 26045 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:42.515233 26045 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:42.515238 26045 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:42.515261 26045 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:42.515321 26045 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:42.515327 26045 net.cpp:131] Top shape: 100 (100)
I0428 19:46:42.515331 26045 net.cpp:131] Top shape: 100 (100)
I0428 19:46:42.515334 26045 net.cpp:139] Memory required for data: 314800
I0428 19:46:42.515337 26045 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:42.515347 26045 net.cpp:86] Creating Layer conv0
I0428 19:46:42.515349 26045 net.cpp:408] conv0 <- data
I0428 19:46:42.515355 26045 net.cpp:382] conv0 -> conv0
I0428 19:46:42.517252 26045 net.cpp:124] Setting up conv0
I0428 19:46:42.517267 26045 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:42.517271 26045 net.cpp:139] Memory required for data: 775600
I0428 19:46:42.517279 26045 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:42.517285 26045 net.cpp:86] Creating Layer pool0
I0428 19:46:42.517288 26045 net.cpp:408] pool0 <- conv0
I0428 19:46:42.517292 26045 net.cpp:382] pool0 -> pool0
I0428 19:46:42.517328 26045 net.cpp:124] Setting up pool0
I0428 19:46:42.517334 26045 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:42.517336 26045 net.cpp:139] Memory required for data: 890800
I0428 19:46:42.517339 26045 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:42.517349 26045 net.cpp:86] Creating Layer conv1
I0428 19:46:42.517352 26045 net.cpp:408] conv1 <- pool0
I0428 19:46:42.517356 26045 net.cpp:382] conv1 -> conv1
I0428 19:46:42.519048 26045 net.cpp:124] Setting up conv1
I0428 19:46:42.519062 26045 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:42.519065 26045 net.cpp:139] Memory required for data: 3450800
I0428 19:46:42.519074 26045 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:42.519083 26045 net.cpp:86] Creating Layer pool1
I0428 19:46:42.519085 26045 net.cpp:408] pool1 <- conv1
I0428 19:46:42.519093 26045 net.cpp:382] pool1 -> pool1
I0428 19:46:42.519136 26045 net.cpp:124] Setting up pool1
I0428 19:46:42.519143 26045 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:42.519146 26045 net.cpp:139] Memory required for data: 4090800
I0428 19:46:42.519150 26045 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:42.519157 26045 net.cpp:86] Creating Layer ip1
I0428 19:46:42.519160 26045 net.cpp:408] ip1 <- pool1
I0428 19:46:42.519166 26045 net.cpp:382] ip1 -> ip1
I0428 19:46:42.519533 26045 net.cpp:124] Setting up ip1
I0428 19:46:42.519541 26045 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:42.519553 26045 net.cpp:139] Memory required for data: 4100800
I0428 19:46:42.519562 26045 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:42.519567 26045 net.cpp:86] Creating Layer relu1
I0428 19:46:42.519572 26045 net.cpp:408] relu1 <- ip1
I0428 19:46:42.519577 26045 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:42.519764 26045 net.cpp:124] Setting up relu1
I0428 19:46:42.519774 26045 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:42.519778 26045 net.cpp:139] Memory required for data: 4110800
I0428 19:46:42.519780 26045 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:42.519788 26045 net.cpp:86] Creating Layer ip2
I0428 19:46:42.519791 26045 net.cpp:408] ip2 <- ip1
I0428 19:46:42.519796 26045 net.cpp:382] ip2 -> ip2
I0428 19:46:42.519908 26045 net.cpp:124] Setting up ip2
I0428 19:46:42.519930 26045 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:42.519933 26045 net.cpp:139] Memory required for data: 4130800
I0428 19:46:42.519939 26045 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:42.519958 26045 net.cpp:86] Creating Layer relu2
I0428 19:46:42.519961 26045 net.cpp:408] relu2 <- ip2
I0428 19:46:42.519966 26045 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:42.520165 26045 net.cpp:124] Setting up relu2
I0428 19:46:42.520174 26045 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:42.520177 26045 net.cpp:139] Memory required for data: 4150800
I0428 19:46:42.520180 26045 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:42.520185 26045 net.cpp:86] Creating Layer ip3
I0428 19:46:42.520189 26045 net.cpp:408] ip3 <- ip2
I0428 19:46:42.520195 26045 net.cpp:382] ip3 -> ip3
I0428 19:46:42.520364 26045 net.cpp:124] Setting up ip3
I0428 19:46:42.520370 26045 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:42.520373 26045 net.cpp:139] Memory required for data: 4154800
I0428 19:46:42.520380 26045 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:42.520386 26045 net.cpp:86] Creating Layer relu3
I0428 19:46:42.520390 26045 net.cpp:408] relu3 <- ip3
I0428 19:46:42.520393 26045 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:42.521327 26045 net.cpp:124] Setting up relu3
I0428 19:46:42.521339 26045 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:42.521342 26045 net.cpp:139] Memory required for data: 4158800
I0428 19:46:42.521361 26045 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:42.521368 26045 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:42.521370 26045 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:42.521375 26045 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:42.521381 26045 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:42.521476 26045 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:42.521483 26045 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:42.521487 26045 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:42.521491 26045 net.cpp:139] Memory required for data: 4166800
I0428 19:46:42.521498 26045 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:42.521503 26045 net.cpp:86] Creating Layer accuracy
I0428 19:46:42.521507 26045 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:42.521512 26045 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:42.521522 26045 net.cpp:382] accuracy -> accuracy
I0428 19:46:42.521534 26045 net.cpp:124] Setting up accuracy
I0428 19:46:42.521538 26045 net.cpp:131] Top shape: (1)
I0428 19:46:42.521541 26045 net.cpp:139] Memory required for data: 4166804
I0428 19:46:42.521544 26045 layer_factory.hpp:77] Creating layer loss
I0428 19:46:42.521549 26045 net.cpp:86] Creating Layer loss
I0428 19:46:42.521553 26045 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:42.521561 26045 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:42.521566 26045 net.cpp:382] loss -> loss
I0428 19:46:42.521572 26045 layer_factory.hpp:77] Creating layer loss
I0428 19:46:42.521850 26045 net.cpp:124] Setting up loss
I0428 19:46:42.521860 26045 net.cpp:131] Top shape: (1)
I0428 19:46:42.521863 26045 net.cpp:134]     with loss weight 1
I0428 19:46:42.521878 26045 net.cpp:139] Memory required for data: 4166808
I0428 19:46:42.521881 26045 net.cpp:200] loss needs backward computation.
I0428 19:46:42.521885 26045 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:42.521888 26045 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:42.521891 26045 net.cpp:200] relu3 needs backward computation.
I0428 19:46:42.521894 26045 net.cpp:200] ip3 needs backward computation.
I0428 19:46:42.521896 26045 net.cpp:200] relu2 needs backward computation.
I0428 19:46:42.521899 26045 net.cpp:200] ip2 needs backward computation.
I0428 19:46:42.521908 26045 net.cpp:200] relu1 needs backward computation.
I0428 19:46:42.521911 26045 net.cpp:200] ip1 needs backward computation.
I0428 19:46:42.521914 26045 net.cpp:200] pool1 needs backward computation.
I0428 19:46:42.521917 26045 net.cpp:200] conv1 needs backward computation.
I0428 19:46:42.521920 26045 net.cpp:200] pool0 needs backward computation.
I0428 19:46:42.521924 26045 net.cpp:200] conv0 needs backward computation.
I0428 19:46:42.521927 26045 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:42.521935 26045 net.cpp:202] mnist does not need backward computation.
I0428 19:46:42.521939 26045 net.cpp:244] This network produces output accuracy
I0428 19:46:42.521941 26045 net.cpp:244] This network produces output loss
I0428 19:46:42.521952 26045 net.cpp:257] Network initialization done.
I0428 19:46:42.521992 26045 solver.cpp:56] Solver scaffolding done.
I0428 19:46:42.522351 26045 caffe.cpp:248] Starting Optimization
I0428 19:46:42.522358 26045 solver.cpp:273] Solving LeNet
I0428 19:46:42.522361 26045 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:42.523259 26045 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:42.527909 26045 blocking_queue.cpp:49] Waiting for data
I0428 19:46:42.591962 26052 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:42.592576 26045 solver.cpp:398]     Test net output #0: accuracy = 0.0913
I0428 19:46:42.592597 26045 solver.cpp:398]     Test net output #1: loss = 2.3093 (* 1 = 2.3093 loss)
I0428 19:46:42.596294 26045 solver.cpp:219] Iteration 0 (3.0802 iter/s, 0.0739072s/100 iters), loss = 2.30673
I0428 19:46:42.596318 26045 solver.cpp:238]     Train net output #0: loss = 2.30673 (* 1 = 2.30673 loss)
I0428 19:46:42.596343 26045 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:42.746397 26045 solver.cpp:219] Iteration 100 (666.459 iter/s, 0.150047s/100 iters), loss = 0.647983
I0428 19:46:42.746423 26045 solver.cpp:238]     Train net output #0: loss = 0.647983 (* 1 = 0.647983 loss)
I0428 19:46:42.746429 26045 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:42.895759 26045 solver.cpp:219] Iteration 200 (669.699 iter/s, 0.149321s/100 iters), loss = 0.417695
I0428 19:46:42.895784 26045 solver.cpp:238]     Train net output #0: loss = 0.417695 (* 1 = 0.417695 loss)
I0428 19:46:42.895790 26045 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:43.043915 26045 solver.cpp:219] Iteration 300 (675.139 iter/s, 0.148118s/100 iters), loss = 0.310793
I0428 19:46:43.043938 26045 solver.cpp:238]     Train net output #0: loss = 0.310793 (* 1 = 0.310793 loss)
I0428 19:46:43.043944 26045 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:43.190883 26045 solver.cpp:219] Iteration 400 (680.588 iter/s, 0.146932s/100 iters), loss = 0.0822252
I0428 19:46:43.190908 26045 solver.cpp:238]     Train net output #0: loss = 0.0822252 (* 1 = 0.0822252 loss)
I0428 19:46:43.190914 26045 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:43.355104 26045 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:43.419270 26052 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:43.421241 26045 solver.cpp:398]     Test net output #0: accuracy = 0.9594
I0428 19:46:43.421272 26045 solver.cpp:398]     Test net output #1: loss = 0.1314 (* 1 = 0.1314 loss)
I0428 19:46:43.422837 26045 solver.cpp:219] Iteration 500 (431.203 iter/s, 0.23191s/100 iters), loss = 0.0642836
I0428 19:46:43.422895 26045 solver.cpp:238]     Train net output #0: loss = 0.0642836 (* 1 = 0.0642836 loss)
I0428 19:46:43.422909 26045 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:43.603019 26045 solver.cpp:219] Iteration 600 (555.221 iter/s, 0.180108s/100 iters), loss = 0.137805
I0428 19:46:43.603067 26045 solver.cpp:238]     Train net output #0: loss = 0.137805 (* 1 = 0.137805 loss)
I0428 19:46:43.603080 26045 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:43.785715 26045 solver.cpp:219] Iteration 700 (547.545 iter/s, 0.182633s/100 iters), loss = 0.16192
I0428 19:46:43.785759 26045 solver.cpp:238]     Train net output #0: loss = 0.16192 (* 1 = 0.16192 loss)
I0428 19:46:43.785770 26045 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:43.971854 26045 solver.cpp:219] Iteration 800 (537.408 iter/s, 0.186078s/100 iters), loss = 0.220674
I0428 19:46:43.971905 26045 solver.cpp:238]     Train net output #0: loss = 0.220674 (* 1 = 0.220674 loss)
I0428 19:46:43.971917 26045 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:44.159389 26045 solver.cpp:219] Iteration 900 (533.428 iter/s, 0.187467s/100 iters), loss = 0.127866
I0428 19:46:44.159446 26045 solver.cpp:238]     Train net output #0: loss = 0.127866 (* 1 = 0.127866 loss)
I0428 19:46:44.159459 26045 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:44.221148 26051 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:44.336660 26045 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:44.339081 26045 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:44.340219 26045 solver.cpp:311] Iteration 1000, loss = 0.0797962
I0428 19:46:44.340245 26045 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:44.398674 26052 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:44.400024 26045 solver.cpp:398]     Test net output #0: accuracy = 0.9702
I0428 19:46:44.400050 26045 solver.cpp:398]     Test net output #1: loss = 0.0924958 (* 1 = 0.0924958 loss)
I0428 19:46:44.400056 26045 solver.cpp:316] Optimization Done.
I0428 19:46:44.400060 26045 caffe.cpp:259] Optimization Done.
