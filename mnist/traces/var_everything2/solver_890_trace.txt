I0428 20:00:57.079807 29618 caffe.cpp:218] Using GPUs 0
I0428 20:00:57.112413 29618 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:57.638813 29618 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test890.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:57.638964 29618 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test890.prototxt
I0428 20:00:57.639477 29618 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:57.639511 29618 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:57.639621 29618 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:57.639700 29618 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:57.639813 29618 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:57.639839 29618 net.cpp:86] Creating Layer mnist
I0428 20:00:57.639849 29618 net.cpp:382] mnist -> data
I0428 20:00:57.639873 29618 net.cpp:382] mnist -> label
I0428 20:00:57.641135 29618 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:57.644050 29618 net.cpp:124] Setting up mnist
I0428 20:00:57.644084 29618 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:57.644091 29618 net.cpp:131] Top shape: 64 (64)
I0428 20:00:57.644098 29618 net.cpp:139] Memory required for data: 200960
I0428 20:00:57.644104 29618 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:57.644122 29618 net.cpp:86] Creating Layer conv0
I0428 20:00:57.644160 29618 net.cpp:408] conv0 <- data
I0428 20:00:57.644203 29618 net.cpp:382] conv0 -> conv0
I0428 20:00:57.934154 29618 net.cpp:124] Setting up conv0
I0428 20:00:57.934186 29618 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:57.934191 29618 net.cpp:139] Memory required for data: 1675520
I0428 20:00:57.934211 29618 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:57.934226 29618 net.cpp:86] Creating Layer pool0
I0428 20:00:57.934231 29618 net.cpp:408] pool0 <- conv0
I0428 20:00:57.934254 29618 net.cpp:382] pool0 -> pool0
I0428 20:00:57.934325 29618 net.cpp:124] Setting up pool0
I0428 20:00:57.934337 29618 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:57.934342 29618 net.cpp:139] Memory required for data: 2044160
I0428 20:00:57.934346 29618 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:57.934360 29618 net.cpp:86] Creating Layer conv1
I0428 20:00:57.934365 29618 net.cpp:408] conv1 <- pool0
I0428 20:00:57.934372 29618 net.cpp:382] conv1 -> conv1
I0428 20:00:57.938053 29618 net.cpp:124] Setting up conv1
I0428 20:00:57.938071 29618 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:57.938076 29618 net.cpp:139] Memory required for data: 2453760
I0428 20:00:57.938086 29618 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:57.938094 29618 net.cpp:86] Creating Layer pool1
I0428 20:00:57.938099 29618 net.cpp:408] pool1 <- conv1
I0428 20:00:57.938105 29618 net.cpp:382] pool1 -> pool1
I0428 20:00:57.938163 29618 net.cpp:124] Setting up pool1
I0428 20:00:57.938170 29618 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:57.938174 29618 net.cpp:139] Memory required for data: 2556160
I0428 20:00:57.938179 29618 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:57.938189 29618 net.cpp:86] Creating Layer ip1
I0428 20:00:57.938192 29618 net.cpp:408] ip1 <- pool1
I0428 20:00:57.938199 29618 net.cpp:382] ip1 -> ip1
I0428 20:00:57.938473 29618 net.cpp:124] Setting up ip1
I0428 20:00:57.938484 29618 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:57.938488 29618 net.cpp:139] Memory required for data: 2568960
I0428 20:00:57.938498 29618 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:57.938521 29618 net.cpp:86] Creating Layer relu1
I0428 20:00:57.938526 29618 net.cpp:408] relu1 <- ip1
I0428 20:00:57.938532 29618 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:57.938750 29618 net.cpp:124] Setting up relu1
I0428 20:00:57.938761 29618 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:57.938766 29618 net.cpp:139] Memory required for data: 2581760
I0428 20:00:57.938771 29618 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:57.938779 29618 net.cpp:86] Creating Layer ip2
I0428 20:00:57.938784 29618 net.cpp:408] ip2 <- ip1
I0428 20:00:57.938791 29618 net.cpp:382] ip2 -> ip2
I0428 20:00:57.938923 29618 net.cpp:124] Setting up ip2
I0428 20:00:57.938933 29618 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:57.938938 29618 net.cpp:139] Memory required for data: 2584320
I0428 20:00:57.938946 29618 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:57.938953 29618 net.cpp:86] Creating Layer relu2
I0428 20:00:57.938958 29618 net.cpp:408] relu2 <- ip2
I0428 20:00:57.938964 29618 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:57.940063 29618 net.cpp:124] Setting up relu2
I0428 20:00:57.940107 29618 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:57.940112 29618 net.cpp:139] Memory required for data: 2586880
I0428 20:00:57.940117 29618 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:57.940126 29618 net.cpp:86] Creating Layer ip3
I0428 20:00:57.940131 29618 net.cpp:408] ip3 <- ip2
I0428 20:00:57.940140 29618 net.cpp:382] ip3 -> ip3
I0428 20:00:57.940256 29618 net.cpp:124] Setting up ip3
I0428 20:00:57.940266 29618 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:57.940270 29618 net.cpp:139] Memory required for data: 2589440
I0428 20:00:57.940281 29618 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:57.940289 29618 net.cpp:86] Creating Layer relu3
I0428 20:00:57.940294 29618 net.cpp:408] relu3 <- ip3
I0428 20:00:57.940299 29618 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:57.940507 29618 net.cpp:124] Setting up relu3
I0428 20:00:57.940518 29618 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:57.940523 29618 net.cpp:139] Memory required for data: 2592000
I0428 20:00:57.940527 29618 layer_factory.hpp:77] Creating layer loss
I0428 20:00:57.940536 29618 net.cpp:86] Creating Layer loss
I0428 20:00:57.940539 29618 net.cpp:408] loss <- ip3
I0428 20:00:57.940546 29618 net.cpp:408] loss <- label
I0428 20:00:57.940553 29618 net.cpp:382] loss -> loss
I0428 20:00:57.940573 29618 layer_factory.hpp:77] Creating layer loss
I0428 20:00:57.941015 29618 net.cpp:124] Setting up loss
I0428 20:00:57.941026 29618 net.cpp:131] Top shape: (1)
I0428 20:00:57.941047 29618 net.cpp:134]     with loss weight 1
I0428 20:00:57.941064 29618 net.cpp:139] Memory required for data: 2592004
I0428 20:00:57.941071 29618 net.cpp:200] loss needs backward computation.
I0428 20:00:57.941076 29618 net.cpp:200] relu3 needs backward computation.
I0428 20:00:57.941081 29618 net.cpp:200] ip3 needs backward computation.
I0428 20:00:57.941084 29618 net.cpp:200] relu2 needs backward computation.
I0428 20:00:57.941089 29618 net.cpp:200] ip2 needs backward computation.
I0428 20:00:57.941093 29618 net.cpp:200] relu1 needs backward computation.
I0428 20:00:57.941098 29618 net.cpp:200] ip1 needs backward computation.
I0428 20:00:57.941102 29618 net.cpp:200] pool1 needs backward computation.
I0428 20:00:57.941107 29618 net.cpp:200] conv1 needs backward computation.
I0428 20:00:57.941112 29618 net.cpp:200] pool0 needs backward computation.
I0428 20:00:57.941117 29618 net.cpp:200] conv0 needs backward computation.
I0428 20:00:57.941121 29618 net.cpp:202] mnist does not need backward computation.
I0428 20:00:57.941126 29618 net.cpp:244] This network produces output loss
I0428 20:00:57.941140 29618 net.cpp:257] Network initialization done.
I0428 20:00:57.941684 29618 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test890.prototxt
I0428 20:00:57.941752 29618 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:57.941885 29618 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:57.942013 29618 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:57.942080 29618 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:57.942097 29618 net.cpp:86] Creating Layer mnist
I0428 20:00:57.942104 29618 net.cpp:382] mnist -> data
I0428 20:00:57.942114 29618 net.cpp:382] mnist -> label
I0428 20:00:57.942236 29618 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:57.944995 29618 net.cpp:124] Setting up mnist
I0428 20:00:57.945027 29618 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:57.945037 29618 net.cpp:131] Top shape: 100 (100)
I0428 20:00:57.945041 29618 net.cpp:139] Memory required for data: 314000
I0428 20:00:57.945047 29618 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:57.945060 29618 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:57.945080 29618 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:57.945087 29618 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:57.945096 29618 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:57.945216 29618 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:57.945227 29618 net.cpp:131] Top shape: 100 (100)
I0428 20:00:57.945233 29618 net.cpp:131] Top shape: 100 (100)
I0428 20:00:57.945237 29618 net.cpp:139] Memory required for data: 314800
I0428 20:00:57.945241 29618 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:57.945255 29618 net.cpp:86] Creating Layer conv0
I0428 20:00:57.945274 29618 net.cpp:408] conv0 <- data
I0428 20:00:57.945284 29618 net.cpp:382] conv0 -> conv0
I0428 20:00:57.947374 29618 net.cpp:124] Setting up conv0
I0428 20:00:57.947407 29618 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:57.947412 29618 net.cpp:139] Memory required for data: 2618800
I0428 20:00:57.947424 29618 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:57.947434 29618 net.cpp:86] Creating Layer pool0
I0428 20:00:57.947439 29618 net.cpp:408] pool0 <- conv0
I0428 20:00:57.947463 29618 net.cpp:382] pool0 -> pool0
I0428 20:00:57.947535 29618 net.cpp:124] Setting up pool0
I0428 20:00:57.947545 29618 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:57.947549 29618 net.cpp:139] Memory required for data: 3194800
I0428 20:00:57.947566 29618 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:57.947580 29618 net.cpp:86] Creating Layer conv1
I0428 20:00:57.947585 29618 net.cpp:408] conv1 <- pool0
I0428 20:00:57.947594 29618 net.cpp:382] conv1 -> conv1
I0428 20:00:57.950582 29618 net.cpp:124] Setting up conv1
I0428 20:00:57.950599 29618 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:57.950605 29618 net.cpp:139] Memory required for data: 3834800
I0428 20:00:57.950634 29618 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:57.950644 29618 net.cpp:86] Creating Layer pool1
I0428 20:00:57.950649 29618 net.cpp:408] pool1 <- conv1
I0428 20:00:57.950659 29618 net.cpp:382] pool1 -> pool1
I0428 20:00:57.950742 29618 net.cpp:124] Setting up pool1
I0428 20:00:57.950754 29618 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:57.950767 29618 net.cpp:139] Memory required for data: 3994800
I0428 20:00:57.950773 29618 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:57.950781 29618 net.cpp:86] Creating Layer ip1
I0428 20:00:57.950786 29618 net.cpp:408] ip1 <- pool1
I0428 20:00:57.950795 29618 net.cpp:382] ip1 -> ip1
I0428 20:00:57.951133 29618 net.cpp:124] Setting up ip1
I0428 20:00:57.951144 29618 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:57.951161 29618 net.cpp:139] Memory required for data: 4014800
I0428 20:00:57.951174 29618 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:57.951181 29618 net.cpp:86] Creating Layer relu1
I0428 20:00:57.951187 29618 net.cpp:408] relu1 <- ip1
I0428 20:00:57.951196 29618 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:57.951431 29618 net.cpp:124] Setting up relu1
I0428 20:00:57.951444 29618 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:57.951449 29618 net.cpp:139] Memory required for data: 4034800
I0428 20:00:57.951454 29618 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:57.951467 29618 net.cpp:86] Creating Layer ip2
I0428 20:00:57.951472 29618 net.cpp:408] ip2 <- ip1
I0428 20:00:57.951480 29618 net.cpp:382] ip2 -> ip2
I0428 20:00:57.951643 29618 net.cpp:124] Setting up ip2
I0428 20:00:57.951654 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.951659 29618 net.cpp:139] Memory required for data: 4038800
I0428 20:00:57.951668 29618 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:57.951675 29618 net.cpp:86] Creating Layer relu2
I0428 20:00:57.951681 29618 net.cpp:408] relu2 <- ip2
I0428 20:00:57.951689 29618 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:57.951998 29618 net.cpp:124] Setting up relu2
I0428 20:00:57.952026 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.952031 29618 net.cpp:139] Memory required for data: 4042800
I0428 20:00:57.952038 29618 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:57.952047 29618 net.cpp:86] Creating Layer ip3
I0428 20:00:57.952052 29618 net.cpp:408] ip3 <- ip2
I0428 20:00:57.952059 29618 net.cpp:382] ip3 -> ip3
I0428 20:00:57.952193 29618 net.cpp:124] Setting up ip3
I0428 20:00:57.952203 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.952209 29618 net.cpp:139] Memory required for data: 4046800
I0428 20:00:57.952222 29618 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:57.952229 29618 net.cpp:86] Creating Layer relu3
I0428 20:00:57.952234 29618 net.cpp:408] relu3 <- ip3
I0428 20:00:57.952247 29618 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:57.953392 29618 net.cpp:124] Setting up relu3
I0428 20:00:57.953423 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.953428 29618 net.cpp:139] Memory required for data: 4050800
I0428 20:00:57.953433 29618 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:57.953441 29618 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:57.953446 29618 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:57.953454 29618 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:57.953461 29618 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:57.953508 29618 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:57.953516 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.953521 29618 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:57.953526 29618 net.cpp:139] Memory required for data: 4058800
I0428 20:00:57.953531 29618 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:57.953538 29618 net.cpp:86] Creating Layer accuracy
I0428 20:00:57.953543 29618 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:57.953548 29618 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:57.953555 29618 net.cpp:382] accuracy -> accuracy
I0428 20:00:57.953580 29618 net.cpp:124] Setting up accuracy
I0428 20:00:57.953586 29618 net.cpp:131] Top shape: (1)
I0428 20:00:57.953590 29618 net.cpp:139] Memory required for data: 4058804
I0428 20:00:57.953595 29618 layer_factory.hpp:77] Creating layer loss
I0428 20:00:57.953603 29618 net.cpp:86] Creating Layer loss
I0428 20:00:57.953608 29618 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:57.953613 29618 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:57.953620 29618 net.cpp:382] loss -> loss
I0428 20:00:57.953629 29618 layer_factory.hpp:77] Creating layer loss
I0428 20:00:57.953985 29618 net.cpp:124] Setting up loss
I0428 20:00:57.953996 29618 net.cpp:131] Top shape: (1)
I0428 20:00:57.954016 29618 net.cpp:134]     with loss weight 1
I0428 20:00:57.954051 29618 net.cpp:139] Memory required for data: 4058808
I0428 20:00:57.954056 29618 net.cpp:200] loss needs backward computation.
I0428 20:00:57.954077 29618 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:57.954092 29618 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:57.954097 29618 net.cpp:200] relu3 needs backward computation.
I0428 20:00:57.954102 29618 net.cpp:200] ip3 needs backward computation.
I0428 20:00:57.954107 29618 net.cpp:200] relu2 needs backward computation.
I0428 20:00:57.954111 29618 net.cpp:200] ip2 needs backward computation.
I0428 20:00:57.954116 29618 net.cpp:200] relu1 needs backward computation.
I0428 20:00:57.954121 29618 net.cpp:200] ip1 needs backward computation.
I0428 20:00:57.954125 29618 net.cpp:200] pool1 needs backward computation.
I0428 20:00:57.954130 29618 net.cpp:200] conv1 needs backward computation.
I0428 20:00:57.954135 29618 net.cpp:200] pool0 needs backward computation.
I0428 20:00:57.954140 29618 net.cpp:200] conv0 needs backward computation.
I0428 20:00:57.954146 29618 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:57.954152 29618 net.cpp:202] mnist does not need backward computation.
I0428 20:00:57.954156 29618 net.cpp:244] This network produces output accuracy
I0428 20:00:57.954161 29618 net.cpp:244] This network produces output loss
I0428 20:00:57.954181 29618 net.cpp:257] Network initialization done.
I0428 20:00:57.954241 29618 solver.cpp:56] Solver scaffolding done.
I0428 20:00:57.954725 29618 caffe.cpp:248] Starting Optimization
I0428 20:00:57.954732 29618 solver.cpp:273] Solving LeNet
I0428 20:00:57.954747 29618 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:57.955832 29618 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:57.960891 29618 blocking_queue.cpp:49] Waiting for data
I0428 20:00:58.034106 29625 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:58.034720 29618 solver.cpp:398]     Test net output #0: accuracy = 0.1187
I0428 20:00:58.034757 29618 solver.cpp:398]     Test net output #1: loss = 2.31362 (* 1 = 2.31362 loss)
I0428 20:00:58.038038 29618 solver.cpp:219] Iteration 0 (-4.61924e-31 iter/s, 0.0832585s/100 iters), loss = 2.34759
I0428 20:00:58.038081 29618 solver.cpp:238]     Train net output #0: loss = 2.34759 (* 1 = 2.34759 loss)
I0428 20:00:58.038095 29618 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:58.136481 29618 solver.cpp:219] Iteration 100 (1016.4 iter/s, 0.0983868s/100 iters), loss = 0.887313
I0428 20:00:58.136523 29618 solver.cpp:238]     Train net output #0: loss = 0.887313 (* 1 = 0.887313 loss)
I0428 20:00:58.136531 29618 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:58.234355 29618 solver.cpp:219] Iteration 200 (1022.27 iter/s, 0.0978217s/100 iters), loss = 0.448902
I0428 20:00:58.234385 29618 solver.cpp:238]     Train net output #0: loss = 0.448902 (* 1 = 0.448902 loss)
I0428 20:00:58.234392 29618 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:58.332233 29618 solver.cpp:219] Iteration 300 (1022.09 iter/s, 0.0978391s/100 iters), loss = 0.4709
I0428 20:00:58.332276 29618 solver.cpp:238]     Train net output #0: loss = 0.4709 (* 1 = 0.4709 loss)
I0428 20:00:58.332285 29618 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:58.433418 29618 solver.cpp:219] Iteration 400 (988.654 iter/s, 0.101148s/100 iters), loss = 0.273194
I0428 20:00:58.433464 29618 solver.cpp:238]     Train net output #0: loss = 0.273194 (* 1 = 0.273194 loss)
I0428 20:00:58.433471 29618 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:58.531826 29618 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:58.606987 29625 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:58.607625 29618 solver.cpp:398]     Test net output #0: accuracy = 0.8465
I0428 20:00:58.607664 29618 solver.cpp:398]     Test net output #1: loss = 0.394322 (* 1 = 0.394322 loss)
I0428 20:00:58.608783 29618 solver.cpp:219] Iteration 500 (570.435 iter/s, 0.175305s/100 iters), loss = 0.384717
I0428 20:00:58.608871 29618 solver.cpp:238]     Train net output #0: loss = 0.384717 (* 1 = 0.384717 loss)
I0428 20:00:58.608881 29618 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:58.712342 29618 solver.cpp:219] Iteration 600 (966.537 iter/s, 0.103462s/100 iters), loss = 0.127583
I0428 20:00:58.712371 29618 solver.cpp:238]     Train net output #0: loss = 0.127583 (* 1 = 0.127583 loss)
I0428 20:00:58.712395 29618 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:58.812414 29618 solver.cpp:219] Iteration 700 (999.655 iter/s, 0.100035s/100 iters), loss = 0.171761
I0428 20:00:58.812443 29618 solver.cpp:238]     Train net output #0: loss = 0.171761 (* 1 = 0.171761 loss)
I0428 20:00:58.812467 29618 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:58.913246 29618 solver.cpp:219] Iteration 800 (992.139 iter/s, 0.100792s/100 iters), loss = 0.404268
I0428 20:00:58.913276 29618 solver.cpp:238]     Train net output #0: loss = 0.404268 (* 1 = 0.404268 loss)
I0428 20:00:58.913300 29618 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:59.016042 29618 solver.cpp:219] Iteration 900 (973.186 iter/s, 0.102755s/100 iters), loss = 0.156694
I0428 20:00:59.016074 29618 solver.cpp:238]     Train net output #0: loss = 0.156694 (* 1 = 0.156694 loss)
I0428 20:00:59.016083 29618 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:59.050998 29624 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:59.118005 29618 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:59.119441 29618 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:59.120312 29618 solver.cpp:311] Iteration 1000, loss = 0.0896347
I0428 20:00:59.120332 29618 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:59.196440 29625 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:59.197129 29618 solver.cpp:398]     Test net output #0: accuracy = 0.9756
I0428 20:00:59.197154 29618 solver.cpp:398]     Test net output #1: loss = 0.081832 (* 1 = 0.081832 loss)
I0428 20:00:59.197161 29618 solver.cpp:316] Optimization Done.
I0428 20:00:59.197166 29618 caffe.cpp:259] Optimization Done.
