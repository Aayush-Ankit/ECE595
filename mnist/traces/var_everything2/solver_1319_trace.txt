I0428 20:18:27.429919  1140 caffe.cpp:218] Using GPUs 0
I0428 20:18:27.459729  1140 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:27.941829  1140 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1319.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:27.941990  1140 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1319.prototxt
I0428 20:18:27.942569  1140 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:27.942594  1140 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:27.942734  1140 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:27.942836  1140 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:27.942956  1140 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:27.942984  1140 net.cpp:86] Creating Layer mnist
I0428 20:18:27.942996  1140 net.cpp:382] mnist -> data
I0428 20:18:27.943023  1140 net.cpp:382] mnist -> label
I0428 20:18:27.944375  1140 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:27.947470  1140 net.cpp:124] Setting up mnist
I0428 20:18:27.947491  1140 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:27.947501  1140 net.cpp:131] Top shape: 64 (64)
I0428 20:18:27.947506  1140 net.cpp:139] Memory required for data: 200960
I0428 20:18:27.947515  1140 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:27.947533  1140 net.cpp:86] Creating Layer conv0
I0428 20:18:27.947557  1140 net.cpp:408] conv0 <- data
I0428 20:18:27.947595  1140 net.cpp:382] conv0 -> conv0
I0428 20:18:28.246773  1140 net.cpp:124] Setting up conv0
I0428 20:18:28.246819  1140 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:28.246824  1140 net.cpp:139] Memory required for data: 7573760
I0428 20:18:28.246873  1140 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:28.246891  1140 net.cpp:86] Creating Layer pool0
I0428 20:18:28.246896  1140 net.cpp:408] pool0 <- conv0
I0428 20:18:28.246903  1140 net.cpp:382] pool0 -> pool0
I0428 20:18:28.246961  1140 net.cpp:124] Setting up pool0
I0428 20:18:28.246971  1140 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:28.246975  1140 net.cpp:139] Memory required for data: 9416960
I0428 20:18:28.246980  1140 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:28.246995  1140 net.cpp:86] Creating Layer conv1
I0428 20:18:28.247000  1140 net.cpp:408] conv1 <- pool0
I0428 20:18:28.247007  1140 net.cpp:382] conv1 -> conv1
I0428 20:18:28.250690  1140 net.cpp:124] Setting up conv1
I0428 20:18:28.250722  1140 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:28.250727  1140 net.cpp:139] Memory required for data: 9580800
I0428 20:18:28.250738  1140 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:28.250747  1140 net.cpp:86] Creating Layer pool1
I0428 20:18:28.250752  1140 net.cpp:408] pool1 <- conv1
I0428 20:18:28.250774  1140 net.cpp:382] pool1 -> pool1
I0428 20:18:28.250818  1140 net.cpp:124] Setting up pool1
I0428 20:18:28.250833  1140 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:28.250838  1140 net.cpp:139] Memory required for data: 9621760
I0428 20:18:28.250841  1140 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:28.250851  1140 net.cpp:86] Creating Layer ip1
I0428 20:18:28.250855  1140 net.cpp:408] ip1 <- pool1
I0428 20:18:28.250862  1140 net.cpp:382] ip1 -> ip1
I0428 20:18:28.251055  1140 net.cpp:124] Setting up ip1
I0428 20:18:28.251065  1140 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:28.251070  1140 net.cpp:139] Memory required for data: 9634560
I0428 20:18:28.251080  1140 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:28.251087  1140 net.cpp:86] Creating Layer relu1
I0428 20:18:28.251111  1140 net.cpp:408] relu1 <- ip1
I0428 20:18:28.251117  1140 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:28.251322  1140 net.cpp:124] Setting up relu1
I0428 20:18:28.251334  1140 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:28.251338  1140 net.cpp:139] Memory required for data: 9647360
I0428 20:18:28.251343  1140 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:28.251351  1140 net.cpp:86] Creating Layer ip2
I0428 20:18:28.251356  1140 net.cpp:408] ip2 <- ip1
I0428 20:18:28.251363  1140 net.cpp:382] ip2 -> ip2
I0428 20:18:28.251494  1140 net.cpp:124] Setting up ip2
I0428 20:18:28.251504  1140 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:28.251508  1140 net.cpp:139] Memory required for data: 9649920
I0428 20:18:28.251516  1140 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:28.251524  1140 net.cpp:86] Creating Layer relu2
I0428 20:18:28.251528  1140 net.cpp:408] relu2 <- ip2
I0428 20:18:28.251534  1140 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:28.252562  1140 net.cpp:124] Setting up relu2
I0428 20:18:28.252593  1140 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:28.252598  1140 net.cpp:139] Memory required for data: 9652480
I0428 20:18:28.252602  1140 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:28.252611  1140 net.cpp:86] Creating Layer ip3
I0428 20:18:28.252616  1140 net.cpp:408] ip3 <- ip2
I0428 20:18:28.252624  1140 net.cpp:382] ip3 -> ip3
I0428 20:18:28.252743  1140 net.cpp:124] Setting up ip3
I0428 20:18:28.252753  1140 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:28.252758  1140 net.cpp:139] Memory required for data: 9655040
I0428 20:18:28.252768  1140 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:28.252774  1140 net.cpp:86] Creating Layer relu3
I0428 20:18:28.252779  1140 net.cpp:408] relu3 <- ip3
I0428 20:18:28.252785  1140 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:28.253029  1140 net.cpp:124] Setting up relu3
I0428 20:18:28.253041  1140 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:28.253046  1140 net.cpp:139] Memory required for data: 9657600
I0428 20:18:28.253051  1140 layer_factory.hpp:77] Creating layer loss
I0428 20:18:28.253060  1140 net.cpp:86] Creating Layer loss
I0428 20:18:28.253064  1140 net.cpp:408] loss <- ip3
I0428 20:18:28.253070  1140 net.cpp:408] loss <- label
I0428 20:18:28.253077  1140 net.cpp:382] loss -> loss
I0428 20:18:28.253098  1140 layer_factory.hpp:77] Creating layer loss
I0428 20:18:28.253473  1140 net.cpp:124] Setting up loss
I0428 20:18:28.253484  1140 net.cpp:131] Top shape: (1)
I0428 20:18:28.253489  1140 net.cpp:134]     with loss weight 1
I0428 20:18:28.253509  1140 net.cpp:139] Memory required for data: 9657604
I0428 20:18:28.253515  1140 net.cpp:200] loss needs backward computation.
I0428 20:18:28.253520  1140 net.cpp:200] relu3 needs backward computation.
I0428 20:18:28.253525  1140 net.cpp:200] ip3 needs backward computation.
I0428 20:18:28.253530  1140 net.cpp:200] relu2 needs backward computation.
I0428 20:18:28.253533  1140 net.cpp:200] ip2 needs backward computation.
I0428 20:18:28.253552  1140 net.cpp:200] relu1 needs backward computation.
I0428 20:18:28.253556  1140 net.cpp:200] ip1 needs backward computation.
I0428 20:18:28.253561  1140 net.cpp:200] pool1 needs backward computation.
I0428 20:18:28.253566  1140 net.cpp:200] conv1 needs backward computation.
I0428 20:18:28.253584  1140 net.cpp:200] pool0 needs backward computation.
I0428 20:18:28.253588  1140 net.cpp:200] conv0 needs backward computation.
I0428 20:18:28.253593  1140 net.cpp:202] mnist does not need backward computation.
I0428 20:18:28.253597  1140 net.cpp:244] This network produces output loss
I0428 20:18:28.253609  1140 net.cpp:257] Network initialization done.
I0428 20:18:28.254053  1140 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1319.prototxt
I0428 20:18:28.254103  1140 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:28.254228  1140 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:28.254331  1140 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:28.254396  1140 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:28.254431  1140 net.cpp:86] Creating Layer mnist
I0428 20:18:28.254438  1140 net.cpp:382] mnist -> data
I0428 20:18:28.254449  1140 net.cpp:382] mnist -> label
I0428 20:18:28.254557  1140 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:28.257015  1140 net.cpp:124] Setting up mnist
I0428 20:18:28.257069  1140 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:28.257077  1140 net.cpp:131] Top shape: 100 (100)
I0428 20:18:28.257081  1140 net.cpp:139] Memory required for data: 314000
I0428 20:18:28.257087  1140 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:28.257097  1140 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:28.257100  1140 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:28.257122  1140 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:28.257140  1140 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:28.257221  1140 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:28.257232  1140 net.cpp:131] Top shape: 100 (100)
I0428 20:18:28.257237  1140 net.cpp:131] Top shape: 100 (100)
I0428 20:18:28.257242  1140 net.cpp:139] Memory required for data: 314800
I0428 20:18:28.257247  1140 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:28.257258  1140 net.cpp:86] Creating Layer conv0
I0428 20:18:28.257262  1140 net.cpp:408] conv0 <- data
I0428 20:18:28.257271  1140 net.cpp:382] conv0 -> conv0
I0428 20:18:28.259404  1140 net.cpp:124] Setting up conv0
I0428 20:18:28.259436  1140 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:28.259441  1140 net.cpp:139] Memory required for data: 11834800
I0428 20:18:28.259454  1140 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:28.259462  1140 net.cpp:86] Creating Layer pool0
I0428 20:18:28.259467  1140 net.cpp:408] pool0 <- conv0
I0428 20:18:28.259474  1140 net.cpp:382] pool0 -> pool0
I0428 20:18:28.259534  1140 net.cpp:124] Setting up pool0
I0428 20:18:28.259544  1140 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:28.259548  1140 net.cpp:139] Memory required for data: 14714800
I0428 20:18:28.259553  1140 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:28.259564  1140 net.cpp:86] Creating Layer conv1
I0428 20:18:28.259569  1140 net.cpp:408] conv1 <- pool0
I0428 20:18:28.259577  1140 net.cpp:382] conv1 -> conv1
I0428 20:18:28.261839  1140 net.cpp:124] Setting up conv1
I0428 20:18:28.261870  1140 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:28.261875  1140 net.cpp:139] Memory required for data: 14970800
I0428 20:18:28.261886  1140 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:28.261895  1140 net.cpp:86] Creating Layer pool1
I0428 20:18:28.261899  1140 net.cpp:408] pool1 <- conv1
I0428 20:18:28.261921  1140 net.cpp:382] pool1 -> pool1
I0428 20:18:28.261966  1140 net.cpp:124] Setting up pool1
I0428 20:18:28.261976  1140 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:28.261981  1140 net.cpp:139] Memory required for data: 15034800
I0428 20:18:28.261986  1140 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:28.261993  1140 net.cpp:86] Creating Layer ip1
I0428 20:18:28.261998  1140 net.cpp:408] ip1 <- pool1
I0428 20:18:28.262006  1140 net.cpp:382] ip1 -> ip1
I0428 20:18:28.262229  1140 net.cpp:124] Setting up ip1
I0428 20:18:28.262240  1140 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:28.262259  1140 net.cpp:139] Memory required for data: 15054800
I0428 20:18:28.262270  1140 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:28.262279  1140 net.cpp:86] Creating Layer relu1
I0428 20:18:28.262284  1140 net.cpp:408] relu1 <- ip1
I0428 20:18:28.262290  1140 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:28.262634  1140 net.cpp:124] Setting up relu1
I0428 20:18:28.262645  1140 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:28.262667  1140 net.cpp:139] Memory required for data: 15074800
I0428 20:18:28.262672  1140 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:28.262696  1140 net.cpp:86] Creating Layer ip2
I0428 20:18:28.262707  1140 net.cpp:408] ip2 <- ip1
I0428 20:18:28.262714  1140 net.cpp:382] ip2 -> ip2
I0428 20:18:28.262840  1140 net.cpp:124] Setting up ip2
I0428 20:18:28.262850  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.262854  1140 net.cpp:139] Memory required for data: 15078800
I0428 20:18:28.262862  1140 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:28.262868  1140 net.cpp:86] Creating Layer relu2
I0428 20:18:28.262873  1140 net.cpp:408] relu2 <- ip2
I0428 20:18:28.262881  1140 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:28.263082  1140 net.cpp:124] Setting up relu2
I0428 20:18:28.263094  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.263099  1140 net.cpp:139] Memory required for data: 15082800
I0428 20:18:28.263104  1140 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:28.263119  1140 net.cpp:86] Creating Layer ip3
I0428 20:18:28.263124  1140 net.cpp:408] ip3 <- ip2
I0428 20:18:28.263131  1140 net.cpp:382] ip3 -> ip3
I0428 20:18:28.263268  1140 net.cpp:124] Setting up ip3
I0428 20:18:28.263281  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.263288  1140 net.cpp:139] Memory required for data: 15086800
I0428 20:18:28.263299  1140 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:28.263306  1140 net.cpp:86] Creating Layer relu3
I0428 20:18:28.263325  1140 net.cpp:408] relu3 <- ip3
I0428 20:18:28.263331  1140 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:28.264451  1140 net.cpp:124] Setting up relu3
I0428 20:18:28.264482  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.264487  1140 net.cpp:139] Memory required for data: 15090800
I0428 20:18:28.264506  1140 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:28.264515  1140 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:28.264521  1140 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:28.264529  1140 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:28.264539  1140 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:28.264587  1140 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:28.264595  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.264601  1140 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:28.264606  1140 net.cpp:139] Memory required for data: 15098800
I0428 20:18:28.264611  1140 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:28.264618  1140 net.cpp:86] Creating Layer accuracy
I0428 20:18:28.264623  1140 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:28.264629  1140 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:28.264636  1140 net.cpp:382] accuracy -> accuracy
I0428 20:18:28.264647  1140 net.cpp:124] Setting up accuracy
I0428 20:18:28.264653  1140 net.cpp:131] Top shape: (1)
I0428 20:18:28.264658  1140 net.cpp:139] Memory required for data: 15098804
I0428 20:18:28.264662  1140 layer_factory.hpp:77] Creating layer loss
I0428 20:18:28.264669  1140 net.cpp:86] Creating Layer loss
I0428 20:18:28.264674  1140 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:28.264680  1140 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:28.264686  1140 net.cpp:382] loss -> loss
I0428 20:18:28.264705  1140 layer_factory.hpp:77] Creating layer loss
I0428 20:18:28.265040  1140 net.cpp:124] Setting up loss
I0428 20:18:28.265069  1140 net.cpp:131] Top shape: (1)
I0428 20:18:28.265074  1140 net.cpp:134]     with loss weight 1
I0428 20:18:28.265094  1140 net.cpp:139] Memory required for data: 15098808
I0428 20:18:28.265100  1140 net.cpp:200] loss needs backward computation.
I0428 20:18:28.265105  1140 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:28.265111  1140 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:28.265131  1140 net.cpp:200] relu3 needs backward computation.
I0428 20:18:28.265136  1140 net.cpp:200] ip3 needs backward computation.
I0428 20:18:28.265141  1140 net.cpp:200] relu2 needs backward computation.
I0428 20:18:28.265144  1140 net.cpp:200] ip2 needs backward computation.
I0428 20:18:28.265149  1140 net.cpp:200] relu1 needs backward computation.
I0428 20:18:28.265153  1140 net.cpp:200] ip1 needs backward computation.
I0428 20:18:28.265158  1140 net.cpp:200] pool1 needs backward computation.
I0428 20:18:28.265168  1140 net.cpp:200] conv1 needs backward computation.
I0428 20:18:28.265173  1140 net.cpp:200] pool0 needs backward computation.
I0428 20:18:28.265178  1140 net.cpp:200] conv0 needs backward computation.
I0428 20:18:28.265183  1140 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:28.265189  1140 net.cpp:202] mnist does not need backward computation.
I0428 20:18:28.265193  1140 net.cpp:244] This network produces output accuracy
I0428 20:18:28.265198  1140 net.cpp:244] This network produces output loss
I0428 20:18:28.265220  1140 net.cpp:257] Network initialization done.
I0428 20:18:28.265275  1140 solver.cpp:56] Solver scaffolding done.
I0428 20:18:28.265856  1140 caffe.cpp:248] Starting Optimization
I0428 20:18:28.265878  1140 solver.cpp:273] Solving LeNet
I0428 20:18:28.265898  1140 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:28.266885  1140 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:28.275137  1140 blocking_queue.cpp:49] Waiting for data
I0428 20:18:28.347219  1148 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:28.348250  1140 solver.cpp:398]     Test net output #0: accuracy = 0.1421
I0428 20:18:28.348304  1140 solver.cpp:398]     Test net output #1: loss = 2.29669 (* 1 = 2.29669 loss)
I0428 20:18:28.354125  1140 solver.cpp:219] Iteration 0 (0 iter/s, 0.0881826s/100 iters), loss = 2.29024
I0428 20:18:28.354168  1140 solver.cpp:238]     Train net output #0: loss = 2.29024 (* 1 = 2.29024 loss)
I0428 20:18:28.354183  1140 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:28.481506  1140 solver.cpp:219] Iteration 100 (785.384 iter/s, 0.127326s/100 iters), loss = 0.76349
I0428 20:18:28.481550  1140 solver.cpp:238]     Train net output #0: loss = 0.76349 (* 1 = 0.76349 loss)
I0428 20:18:28.481559  1140 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:28.608253  1140 solver.cpp:219] Iteration 200 (789.213 iter/s, 0.126709s/100 iters), loss = 0.406783
I0428 20:18:28.608297  1140 solver.cpp:238]     Train net output #0: loss = 0.406783 (* 1 = 0.406783 loss)
I0428 20:18:28.608305  1140 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:28.735522  1140 solver.cpp:219] Iteration 300 (786.072 iter/s, 0.127215s/100 iters), loss = 0.272594
I0428 20:18:28.735565  1140 solver.cpp:238]     Train net output #0: loss = 0.272594 (* 1 = 0.272594 loss)
I0428 20:18:28.735589  1140 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:28.863298  1140 solver.cpp:219] Iteration 400 (782.954 iter/s, 0.127721s/100 iters), loss = 0.164614
I0428 20:18:28.863345  1140 solver.cpp:238]     Train net output #0: loss = 0.164614 (* 1 = 0.164614 loss)
I0428 20:18:28.863354  1140 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:28.988874  1140 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:29.061408  1148 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:29.063956  1140 solver.cpp:398]     Test net output #0: accuracy = 0.9536
I0428 20:18:29.063995  1140 solver.cpp:398]     Test net output #1: loss = 0.169517 (* 1 = 0.169517 loss)
I0428 20:18:29.065246  1140 solver.cpp:219] Iteration 500 (495.325 iter/s, 0.201888s/100 iters), loss = 0.270124
I0428 20:18:29.065309  1140 solver.cpp:238]     Train net output #0: loss = 0.270124 (* 1 = 0.270124 loss)
I0428 20:18:29.065318  1140 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:29.193548  1140 solver.cpp:219] Iteration 600 (779.846 iter/s, 0.12823s/100 iters), loss = 0.0911538
I0428 20:18:29.193591  1140 solver.cpp:238]     Train net output #0: loss = 0.0911538 (* 1 = 0.0911538 loss)
I0428 20:18:29.193600  1140 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:29.319947  1140 solver.cpp:219] Iteration 700 (791.399 iter/s, 0.126359s/100 iters), loss = 0.226452
I0428 20:18:29.319990  1140 solver.cpp:238]     Train net output #0: loss = 0.226452 (* 1 = 0.226452 loss)
I0428 20:18:29.319998  1140 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:29.447140  1140 solver.cpp:219] Iteration 800 (786.542 iter/s, 0.127139s/100 iters), loss = 0.246545
I0428 20:18:29.447183  1140 solver.cpp:238]     Train net output #0: loss = 0.246545 (* 1 = 0.246545 loss)
I0428 20:18:29.447191  1140 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:29.575234  1140 solver.cpp:219] Iteration 900 (781.006 iter/s, 0.12804s/100 iters), loss = 0.162427
I0428 20:18:29.575278  1140 solver.cpp:238]     Train net output #0: loss = 0.162427 (* 1 = 0.162427 loss)
I0428 20:18:29.575286  1140 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:29.617998  1146 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:29.701603  1140 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:29.702941  1140 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:29.704066  1140 solver.cpp:311] Iteration 1000, loss = 0.103234
I0428 20:18:29.704099  1140 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:29.781411  1148 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:29.783978  1140 solver.cpp:398]     Test net output #0: accuracy = 0.9714
I0428 20:18:29.784004  1140 solver.cpp:398]     Test net output #1: loss = 0.094181 (* 1 = 0.094181 loss)
I0428 20:18:29.784011  1140 solver.cpp:316] Optimization Done.
I0428 20:18:29.784015  1140 caffe.cpp:259] Optimization Done.
