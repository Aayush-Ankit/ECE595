I0428 20:23:29.739111  2246 caffe.cpp:218] Using GPUs 0
I0428 20:23:29.767884  2246 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:30.214614  2246 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1422.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:30.214735  2246 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1422.prototxt
I0428 20:23:30.215054  2246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:30.215070  2246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:30.215147  2246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:30.215207  2246 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:30.215303  2246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:30.215323  2246 net.cpp:86] Creating Layer mnist
I0428 20:23:30.215329  2246 net.cpp:382] mnist -> data
I0428 20:23:30.215348  2246 net.cpp:382] mnist -> label
I0428 20:23:30.216218  2246 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:30.218317  2246 net.cpp:124] Setting up mnist
I0428 20:23:30.218346  2246 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:30.218351  2246 net.cpp:131] Top shape: 64 (64)
I0428 20:23:30.218354  2246 net.cpp:139] Memory required for data: 200960
I0428 20:23:30.218359  2246 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:30.218374  2246 net.cpp:86] Creating Layer conv0
I0428 20:23:30.218390  2246 net.cpp:408] conv0 <- data
I0428 20:23:30.218400  2246 net.cpp:382] conv0 -> conv0
I0428 20:23:30.452008  2246 net.cpp:124] Setting up conv0
I0428 20:23:30.452033  2246 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:30.452036  2246 net.cpp:139] Memory required for data: 7573760
I0428 20:23:30.452050  2246 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:30.452061  2246 net.cpp:86] Creating Layer pool0
I0428 20:23:30.452066  2246 net.cpp:408] pool0 <- conv0
I0428 20:23:30.452071  2246 net.cpp:382] pool0 -> pool0
I0428 20:23:30.452112  2246 net.cpp:124] Setting up pool0
I0428 20:23:30.452117  2246 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:30.452121  2246 net.cpp:139] Memory required for data: 9416960
I0428 20:23:30.452122  2246 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:30.452133  2246 net.cpp:86] Creating Layer conv1
I0428 20:23:30.452136  2246 net.cpp:408] conv1 <- pool0
I0428 20:23:30.452141  2246 net.cpp:382] conv1 -> conv1
I0428 20:23:30.455461  2246 net.cpp:124] Setting up conv1
I0428 20:23:30.455489  2246 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:30.455493  2246 net.cpp:139] Memory required for data: 11055360
I0428 20:23:30.455502  2246 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:30.455508  2246 net.cpp:86] Creating Layer pool1
I0428 20:23:30.455513  2246 net.cpp:408] pool1 <- conv1
I0428 20:23:30.455518  2246 net.cpp:382] pool1 -> pool1
I0428 20:23:30.455565  2246 net.cpp:124] Setting up pool1
I0428 20:23:30.455570  2246 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:30.455574  2246 net.cpp:139] Memory required for data: 11464960
I0428 20:23:30.455576  2246 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:30.455582  2246 net.cpp:86] Creating Layer ip1
I0428 20:23:30.455585  2246 net.cpp:408] ip1 <- pool1
I0428 20:23:30.455590  2246 net.cpp:382] ip1 -> ip1
I0428 20:23:30.456552  2246 net.cpp:124] Setting up ip1
I0428 20:23:30.456563  2246 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:30.456567  2246 net.cpp:139] Memory required for data: 11467520
I0428 20:23:30.456573  2246 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:30.456578  2246 net.cpp:86] Creating Layer relu1
I0428 20:23:30.456581  2246 net.cpp:408] relu1 <- ip1
I0428 20:23:30.456585  2246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:30.456769  2246 net.cpp:124] Setting up relu1
I0428 20:23:30.456779  2246 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:30.456784  2246 net.cpp:139] Memory required for data: 11470080
I0428 20:23:30.456789  2246 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:30.456797  2246 net.cpp:86] Creating Layer ip2
I0428 20:23:30.456801  2246 net.cpp:408] ip2 <- ip1
I0428 20:23:30.456806  2246 net.cpp:382] ip2 -> ip2
I0428 20:23:30.456940  2246 net.cpp:124] Setting up ip2
I0428 20:23:30.456949  2246 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:30.456953  2246 net.cpp:139] Memory required for data: 11482880
I0428 20:23:30.456959  2246 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:30.456964  2246 net.cpp:86] Creating Layer relu2
I0428 20:23:30.456967  2246 net.cpp:408] relu2 <- ip2
I0428 20:23:30.456971  2246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:30.457693  2246 net.cpp:124] Setting up relu2
I0428 20:23:30.457705  2246 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:30.457708  2246 net.cpp:139] Memory required for data: 11495680
I0428 20:23:30.457711  2246 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:30.457718  2246 net.cpp:86] Creating Layer ip3
I0428 20:23:30.457721  2246 net.cpp:408] ip3 <- ip2
I0428 20:23:30.457726  2246 net.cpp:382] ip3 -> ip3
I0428 20:23:30.457839  2246 net.cpp:124] Setting up ip3
I0428 20:23:30.457846  2246 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:30.457849  2246 net.cpp:139] Memory required for data: 11498240
I0428 20:23:30.457857  2246 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:30.457861  2246 net.cpp:86] Creating Layer relu3
I0428 20:23:30.457864  2246 net.cpp:408] relu3 <- ip3
I0428 20:23:30.457870  2246 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:30.458024  2246 net.cpp:124] Setting up relu3
I0428 20:23:30.458031  2246 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:30.458034  2246 net.cpp:139] Memory required for data: 11500800
I0428 20:23:30.458037  2246 layer_factory.hpp:77] Creating layer loss
I0428 20:23:30.458043  2246 net.cpp:86] Creating Layer loss
I0428 20:23:30.458060  2246 net.cpp:408] loss <- ip3
I0428 20:23:30.458065  2246 net.cpp:408] loss <- label
I0428 20:23:30.458070  2246 net.cpp:382] loss -> loss
I0428 20:23:30.458086  2246 layer_factory.hpp:77] Creating layer loss
I0428 20:23:30.458287  2246 net.cpp:124] Setting up loss
I0428 20:23:30.458297  2246 net.cpp:131] Top shape: (1)
I0428 20:23:30.458302  2246 net.cpp:134]     with loss weight 1
I0428 20:23:30.458317  2246 net.cpp:139] Memory required for data: 11500804
I0428 20:23:30.458320  2246 net.cpp:200] loss needs backward computation.
I0428 20:23:30.458323  2246 net.cpp:200] relu3 needs backward computation.
I0428 20:23:30.458326  2246 net.cpp:200] ip3 needs backward computation.
I0428 20:23:30.458329  2246 net.cpp:200] relu2 needs backward computation.
I0428 20:23:30.458333  2246 net.cpp:200] ip2 needs backward computation.
I0428 20:23:30.458335  2246 net.cpp:200] relu1 needs backward computation.
I0428 20:23:30.458338  2246 net.cpp:200] ip1 needs backward computation.
I0428 20:23:30.458340  2246 net.cpp:200] pool1 needs backward computation.
I0428 20:23:30.458343  2246 net.cpp:200] conv1 needs backward computation.
I0428 20:23:30.458346  2246 net.cpp:200] pool0 needs backward computation.
I0428 20:23:30.458349  2246 net.cpp:200] conv0 needs backward computation.
I0428 20:23:30.458353  2246 net.cpp:202] mnist does not need backward computation.
I0428 20:23:30.458354  2246 net.cpp:244] This network produces output loss
I0428 20:23:30.458364  2246 net.cpp:257] Network initialization done.
I0428 20:23:30.458688  2246 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1422.prototxt
I0428 20:23:30.458712  2246 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:30.458797  2246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:30.458869  2246 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:30.458910  2246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:30.458921  2246 net.cpp:86] Creating Layer mnist
I0428 20:23:30.458925  2246 net.cpp:382] mnist -> data
I0428 20:23:30.458932  2246 net.cpp:382] mnist -> label
I0428 20:23:30.459012  2246 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:30.460059  2246 net.cpp:124] Setting up mnist
I0428 20:23:30.460085  2246 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:30.460089  2246 net.cpp:131] Top shape: 100 (100)
I0428 20:23:30.460093  2246 net.cpp:139] Memory required for data: 314000
I0428 20:23:30.460096  2246 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:30.460119  2246 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:30.460122  2246 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:30.460126  2246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:30.460132  2246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:30.460171  2246 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:30.460176  2246 net.cpp:131] Top shape: 100 (100)
I0428 20:23:30.460180  2246 net.cpp:131] Top shape: 100 (100)
I0428 20:23:30.460182  2246 net.cpp:139] Memory required for data: 314800
I0428 20:23:30.460186  2246 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:30.460193  2246 net.cpp:86] Creating Layer conv0
I0428 20:23:30.460196  2246 net.cpp:408] conv0 <- data
I0428 20:23:30.460201  2246 net.cpp:382] conv0 -> conv0
I0428 20:23:30.461897  2246 net.cpp:124] Setting up conv0
I0428 20:23:30.461911  2246 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:30.461915  2246 net.cpp:139] Memory required for data: 11834800
I0428 20:23:30.461923  2246 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:30.461930  2246 net.cpp:86] Creating Layer pool0
I0428 20:23:30.461932  2246 net.cpp:408] pool0 <- conv0
I0428 20:23:30.461937  2246 net.cpp:382] pool0 -> pool0
I0428 20:23:30.461985  2246 net.cpp:124] Setting up pool0
I0428 20:23:30.461990  2246 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:30.461993  2246 net.cpp:139] Memory required for data: 14714800
I0428 20:23:30.461997  2246 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:30.462003  2246 net.cpp:86] Creating Layer conv1
I0428 20:23:30.462007  2246 net.cpp:408] conv1 <- pool0
I0428 20:23:30.462011  2246 net.cpp:382] conv1 -> conv1
I0428 20:23:30.465301  2246 net.cpp:124] Setting up conv1
I0428 20:23:30.465330  2246 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:30.465334  2246 net.cpp:139] Memory required for data: 17274800
I0428 20:23:30.465343  2246 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:30.465361  2246 net.cpp:86] Creating Layer pool1
I0428 20:23:30.465365  2246 net.cpp:408] pool1 <- conv1
I0428 20:23:30.465370  2246 net.cpp:382] pool1 -> pool1
I0428 20:23:30.465406  2246 net.cpp:124] Setting up pool1
I0428 20:23:30.465412  2246 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:30.465415  2246 net.cpp:139] Memory required for data: 17914800
I0428 20:23:30.465418  2246 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:30.465425  2246 net.cpp:86] Creating Layer ip1
I0428 20:23:30.465428  2246 net.cpp:408] ip1 <- pool1
I0428 20:23:30.465432  2246 net.cpp:382] ip1 -> ip1
I0428 20:23:30.465610  2246 net.cpp:124] Setting up ip1
I0428 20:23:30.465628  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.465631  2246 net.cpp:139] Memory required for data: 17918800
I0428 20:23:30.465639  2246 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:30.465667  2246 net.cpp:86] Creating Layer relu1
I0428 20:23:30.465670  2246 net.cpp:408] relu1 <- ip1
I0428 20:23:30.465689  2246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:30.465838  2246 net.cpp:124] Setting up relu1
I0428 20:23:30.465847  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.465849  2246 net.cpp:139] Memory required for data: 17922800
I0428 20:23:30.465857  2246 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:30.465864  2246 net.cpp:86] Creating Layer ip2
I0428 20:23:30.465867  2246 net.cpp:408] ip2 <- ip1
I0428 20:23:30.465878  2246 net.cpp:382] ip2 -> ip2
I0428 20:23:30.465975  2246 net.cpp:124] Setting up ip2
I0428 20:23:30.465981  2246 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:30.465984  2246 net.cpp:139] Memory required for data: 17942800
I0428 20:23:30.465989  2246 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:30.465993  2246 net.cpp:86] Creating Layer relu2
I0428 20:23:30.465996  2246 net.cpp:408] relu2 <- ip2
I0428 20:23:30.466001  2246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:30.466197  2246 net.cpp:124] Setting up relu2
I0428 20:23:30.466204  2246 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:30.466212  2246 net.cpp:139] Memory required for data: 17962800
I0428 20:23:30.466215  2246 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:30.466222  2246 net.cpp:86] Creating Layer ip3
I0428 20:23:30.466224  2246 net.cpp:408] ip3 <- ip2
I0428 20:23:30.466229  2246 net.cpp:382] ip3 -> ip3
I0428 20:23:30.466351  2246 net.cpp:124] Setting up ip3
I0428 20:23:30.466359  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.466367  2246 net.cpp:139] Memory required for data: 17966800
I0428 20:23:30.466374  2246 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:30.466378  2246 net.cpp:86] Creating Layer relu3
I0428 20:23:30.466389  2246 net.cpp:408] relu3 <- ip3
I0428 20:23:30.466393  2246 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:30.467116  2246 net.cpp:124] Setting up relu3
I0428 20:23:30.467128  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.467131  2246 net.cpp:139] Memory required for data: 17970800
I0428 20:23:30.467134  2246 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:30.467141  2246 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:30.467144  2246 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:30.467149  2246 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:30.467156  2246 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:30.467196  2246 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:30.467201  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.467206  2246 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:30.467208  2246 net.cpp:139] Memory required for data: 17978800
I0428 20:23:30.467211  2246 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:30.467218  2246 net.cpp:86] Creating Layer accuracy
I0428 20:23:30.467221  2246 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:30.467224  2246 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:30.467228  2246 net.cpp:382] accuracy -> accuracy
I0428 20:23:30.467234  2246 net.cpp:124] Setting up accuracy
I0428 20:23:30.467238  2246 net.cpp:131] Top shape: (1)
I0428 20:23:30.467242  2246 net.cpp:139] Memory required for data: 17978804
I0428 20:23:30.467243  2246 layer_factory.hpp:77] Creating layer loss
I0428 20:23:30.467248  2246 net.cpp:86] Creating Layer loss
I0428 20:23:30.467252  2246 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:30.467254  2246 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:30.467258  2246 net.cpp:382] loss -> loss
I0428 20:23:30.467263  2246 layer_factory.hpp:77] Creating layer loss
I0428 20:23:30.467478  2246 net.cpp:124] Setting up loss
I0428 20:23:30.467485  2246 net.cpp:131] Top shape: (1)
I0428 20:23:30.467489  2246 net.cpp:134]     with loss weight 1
I0428 20:23:30.467502  2246 net.cpp:139] Memory required for data: 17978808
I0428 20:23:30.467505  2246 net.cpp:200] loss needs backward computation.
I0428 20:23:30.467509  2246 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:30.467512  2246 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:30.467514  2246 net.cpp:200] relu3 needs backward computation.
I0428 20:23:30.467517  2246 net.cpp:200] ip3 needs backward computation.
I0428 20:23:30.467520  2246 net.cpp:200] relu2 needs backward computation.
I0428 20:23:30.467522  2246 net.cpp:200] ip2 needs backward computation.
I0428 20:23:30.467525  2246 net.cpp:200] relu1 needs backward computation.
I0428 20:23:30.467545  2246 net.cpp:200] ip1 needs backward computation.
I0428 20:23:30.467548  2246 net.cpp:200] pool1 needs backward computation.
I0428 20:23:30.467551  2246 net.cpp:200] conv1 needs backward computation.
I0428 20:23:30.467555  2246 net.cpp:200] pool0 needs backward computation.
I0428 20:23:30.467557  2246 net.cpp:200] conv0 needs backward computation.
I0428 20:23:30.467561  2246 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:30.467566  2246 net.cpp:202] mnist does not need backward computation.
I0428 20:23:30.467573  2246 net.cpp:244] This network produces output accuracy
I0428 20:23:30.467577  2246 net.cpp:244] This network produces output loss
I0428 20:23:30.467588  2246 net.cpp:257] Network initialization done.
I0428 20:23:30.467628  2246 solver.cpp:56] Solver scaffolding done.
I0428 20:23:30.468000  2246 caffe.cpp:248] Starting Optimization
I0428 20:23:30.468008  2246 solver.cpp:273] Solving LeNet
I0428 20:23:30.468010  2246 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:30.468878  2246 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:30.481806  2246 blocking_queue.cpp:49] Waiting for data
I0428 20:23:30.557986  2253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:30.559393  2246 solver.cpp:398]     Test net output #0: accuracy = 0.1034
I0428 20:23:30.559414  2246 solver.cpp:398]     Test net output #1: loss = 2.30618 (* 1 = 2.30618 loss)
I0428 20:23:30.565222  2246 solver.cpp:219] Iteration 0 (-8.36575e-43 iter/s, 0.0971797s/100 iters), loss = 2.29435
I0428 20:23:30.565260  2246 solver.cpp:238]     Train net output #0: loss = 2.29435 (* 1 = 2.29435 loss)
I0428 20:23:30.565271  2246 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:30.770951  2246 solver.cpp:219] Iteration 100 (486.21 iter/s, 0.205672s/100 iters), loss = 0.851655
I0428 20:23:30.770977  2246 solver.cpp:238]     Train net output #0: loss = 0.851655 (* 1 = 0.851655 loss)
I0428 20:23:30.770984  2246 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:30.990221  2246 solver.cpp:219] Iteration 200 (456.156 iter/s, 0.219223s/100 iters), loss = 0.362047
I0428 20:23:30.990255  2246 solver.cpp:238]     Train net output #0: loss = 0.362047 (* 1 = 0.362047 loss)
I0428 20:23:30.990264  2246 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:31.209512  2246 solver.cpp:219] Iteration 300 (456.125 iter/s, 0.219238s/100 iters), loss = 0.48613
I0428 20:23:31.209555  2246 solver.cpp:238]     Train net output #0: loss = 0.48613 (* 1 = 0.48613 loss)
I0428 20:23:31.209566  2246 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:31.439381  2246 solver.cpp:219] Iteration 400 (435.138 iter/s, 0.229812s/100 iters), loss = 0.45963
I0428 20:23:31.439415  2246 solver.cpp:238]     Train net output #0: loss = 0.45963 (* 1 = 0.45963 loss)
I0428 20:23:31.439424  2246 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:31.663012  2246 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:31.753166  2253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:31.756342  2246 solver.cpp:398]     Test net output #0: accuracy = 0.9414
I0428 20:23:31.756369  2246 solver.cpp:398]     Test net output #1: loss = 0.347994 (* 1 = 0.347994 loss)
I0428 20:23:31.758493  2246 solver.cpp:219] Iteration 500 (313.424 iter/s, 0.319057s/100 iters), loss = 0.268629
I0428 20:23:31.758540  2246 solver.cpp:238]     Train net output #0: loss = 0.268629 (* 1 = 0.268629 loss)
I0428 20:23:31.758549  2246 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:31.986111  2246 solver.cpp:219] Iteration 600 (439.454 iter/s, 0.227555s/100 iters), loss = 0.26867
I0428 20:23:31.986152  2246 solver.cpp:238]     Train net output #0: loss = 0.26867 (* 1 = 0.26867 loss)
I0428 20:23:31.986160  2246 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:32.216713  2246 solver.cpp:219] Iteration 700 (433.738 iter/s, 0.230554s/100 iters), loss = 0.352701
I0428 20:23:32.216755  2246 solver.cpp:238]     Train net output #0: loss = 0.352701 (* 1 = 0.352701 loss)
I0428 20:23:32.216763  2246 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:32.441967  2246 solver.cpp:219] Iteration 800 (444.043 iter/s, 0.225203s/100 iters), loss = 0.334984
I0428 20:23:32.442019  2246 solver.cpp:238]     Train net output #0: loss = 0.334984 (* 1 = 0.334984 loss)
I0428 20:23:32.442031  2246 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:32.676795  2246 solver.cpp:219] Iteration 900 (425.954 iter/s, 0.234767s/100 iters), loss = 0.217498
I0428 20:23:32.676836  2246 solver.cpp:238]     Train net output #0: loss = 0.217498 (* 1 = 0.217498 loss)
I0428 20:23:32.676844  2246 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:32.752728  2252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:32.897722  2246 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:32.905081  2246 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:32.907563  2246 solver.cpp:311] Iteration 1000, loss = 0.156909
I0428 20:23:32.907588  2246 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:32.999022  2253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:33.002262  2246 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0428 20:23:33.002285  2246 solver.cpp:398]     Test net output #1: loss = 0.103421 (* 1 = 0.103421 loss)
I0428 20:23:33.002292  2246 solver.cpp:316] Optimization Done.
I0428 20:23:33.002295  2246 caffe.cpp:259] Optimization Done.
