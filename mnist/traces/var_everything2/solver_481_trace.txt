I0428 19:45:54.032547 25910 caffe.cpp:218] Using GPUs 0
I0428 19:45:54.069077 25910 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:54.594357 25910 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test481.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:54.594502 25910 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test481.prototxt
I0428 19:45:54.594907 25910 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:54.594925 25910 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:54.595021 25910 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:45:54.595095 25910 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:54.595198 25910 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:54.595221 25910 net.cpp:86] Creating Layer mnist
I0428 19:45:54.595229 25910 net.cpp:382] mnist -> data
I0428 19:45:54.595252 25910 net.cpp:382] mnist -> label
I0428 19:45:54.596356 25910 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:54.598810 25910 net.cpp:124] Setting up mnist
I0428 19:45:54.598829 25910 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:54.598834 25910 net.cpp:131] Top shape: 64 (64)
I0428 19:45:54.598839 25910 net.cpp:139] Memory required for data: 200960
I0428 19:45:54.598846 25910 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:54.598861 25910 net.cpp:86] Creating Layer conv0
I0428 19:45:54.598883 25910 net.cpp:408] conv0 <- data
I0428 19:45:54.598896 25910 net.cpp:382] conv0 -> conv0
I0428 19:45:54.889818 25910 net.cpp:124] Setting up conv0
I0428 19:45:54.889849 25910 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:54.889855 25910 net.cpp:139] Memory required for data: 495872
I0428 19:45:54.889873 25910 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:54.889889 25910 net.cpp:86] Creating Layer pool0
I0428 19:45:54.889894 25910 net.cpp:408] pool0 <- conv0
I0428 19:45:54.889899 25910 net.cpp:382] pool0 -> pool0
I0428 19:45:54.889953 25910 net.cpp:124] Setting up pool0
I0428 19:45:54.889961 25910 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:54.889964 25910 net.cpp:139] Memory required for data: 569600
I0428 19:45:54.889968 25910 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:54.889981 25910 net.cpp:86] Creating Layer conv1
I0428 19:45:54.889986 25910 net.cpp:408] conv1 <- pool0
I0428 19:45:54.889991 25910 net.cpp:382] conv1 -> conv1
I0428 19:45:54.893141 25910 net.cpp:124] Setting up conv1
I0428 19:45:54.893158 25910 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:54.893162 25910 net.cpp:139] Memory required for data: 2208000
I0428 19:45:54.893172 25910 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:54.893182 25910 net.cpp:86] Creating Layer pool1
I0428 19:45:54.893187 25910 net.cpp:408] pool1 <- conv1
I0428 19:45:54.893193 25910 net.cpp:382] pool1 -> pool1
I0428 19:45:54.893237 25910 net.cpp:124] Setting up pool1
I0428 19:45:54.893244 25910 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:54.893247 25910 net.cpp:139] Memory required for data: 2617600
I0428 19:45:54.893251 25910 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:54.893260 25910 net.cpp:86] Creating Layer ip1
I0428 19:45:54.893263 25910 net.cpp:408] ip1 <- pool1
I0428 19:45:54.893268 25910 net.cpp:382] ip1 -> ip1
I0428 19:45:54.893486 25910 net.cpp:124] Setting up ip1
I0428 19:45:54.893496 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.893501 25910 net.cpp:139] Memory required for data: 2620160
I0428 19:45:54.893508 25910 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:54.893515 25910 net.cpp:86] Creating Layer relu1
I0428 19:45:54.893518 25910 net.cpp:408] relu1 <- ip1
I0428 19:45:54.893523 25910 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:54.893719 25910 net.cpp:124] Setting up relu1
I0428 19:45:54.893729 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.893733 25910 net.cpp:139] Memory required for data: 2622720
I0428 19:45:54.893738 25910 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:54.893745 25910 net.cpp:86] Creating Layer ip2
I0428 19:45:54.893748 25910 net.cpp:408] ip2 <- ip1
I0428 19:45:54.893754 25910 net.cpp:382] ip2 -> ip2
I0428 19:45:54.893864 25910 net.cpp:124] Setting up ip2
I0428 19:45:54.893872 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.893877 25910 net.cpp:139] Memory required for data: 2625280
I0428 19:45:54.893883 25910 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:54.893890 25910 net.cpp:86] Creating Layer relu2
I0428 19:45:54.893893 25910 net.cpp:408] relu2 <- ip2
I0428 19:45:54.893898 25910 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:54.894749 25910 net.cpp:124] Setting up relu2
I0428 19:45:54.894764 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.894768 25910 net.cpp:139] Memory required for data: 2627840
I0428 19:45:54.894773 25910 layer_factory.hpp:77] Creating layer ip3
I0428 19:45:54.894781 25910 net.cpp:86] Creating Layer ip3
I0428 19:45:54.894785 25910 net.cpp:408] ip3 <- ip2
I0428 19:45:54.894793 25910 net.cpp:382] ip3 -> ip3
I0428 19:45:54.894911 25910 net.cpp:124] Setting up ip3
I0428 19:45:54.894920 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.894923 25910 net.cpp:139] Memory required for data: 2630400
I0428 19:45:54.894933 25910 layer_factory.hpp:77] Creating layer relu3
I0428 19:45:54.894939 25910 net.cpp:86] Creating Layer relu3
I0428 19:45:54.894943 25910 net.cpp:408] relu3 <- ip3
I0428 19:45:54.894948 25910 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:45:54.895149 25910 net.cpp:124] Setting up relu3
I0428 19:45:54.895160 25910 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:54.895164 25910 net.cpp:139] Memory required for data: 2632960
I0428 19:45:54.895167 25910 layer_factory.hpp:77] Creating layer loss
I0428 19:45:54.895174 25910 net.cpp:86] Creating Layer loss
I0428 19:45:54.895179 25910 net.cpp:408] loss <- ip3
I0428 19:45:54.895184 25910 net.cpp:408] loss <- label
I0428 19:45:54.895191 25910 net.cpp:382] loss -> loss
I0428 19:45:54.895211 25910 layer_factory.hpp:77] Creating layer loss
I0428 19:45:54.895505 25910 net.cpp:124] Setting up loss
I0428 19:45:54.895516 25910 net.cpp:131] Top shape: (1)
I0428 19:45:54.895520 25910 net.cpp:134]     with loss weight 1
I0428 19:45:54.895537 25910 net.cpp:139] Memory required for data: 2632964
I0428 19:45:54.895541 25910 net.cpp:200] loss needs backward computation.
I0428 19:45:54.895545 25910 net.cpp:200] relu3 needs backward computation.
I0428 19:45:54.895548 25910 net.cpp:200] ip3 needs backward computation.
I0428 19:45:54.895552 25910 net.cpp:200] relu2 needs backward computation.
I0428 19:45:54.895555 25910 net.cpp:200] ip2 needs backward computation.
I0428 19:45:54.895558 25910 net.cpp:200] relu1 needs backward computation.
I0428 19:45:54.895561 25910 net.cpp:200] ip1 needs backward computation.
I0428 19:45:54.895565 25910 net.cpp:200] pool1 needs backward computation.
I0428 19:45:54.895568 25910 net.cpp:200] conv1 needs backward computation.
I0428 19:45:54.895571 25910 net.cpp:200] pool0 needs backward computation.
I0428 19:45:54.895575 25910 net.cpp:200] conv0 needs backward computation.
I0428 19:45:54.895579 25910 net.cpp:202] mnist does not need backward computation.
I0428 19:45:54.895582 25910 net.cpp:244] This network produces output loss
I0428 19:45:54.895594 25910 net.cpp:257] Network initialization done.
I0428 19:45:54.895982 25910 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test481.prototxt
I0428 19:45:54.896013 25910 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:54.896122 25910 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:45:54.896222 25910 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:54.896275 25910 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:54.896291 25910 net.cpp:86] Creating Layer mnist
I0428 19:45:54.896296 25910 net.cpp:382] mnist -> data
I0428 19:45:54.896306 25910 net.cpp:382] mnist -> label
I0428 19:45:54.896407 25910 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:54.898604 25910 net.cpp:124] Setting up mnist
I0428 19:45:54.898638 25910 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:54.898645 25910 net.cpp:131] Top shape: 100 (100)
I0428 19:45:54.898648 25910 net.cpp:139] Memory required for data: 314000
I0428 19:45:54.898653 25910 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:54.898660 25910 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:54.898664 25910 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:54.898669 25910 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:54.898677 25910 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:54.898782 25910 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:54.898792 25910 net.cpp:131] Top shape: 100 (100)
I0428 19:45:54.898795 25910 net.cpp:131] Top shape: 100 (100)
I0428 19:45:54.898798 25910 net.cpp:139] Memory required for data: 314800
I0428 19:45:54.898802 25910 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:54.898813 25910 net.cpp:86] Creating Layer conv0
I0428 19:45:54.898816 25910 net.cpp:408] conv0 <- data
I0428 19:45:54.898824 25910 net.cpp:382] conv0 -> conv0
I0428 19:45:54.900745 25910 net.cpp:124] Setting up conv0
I0428 19:45:54.900761 25910 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:54.900765 25910 net.cpp:139] Memory required for data: 775600
I0428 19:45:54.900776 25910 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:54.900789 25910 net.cpp:86] Creating Layer pool0
I0428 19:45:54.900792 25910 net.cpp:408] pool0 <- conv0
I0428 19:45:54.900799 25910 net.cpp:382] pool0 -> pool0
I0428 19:45:54.900852 25910 net.cpp:124] Setting up pool0
I0428 19:45:54.900861 25910 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:54.900864 25910 net.cpp:139] Memory required for data: 890800
I0428 19:45:54.900867 25910 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:54.900879 25910 net.cpp:86] Creating Layer conv1
I0428 19:45:54.900883 25910 net.cpp:408] conv1 <- pool0
I0428 19:45:54.900892 25910 net.cpp:382] conv1 -> conv1
I0428 19:45:54.902693 25910 net.cpp:124] Setting up conv1
I0428 19:45:54.902710 25910 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:54.902714 25910 net.cpp:139] Memory required for data: 3450800
I0428 19:45:54.902725 25910 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:54.902732 25910 net.cpp:86] Creating Layer pool1
I0428 19:45:54.902736 25910 net.cpp:408] pool1 <- conv1
I0428 19:45:54.902742 25910 net.cpp:382] pool1 -> pool1
I0428 19:45:54.902788 25910 net.cpp:124] Setting up pool1
I0428 19:45:54.902797 25910 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:54.902801 25910 net.cpp:139] Memory required for data: 4090800
I0428 19:45:54.902803 25910 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:54.902812 25910 net.cpp:86] Creating Layer ip1
I0428 19:45:54.902815 25910 net.cpp:408] ip1 <- pool1
I0428 19:45:54.902822 25910 net.cpp:382] ip1 -> ip1
I0428 19:45:54.903045 25910 net.cpp:124] Setting up ip1
I0428 19:45:54.903055 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.903072 25910 net.cpp:139] Memory required for data: 4094800
I0428 19:45:54.903082 25910 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:54.903090 25910 net.cpp:86] Creating Layer relu1
I0428 19:45:54.903095 25910 net.cpp:408] relu1 <- ip1
I0428 19:45:54.903100 25910 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:54.903362 25910 net.cpp:124] Setting up relu1
I0428 19:45:54.903373 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.903378 25910 net.cpp:139] Memory required for data: 4098800
I0428 19:45:54.903380 25910 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:54.903389 25910 net.cpp:86] Creating Layer ip2
I0428 19:45:54.903393 25910 net.cpp:408] ip2 <- ip1
I0428 19:45:54.903400 25910 net.cpp:382] ip2 -> ip2
I0428 19:45:54.903537 25910 net.cpp:124] Setting up ip2
I0428 19:45:54.903545 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.903548 25910 net.cpp:139] Memory required for data: 4102800
I0428 19:45:54.903555 25910 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:54.903561 25910 net.cpp:86] Creating Layer relu2
I0428 19:45:54.903565 25910 net.cpp:408] relu2 <- ip2
I0428 19:45:54.903570 25910 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:54.903761 25910 net.cpp:124] Setting up relu2
I0428 19:45:54.903772 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.903775 25910 net.cpp:139] Memory required for data: 4106800
I0428 19:45:54.903779 25910 layer_factory.hpp:77] Creating layer ip3
I0428 19:45:54.903789 25910 net.cpp:86] Creating Layer ip3
I0428 19:45:54.903792 25910 net.cpp:408] ip3 <- ip2
I0428 19:45:54.903798 25910 net.cpp:382] ip3 -> ip3
I0428 19:45:54.903916 25910 net.cpp:124] Setting up ip3
I0428 19:45:54.903924 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.903928 25910 net.cpp:139] Memory required for data: 4110800
I0428 19:45:54.903936 25910 layer_factory.hpp:77] Creating layer relu3
I0428 19:45:54.903941 25910 net.cpp:86] Creating Layer relu3
I0428 19:45:54.903945 25910 net.cpp:408] relu3 <- ip3
I0428 19:45:54.903950 25910 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:45:54.904891 25910 net.cpp:124] Setting up relu3
I0428 19:45:54.904906 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.904909 25910 net.cpp:139] Memory required for data: 4114800
I0428 19:45:54.904913 25910 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:45:54.904919 25910 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:45:54.904923 25910 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:45:54.904932 25910 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:45:54.904938 25910 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:45:54.904983 25910 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:45:54.904991 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.904995 25910 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:54.904999 25910 net.cpp:139] Memory required for data: 4122800
I0428 19:45:54.905002 25910 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:54.905009 25910 net.cpp:86] Creating Layer accuracy
I0428 19:45:54.905011 25910 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:45:54.905017 25910 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:54.905022 25910 net.cpp:382] accuracy -> accuracy
I0428 19:45:54.905030 25910 net.cpp:124] Setting up accuracy
I0428 19:45:54.905035 25910 net.cpp:131] Top shape: (1)
I0428 19:45:54.905038 25910 net.cpp:139] Memory required for data: 4122804
I0428 19:45:54.905042 25910 layer_factory.hpp:77] Creating layer loss
I0428 19:45:54.905048 25910 net.cpp:86] Creating Layer loss
I0428 19:45:54.905052 25910 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:45:54.905057 25910 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:54.905062 25910 net.cpp:382] loss -> loss
I0428 19:45:54.905069 25910 layer_factory.hpp:77] Creating layer loss
I0428 19:45:54.905354 25910 net.cpp:124] Setting up loss
I0428 19:45:54.905365 25910 net.cpp:131] Top shape: (1)
I0428 19:45:54.905369 25910 net.cpp:134]     with loss weight 1
I0428 19:45:54.905376 25910 net.cpp:139] Memory required for data: 4122808
I0428 19:45:54.905393 25910 net.cpp:200] loss needs backward computation.
I0428 19:45:54.905398 25910 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:54.905402 25910 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:45:54.905406 25910 net.cpp:200] relu3 needs backward computation.
I0428 19:45:54.905411 25910 net.cpp:200] ip3 needs backward computation.
I0428 19:45:54.905413 25910 net.cpp:200] relu2 needs backward computation.
I0428 19:45:54.905417 25910 net.cpp:200] ip2 needs backward computation.
I0428 19:45:54.905421 25910 net.cpp:200] relu1 needs backward computation.
I0428 19:45:54.905424 25910 net.cpp:200] ip1 needs backward computation.
I0428 19:45:54.905427 25910 net.cpp:200] pool1 needs backward computation.
I0428 19:45:54.905431 25910 net.cpp:200] conv1 needs backward computation.
I0428 19:45:54.905436 25910 net.cpp:200] pool0 needs backward computation.
I0428 19:45:54.905441 25910 net.cpp:200] conv0 needs backward computation.
I0428 19:45:54.905445 25910 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:54.905449 25910 net.cpp:202] mnist does not need backward computation.
I0428 19:45:54.905453 25910 net.cpp:244] This network produces output accuracy
I0428 19:45:54.905458 25910 net.cpp:244] This network produces output loss
I0428 19:45:54.905473 25910 net.cpp:257] Network initialization done.
I0428 19:45:54.905522 25910 solver.cpp:56] Solver scaffolding done.
I0428 19:45:54.905952 25910 caffe.cpp:248] Starting Optimization
I0428 19:45:54.905959 25910 solver.cpp:273] Solving LeNet
I0428 19:45:54.905962 25910 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:54.906245 25910 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:54.911810 25910 blocking_queue.cpp:49] Waiting for data
I0428 19:45:54.981366 25917 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:54.981990 25910 solver.cpp:398]     Test net output #0: accuracy = 0.1046
I0428 19:45:54.982014 25910 solver.cpp:398]     Test net output #1: loss = 2.32698 (* 1 = 2.32698 loss)
I0428 19:45:54.986032 25910 solver.cpp:219] Iteration 0 (0 iter/s, 0.0800348s/100 iters), loss = 2.31429
I0428 19:45:54.986063 25910 solver.cpp:238]     Train net output #0: loss = 2.31429 (* 1 = 2.31429 loss)
I0428 19:45:54.986078 25910 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:55.148125 25910 solver.cpp:219] Iteration 100 (617.128 iter/s, 0.162041s/100 iters), loss = 0.903138
I0428 19:45:55.148167 25910 solver.cpp:238]     Train net output #0: loss = 0.903138 (* 1 = 0.903138 loss)
I0428 19:45:55.148178 25910 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:55.327445 25910 solver.cpp:219] Iteration 200 (557.848 iter/s, 0.17926s/100 iters), loss = 0.516795
I0428 19:45:55.327498 25910 solver.cpp:238]     Train net output #0: loss = 0.516795 (* 1 = 0.516795 loss)
I0428 19:45:55.327512 25910 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:55.510193 25910 solver.cpp:219] Iteration 300 (547.407 iter/s, 0.18268s/100 iters), loss = 0.472612
I0428 19:45:55.510247 25910 solver.cpp:238]     Train net output #0: loss = 0.472612 (* 1 = 0.472612 loss)
I0428 19:45:55.510260 25910 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:55.694442 25910 solver.cpp:219] Iteration 400 (542.951 iter/s, 0.184179s/100 iters), loss = 0.477167
I0428 19:45:55.694494 25910 solver.cpp:238]     Train net output #0: loss = 0.477167 (* 1 = 0.477167 loss)
I0428 19:45:55.694507 25910 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:55.875610 25910 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:55.939245 25917 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:55.941247 25910 solver.cpp:398]     Test net output #0: accuracy = 0.9296
I0428 19:45:55.941287 25910 solver.cpp:398]     Test net output #1: loss = 0.242434 (* 1 = 0.242434 loss)
I0428 19:45:55.942812 25910 solver.cpp:219] Iteration 500 (402.733 iter/s, 0.248304s/100 iters), loss = 0.241237
I0428 19:45:55.942843 25910 solver.cpp:238]     Train net output #0: loss = 0.241237 (* 1 = 0.241237 loss)
I0428 19:45:55.942873 25910 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:56.108713 25910 solver.cpp:219] Iteration 600 (602.939 iter/s, 0.165854s/100 iters), loss = 0.157126
I0428 19:45:56.108762 25910 solver.cpp:238]     Train net output #0: loss = 0.157126 (* 1 = 0.157126 loss)
I0428 19:45:56.108772 25910 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:56.277009 25910 solver.cpp:219] Iteration 700 (594.381 iter/s, 0.168242s/100 iters), loss = 0.185978
I0428 19:45:56.277050 25910 solver.cpp:238]     Train net output #0: loss = 0.185978 (* 1 = 0.185978 loss)
I0428 19:45:56.277060 25910 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:56.443013 25910 solver.cpp:219] Iteration 800 (602.597 iter/s, 0.165948s/100 iters), loss = 0.253206
I0428 19:45:56.443063 25910 solver.cpp:238]     Train net output #0: loss = 0.253206 (* 1 = 0.253206 loss)
I0428 19:45:56.443073 25910 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:56.603518 25910 solver.cpp:219] Iteration 900 (623.249 iter/s, 0.16045s/100 iters), loss = 0.422449
I0428 19:45:56.603559 25910 solver.cpp:238]     Train net output #0: loss = 0.422449 (* 1 = 0.422449 loss)
I0428 19:45:56.603566 25910 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:56.652425 25916 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:56.747596 25910 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:56.749279 25910 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:56.749994 25910 solver.cpp:311] Iteration 1000, loss = 0.15828
I0428 19:45:56.750010 25910 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:56.803179 25917 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:56.805083 25910 solver.cpp:398]     Test net output #0: accuracy = 0.9592
I0428 19:45:56.805114 25910 solver.cpp:398]     Test net output #1: loss = 0.142005 (* 1 = 0.142005 loss)
I0428 19:45:56.805120 25910 solver.cpp:316] Optimization Done.
I0428 19:45:56.805135 25910 caffe.cpp:259] Optimization Done.
