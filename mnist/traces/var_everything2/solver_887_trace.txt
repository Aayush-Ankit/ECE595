I0428 20:00:50.627607 29594 caffe.cpp:218] Using GPUs 0
I0428 20:00:50.657229 29594 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:51.104991 29594 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test887.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:51.105146 29594 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test887.prototxt
I0428 20:00:51.105487 29594 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:51.105504 29594 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:51.105587 29594 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:51.105653 29594 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:51.105733 29594 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:51.105754 29594 net.cpp:86] Creating Layer mnist
I0428 20:00:51.105761 29594 net.cpp:382] mnist -> data
I0428 20:00:51.105778 29594 net.cpp:382] mnist -> label
I0428 20:00:51.106698 29594 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:51.108690 29594 net.cpp:124] Setting up mnist
I0428 20:00:51.108719 29594 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:51.108726 29594 net.cpp:131] Top shape: 64 (64)
I0428 20:00:51.108729 29594 net.cpp:139] Memory required for data: 200960
I0428 20:00:51.108749 29594 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:51.108763 29594 net.cpp:86] Creating Layer conv0
I0428 20:00:51.108796 29594 net.cpp:408] conv0 <- data
I0428 20:00:51.108808 29594 net.cpp:382] conv0 -> conv0
I0428 20:00:51.338102 29594 net.cpp:124] Setting up conv0
I0428 20:00:51.338129 29594 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:51.338134 29594 net.cpp:139] Memory required for data: 1675520
I0428 20:00:51.338147 29594 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:51.338160 29594 net.cpp:86] Creating Layer pool0
I0428 20:00:51.338163 29594 net.cpp:408] pool0 <- conv0
I0428 20:00:51.338170 29594 net.cpp:382] pool0 -> pool0
I0428 20:00:51.338228 29594 net.cpp:124] Setting up pool0
I0428 20:00:51.338233 29594 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:51.338237 29594 net.cpp:139] Memory required for data: 2044160
I0428 20:00:51.338239 29594 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:51.338249 29594 net.cpp:86] Creating Layer conv1
I0428 20:00:51.338253 29594 net.cpp:408] conv1 <- pool0
I0428 20:00:51.338258 29594 net.cpp:382] conv1 -> conv1
I0428 20:00:51.341373 29594 net.cpp:124] Setting up conv1
I0428 20:00:51.341403 29594 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:51.341408 29594 net.cpp:139] Memory required for data: 2453760
I0428 20:00:51.341415 29594 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:51.341424 29594 net.cpp:86] Creating Layer pool1
I0428 20:00:51.341428 29594 net.cpp:408] pool1 <- conv1
I0428 20:00:51.341433 29594 net.cpp:382] pool1 -> pool1
I0428 20:00:51.341485 29594 net.cpp:124] Setting up pool1
I0428 20:00:51.341490 29594 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:51.341493 29594 net.cpp:139] Memory required for data: 2556160
I0428 20:00:51.341496 29594 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:51.341503 29594 net.cpp:86] Creating Layer ip1
I0428 20:00:51.341506 29594 net.cpp:408] ip1 <- pool1
I0428 20:00:51.341511 29594 net.cpp:382] ip1 -> ip1
I0428 20:00:51.341680 29594 net.cpp:124] Setting up ip1
I0428 20:00:51.341687 29594 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:51.341691 29594 net.cpp:139] Memory required for data: 2562560
I0428 20:00:51.341697 29594 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:51.341703 29594 net.cpp:86] Creating Layer relu1
I0428 20:00:51.341706 29594 net.cpp:408] relu1 <- ip1
I0428 20:00:51.341711 29594 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:51.341868 29594 net.cpp:124] Setting up relu1
I0428 20:00:51.341877 29594 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:51.341881 29594 net.cpp:139] Memory required for data: 2568960
I0428 20:00:51.341883 29594 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:51.341889 29594 net.cpp:86] Creating Layer ip2
I0428 20:00:51.341892 29594 net.cpp:408] ip2 <- ip1
I0428 20:00:51.341897 29594 net.cpp:382] ip2 -> ip2
I0428 20:00:51.342828 29594 net.cpp:124] Setting up ip2
I0428 20:00:51.342839 29594 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:51.342859 29594 net.cpp:139] Memory required for data: 2581760
I0428 20:00:51.342864 29594 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:51.342870 29594 net.cpp:86] Creating Layer relu2
I0428 20:00:51.342874 29594 net.cpp:408] relu2 <- ip2
I0428 20:00:51.342877 29594 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:51.343629 29594 net.cpp:124] Setting up relu2
I0428 20:00:51.343641 29594 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:51.343659 29594 net.cpp:139] Memory required for data: 2594560
I0428 20:00:51.343662 29594 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:51.343669 29594 net.cpp:86] Creating Layer ip3
I0428 20:00:51.343672 29594 net.cpp:408] ip3 <- ip2
I0428 20:00:51.343677 29594 net.cpp:382] ip3 -> ip3
I0428 20:00:51.343773 29594 net.cpp:124] Setting up ip3
I0428 20:00:51.343780 29594 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:51.343783 29594 net.cpp:139] Memory required for data: 2597120
I0428 20:00:51.343791 29594 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:51.343796 29594 net.cpp:86] Creating Layer relu3
I0428 20:00:51.343799 29594 net.cpp:408] relu3 <- ip3
I0428 20:00:51.343803 29594 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:51.343961 29594 net.cpp:124] Setting up relu3
I0428 20:00:51.343968 29594 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:51.343971 29594 net.cpp:139] Memory required for data: 2599680
I0428 20:00:51.343974 29594 layer_factory.hpp:77] Creating layer loss
I0428 20:00:51.343981 29594 net.cpp:86] Creating Layer loss
I0428 20:00:51.343983 29594 net.cpp:408] loss <- ip3
I0428 20:00:51.343987 29594 net.cpp:408] loss <- label
I0428 20:00:51.343992 29594 net.cpp:382] loss -> loss
I0428 20:00:51.344005 29594 layer_factory.hpp:77] Creating layer loss
I0428 20:00:51.344244 29594 net.cpp:124] Setting up loss
I0428 20:00:51.344251 29594 net.cpp:131] Top shape: (1)
I0428 20:00:51.344254 29594 net.cpp:134]     with loss weight 1
I0428 20:00:51.344267 29594 net.cpp:139] Memory required for data: 2599684
I0428 20:00:51.344270 29594 net.cpp:200] loss needs backward computation.
I0428 20:00:51.344274 29594 net.cpp:200] relu3 needs backward computation.
I0428 20:00:51.344277 29594 net.cpp:200] ip3 needs backward computation.
I0428 20:00:51.344280 29594 net.cpp:200] relu2 needs backward computation.
I0428 20:00:51.344282 29594 net.cpp:200] ip2 needs backward computation.
I0428 20:00:51.344285 29594 net.cpp:200] relu1 needs backward computation.
I0428 20:00:51.344287 29594 net.cpp:200] ip1 needs backward computation.
I0428 20:00:51.344291 29594 net.cpp:200] pool1 needs backward computation.
I0428 20:00:51.344295 29594 net.cpp:200] conv1 needs backward computation.
I0428 20:00:51.344297 29594 net.cpp:200] pool0 needs backward computation.
I0428 20:00:51.344300 29594 net.cpp:200] conv0 needs backward computation.
I0428 20:00:51.344303 29594 net.cpp:202] mnist does not need backward computation.
I0428 20:00:51.344305 29594 net.cpp:244] This network produces output loss
I0428 20:00:51.344314 29594 net.cpp:257] Network initialization done.
I0428 20:00:51.344667 29594 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test887.prototxt
I0428 20:00:51.344709 29594 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:51.344815 29594 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:51.344929 29594 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:51.344969 29594 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:51.344981 29594 net.cpp:86] Creating Layer mnist
I0428 20:00:51.344987 29594 net.cpp:382] mnist -> data
I0428 20:00:51.344995 29594 net.cpp:382] mnist -> label
I0428 20:00:51.345078 29594 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:51.346915 29594 net.cpp:124] Setting up mnist
I0428 20:00:51.346943 29594 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:51.346948 29594 net.cpp:131] Top shape: 100 (100)
I0428 20:00:51.346951 29594 net.cpp:139] Memory required for data: 314000
I0428 20:00:51.346954 29594 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:51.346961 29594 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:51.346963 29594 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:51.346993 29594 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:51.347002 29594 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:51.347044 29594 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:51.347050 29594 net.cpp:131] Top shape: 100 (100)
I0428 20:00:51.347054 29594 net.cpp:131] Top shape: 100 (100)
I0428 20:00:51.347055 29594 net.cpp:139] Memory required for data: 314800
I0428 20:00:51.347059 29594 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:51.347069 29594 net.cpp:86] Creating Layer conv0
I0428 20:00:51.347071 29594 net.cpp:408] conv0 <- data
I0428 20:00:51.347076 29594 net.cpp:382] conv0 -> conv0
I0428 20:00:51.348865 29594 net.cpp:124] Setting up conv0
I0428 20:00:51.348879 29594 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:51.348886 29594 net.cpp:139] Memory required for data: 2618800
I0428 20:00:51.348896 29594 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:51.348920 29594 net.cpp:86] Creating Layer pool0
I0428 20:00:51.348923 29594 net.cpp:408] pool0 <- conv0
I0428 20:00:51.348928 29594 net.cpp:382] pool0 -> pool0
I0428 20:00:51.348970 29594 net.cpp:124] Setting up pool0
I0428 20:00:51.348976 29594 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:51.348979 29594 net.cpp:139] Memory required for data: 3194800
I0428 20:00:51.348983 29594 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:51.348992 29594 net.cpp:86] Creating Layer conv1
I0428 20:00:51.348995 29594 net.cpp:408] conv1 <- pool0
I0428 20:00:51.349001 29594 net.cpp:382] conv1 -> conv1
I0428 20:00:51.351235 29594 net.cpp:124] Setting up conv1
I0428 20:00:51.351249 29594 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:51.351253 29594 net.cpp:139] Memory required for data: 3834800
I0428 20:00:51.351263 29594 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:51.351284 29594 net.cpp:86] Creating Layer pool1
I0428 20:00:51.351295 29594 net.cpp:408] pool1 <- conv1
I0428 20:00:51.351300 29594 net.cpp:382] pool1 -> pool1
I0428 20:00:51.351342 29594 net.cpp:124] Setting up pool1
I0428 20:00:51.351348 29594 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:51.351351 29594 net.cpp:139] Memory required for data: 3994800
I0428 20:00:51.351354 29594 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:51.351361 29594 net.cpp:86] Creating Layer ip1
I0428 20:00:51.351363 29594 net.cpp:408] ip1 <- pool1
I0428 20:00:51.351377 29594 net.cpp:382] ip1 -> ip1
I0428 20:00:51.351547 29594 net.cpp:124] Setting up ip1
I0428 20:00:51.351555 29594 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:51.351568 29594 net.cpp:139] Memory required for data: 4004800
I0428 20:00:51.351577 29594 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:51.351583 29594 net.cpp:86] Creating Layer relu1
I0428 20:00:51.351585 29594 net.cpp:408] relu1 <- ip1
I0428 20:00:51.351590 29594 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:51.351867 29594 net.cpp:124] Setting up relu1
I0428 20:00:51.351876 29594 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:51.351881 29594 net.cpp:139] Memory required for data: 4014800
I0428 20:00:51.351883 29594 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:51.351891 29594 net.cpp:86] Creating Layer ip2
I0428 20:00:51.351900 29594 net.cpp:408] ip2 <- ip1
I0428 20:00:51.351905 29594 net.cpp:382] ip2 -> ip2
I0428 20:00:51.352035 29594 net.cpp:124] Setting up ip2
I0428 20:00:51.352042 29594 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:51.352046 29594 net.cpp:139] Memory required for data: 4034800
I0428 20:00:51.352051 29594 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:51.352056 29594 net.cpp:86] Creating Layer relu2
I0428 20:00:51.352061 29594 net.cpp:408] relu2 <- ip2
I0428 20:00:51.352064 29594 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:51.352221 29594 net.cpp:124] Setting up relu2
I0428 20:00:51.352229 29594 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:51.352232 29594 net.cpp:139] Memory required for data: 4054800
I0428 20:00:51.352236 29594 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:51.352241 29594 net.cpp:86] Creating Layer ip3
I0428 20:00:51.352246 29594 net.cpp:408] ip3 <- ip2
I0428 20:00:51.352250 29594 net.cpp:382] ip3 -> ip3
I0428 20:00:51.352352 29594 net.cpp:124] Setting up ip3
I0428 20:00:51.352360 29594 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:51.352365 29594 net.cpp:139] Memory required for data: 4058800
I0428 20:00:51.352371 29594 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:51.352375 29594 net.cpp:86] Creating Layer relu3
I0428 20:00:51.352380 29594 net.cpp:408] relu3 <- ip3
I0428 20:00:51.352383 29594 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:51.353310 29594 net.cpp:124] Setting up relu3
I0428 20:00:51.353323 29594 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:51.353327 29594 net.cpp:139] Memory required for data: 4062800
I0428 20:00:51.353330 29594 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:51.353335 29594 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:51.353338 29594 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:51.353343 29594 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:51.353349 29594 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:51.353387 29594 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:51.353392 29594 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:51.353396 29594 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:51.353399 29594 net.cpp:139] Memory required for data: 4070800
I0428 20:00:51.353401 29594 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:51.353407 29594 net.cpp:86] Creating Layer accuracy
I0428 20:00:51.353410 29594 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:51.353420 29594 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:51.353425 29594 net.cpp:382] accuracy -> accuracy
I0428 20:00:51.353430 29594 net.cpp:124] Setting up accuracy
I0428 20:00:51.353435 29594 net.cpp:131] Top shape: (1)
I0428 20:00:51.353437 29594 net.cpp:139] Memory required for data: 4070804
I0428 20:00:51.353440 29594 layer_factory.hpp:77] Creating layer loss
I0428 20:00:51.353446 29594 net.cpp:86] Creating Layer loss
I0428 20:00:51.353453 29594 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:51.353456 29594 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:51.353461 29594 net.cpp:382] loss -> loss
I0428 20:00:51.353467 29594 layer_factory.hpp:77] Creating layer loss
I0428 20:00:51.353709 29594 net.cpp:124] Setting up loss
I0428 20:00:51.353718 29594 net.cpp:131] Top shape: (1)
I0428 20:00:51.353734 29594 net.cpp:134]     with loss weight 1
I0428 20:00:51.353749 29594 net.cpp:139] Memory required for data: 4070808
I0428 20:00:51.353754 29594 net.cpp:200] loss needs backward computation.
I0428 20:00:51.353757 29594 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:51.353760 29594 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:51.353763 29594 net.cpp:200] relu3 needs backward computation.
I0428 20:00:51.353766 29594 net.cpp:200] ip3 needs backward computation.
I0428 20:00:51.353770 29594 net.cpp:200] relu2 needs backward computation.
I0428 20:00:51.353777 29594 net.cpp:200] ip2 needs backward computation.
I0428 20:00:51.353780 29594 net.cpp:200] relu1 needs backward computation.
I0428 20:00:51.353782 29594 net.cpp:200] ip1 needs backward computation.
I0428 20:00:51.353785 29594 net.cpp:200] pool1 needs backward computation.
I0428 20:00:51.353788 29594 net.cpp:200] conv1 needs backward computation.
I0428 20:00:51.353791 29594 net.cpp:200] pool0 needs backward computation.
I0428 20:00:51.353795 29594 net.cpp:200] conv0 needs backward computation.
I0428 20:00:51.353797 29594 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:51.353801 29594 net.cpp:202] mnist does not need backward computation.
I0428 20:00:51.353803 29594 net.cpp:244] This network produces output accuracy
I0428 20:00:51.353806 29594 net.cpp:244] This network produces output loss
I0428 20:00:51.353819 29594 net.cpp:257] Network initialization done.
I0428 20:00:51.353859 29594 solver.cpp:56] Solver scaffolding done.
I0428 20:00:51.354218 29594 caffe.cpp:248] Starting Optimization
I0428 20:00:51.354225 29594 solver.cpp:273] Solving LeNet
I0428 20:00:51.354228 29594 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:51.354997 29594 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:51.358952 29594 blocking_queue.cpp:49] Waiting for data
I0428 20:00:51.429982 29601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:51.430529 29594 solver.cpp:398]     Test net output #0: accuracy = 0.0964
I0428 20:00:51.430552 29594 solver.cpp:398]     Test net output #1: loss = 2.31621 (* 1 = 2.31621 loss)
I0428 20:00:51.433184 29594 solver.cpp:219] Iteration 0 (-5.42913e-38 iter/s, 0.0789268s/100 iters), loss = 2.32207
I0428 20:00:51.433238 29594 solver.cpp:238]     Train net output #0: loss = 2.32207 (* 1 = 2.32207 loss)
I0428 20:00:51.433266 29594 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:51.530889 29594 solver.cpp:219] Iteration 100 (1024.2 iter/s, 0.0976374s/100 iters), loss = 1.71014
I0428 20:00:51.530915 29594 solver.cpp:238]     Train net output #0: loss = 1.71014 (* 1 = 1.71014 loss)
I0428 20:00:51.530936 29594 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:51.620373 29594 solver.cpp:219] Iteration 200 (1117.99 iter/s, 0.0894464s/100 iters), loss = 1.34643
I0428 20:00:51.620398 29594 solver.cpp:238]     Train net output #0: loss = 1.34643 (* 1 = 1.34643 loss)
I0428 20:00:51.620404 29594 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:51.709627 29594 solver.cpp:219] Iteration 300 (1120.81 iter/s, 0.0892211s/100 iters), loss = 1.46681
I0428 20:00:51.709667 29594 solver.cpp:238]     Train net output #0: loss = 1.46681 (* 1 = 1.46681 loss)
I0428 20:00:51.709673 29594 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:51.799345 29594 solver.cpp:219] Iteration 400 (1115.03 iter/s, 0.0896839s/100 iters), loss = 1.05771
I0428 20:00:51.799383 29594 solver.cpp:238]     Train net output #0: loss = 1.05771 (* 1 = 1.05771 loss)
I0428 20:00:51.799389 29594 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:51.886698 29594 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:51.962739 29601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:51.963299 29594 solver.cpp:398]     Test net output #0: accuracy = 0.4717
I0428 20:00:51.963320 29594 solver.cpp:398]     Test net output #1: loss = 1.29188 (* 1 = 1.29188 loss)
I0428 20:00:51.964318 29594 solver.cpp:219] Iteration 500 (606.296 iter/s, 0.164936s/100 iters), loss = 1.14667
I0428 20:00:51.964360 29594 solver.cpp:238]     Train net output #0: loss = 1.14667 (* 1 = 1.14667 loss)
I0428 20:00:51.964367 29594 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:52.060438 29594 solver.cpp:219] Iteration 600 (1040.9 iter/s, 0.0960707s/100 iters), loss = 1.30807
I0428 20:00:52.060463 29594 solver.cpp:238]     Train net output #0: loss = 1.30807 (* 1 = 1.30807 loss)
I0428 20:00:52.060485 29594 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:52.150851 29594 solver.cpp:219] Iteration 700 (1106.49 iter/s, 0.0903762s/100 iters), loss = 1.23819
I0428 20:00:52.150892 29594 solver.cpp:238]     Train net output #0: loss = 1.23819 (* 1 = 1.23819 loss)
I0428 20:00:52.150897 29594 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:52.238775 29594 solver.cpp:219] Iteration 800 (1137.79 iter/s, 0.0878899s/100 iters), loss = 1.30672
I0428 20:00:52.238814 29594 solver.cpp:238]     Train net output #0: loss = 1.30672 (* 1 = 1.30672 loss)
I0428 20:00:52.238821 29594 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:52.327736 29594 solver.cpp:219] Iteration 900 (1124.49 iter/s, 0.0889292s/100 iters), loss = 1.28605
I0428 20:00:52.327775 29594 solver.cpp:238]     Train net output #0: loss = 1.28605 (* 1 = 1.28605 loss)
I0428 20:00:52.327781 29594 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:52.357635 29600 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:52.416787 29594 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:52.417840 29594 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:52.418697 29594 solver.cpp:311] Iteration 1000, loss = 1.2778
I0428 20:00:52.418743 29594 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:52.489691 29601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:52.490344 29594 solver.cpp:398]     Test net output #0: accuracy = 0.4766
I0428 20:00:52.490375 29594 solver.cpp:398]     Test net output #1: loss = 1.25271 (* 1 = 1.25271 loss)
I0428 20:00:52.490383 29594 solver.cpp:316] Optimization Done.
I0428 20:00:52.490388 29594 caffe.cpp:259] Optimization Done.
