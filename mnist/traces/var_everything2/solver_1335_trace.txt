I0428 20:19:08.738086  1305 caffe.cpp:218] Using GPUs 0
I0428 20:19:08.771659  1305 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:09.283010  1305 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1335.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:09.283172  1305 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1335.prototxt
I0428 20:19:09.283566  1305 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:09.283591  1305 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:09.283680  1305 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:09.283764  1305 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:09.283864  1305 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:09.283886  1305 net.cpp:86] Creating Layer mnist
I0428 20:19:09.283895  1305 net.cpp:382] mnist -> data
I0428 20:19:09.283917  1305 net.cpp:382] mnist -> label
I0428 20:19:09.285014  1305 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:09.287469  1305 net.cpp:124] Setting up mnist
I0428 20:19:09.287487  1305 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:09.287493  1305 net.cpp:131] Top shape: 64 (64)
I0428 20:19:09.287508  1305 net.cpp:139] Memory required for data: 200960
I0428 20:19:09.287515  1305 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:09.287535  1305 net.cpp:86] Creating Layer conv0
I0428 20:19:09.287541  1305 net.cpp:408] conv0 <- data
I0428 20:19:09.287554  1305 net.cpp:382] conv0 -> conv0
I0428 20:19:09.535569  1305 net.cpp:124] Setting up conv0
I0428 20:19:09.535595  1305 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:09.535599  1305 net.cpp:139] Memory required for data: 7573760
I0428 20:19:09.535630  1305 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:09.535643  1305 net.cpp:86] Creating Layer pool0
I0428 20:19:09.535647  1305 net.cpp:408] pool0 <- conv0
I0428 20:19:09.535668  1305 net.cpp:382] pool0 -> pool0
I0428 20:19:09.535713  1305 net.cpp:124] Setting up pool0
I0428 20:19:09.535719  1305 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:09.535722  1305 net.cpp:139] Memory required for data: 9416960
I0428 20:19:09.535725  1305 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:09.535737  1305 net.cpp:86] Creating Layer conv1
I0428 20:19:09.535739  1305 net.cpp:408] conv1 <- pool0
I0428 20:19:09.535743  1305 net.cpp:382] conv1 -> conv1
I0428 20:19:09.537747  1305 net.cpp:124] Setting up conv1
I0428 20:19:09.537776  1305 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:09.537781  1305 net.cpp:139] Memory required for data: 9826560
I0428 20:19:09.537789  1305 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:09.537797  1305 net.cpp:86] Creating Layer pool1
I0428 20:19:09.537801  1305 net.cpp:408] pool1 <- conv1
I0428 20:19:09.537806  1305 net.cpp:382] pool1 -> pool1
I0428 20:19:09.537842  1305 net.cpp:124] Setting up pool1
I0428 20:19:09.537847  1305 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:09.537850  1305 net.cpp:139] Memory required for data: 9928960
I0428 20:19:09.537853  1305 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:09.537859  1305 net.cpp:86] Creating Layer ip1
I0428 20:19:09.537863  1305 net.cpp:408] ip1 <- pool1
I0428 20:19:09.537868  1305 net.cpp:382] ip1 -> ip1
I0428 20:19:09.538084  1305 net.cpp:124] Setting up ip1
I0428 20:19:09.538091  1305 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:09.538094  1305 net.cpp:139] Memory required for data: 9941760
I0428 20:19:09.538100  1305 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:09.538106  1305 net.cpp:86] Creating Layer relu1
I0428 20:19:09.538110  1305 net.cpp:408] relu1 <- ip1
I0428 20:19:09.538113  1305 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:09.538269  1305 net.cpp:124] Setting up relu1
I0428 20:19:09.538277  1305 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:09.538280  1305 net.cpp:139] Memory required for data: 9954560
I0428 20:19:09.538283  1305 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:09.538290  1305 net.cpp:86] Creating Layer ip2
I0428 20:19:09.538293  1305 net.cpp:408] ip2 <- ip1
I0428 20:19:09.538297  1305 net.cpp:382] ip2 -> ip2
I0428 20:19:09.538385  1305 net.cpp:124] Setting up ip2
I0428 20:19:09.538391  1305 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:09.538394  1305 net.cpp:139] Memory required for data: 9957120
I0428 20:19:09.538399  1305 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:09.538405  1305 net.cpp:86] Creating Layer relu2
I0428 20:19:09.538408  1305 net.cpp:408] relu2 <- ip2
I0428 20:19:09.538427  1305 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:09.539178  1305 net.cpp:124] Setting up relu2
I0428 20:19:09.539191  1305 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:09.539206  1305 net.cpp:139] Memory required for data: 9959680
I0428 20:19:09.539208  1305 layer_factory.hpp:77] Creating layer loss
I0428 20:19:09.539216  1305 net.cpp:86] Creating Layer loss
I0428 20:19:09.539218  1305 net.cpp:408] loss <- ip2
I0428 20:19:09.539222  1305 net.cpp:408] loss <- label
I0428 20:19:09.539227  1305 net.cpp:382] loss -> loss
I0428 20:19:09.539247  1305 layer_factory.hpp:77] Creating layer loss
I0428 20:19:09.539465  1305 net.cpp:124] Setting up loss
I0428 20:19:09.539475  1305 net.cpp:131] Top shape: (1)
I0428 20:19:09.539479  1305 net.cpp:134]     with loss weight 1
I0428 20:19:09.539491  1305 net.cpp:139] Memory required for data: 9959684
I0428 20:19:09.539494  1305 net.cpp:200] loss needs backward computation.
I0428 20:19:09.539499  1305 net.cpp:200] relu2 needs backward computation.
I0428 20:19:09.539500  1305 net.cpp:200] ip2 needs backward computation.
I0428 20:19:09.539504  1305 net.cpp:200] relu1 needs backward computation.
I0428 20:19:09.539506  1305 net.cpp:200] ip1 needs backward computation.
I0428 20:19:09.539518  1305 net.cpp:200] pool1 needs backward computation.
I0428 20:19:09.539522  1305 net.cpp:200] conv1 needs backward computation.
I0428 20:19:09.539525  1305 net.cpp:200] pool0 needs backward computation.
I0428 20:19:09.539527  1305 net.cpp:200] conv0 needs backward computation.
I0428 20:19:09.539530  1305 net.cpp:202] mnist does not need backward computation.
I0428 20:19:09.539533  1305 net.cpp:244] This network produces output loss
I0428 20:19:09.539558  1305 net.cpp:257] Network initialization done.
I0428 20:19:09.539851  1305 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1335.prototxt
I0428 20:19:09.539891  1305 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:09.539973  1305 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:09.540035  1305 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:09.540074  1305 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:09.540086  1305 net.cpp:86] Creating Layer mnist
I0428 20:19:09.540091  1305 net.cpp:382] mnist -> data
I0428 20:19:09.540098  1305 net.cpp:382] mnist -> label
I0428 20:19:09.540179  1305 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:09.542248  1305 net.cpp:124] Setting up mnist
I0428 20:19:09.542276  1305 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:09.542280  1305 net.cpp:131] Top shape: 100 (100)
I0428 20:19:09.542284  1305 net.cpp:139] Memory required for data: 314000
I0428 20:19:09.542287  1305 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:09.542323  1305 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:09.542327  1305 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:09.542333  1305 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:09.542342  1305 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:09.542402  1305 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:09.542408  1305 net.cpp:131] Top shape: 100 (100)
I0428 20:19:09.542412  1305 net.cpp:131] Top shape: 100 (100)
I0428 20:19:09.542413  1305 net.cpp:139] Memory required for data: 314800
I0428 20:19:09.542417  1305 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:09.542426  1305 net.cpp:86] Creating Layer conv0
I0428 20:19:09.542429  1305 net.cpp:408] conv0 <- data
I0428 20:19:09.542434  1305 net.cpp:382] conv0 -> conv0
I0428 20:19:09.544258  1305 net.cpp:124] Setting up conv0
I0428 20:19:09.544272  1305 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:09.544276  1305 net.cpp:139] Memory required for data: 11834800
I0428 20:19:09.544286  1305 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:09.544307  1305 net.cpp:86] Creating Layer pool0
I0428 20:19:09.544311  1305 net.cpp:408] pool0 <- conv0
I0428 20:19:09.544317  1305 net.cpp:382] pool0 -> pool0
I0428 20:19:09.544350  1305 net.cpp:124] Setting up pool0
I0428 20:19:09.544355  1305 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:09.544358  1305 net.cpp:139] Memory required for data: 14714800
I0428 20:19:09.544360  1305 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:09.544371  1305 net.cpp:86] Creating Layer conv1
I0428 20:19:09.544374  1305 net.cpp:408] conv1 <- pool0
I0428 20:19:09.544379  1305 net.cpp:382] conv1 -> conv1
I0428 20:19:09.546219  1305 net.cpp:124] Setting up conv1
I0428 20:19:09.546233  1305 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:09.546250  1305 net.cpp:139] Memory required for data: 15354800
I0428 20:19:09.546259  1305 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:09.546265  1305 net.cpp:86] Creating Layer pool1
I0428 20:19:09.546269  1305 net.cpp:408] pool1 <- conv1
I0428 20:19:09.546277  1305 net.cpp:382] pool1 -> pool1
I0428 20:19:09.546314  1305 net.cpp:124] Setting up pool1
I0428 20:19:09.546319  1305 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:09.546321  1305 net.cpp:139] Memory required for data: 15514800
I0428 20:19:09.546324  1305 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:09.546331  1305 net.cpp:86] Creating Layer ip1
I0428 20:19:09.546335  1305 net.cpp:408] ip1 <- pool1
I0428 20:19:09.546347  1305 net.cpp:382] ip1 -> ip1
I0428 20:19:09.546576  1305 net.cpp:124] Setting up ip1
I0428 20:19:09.546586  1305 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:09.546588  1305 net.cpp:139] Memory required for data: 15534800
I0428 20:19:09.546596  1305 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:09.546599  1305 net.cpp:86] Creating Layer relu1
I0428 20:19:09.546603  1305 net.cpp:408] relu1 <- ip1
I0428 20:19:09.546615  1305 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:09.546778  1305 net.cpp:124] Setting up relu1
I0428 20:19:09.546787  1305 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:09.546790  1305 net.cpp:139] Memory required for data: 15554800
I0428 20:19:09.546793  1305 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:09.546802  1305 net.cpp:86] Creating Layer ip2
I0428 20:19:09.546804  1305 net.cpp:408] ip2 <- ip1
I0428 20:19:09.546815  1305 net.cpp:382] ip2 -> ip2
I0428 20:19:09.546917  1305 net.cpp:124] Setting up ip2
I0428 20:19:09.546924  1305 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:09.546927  1305 net.cpp:139] Memory required for data: 15558800
I0428 20:19:09.546933  1305 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:09.546937  1305 net.cpp:86] Creating Layer relu2
I0428 20:19:09.546941  1305 net.cpp:408] relu2 <- ip2
I0428 20:19:09.546952  1305 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:09.547104  1305 net.cpp:124] Setting up relu2
I0428 20:19:09.547112  1305 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:09.547116  1305 net.cpp:139] Memory required for data: 15562800
I0428 20:19:09.547118  1305 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:19:09.547130  1305 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:19:09.547133  1305 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:19:09.547137  1305 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:19:09.547153  1305 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:19:09.547229  1305 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:19:09.547236  1305 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:09.547240  1305 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:09.547242  1305 net.cpp:139] Memory required for data: 15570800
I0428 20:19:09.547245  1305 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:09.547250  1305 net.cpp:86] Creating Layer accuracy
I0428 20:19:09.547253  1305 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:19:09.547258  1305 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:09.547263  1305 net.cpp:382] accuracy -> accuracy
I0428 20:19:09.547271  1305 net.cpp:124] Setting up accuracy
I0428 20:19:09.547274  1305 net.cpp:131] Top shape: (1)
I0428 20:19:09.547277  1305 net.cpp:139] Memory required for data: 15570804
I0428 20:19:09.547281  1305 layer_factory.hpp:77] Creating layer loss
I0428 20:19:09.547284  1305 net.cpp:86] Creating Layer loss
I0428 20:19:09.547287  1305 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:19:09.547291  1305 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:09.547296  1305 net.cpp:382] loss -> loss
I0428 20:19:09.547302  1305 layer_factory.hpp:77] Creating layer loss
I0428 20:19:09.547591  1305 net.cpp:124] Setting up loss
I0428 20:19:09.547600  1305 net.cpp:131] Top shape: (1)
I0428 20:19:09.547603  1305 net.cpp:134]     with loss weight 1
I0428 20:19:09.547610  1305 net.cpp:139] Memory required for data: 15570808
I0428 20:19:09.547612  1305 net.cpp:200] loss needs backward computation.
I0428 20:19:09.547617  1305 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:09.547621  1305 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:19:09.547626  1305 net.cpp:200] relu2 needs backward computation.
I0428 20:19:09.547627  1305 net.cpp:200] ip2 needs backward computation.
I0428 20:19:09.547631  1305 net.cpp:200] relu1 needs backward computation.
I0428 20:19:09.547633  1305 net.cpp:200] ip1 needs backward computation.
I0428 20:19:09.547636  1305 net.cpp:200] pool1 needs backward computation.
I0428 20:19:09.547639  1305 net.cpp:200] conv1 needs backward computation.
I0428 20:19:09.547642  1305 net.cpp:200] pool0 needs backward computation.
I0428 20:19:09.547644  1305 net.cpp:200] conv0 needs backward computation.
I0428 20:19:09.547654  1305 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:09.547657  1305 net.cpp:202] mnist does not need backward computation.
I0428 20:19:09.547660  1305 net.cpp:244] This network produces output accuracy
I0428 20:19:09.547663  1305 net.cpp:244] This network produces output loss
I0428 20:19:09.547673  1305 net.cpp:257] Network initialization done.
I0428 20:19:09.547710  1305 solver.cpp:56] Solver scaffolding done.
I0428 20:19:09.547968  1305 caffe.cpp:248] Starting Optimization
I0428 20:19:09.547974  1305 solver.cpp:273] Solving LeNet
I0428 20:19:09.547977  1305 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:09.548889  1305 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:09.554603  1305 blocking_queue.cpp:49] Waiting for data
I0428 20:19:09.626960  1312 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:09.627665  1305 solver.cpp:398]     Test net output #0: accuracy = 0.0813
I0428 20:19:09.627687  1305 solver.cpp:398]     Test net output #1: loss = 2.31523 (* 1 = 2.31523 loss)
I0428 20:19:09.632007  1305 solver.cpp:219] Iteration 0 (-1.67411e-31 iter/s, 0.0839967s/100 iters), loss = 2.33577
I0428 20:19:09.632030  1305 solver.cpp:238]     Train net output #0: loss = 2.33577 (* 1 = 2.33577 loss)
I0428 20:19:09.632057  1305 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:09.761049  1305 solver.cpp:219] Iteration 100 (775.185 iter/s, 0.129001s/100 iters), loss = 0.706975
I0428 20:19:09.761072  1305 solver.cpp:238]     Train net output #0: loss = 0.706975 (* 1 = 0.706975 loss)
I0428 20:19:09.761078  1305 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:09.889976  1305 solver.cpp:219] Iteration 200 (775.849 iter/s, 0.128891s/100 iters), loss = 0.777112
I0428 20:19:09.889999  1305 solver.cpp:238]     Train net output #0: loss = 0.777112 (* 1 = 0.777112 loss)
I0428 20:19:09.890004  1305 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:10.018208  1305 solver.cpp:219] Iteration 300 (780.039 iter/s, 0.128199s/100 iters), loss = 0.236745
I0428 20:19:10.018231  1305 solver.cpp:238]     Train net output #0: loss = 0.236745 (* 1 = 0.236745 loss)
I0428 20:19:10.018237  1305 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:10.146947  1305 solver.cpp:219] Iteration 400 (776.98 iter/s, 0.128703s/100 iters), loss = 0.0666421
I0428 20:19:10.146971  1305 solver.cpp:238]     Train net output #0: loss = 0.0666421 (* 1 = 0.0666421 loss)
I0428 20:19:10.146977  1305 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:10.272069  1305 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:10.333974  1312 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:10.335507  1305 solver.cpp:398]     Test net output #0: accuracy = 0.9705
I0428 20:19:10.335528  1305 solver.cpp:398]     Test net output #1: loss = 0.0993474 (* 1 = 0.0993474 loss)
I0428 20:19:10.336781  1305 solver.cpp:219] Iteration 500 (526.886 iter/s, 0.189794s/100 iters), loss = 0.189485
I0428 20:19:10.336802  1305 solver.cpp:238]     Train net output #0: loss = 0.189485 (* 1 = 0.189485 loss)
I0428 20:19:10.336814  1305 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:10.477586  1305 solver.cpp:219] Iteration 600 (710.372 iter/s, 0.140771s/100 iters), loss = 0.079059
I0428 20:19:10.477612  1305 solver.cpp:238]     Train net output #0: loss = 0.0790589 (* 1 = 0.0790589 loss)
I0428 20:19:10.477635  1305 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:10.606068  1305 solver.cpp:219] Iteration 700 (778.541 iter/s, 0.128445s/100 iters), loss = 0.159336
I0428 20:19:10.606109  1305 solver.cpp:238]     Train net output #0: loss = 0.159336 (* 1 = 0.159336 loss)
I0428 20:19:10.606115  1305 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:10.732975  1305 solver.cpp:219] Iteration 800 (788.205 iter/s, 0.126871s/100 iters), loss = 0.216846
I0428 20:19:10.733016  1305 solver.cpp:238]     Train net output #0: loss = 0.216846 (* 1 = 0.216846 loss)
I0428 20:19:10.733022  1305 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:10.861290  1305 solver.cpp:219] Iteration 900 (779.646 iter/s, 0.128263s/100 iters), loss = 0.123154
I0428 20:19:10.861331  1305 solver.cpp:238]     Train net output #0: loss = 0.123154 (* 1 = 0.123154 loss)
I0428 20:19:10.861338  1305 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:10.903702  1311 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:10.987087  1305 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:10.988754  1305 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:10.989866  1305 solver.cpp:311] Iteration 1000, loss = 0.128684
I0428 20:19:10.989881  1305 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:11.066567  1312 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:11.067306  1305 solver.cpp:398]     Test net output #0: accuracy = 0.9785
I0428 20:19:11.067327  1305 solver.cpp:398]     Test net output #1: loss = 0.0681696 (* 1 = 0.0681696 loss)
I0428 20:19:11.067332  1305 solver.cpp:316] Optimization Done.
I0428 20:19:11.067335  1305 caffe.cpp:259] Optimization Done.
