I0428 19:52:13.947942 27467 caffe.cpp:218] Using GPUs 0
I0428 19:52:13.983754 27467 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:14.495178 27467 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test656.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:14.495322 27467 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test656.prototxt
I0428 19:52:14.495725 27467 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:14.495743 27467 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:14.495841 27467 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:14.495918 27467 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:14.496017 27467 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:14.496039 27467 net.cpp:86] Creating Layer mnist
I0428 19:52:14.496047 27467 net.cpp:382] mnist -> data
I0428 19:52:14.496069 27467 net.cpp:382] mnist -> label
I0428 19:52:14.497162 27467 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:14.499603 27467 net.cpp:124] Setting up mnist
I0428 19:52:14.499620 27467 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:14.499627 27467 net.cpp:131] Top shape: 64 (64)
I0428 19:52:14.499631 27467 net.cpp:139] Memory required for data: 200960
I0428 19:52:14.499639 27467 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:14.499655 27467 net.cpp:86] Creating Layer conv0
I0428 19:52:14.499687 27467 net.cpp:408] conv0 <- data
I0428 19:52:14.499699 27467 net.cpp:382] conv0 -> conv0
I0428 19:52:14.780277 27467 net.cpp:124] Setting up conv0
I0428 19:52:14.780303 27467 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:14.780306 27467 net.cpp:139] Memory required for data: 938240
I0428 19:52:14.780323 27467 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:14.780334 27467 net.cpp:86] Creating Layer pool0
I0428 19:52:14.780339 27467 net.cpp:408] pool0 <- conv0
I0428 19:52:14.780344 27467 net.cpp:382] pool0 -> pool0
I0428 19:52:14.780390 27467 net.cpp:124] Setting up pool0
I0428 19:52:14.780397 27467 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:14.780400 27467 net.cpp:139] Memory required for data: 1122560
I0428 19:52:14.780403 27467 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:14.780414 27467 net.cpp:86] Creating Layer conv1
I0428 19:52:14.780417 27467 net.cpp:408] conv1 <- pool0
I0428 19:52:14.780422 27467 net.cpp:382] conv1 -> conv1
I0428 19:52:14.783126 27467 net.cpp:124] Setting up conv1
I0428 19:52:14.783157 27467 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:14.783161 27467 net.cpp:139] Memory required for data: 1532160
I0428 19:52:14.783169 27467 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:14.783177 27467 net.cpp:86] Creating Layer pool1
I0428 19:52:14.783196 27467 net.cpp:408] pool1 <- conv1
I0428 19:52:14.783202 27467 net.cpp:382] pool1 -> pool1
I0428 19:52:14.783241 27467 net.cpp:124] Setting up pool1
I0428 19:52:14.783247 27467 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:14.783251 27467 net.cpp:139] Memory required for data: 1634560
I0428 19:52:14.783253 27467 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:14.783260 27467 net.cpp:86] Creating Layer ip1
I0428 19:52:14.783263 27467 net.cpp:408] ip1 <- pool1
I0428 19:52:14.783268 27467 net.cpp:382] ip1 -> ip1
I0428 19:52:14.783498 27467 net.cpp:124] Setting up ip1
I0428 19:52:14.783505 27467 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:14.783509 27467 net.cpp:139] Memory required for data: 1647360
I0428 19:52:14.783515 27467 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:14.783524 27467 net.cpp:86] Creating Layer relu1
I0428 19:52:14.783526 27467 net.cpp:408] relu1 <- ip1
I0428 19:52:14.783530 27467 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:14.783689 27467 net.cpp:124] Setting up relu1
I0428 19:52:14.783699 27467 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:14.783701 27467 net.cpp:139] Memory required for data: 1660160
I0428 19:52:14.783704 27467 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:14.783710 27467 net.cpp:86] Creating Layer ip2
I0428 19:52:14.783713 27467 net.cpp:408] ip2 <- ip1
I0428 19:52:14.783718 27467 net.cpp:382] ip2 -> ip2
I0428 19:52:14.783810 27467 net.cpp:124] Setting up ip2
I0428 19:52:14.783818 27467 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:14.783819 27467 net.cpp:139] Memory required for data: 1662720
I0428 19:52:14.783825 27467 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:14.783830 27467 net.cpp:86] Creating Layer relu2
I0428 19:52:14.783833 27467 net.cpp:408] relu2 <- ip2
I0428 19:52:14.783838 27467 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:14.784595 27467 net.cpp:124] Setting up relu2
I0428 19:52:14.784607 27467 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:14.784627 27467 net.cpp:139] Memory required for data: 1665280
I0428 19:52:14.784631 27467 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:14.784638 27467 net.cpp:86] Creating Layer ip3
I0428 19:52:14.784641 27467 net.cpp:408] ip3 <- ip2
I0428 19:52:14.784646 27467 net.cpp:382] ip3 -> ip3
I0428 19:52:14.784739 27467 net.cpp:124] Setting up ip3
I0428 19:52:14.784745 27467 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:14.784749 27467 net.cpp:139] Memory required for data: 1667840
I0428 19:52:14.784756 27467 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:14.784762 27467 net.cpp:86] Creating Layer relu3
I0428 19:52:14.784765 27467 net.cpp:408] relu3 <- ip3
I0428 19:52:14.784770 27467 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:14.785022 27467 net.cpp:124] Setting up relu3
I0428 19:52:14.785033 27467 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:14.785037 27467 net.cpp:139] Memory required for data: 1670400
I0428 19:52:14.785040 27467 layer_factory.hpp:77] Creating layer loss
I0428 19:52:14.785048 27467 net.cpp:86] Creating Layer loss
I0428 19:52:14.785051 27467 net.cpp:408] loss <- ip3
I0428 19:52:14.785055 27467 net.cpp:408] loss <- label
I0428 19:52:14.785063 27467 net.cpp:382] loss -> loss
I0428 19:52:14.785078 27467 layer_factory.hpp:77] Creating layer loss
I0428 19:52:14.785338 27467 net.cpp:124] Setting up loss
I0428 19:52:14.785362 27467 net.cpp:131] Top shape: (1)
I0428 19:52:14.785365 27467 net.cpp:134]     with loss weight 1
I0428 19:52:14.785395 27467 net.cpp:139] Memory required for data: 1670404
I0428 19:52:14.785399 27467 net.cpp:200] loss needs backward computation.
I0428 19:52:14.785403 27467 net.cpp:200] relu3 needs backward computation.
I0428 19:52:14.785405 27467 net.cpp:200] ip3 needs backward computation.
I0428 19:52:14.785408 27467 net.cpp:200] relu2 needs backward computation.
I0428 19:52:14.785411 27467 net.cpp:200] ip2 needs backward computation.
I0428 19:52:14.785414 27467 net.cpp:200] relu1 needs backward computation.
I0428 19:52:14.785418 27467 net.cpp:200] ip1 needs backward computation.
I0428 19:52:14.785420 27467 net.cpp:200] pool1 needs backward computation.
I0428 19:52:14.785423 27467 net.cpp:200] conv1 needs backward computation.
I0428 19:52:14.785426 27467 net.cpp:200] pool0 needs backward computation.
I0428 19:52:14.785429 27467 net.cpp:200] conv0 needs backward computation.
I0428 19:52:14.785432 27467 net.cpp:202] mnist does not need backward computation.
I0428 19:52:14.785435 27467 net.cpp:244] This network produces output loss
I0428 19:52:14.785444 27467 net.cpp:257] Network initialization done.
I0428 19:52:14.785789 27467 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test656.prototxt
I0428 19:52:14.785832 27467 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:14.785920 27467 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:14.785998 27467 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:14.786042 27467 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:14.786056 27467 net.cpp:86] Creating Layer mnist
I0428 19:52:14.786062 27467 net.cpp:382] mnist -> data
I0428 19:52:14.786069 27467 net.cpp:382] mnist -> label
I0428 19:52:14.786162 27467 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:14.788167 27467 net.cpp:124] Setting up mnist
I0428 19:52:14.788197 27467 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:14.788219 27467 net.cpp:131] Top shape: 100 (100)
I0428 19:52:14.788223 27467 net.cpp:139] Memory required for data: 314000
I0428 19:52:14.788226 27467 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:14.788242 27467 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:14.788245 27467 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:14.788250 27467 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:14.788257 27467 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:14.788350 27467 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:14.788369 27467 net.cpp:131] Top shape: 100 (100)
I0428 19:52:14.788373 27467 net.cpp:131] Top shape: 100 (100)
I0428 19:52:14.788375 27467 net.cpp:139] Memory required for data: 314800
I0428 19:52:14.788378 27467 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:14.788388 27467 net.cpp:86] Creating Layer conv0
I0428 19:52:14.788390 27467 net.cpp:408] conv0 <- data
I0428 19:52:14.788395 27467 net.cpp:382] conv0 -> conv0
I0428 19:52:14.789993 27467 net.cpp:124] Setting up conv0
I0428 19:52:14.790005 27467 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:14.790009 27467 net.cpp:139] Memory required for data: 1466800
I0428 19:52:14.790019 27467 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:14.790024 27467 net.cpp:86] Creating Layer pool0
I0428 19:52:14.790027 27467 net.cpp:408] pool0 <- conv0
I0428 19:52:14.790038 27467 net.cpp:382] pool0 -> pool0
I0428 19:52:14.790109 27467 net.cpp:124] Setting up pool0
I0428 19:52:14.790115 27467 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:14.790118 27467 net.cpp:139] Memory required for data: 1754800
I0428 19:52:14.790122 27467 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:14.790130 27467 net.cpp:86] Creating Layer conv1
I0428 19:52:14.790133 27467 net.cpp:408] conv1 <- pool0
I0428 19:52:14.790138 27467 net.cpp:382] conv1 -> conv1
I0428 19:52:14.792158 27467 net.cpp:124] Setting up conv1
I0428 19:52:14.792172 27467 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:14.792191 27467 net.cpp:139] Memory required for data: 2394800
I0428 19:52:14.792201 27467 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:14.792207 27467 net.cpp:86] Creating Layer pool1
I0428 19:52:14.792210 27467 net.cpp:408] pool1 <- conv1
I0428 19:52:14.792215 27467 net.cpp:382] pool1 -> pool1
I0428 19:52:14.792253 27467 net.cpp:124] Setting up pool1
I0428 19:52:14.792258 27467 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:14.792261 27467 net.cpp:139] Memory required for data: 2554800
I0428 19:52:14.792264 27467 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:14.792269 27467 net.cpp:86] Creating Layer ip1
I0428 19:52:14.792273 27467 net.cpp:408] ip1 <- pool1
I0428 19:52:14.792279 27467 net.cpp:382] ip1 -> ip1
I0428 19:52:14.792513 27467 net.cpp:124] Setting up ip1
I0428 19:52:14.792522 27467 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:14.792536 27467 net.cpp:139] Memory required for data: 2574800
I0428 19:52:14.792544 27467 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:14.792549 27467 net.cpp:86] Creating Layer relu1
I0428 19:52:14.792553 27467 net.cpp:408] relu1 <- ip1
I0428 19:52:14.792557 27467 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:14.792714 27467 net.cpp:124] Setting up relu1
I0428 19:52:14.792723 27467 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:14.792726 27467 net.cpp:139] Memory required for data: 2594800
I0428 19:52:14.792731 27467 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:14.792737 27467 net.cpp:86] Creating Layer ip2
I0428 19:52:14.792740 27467 net.cpp:408] ip2 <- ip1
I0428 19:52:14.792745 27467 net.cpp:382] ip2 -> ip2
I0428 19:52:14.792881 27467 net.cpp:124] Setting up ip2
I0428 19:52:14.792891 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.792899 27467 net.cpp:139] Memory required for data: 2598800
I0428 19:52:14.792906 27467 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:14.792912 27467 net.cpp:86] Creating Layer relu2
I0428 19:52:14.792914 27467 net.cpp:408] relu2 <- ip2
I0428 19:52:14.792919 27467 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:14.793071 27467 net.cpp:124] Setting up relu2
I0428 19:52:14.793081 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.793083 27467 net.cpp:139] Memory required for data: 2602800
I0428 19:52:14.793087 27467 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:14.793093 27467 net.cpp:86] Creating Layer ip3
I0428 19:52:14.793097 27467 net.cpp:408] ip3 <- ip2
I0428 19:52:14.793102 27467 net.cpp:382] ip3 -> ip3
I0428 19:52:14.793231 27467 net.cpp:124] Setting up ip3
I0428 19:52:14.793238 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.793249 27467 net.cpp:139] Memory required for data: 2606800
I0428 19:52:14.793257 27467 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:14.793262 27467 net.cpp:86] Creating Layer relu3
I0428 19:52:14.793265 27467 net.cpp:408] relu3 <- ip3
I0428 19:52:14.793269 27467 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:14.794106 27467 net.cpp:124] Setting up relu3
I0428 19:52:14.794118 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.794137 27467 net.cpp:139] Memory required for data: 2610800
I0428 19:52:14.794142 27467 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:14.794147 27467 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:14.794152 27467 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:14.794157 27467 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:14.794162 27467 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:14.794210 27467 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:14.794216 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.794219 27467 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:14.794222 27467 net.cpp:139] Memory required for data: 2618800
I0428 19:52:14.794225 27467 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:14.794230 27467 net.cpp:86] Creating Layer accuracy
I0428 19:52:14.794234 27467 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:14.794239 27467 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:14.794244 27467 net.cpp:382] accuracy -> accuracy
I0428 19:52:14.794250 27467 net.cpp:124] Setting up accuracy
I0428 19:52:14.794255 27467 net.cpp:131] Top shape: (1)
I0428 19:52:14.794257 27467 net.cpp:139] Memory required for data: 2618804
I0428 19:52:14.794260 27467 layer_factory.hpp:77] Creating layer loss
I0428 19:52:14.794265 27467 net.cpp:86] Creating Layer loss
I0428 19:52:14.794267 27467 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:14.794271 27467 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:14.794291 27467 net.cpp:382] loss -> loss
I0428 19:52:14.794296 27467 layer_factory.hpp:77] Creating layer loss
I0428 19:52:14.794523 27467 net.cpp:124] Setting up loss
I0428 19:52:14.794533 27467 net.cpp:131] Top shape: (1)
I0428 19:52:14.794536 27467 net.cpp:134]     with loss weight 1
I0428 19:52:14.794543 27467 net.cpp:139] Memory required for data: 2618808
I0428 19:52:14.794559 27467 net.cpp:200] loss needs backward computation.
I0428 19:52:14.794564 27467 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:14.794567 27467 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:14.794571 27467 net.cpp:200] relu3 needs backward computation.
I0428 19:52:14.794574 27467 net.cpp:200] ip3 needs backward computation.
I0428 19:52:14.794576 27467 net.cpp:200] relu2 needs backward computation.
I0428 19:52:14.794580 27467 net.cpp:200] ip2 needs backward computation.
I0428 19:52:14.794584 27467 net.cpp:200] relu1 needs backward computation.
I0428 19:52:14.794586 27467 net.cpp:200] ip1 needs backward computation.
I0428 19:52:14.794589 27467 net.cpp:200] pool1 needs backward computation.
I0428 19:52:14.794594 27467 net.cpp:200] conv1 needs backward computation.
I0428 19:52:14.794596 27467 net.cpp:200] pool0 needs backward computation.
I0428 19:52:14.794600 27467 net.cpp:200] conv0 needs backward computation.
I0428 19:52:14.794603 27467 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:14.794607 27467 net.cpp:202] mnist does not need backward computation.
I0428 19:52:14.794610 27467 net.cpp:244] This network produces output accuracy
I0428 19:52:14.794615 27467 net.cpp:244] This network produces output loss
I0428 19:52:14.794625 27467 net.cpp:257] Network initialization done.
I0428 19:52:14.794667 27467 solver.cpp:56] Solver scaffolding done.
I0428 19:52:14.795008 27467 caffe.cpp:248] Starting Optimization
I0428 19:52:14.795016 27467 solver.cpp:273] Solving LeNet
I0428 19:52:14.795017 27467 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:14.795867 27467 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:14.799577 27467 blocking_queue.cpp:49] Waiting for data
I0428 19:52:14.867215 27474 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:14.867728 27467 solver.cpp:398]     Test net output #0: accuracy = 0.1357
I0428 19:52:14.867748 27467 solver.cpp:398]     Test net output #1: loss = 2.29726 (* 1 = 2.29726 loss)
I0428 19:52:14.870299 27467 solver.cpp:219] Iteration 0 (-1.68424e-31 iter/s, 0.075221s/100 iters), loss = 2.28847
I0428 19:52:14.870348 27467 solver.cpp:238]     Train net output #0: loss = 2.28847 (* 1 = 2.28847 loss)
I0428 19:52:14.870388 27467 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:14.961758 27467 solver.cpp:219] Iteration 100 (1094.1 iter/s, 0.0913992s/100 iters), loss = 0.826459
I0428 19:52:14.961799 27467 solver.cpp:238]     Train net output #0: loss = 0.826459 (* 1 = 0.826459 loss)
I0428 19:52:14.961805 27467 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:15.051100 27467 solver.cpp:219] Iteration 200 (1119.74 iter/s, 0.0893062s/100 iters), loss = 0.310967
I0428 19:52:15.051139 27467 solver.cpp:238]     Train net output #0: loss = 0.310967 (* 1 = 0.310967 loss)
I0428 19:52:15.051146 27467 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:15.140414 27467 solver.cpp:219] Iteration 300 (1120.05 iter/s, 0.0892815s/100 iters), loss = 0.384199
I0428 19:52:15.140455 27467 solver.cpp:238]     Train net output #0: loss = 0.384199 (* 1 = 0.384199 loss)
I0428 19:52:15.140460 27467 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:15.227146 27467 solver.cpp:219] Iteration 400 (1153.42 iter/s, 0.086699s/100 iters), loss = 0.0544288
I0428 19:52:15.227185 27467 solver.cpp:238]     Train net output #0: loss = 0.0544288 (* 1 = 0.0544288 loss)
I0428 19:52:15.227191 27467 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:15.309871 27467 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:15.356143 27474 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:15.356696 27467 solver.cpp:398]     Test net output #0: accuracy = 0.9554
I0428 19:52:15.356734 27467 solver.cpp:398]     Test net output #1: loss = 0.146227 (* 1 = 0.146227 loss)
I0428 19:52:15.357635 27467 solver.cpp:219] Iteration 500 (766.569 iter/s, 0.130451s/100 iters), loss = 0.0947312
I0428 19:52:15.357714 27467 solver.cpp:238]     Train net output #0: loss = 0.0947312 (* 1 = 0.0947312 loss)
I0428 19:52:15.357722 27467 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:15.441750 27467 solver.cpp:219] Iteration 600 (1190.06 iter/s, 0.0840297s/100 iters), loss = 0.205015
I0428 19:52:15.441788 27467 solver.cpp:238]     Train net output #0: loss = 0.205015 (* 1 = 0.205015 loss)
I0428 19:52:15.441794 27467 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:15.525441 27467 solver.cpp:219] Iteration 700 (1195.33 iter/s, 0.0836588s/100 iters), loss = 0.220201
I0428 19:52:15.525480 27467 solver.cpp:238]     Train net output #0: loss = 0.220201 (* 1 = 0.220201 loss)
I0428 19:52:15.525501 27467 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:15.609452 27467 solver.cpp:219] Iteration 800 (1190.79 iter/s, 0.0839782s/100 iters), loss = 0.288956
I0428 19:52:15.609477 27467 solver.cpp:238]     Train net output #0: loss = 0.288956 (* 1 = 0.288956 loss)
I0428 19:52:15.609498 27467 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:15.693485 27467 solver.cpp:219] Iteration 900 (1190.49 iter/s, 0.0839987s/100 iters), loss = 0.0889683
I0428 19:52:15.693507 27467 solver.cpp:238]     Train net output #0: loss = 0.0889683 (* 1 = 0.0889683 loss)
I0428 19:52:15.693513 27467 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:15.721436 27473 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:15.776629 27467 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:15.777784 27467 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:15.778452 27467 solver.cpp:311] Iteration 1000, loss = 0.0983446
I0428 19:52:15.778468 27467 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:15.823921 27474 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:15.824470 27467 solver.cpp:398]     Test net output #0: accuracy = 0.972
I0428 19:52:15.824502 27467 solver.cpp:398]     Test net output #1: loss = 0.0894552 (* 1 = 0.0894552 loss)
I0428 19:52:15.824506 27467 solver.cpp:316] Optimization Done.
I0428 19:52:15.824509 27467 caffe.cpp:259] Optimization Done.
