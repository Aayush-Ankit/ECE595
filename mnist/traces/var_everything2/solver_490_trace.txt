I0428 19:46:20.556551 25983 caffe.cpp:218] Using GPUs 0
I0428 19:46:20.590961 25983 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:21.108212 25983 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test490.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:21.108381 25983 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test490.prototxt
I0428 19:46:21.108796 25983 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:21.108827 25983 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:21.108940 25983 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:21.109055 25983 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:21.109180 25983 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:21.109211 25983 net.cpp:86] Creating Layer mnist
I0428 19:46:21.109227 25983 net.cpp:382] mnist -> data
I0428 19:46:21.109256 25983 net.cpp:382] mnist -> label
I0428 19:46:21.110491 25983 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:21.112893 25983 net.cpp:124] Setting up mnist
I0428 19:46:21.112912 25983 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:21.112922 25983 net.cpp:131] Top shape: 64 (64)
I0428 19:46:21.112928 25983 net.cpp:139] Memory required for data: 200960
I0428 19:46:21.112938 25983 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:21.112962 25983 net.cpp:86] Creating Layer conv0
I0428 19:46:21.112985 25983 net.cpp:408] conv0 <- data
I0428 19:46:21.113005 25983 net.cpp:382] conv0 -> conv0
I0428 19:46:21.397305 25983 net.cpp:124] Setting up conv0
I0428 19:46:21.397334 25983 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:21.397341 25983 net.cpp:139] Memory required for data: 495872
I0428 19:46:21.397362 25983 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:21.397380 25983 net.cpp:86] Creating Layer pool0
I0428 19:46:21.397387 25983 net.cpp:408] pool0 <- conv0
I0428 19:46:21.397397 25983 net.cpp:382] pool0 -> pool0
I0428 19:46:21.397461 25983 net.cpp:124] Setting up pool0
I0428 19:46:21.397471 25983 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:21.397476 25983 net.cpp:139] Memory required for data: 569600
I0428 19:46:21.397482 25983 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:21.397498 25983 net.cpp:86] Creating Layer conv1
I0428 19:46:21.397505 25983 net.cpp:408] conv1 <- pool0
I0428 19:46:21.397513 25983 net.cpp:382] conv1 -> conv1
I0428 19:46:21.400190 25983 net.cpp:124] Setting up conv1
I0428 19:46:21.400207 25983 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:21.400213 25983 net.cpp:139] Memory required for data: 2208000
I0428 19:46:21.400226 25983 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:21.400238 25983 net.cpp:86] Creating Layer pool1
I0428 19:46:21.400245 25983 net.cpp:408] pool1 <- conv1
I0428 19:46:21.400254 25983 net.cpp:382] pool1 -> pool1
I0428 19:46:21.400300 25983 net.cpp:124] Setting up pool1
I0428 19:46:21.400308 25983 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:21.400313 25983 net.cpp:139] Memory required for data: 2617600
I0428 19:46:21.400318 25983 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:21.400329 25983 net.cpp:86] Creating Layer ip1
I0428 19:46:21.400336 25983 net.cpp:408] ip1 <- pool1
I0428 19:46:21.400343 25983 net.cpp:382] ip1 -> ip1
I0428 19:46:21.400681 25983 net.cpp:124] Setting up ip1
I0428 19:46:21.400691 25983 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:21.400696 25983 net.cpp:139] Memory required for data: 2624000
I0428 19:46:21.400708 25983 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:21.400717 25983 net.cpp:86] Creating Layer relu1
I0428 19:46:21.400727 25983 net.cpp:408] relu1 <- ip1
I0428 19:46:21.400733 25983 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:21.400944 25983 net.cpp:124] Setting up relu1
I0428 19:46:21.400957 25983 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:21.400964 25983 net.cpp:139] Memory required for data: 2630400
I0428 19:46:21.400969 25983 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:21.400979 25983 net.cpp:86] Creating Layer ip2
I0428 19:46:21.400985 25983 net.cpp:408] ip2 <- ip1
I0428 19:46:21.400995 25983 net.cpp:382] ip2 -> ip2
I0428 19:46:21.401120 25983 net.cpp:124] Setting up ip2
I0428 19:46:21.401129 25983 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:21.401134 25983 net.cpp:139] Memory required for data: 2632960
I0428 19:46:21.401144 25983 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:21.401155 25983 net.cpp:86] Creating Layer relu2
I0428 19:46:21.401165 25983 net.cpp:408] relu2 <- ip2
I0428 19:46:21.401172 25983 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:21.401923 25983 net.cpp:124] Setting up relu2
I0428 19:46:21.401938 25983 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:21.401944 25983 net.cpp:139] Memory required for data: 2635520
I0428 19:46:21.401950 25983 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:21.401962 25983 net.cpp:86] Creating Layer ip3
I0428 19:46:21.401968 25983 net.cpp:408] ip3 <- ip2
I0428 19:46:21.401976 25983 net.cpp:382] ip3 -> ip3
I0428 19:46:21.402137 25983 net.cpp:124] Setting up ip3
I0428 19:46:21.402146 25983 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:21.402151 25983 net.cpp:139] Memory required for data: 2638080
I0428 19:46:21.402164 25983 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:21.402173 25983 net.cpp:86] Creating Layer relu3
I0428 19:46:21.402182 25983 net.cpp:408] relu3 <- ip3
I0428 19:46:21.402190 25983 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:21.402362 25983 net.cpp:124] Setting up relu3
I0428 19:46:21.402374 25983 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:21.402379 25983 net.cpp:139] Memory required for data: 2640640
I0428 19:46:21.402384 25983 layer_factory.hpp:77] Creating layer loss
I0428 19:46:21.402393 25983 net.cpp:86] Creating Layer loss
I0428 19:46:21.402400 25983 net.cpp:408] loss <- ip3
I0428 19:46:21.402406 25983 net.cpp:408] loss <- label
I0428 19:46:21.402415 25983 net.cpp:382] loss -> loss
I0428 19:46:21.402438 25983 layer_factory.hpp:77] Creating layer loss
I0428 19:46:21.402678 25983 net.cpp:124] Setting up loss
I0428 19:46:21.402688 25983 net.cpp:131] Top shape: (1)
I0428 19:46:21.402694 25983 net.cpp:134]     with loss weight 1
I0428 19:46:21.402714 25983 net.cpp:139] Memory required for data: 2640644
I0428 19:46:21.402720 25983 net.cpp:200] loss needs backward computation.
I0428 19:46:21.402727 25983 net.cpp:200] relu3 needs backward computation.
I0428 19:46:21.402732 25983 net.cpp:200] ip3 needs backward computation.
I0428 19:46:21.402737 25983 net.cpp:200] relu2 needs backward computation.
I0428 19:46:21.402742 25983 net.cpp:200] ip2 needs backward computation.
I0428 19:46:21.402747 25983 net.cpp:200] relu1 needs backward computation.
I0428 19:46:21.402752 25983 net.cpp:200] ip1 needs backward computation.
I0428 19:46:21.402757 25983 net.cpp:200] pool1 needs backward computation.
I0428 19:46:21.402763 25983 net.cpp:200] conv1 needs backward computation.
I0428 19:46:21.402768 25983 net.cpp:200] pool0 needs backward computation.
I0428 19:46:21.402773 25983 net.cpp:200] conv0 needs backward computation.
I0428 19:46:21.402779 25983 net.cpp:202] mnist does not need backward computation.
I0428 19:46:21.402784 25983 net.cpp:244] This network produces output loss
I0428 19:46:21.402799 25983 net.cpp:257] Network initialization done.
I0428 19:46:21.403133 25983 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test490.prototxt
I0428 19:46:21.403169 25983 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:21.403268 25983 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:21.403386 25983 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:21.403448 25983 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:21.403466 25983 net.cpp:86] Creating Layer mnist
I0428 19:46:21.403475 25983 net.cpp:382] mnist -> data
I0428 19:46:21.403486 25983 net.cpp:382] mnist -> label
I0428 19:46:21.403614 25983 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:21.405728 25983 net.cpp:124] Setting up mnist
I0428 19:46:21.405745 25983 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:21.405767 25983 net.cpp:131] Top shape: 100 (100)
I0428 19:46:21.405772 25983 net.cpp:139] Memory required for data: 314000
I0428 19:46:21.405778 25983 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:21.405789 25983 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:21.405796 25983 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:21.405803 25983 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:21.405817 25983 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:21.405903 25983 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:21.405913 25983 net.cpp:131] Top shape: 100 (100)
I0428 19:46:21.405920 25983 net.cpp:131] Top shape: 100 (100)
I0428 19:46:21.405925 25983 net.cpp:139] Memory required for data: 314800
I0428 19:46:21.405930 25983 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:21.405948 25983 net.cpp:86] Creating Layer conv0
I0428 19:46:21.405956 25983 net.cpp:408] conv0 <- data
I0428 19:46:21.405964 25983 net.cpp:382] conv0 -> conv0
I0428 19:46:21.407618 25983 net.cpp:124] Setting up conv0
I0428 19:46:21.407635 25983 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:21.407641 25983 net.cpp:139] Memory required for data: 775600
I0428 19:46:21.407658 25983 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:21.407670 25983 net.cpp:86] Creating Layer pool0
I0428 19:46:21.407676 25983 net.cpp:408] pool0 <- conv0
I0428 19:46:21.407686 25983 net.cpp:382] pool0 -> pool0
I0428 19:46:21.407729 25983 net.cpp:124] Setting up pool0
I0428 19:46:21.407740 25983 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:21.407745 25983 net.cpp:139] Memory required for data: 890800
I0428 19:46:21.407750 25983 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:21.407765 25983 net.cpp:86] Creating Layer conv1
I0428 19:46:21.407771 25983 net.cpp:408] conv1 <- pool0
I0428 19:46:21.407781 25983 net.cpp:382] conv1 -> conv1
I0428 19:46:21.409467 25983 net.cpp:124] Setting up conv1
I0428 19:46:21.409483 25983 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:21.409489 25983 net.cpp:139] Memory required for data: 3450800
I0428 19:46:21.409503 25983 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:21.409512 25983 net.cpp:86] Creating Layer pool1
I0428 19:46:21.409518 25983 net.cpp:408] pool1 <- conv1
I0428 19:46:21.409529 25983 net.cpp:382] pool1 -> pool1
I0428 19:46:21.409574 25983 net.cpp:124] Setting up pool1
I0428 19:46:21.409584 25983 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:21.409590 25983 net.cpp:139] Memory required for data: 4090800
I0428 19:46:21.409595 25983 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:21.409606 25983 net.cpp:86] Creating Layer ip1
I0428 19:46:21.409615 25983 net.cpp:408] ip1 <- pool1
I0428 19:46:21.409624 25983 net.cpp:382] ip1 -> ip1
I0428 19:46:21.409981 25983 net.cpp:124] Setting up ip1
I0428 19:46:21.409993 25983 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:21.410010 25983 net.cpp:139] Memory required for data: 4100800
I0428 19:46:21.410023 25983 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:21.410033 25983 net.cpp:86] Creating Layer relu1
I0428 19:46:21.410039 25983 net.cpp:408] relu1 <- ip1
I0428 19:46:21.410049 25983 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:21.410279 25983 net.cpp:124] Setting up relu1
I0428 19:46:21.410289 25983 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:21.410295 25983 net.cpp:139] Memory required for data: 4110800
I0428 19:46:21.410300 25983 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:21.410312 25983 net.cpp:86] Creating Layer ip2
I0428 19:46:21.410318 25983 net.cpp:408] ip2 <- ip1
I0428 19:46:21.410327 25983 net.cpp:382] ip2 -> ip2
I0428 19:46:21.410440 25983 net.cpp:124] Setting up ip2
I0428 19:46:21.410450 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.410455 25983 net.cpp:139] Memory required for data: 4114800
I0428 19:46:21.410465 25983 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:21.410475 25983 net.cpp:86] Creating Layer relu2
I0428 19:46:21.410480 25983 net.cpp:408] relu2 <- ip2
I0428 19:46:21.410488 25983 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:21.410676 25983 net.cpp:124] Setting up relu2
I0428 19:46:21.410686 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.410691 25983 net.cpp:139] Memory required for data: 4118800
I0428 19:46:21.410697 25983 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:21.410708 25983 net.cpp:86] Creating Layer ip3
I0428 19:46:21.410714 25983 net.cpp:408] ip3 <- ip2
I0428 19:46:21.410724 25983 net.cpp:382] ip3 -> ip3
I0428 19:46:21.410850 25983 net.cpp:124] Setting up ip3
I0428 19:46:21.410858 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.410872 25983 net.cpp:139] Memory required for data: 4122800
I0428 19:46:21.410886 25983 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:21.410899 25983 net.cpp:86] Creating Layer relu3
I0428 19:46:21.410905 25983 net.cpp:408] relu3 <- ip3
I0428 19:46:21.410913 25983 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:21.411730 25983 net.cpp:124] Setting up relu3
I0428 19:46:21.411744 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.411751 25983 net.cpp:139] Memory required for data: 4126800
I0428 19:46:21.411756 25983 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:21.411764 25983 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:21.411769 25983 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:21.411777 25983 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:21.411787 25983 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:21.411835 25983 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:21.411844 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.411851 25983 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:21.411856 25983 net.cpp:139] Memory required for data: 4134800
I0428 19:46:21.411861 25983 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:21.411876 25983 net.cpp:86] Creating Layer accuracy
I0428 19:46:21.411882 25983 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:21.411890 25983 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:21.411897 25983 net.cpp:382] accuracy -> accuracy
I0428 19:46:21.411909 25983 net.cpp:124] Setting up accuracy
I0428 19:46:21.411918 25983 net.cpp:131] Top shape: (1)
I0428 19:46:21.411923 25983 net.cpp:139] Memory required for data: 4134804
I0428 19:46:21.411929 25983 layer_factory.hpp:77] Creating layer loss
I0428 19:46:21.411939 25983 net.cpp:86] Creating Layer loss
I0428 19:46:21.411944 25983 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:21.411965 25983 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:21.411973 25983 net.cpp:382] loss -> loss
I0428 19:46:21.411983 25983 layer_factory.hpp:77] Creating layer loss
I0428 19:46:21.412259 25983 net.cpp:124] Setting up loss
I0428 19:46:21.412271 25983 net.cpp:131] Top shape: (1)
I0428 19:46:21.412276 25983 net.cpp:134]     with loss weight 1
I0428 19:46:21.412286 25983 net.cpp:139] Memory required for data: 4134808
I0428 19:46:21.412303 25983 net.cpp:200] loss needs backward computation.
I0428 19:46:21.412310 25983 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:21.412317 25983 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:21.412322 25983 net.cpp:200] relu3 needs backward computation.
I0428 19:46:21.412328 25983 net.cpp:200] ip3 needs backward computation.
I0428 19:46:21.412333 25983 net.cpp:200] relu2 needs backward computation.
I0428 19:46:21.412338 25983 net.cpp:200] ip2 needs backward computation.
I0428 19:46:21.412343 25983 net.cpp:200] relu1 needs backward computation.
I0428 19:46:21.412348 25983 net.cpp:200] ip1 needs backward computation.
I0428 19:46:21.412353 25983 net.cpp:200] pool1 needs backward computation.
I0428 19:46:21.412358 25983 net.cpp:200] conv1 needs backward computation.
I0428 19:46:21.412364 25983 net.cpp:200] pool0 needs backward computation.
I0428 19:46:21.412369 25983 net.cpp:200] conv0 needs backward computation.
I0428 19:46:21.412375 25983 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:21.412381 25983 net.cpp:202] mnist does not need backward computation.
I0428 19:46:21.412386 25983 net.cpp:244] This network produces output accuracy
I0428 19:46:21.412392 25983 net.cpp:244] This network produces output loss
I0428 19:46:21.412410 25983 net.cpp:257] Network initialization done.
I0428 19:46:21.412459 25983 solver.cpp:56] Solver scaffolding done.
I0428 19:46:21.412850 25983 caffe.cpp:248] Starting Optimization
I0428 19:46:21.412858 25983 solver.cpp:273] Solving LeNet
I0428 19:46:21.412863 25983 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:21.413157 25983 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:21.418277 25983 blocking_queue.cpp:49] Waiting for data
I0428 19:46:21.486706 25990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:21.487298 25983 solver.cpp:398]     Test net output #0: accuracy = 0.1095
I0428 19:46:21.487318 25983 solver.cpp:398]     Test net output #1: loss = 2.31414 (* 1 = 2.31414 loss)
I0428 19:46:21.491111 25983 solver.cpp:219] Iteration 0 (-7.13862e-31 iter/s, 0.0782131s/100 iters), loss = 2.32523
I0428 19:46:21.491153 25983 solver.cpp:238]     Train net output #0: loss = 2.32523 (* 1 = 2.32523 loss)
I0428 19:46:21.491183 25983 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:21.634533 25983 solver.cpp:219] Iteration 100 (697.51 iter/s, 0.143367s/100 iters), loss = 0.789854
I0428 19:46:21.634562 25983 solver.cpp:238]     Train net output #0: loss = 0.789854 (* 1 = 0.789854 loss)
I0428 19:46:21.634572 25983 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:21.778975 25983 solver.cpp:219] Iteration 200 (692.524 iter/s, 0.144399s/100 iters), loss = 0.641051
I0428 19:46:21.779001 25983 solver.cpp:238]     Train net output #0: loss = 0.641051 (* 1 = 0.641051 loss)
I0428 19:46:21.779011 25983 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:21.922036 25983 solver.cpp:219] Iteration 300 (699.178 iter/s, 0.143025s/100 iters), loss = 0.275948
I0428 19:46:21.922065 25983 solver.cpp:238]     Train net output #0: loss = 0.275948 (* 1 = 0.275948 loss)
I0428 19:46:21.922073 25983 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:22.064541 25983 solver.cpp:219] Iteration 400 (701.917 iter/s, 0.142467s/100 iters), loss = 0.372847
I0428 19:46:22.064569 25983 solver.cpp:238]     Train net output #0: loss = 0.372847 (* 1 = 0.372847 loss)
I0428 19:46:22.064579 25983 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:22.210085 25983 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:22.262939 25990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:22.264727 25983 solver.cpp:398]     Test net output #0: accuracy = 0.8664
I0428 19:46:22.264751 25983 solver.cpp:398]     Test net output #1: loss = 0.390448 (* 1 = 0.390448 loss)
I0428 19:46:22.266185 25983 solver.cpp:219] Iteration 500 (496.027 iter/s, 0.201602s/100 iters), loss = 0.513246
I0428 19:46:22.266225 25983 solver.cpp:238]     Train net output #0: loss = 0.513246 (* 1 = 0.513246 loss)
I0428 19:46:22.266237 25983 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:22.428004 25983 solver.cpp:219] Iteration 600 (618.171 iter/s, 0.161767s/100 iters), loss = 0.3178
I0428 19:46:22.428043 25983 solver.cpp:238]     Train net output #0: loss = 0.3178 (* 1 = 0.3178 loss)
I0428 19:46:22.428057 25983 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:22.604079 25983 solver.cpp:219] Iteration 700 (568.106 iter/s, 0.176024s/100 iters), loss = 0.606576
I0428 19:46:22.604125 25983 solver.cpp:238]     Train net output #0: loss = 0.606576 (* 1 = 0.606576 loss)
I0428 19:46:22.604140 25983 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:22.781121 25983 solver.cpp:219] Iteration 800 (565.019 iter/s, 0.176985s/100 iters), loss = 0.407638
I0428 19:46:22.781167 25983 solver.cpp:238]     Train net output #0: loss = 0.407638 (* 1 = 0.407638 loss)
I0428 19:46:22.781183 25983 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:22.958976 25983 solver.cpp:219] Iteration 900 (562.436 iter/s, 0.177798s/100 iters), loss = 0.303297
I0428 19:46:22.959023 25983 solver.cpp:238]     Train net output #0: loss = 0.303297 (* 1 = 0.303297 loss)
I0428 19:46:22.959040 25983 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:23.018530 25989 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:23.137583 25983 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:23.139946 25983 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:23.141130 25983 solver.cpp:311] Iteration 1000, loss = 0.457716
I0428 19:46:23.141166 25983 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:23.198220 25990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:23.200194 25983 solver.cpp:398]     Test net output #0: accuracy = 0.8838
I0428 19:46:23.200219 25983 solver.cpp:398]     Test net output #1: loss = 0.311012 (* 1 = 0.311012 loss)
I0428 19:46:23.200229 25983 solver.cpp:316] Optimization Done.
I0428 19:46:23.200234 25983 caffe.cpp:259] Optimization Done.
