I0428 19:32:50.739717 22971 caffe.cpp:218] Using GPUs 0
I0428 19:32:50.780634 22971 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:51.303263 22971 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test164.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:51.303438 22971 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test164.prototxt
I0428 19:32:51.303777 22971 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:51.303798 22971 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:51.303886 22971 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:32:51.303985 22971 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:51.304117 22971 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:51.304149 22971 net.cpp:86] Creating Layer mnist
I0428 19:32:51.304163 22971 net.cpp:382] mnist -> data
I0428 19:32:51.304194 22971 net.cpp:382] mnist -> label
I0428 19:32:51.305402 22971 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:51.307871 22971 net.cpp:124] Setting up mnist
I0428 19:32:51.307891 22971 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:51.307901 22971 net.cpp:131] Top shape: 64 (64)
I0428 19:32:51.307907 22971 net.cpp:139] Memory required for data: 200960
I0428 19:32:51.307919 22971 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:51.307942 22971 net.cpp:86] Creating Layer conv0
I0428 19:32:51.307955 22971 net.cpp:408] conv0 <- data
I0428 19:32:51.307974 22971 net.cpp:382] conv0 -> conv0
I0428 19:32:51.599731 22971 net.cpp:124] Setting up conv0
I0428 19:32:51.599763 22971 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:32:51.599771 22971 net.cpp:139] Memory required for data: 3887360
I0428 19:32:51.599794 22971 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:51.599815 22971 net.cpp:86] Creating Layer pool0
I0428 19:32:51.599831 22971 net.cpp:408] pool0 <- conv0
I0428 19:32:51.599843 22971 net.cpp:382] pool0 -> pool0
I0428 19:32:51.599906 22971 net.cpp:124] Setting up pool0
I0428 19:32:51.599917 22971 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:32:51.599923 22971 net.cpp:139] Memory required for data: 4808960
I0428 19:32:51.599948 22971 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:51.599963 22971 net.cpp:86] Creating Layer ip1
I0428 19:32:51.599969 22971 net.cpp:408] ip1 <- pool0
I0428 19:32:51.599979 22971 net.cpp:382] ip1 -> ip1
I0428 19:32:51.601650 22971 net.cpp:124] Setting up ip1
I0428 19:32:51.601667 22971 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:51.601675 22971 net.cpp:139] Memory required for data: 4815360
I0428 19:32:51.601688 22971 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:51.601701 22971 net.cpp:86] Creating Layer relu1
I0428 19:32:51.601707 22971 net.cpp:408] relu1 <- ip1
I0428 19:32:51.601716 22971 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:51.601920 22971 net.cpp:124] Setting up relu1
I0428 19:32:51.601933 22971 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:51.601938 22971 net.cpp:139] Memory required for data: 4821760
I0428 19:32:51.601945 22971 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:51.601958 22971 net.cpp:86] Creating Layer ip2
I0428 19:32:51.601963 22971 net.cpp:408] ip2 <- ip1
I0428 19:32:51.601974 22971 net.cpp:382] ip2 -> ip2
I0428 19:32:51.602092 22971 net.cpp:124] Setting up ip2
I0428 19:32:51.602102 22971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:51.602108 22971 net.cpp:139] Memory required for data: 4824320
I0428 19:32:51.602121 22971 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:51.602134 22971 net.cpp:86] Creating Layer relu2
I0428 19:32:51.602140 22971 net.cpp:408] relu2 <- ip2
I0428 19:32:51.602149 22971 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:51.602985 22971 net.cpp:124] Setting up relu2
I0428 19:32:51.603001 22971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:51.603008 22971 net.cpp:139] Memory required for data: 4826880
I0428 19:32:51.603014 22971 layer_factory.hpp:77] Creating layer loss
I0428 19:32:51.603025 22971 net.cpp:86] Creating Layer loss
I0428 19:32:51.603031 22971 net.cpp:408] loss <- ip2
I0428 19:32:51.603040 22971 net.cpp:408] loss <- label
I0428 19:32:51.603049 22971 net.cpp:382] loss -> loss
I0428 19:32:51.603076 22971 layer_factory.hpp:77] Creating layer loss
I0428 19:32:51.603354 22971 net.cpp:124] Setting up loss
I0428 19:32:51.603368 22971 net.cpp:131] Top shape: (1)
I0428 19:32:51.603374 22971 net.cpp:134]     with loss weight 1
I0428 19:32:51.603396 22971 net.cpp:139] Memory required for data: 4826884
I0428 19:32:51.603404 22971 net.cpp:200] loss needs backward computation.
I0428 19:32:51.603410 22971 net.cpp:200] relu2 needs backward computation.
I0428 19:32:51.603416 22971 net.cpp:200] ip2 needs backward computation.
I0428 19:32:51.603422 22971 net.cpp:200] relu1 needs backward computation.
I0428 19:32:51.603428 22971 net.cpp:200] ip1 needs backward computation.
I0428 19:32:51.603435 22971 net.cpp:200] pool0 needs backward computation.
I0428 19:32:51.603440 22971 net.cpp:200] conv0 needs backward computation.
I0428 19:32:51.603447 22971 net.cpp:202] mnist does not need backward computation.
I0428 19:32:51.603453 22971 net.cpp:244] This network produces output loss
I0428 19:32:51.603466 22971 net.cpp:257] Network initialization done.
I0428 19:32:51.603757 22971 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test164.prototxt
I0428 19:32:51.603793 22971 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:51.603884 22971 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:32:51.603997 22971 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:51.604066 22971 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:51.604085 22971 net.cpp:86] Creating Layer mnist
I0428 19:32:51.604094 22971 net.cpp:382] mnist -> data
I0428 19:32:51.604107 22971 net.cpp:382] mnist -> label
I0428 19:32:51.604243 22971 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:51.605530 22971 net.cpp:124] Setting up mnist
I0428 19:32:51.605547 22971 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:51.605557 22971 net.cpp:131] Top shape: 100 (100)
I0428 19:32:51.605563 22971 net.cpp:139] Memory required for data: 314000
I0428 19:32:51.605569 22971 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:51.605581 22971 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:51.605587 22971 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:51.605597 22971 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:51.605608 22971 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:51.605674 22971 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:51.605684 22971 net.cpp:131] Top shape: 100 (100)
I0428 19:32:51.605691 22971 net.cpp:131] Top shape: 100 (100)
I0428 19:32:51.605697 22971 net.cpp:139] Memory required for data: 314800
I0428 19:32:51.605703 22971 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:51.605720 22971 net.cpp:86] Creating Layer conv0
I0428 19:32:51.605726 22971 net.cpp:408] conv0 <- data
I0428 19:32:51.605736 22971 net.cpp:382] conv0 -> conv0
I0428 19:32:51.607475 22971 net.cpp:124] Setting up conv0
I0428 19:32:51.607492 22971 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:32:51.607499 22971 net.cpp:139] Memory required for data: 6074800
I0428 19:32:51.607517 22971 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:51.607527 22971 net.cpp:86] Creating Layer pool0
I0428 19:32:51.607534 22971 net.cpp:408] pool0 <- conv0
I0428 19:32:51.607543 22971 net.cpp:382] pool0 -> pool0
I0428 19:32:51.607592 22971 net.cpp:124] Setting up pool0
I0428 19:32:51.607602 22971 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:32:51.607609 22971 net.cpp:139] Memory required for data: 7514800
I0428 19:32:51.607614 22971 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:51.607626 22971 net.cpp:86] Creating Layer ip1
I0428 19:32:51.607633 22971 net.cpp:408] ip1 <- pool0
I0428 19:32:51.607643 22971 net.cpp:382] ip1 -> ip1
I0428 19:32:51.608336 22971 net.cpp:124] Setting up ip1
I0428 19:32:51.608348 22971 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:51.608355 22971 net.cpp:139] Memory required for data: 7524800
I0428 19:32:51.608369 22971 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:51.608379 22971 net.cpp:86] Creating Layer relu1
I0428 19:32:51.608388 22971 net.cpp:408] relu1 <- ip1
I0428 19:32:51.608397 22971 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:51.608592 22971 net.cpp:124] Setting up relu1
I0428 19:32:51.608603 22971 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:51.608625 22971 net.cpp:139] Memory required for data: 7534800
I0428 19:32:51.608639 22971 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:51.608649 22971 net.cpp:86] Creating Layer ip2
I0428 19:32:51.608656 22971 net.cpp:408] ip2 <- ip1
I0428 19:32:51.608666 22971 net.cpp:382] ip2 -> ip2
I0428 19:32:51.608785 22971 net.cpp:124] Setting up ip2
I0428 19:32:51.608803 22971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:51.608819 22971 net.cpp:139] Memory required for data: 7538800
I0428 19:32:51.608834 22971 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:51.608845 22971 net.cpp:86] Creating Layer relu2
I0428 19:32:51.608853 22971 net.cpp:408] relu2 <- ip2
I0428 19:32:51.608862 22971 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:51.609130 22971 net.cpp:124] Setting up relu2
I0428 19:32:51.609143 22971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:51.609148 22971 net.cpp:139] Memory required for data: 7542800
I0428 19:32:51.609154 22971 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:32:51.609166 22971 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:32:51.609172 22971 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:32:51.609181 22971 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:32:51.609194 22971 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:32:51.609247 22971 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:32:51.609257 22971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:51.609266 22971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:51.609272 22971 net.cpp:139] Memory required for data: 7550800
I0428 19:32:51.609278 22971 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:51.609288 22971 net.cpp:86] Creating Layer accuracy
I0428 19:32:51.609295 22971 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:32:51.609304 22971 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:51.609313 22971 net.cpp:382] accuracy -> accuracy
I0428 19:32:51.609325 22971 net.cpp:124] Setting up accuracy
I0428 19:32:51.609335 22971 net.cpp:131] Top shape: (1)
I0428 19:32:51.609341 22971 net.cpp:139] Memory required for data: 7550804
I0428 19:32:51.609349 22971 layer_factory.hpp:77] Creating layer loss
I0428 19:32:51.609356 22971 net.cpp:86] Creating Layer loss
I0428 19:32:51.609364 22971 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:32:51.609370 22971 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:51.609378 22971 net.cpp:382] loss -> loss
I0428 19:32:51.609390 22971 layer_factory.hpp:77] Creating layer loss
I0428 19:32:51.610388 22971 net.cpp:124] Setting up loss
I0428 19:32:51.610404 22971 net.cpp:131] Top shape: (1)
I0428 19:32:51.610410 22971 net.cpp:134]     with loss weight 1
I0428 19:32:51.610420 22971 net.cpp:139] Memory required for data: 7550808
I0428 19:32:51.610427 22971 net.cpp:200] loss needs backward computation.
I0428 19:32:51.610435 22971 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:51.610442 22971 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:32:51.610448 22971 net.cpp:200] relu2 needs backward computation.
I0428 19:32:51.610453 22971 net.cpp:200] ip2 needs backward computation.
I0428 19:32:51.610460 22971 net.cpp:200] relu1 needs backward computation.
I0428 19:32:51.610466 22971 net.cpp:200] ip1 needs backward computation.
I0428 19:32:51.610471 22971 net.cpp:200] pool0 needs backward computation.
I0428 19:32:51.610477 22971 net.cpp:200] conv0 needs backward computation.
I0428 19:32:51.610484 22971 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:51.610492 22971 net.cpp:202] mnist does not need backward computation.
I0428 19:32:51.610497 22971 net.cpp:244] This network produces output accuracy
I0428 19:32:51.610505 22971 net.cpp:244] This network produces output loss
I0428 19:32:51.610522 22971 net.cpp:257] Network initialization done.
I0428 19:32:51.610568 22971 solver.cpp:56] Solver scaffolding done.
I0428 19:32:51.610808 22971 caffe.cpp:248] Starting Optimization
I0428 19:32:51.610817 22971 solver.cpp:273] Solving LeNet
I0428 19:32:51.610838 22971 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:51.611698 22971 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:51.618691 22971 blocking_queue.cpp:49] Waiting for data
I0428 19:32:51.687729 22978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:51.688393 22971 solver.cpp:398]     Test net output #0: accuracy = 0.0789
I0428 19:32:51.688412 22971 solver.cpp:398]     Test net output #1: loss = 2.32253 (* 1 = 2.32253 loss)
I0428 19:32:51.692034 22971 solver.cpp:219] Iteration 0 (-1.00193e-42 iter/s, 0.0811638s/100 iters), loss = 2.33348
I0428 19:32:51.692076 22971 solver.cpp:238]     Train net output #0: loss = 2.33348 (* 1 = 2.33348 loss)
I0428 19:32:51.692108 22971 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:51.783540 22971 solver.cpp:219] Iteration 100 (1093.23 iter/s, 0.0914719s/100 iters), loss = 0.759493
I0428 19:32:51.783586 22971 solver.cpp:238]     Train net output #0: loss = 0.759493 (* 1 = 0.759493 loss)
I0428 19:32:51.783612 22971 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:51.872894 22971 solver.cpp:219] Iteration 200 (1119.82 iter/s, 0.0892998s/100 iters), loss = 0.812725
I0428 19:32:51.872921 22971 solver.cpp:238]     Train net output #0: loss = 0.812725 (* 1 = 0.812725 loss)
I0428 19:32:51.872931 22971 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:51.971392 22971 solver.cpp:219] Iteration 300 (1015.64 iter/s, 0.0984596s/100 iters), loss = 0.366137
I0428 19:32:51.971442 22971 solver.cpp:238]     Train net output #0: loss = 0.366137 (* 1 = 0.366137 loss)
I0428 19:32:51.971462 22971 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:52.065505 22971 solver.cpp:219] Iteration 400 (1063.2 iter/s, 0.0940554s/100 iters), loss = 0.369172
I0428 19:32:52.065537 22971 solver.cpp:238]     Train net output #0: loss = 0.369172 (* 1 = 0.369172 loss)
I0428 19:32:52.065557 22971 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:52.159554 22971 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:52.221956 22978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:52.224032 22971 solver.cpp:398]     Test net output #0: accuracy = 0.855
I0428 19:32:52.224054 22971 solver.cpp:398]     Test net output #1: loss = 0.406746 (* 1 = 0.406746 loss)
I0428 19:32:52.224949 22971 solver.cpp:219] Iteration 500 (627.357 iter/s, 0.159399s/100 iters), loss = 0.514434
I0428 19:32:52.224977 22971 solver.cpp:238]     Train net output #0: loss = 0.514434 (* 1 = 0.514434 loss)
I0428 19:32:52.224983 22971 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:52.319540 22971 solver.cpp:219] Iteration 600 (1057.6 iter/s, 0.0945541s/100 iters), loss = 0.462383
I0428 19:32:52.319571 22971 solver.cpp:238]     Train net output #0: loss = 0.462383 (* 1 = 0.462383 loss)
I0428 19:32:52.319578 22971 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:52.414032 22971 solver.cpp:219] Iteration 700 (1058.79 iter/s, 0.0944475s/100 iters), loss = 0.423404
I0428 19:32:52.414084 22971 solver.cpp:238]     Train net output #0: loss = 0.423404 (* 1 = 0.423404 loss)
I0428 19:32:52.414098 22971 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:52.515077 22971 solver.cpp:219] Iteration 800 (990.228 iter/s, 0.100987s/100 iters), loss = 0.582895
I0428 19:32:52.515111 22971 solver.cpp:238]     Train net output #0: loss = 0.582895 (* 1 = 0.582895 loss)
I0428 19:32:52.515120 22971 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:52.608935 22971 solver.cpp:219] Iteration 900 (1065.94 iter/s, 0.0938139s/100 iters), loss = 0.68749
I0428 19:32:52.608966 22971 solver.cpp:238]     Train net output #0: loss = 0.68749 (* 1 = 0.68749 loss)
I0428 19:32:52.608974 22971 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:52.639767 22977 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:52.700402 22971 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:52.702281 22971 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:52.703860 22971 solver.cpp:311] Iteration 1000, loss = 0.329557
I0428 19:32:52.703894 22971 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:52.780743 22978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:52.783419 22971 solver.cpp:398]     Test net output #0: accuracy = 0.869
I0428 19:32:52.783460 22971 solver.cpp:398]     Test net output #1: loss = 0.34722 (* 1 = 0.34722 loss)
I0428 19:32:52.783470 22971 solver.cpp:316] Optimization Done.
I0428 19:32:52.783476 22971 caffe.cpp:259] Optimization Done.
