I0428 19:43:05.996245 25262 caffe.cpp:218] Using GPUs 0
I0428 19:43:06.029091 25262 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:06.535148 25262 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test412.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:06.535295 25262 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test412.prototxt
I0428 19:43:06.535709 25262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:06.535729 25262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:06.535832 25262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:06.535914 25262 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:06.536015 25262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:06.536038 25262 net.cpp:86] Creating Layer mnist
I0428 19:43:06.536047 25262 net.cpp:382] mnist -> data
I0428 19:43:06.536069 25262 net.cpp:382] mnist -> label
I0428 19:43:06.537159 25262 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:06.539600 25262 net.cpp:124] Setting up mnist
I0428 19:43:06.539618 25262 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:06.539624 25262 net.cpp:131] Top shape: 64 (64)
I0428 19:43:06.539628 25262 net.cpp:139] Memory required for data: 200960
I0428 19:43:06.539635 25262 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:06.539662 25262 net.cpp:86] Creating Layer conv0
I0428 19:43:06.539683 25262 net.cpp:408] conv0 <- data
I0428 19:43:06.539698 25262 net.cpp:382] conv0 -> conv0
I0428 19:43:06.797592 25262 net.cpp:124] Setting up conv0
I0428 19:43:06.797618 25262 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:06.797622 25262 net.cpp:139] Memory required for data: 495872
I0428 19:43:06.797636 25262 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:06.797664 25262 net.cpp:86] Creating Layer pool0
I0428 19:43:06.797668 25262 net.cpp:408] pool0 <- conv0
I0428 19:43:06.797674 25262 net.cpp:382] pool0 -> pool0
I0428 19:43:06.797719 25262 net.cpp:124] Setting up pool0
I0428 19:43:06.797729 25262 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:06.797731 25262 net.cpp:139] Memory required for data: 569600
I0428 19:43:06.797734 25262 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:06.797746 25262 net.cpp:86] Creating Layer conv1
I0428 19:43:06.797749 25262 net.cpp:408] conv1 <- pool0
I0428 19:43:06.797755 25262 net.cpp:382] conv1 -> conv1
I0428 19:43:06.800544 25262 net.cpp:124] Setting up conv1
I0428 19:43:06.800573 25262 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:06.800577 25262 net.cpp:139] Memory required for data: 979200
I0428 19:43:06.800585 25262 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:06.800591 25262 net.cpp:86] Creating Layer pool1
I0428 19:43:06.800595 25262 net.cpp:408] pool1 <- conv1
I0428 19:43:06.800599 25262 net.cpp:382] pool1 -> pool1
I0428 19:43:06.800652 25262 net.cpp:124] Setting up pool1
I0428 19:43:06.800657 25262 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:06.800659 25262 net.cpp:139] Memory required for data: 1081600
I0428 19:43:06.800662 25262 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:06.800669 25262 net.cpp:86] Creating Layer ip1
I0428 19:43:06.800673 25262 net.cpp:408] ip1 <- pool1
I0428 19:43:06.800679 25262 net.cpp:382] ip1 -> ip1
I0428 19:43:06.801702 25262 net.cpp:124] Setting up ip1
I0428 19:43:06.801714 25262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:06.801733 25262 net.cpp:139] Memory required for data: 1088000
I0428 19:43:06.801758 25262 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:06.801765 25262 net.cpp:86] Creating Layer relu1
I0428 19:43:06.801769 25262 net.cpp:408] relu1 <- ip1
I0428 19:43:06.801774 25262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:06.801985 25262 net.cpp:124] Setting up relu1
I0428 19:43:06.801995 25262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:06.801998 25262 net.cpp:139] Memory required for data: 1094400
I0428 19:43:06.802002 25262 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:06.802008 25262 net.cpp:86] Creating Layer ip2
I0428 19:43:06.802011 25262 net.cpp:408] ip2 <- ip1
I0428 19:43:06.802017 25262 net.cpp:382] ip2 -> ip2
I0428 19:43:06.802129 25262 net.cpp:124] Setting up ip2
I0428 19:43:06.802136 25262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:06.802139 25262 net.cpp:139] Memory required for data: 1096960
I0428 19:43:06.802145 25262 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:06.802151 25262 net.cpp:86] Creating Layer relu2
I0428 19:43:06.802155 25262 net.cpp:408] relu2 <- ip2
I0428 19:43:06.802158 25262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:06.802911 25262 net.cpp:124] Setting up relu2
I0428 19:43:06.802923 25262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:06.802937 25262 net.cpp:139] Memory required for data: 1099520
I0428 19:43:06.802940 25262 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:06.802963 25262 net.cpp:86] Creating Layer ip3
I0428 19:43:06.802968 25262 net.cpp:408] ip3 <- ip2
I0428 19:43:06.802976 25262 net.cpp:382] ip3 -> ip3
I0428 19:43:06.803122 25262 net.cpp:124] Setting up ip3
I0428 19:43:06.803133 25262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:06.803135 25262 net.cpp:139] Memory required for data: 1102080
I0428 19:43:06.803144 25262 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:06.803150 25262 net.cpp:86] Creating Layer relu3
I0428 19:43:06.803153 25262 net.cpp:408] relu3 <- ip3
I0428 19:43:06.803172 25262 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:06.803364 25262 net.cpp:124] Setting up relu3
I0428 19:43:06.803372 25262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:06.803375 25262 net.cpp:139] Memory required for data: 1104640
I0428 19:43:06.803378 25262 layer_factory.hpp:77] Creating layer loss
I0428 19:43:06.803385 25262 net.cpp:86] Creating Layer loss
I0428 19:43:06.803388 25262 net.cpp:408] loss <- ip3
I0428 19:43:06.803392 25262 net.cpp:408] loss <- label
I0428 19:43:06.803397 25262 net.cpp:382] loss -> loss
I0428 19:43:06.803414 25262 layer_factory.hpp:77] Creating layer loss
I0428 19:43:06.803656 25262 net.cpp:124] Setting up loss
I0428 19:43:06.803664 25262 net.cpp:131] Top shape: (1)
I0428 19:43:06.803668 25262 net.cpp:134]     with loss weight 1
I0428 19:43:06.803679 25262 net.cpp:139] Memory required for data: 1104644
I0428 19:43:06.803683 25262 net.cpp:200] loss needs backward computation.
I0428 19:43:06.803686 25262 net.cpp:200] relu3 needs backward computation.
I0428 19:43:06.803689 25262 net.cpp:200] ip3 needs backward computation.
I0428 19:43:06.803691 25262 net.cpp:200] relu2 needs backward computation.
I0428 19:43:06.803694 25262 net.cpp:200] ip2 needs backward computation.
I0428 19:43:06.803696 25262 net.cpp:200] relu1 needs backward computation.
I0428 19:43:06.803699 25262 net.cpp:200] ip1 needs backward computation.
I0428 19:43:06.803702 25262 net.cpp:200] pool1 needs backward computation.
I0428 19:43:06.803705 25262 net.cpp:200] conv1 needs backward computation.
I0428 19:43:06.803707 25262 net.cpp:200] pool0 needs backward computation.
I0428 19:43:06.803710 25262 net.cpp:200] conv0 needs backward computation.
I0428 19:43:06.803714 25262 net.cpp:202] mnist does not need backward computation.
I0428 19:43:06.803716 25262 net.cpp:244] This network produces output loss
I0428 19:43:06.803726 25262 net.cpp:257] Network initialization done.
I0428 19:43:06.804121 25262 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test412.prototxt
I0428 19:43:06.804177 25262 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:06.804270 25262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:06.804354 25262 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:06.804409 25262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:06.804421 25262 net.cpp:86] Creating Layer mnist
I0428 19:43:06.804425 25262 net.cpp:382] mnist -> data
I0428 19:43:06.804435 25262 net.cpp:382] mnist -> label
I0428 19:43:06.804517 25262 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:06.806712 25262 net.cpp:124] Setting up mnist
I0428 19:43:06.806740 25262 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:06.806746 25262 net.cpp:131] Top shape: 100 (100)
I0428 19:43:06.806748 25262 net.cpp:139] Memory required for data: 314000
I0428 19:43:06.806751 25262 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:06.806782 25262 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:06.806787 25262 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:06.806792 25262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:06.806809 25262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:06.806846 25262 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:06.806851 25262 net.cpp:131] Top shape: 100 (100)
I0428 19:43:06.806854 25262 net.cpp:131] Top shape: 100 (100)
I0428 19:43:06.806857 25262 net.cpp:139] Memory required for data: 314800
I0428 19:43:06.806860 25262 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:06.806882 25262 net.cpp:86] Creating Layer conv0
I0428 19:43:06.806885 25262 net.cpp:408] conv0 <- data
I0428 19:43:06.806891 25262 net.cpp:382] conv0 -> conv0
I0428 19:43:06.808758 25262 net.cpp:124] Setting up conv0
I0428 19:43:06.808773 25262 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:06.808776 25262 net.cpp:139] Memory required for data: 775600
I0428 19:43:06.808785 25262 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:06.808791 25262 net.cpp:86] Creating Layer pool0
I0428 19:43:06.808794 25262 net.cpp:408] pool0 <- conv0
I0428 19:43:06.808816 25262 net.cpp:382] pool0 -> pool0
I0428 19:43:06.808887 25262 net.cpp:124] Setting up pool0
I0428 19:43:06.808893 25262 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:06.808897 25262 net.cpp:139] Memory required for data: 890800
I0428 19:43:06.808899 25262 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:06.808909 25262 net.cpp:86] Creating Layer conv1
I0428 19:43:06.808928 25262 net.cpp:408] conv1 <- pool0
I0428 19:43:06.808934 25262 net.cpp:382] conv1 -> conv1
I0428 19:43:06.810643 25262 net.cpp:124] Setting up conv1
I0428 19:43:06.810657 25262 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:06.810660 25262 net.cpp:139] Memory required for data: 1530800
I0428 19:43:06.810668 25262 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:06.810696 25262 net.cpp:86] Creating Layer pool1
I0428 19:43:06.810699 25262 net.cpp:408] pool1 <- conv1
I0428 19:43:06.810706 25262 net.cpp:382] pool1 -> pool1
I0428 19:43:06.810748 25262 net.cpp:124] Setting up pool1
I0428 19:43:06.810765 25262 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:06.810768 25262 net.cpp:139] Memory required for data: 1690800
I0428 19:43:06.810771 25262 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:06.810777 25262 net.cpp:86] Creating Layer ip1
I0428 19:43:06.810781 25262 net.cpp:408] ip1 <- pool1
I0428 19:43:06.810791 25262 net.cpp:382] ip1 -> ip1
I0428 19:43:06.810974 25262 net.cpp:124] Setting up ip1
I0428 19:43:06.810981 25262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:06.810993 25262 net.cpp:139] Memory required for data: 1700800
I0428 19:43:06.811002 25262 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:06.811009 25262 net.cpp:86] Creating Layer relu1
I0428 19:43:06.811012 25262 net.cpp:408] relu1 <- ip1
I0428 19:43:06.811017 25262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:06.811200 25262 net.cpp:124] Setting up relu1
I0428 19:43:06.811209 25262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:06.811213 25262 net.cpp:139] Memory required for data: 1710800
I0428 19:43:06.811215 25262 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:06.811233 25262 net.cpp:86] Creating Layer ip2
I0428 19:43:06.811238 25262 net.cpp:408] ip2 <- ip1
I0428 19:43:06.811249 25262 net.cpp:382] ip2 -> ip2
I0428 19:43:06.811350 25262 net.cpp:124] Setting up ip2
I0428 19:43:06.811357 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.811359 25262 net.cpp:139] Memory required for data: 1714800
I0428 19:43:06.811364 25262 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:06.811369 25262 net.cpp:86] Creating Layer relu2
I0428 19:43:06.811372 25262 net.cpp:408] relu2 <- ip2
I0428 19:43:06.811378 25262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:06.811547 25262 net.cpp:124] Setting up relu2
I0428 19:43:06.811554 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.811558 25262 net.cpp:139] Memory required for data: 1718800
I0428 19:43:06.811559 25262 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:06.811566 25262 net.cpp:86] Creating Layer ip3
I0428 19:43:06.811569 25262 net.cpp:408] ip3 <- ip2
I0428 19:43:06.811594 25262 net.cpp:382] ip3 -> ip3
I0428 19:43:06.811702 25262 net.cpp:124] Setting up ip3
I0428 19:43:06.811709 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.811712 25262 net.cpp:139] Memory required for data: 1722800
I0428 19:43:06.811720 25262 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:06.811727 25262 net.cpp:86] Creating Layer relu3
I0428 19:43:06.811729 25262 net.cpp:408] relu3 <- ip3
I0428 19:43:06.811733 25262 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:06.812604 25262 net.cpp:124] Setting up relu3
I0428 19:43:06.812616 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.812619 25262 net.cpp:139] Memory required for data: 1726800
I0428 19:43:06.812623 25262 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:06.812628 25262 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:06.812633 25262 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:06.812636 25262 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:06.812643 25262 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:06.812708 25262 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:06.812716 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.812719 25262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:06.812722 25262 net.cpp:139] Memory required for data: 1734800
I0428 19:43:06.812724 25262 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:06.812731 25262 net.cpp:86] Creating Layer accuracy
I0428 19:43:06.812733 25262 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:06.812737 25262 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:06.812743 25262 net.cpp:382] accuracy -> accuracy
I0428 19:43:06.812749 25262 net.cpp:124] Setting up accuracy
I0428 19:43:06.812753 25262 net.cpp:131] Top shape: (1)
I0428 19:43:06.812757 25262 net.cpp:139] Memory required for data: 1734804
I0428 19:43:06.812759 25262 layer_factory.hpp:77] Creating layer loss
I0428 19:43:06.812763 25262 net.cpp:86] Creating Layer loss
I0428 19:43:06.812767 25262 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:06.812770 25262 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:06.812775 25262 net.cpp:382] loss -> loss
I0428 19:43:06.812788 25262 layer_factory.hpp:77] Creating layer loss
I0428 19:43:06.813135 25262 net.cpp:124] Setting up loss
I0428 19:43:06.813145 25262 net.cpp:131] Top shape: (1)
I0428 19:43:06.813156 25262 net.cpp:134]     with loss weight 1
I0428 19:43:06.813163 25262 net.cpp:139] Memory required for data: 1734808
I0428 19:43:06.813177 25262 net.cpp:200] loss needs backward computation.
I0428 19:43:06.813195 25262 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:06.813199 25262 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:06.813202 25262 net.cpp:200] relu3 needs backward computation.
I0428 19:43:06.813205 25262 net.cpp:200] ip3 needs backward computation.
I0428 19:43:06.813213 25262 net.cpp:200] relu2 needs backward computation.
I0428 19:43:06.813216 25262 net.cpp:200] ip2 needs backward computation.
I0428 19:43:06.813218 25262 net.cpp:200] relu1 needs backward computation.
I0428 19:43:06.813226 25262 net.cpp:200] ip1 needs backward computation.
I0428 19:43:06.813230 25262 net.cpp:200] pool1 needs backward computation.
I0428 19:43:06.813232 25262 net.cpp:200] conv1 needs backward computation.
I0428 19:43:06.813235 25262 net.cpp:200] pool0 needs backward computation.
I0428 19:43:06.813244 25262 net.cpp:200] conv0 needs backward computation.
I0428 19:43:06.813248 25262 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:06.813251 25262 net.cpp:202] mnist does not need backward computation.
I0428 19:43:06.813254 25262 net.cpp:244] This network produces output accuracy
I0428 19:43:06.813258 25262 net.cpp:244] This network produces output loss
I0428 19:43:06.813271 25262 net.cpp:257] Network initialization done.
I0428 19:43:06.813325 25262 solver.cpp:56] Solver scaffolding done.
I0428 19:43:06.813660 25262 caffe.cpp:248] Starting Optimization
I0428 19:43:06.813666 25262 solver.cpp:273] Solving LeNet
I0428 19:43:06.813668 25262 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:06.813933 25262 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:06.818222 25262 blocking_queue.cpp:49] Waiting for data
I0428 19:43:06.886957 25269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:06.887430 25262 solver.cpp:398]     Test net output #0: accuracy = 0.146
I0428 19:43:06.887465 25262 solver.cpp:398]     Test net output #1: loss = 2.28504 (* 1 = 2.28504 loss)
I0428 19:43:06.888756 25262 solver.cpp:219] Iteration 0 (0 iter/s, 0.0750633s/100 iters), loss = 2.29251
I0428 19:43:06.888793 25262 solver.cpp:238]     Train net output #0: loss = 2.29251 (* 1 = 2.29251 loss)
I0428 19:43:06.888842 25262 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:06.981312 25262 solver.cpp:219] Iteration 100 (1081.01 iter/s, 0.0925059s/100 iters), loss = 1.66324
I0428 19:43:06.981343 25262 solver.cpp:238]     Train net output #0: loss = 1.66324 (* 1 = 1.66324 loss)
I0428 19:43:06.981351 25262 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:07.070273 25262 solver.cpp:219] Iteration 200 (1124.7 iter/s, 0.0889127s/100 iters), loss = 1.18073
I0428 19:43:07.070307 25262 solver.cpp:238]     Train net output #0: loss = 1.18073 (* 1 = 1.18073 loss)
I0428 19:43:07.070313 25262 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:07.161821 25262 solver.cpp:219] Iteration 300 (1092.87 iter/s, 0.0915026s/100 iters), loss = 1.14871
I0428 19:43:07.161851 25262 solver.cpp:238]     Train net output #0: loss = 1.14871 (* 1 = 1.14871 loss)
I0428 19:43:07.161859 25262 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:07.250438 25262 solver.cpp:219] Iteration 400 (1128.99 iter/s, 0.088575s/100 iters), loss = 1.25831
I0428 19:43:07.250463 25262 solver.cpp:238]     Train net output #0: loss = 1.25831 (* 1 = 1.25831 loss)
I0428 19:43:07.250469 25262 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:07.330430 25262 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:07.393654 25269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:07.394266 25262 solver.cpp:398]     Test net output #0: accuracy = 0.4961
I0428 19:43:07.394304 25262 solver.cpp:398]     Test net output #1: loss = 1.24778 (* 1 = 1.24778 loss)
I0428 19:43:07.395401 25262 solver.cpp:219] Iteration 500 (690.019 iter/s, 0.144924s/100 iters), loss = 1.46888
I0428 19:43:07.395447 25262 solver.cpp:238]     Train net output #0: loss = 1.46888 (* 1 = 1.46888 loss)
I0428 19:43:07.395473 25262 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:07.488382 25262 solver.cpp:219] Iteration 600 (1076.11 iter/s, 0.0929269s/100 iters), loss = 1.19747
I0428 19:43:07.488421 25262 solver.cpp:238]     Train net output #0: loss = 1.19747 (* 1 = 1.19747 loss)
I0428 19:43:07.488427 25262 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:07.572410 25262 solver.cpp:219] Iteration 700 (1190.6 iter/s, 0.0839916s/100 iters), loss = 1.45085
I0428 19:43:07.572449 25262 solver.cpp:238]     Train net output #0: loss = 1.45085 (* 1 = 1.45085 loss)
I0428 19:43:07.572456 25262 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:07.665288 25262 solver.cpp:219] Iteration 800 (1077.13 iter/s, 0.0928389s/100 iters), loss = 1.30424
I0428 19:43:07.665328 25262 solver.cpp:238]     Train net output #0: loss = 1.30424 (* 1 = 1.30424 loss)
I0428 19:43:07.665333 25262 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:07.750039 25262 solver.cpp:219] Iteration 900 (1180.41 iter/s, 0.0847165s/100 iters), loss = 0.960443
I0428 19:43:07.750077 25262 solver.cpp:238]     Train net output #0: loss = 0.960443 (* 1 = 0.960443 loss)
I0428 19:43:07.750083 25262 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:07.777112 25268 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:07.836315 25262 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:07.837368 25262 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:07.837872 25262 solver.cpp:311] Iteration 1000, loss = 1.17234
I0428 19:43:07.837903 25262 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:07.902350 25269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:07.902915 25262 solver.cpp:398]     Test net output #0: accuracy = 0.5059
I0428 19:43:07.902936 25262 solver.cpp:398]     Test net output #1: loss = 1.19077 (* 1 = 1.19077 loss)
I0428 19:43:07.902943 25262 solver.cpp:316] Optimization Done.
I0428 19:43:07.902947 25262 caffe.cpp:259] Optimization Done.
