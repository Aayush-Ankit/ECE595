I0428 20:36:28.390902  4801 caffe.cpp:218] Using GPUs 0
I0428 20:36:28.430928  4801 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:28.946537  4801 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1637.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:28.946677  4801 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1637.prototxt
I0428 20:36:28.947098  4801 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:28.947118  4801 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:28.947217  4801 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:28.947299  4801 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:28.947398  4801 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:28.947423  4801 net.cpp:86] Creating Layer mnist
I0428 20:36:28.947434  4801 net.cpp:382] mnist -> data
I0428 20:36:28.947459  4801 net.cpp:382] mnist -> label
I0428 20:36:28.948562  4801 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:28.951020  4801 net.cpp:124] Setting up mnist
I0428 20:36:28.951037  4801 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:28.951047  4801 net.cpp:131] Top shape: 64 (64)
I0428 20:36:28.951051  4801 net.cpp:139] Memory required for data: 200960
I0428 20:36:28.951057  4801 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:28.951087  4801 net.cpp:86] Creating Layer conv0
I0428 20:36:28.951118  4801 net.cpp:408] conv0 <- data
I0428 20:36:28.951133  4801 net.cpp:382] conv0 -> conv0
I0428 20:36:29.240252  4801 net.cpp:124] Setting up conv0
I0428 20:36:29.240280  4801 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:29.240285  4801 net.cpp:139] Memory required for data: 14946560
I0428 20:36:29.240300  4801 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:29.240314  4801 net.cpp:86] Creating Layer pool0
I0428 20:36:29.240317  4801 net.cpp:408] pool0 <- conv0
I0428 20:36:29.240324  4801 net.cpp:382] pool0 -> pool0
I0428 20:36:29.240372  4801 net.cpp:124] Setting up pool0
I0428 20:36:29.240378  4801 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:29.240381  4801 net.cpp:139] Memory required for data: 18632960
I0428 20:36:29.240384  4801 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:29.240396  4801 net.cpp:86] Creating Layer conv1
I0428 20:36:29.240398  4801 net.cpp:408] conv1 <- pool0
I0428 20:36:29.240403  4801 net.cpp:382] conv1 -> conv1
I0428 20:36:29.243834  4801 net.cpp:124] Setting up conv1
I0428 20:36:29.243850  4801 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:29.243854  4801 net.cpp:139] Memory required for data: 19452160
I0428 20:36:29.243863  4801 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:29.243870  4801 net.cpp:86] Creating Layer pool1
I0428 20:36:29.243875  4801 net.cpp:408] pool1 <- conv1
I0428 20:36:29.243880  4801 net.cpp:382] pool1 -> pool1
I0428 20:36:29.243916  4801 net.cpp:124] Setting up pool1
I0428 20:36:29.243922  4801 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:29.243926  4801 net.cpp:139] Memory required for data: 19656960
I0428 20:36:29.243928  4801 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:29.243935  4801 net.cpp:86] Creating Layer ip1
I0428 20:36:29.243938  4801 net.cpp:408] ip1 <- pool1
I0428 20:36:29.243943  4801 net.cpp:382] ip1 -> ip1
I0428 20:36:29.244279  4801 net.cpp:124] Setting up ip1
I0428 20:36:29.244287  4801 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:29.244290  4801 net.cpp:139] Memory required for data: 19669760
I0428 20:36:29.244297  4801 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:29.244302  4801 net.cpp:86] Creating Layer relu1
I0428 20:36:29.244305  4801 net.cpp:408] relu1 <- ip1
I0428 20:36:29.244309  4801 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:29.244473  4801 net.cpp:124] Setting up relu1
I0428 20:36:29.244482  4801 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:29.244485  4801 net.cpp:139] Memory required for data: 19682560
I0428 20:36:29.244488  4801 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:29.244494  4801 net.cpp:86] Creating Layer ip2
I0428 20:36:29.244498  4801 net.cpp:408] ip2 <- ip1
I0428 20:36:29.244503  4801 net.cpp:382] ip2 -> ip2
I0428 20:36:29.244616  4801 net.cpp:124] Setting up ip2
I0428 20:36:29.244622  4801 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:29.244626  4801 net.cpp:139] Memory required for data: 19695360
I0428 20:36:29.244632  4801 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:29.244637  4801 net.cpp:86] Creating Layer relu2
I0428 20:36:29.244640  4801 net.cpp:408] relu2 <- ip2
I0428 20:36:29.244644  4801 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:29.245434  4801 net.cpp:124] Setting up relu2
I0428 20:36:29.245446  4801 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:29.245450  4801 net.cpp:139] Memory required for data: 19708160
I0428 20:36:29.245453  4801 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:29.245460  4801 net.cpp:86] Creating Layer ip3
I0428 20:36:29.245463  4801 net.cpp:408] ip3 <- ip2
I0428 20:36:29.245468  4801 net.cpp:382] ip3 -> ip3
I0428 20:36:29.245574  4801 net.cpp:124] Setting up ip3
I0428 20:36:29.245581  4801 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:29.245584  4801 net.cpp:139] Memory required for data: 19710720
I0428 20:36:29.245592  4801 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:29.245597  4801 net.cpp:86] Creating Layer relu3
I0428 20:36:29.245600  4801 net.cpp:408] relu3 <- ip3
I0428 20:36:29.245618  4801 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:29.245769  4801 net.cpp:124] Setting up relu3
I0428 20:36:29.245775  4801 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:29.245779  4801 net.cpp:139] Memory required for data: 19713280
I0428 20:36:29.245782  4801 layer_factory.hpp:77] Creating layer loss
I0428 20:36:29.245787  4801 net.cpp:86] Creating Layer loss
I0428 20:36:29.245791  4801 net.cpp:408] loss <- ip3
I0428 20:36:29.245795  4801 net.cpp:408] loss <- label
I0428 20:36:29.245800  4801 net.cpp:382] loss -> loss
I0428 20:36:29.245818  4801 layer_factory.hpp:77] Creating layer loss
I0428 20:36:29.246042  4801 net.cpp:124] Setting up loss
I0428 20:36:29.246050  4801 net.cpp:131] Top shape: (1)
I0428 20:36:29.246054  4801 net.cpp:134]     with loss weight 1
I0428 20:36:29.246068  4801 net.cpp:139] Memory required for data: 19713284
I0428 20:36:29.246073  4801 net.cpp:200] loss needs backward computation.
I0428 20:36:29.246076  4801 net.cpp:200] relu3 needs backward computation.
I0428 20:36:29.246079  4801 net.cpp:200] ip3 needs backward computation.
I0428 20:36:29.246083  4801 net.cpp:200] relu2 needs backward computation.
I0428 20:36:29.246084  4801 net.cpp:200] ip2 needs backward computation.
I0428 20:36:29.246088  4801 net.cpp:200] relu1 needs backward computation.
I0428 20:36:29.246090  4801 net.cpp:200] ip1 needs backward computation.
I0428 20:36:29.246093  4801 net.cpp:200] pool1 needs backward computation.
I0428 20:36:29.246096  4801 net.cpp:200] conv1 needs backward computation.
I0428 20:36:29.246099  4801 net.cpp:200] pool0 needs backward computation.
I0428 20:36:29.246103  4801 net.cpp:200] conv0 needs backward computation.
I0428 20:36:29.246106  4801 net.cpp:202] mnist does not need backward computation.
I0428 20:36:29.246109  4801 net.cpp:244] This network produces output loss
I0428 20:36:29.246119  4801 net.cpp:257] Network initialization done.
I0428 20:36:29.246444  4801 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1637.prototxt
I0428 20:36:29.246472  4801 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:29.246564  4801 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:29.246644  4801 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:29.246690  4801 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:29.246701  4801 net.cpp:86] Creating Layer mnist
I0428 20:36:29.246706  4801 net.cpp:382] mnist -> data
I0428 20:36:29.246714  4801 net.cpp:382] mnist -> label
I0428 20:36:29.246798  4801 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:29.247874  4801 net.cpp:124] Setting up mnist
I0428 20:36:29.247886  4801 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:29.247892  4801 net.cpp:131] Top shape: 100 (100)
I0428 20:36:29.247895  4801 net.cpp:139] Memory required for data: 314000
I0428 20:36:29.247898  4801 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:29.247910  4801 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:29.247912  4801 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:29.247917  4801 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:29.247925  4801 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:29.247979  4801 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:29.247984  4801 net.cpp:131] Top shape: 100 (100)
I0428 20:36:29.247988  4801 net.cpp:131] Top shape: 100 (100)
I0428 20:36:29.247990  4801 net.cpp:139] Memory required for data: 314800
I0428 20:36:29.247993  4801 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:29.248003  4801 net.cpp:86] Creating Layer conv0
I0428 20:36:29.248005  4801 net.cpp:408] conv0 <- data
I0428 20:36:29.248010  4801 net.cpp:382] conv0 -> conv0
I0428 20:36:29.249725  4801 net.cpp:124] Setting up conv0
I0428 20:36:29.249740  4801 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:29.249744  4801 net.cpp:139] Memory required for data: 23354800
I0428 20:36:29.249753  4801 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:29.249760  4801 net.cpp:86] Creating Layer pool0
I0428 20:36:29.249763  4801 net.cpp:408] pool0 <- conv0
I0428 20:36:29.249768  4801 net.cpp:382] pool0 -> pool0
I0428 20:36:29.249804  4801 net.cpp:124] Setting up pool0
I0428 20:36:29.249809  4801 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:29.249812  4801 net.cpp:139] Memory required for data: 29114800
I0428 20:36:29.249815  4801 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:29.249824  4801 net.cpp:86] Creating Layer conv1
I0428 20:36:29.249826  4801 net.cpp:408] conv1 <- pool0
I0428 20:36:29.249831  4801 net.cpp:382] conv1 -> conv1
I0428 20:36:29.252871  4801 net.cpp:124] Setting up conv1
I0428 20:36:29.252885  4801 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:29.252889  4801 net.cpp:139] Memory required for data: 30394800
I0428 20:36:29.252898  4801 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:29.252904  4801 net.cpp:86] Creating Layer pool1
I0428 20:36:29.252909  4801 net.cpp:408] pool1 <- conv1
I0428 20:36:29.252914  4801 net.cpp:382] pool1 -> pool1
I0428 20:36:29.252965  4801 net.cpp:124] Setting up pool1
I0428 20:36:29.252970  4801 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:29.252974  4801 net.cpp:139] Memory required for data: 30714800
I0428 20:36:29.252977  4801 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:29.252982  4801 net.cpp:86] Creating Layer ip1
I0428 20:36:29.252986  4801 net.cpp:408] ip1 <- pool1
I0428 20:36:29.252991  4801 net.cpp:382] ip1 -> ip1
I0428 20:36:29.253372  4801 net.cpp:124] Setting up ip1
I0428 20:36:29.253391  4801 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:29.253394  4801 net.cpp:139] Memory required for data: 30734800
I0428 20:36:29.253401  4801 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:29.253407  4801 net.cpp:86] Creating Layer relu1
I0428 20:36:29.253410  4801 net.cpp:408] relu1 <- ip1
I0428 20:36:29.253415  4801 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:29.253612  4801 net.cpp:124] Setting up relu1
I0428 20:36:29.253620  4801 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:29.253623  4801 net.cpp:139] Memory required for data: 30754800
I0428 20:36:29.253628  4801 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:29.253633  4801 net.cpp:86] Creating Layer ip2
I0428 20:36:29.253638  4801 net.cpp:408] ip2 <- ip1
I0428 20:36:29.253641  4801 net.cpp:382] ip2 -> ip2
I0428 20:36:29.253770  4801 net.cpp:124] Setting up ip2
I0428 20:36:29.253777  4801 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:29.253780  4801 net.cpp:139] Memory required for data: 30774800
I0428 20:36:29.253785  4801 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:29.253789  4801 net.cpp:86] Creating Layer relu2
I0428 20:36:29.253793  4801 net.cpp:408] relu2 <- ip2
I0428 20:36:29.253796  4801 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:29.253983  4801 net.cpp:124] Setting up relu2
I0428 20:36:29.253991  4801 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:29.253995  4801 net.cpp:139] Memory required for data: 30794800
I0428 20:36:29.253998  4801 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:29.254004  4801 net.cpp:86] Creating Layer ip3
I0428 20:36:29.254007  4801 net.cpp:408] ip3 <- ip2
I0428 20:36:29.254012  4801 net.cpp:382] ip3 -> ip3
I0428 20:36:29.254128  4801 net.cpp:124] Setting up ip3
I0428 20:36:29.254135  4801 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:29.254139  4801 net.cpp:139] Memory required for data: 30798800
I0428 20:36:29.254148  4801 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:29.254151  4801 net.cpp:86] Creating Layer relu3
I0428 20:36:29.254155  4801 net.cpp:408] relu3 <- ip3
I0428 20:36:29.254159  4801 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:29.254968  4801 net.cpp:124] Setting up relu3
I0428 20:36:29.254981  4801 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:29.254983  4801 net.cpp:139] Memory required for data: 30802800
I0428 20:36:29.254987  4801 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:29.254992  4801 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:29.254995  4801 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:29.255002  4801 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:29.255007  4801 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:29.255049  4801 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:29.255054  4801 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:29.255058  4801 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:29.255060  4801 net.cpp:139] Memory required for data: 30810800
I0428 20:36:29.255064  4801 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:29.255069  4801 net.cpp:86] Creating Layer accuracy
I0428 20:36:29.255071  4801 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:29.255075  4801 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:29.255080  4801 net.cpp:382] accuracy -> accuracy
I0428 20:36:29.255086  4801 net.cpp:124] Setting up accuracy
I0428 20:36:29.255090  4801 net.cpp:131] Top shape: (1)
I0428 20:36:29.255095  4801 net.cpp:139] Memory required for data: 30810804
I0428 20:36:29.255096  4801 layer_factory.hpp:77] Creating layer loss
I0428 20:36:29.255107  4801 net.cpp:86] Creating Layer loss
I0428 20:36:29.255111  4801 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:29.255115  4801 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:29.255120  4801 net.cpp:382] loss -> loss
I0428 20:36:29.255126  4801 layer_factory.hpp:77] Creating layer loss
I0428 20:36:29.255352  4801 net.cpp:124] Setting up loss
I0428 20:36:29.255360  4801 net.cpp:131] Top shape: (1)
I0428 20:36:29.255364  4801 net.cpp:134]     with loss weight 1
I0428 20:36:29.255380  4801 net.cpp:139] Memory required for data: 30810808
I0428 20:36:29.255384  4801 net.cpp:200] loss needs backward computation.
I0428 20:36:29.255388  4801 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:29.255401  4801 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:29.255404  4801 net.cpp:200] relu3 needs backward computation.
I0428 20:36:29.255408  4801 net.cpp:200] ip3 needs backward computation.
I0428 20:36:29.255411  4801 net.cpp:200] relu2 needs backward computation.
I0428 20:36:29.255414  4801 net.cpp:200] ip2 needs backward computation.
I0428 20:36:29.255417  4801 net.cpp:200] relu1 needs backward computation.
I0428 20:36:29.255420  4801 net.cpp:200] ip1 needs backward computation.
I0428 20:36:29.255424  4801 net.cpp:200] pool1 needs backward computation.
I0428 20:36:29.255427  4801 net.cpp:200] conv1 needs backward computation.
I0428 20:36:29.255430  4801 net.cpp:200] pool0 needs backward computation.
I0428 20:36:29.255434  4801 net.cpp:200] conv0 needs backward computation.
I0428 20:36:29.255437  4801 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:29.255441  4801 net.cpp:202] mnist does not need backward computation.
I0428 20:36:29.255445  4801 net.cpp:244] This network produces output accuracy
I0428 20:36:29.255448  4801 net.cpp:244] This network produces output loss
I0428 20:36:29.255460  4801 net.cpp:257] Network initialization done.
I0428 20:36:29.255501  4801 solver.cpp:56] Solver scaffolding done.
I0428 20:36:29.255836  4801 caffe.cpp:248] Starting Optimization
I0428 20:36:29.255841  4801 solver.cpp:273] Solving LeNet
I0428 20:36:29.255843  4801 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:29.256708  4801 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:29.365247  4809 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:29.368005  4801 solver.cpp:398]     Test net output #0: accuracy = 0.0896
I0428 20:36:29.368037  4801 solver.cpp:398]     Test net output #1: loss = 2.3135 (* 1 = 2.3135 loss)
I0428 20:36:29.373456  4801 solver.cpp:219] Iteration 0 (-1.37787e-33 iter/s, 0.117586s/100 iters), loss = 2.32726
I0428 20:36:29.373492  4801 solver.cpp:238]     Train net output #0: loss = 2.32726 (* 1 = 2.32726 loss)
I0428 20:36:29.373503  4801 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:29.605113  4801 solver.cpp:219] Iteration 100 (431.744 iter/s, 0.231619s/100 iters), loss = 0.579679
I0428 20:36:29.605139  4801 solver.cpp:238]     Train net output #0: loss = 0.579679 (* 1 = 0.579679 loss)
I0428 20:36:29.605147  4801 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:29.836556  4801 solver.cpp:219] Iteration 200 (432.153 iter/s, 0.231399s/100 iters), loss = 0.433509
I0428 20:36:29.836586  4801 solver.cpp:238]     Train net output #0: loss = 0.433509 (* 1 = 0.433509 loss)
I0428 20:36:29.836594  4801 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:30.072062  4801 solver.cpp:219] Iteration 300 (424.7 iter/s, 0.23546s/100 iters), loss = 0.491357
I0428 20:36:30.072093  4801 solver.cpp:238]     Train net output #0: loss = 0.491357 (* 1 = 0.491357 loss)
I0428 20:36:30.072101  4801 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:30.313376  4801 solver.cpp:219] Iteration 400 (414.486 iter/s, 0.241263s/100 iters), loss = 0.288475
I0428 20:36:30.313419  4801 solver.cpp:238]     Train net output #0: loss = 0.288475 (* 1 = 0.288475 loss)
I0428 20:36:30.313431  4801 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:30.546898  4801 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:30.658504  4809 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:30.662667  4801 solver.cpp:398]     Test net output #0: accuracy = 0.8747
I0428 20:36:30.662693  4801 solver.cpp:398]     Test net output #1: loss = 0.326398 (* 1 = 0.326398 loss)
I0428 20:36:30.664947  4801 solver.cpp:219] Iteration 500 (284.489 iter/s, 0.351507s/100 iters), loss = 0.193784
I0428 20:36:30.664973  4801 solver.cpp:238]     Train net output #0: loss = 0.193784 (* 1 = 0.193784 loss)
I0428 20:36:30.664999  4801 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:30.901525  4801 solver.cpp:219] Iteration 600 (422.769 iter/s, 0.236536s/100 iters), loss = 0.206431
I0428 20:36:30.901566  4801 solver.cpp:238]     Train net output #0: loss = 0.206431 (* 1 = 0.206431 loss)
I0428 20:36:30.901573  4801 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:31.136184  4801 solver.cpp:219] Iteration 700 (426.249 iter/s, 0.234605s/100 iters), loss = 0.480473
I0428 20:36:31.136209  4801 solver.cpp:238]     Train net output #0: loss = 0.480473 (* 1 = 0.480473 loss)
I0428 20:36:31.136224  4801 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:31.369894  4801 solver.cpp:219] Iteration 800 (427.958 iter/s, 0.233668s/100 iters), loss = 0.427727
I0428 20:36:31.369917  4801 solver.cpp:238]     Train net output #0: loss = 0.427727 (* 1 = 0.427727 loss)
I0428 20:36:31.369923  4801 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:31.603860  4801 solver.cpp:219] Iteration 900 (427.484 iter/s, 0.233927s/100 iters), loss = 0.390951
I0428 20:36:31.603901  4801 solver.cpp:238]     Train net output #0: loss = 0.390951 (* 1 = 0.390951 loss)
I0428 20:36:31.603907  4801 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:31.681813  4808 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:31.840117  4801 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:31.844756  4801 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:31.846942  4801 solver.cpp:311] Iteration 1000, loss = 0.35877
I0428 20:36:31.846958  4801 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:31.953811  4809 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:31.956795  4801 solver.cpp:398]     Test net output #0: accuracy = 0.8781
I0428 20:36:31.956835  4801 solver.cpp:398]     Test net output #1: loss = 0.313199 (* 1 = 0.313199 loss)
I0428 20:36:31.956856  4801 solver.cpp:316] Optimization Done.
I0428 20:36:31.956859  4801 caffe.cpp:259] Optimization Done.
