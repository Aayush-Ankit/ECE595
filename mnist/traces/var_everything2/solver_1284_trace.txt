I0428 20:17:00.200242   775 caffe.cpp:218] Using GPUs 0
I0428 20:17:00.234300   775 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:00.677340   775 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1284.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:00.677474   775 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1284.prototxt
I0428 20:17:00.677844   775 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:00.677889   775 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:00.677989   775 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:00.678072   775 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:00.678160   775 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:00.678181   775 net.cpp:86] Creating Layer mnist
I0428 20:17:00.678187   775 net.cpp:382] mnist -> data
I0428 20:17:00.678222   775 net.cpp:382] mnist -> label
I0428 20:17:00.679221   775 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:00.681612   775 net.cpp:124] Setting up mnist
I0428 20:17:00.681658   775 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:00.681664   775 net.cpp:131] Top shape: 64 (64)
I0428 20:17:00.681668   775 net.cpp:139] Memory required for data: 200960
I0428 20:17:00.681673   775 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:00.681685   775 net.cpp:86] Creating Layer conv0
I0428 20:17:00.681702   775 net.cpp:408] conv0 <- data
I0428 20:17:00.681715   775 net.cpp:382] conv0 -> conv0
I0428 20:17:00.915608   775 net.cpp:124] Setting up conv0
I0428 20:17:00.915633   775 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:00.915637   775 net.cpp:139] Memory required for data: 7573760
I0428 20:17:00.915650   775 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:00.915662   775 net.cpp:86] Creating Layer pool0
I0428 20:17:00.915665   775 net.cpp:408] pool0 <- conv0
I0428 20:17:00.915670   775 net.cpp:382] pool0 -> pool0
I0428 20:17:00.915730   775 net.cpp:124] Setting up pool0
I0428 20:17:00.915735   775 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:00.915738   775 net.cpp:139] Memory required for data: 9416960
I0428 20:17:00.915741   775 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:00.915752   775 net.cpp:86] Creating Layer conv1
I0428 20:17:00.915755   775 net.cpp:408] conv1 <- pool0
I0428 20:17:00.915760   775 net.cpp:382] conv1 -> conv1
I0428 20:17:00.918484   775 net.cpp:124] Setting up conv1
I0428 20:17:00.918514   775 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:17:00.918516   775 net.cpp:139] Memory required for data: 9498880
I0428 20:17:00.918524   775 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:00.918531   775 net.cpp:86] Creating Layer pool1
I0428 20:17:00.918535   775 net.cpp:408] pool1 <- conv1
I0428 20:17:00.918540   775 net.cpp:382] pool1 -> pool1
I0428 20:17:00.918591   775 net.cpp:124] Setting up pool1
I0428 20:17:00.918596   775 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:17:00.918599   775 net.cpp:139] Memory required for data: 9519360
I0428 20:17:00.918602   775 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:00.918608   775 net.cpp:86] Creating Layer ip1
I0428 20:17:00.918612   775 net.cpp:408] ip1 <- pool1
I0428 20:17:00.918615   775 net.cpp:382] ip1 -> ip1
I0428 20:17:00.918736   775 net.cpp:124] Setting up ip1
I0428 20:17:00.918743   775 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:00.918746   775 net.cpp:139] Memory required for data: 9532160
I0428 20:17:00.918753   775 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:00.918758   775 net.cpp:86] Creating Layer relu1
I0428 20:17:00.918761   775 net.cpp:408] relu1 <- ip1
I0428 20:17:00.918779   775 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:00.918933   775 net.cpp:124] Setting up relu1
I0428 20:17:00.918942   775 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:00.918944   775 net.cpp:139] Memory required for data: 9544960
I0428 20:17:00.918947   775 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:00.918953   775 net.cpp:86] Creating Layer ip2
I0428 20:17:00.918956   775 net.cpp:408] ip2 <- ip1
I0428 20:17:00.918961   775 net.cpp:382] ip2 -> ip2
I0428 20:17:00.919085   775 net.cpp:124] Setting up ip2
I0428 20:17:00.919106   775 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:00.919109   775 net.cpp:139] Memory required for data: 9557760
I0428 20:17:00.919116   775 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:00.919122   775 net.cpp:86] Creating Layer relu2
I0428 20:17:00.919126   775 net.cpp:408] relu2 <- ip2
I0428 20:17:00.919129   775 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:00.919919   775 net.cpp:124] Setting up relu2
I0428 20:17:00.919948   775 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:00.919952   775 net.cpp:139] Memory required for data: 9570560
I0428 20:17:00.919955   775 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:00.919962   775 net.cpp:86] Creating Layer ip3
I0428 20:17:00.919966   775 net.cpp:408] ip3 <- ip2
I0428 20:17:00.919973   775 net.cpp:382] ip3 -> ip3
I0428 20:17:00.920080   775 net.cpp:124] Setting up ip3
I0428 20:17:00.920089   775 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:00.920091   775 net.cpp:139] Memory required for data: 9573120
I0428 20:17:00.920099   775 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:00.920105   775 net.cpp:86] Creating Layer relu3
I0428 20:17:00.920109   775 net.cpp:408] relu3 <- ip3
I0428 20:17:00.920114   775 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:00.920316   775 net.cpp:124] Setting up relu3
I0428 20:17:00.920325   775 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:00.920327   775 net.cpp:139] Memory required for data: 9575680
I0428 20:17:00.920331   775 layer_factory.hpp:77] Creating layer loss
I0428 20:17:00.920336   775 net.cpp:86] Creating Layer loss
I0428 20:17:00.920341   775 net.cpp:408] loss <- ip3
I0428 20:17:00.920344   775 net.cpp:408] loss <- label
I0428 20:17:00.920351   775 net.cpp:382] loss -> loss
I0428 20:17:00.920363   775 layer_factory.hpp:77] Creating layer loss
I0428 20:17:00.920619   775 net.cpp:124] Setting up loss
I0428 20:17:00.920629   775 net.cpp:131] Top shape: (1)
I0428 20:17:00.920631   775 net.cpp:134]     with loss weight 1
I0428 20:17:00.920644   775 net.cpp:139] Memory required for data: 9575684
I0428 20:17:00.920647   775 net.cpp:200] loss needs backward computation.
I0428 20:17:00.920651   775 net.cpp:200] relu3 needs backward computation.
I0428 20:17:00.920655   775 net.cpp:200] ip3 needs backward computation.
I0428 20:17:00.920656   775 net.cpp:200] relu2 needs backward computation.
I0428 20:17:00.920660   775 net.cpp:200] ip2 needs backward computation.
I0428 20:17:00.920662   775 net.cpp:200] relu1 needs backward computation.
I0428 20:17:00.920665   775 net.cpp:200] ip1 needs backward computation.
I0428 20:17:00.920667   775 net.cpp:200] pool1 needs backward computation.
I0428 20:17:00.920670   775 net.cpp:200] conv1 needs backward computation.
I0428 20:17:00.920673   775 net.cpp:200] pool0 needs backward computation.
I0428 20:17:00.920675   775 net.cpp:200] conv0 needs backward computation.
I0428 20:17:00.920678   775 net.cpp:202] mnist does not need backward computation.
I0428 20:17:00.920681   775 net.cpp:244] This network produces output loss
I0428 20:17:00.920692   775 net.cpp:257] Network initialization done.
I0428 20:17:00.921099   775 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1284.prototxt
I0428 20:17:00.921159   775 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:00.921285   775 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:00.921367   775 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:00.921412   775 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:00.921423   775 net.cpp:86] Creating Layer mnist
I0428 20:17:00.921429   775 net.cpp:382] mnist -> data
I0428 20:17:00.921437   775 net.cpp:382] mnist -> label
I0428 20:17:00.921524   775 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:00.923413   775 net.cpp:124] Setting up mnist
I0428 20:17:00.923441   775 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:00.923445   775 net.cpp:131] Top shape: 100 (100)
I0428 20:17:00.923449   775 net.cpp:139] Memory required for data: 314000
I0428 20:17:00.923451   775 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:00.923485   775 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:00.923490   775 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:00.923494   775 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:00.923501   775 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:00.923624   775 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:00.923632   775 net.cpp:131] Top shape: 100 (100)
I0428 20:17:00.923636   775 net.cpp:131] Top shape: 100 (100)
I0428 20:17:00.923640   775 net.cpp:139] Memory required for data: 314800
I0428 20:17:00.923642   775 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:00.923651   775 net.cpp:86] Creating Layer conv0
I0428 20:17:00.923655   775 net.cpp:408] conv0 <- data
I0428 20:17:00.923672   775 net.cpp:382] conv0 -> conv0
I0428 20:17:00.925405   775 net.cpp:124] Setting up conv0
I0428 20:17:00.925418   775 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:00.925421   775 net.cpp:139] Memory required for data: 11834800
I0428 20:17:00.925431   775 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:00.925437   775 net.cpp:86] Creating Layer pool0
I0428 20:17:00.925457   775 net.cpp:408] pool0 <- conv0
I0428 20:17:00.925460   775 net.cpp:382] pool0 -> pool0
I0428 20:17:00.925498   775 net.cpp:124] Setting up pool0
I0428 20:17:00.925503   775 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:00.925506   775 net.cpp:139] Memory required for data: 14714800
I0428 20:17:00.925508   775 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:00.925518   775 net.cpp:86] Creating Layer conv1
I0428 20:17:00.925521   775 net.cpp:408] conv1 <- pool0
I0428 20:17:00.925529   775 net.cpp:382] conv1 -> conv1
I0428 20:17:00.927134   775 net.cpp:124] Setting up conv1
I0428 20:17:00.927146   775 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:17:00.927150   775 net.cpp:139] Memory required for data: 14842800
I0428 20:17:00.927160   775 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:00.927166   775 net.cpp:86] Creating Layer pool1
I0428 20:17:00.927176   775 net.cpp:408] pool1 <- conv1
I0428 20:17:00.927182   775 net.cpp:382] pool1 -> pool1
I0428 20:17:00.927224   775 net.cpp:124] Setting up pool1
I0428 20:17:00.927229   775 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:17:00.927237   775 net.cpp:139] Memory required for data: 14874800
I0428 20:17:00.927242   775 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:00.927248   775 net.cpp:86] Creating Layer ip1
I0428 20:17:00.927256   775 net.cpp:408] ip1 <- pool1
I0428 20:17:00.927271   775 net.cpp:382] ip1 -> ip1
I0428 20:17:00.927430   775 net.cpp:124] Setting up ip1
I0428 20:17:00.927439   775 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:00.927451   775 net.cpp:139] Memory required for data: 14894800
I0428 20:17:00.927459   775 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:00.927465   775 net.cpp:86] Creating Layer relu1
I0428 20:17:00.927469   775 net.cpp:408] relu1 <- ip1
I0428 20:17:00.927472   775 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:00.927662   775 net.cpp:124] Setting up relu1
I0428 20:17:00.927671   775 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:00.927675   775 net.cpp:139] Memory required for data: 14914800
I0428 20:17:00.927677   775 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:00.927692   775 net.cpp:86] Creating Layer ip2
I0428 20:17:00.927695   775 net.cpp:408] ip2 <- ip1
I0428 20:17:00.927701   775 net.cpp:382] ip2 -> ip2
I0428 20:17:00.927834   775 net.cpp:124] Setting up ip2
I0428 20:17:00.927840   775 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:00.927844   775 net.cpp:139] Memory required for data: 14934800
I0428 20:17:00.927850   775 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:00.927853   775 net.cpp:86] Creating Layer relu2
I0428 20:17:00.927856   775 net.cpp:408] relu2 <- ip2
I0428 20:17:00.927860   775 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:00.928022   775 net.cpp:124] Setting up relu2
I0428 20:17:00.928031   775 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:00.928035   775 net.cpp:139] Memory required for data: 14954800
I0428 20:17:00.928037   775 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:00.928042   775 net.cpp:86] Creating Layer ip3
I0428 20:17:00.928045   775 net.cpp:408] ip3 <- ip2
I0428 20:17:00.928050   775 net.cpp:382] ip3 -> ip3
I0428 20:17:00.928153   775 net.cpp:124] Setting up ip3
I0428 20:17:00.928158   775 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:00.928163   775 net.cpp:139] Memory required for data: 14958800
I0428 20:17:00.928169   775 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:00.928174   775 net.cpp:86] Creating Layer relu3
I0428 20:17:00.928177   775 net.cpp:408] relu3 <- ip3
I0428 20:17:00.928180   775 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:00.929046   775 net.cpp:124] Setting up relu3
I0428 20:17:00.929059   775 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:00.929062   775 net.cpp:139] Memory required for data: 14962800
I0428 20:17:00.929066   775 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:00.929071   775 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:00.929075   775 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:00.929081   775 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:00.929088   775 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:00.929147   775 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:00.929152   775 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:00.929170   775 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:00.929172   775 net.cpp:139] Memory required for data: 14970800
I0428 20:17:00.929175   775 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:00.929181   775 net.cpp:86] Creating Layer accuracy
I0428 20:17:00.929184   775 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:00.929208   775 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:00.929213   775 net.cpp:382] accuracy -> accuracy
I0428 20:17:00.929219   775 net.cpp:124] Setting up accuracy
I0428 20:17:00.929224   775 net.cpp:131] Top shape: (1)
I0428 20:17:00.929239   775 net.cpp:139] Memory required for data: 14970804
I0428 20:17:00.929241   775 layer_factory.hpp:77] Creating layer loss
I0428 20:17:00.929246   775 net.cpp:86] Creating Layer loss
I0428 20:17:00.929250   775 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:00.929253   775 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:00.929257   775 net.cpp:382] loss -> loss
I0428 20:17:00.929263   775 layer_factory.hpp:77] Creating layer loss
I0428 20:17:00.929520   775 net.cpp:124] Setting up loss
I0428 20:17:00.929528   775 net.cpp:131] Top shape: (1)
I0428 20:17:00.929533   775 net.cpp:134]     with loss weight 1
I0428 20:17:00.929563   775 net.cpp:139] Memory required for data: 14970808
I0428 20:17:00.929567   775 net.cpp:200] loss needs backward computation.
I0428 20:17:00.929570   775 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:00.929574   775 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:00.929589   775 net.cpp:200] relu3 needs backward computation.
I0428 20:17:00.929591   775 net.cpp:200] ip3 needs backward computation.
I0428 20:17:00.929594   775 net.cpp:200] relu2 needs backward computation.
I0428 20:17:00.929596   775 net.cpp:200] ip2 needs backward computation.
I0428 20:17:00.929600   775 net.cpp:200] relu1 needs backward computation.
I0428 20:17:00.929602   775 net.cpp:200] ip1 needs backward computation.
I0428 20:17:00.929605   775 net.cpp:200] pool1 needs backward computation.
I0428 20:17:00.929608   775 net.cpp:200] conv1 needs backward computation.
I0428 20:17:00.929610   775 net.cpp:200] pool0 needs backward computation.
I0428 20:17:00.929613   775 net.cpp:200] conv0 needs backward computation.
I0428 20:17:00.929622   775 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:00.929625   775 net.cpp:202] mnist does not need backward computation.
I0428 20:17:00.929628   775 net.cpp:244] This network produces output accuracy
I0428 20:17:00.929631   775 net.cpp:244] This network produces output loss
I0428 20:17:00.929644   775 net.cpp:257] Network initialization done.
I0428 20:17:00.929682   775 solver.cpp:56] Solver scaffolding done.
I0428 20:17:00.930044   775 caffe.cpp:248] Starting Optimization
I0428 20:17:00.930052   775 solver.cpp:273] Solving LeNet
I0428 20:17:00.930053   775 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:00.930817   775 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:00.936597   775 blocking_queue.cpp:49] Waiting for data
I0428 20:17:01.015302   782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:01.016649   775 solver.cpp:398]     Test net output #0: accuracy = 0.1159
I0428 20:17:01.016682   775 solver.cpp:398]     Test net output #1: loss = 2.30223 (* 1 = 2.30223 loss)
I0428 20:17:01.022621   775 solver.cpp:219] Iteration 0 (-1.4952e-31 iter/s, 0.0925348s/100 iters), loss = 2.30469
I0428 20:17:01.022660   775 solver.cpp:238]     Train net output #0: loss = 2.30469 (* 1 = 2.30469 loss)
I0428 20:17:01.022691   775 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:01.146811   775 solver.cpp:219] Iteration 100 (805.559 iter/s, 0.124137s/100 iters), loss = 0.392002
I0428 20:17:01.146843   775 solver.cpp:238]     Train net output #0: loss = 0.392002 (* 1 = 0.392002 loss)
I0428 20:17:01.146862   775 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:01.268487   775 solver.cpp:219] Iteration 200 (822.153 iter/s, 0.121632s/100 iters), loss = 0.281457
I0428 20:17:01.268519   775 solver.cpp:238]     Train net output #0: loss = 0.281457 (* 1 = 0.281457 loss)
I0428 20:17:01.268527   775 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:01.387507   775 solver.cpp:219] Iteration 300 (840.495 iter/s, 0.118978s/100 iters), loss = 0.273864
I0428 20:17:01.387537   775 solver.cpp:238]     Train net output #0: loss = 0.273864 (* 1 = 0.273864 loss)
I0428 20:17:01.387544   775 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:01.514099   775 solver.cpp:219] Iteration 400 (790.22 iter/s, 0.126547s/100 iters), loss = 0.212616
I0428 20:17:01.514142   775 solver.cpp:238]     Train net output #0: loss = 0.212616 (* 1 = 0.212616 loss)
I0428 20:17:01.514153   775 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:01.637347   775 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:01.712839   782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:01.715451   775 solver.cpp:398]     Test net output #0: accuracy = 0.9547
I0428 20:17:01.715484   775 solver.cpp:398]     Test net output #1: loss = 0.144014 (* 1 = 0.144014 loss)
I0428 20:17:01.716708   775 solver.cpp:219] Iteration 500 (493.704 iter/s, 0.20255s/100 iters), loss = 0.157682
I0428 20:17:01.716768   775 solver.cpp:238]     Train net output #0: loss = 0.157682 (* 1 = 0.157682 loss)
I0428 20:17:01.716785   775 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:01.839781   775 solver.cpp:219] Iteration 600 (812.996 iter/s, 0.123002s/100 iters), loss = 0.101717
I0428 20:17:01.839815   775 solver.cpp:238]     Train net output #0: loss = 0.101717 (* 1 = 0.101717 loss)
I0428 20:17:01.839823   775 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:01.962421   775 solver.cpp:219] Iteration 700 (815.699 iter/s, 0.122594s/100 iters), loss = 0.2531
I0428 20:17:01.962455   775 solver.cpp:238]     Train net output #0: loss = 0.2531 (* 1 = 0.2531 loss)
I0428 20:17:01.962463   775 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:02.081961   775 solver.cpp:219] Iteration 800 (836.863 iter/s, 0.119494s/100 iters), loss = 0.25357
I0428 20:17:02.081993   775 solver.cpp:238]     Train net output #0: loss = 0.25357 (* 1 = 0.25357 loss)
I0428 20:17:02.082001   775 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:02.202529   775 solver.cpp:219] Iteration 900 (829.705 iter/s, 0.120525s/100 iters), loss = 0.207777
I0428 20:17:02.202563   775 solver.cpp:238]     Train net output #0: loss = 0.207777 (* 1 = 0.207777 loss)
I0428 20:17:02.202570   775 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:02.242878   781 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:02.328234   775 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:02.329571   775 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:02.330492   775 solver.cpp:311] Iteration 1000, loss = 0.0738052
I0428 20:17:02.330518   775 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:02.403561   782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:02.405890   775 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0428 20:17:02.405913   775 solver.cpp:398]     Test net output #1: loss = 0.0962726 (* 1 = 0.0962726 loss)
I0428 20:17:02.405920   775 solver.cpp:316] Optimization Done.
I0428 20:17:02.405923   775 caffe.cpp:259] Optimization Done.
