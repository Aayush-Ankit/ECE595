I0428 20:33:04.220340  4237 caffe.cpp:218] Using GPUs 0
I0428 20:33:04.252552  4237 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:04.711182  4237 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1582.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:04.711315  4237 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1582.prototxt
I0428 20:33:04.711679  4237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:04.711695  4237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:04.711777  4237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:04.711854  4237 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:04.711933  4237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:04.711966  4237 net.cpp:86] Creating Layer mnist
I0428 20:33:04.711974  4237 net.cpp:382] mnist -> data
I0428 20:33:04.711993  4237 net.cpp:382] mnist -> label
I0428 20:33:04.712985  4237 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:04.715224  4237 net.cpp:124] Setting up mnist
I0428 20:33:04.715270  4237 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:04.715276  4237 net.cpp:131] Top shape: 64 (64)
I0428 20:33:04.715277  4237 net.cpp:139] Memory required for data: 200960
I0428 20:33:04.715297  4237 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:04.715312  4237 net.cpp:86] Creating Layer conv0
I0428 20:33:04.715328  4237 net.cpp:408] conv0 <- data
I0428 20:33:04.715339  4237 net.cpp:382] conv0 -> conv0
I0428 20:33:04.943308  4237 net.cpp:124] Setting up conv0
I0428 20:33:04.943334  4237 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:04.943338  4237 net.cpp:139] Memory required for data: 14946560
I0428 20:33:04.943353  4237 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:04.943366  4237 net.cpp:86] Creating Layer pool0
I0428 20:33:04.943369  4237 net.cpp:408] pool0 <- conv0
I0428 20:33:04.943375  4237 net.cpp:382] pool0 -> pool0
I0428 20:33:04.943437  4237 net.cpp:124] Setting up pool0
I0428 20:33:04.943442  4237 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:04.943445  4237 net.cpp:139] Memory required for data: 18632960
I0428 20:33:04.943449  4237 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:04.943459  4237 net.cpp:86] Creating Layer conv1
I0428 20:33:04.943462  4237 net.cpp:408] conv1 <- pool0
I0428 20:33:04.943466  4237 net.cpp:382] conv1 -> conv1
I0428 20:33:04.945796  4237 net.cpp:124] Setting up conv1
I0428 20:33:04.945824  4237 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:04.945828  4237 net.cpp:139] Memory required for data: 19042560
I0428 20:33:04.945837  4237 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:04.945844  4237 net.cpp:86] Creating Layer pool1
I0428 20:33:04.945847  4237 net.cpp:408] pool1 <- conv1
I0428 20:33:04.945852  4237 net.cpp:382] pool1 -> pool1
I0428 20:33:04.945904  4237 net.cpp:124] Setting up pool1
I0428 20:33:04.945909  4237 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:04.945911  4237 net.cpp:139] Memory required for data: 19144960
I0428 20:33:04.945929  4237 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:04.945935  4237 net.cpp:86] Creating Layer ip1
I0428 20:33:04.945938  4237 net.cpp:408] ip1 <- pool1
I0428 20:33:04.945943  4237 net.cpp:382] ip1 -> ip1
I0428 20:33:04.946938  4237 net.cpp:124] Setting up ip1
I0428 20:33:04.946949  4237 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:04.946969  4237 net.cpp:139] Memory required for data: 19151360
I0428 20:33:04.946991  4237 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:04.946997  4237 net.cpp:86] Creating Layer relu1
I0428 20:33:04.947001  4237 net.cpp:408] relu1 <- ip1
I0428 20:33:04.947005  4237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:04.947222  4237 net.cpp:124] Setting up relu1
I0428 20:33:04.947232  4237 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:04.947235  4237 net.cpp:139] Memory required for data: 19157760
I0428 20:33:04.947239  4237 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:04.947247  4237 net.cpp:86] Creating Layer ip2
I0428 20:33:04.947249  4237 net.cpp:408] ip2 <- ip1
I0428 20:33:04.947254  4237 net.cpp:382] ip2 -> ip2
I0428 20:33:04.947355  4237 net.cpp:124] Setting up ip2
I0428 20:33:04.947362  4237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:04.947365  4237 net.cpp:139] Memory required for data: 19160320
I0428 20:33:04.947386  4237 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:04.947405  4237 net.cpp:86] Creating Layer relu2
I0428 20:33:04.947408  4237 net.cpp:408] relu2 <- ip2
I0428 20:33:04.947412  4237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:04.948225  4237 net.cpp:124] Setting up relu2
I0428 20:33:04.948252  4237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:04.948256  4237 net.cpp:139] Memory required for data: 19162880
I0428 20:33:04.948261  4237 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:04.948267  4237 net.cpp:86] Creating Layer ip3
I0428 20:33:04.948271  4237 net.cpp:408] ip3 <- ip2
I0428 20:33:04.948276  4237 net.cpp:382] ip3 -> ip3
I0428 20:33:04.948390  4237 net.cpp:124] Setting up ip3
I0428 20:33:04.948397  4237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:04.948400  4237 net.cpp:139] Memory required for data: 19165440
I0428 20:33:04.948408  4237 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:04.948413  4237 net.cpp:86] Creating Layer relu3
I0428 20:33:04.948416  4237 net.cpp:408] relu3 <- ip3
I0428 20:33:04.948421  4237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:04.948612  4237 net.cpp:124] Setting up relu3
I0428 20:33:04.948621  4237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:04.948624  4237 net.cpp:139] Memory required for data: 19168000
I0428 20:33:04.948627  4237 layer_factory.hpp:77] Creating layer loss
I0428 20:33:04.948633  4237 net.cpp:86] Creating Layer loss
I0428 20:33:04.948637  4237 net.cpp:408] loss <- ip3
I0428 20:33:04.948640  4237 net.cpp:408] loss <- label
I0428 20:33:04.948647  4237 net.cpp:382] loss -> loss
I0428 20:33:04.948663  4237 layer_factory.hpp:77] Creating layer loss
I0428 20:33:04.948905  4237 net.cpp:124] Setting up loss
I0428 20:33:04.948915  4237 net.cpp:131] Top shape: (1)
I0428 20:33:04.948930  4237 net.cpp:134]     with loss weight 1
I0428 20:33:04.948945  4237 net.cpp:139] Memory required for data: 19168004
I0428 20:33:04.948947  4237 net.cpp:200] loss needs backward computation.
I0428 20:33:04.948951  4237 net.cpp:200] relu3 needs backward computation.
I0428 20:33:04.948954  4237 net.cpp:200] ip3 needs backward computation.
I0428 20:33:04.948957  4237 net.cpp:200] relu2 needs backward computation.
I0428 20:33:04.948961  4237 net.cpp:200] ip2 needs backward computation.
I0428 20:33:04.948963  4237 net.cpp:200] relu1 needs backward computation.
I0428 20:33:04.948966  4237 net.cpp:200] ip1 needs backward computation.
I0428 20:33:04.948969  4237 net.cpp:200] pool1 needs backward computation.
I0428 20:33:04.948972  4237 net.cpp:200] conv1 needs backward computation.
I0428 20:33:04.948976  4237 net.cpp:200] pool0 needs backward computation.
I0428 20:33:04.948979  4237 net.cpp:200] conv0 needs backward computation.
I0428 20:33:04.948982  4237 net.cpp:202] mnist does not need backward computation.
I0428 20:33:04.948985  4237 net.cpp:244] This network produces output loss
I0428 20:33:04.948994  4237 net.cpp:257] Network initialization done.
I0428 20:33:04.949391  4237 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1582.prototxt
I0428 20:33:04.949450  4237 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:04.949553  4237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:04.949640  4237 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:04.949683  4237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:04.949694  4237 net.cpp:86] Creating Layer mnist
I0428 20:33:04.949698  4237 net.cpp:382] mnist -> data
I0428 20:33:04.949707  4237 net.cpp:382] mnist -> label
I0428 20:33:04.949787  4237 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:04.951879  4237 net.cpp:124] Setting up mnist
I0428 20:33:04.951923  4237 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:04.951928  4237 net.cpp:131] Top shape: 100 (100)
I0428 20:33:04.951931  4237 net.cpp:139] Memory required for data: 314000
I0428 20:33:04.951936  4237 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:04.951961  4237 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:04.951966  4237 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:04.951970  4237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:04.951977  4237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:04.952018  4237 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:04.952024  4237 net.cpp:131] Top shape: 100 (100)
I0428 20:33:04.952028  4237 net.cpp:131] Top shape: 100 (100)
I0428 20:33:04.952030  4237 net.cpp:139] Memory required for data: 314800
I0428 20:33:04.952033  4237 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:04.952041  4237 net.cpp:86] Creating Layer conv0
I0428 20:33:04.952044  4237 net.cpp:408] conv0 <- data
I0428 20:33:04.952049  4237 net.cpp:382] conv0 -> conv0
I0428 20:33:04.953883  4237 net.cpp:124] Setting up conv0
I0428 20:33:04.953912  4237 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:04.953917  4237 net.cpp:139] Memory required for data: 23354800
I0428 20:33:04.953925  4237 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:04.953933  4237 net.cpp:86] Creating Layer pool0
I0428 20:33:04.953935  4237 net.cpp:408] pool0 <- conv0
I0428 20:33:04.953940  4237 net.cpp:382] pool0 -> pool0
I0428 20:33:04.953989  4237 net.cpp:124] Setting up pool0
I0428 20:33:04.953994  4237 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:04.953995  4237 net.cpp:139] Memory required for data: 29114800
I0428 20:33:04.953999  4237 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:04.954006  4237 net.cpp:86] Creating Layer conv1
I0428 20:33:04.954010  4237 net.cpp:408] conv1 <- pool0
I0428 20:33:04.954015  4237 net.cpp:382] conv1 -> conv1
I0428 20:33:04.956017  4237 net.cpp:124] Setting up conv1
I0428 20:33:04.956046  4237 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:04.956050  4237 net.cpp:139] Memory required for data: 29754800
I0428 20:33:04.956059  4237 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:04.956066  4237 net.cpp:86] Creating Layer pool1
I0428 20:33:04.956070  4237 net.cpp:408] pool1 <- conv1
I0428 20:33:04.956076  4237 net.cpp:382] pool1 -> pool1
I0428 20:33:04.956128  4237 net.cpp:124] Setting up pool1
I0428 20:33:04.956135  4237 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:04.956137  4237 net.cpp:139] Memory required for data: 29914800
I0428 20:33:04.956140  4237 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:04.956161  4237 net.cpp:86] Creating Layer ip1
I0428 20:33:04.956164  4237 net.cpp:408] ip1 <- pool1
I0428 20:33:04.956169  4237 net.cpp:382] ip1 -> ip1
I0428 20:33:04.956331  4237 net.cpp:124] Setting up ip1
I0428 20:33:04.956349  4237 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:04.956353  4237 net.cpp:139] Memory required for data: 29924800
I0428 20:33:04.956362  4237 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:04.956367  4237 net.cpp:86] Creating Layer relu1
I0428 20:33:04.956369  4237 net.cpp:408] relu1 <- ip1
I0428 20:33:04.956373  4237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:04.956540  4237 net.cpp:124] Setting up relu1
I0428 20:33:04.956548  4237 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:04.956552  4237 net.cpp:139] Memory required for data: 29934800
I0428 20:33:04.956555  4237 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:04.956562  4237 net.cpp:86] Creating Layer ip2
I0428 20:33:04.956564  4237 net.cpp:408] ip2 <- ip1
I0428 20:33:04.956569  4237 net.cpp:382] ip2 -> ip2
I0428 20:33:04.956687  4237 net.cpp:124] Setting up ip2
I0428 20:33:04.956708  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.956712  4237 net.cpp:139] Memory required for data: 29938800
I0428 20:33:04.956717  4237 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:04.956722  4237 net.cpp:86] Creating Layer relu2
I0428 20:33:04.956724  4237 net.cpp:408] relu2 <- ip2
I0428 20:33:04.956728  4237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:04.956960  4237 net.cpp:124] Setting up relu2
I0428 20:33:04.956970  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.956974  4237 net.cpp:139] Memory required for data: 29942800
I0428 20:33:04.956992  4237 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:04.956998  4237 net.cpp:86] Creating Layer ip3
I0428 20:33:04.957002  4237 net.cpp:408] ip3 <- ip2
I0428 20:33:04.957007  4237 net.cpp:382] ip3 -> ip3
I0428 20:33:04.957101  4237 net.cpp:124] Setting up ip3
I0428 20:33:04.957108  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.957111  4237 net.cpp:139] Memory required for data: 29946800
I0428 20:33:04.957119  4237 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:04.957124  4237 net.cpp:86] Creating Layer relu3
I0428 20:33:04.957128  4237 net.cpp:408] relu3 <- ip3
I0428 20:33:04.957131  4237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:04.957993  4237 net.cpp:124] Setting up relu3
I0428 20:33:04.958004  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.958024  4237 net.cpp:139] Memory required for data: 29950800
I0428 20:33:04.958026  4237 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:04.958048  4237 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:04.958052  4237 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:04.958072  4237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:04.958078  4237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:04.958173  4237 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:04.958180  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.958184  4237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:04.958189  4237 net.cpp:139] Memory required for data: 29958800
I0428 20:33:04.958191  4237 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:04.958196  4237 net.cpp:86] Creating Layer accuracy
I0428 20:33:04.958199  4237 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:04.958205  4237 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:04.958209  4237 net.cpp:382] accuracy -> accuracy
I0428 20:33:04.958217  4237 net.cpp:124] Setting up accuracy
I0428 20:33:04.958222  4237 net.cpp:131] Top shape: (1)
I0428 20:33:04.958225  4237 net.cpp:139] Memory required for data: 29958804
I0428 20:33:04.958233  4237 layer_factory.hpp:77] Creating layer loss
I0428 20:33:04.958238  4237 net.cpp:86] Creating Layer loss
I0428 20:33:04.958241  4237 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:04.958245  4237 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:04.958250  4237 net.cpp:382] loss -> loss
I0428 20:33:04.958256  4237 layer_factory.hpp:77] Creating layer loss
I0428 20:33:04.958497  4237 net.cpp:124] Setting up loss
I0428 20:33:04.958506  4237 net.cpp:131] Top shape: (1)
I0428 20:33:04.958509  4237 net.cpp:134]     with loss weight 1
I0428 20:33:04.958528  4237 net.cpp:139] Memory required for data: 29958808
I0428 20:33:04.958531  4237 net.cpp:200] loss needs backward computation.
I0428 20:33:04.958552  4237 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:04.958556  4237 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:04.958559  4237 net.cpp:200] relu3 needs backward computation.
I0428 20:33:04.958562  4237 net.cpp:200] ip3 needs backward computation.
I0428 20:33:04.958566  4237 net.cpp:200] relu2 needs backward computation.
I0428 20:33:04.958570  4237 net.cpp:200] ip2 needs backward computation.
I0428 20:33:04.958572  4237 net.cpp:200] relu1 needs backward computation.
I0428 20:33:04.958575  4237 net.cpp:200] ip1 needs backward computation.
I0428 20:33:04.958578  4237 net.cpp:200] pool1 needs backward computation.
I0428 20:33:04.958582  4237 net.cpp:200] conv1 needs backward computation.
I0428 20:33:04.958586  4237 net.cpp:200] pool0 needs backward computation.
I0428 20:33:04.958590  4237 net.cpp:200] conv0 needs backward computation.
I0428 20:33:04.958593  4237 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:04.958597  4237 net.cpp:202] mnist does not need backward computation.
I0428 20:33:04.958600  4237 net.cpp:244] This network produces output accuracy
I0428 20:33:04.958603  4237 net.cpp:244] This network produces output loss
I0428 20:33:04.958613  4237 net.cpp:257] Network initialization done.
I0428 20:33:04.958654  4237 solver.cpp:56] Solver scaffolding done.
I0428 20:33:04.959051  4237 caffe.cpp:248] Starting Optimization
I0428 20:33:04.959058  4237 solver.cpp:273] Solving LeNet
I0428 20:33:04.959060  4237 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:04.959336  4237 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:05.055943  4244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:05.058341  4237 solver.cpp:398]     Test net output #0: accuracy = 0.2121
I0428 20:33:05.058373  4237 solver.cpp:398]     Test net output #1: loss = 2.28912 (* 1 = 2.28912 loss)
I0428 20:33:05.062866  4237 solver.cpp:219] Iteration 0 (-8.6791e-31 iter/s, 0.103761s/100 iters), loss = 2.2803
I0428 20:33:05.062906  4237 solver.cpp:238]     Train net output #0: loss = 2.2803 (* 1 = 2.2803 loss)
I0428 20:33:05.062916  4237 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:05.271554  4237 solver.cpp:219] Iteration 100 (479.276 iter/s, 0.208648s/100 iters), loss = 0.589954
I0428 20:33:05.271585  4237 solver.cpp:238]     Train net output #0: loss = 0.589954 (* 1 = 0.589954 loss)
I0428 20:33:05.271594  4237 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:05.482837  4237 solver.cpp:219] Iteration 200 (473.411 iter/s, 0.211233s/100 iters), loss = 0.635421
I0428 20:33:05.482882  4237 solver.cpp:238]     Train net output #0: loss = 0.635421 (* 1 = 0.635421 loss)
I0428 20:33:05.482894  4237 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:05.693837  4237 solver.cpp:219] Iteration 300 (474.062 iter/s, 0.210943s/100 iters), loss = 0.236678
I0428 20:33:05.693867  4237 solver.cpp:238]     Train net output #0: loss = 0.236678 (* 1 = 0.236678 loss)
I0428 20:33:05.693874  4237 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:05.906744  4237 solver.cpp:219] Iteration 400 (469.786 iter/s, 0.212863s/100 iters), loss = 0.327536
I0428 20:33:05.906774  4237 solver.cpp:238]     Train net output #0: loss = 0.327536 (* 1 = 0.327536 loss)
I0428 20:33:05.906781  4237 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:06.115438  4237 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:06.220631  4244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:06.224243  4237 solver.cpp:398]     Test net output #0: accuracy = 0.8828
I0428 20:33:06.224268  4237 solver.cpp:398]     Test net output #1: loss = 0.317082 (* 1 = 0.317082 loss)
I0428 20:33:06.226238  4237 solver.cpp:219] Iteration 500 (313.044 iter/s, 0.319444s/100 iters), loss = 0.35469
I0428 20:33:06.226267  4237 solver.cpp:238]     Train net output #0: loss = 0.35469 (* 1 = 0.35469 loss)
I0428 20:33:06.226295  4237 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:06.436893  4237 solver.cpp:219] Iteration 600 (474.811 iter/s, 0.21061s/100 iters), loss = 0.220994
I0428 20:33:06.436928  4237 solver.cpp:238]     Train net output #0: loss = 0.220994 (* 1 = 0.220994 loss)
I0428 20:33:06.436936  4237 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:06.652537  4237 solver.cpp:219] Iteration 700 (463.835 iter/s, 0.215594s/100 iters), loss = 0.590564
I0428 20:33:06.652577  4237 solver.cpp:238]     Train net output #0: loss = 0.590564 (* 1 = 0.590564 loss)
I0428 20:33:06.652586  4237 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:06.867841  4237 solver.cpp:219] Iteration 800 (464.576 iter/s, 0.21525s/100 iters), loss = 0.42205
I0428 20:33:06.867868  4237 solver.cpp:238]     Train net output #0: loss = 0.42205 (* 1 = 0.42205 loss)
I0428 20:33:06.867875  4237 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:07.078438  4237 solver.cpp:219] Iteration 900 (474.938 iter/s, 0.210554s/100 iters), loss = 0.2875
I0428 20:33:07.078464  4237 solver.cpp:238]     Train net output #0: loss = 0.287499 (* 1 = 0.287499 loss)
I0428 20:33:07.078486  4237 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:07.147557  4243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:07.285619  4237 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:07.288010  4237 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:07.289482  4237 solver.cpp:311] Iteration 1000, loss = 0.405072
I0428 20:33:07.289499  4237 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:07.384582  4244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:07.388110  4237 solver.cpp:398]     Test net output #0: accuracy = 0.8893
I0428 20:33:07.388129  4237 solver.cpp:398]     Test net output #1: loss = 0.287453 (* 1 = 0.287453 loss)
I0428 20:33:07.388134  4237 solver.cpp:316] Optimization Done.
I0428 20:33:07.388154  4237 caffe.cpp:259] Optimization Done.
