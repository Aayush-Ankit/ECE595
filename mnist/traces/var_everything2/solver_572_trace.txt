I0428 19:49:21.176223 26739 caffe.cpp:218] Using GPUs 0
I0428 19:49:21.214651 26739 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:21.729527 26739 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test572.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:21.729672 26739 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test572.prototxt
I0428 19:49:21.730093 26739 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:21.730111 26739 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:21.730217 26739 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:21.730298 26739 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:21.730401 26739 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:21.730425 26739 net.cpp:86] Creating Layer mnist
I0428 19:49:21.730434 26739 net.cpp:382] mnist -> data
I0428 19:49:21.730458 26739 net.cpp:382] mnist -> label
I0428 19:49:21.731554 26739 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:21.734025 26739 net.cpp:124] Setting up mnist
I0428 19:49:21.734045 26739 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:21.734051 26739 net.cpp:131] Top shape: 64 (64)
I0428 19:49:21.734055 26739 net.cpp:139] Memory required for data: 200960
I0428 19:49:21.734061 26739 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:21.734079 26739 net.cpp:86] Creating Layer conv0
I0428 19:49:21.734100 26739 net.cpp:408] conv0 <- data
I0428 19:49:21.734113 26739 net.cpp:382] conv0 -> conv0
I0428 19:49:22.023355 26739 net.cpp:124] Setting up conv0
I0428 19:49:22.023386 26739 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:22.023389 26739 net.cpp:139] Memory required for data: 938240
I0428 19:49:22.023406 26739 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:22.023419 26739 net.cpp:86] Creating Layer pool0
I0428 19:49:22.023424 26739 net.cpp:408] pool0 <- conv0
I0428 19:49:22.023432 26739 net.cpp:382] pool0 -> pool0
I0428 19:49:22.023485 26739 net.cpp:124] Setting up pool0
I0428 19:49:22.023493 26739 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:22.023495 26739 net.cpp:139] Memory required for data: 1122560
I0428 19:49:22.023499 26739 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:22.023511 26739 net.cpp:86] Creating Layer conv1
I0428 19:49:22.023515 26739 net.cpp:408] conv1 <- pool0
I0428 19:49:22.023520 26739 net.cpp:382] conv1 -> conv1
I0428 19:49:22.025594 26739 net.cpp:124] Setting up conv1
I0428 19:49:22.025611 26739 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:22.025615 26739 net.cpp:139] Memory required for data: 1204480
I0428 19:49:22.025624 26739 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:22.025632 26739 net.cpp:86] Creating Layer pool1
I0428 19:49:22.025636 26739 net.cpp:408] pool1 <- conv1
I0428 19:49:22.025642 26739 net.cpp:382] pool1 -> pool1
I0428 19:49:22.025686 26739 net.cpp:124] Setting up pool1
I0428 19:49:22.025691 26739 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:22.025694 26739 net.cpp:139] Memory required for data: 1224960
I0428 19:49:22.025697 26739 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:22.025705 26739 net.cpp:86] Creating Layer ip1
I0428 19:49:22.025708 26739 net.cpp:408] ip1 <- pool1
I0428 19:49:22.025713 26739 net.cpp:382] ip1 -> ip1
I0428 19:49:22.026736 26739 net.cpp:124] Setting up ip1
I0428 19:49:22.026749 26739 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:22.026753 26739 net.cpp:139] Memory required for data: 1231360
I0428 19:49:22.026762 26739 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:22.026768 26739 net.cpp:86] Creating Layer relu1
I0428 19:49:22.026772 26739 net.cpp:408] relu1 <- ip1
I0428 19:49:22.026777 26739 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:22.026979 26739 net.cpp:124] Setting up relu1
I0428 19:49:22.026989 26739 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:22.026993 26739 net.cpp:139] Memory required for data: 1237760
I0428 19:49:22.026996 26739 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:22.027004 26739 net.cpp:86] Creating Layer ip2
I0428 19:49:22.027009 26739 net.cpp:408] ip2 <- ip1
I0428 19:49:22.027014 26739 net.cpp:382] ip2 -> ip2
I0428 19:49:22.027125 26739 net.cpp:124] Setting up ip2
I0428 19:49:22.027133 26739 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:22.027137 26739 net.cpp:139] Memory required for data: 1244160
I0428 19:49:22.027143 26739 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:22.027149 26739 net.cpp:86] Creating Layer relu2
I0428 19:49:22.027153 26739 net.cpp:408] relu2 <- ip2
I0428 19:49:22.027156 26739 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:22.027956 26739 net.cpp:124] Setting up relu2
I0428 19:49:22.027971 26739 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:22.027974 26739 net.cpp:139] Memory required for data: 1250560
I0428 19:49:22.027981 26739 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:22.027992 26739 net.cpp:86] Creating Layer ip3
I0428 19:49:22.027997 26739 net.cpp:408] ip3 <- ip2
I0428 19:49:22.028004 26739 net.cpp:382] ip3 -> ip3
I0428 19:49:22.028117 26739 net.cpp:124] Setting up ip3
I0428 19:49:22.028126 26739 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:22.028131 26739 net.cpp:139] Memory required for data: 1253120
I0428 19:49:22.028139 26739 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:22.028144 26739 net.cpp:86] Creating Layer relu3
I0428 19:49:22.028148 26739 net.cpp:408] relu3 <- ip3
I0428 19:49:22.028153 26739 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:22.028336 26739 net.cpp:124] Setting up relu3
I0428 19:49:22.028345 26739 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:22.028349 26739 net.cpp:139] Memory required for data: 1255680
I0428 19:49:22.028352 26739 layer_factory.hpp:77] Creating layer loss
I0428 19:49:22.028359 26739 net.cpp:86] Creating Layer loss
I0428 19:49:22.028362 26739 net.cpp:408] loss <- ip3
I0428 19:49:22.028367 26739 net.cpp:408] loss <- label
I0428 19:49:22.028373 26739 net.cpp:382] loss -> loss
I0428 19:49:22.028388 26739 layer_factory.hpp:77] Creating layer loss
I0428 19:49:22.028632 26739 net.cpp:124] Setting up loss
I0428 19:49:22.028642 26739 net.cpp:131] Top shape: (1)
I0428 19:49:22.028646 26739 net.cpp:134]     with loss weight 1
I0428 19:49:22.028666 26739 net.cpp:139] Memory required for data: 1255684
I0428 19:49:22.028669 26739 net.cpp:200] loss needs backward computation.
I0428 19:49:22.028673 26739 net.cpp:200] relu3 needs backward computation.
I0428 19:49:22.028676 26739 net.cpp:200] ip3 needs backward computation.
I0428 19:49:22.028681 26739 net.cpp:200] relu2 needs backward computation.
I0428 19:49:22.028683 26739 net.cpp:200] ip2 needs backward computation.
I0428 19:49:22.028687 26739 net.cpp:200] relu1 needs backward computation.
I0428 19:49:22.028689 26739 net.cpp:200] ip1 needs backward computation.
I0428 19:49:22.028692 26739 net.cpp:200] pool1 needs backward computation.
I0428 19:49:22.028695 26739 net.cpp:200] conv1 needs backward computation.
I0428 19:49:22.028699 26739 net.cpp:200] pool0 needs backward computation.
I0428 19:49:22.028702 26739 net.cpp:200] conv0 needs backward computation.
I0428 19:49:22.028707 26739 net.cpp:202] mnist does not need backward computation.
I0428 19:49:22.028709 26739 net.cpp:244] This network produces output loss
I0428 19:49:22.028719 26739 net.cpp:257] Network initialization done.
I0428 19:49:22.029076 26739 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test572.prototxt
I0428 19:49:22.029105 26739 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:22.029204 26739 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:22.029292 26739 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:22.029338 26739 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:22.029356 26739 net.cpp:86] Creating Layer mnist
I0428 19:49:22.029361 26739 net.cpp:382] mnist -> data
I0428 19:49:22.029368 26739 net.cpp:382] mnist -> label
I0428 19:49:22.029461 26739 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:22.031519 26739 net.cpp:124] Setting up mnist
I0428 19:49:22.031533 26739 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:22.031539 26739 net.cpp:131] Top shape: 100 (100)
I0428 19:49:22.031543 26739 net.cpp:139] Memory required for data: 314000
I0428 19:49:22.031548 26739 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:22.031554 26739 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:22.031558 26739 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:22.031563 26739 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:22.031571 26739 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:22.031682 26739 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:22.031690 26739 net.cpp:131] Top shape: 100 (100)
I0428 19:49:22.031694 26739 net.cpp:131] Top shape: 100 (100)
I0428 19:49:22.031697 26739 net.cpp:139] Memory required for data: 314800
I0428 19:49:22.031700 26739 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:22.031709 26739 net.cpp:86] Creating Layer conv0
I0428 19:49:22.031713 26739 net.cpp:408] conv0 <- data
I0428 19:49:22.031719 26739 net.cpp:382] conv0 -> conv0
I0428 19:49:22.033437 26739 net.cpp:124] Setting up conv0
I0428 19:49:22.033453 26739 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:22.033457 26739 net.cpp:139] Memory required for data: 1466800
I0428 19:49:22.033468 26739 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:22.033474 26739 net.cpp:86] Creating Layer pool0
I0428 19:49:22.033478 26739 net.cpp:408] pool0 <- conv0
I0428 19:49:22.033483 26739 net.cpp:382] pool0 -> pool0
I0428 19:49:22.033524 26739 net.cpp:124] Setting up pool0
I0428 19:49:22.033529 26739 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:22.033532 26739 net.cpp:139] Memory required for data: 1754800
I0428 19:49:22.033535 26739 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:22.033545 26739 net.cpp:86] Creating Layer conv1
I0428 19:49:22.033548 26739 net.cpp:408] conv1 <- pool0
I0428 19:49:22.033553 26739 net.cpp:382] conv1 -> conv1
I0428 19:49:22.035679 26739 net.cpp:124] Setting up conv1
I0428 19:49:22.035694 26739 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:22.035699 26739 net.cpp:139] Memory required for data: 1882800
I0428 19:49:22.035709 26739 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:22.035724 26739 net.cpp:86] Creating Layer pool1
I0428 19:49:22.035735 26739 net.cpp:408] pool1 <- conv1
I0428 19:49:22.035742 26739 net.cpp:382] pool1 -> pool1
I0428 19:49:22.035782 26739 net.cpp:124] Setting up pool1
I0428 19:49:22.035789 26739 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:22.035799 26739 net.cpp:139] Memory required for data: 1914800
I0428 19:49:22.035802 26739 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:22.035809 26739 net.cpp:86] Creating Layer ip1
I0428 19:49:22.035817 26739 net.cpp:408] ip1 <- pool1
I0428 19:49:22.035823 26739 net.cpp:382] ip1 -> ip1
I0428 19:49:22.035966 26739 net.cpp:124] Setting up ip1
I0428 19:49:22.035975 26739 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:22.035990 26739 net.cpp:139] Memory required for data: 1924800
I0428 19:49:22.035998 26739 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:22.036003 26739 net.cpp:86] Creating Layer relu1
I0428 19:49:22.036007 26739 net.cpp:408] relu1 <- ip1
I0428 19:49:22.036012 26739 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:22.036263 26739 net.cpp:124] Setting up relu1
I0428 19:49:22.036273 26739 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:22.036276 26739 net.cpp:139] Memory required for data: 1934800
I0428 19:49:22.036280 26739 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:22.036288 26739 net.cpp:86] Creating Layer ip2
I0428 19:49:22.036291 26739 net.cpp:408] ip2 <- ip1
I0428 19:49:22.036303 26739 net.cpp:382] ip2 -> ip2
I0428 19:49:22.036417 26739 net.cpp:124] Setting up ip2
I0428 19:49:22.036425 26739 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:22.036428 26739 net.cpp:139] Memory required for data: 1944800
I0428 19:49:22.036434 26739 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:22.036440 26739 net.cpp:86] Creating Layer relu2
I0428 19:49:22.036444 26739 net.cpp:408] relu2 <- ip2
I0428 19:49:22.036449 26739 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:22.036612 26739 net.cpp:124] Setting up relu2
I0428 19:49:22.036623 26739 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:22.036625 26739 net.cpp:139] Memory required for data: 1954800
I0428 19:49:22.036636 26739 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:22.036643 26739 net.cpp:86] Creating Layer ip3
I0428 19:49:22.036646 26739 net.cpp:408] ip3 <- ip2
I0428 19:49:22.036664 26739 net.cpp:382] ip3 -> ip3
I0428 19:49:22.036767 26739 net.cpp:124] Setting up ip3
I0428 19:49:22.036774 26739 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:22.036777 26739 net.cpp:139] Memory required for data: 1958800
I0428 19:49:22.036787 26739 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:22.036798 26739 net.cpp:86] Creating Layer relu3
I0428 19:49:22.036801 26739 net.cpp:408] relu3 <- ip3
I0428 19:49:22.036808 26739 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:22.037693 26739 net.cpp:124] Setting up relu3
I0428 19:49:22.037705 26739 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:22.037709 26739 net.cpp:139] Memory required for data: 1962800
I0428 19:49:22.037713 26739 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:22.037719 26739 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:22.037722 26739 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:22.037727 26739 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:22.037734 26739 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:22.037783 26739 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:22.037791 26739 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:22.037794 26739 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:22.037797 26739 net.cpp:139] Memory required for data: 1970800
I0428 19:49:22.037801 26739 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:22.037806 26739 net.cpp:86] Creating Layer accuracy
I0428 19:49:22.037809 26739 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:22.037814 26739 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:22.037818 26739 net.cpp:382] accuracy -> accuracy
I0428 19:49:22.037827 26739 net.cpp:124] Setting up accuracy
I0428 19:49:22.037830 26739 net.cpp:131] Top shape: (1)
I0428 19:49:22.037833 26739 net.cpp:139] Memory required for data: 1970804
I0428 19:49:22.037837 26739 layer_factory.hpp:77] Creating layer loss
I0428 19:49:22.037840 26739 net.cpp:86] Creating Layer loss
I0428 19:49:22.037843 26739 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:22.037847 26739 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:22.037852 26739 net.cpp:382] loss -> loss
I0428 19:49:22.037858 26739 layer_factory.hpp:77] Creating layer loss
I0428 19:49:22.038100 26739 net.cpp:124] Setting up loss
I0428 19:49:22.038110 26739 net.cpp:131] Top shape: (1)
I0428 19:49:22.038113 26739 net.cpp:134]     with loss weight 1
I0428 19:49:22.038120 26739 net.cpp:139] Memory required for data: 1970808
I0428 19:49:22.038133 26739 net.cpp:200] loss needs backward computation.
I0428 19:49:22.038138 26739 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:22.038143 26739 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:22.038147 26739 net.cpp:200] relu3 needs backward computation.
I0428 19:49:22.038151 26739 net.cpp:200] ip3 needs backward computation.
I0428 19:49:22.038153 26739 net.cpp:200] relu2 needs backward computation.
I0428 19:49:22.038156 26739 net.cpp:200] ip2 needs backward computation.
I0428 19:49:22.038161 26739 net.cpp:200] relu1 needs backward computation.
I0428 19:49:22.038163 26739 net.cpp:200] ip1 needs backward computation.
I0428 19:49:22.038167 26739 net.cpp:200] pool1 needs backward computation.
I0428 19:49:22.038170 26739 net.cpp:200] conv1 needs backward computation.
I0428 19:49:22.038173 26739 net.cpp:200] pool0 needs backward computation.
I0428 19:49:22.038177 26739 net.cpp:200] conv0 needs backward computation.
I0428 19:49:22.038182 26739 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:22.038185 26739 net.cpp:202] mnist does not need backward computation.
I0428 19:49:22.038188 26739 net.cpp:244] This network produces output accuracy
I0428 19:49:22.038199 26739 net.cpp:244] This network produces output loss
I0428 19:49:22.038215 26739 net.cpp:257] Network initialization done.
I0428 19:49:22.038259 26739 solver.cpp:56] Solver scaffolding done.
I0428 19:49:22.038650 26739 caffe.cpp:248] Starting Optimization
I0428 19:49:22.038657 26739 solver.cpp:273] Solving LeNet
I0428 19:49:22.038661 26739 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:22.039531 26739 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:22.043329 26739 blocking_queue.cpp:49] Waiting for data
I0428 19:49:22.116751 26746 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:22.117445 26739 solver.cpp:398]     Test net output #0: accuracy = 0.0662
I0428 19:49:22.117478 26739 solver.cpp:398]     Test net output #1: loss = 2.325 (* 1 = 2.325 loss)
I0428 19:49:22.120215 26739 solver.cpp:219] Iteration 0 (-5.38176e-31 iter/s, 0.0815256s/100 iters), loss = 2.33055
I0428 19:49:22.120257 26739 solver.cpp:238]     Train net output #0: loss = 2.33055 (* 1 = 2.33055 loss)
I0428 19:49:22.120275 26739 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:22.208160 26739 solver.cpp:219] Iteration 100 (1137.73 iter/s, 0.0878941s/100 iters), loss = 0.664499
I0428 19:49:22.208194 26739 solver.cpp:238]     Train net output #0: loss = 0.664499 (* 1 = 0.664499 loss)
I0428 19:49:22.208202 26739 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:22.282470 26739 solver.cpp:219] Iteration 200 (1346.46 iter/s, 0.0742687s/100 iters), loss = 0.600283
I0428 19:49:22.282496 26739 solver.cpp:238]     Train net output #0: loss = 0.600283 (* 1 = 0.600283 loss)
I0428 19:49:22.282502 26739 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:22.352926 26739 solver.cpp:219] Iteration 300 (1420.33 iter/s, 0.0704061s/100 iters), loss = 0.338139
I0428 19:49:22.352967 26739 solver.cpp:238]     Train net output #0: loss = 0.338139 (* 1 = 0.338139 loss)
I0428 19:49:22.352974 26739 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:22.425185 26739 solver.cpp:219] Iteration 400 (1384.55 iter/s, 0.0722258s/100 iters), loss = 0.238271
I0428 19:49:22.425226 26739 solver.cpp:238]     Train net output #0: loss = 0.238271 (* 1 = 0.238271 loss)
I0428 19:49:22.425233 26739 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:22.498962 26739 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:22.573984 26746 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:22.574494 26739 solver.cpp:398]     Test net output #0: accuracy = 0.937
I0428 19:49:22.574530 26739 solver.cpp:398]     Test net output #1: loss = 0.20873 (* 1 = 0.20873 loss)
I0428 19:49:22.575325 26739 solver.cpp:219] Iteration 500 (666.218 iter/s, 0.150101s/100 iters), loss = 0.40028
I0428 19:49:22.575366 26739 solver.cpp:238]     Train net output #0: loss = 0.40028 (* 1 = 0.40028 loss)
I0428 19:49:22.575387 26739 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:22.650285 26739 solver.cpp:219] Iteration 600 (1334.63 iter/s, 0.0749271s/100 iters), loss = 0.21983
I0428 19:49:22.650324 26739 solver.cpp:238]     Train net output #0: loss = 0.21983 (* 1 = 0.21983 loss)
I0428 19:49:22.650331 26739 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:22.723254 26739 solver.cpp:219] Iteration 700 (1371.03 iter/s, 0.0729377s/100 iters), loss = 0.362038
I0428 19:49:22.723294 26739 solver.cpp:238]     Train net output #0: loss = 0.362038 (* 1 = 0.362038 loss)
I0428 19:49:22.723299 26739 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:22.793519 26739 solver.cpp:219] Iteration 800 (1423.83 iter/s, 0.070233s/100 iters), loss = 0.278944
I0428 19:49:22.793560 26739 solver.cpp:238]     Train net output #0: loss = 0.278944 (* 1 = 0.278944 loss)
I0428 19:49:22.793565 26739 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:22.864428 26739 solver.cpp:219] Iteration 900 (1410.95 iter/s, 0.0708743s/100 iters), loss = 0.111377
I0428 19:49:22.864467 26739 solver.cpp:238]     Train net output #0: loss = 0.111377 (* 1 = 0.111377 loss)
I0428 19:49:22.864473 26739 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:22.887928 26745 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:22.934437 26739 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:22.935159 26739 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:22.935590 26739 solver.cpp:311] Iteration 1000, loss = 0.179568
I0428 19:49:22.935621 26739 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:23.011286 26746 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:23.011880 26739 solver.cpp:398]     Test net output #0: accuracy = 0.9595
I0428 19:49:23.011915 26739 solver.cpp:398]     Test net output #1: loss = 0.126595 (* 1 = 0.126595 loss)
I0428 19:49:23.011921 26739 solver.cpp:316] Optimization Done.
I0428 19:49:23.011924 26739 caffe.cpp:259] Optimization Done.
