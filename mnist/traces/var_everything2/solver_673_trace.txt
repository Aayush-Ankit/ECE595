I0428 19:52:52.641053 27646 caffe.cpp:218] Using GPUs 0
I0428 19:52:52.677301 27646 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:53.187283 27646 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test673.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:53.187424 27646 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test673.prototxt
I0428 19:52:53.187806 27646 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:53.187825 27646 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:53.187916 27646 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:53.187990 27646 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:53.188089 27646 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:53.188112 27646 net.cpp:86] Creating Layer mnist
I0428 19:52:53.188120 27646 net.cpp:382] mnist -> data
I0428 19:52:53.188143 27646 net.cpp:382] mnist -> label
I0428 19:52:53.189280 27646 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:53.191844 27646 net.cpp:124] Setting up mnist
I0428 19:52:53.191864 27646 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:53.191869 27646 net.cpp:131] Top shape: 64 (64)
I0428 19:52:53.191872 27646 net.cpp:139] Memory required for data: 200960
I0428 19:52:53.191879 27646 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:53.191927 27646 net.cpp:86] Creating Layer conv0
I0428 19:52:53.191934 27646 net.cpp:408] conv0 <- data
I0428 19:52:53.191948 27646 net.cpp:382] conv0 -> conv0
I0428 19:52:53.484359 27646 net.cpp:124] Setting up conv0
I0428 19:52:53.484390 27646 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:53.484395 27646 net.cpp:139] Memory required for data: 938240
I0428 19:52:53.484432 27646 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:53.484447 27646 net.cpp:86] Creating Layer pool0
I0428 19:52:53.484452 27646 net.cpp:408] pool0 <- conv0
I0428 19:52:53.484457 27646 net.cpp:382] pool0 -> pool0
I0428 19:52:53.484515 27646 net.cpp:124] Setting up pool0
I0428 19:52:53.484527 27646 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:53.484531 27646 net.cpp:139] Memory required for data: 1122560
I0428 19:52:53.484534 27646 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:53.484546 27646 net.cpp:86] Creating Layer conv1
I0428 19:52:53.484550 27646 net.cpp:408] conv1 <- pool0
I0428 19:52:53.484556 27646 net.cpp:382] conv1 -> conv1
I0428 19:52:53.487730 27646 net.cpp:124] Setting up conv1
I0428 19:52:53.487747 27646 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:53.487752 27646 net.cpp:139] Memory required for data: 1941760
I0428 19:52:53.487762 27646 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:53.487771 27646 net.cpp:86] Creating Layer pool1
I0428 19:52:53.487776 27646 net.cpp:408] pool1 <- conv1
I0428 19:52:53.487782 27646 net.cpp:382] pool1 -> pool1
I0428 19:52:53.487828 27646 net.cpp:124] Setting up pool1
I0428 19:52:53.487833 27646 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:53.487838 27646 net.cpp:139] Memory required for data: 2146560
I0428 19:52:53.487840 27646 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:53.487854 27646 net.cpp:86] Creating Layer ip1
I0428 19:52:53.487859 27646 net.cpp:408] ip1 <- pool1
I0428 19:52:53.487864 27646 net.cpp:382] ip1 -> ip1
I0428 19:52:53.488237 27646 net.cpp:124] Setting up ip1
I0428 19:52:53.488246 27646 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:53.488250 27646 net.cpp:139] Memory required for data: 2159360
I0428 19:52:53.488258 27646 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:53.488265 27646 net.cpp:86] Creating Layer relu1
I0428 19:52:53.488268 27646 net.cpp:408] relu1 <- ip1
I0428 19:52:53.488273 27646 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:53.488466 27646 net.cpp:124] Setting up relu1
I0428 19:52:53.488476 27646 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:53.488479 27646 net.cpp:139] Memory required for data: 2172160
I0428 19:52:53.488482 27646 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:53.488489 27646 net.cpp:86] Creating Layer ip2
I0428 19:52:53.488492 27646 net.cpp:408] ip2 <- ip1
I0428 19:52:53.488498 27646 net.cpp:382] ip2 -> ip2
I0428 19:52:53.488612 27646 net.cpp:124] Setting up ip2
I0428 19:52:53.488620 27646 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:53.488625 27646 net.cpp:139] Memory required for data: 2174720
I0428 19:52:53.488631 27646 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:53.488637 27646 net.cpp:86] Creating Layer relu2
I0428 19:52:53.488641 27646 net.cpp:408] relu2 <- ip2
I0428 19:52:53.488646 27646 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:53.489497 27646 net.cpp:124] Setting up relu2
I0428 19:52:53.489513 27646 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:53.489517 27646 net.cpp:139] Memory required for data: 2177280
I0428 19:52:53.489521 27646 layer_factory.hpp:77] Creating layer loss
I0428 19:52:53.489528 27646 net.cpp:86] Creating Layer loss
I0428 19:52:53.489531 27646 net.cpp:408] loss <- ip2
I0428 19:52:53.489537 27646 net.cpp:408] loss <- label
I0428 19:52:53.489542 27646 net.cpp:382] loss -> loss
I0428 19:52:53.489564 27646 layer_factory.hpp:77] Creating layer loss
I0428 19:52:53.489825 27646 net.cpp:124] Setting up loss
I0428 19:52:53.489836 27646 net.cpp:131] Top shape: (1)
I0428 19:52:53.489840 27646 net.cpp:134]     with loss weight 1
I0428 19:52:53.489855 27646 net.cpp:139] Memory required for data: 2177284
I0428 19:52:53.489858 27646 net.cpp:200] loss needs backward computation.
I0428 19:52:53.489862 27646 net.cpp:200] relu2 needs backward computation.
I0428 19:52:53.489866 27646 net.cpp:200] ip2 needs backward computation.
I0428 19:52:53.489869 27646 net.cpp:200] relu1 needs backward computation.
I0428 19:52:53.489872 27646 net.cpp:200] ip1 needs backward computation.
I0428 19:52:53.489888 27646 net.cpp:200] pool1 needs backward computation.
I0428 19:52:53.489892 27646 net.cpp:200] conv1 needs backward computation.
I0428 19:52:53.489895 27646 net.cpp:200] pool0 needs backward computation.
I0428 19:52:53.489898 27646 net.cpp:200] conv0 needs backward computation.
I0428 19:52:53.489902 27646 net.cpp:202] mnist does not need backward computation.
I0428 19:52:53.489907 27646 net.cpp:244] This network produces output loss
I0428 19:52:53.489917 27646 net.cpp:257] Network initialization done.
I0428 19:52:53.490283 27646 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test673.prototxt
I0428 19:52:53.490315 27646 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:53.490407 27646 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:53.490483 27646 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:53.490530 27646 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:53.490543 27646 net.cpp:86] Creating Layer mnist
I0428 19:52:53.490547 27646 net.cpp:382] mnist -> data
I0428 19:52:53.490556 27646 net.cpp:382] mnist -> label
I0428 19:52:53.490651 27646 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:53.492753 27646 net.cpp:124] Setting up mnist
I0428 19:52:53.492769 27646 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:53.492774 27646 net.cpp:131] Top shape: 100 (100)
I0428 19:52:53.492779 27646 net.cpp:139] Memory required for data: 314000
I0428 19:52:53.492782 27646 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:53.492794 27646 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:53.492799 27646 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:53.492805 27646 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:53.492817 27646 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:53.492861 27646 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:53.492887 27646 net.cpp:131] Top shape: 100 (100)
I0428 19:52:53.492894 27646 net.cpp:131] Top shape: 100 (100)
I0428 19:52:53.492899 27646 net.cpp:139] Memory required for data: 314800
I0428 19:52:53.492905 27646 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:53.492919 27646 net.cpp:86] Creating Layer conv0
I0428 19:52:53.492926 27646 net.cpp:408] conv0 <- data
I0428 19:52:53.492935 27646 net.cpp:382] conv0 -> conv0
I0428 19:52:53.494783 27646 net.cpp:124] Setting up conv0
I0428 19:52:53.494799 27646 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:53.494803 27646 net.cpp:139] Memory required for data: 1466800
I0428 19:52:53.494813 27646 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:53.494820 27646 net.cpp:86] Creating Layer pool0
I0428 19:52:53.494824 27646 net.cpp:408] pool0 <- conv0
I0428 19:52:53.494830 27646 net.cpp:382] pool0 -> pool0
I0428 19:52:53.494870 27646 net.cpp:124] Setting up pool0
I0428 19:52:53.494875 27646 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:53.494879 27646 net.cpp:139] Memory required for data: 1754800
I0428 19:52:53.494882 27646 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:53.494890 27646 net.cpp:86] Creating Layer conv1
I0428 19:52:53.494894 27646 net.cpp:408] conv1 <- pool0
I0428 19:52:53.494899 27646 net.cpp:382] conv1 -> conv1
I0428 19:52:53.496558 27646 net.cpp:124] Setting up conv1
I0428 19:52:53.496577 27646 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:53.496582 27646 net.cpp:139] Memory required for data: 3034800
I0428 19:52:53.496592 27646 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:53.496598 27646 net.cpp:86] Creating Layer pool1
I0428 19:52:53.496603 27646 net.cpp:408] pool1 <- conv1
I0428 19:52:53.496608 27646 net.cpp:382] pool1 -> pool1
I0428 19:52:53.496647 27646 net.cpp:124] Setting up pool1
I0428 19:52:53.496652 27646 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:53.496656 27646 net.cpp:139] Memory required for data: 3354800
I0428 19:52:53.496667 27646 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:53.496673 27646 net.cpp:86] Creating Layer ip1
I0428 19:52:53.496677 27646 net.cpp:408] ip1 <- pool1
I0428 19:52:53.496682 27646 net.cpp:382] ip1 -> ip1
I0428 19:52:53.497058 27646 net.cpp:124] Setting up ip1
I0428 19:52:53.497069 27646 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:53.497072 27646 net.cpp:139] Memory required for data: 3374800
I0428 19:52:53.497081 27646 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:53.497093 27646 net.cpp:86] Creating Layer relu1
I0428 19:52:53.497097 27646 net.cpp:408] relu1 <- ip1
I0428 19:52:53.497108 27646 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:53.497287 27646 net.cpp:124] Setting up relu1
I0428 19:52:53.497298 27646 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:53.497300 27646 net.cpp:139] Memory required for data: 3394800
I0428 19:52:53.497304 27646 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:53.497311 27646 net.cpp:86] Creating Layer ip2
I0428 19:52:53.497314 27646 net.cpp:408] ip2 <- ip1
I0428 19:52:53.497321 27646 net.cpp:382] ip2 -> ip2
I0428 19:52:53.497436 27646 net.cpp:124] Setting up ip2
I0428 19:52:53.497443 27646 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:53.497447 27646 net.cpp:139] Memory required for data: 3398800
I0428 19:52:53.497452 27646 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:53.497457 27646 net.cpp:86] Creating Layer relu2
I0428 19:52:53.497460 27646 net.cpp:408] relu2 <- ip2
I0428 19:52:53.497465 27646 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:53.497756 27646 net.cpp:124] Setting up relu2
I0428 19:52:53.497767 27646 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:53.497771 27646 net.cpp:139] Memory required for data: 3402800
I0428 19:52:53.497774 27646 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:53.497779 27646 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:53.497783 27646 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:53.497788 27646 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:53.497807 27646 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:53.497845 27646 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:53.497851 27646 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:53.497855 27646 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:53.497859 27646 net.cpp:139] Memory required for data: 3410800
I0428 19:52:53.497861 27646 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:53.497867 27646 net.cpp:86] Creating Layer accuracy
I0428 19:52:53.497871 27646 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:53.497876 27646 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:53.497880 27646 net.cpp:382] accuracy -> accuracy
I0428 19:52:53.497887 27646 net.cpp:124] Setting up accuracy
I0428 19:52:53.497891 27646 net.cpp:131] Top shape: (1)
I0428 19:52:53.497895 27646 net.cpp:139] Memory required for data: 3410804
I0428 19:52:53.497897 27646 layer_factory.hpp:77] Creating layer loss
I0428 19:52:53.497902 27646 net.cpp:86] Creating Layer loss
I0428 19:52:53.497912 27646 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:53.497916 27646 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:53.497921 27646 net.cpp:382] loss -> loss
I0428 19:52:53.497936 27646 layer_factory.hpp:77] Creating layer loss
I0428 19:52:53.498183 27646 net.cpp:124] Setting up loss
I0428 19:52:53.498193 27646 net.cpp:131] Top shape: (1)
I0428 19:52:53.498196 27646 net.cpp:134]     with loss weight 1
I0428 19:52:53.498208 27646 net.cpp:139] Memory required for data: 3410808
I0428 19:52:53.498212 27646 net.cpp:200] loss needs backward computation.
I0428 19:52:53.498217 27646 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:53.498221 27646 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:53.498231 27646 net.cpp:200] relu2 needs backward computation.
I0428 19:52:53.498234 27646 net.cpp:200] ip2 needs backward computation.
I0428 19:52:53.498237 27646 net.cpp:200] relu1 needs backward computation.
I0428 19:52:53.498240 27646 net.cpp:200] ip1 needs backward computation.
I0428 19:52:53.498250 27646 net.cpp:200] pool1 needs backward computation.
I0428 19:52:53.498253 27646 net.cpp:200] conv1 needs backward computation.
I0428 19:52:53.498257 27646 net.cpp:200] pool0 needs backward computation.
I0428 19:52:53.498260 27646 net.cpp:200] conv0 needs backward computation.
I0428 19:52:53.498265 27646 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:53.498268 27646 net.cpp:202] mnist does not need backward computation.
I0428 19:52:53.498270 27646 net.cpp:244] This network produces output accuracy
I0428 19:52:53.498275 27646 net.cpp:244] This network produces output loss
I0428 19:52:53.498292 27646 net.cpp:257] Network initialization done.
I0428 19:52:53.498333 27646 solver.cpp:56] Solver scaffolding done.
I0428 19:52:53.498632 27646 caffe.cpp:248] Starting Optimization
I0428 19:52:53.498641 27646 solver.cpp:273] Solving LeNet
I0428 19:52:53.498644 27646 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:53.499498 27646 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:53.503341 27646 blocking_queue.cpp:49] Waiting for data
I0428 19:52:53.574244 27653 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:53.574738 27646 solver.cpp:398]     Test net output #0: accuracy = 0.1126
I0428 19:52:53.574759 27646 solver.cpp:398]     Test net output #1: loss = 2.30722 (* 1 = 2.30722 loss)
I0428 19:52:53.577965 27646 solver.cpp:219] Iteration 0 (0 iter/s, 0.0792903s/100 iters), loss = 2.31326
I0428 19:52:53.577989 27646 solver.cpp:238]     Train net output #0: loss = 2.31326 (* 1 = 2.31326 loss)
I0428 19:52:53.578016 27646 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:53.683502 27646 solver.cpp:219] Iteration 100 (947.861 iter/s, 0.105501s/100 iters), loss = 0.216469
I0428 19:52:53.683533 27646 solver.cpp:238]     Train net output #0: loss = 0.216469 (* 1 = 0.216469 loss)
I0428 19:52:53.683542 27646 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:53.787456 27646 solver.cpp:219] Iteration 200 (962.358 iter/s, 0.103911s/100 iters), loss = 0.192191
I0428 19:52:53.787502 27646 solver.cpp:238]     Train net output #0: loss = 0.192191 (* 1 = 0.192191 loss)
I0428 19:52:53.787509 27646 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:53.900166 27646 solver.cpp:219] Iteration 300 (887.679 iter/s, 0.112653s/100 iters), loss = 0.175923
I0428 19:52:53.900202 27646 solver.cpp:238]     Train net output #0: loss = 0.175923 (* 1 = 0.175923 loss)
I0428 19:52:53.900210 27646 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:54.003181 27646 solver.cpp:219] Iteration 400 (971.163 iter/s, 0.102969s/100 iters), loss = 0.0760663
I0428 19:52:54.003208 27646 solver.cpp:238]     Train net output #0: loss = 0.0760663 (* 1 = 0.0760663 loss)
I0428 19:52:54.003216 27646 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:54.098758 27646 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:54.174249 27653 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:54.174736 27646 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 19:52:54.174760 27646 solver.cpp:398]     Test net output #1: loss = 0.108656 (* 1 = 0.108656 loss)
I0428 19:52:54.175815 27646 solver.cpp:219] Iteration 500 (579.401 iter/s, 0.172592s/100 iters), loss = 0.107226
I0428 19:52:54.175866 27646 solver.cpp:238]     Train net output #0: loss = 0.107226 (* 1 = 0.107226 loss)
I0428 19:52:54.175875 27646 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:54.281543 27646 solver.cpp:219] Iteration 600 (946.374 iter/s, 0.105666s/100 iters), loss = 0.0998126
I0428 19:52:54.281587 27646 solver.cpp:238]     Train net output #0: loss = 0.0998126 (* 1 = 0.0998126 loss)
I0428 19:52:54.281595 27646 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:54.380744 27646 solver.cpp:219] Iteration 700 (1008.67 iter/s, 0.0991406s/100 iters), loss = 0.115622
I0428 19:52:54.380802 27646 solver.cpp:238]     Train net output #0: loss = 0.115622 (* 1 = 0.115622 loss)
I0428 19:52:54.380830 27646 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:54.496345 27646 solver.cpp:219] Iteration 800 (865.547 iter/s, 0.115534s/100 iters), loss = 0.271411
I0428 19:52:54.496398 27646 solver.cpp:238]     Train net output #0: loss = 0.271411 (* 1 = 0.271411 loss)
I0428 19:52:54.496417 27646 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:54.613991 27646 solver.cpp:219] Iteration 900 (850.472 iter/s, 0.117582s/100 iters), loss = 0.16563
I0428 19:52:54.614044 27646 solver.cpp:238]     Train net output #0: loss = 0.16563 (* 1 = 0.16563 loss)
I0428 19:52:54.614058 27646 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:54.652485 27652 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:54.722990 27646 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:54.724604 27646 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:54.725493 27646 solver.cpp:311] Iteration 1000, loss = 0.108409
I0428 19:52:54.725515 27646 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:54.805593 27653 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:54.806159 27646 solver.cpp:398]     Test net output #0: accuracy = 0.978
I0428 19:52:54.806191 27646 solver.cpp:398]     Test net output #1: loss = 0.0693996 (* 1 = 0.0693996 loss)
I0428 19:52:54.806200 27646 solver.cpp:316] Optimization Done.
I0428 19:52:54.806203 27646 caffe.cpp:259] Optimization Done.
