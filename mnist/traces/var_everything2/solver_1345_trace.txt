I0428 20:19:36.114785  1393 caffe.cpp:218] Using GPUs 0
I0428 20:19:36.152755  1393 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:36.676862  1393 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1345.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:36.677004  1393 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1345.prototxt
I0428 20:19:36.677419  1393 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:36.677441  1393 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:36.677546  1393 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:36.677625  1393 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:36.677721  1393 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:36.677745  1393 net.cpp:86] Creating Layer mnist
I0428 20:19:36.677754  1393 net.cpp:382] mnist -> data
I0428 20:19:36.677775  1393 net.cpp:382] mnist -> label
I0428 20:19:36.678874  1393 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:36.681376  1393 net.cpp:124] Setting up mnist
I0428 20:19:36.681394  1393 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:36.681401  1393 net.cpp:131] Top shape: 64 (64)
I0428 20:19:36.681404  1393 net.cpp:139] Memory required for data: 200960
I0428 20:19:36.681411  1393 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:36.681438  1393 net.cpp:86] Creating Layer conv0
I0428 20:19:36.681460  1393 net.cpp:408] conv0 <- data
I0428 20:19:36.681478  1393 net.cpp:382] conv0 -> conv0
I0428 20:19:36.974243  1393 net.cpp:124] Setting up conv0
I0428 20:19:36.974274  1393 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:36.974279  1393 net.cpp:139] Memory required for data: 7573760
I0428 20:19:36.974298  1393 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:36.974311  1393 net.cpp:86] Creating Layer pool0
I0428 20:19:36.974316  1393 net.cpp:408] pool0 <- conv0
I0428 20:19:36.974323  1393 net.cpp:382] pool0 -> pool0
I0428 20:19:36.974382  1393 net.cpp:124] Setting up pool0
I0428 20:19:36.974391  1393 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:36.974395  1393 net.cpp:139] Memory required for data: 9416960
I0428 20:19:36.974400  1393 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:36.974411  1393 net.cpp:86] Creating Layer conv1
I0428 20:19:36.974416  1393 net.cpp:408] conv1 <- pool0
I0428 20:19:36.974421  1393 net.cpp:382] conv1 -> conv1
I0428 20:19:36.976775  1393 net.cpp:124] Setting up conv1
I0428 20:19:36.976793  1393 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:36.976797  1393 net.cpp:139] Memory required for data: 9826560
I0428 20:19:36.976807  1393 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:36.976876  1393 net.cpp:86] Creating Layer pool1
I0428 20:19:36.976881  1393 net.cpp:408] pool1 <- conv1
I0428 20:19:36.976887  1393 net.cpp:382] pool1 -> pool1
I0428 20:19:36.976933  1393 net.cpp:124] Setting up pool1
I0428 20:19:36.976940  1393 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:36.976944  1393 net.cpp:139] Memory required for data: 9928960
I0428 20:19:36.976948  1393 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:36.976961  1393 net.cpp:86] Creating Layer ip1
I0428 20:19:36.976965  1393 net.cpp:408] ip1 <- pool1
I0428 20:19:36.976971  1393 net.cpp:382] ip1 -> ip1
I0428 20:19:36.977125  1393 net.cpp:124] Setting up ip1
I0428 20:19:36.977134  1393 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:36.977138  1393 net.cpp:139] Memory required for data: 9931520
I0428 20:19:36.977147  1393 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:36.977154  1393 net.cpp:86] Creating Layer relu1
I0428 20:19:36.977157  1393 net.cpp:408] relu1 <- ip1
I0428 20:19:36.977162  1393 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:36.977357  1393 net.cpp:124] Setting up relu1
I0428 20:19:36.977368  1393 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:36.977371  1393 net.cpp:139] Memory required for data: 9934080
I0428 20:19:36.977375  1393 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:36.977383  1393 net.cpp:86] Creating Layer ip2
I0428 20:19:36.977386  1393 net.cpp:408] ip2 <- ip1
I0428 20:19:36.977392  1393 net.cpp:382] ip2 -> ip2
I0428 20:19:36.977509  1393 net.cpp:124] Setting up ip2
I0428 20:19:36.977516  1393 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:36.977520  1393 net.cpp:139] Memory required for data: 9946880
I0428 20:19:36.977526  1393 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:36.977533  1393 net.cpp:86] Creating Layer relu2
I0428 20:19:36.977537  1393 net.cpp:408] relu2 <- ip2
I0428 20:19:36.977542  1393 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:36.978387  1393 net.cpp:124] Setting up relu2
I0428 20:19:36.978402  1393 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:36.978406  1393 net.cpp:139] Memory required for data: 9959680
I0428 20:19:36.978410  1393 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:36.978420  1393 net.cpp:86] Creating Layer ip3
I0428 20:19:36.978425  1393 net.cpp:408] ip3 <- ip2
I0428 20:19:36.978431  1393 net.cpp:382] ip3 -> ip3
I0428 20:19:36.978552  1393 net.cpp:124] Setting up ip3
I0428 20:19:36.978561  1393 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:36.978565  1393 net.cpp:139] Memory required for data: 9962240
I0428 20:19:36.978574  1393 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:36.978580  1393 net.cpp:86] Creating Layer relu3
I0428 20:19:36.978584  1393 net.cpp:408] relu3 <- ip3
I0428 20:19:36.978588  1393 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:36.978786  1393 net.cpp:124] Setting up relu3
I0428 20:19:36.978797  1393 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:36.978801  1393 net.cpp:139] Memory required for data: 9964800
I0428 20:19:36.978804  1393 layer_factory.hpp:77] Creating layer loss
I0428 20:19:36.978811  1393 net.cpp:86] Creating Layer loss
I0428 20:19:36.978816  1393 net.cpp:408] loss <- ip3
I0428 20:19:36.978819  1393 net.cpp:408] loss <- label
I0428 20:19:36.978826  1393 net.cpp:382] loss -> loss
I0428 20:19:36.978847  1393 layer_factory.hpp:77] Creating layer loss
I0428 20:19:36.979125  1393 net.cpp:124] Setting up loss
I0428 20:19:36.979135  1393 net.cpp:131] Top shape: (1)
I0428 20:19:36.979140  1393 net.cpp:134]     with loss weight 1
I0428 20:19:36.979156  1393 net.cpp:139] Memory required for data: 9964804
I0428 20:19:36.979161  1393 net.cpp:200] loss needs backward computation.
I0428 20:19:36.979164  1393 net.cpp:200] relu3 needs backward computation.
I0428 20:19:36.979168  1393 net.cpp:200] ip3 needs backward computation.
I0428 20:19:36.979171  1393 net.cpp:200] relu2 needs backward computation.
I0428 20:19:36.979174  1393 net.cpp:200] ip2 needs backward computation.
I0428 20:19:36.979177  1393 net.cpp:200] relu1 needs backward computation.
I0428 20:19:36.979182  1393 net.cpp:200] ip1 needs backward computation.
I0428 20:19:36.979184  1393 net.cpp:200] pool1 needs backward computation.
I0428 20:19:36.979187  1393 net.cpp:200] conv1 needs backward computation.
I0428 20:19:36.979192  1393 net.cpp:200] pool0 needs backward computation.
I0428 20:19:36.979194  1393 net.cpp:200] conv0 needs backward computation.
I0428 20:19:36.979198  1393 net.cpp:202] mnist does not need backward computation.
I0428 20:19:36.979202  1393 net.cpp:244] This network produces output loss
I0428 20:19:36.979213  1393 net.cpp:257] Network initialization done.
I0428 20:19:36.979598  1393 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1345.prototxt
I0428 20:19:36.979629  1393 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:36.979743  1393 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:36.979841  1393 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:36.979892  1393 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:36.979907  1393 net.cpp:86] Creating Layer mnist
I0428 20:19:36.979915  1393 net.cpp:382] mnist -> data
I0428 20:19:36.979924  1393 net.cpp:382] mnist -> label
I0428 20:19:36.980027  1393 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:36.982244  1393 net.cpp:124] Setting up mnist
I0428 20:19:36.982260  1393 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:36.982266  1393 net.cpp:131] Top shape: 100 (100)
I0428 20:19:36.982270  1393 net.cpp:139] Memory required for data: 314000
I0428 20:19:36.982273  1393 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:36.982316  1393 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:36.982321  1393 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:36.982327  1393 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:36.982336  1393 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:36.982389  1393 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:36.982398  1393 net.cpp:131] Top shape: 100 (100)
I0428 20:19:36.982403  1393 net.cpp:131] Top shape: 100 (100)
I0428 20:19:36.982405  1393 net.cpp:139] Memory required for data: 314800
I0428 20:19:36.982409  1393 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:36.982420  1393 net.cpp:86] Creating Layer conv0
I0428 20:19:36.982424  1393 net.cpp:408] conv0 <- data
I0428 20:19:36.982431  1393 net.cpp:382] conv0 -> conv0
I0428 20:19:36.984436  1393 net.cpp:124] Setting up conv0
I0428 20:19:36.984453  1393 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:36.984459  1393 net.cpp:139] Memory required for data: 11834800
I0428 20:19:36.984472  1393 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:36.984480  1393 net.cpp:86] Creating Layer pool0
I0428 20:19:36.984483  1393 net.cpp:408] pool0 <- conv0
I0428 20:19:36.984489  1393 net.cpp:382] pool0 -> pool0
I0428 20:19:36.984534  1393 net.cpp:124] Setting up pool0
I0428 20:19:36.984540  1393 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:36.984544  1393 net.cpp:139] Memory required for data: 14714800
I0428 20:19:36.984547  1393 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:36.984558  1393 net.cpp:86] Creating Layer conv1
I0428 20:19:36.984562  1393 net.cpp:408] conv1 <- pool0
I0428 20:19:36.984570  1393 net.cpp:382] conv1 -> conv1
I0428 20:19:36.986574  1393 net.cpp:124] Setting up conv1
I0428 20:19:36.986591  1393 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:36.986595  1393 net.cpp:139] Memory required for data: 15354800
I0428 20:19:36.986605  1393 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:36.986613  1393 net.cpp:86] Creating Layer pool1
I0428 20:19:36.986618  1393 net.cpp:408] pool1 <- conv1
I0428 20:19:36.986626  1393 net.cpp:382] pool1 -> pool1
I0428 20:19:36.986670  1393 net.cpp:124] Setting up pool1
I0428 20:19:36.986680  1393 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:36.986682  1393 net.cpp:139] Memory required for data: 15514800
I0428 20:19:36.986686  1393 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:36.986693  1393 net.cpp:86] Creating Layer ip1
I0428 20:19:36.986698  1393 net.cpp:408] ip1 <- pool1
I0428 20:19:36.986706  1393 net.cpp:382] ip1 -> ip1
I0428 20:19:36.986857  1393 net.cpp:124] Setting up ip1
I0428 20:19:36.986867  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.986882  1393 net.cpp:139] Memory required for data: 15518800
I0428 20:19:36.986894  1393 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:36.986901  1393 net.cpp:86] Creating Layer relu1
I0428 20:19:36.986904  1393 net.cpp:408] relu1 <- ip1
I0428 20:19:36.986912  1393 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:36.987162  1393 net.cpp:124] Setting up relu1
I0428 20:19:36.987174  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.987179  1393 net.cpp:139] Memory required for data: 15522800
I0428 20:19:36.987182  1393 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:36.987191  1393 net.cpp:86] Creating Layer ip2
I0428 20:19:36.987195  1393 net.cpp:408] ip2 <- ip1
I0428 20:19:36.987201  1393 net.cpp:382] ip2 -> ip2
I0428 20:19:36.987349  1393 net.cpp:124] Setting up ip2
I0428 20:19:36.987359  1393 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:36.987362  1393 net.cpp:139] Memory required for data: 15542800
I0428 20:19:36.987368  1393 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:36.987375  1393 net.cpp:86] Creating Layer relu2
I0428 20:19:36.987383  1393 net.cpp:408] relu2 <- ip2
I0428 20:19:36.987390  1393 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:36.987581  1393 net.cpp:124] Setting up relu2
I0428 20:19:36.987594  1393 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:36.987607  1393 net.cpp:139] Memory required for data: 15562800
I0428 20:19:36.987609  1393 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:36.987618  1393 net.cpp:86] Creating Layer ip3
I0428 20:19:36.987622  1393 net.cpp:408] ip3 <- ip2
I0428 20:19:36.987627  1393 net.cpp:382] ip3 -> ip3
I0428 20:19:36.987751  1393 net.cpp:124] Setting up ip3
I0428 20:19:36.987761  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.987763  1393 net.cpp:139] Memory required for data: 15566800
I0428 20:19:36.987773  1393 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:36.987781  1393 net.cpp:86] Creating Layer relu3
I0428 20:19:36.987784  1393 net.cpp:408] relu3 <- ip3
I0428 20:19:36.987789  1393 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:36.988708  1393 net.cpp:124] Setting up relu3
I0428 20:19:36.988723  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.988728  1393 net.cpp:139] Memory required for data: 15570800
I0428 20:19:36.988731  1393 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:36.988739  1393 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:36.988742  1393 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:36.988749  1393 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:36.988756  1393 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:36.988807  1393 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:36.988821  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.988826  1393 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:36.988828  1393 net.cpp:139] Memory required for data: 15578800
I0428 20:19:36.988840  1393 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:36.988847  1393 net.cpp:86] Creating Layer accuracy
I0428 20:19:36.988850  1393 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:36.988855  1393 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:36.988862  1393 net.cpp:382] accuracy -> accuracy
I0428 20:19:36.988872  1393 net.cpp:124] Setting up accuracy
I0428 20:19:36.988878  1393 net.cpp:131] Top shape: (1)
I0428 20:19:36.988880  1393 net.cpp:139] Memory required for data: 15578804
I0428 20:19:36.988884  1393 layer_factory.hpp:77] Creating layer loss
I0428 20:19:36.988895  1393 net.cpp:86] Creating Layer loss
I0428 20:19:36.988899  1393 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:36.988909  1393 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:36.988916  1393 net.cpp:382] loss -> loss
I0428 20:19:36.988930  1393 layer_factory.hpp:77] Creating layer loss
I0428 20:19:36.989217  1393 net.cpp:124] Setting up loss
I0428 20:19:36.989229  1393 net.cpp:131] Top shape: (1)
I0428 20:19:36.989233  1393 net.cpp:134]     with loss weight 1
I0428 20:19:36.989253  1393 net.cpp:139] Memory required for data: 15578808
I0428 20:19:36.989258  1393 net.cpp:200] loss needs backward computation.
I0428 20:19:36.989261  1393 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:36.989267  1393 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:36.989270  1393 net.cpp:200] relu3 needs backward computation.
I0428 20:19:36.989274  1393 net.cpp:200] ip3 needs backward computation.
I0428 20:19:36.989277  1393 net.cpp:200] relu2 needs backward computation.
I0428 20:19:36.989280  1393 net.cpp:200] ip2 needs backward computation.
I0428 20:19:36.989284  1393 net.cpp:200] relu1 needs backward computation.
I0428 20:19:36.989286  1393 net.cpp:200] ip1 needs backward computation.
I0428 20:19:36.989290  1393 net.cpp:200] pool1 needs backward computation.
I0428 20:19:36.989295  1393 net.cpp:200] conv1 needs backward computation.
I0428 20:19:36.989298  1393 net.cpp:200] pool0 needs backward computation.
I0428 20:19:36.989302  1393 net.cpp:200] conv0 needs backward computation.
I0428 20:19:36.989306  1393 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:36.989310  1393 net.cpp:202] mnist does not need backward computation.
I0428 20:19:36.989313  1393 net.cpp:244] This network produces output accuracy
I0428 20:19:36.989317  1393 net.cpp:244] This network produces output loss
I0428 20:19:36.989331  1393 net.cpp:257] Network initialization done.
I0428 20:19:36.989382  1393 solver.cpp:56] Solver scaffolding done.
I0428 20:19:36.989805  1393 caffe.cpp:248] Starting Optimization
I0428 20:19:36.989812  1393 solver.cpp:273] Solving LeNet
I0428 20:19:36.989815  1393 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:36.990846  1393 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:36.999166  1393 blocking_queue.cpp:49] Waiting for data
I0428 20:19:37.066282  1400 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:37.067340  1393 solver.cpp:398]     Test net output #0: accuracy = 0.1144
I0428 20:19:37.067364  1393 solver.cpp:398]     Test net output #1: loss = 2.30254 (* 1 = 2.30254 loss)
I0428 20:19:37.071948  1393 solver.cpp:219] Iteration 0 (-9.89317e-43 iter/s, 0.0821002s/100 iters), loss = 2.30248
I0428 20:19:37.071976  1393 solver.cpp:238]     Train net output #0: loss = 2.30248 (* 1 = 2.30248 loss)
I0428 20:19:37.071990  1393 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:37.212446  1393 solver.cpp:219] Iteration 100 (711.972 iter/s, 0.140455s/100 iters), loss = 0.651392
I0428 20:19:37.212476  1393 solver.cpp:238]     Train net output #0: loss = 0.651392 (* 1 = 0.651392 loss)
I0428 20:19:37.212483  1393 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:37.347822  1393 solver.cpp:219] Iteration 200 (738.919 iter/s, 0.135333s/100 iters), loss = 0.79202
I0428 20:19:37.347864  1393 solver.cpp:238]     Train net output #0: loss = 0.79202 (* 1 = 0.79202 loss)
I0428 20:19:37.347872  1393 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:37.489065  1393 solver.cpp:219] Iteration 300 (708.214 iter/s, 0.1412s/100 iters), loss = 0.796196
I0428 20:19:37.489111  1393 solver.cpp:238]     Train net output #0: loss = 0.796196 (* 1 = 0.796196 loss)
I0428 20:19:37.489123  1393 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:37.640552  1393 solver.cpp:219] Iteration 400 (660.38 iter/s, 0.151428s/100 iters), loss = 0.520099
I0428 20:19:37.640592  1393 solver.cpp:238]     Train net output #0: loss = 0.520099 (* 1 = 0.520099 loss)
I0428 20:19:37.640604  1393 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:37.789644  1393 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:37.864033  1400 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:37.866447  1393 solver.cpp:398]     Test net output #0: accuracy = 0.7723
I0428 20:19:37.866472  1393 solver.cpp:398]     Test net output #1: loss = 0.577738 (* 1 = 0.577738 loss)
I0428 20:19:37.867772  1393 solver.cpp:219] Iteration 500 (440.205 iter/s, 0.227167s/100 iters), loss = 0.477797
I0428 20:19:37.867817  1393 solver.cpp:238]     Train net output #0: loss = 0.477797 (* 1 = 0.477797 loss)
I0428 20:19:37.867826  1393 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:38.015615  1393 solver.cpp:219] Iteration 600 (676.66 iter/s, 0.147785s/100 iters), loss = 0.499219
I0428 20:19:38.015657  1393 solver.cpp:238]     Train net output #0: loss = 0.499219 (* 1 = 0.499219 loss)
I0428 20:19:38.015668  1393 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:38.168608  1393 solver.cpp:219] Iteration 700 (653.862 iter/s, 0.152937s/100 iters), loss = 0.770371
I0428 20:19:38.168650  1393 solver.cpp:238]     Train net output #0: loss = 0.770371 (* 1 = 0.770371 loss)
I0428 20:19:38.168660  1393 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:38.327399  1393 solver.cpp:219] Iteration 800 (629.979 iter/s, 0.158735s/100 iters), loss = 0.716627
I0428 20:19:38.327450  1393 solver.cpp:238]     Train net output #0: loss = 0.716627 (* 1 = 0.716627 loss)
I0428 20:19:38.327461  1393 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:38.486985  1393 solver.cpp:219] Iteration 900 (626.87 iter/s, 0.159523s/100 iters), loss = 0.76284
I0428 20:19:38.487030  1393 solver.cpp:238]     Train net output #0: loss = 0.76284 (* 1 = 0.76284 loss)
I0428 20:19:38.487040  1393 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:38.538955  1399 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:38.639797  1393 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:38.641639  1393 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:38.642838  1393 solver.cpp:311] Iteration 1000, loss = 0.630936
I0428 20:19:38.642863  1393 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:38.715823  1400 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:38.718322  1393 solver.cpp:398]     Test net output #0: accuracy = 0.7831
I0428 20:19:38.718344  1393 solver.cpp:398]     Test net output #1: loss = 0.536293 (* 1 = 0.536293 loss)
I0428 20:19:38.718361  1393 solver.cpp:316] Optimization Done.
I0428 20:19:38.718364  1393 caffe.cpp:259] Optimization Done.
