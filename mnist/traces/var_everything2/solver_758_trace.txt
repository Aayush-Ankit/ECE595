I0428 19:56:24.414335 28427 caffe.cpp:218] Using GPUs 0
I0428 19:56:24.452273 28427 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:24.905568 28427 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test758.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:24.905730 28427 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test758.prototxt
I0428 19:56:24.906077 28427 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:24.906111 28427 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:24.906188 28427 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:24.906251 28427 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:24.906333 28427 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:24.906352 28427 net.cpp:86] Creating Layer mnist
I0428 19:56:24.906360 28427 net.cpp:382] mnist -> data
I0428 19:56:24.906378 28427 net.cpp:382] mnist -> label
I0428 19:56:24.907343 28427 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:24.909819 28427 net.cpp:124] Setting up mnist
I0428 19:56:24.909835 28427 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:24.909840 28427 net.cpp:131] Top shape: 64 (64)
I0428 19:56:24.909843 28427 net.cpp:139] Memory required for data: 200960
I0428 19:56:24.909849 28427 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:24.909864 28427 net.cpp:86] Creating Layer conv0
I0428 19:56:24.909881 28427 net.cpp:408] conv0 <- data
I0428 19:56:24.909891 28427 net.cpp:382] conv0 -> conv0
I0428 19:56:25.139525 28427 net.cpp:124] Setting up conv0
I0428 19:56:25.139567 28427 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:25.139571 28427 net.cpp:139] Memory required for data: 1675520
I0428 19:56:25.139587 28427 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:25.139614 28427 net.cpp:86] Creating Layer pool0
I0428 19:56:25.139618 28427 net.cpp:408] pool0 <- conv0
I0428 19:56:25.139638 28427 net.cpp:382] pool0 -> pool0
I0428 19:56:25.139683 28427 net.cpp:124] Setting up pool0
I0428 19:56:25.139689 28427 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:25.139693 28427 net.cpp:139] Memory required for data: 2044160
I0428 19:56:25.139695 28427 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:25.139704 28427 net.cpp:86] Creating Layer conv1
I0428 19:56:25.139708 28427 net.cpp:408] conv1 <- pool0
I0428 19:56:25.139713 28427 net.cpp:382] conv1 -> conv1
I0428 19:56:25.141681 28427 net.cpp:124] Setting up conv1
I0428 19:56:25.141697 28427 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:25.141701 28427 net.cpp:139] Memory required for data: 2076928
I0428 19:56:25.141711 28427 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:25.141719 28427 net.cpp:86] Creating Layer pool1
I0428 19:56:25.141723 28427 net.cpp:408] pool1 <- conv1
I0428 19:56:25.141728 28427 net.cpp:382] pool1 -> pool1
I0428 19:56:25.141769 28427 net.cpp:124] Setting up pool1
I0428 19:56:25.141777 28427 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:25.141782 28427 net.cpp:139] Memory required for data: 2085120
I0428 19:56:25.141784 28427 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:25.141793 28427 net.cpp:86] Creating Layer ip1
I0428 19:56:25.141795 28427 net.cpp:408] ip1 <- pool1
I0428 19:56:25.141800 28427 net.cpp:382] ip1 -> ip1
I0428 19:56:25.141952 28427 net.cpp:124] Setting up ip1
I0428 19:56:25.141959 28427 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:25.141963 28427 net.cpp:139] Memory required for data: 2087680
I0428 19:56:25.141969 28427 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:25.141974 28427 net.cpp:86] Creating Layer relu1
I0428 19:56:25.141978 28427 net.cpp:408] relu1 <- ip1
I0428 19:56:25.141983 28427 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:25.142149 28427 net.cpp:124] Setting up relu1
I0428 19:56:25.142158 28427 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:25.142160 28427 net.cpp:139] Memory required for data: 2090240
I0428 19:56:25.142163 28427 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:25.142168 28427 net.cpp:86] Creating Layer ip2
I0428 19:56:25.142171 28427 net.cpp:408] ip2 <- ip1
I0428 19:56:25.142176 28427 net.cpp:382] ip2 -> ip2
I0428 19:56:25.142283 28427 net.cpp:124] Setting up ip2
I0428 19:56:25.142290 28427 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:25.142293 28427 net.cpp:139] Memory required for data: 2096640
I0428 19:56:25.142298 28427 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:25.142304 28427 net.cpp:86] Creating Layer relu2
I0428 19:56:25.142307 28427 net.cpp:408] relu2 <- ip2
I0428 19:56:25.142312 28427 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:25.143131 28427 net.cpp:124] Setting up relu2
I0428 19:56:25.143141 28427 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:25.143162 28427 net.cpp:139] Memory required for data: 2103040
I0428 19:56:25.143164 28427 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:25.143172 28427 net.cpp:86] Creating Layer ip3
I0428 19:56:25.143174 28427 net.cpp:408] ip3 <- ip2
I0428 19:56:25.143179 28427 net.cpp:382] ip3 -> ip3
I0428 19:56:25.143270 28427 net.cpp:124] Setting up ip3
I0428 19:56:25.143277 28427 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:25.143280 28427 net.cpp:139] Memory required for data: 2105600
I0428 19:56:25.143288 28427 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:25.143293 28427 net.cpp:86] Creating Layer relu3
I0428 19:56:25.143296 28427 net.cpp:408] relu3 <- ip3
I0428 19:56:25.143301 28427 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:25.143477 28427 net.cpp:124] Setting up relu3
I0428 19:56:25.143486 28427 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:25.143488 28427 net.cpp:139] Memory required for data: 2108160
I0428 19:56:25.143492 28427 layer_factory.hpp:77] Creating layer loss
I0428 19:56:25.143497 28427 net.cpp:86] Creating Layer loss
I0428 19:56:25.143501 28427 net.cpp:408] loss <- ip3
I0428 19:56:25.143504 28427 net.cpp:408] loss <- label
I0428 19:56:25.143510 28427 net.cpp:382] loss -> loss
I0428 19:56:25.143524 28427 layer_factory.hpp:77] Creating layer loss
I0428 19:56:25.143771 28427 net.cpp:124] Setting up loss
I0428 19:56:25.143780 28427 net.cpp:131] Top shape: (1)
I0428 19:56:25.143784 28427 net.cpp:134]     with loss weight 1
I0428 19:56:25.143797 28427 net.cpp:139] Memory required for data: 2108164
I0428 19:56:25.143801 28427 net.cpp:200] loss needs backward computation.
I0428 19:56:25.143805 28427 net.cpp:200] relu3 needs backward computation.
I0428 19:56:25.143808 28427 net.cpp:200] ip3 needs backward computation.
I0428 19:56:25.143811 28427 net.cpp:200] relu2 needs backward computation.
I0428 19:56:25.143813 28427 net.cpp:200] ip2 needs backward computation.
I0428 19:56:25.143816 28427 net.cpp:200] relu1 needs backward computation.
I0428 19:56:25.143820 28427 net.cpp:200] ip1 needs backward computation.
I0428 19:56:25.143822 28427 net.cpp:200] pool1 needs backward computation.
I0428 19:56:25.143826 28427 net.cpp:200] conv1 needs backward computation.
I0428 19:56:25.143828 28427 net.cpp:200] pool0 needs backward computation.
I0428 19:56:25.143831 28427 net.cpp:200] conv0 needs backward computation.
I0428 19:56:25.143851 28427 net.cpp:202] mnist does not need backward computation.
I0428 19:56:25.143852 28427 net.cpp:244] This network produces output loss
I0428 19:56:25.143862 28427 net.cpp:257] Network initialization done.
I0428 19:56:25.144255 28427 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test758.prototxt
I0428 19:56:25.144299 28427 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:25.144415 28427 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:25.144491 28427 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:25.144533 28427 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:25.144546 28427 net.cpp:86] Creating Layer mnist
I0428 19:56:25.144549 28427 net.cpp:382] mnist -> data
I0428 19:56:25.144557 28427 net.cpp:382] mnist -> label
I0428 19:56:25.144636 28427 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:25.146733 28427 net.cpp:124] Setting up mnist
I0428 19:56:25.146778 28427 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:25.146785 28427 net.cpp:131] Top shape: 100 (100)
I0428 19:56:25.146787 28427 net.cpp:139] Memory required for data: 314000
I0428 19:56:25.146791 28427 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:25.146798 28427 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:25.146802 28427 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:25.146807 28427 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:25.146814 28427 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:25.146872 28427 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:25.146878 28427 net.cpp:131] Top shape: 100 (100)
I0428 19:56:25.146883 28427 net.cpp:131] Top shape: 100 (100)
I0428 19:56:25.146885 28427 net.cpp:139] Memory required for data: 314800
I0428 19:56:25.146888 28427 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:25.146896 28427 net.cpp:86] Creating Layer conv0
I0428 19:56:25.146899 28427 net.cpp:408] conv0 <- data
I0428 19:56:25.146904 28427 net.cpp:382] conv0 -> conv0
I0428 19:56:25.148571 28427 net.cpp:124] Setting up conv0
I0428 19:56:25.148583 28427 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:25.148586 28427 net.cpp:139] Memory required for data: 2618800
I0428 19:56:25.148596 28427 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:25.148617 28427 net.cpp:86] Creating Layer pool0
I0428 19:56:25.148620 28427 net.cpp:408] pool0 <- conv0
I0428 19:56:25.148624 28427 net.cpp:382] pool0 -> pool0
I0428 19:56:25.148669 28427 net.cpp:124] Setting up pool0
I0428 19:56:25.148675 28427 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:25.148679 28427 net.cpp:139] Memory required for data: 3194800
I0428 19:56:25.148680 28427 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:25.148689 28427 net.cpp:86] Creating Layer conv1
I0428 19:56:25.148691 28427 net.cpp:408] conv1 <- pool0
I0428 19:56:25.148695 28427 net.cpp:382] conv1 -> conv1
I0428 19:56:25.151015 28427 net.cpp:124] Setting up conv1
I0428 19:56:25.151028 28427 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:25.151032 28427 net.cpp:139] Memory required for data: 3246000
I0428 19:56:25.151057 28427 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:25.151065 28427 net.cpp:86] Creating Layer pool1
I0428 19:56:25.151068 28427 net.cpp:408] pool1 <- conv1
I0428 19:56:25.151073 28427 net.cpp:382] pool1 -> pool1
I0428 19:56:25.151111 28427 net.cpp:124] Setting up pool1
I0428 19:56:25.151118 28427 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:25.151121 28427 net.cpp:139] Memory required for data: 3258800
I0428 19:56:25.151124 28427 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:25.151130 28427 net.cpp:86] Creating Layer ip1
I0428 19:56:25.151134 28427 net.cpp:408] ip1 <- pool1
I0428 19:56:25.151137 28427 net.cpp:382] ip1 -> ip1
I0428 19:56:25.151240 28427 net.cpp:124] Setting up ip1
I0428 19:56:25.151262 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.151278 28427 net.cpp:139] Memory required for data: 3262800
I0428 19:56:25.151286 28427 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:25.151291 28427 net.cpp:86] Creating Layer relu1
I0428 19:56:25.151295 28427 net.cpp:408] relu1 <- ip1
I0428 19:56:25.151299 28427 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:25.151530 28427 net.cpp:124] Setting up relu1
I0428 19:56:25.151538 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.151543 28427 net.cpp:139] Memory required for data: 3266800
I0428 19:56:25.151546 28427 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:25.151554 28427 net.cpp:86] Creating Layer ip2
I0428 19:56:25.151558 28427 net.cpp:408] ip2 <- ip1
I0428 19:56:25.151563 28427 net.cpp:382] ip2 -> ip2
I0428 19:56:25.151669 28427 net.cpp:124] Setting up ip2
I0428 19:56:25.151675 28427 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:25.151679 28427 net.cpp:139] Memory required for data: 3276800
I0428 19:56:25.151684 28427 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:25.151688 28427 net.cpp:86] Creating Layer relu2
I0428 19:56:25.151692 28427 net.cpp:408] relu2 <- ip2
I0428 19:56:25.151696 28427 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:25.151834 28427 net.cpp:124] Setting up relu2
I0428 19:56:25.151842 28427 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:25.151845 28427 net.cpp:139] Memory required for data: 3286800
I0428 19:56:25.151849 28427 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:25.151854 28427 net.cpp:86] Creating Layer ip3
I0428 19:56:25.151856 28427 net.cpp:408] ip3 <- ip2
I0428 19:56:25.151860 28427 net.cpp:382] ip3 -> ip3
I0428 19:56:25.151949 28427 net.cpp:124] Setting up ip3
I0428 19:56:25.151957 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.151959 28427 net.cpp:139] Memory required for data: 3290800
I0428 19:56:25.151968 28427 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:25.151973 28427 net.cpp:86] Creating Layer relu3
I0428 19:56:25.151975 28427 net.cpp:408] relu3 <- ip3
I0428 19:56:25.151980 28427 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:25.152858 28427 net.cpp:124] Setting up relu3
I0428 19:56:25.152873 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.152876 28427 net.cpp:139] Memory required for data: 3294800
I0428 19:56:25.152879 28427 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:25.152884 28427 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:25.152887 28427 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:25.152909 28427 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:25.152915 28427 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:25.152974 28427 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:25.152981 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.152984 28427 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:25.152988 28427 net.cpp:139] Memory required for data: 3302800
I0428 19:56:25.152992 28427 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:25.152997 28427 net.cpp:86] Creating Layer accuracy
I0428 19:56:25.152999 28427 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:25.153003 28427 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:25.153007 28427 net.cpp:382] accuracy -> accuracy
I0428 19:56:25.153015 28427 net.cpp:124] Setting up accuracy
I0428 19:56:25.153019 28427 net.cpp:131] Top shape: (1)
I0428 19:56:25.153023 28427 net.cpp:139] Memory required for data: 3302804
I0428 19:56:25.153025 28427 layer_factory.hpp:77] Creating layer loss
I0428 19:56:25.153029 28427 net.cpp:86] Creating Layer loss
I0428 19:56:25.153033 28427 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:25.153036 28427 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:25.153041 28427 net.cpp:382] loss -> loss
I0428 19:56:25.153048 28427 layer_factory.hpp:77] Creating layer loss
I0428 19:56:25.153260 28427 net.cpp:124] Setting up loss
I0428 19:56:25.153270 28427 net.cpp:131] Top shape: (1)
I0428 19:56:25.153273 28427 net.cpp:134]     with loss weight 1
I0428 19:56:25.153280 28427 net.cpp:139] Memory required for data: 3302808
I0428 19:56:25.153293 28427 net.cpp:200] loss needs backward computation.
I0428 19:56:25.153298 28427 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:25.153302 28427 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:25.153306 28427 net.cpp:200] relu3 needs backward computation.
I0428 19:56:25.153308 28427 net.cpp:200] ip3 needs backward computation.
I0428 19:56:25.153311 28427 net.cpp:200] relu2 needs backward computation.
I0428 19:56:25.153314 28427 net.cpp:200] ip2 needs backward computation.
I0428 19:56:25.153317 28427 net.cpp:200] relu1 needs backward computation.
I0428 19:56:25.153321 28427 net.cpp:200] ip1 needs backward computation.
I0428 19:56:25.153324 28427 net.cpp:200] pool1 needs backward computation.
I0428 19:56:25.153327 28427 net.cpp:200] conv1 needs backward computation.
I0428 19:56:25.153331 28427 net.cpp:200] pool0 needs backward computation.
I0428 19:56:25.153333 28427 net.cpp:200] conv0 needs backward computation.
I0428 19:56:25.153343 28427 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:25.153347 28427 net.cpp:202] mnist does not need backward computation.
I0428 19:56:25.153350 28427 net.cpp:244] This network produces output accuracy
I0428 19:56:25.153354 28427 net.cpp:244] This network produces output loss
I0428 19:56:25.153364 28427 net.cpp:257] Network initialization done.
I0428 19:56:25.153420 28427 solver.cpp:56] Solver scaffolding done.
I0428 19:56:25.153774 28427 caffe.cpp:248] Starting Optimization
I0428 19:56:25.153791 28427 solver.cpp:273] Solving LeNet
I0428 19:56:25.153795 28427 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:25.154623 28427 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:25.158216 28427 blocking_queue.cpp:49] Waiting for data
I0428 19:56:25.228137 28434 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:25.228677 28427 solver.cpp:398]     Test net output #0: accuracy = 0.0681
I0428 19:56:25.228711 28427 solver.cpp:398]     Test net output #1: loss = 2.31283 (* 1 = 2.31283 loss)
I0428 19:56:25.231181 28427 solver.cpp:219] Iteration 0 (-1.05097e-42 iter/s, 0.077346s/100 iters), loss = 2.30603
I0428 19:56:25.231220 28427 solver.cpp:238]     Train net output #0: loss = 2.30603 (* 1 = 2.30603 loss)
I0428 19:56:25.231231 28427 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:25.308085 28427 solver.cpp:219] Iteration 100 (1300.89 iter/s, 0.0768707s/100 iters), loss = 1.10192
I0428 19:56:25.308110 28427 solver.cpp:238]     Train net output #0: loss = 1.10192 (* 1 = 1.10192 loss)
I0428 19:56:25.308116 28427 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:25.381649 28427 solver.cpp:219] Iteration 200 (1359.98 iter/s, 0.0735304s/100 iters), loss = 0.844136
I0428 19:56:25.381690 28427 solver.cpp:238]     Train net output #0: loss = 0.844136 (* 1 = 0.844136 loss)
I0428 19:56:25.381695 28427 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:25.464025 28427 solver.cpp:219] Iteration 300 (1214.68 iter/s, 0.0823265s/100 iters), loss = 0.713149
I0428 19:56:25.464067 28427 solver.cpp:238]     Train net output #0: loss = 0.713149 (* 1 = 0.713149 loss)
I0428 19:56:25.464073 28427 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:25.538497 28427 solver.cpp:219] Iteration 400 (1343.68 iter/s, 0.0744223s/100 iters), loss = 0.573118
I0428 19:56:25.538537 28427 solver.cpp:238]     Train net output #0: loss = 0.573118 (* 1 = 0.573118 loss)
I0428 19:56:25.538543 28427 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:25.612071 28427 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:25.680222 28434 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:25.680747 28427 solver.cpp:398]     Test net output #0: accuracy = 0.8853
I0428 19:56:25.680783 28427 solver.cpp:398]     Test net output #1: loss = 0.401076 (* 1 = 0.401076 loss)
I0428 19:56:25.681643 28427 solver.cpp:219] Iteration 500 (698.772 iter/s, 0.143108s/100 iters), loss = 0.570426
I0428 19:56:25.681684 28427 solver.cpp:238]     Train net output #0: loss = 0.570426 (* 1 = 0.570426 loss)
I0428 19:56:25.681690 28427 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:25.760295 28427 solver.cpp:219] Iteration 600 (1272.21 iter/s, 0.0786033s/100 iters), loss = 0.294372
I0428 19:56:25.760321 28427 solver.cpp:238]     Train net output #0: loss = 0.294372 (* 1 = 0.294372 loss)
I0428 19:56:25.760329 28427 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:25.834074 28427 solver.cpp:219] Iteration 700 (1356.04 iter/s, 0.0737444s/100 iters), loss = 0.467617
I0428 19:56:25.834115 28427 solver.cpp:238]     Train net output #0: loss = 0.467617 (* 1 = 0.467617 loss)
I0428 19:56:25.834120 28427 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:25.906827 28427 solver.cpp:219] Iteration 800 (1375.13 iter/s, 0.0727204s/100 iters), loss = 0.520113
I0428 19:56:25.906852 28427 solver.cpp:238]     Train net output #0: loss = 0.520113 (* 1 = 0.520113 loss)
I0428 19:56:25.906857 28427 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:25.981039 28427 solver.cpp:219] Iteration 900 (1348.1 iter/s, 0.0741786s/100 iters), loss = 0.275114
I0428 19:56:25.981076 28427 solver.cpp:238]     Train net output #0: loss = 0.275115 (* 1 = 0.275115 loss)
I0428 19:56:25.981082 28427 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:26.005909 28433 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:26.055140 28427 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:26.055819 28427 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:26.056283 28427 solver.cpp:311] Iteration 1000, loss = 0.187719
I0428 19:56:26.056298 28427 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:26.129441 28434 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:26.129984 28427 solver.cpp:398]     Test net output #0: accuracy = 0.9321
I0428 19:56:26.130020 28427 solver.cpp:398]     Test net output #1: loss = 0.220773 (* 1 = 0.220773 loss)
I0428 19:56:26.130025 28427 solver.cpp:316] Optimization Done.
I0428 19:56:26.130029 28427 caffe.cpp:259] Optimization Done.
