I0428 19:47:50.904177 26338 caffe.cpp:218] Using GPUs 0
I0428 19:47:50.939632 26338 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:51.431713 26338 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test527.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:51.431845 26338 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test527.prototxt
I0428 19:47:51.432171 26338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:51.432186 26338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:51.432265 26338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:51.432327 26338 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:51.432404 26338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:51.432423 26338 net.cpp:86] Creating Layer mnist
I0428 19:47:51.432431 26338 net.cpp:382] mnist -> data
I0428 19:47:51.432448 26338 net.cpp:382] mnist -> label
I0428 19:47:51.433468 26338 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:51.435755 26338 net.cpp:124] Setting up mnist
I0428 19:47:51.435797 26338 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:51.435802 26338 net.cpp:131] Top shape: 64 (64)
I0428 19:47:51.435822 26338 net.cpp:139] Memory required for data: 200960
I0428 19:47:51.435828 26338 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:51.435842 26338 net.cpp:86] Creating Layer conv0
I0428 19:47:51.435860 26338 net.cpp:408] conv0 <- data
I0428 19:47:51.435871 26338 net.cpp:382] conv0 -> conv0
I0428 19:47:51.666556 26338 net.cpp:124] Setting up conv0
I0428 19:47:51.666584 26338 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:51.666586 26338 net.cpp:139] Memory required for data: 938240
I0428 19:47:51.666599 26338 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:51.666611 26338 net.cpp:86] Creating Layer pool0
I0428 19:47:51.666615 26338 net.cpp:408] pool0 <- conv0
I0428 19:47:51.666620 26338 net.cpp:382] pool0 -> pool0
I0428 19:47:51.666679 26338 net.cpp:124] Setting up pool0
I0428 19:47:51.666684 26338 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:51.666687 26338 net.cpp:139] Memory required for data: 1122560
I0428 19:47:51.666690 26338 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:51.666700 26338 net.cpp:86] Creating Layer conv1
I0428 19:47:51.666703 26338 net.cpp:408] conv1 <- pool0
I0428 19:47:51.666708 26338 net.cpp:382] conv1 -> conv1
I0428 19:47:51.668491 26338 net.cpp:124] Setting up conv1
I0428 19:47:51.668520 26338 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:51.668524 26338 net.cpp:139] Memory required for data: 1155328
I0428 19:47:51.668532 26338 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:51.668540 26338 net.cpp:86] Creating Layer pool1
I0428 19:47:51.668545 26338 net.cpp:408] pool1 <- conv1
I0428 19:47:51.668548 26338 net.cpp:382] pool1 -> pool1
I0428 19:47:51.668584 26338 net.cpp:124] Setting up pool1
I0428 19:47:51.668589 26338 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:51.668593 26338 net.cpp:139] Memory required for data: 1163520
I0428 19:47:51.668596 26338 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:51.668602 26338 net.cpp:86] Creating Layer ip1
I0428 19:47:51.668606 26338 net.cpp:408] ip1 <- pool1
I0428 19:47:51.668609 26338 net.cpp:382] ip1 -> ip1
I0428 19:47:51.668702 26338 net.cpp:124] Setting up ip1
I0428 19:47:51.668709 26338 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:51.668712 26338 net.cpp:139] Memory required for data: 1166080
I0428 19:47:51.668720 26338 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:51.668725 26338 net.cpp:86] Creating Layer relu1
I0428 19:47:51.668728 26338 net.cpp:408] relu1 <- ip1
I0428 19:47:51.668732 26338 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:51.668941 26338 net.cpp:124] Setting up relu1
I0428 19:47:51.668951 26338 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:51.668954 26338 net.cpp:139] Memory required for data: 1168640
I0428 19:47:51.668958 26338 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:51.668964 26338 net.cpp:86] Creating Layer ip2
I0428 19:47:51.668968 26338 net.cpp:408] ip2 <- ip1
I0428 19:47:51.668973 26338 net.cpp:382] ip2 -> ip2
I0428 19:47:51.669072 26338 net.cpp:124] Setting up ip2
I0428 19:47:51.669080 26338 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:51.669082 26338 net.cpp:139] Memory required for data: 1181440
I0428 19:47:51.669088 26338 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:51.669095 26338 net.cpp:86] Creating Layer relu2
I0428 19:47:51.669097 26338 net.cpp:408] relu2 <- ip2
I0428 19:47:51.669101 26338 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:51.669906 26338 net.cpp:124] Setting up relu2
I0428 19:47:51.669919 26338 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:51.669937 26338 net.cpp:139] Memory required for data: 1194240
I0428 19:47:51.669940 26338 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:51.669947 26338 net.cpp:86] Creating Layer ip3
I0428 19:47:51.669950 26338 net.cpp:408] ip3 <- ip2
I0428 19:47:51.669956 26338 net.cpp:382] ip3 -> ip3
I0428 19:47:51.670073 26338 net.cpp:124] Setting up ip3
I0428 19:47:51.670081 26338 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:51.670084 26338 net.cpp:139] Memory required for data: 1196800
I0428 19:47:51.670092 26338 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:51.670097 26338 net.cpp:86] Creating Layer relu3
I0428 19:47:51.670100 26338 net.cpp:408] relu3 <- ip3
I0428 19:47:51.670104 26338 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:51.670313 26338 net.cpp:124] Setting up relu3
I0428 19:47:51.670336 26338 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:51.670339 26338 net.cpp:139] Memory required for data: 1199360
I0428 19:47:51.670357 26338 layer_factory.hpp:77] Creating layer loss
I0428 19:47:51.670363 26338 net.cpp:86] Creating Layer loss
I0428 19:47:51.670367 26338 net.cpp:408] loss <- ip3
I0428 19:47:51.670369 26338 net.cpp:408] loss <- label
I0428 19:47:51.670375 26338 net.cpp:382] loss -> loss
I0428 19:47:51.670389 26338 layer_factory.hpp:77] Creating layer loss
I0428 19:47:51.670603 26338 net.cpp:124] Setting up loss
I0428 19:47:51.670613 26338 net.cpp:131] Top shape: (1)
I0428 19:47:51.670615 26338 net.cpp:134]     with loss weight 1
I0428 19:47:51.670630 26338 net.cpp:139] Memory required for data: 1199364
I0428 19:47:51.670634 26338 net.cpp:200] loss needs backward computation.
I0428 19:47:51.670636 26338 net.cpp:200] relu3 needs backward computation.
I0428 19:47:51.670639 26338 net.cpp:200] ip3 needs backward computation.
I0428 19:47:51.670642 26338 net.cpp:200] relu2 needs backward computation.
I0428 19:47:51.670645 26338 net.cpp:200] ip2 needs backward computation.
I0428 19:47:51.670648 26338 net.cpp:200] relu1 needs backward computation.
I0428 19:47:51.670650 26338 net.cpp:200] ip1 needs backward computation.
I0428 19:47:51.670653 26338 net.cpp:200] pool1 needs backward computation.
I0428 19:47:51.670656 26338 net.cpp:200] conv1 needs backward computation.
I0428 19:47:51.670660 26338 net.cpp:200] pool0 needs backward computation.
I0428 19:47:51.670663 26338 net.cpp:200] conv0 needs backward computation.
I0428 19:47:51.670681 26338 net.cpp:202] mnist does not need backward computation.
I0428 19:47:51.670684 26338 net.cpp:244] This network produces output loss
I0428 19:47:51.670692 26338 net.cpp:257] Network initialization done.
I0428 19:47:51.671061 26338 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test527.prototxt
I0428 19:47:51.671087 26338 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:51.671180 26338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:51.671258 26338 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:51.671316 26338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:51.671329 26338 net.cpp:86] Creating Layer mnist
I0428 19:47:51.671332 26338 net.cpp:382] mnist -> data
I0428 19:47:51.671340 26338 net.cpp:382] mnist -> label
I0428 19:47:51.671434 26338 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:51.673691 26338 net.cpp:124] Setting up mnist
I0428 19:47:51.673735 26338 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:51.673740 26338 net.cpp:131] Top shape: 100 (100)
I0428 19:47:51.673744 26338 net.cpp:139] Memory required for data: 314000
I0428 19:47:51.673748 26338 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:51.673754 26338 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:51.673758 26338 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:51.673763 26338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:51.673769 26338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:51.673818 26338 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:51.673823 26338 net.cpp:131] Top shape: 100 (100)
I0428 19:47:51.673827 26338 net.cpp:131] Top shape: 100 (100)
I0428 19:47:51.673830 26338 net.cpp:139] Memory required for data: 314800
I0428 19:47:51.673833 26338 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:51.673841 26338 net.cpp:86] Creating Layer conv0
I0428 19:47:51.673844 26338 net.cpp:408] conv0 <- data
I0428 19:47:51.673849 26338 net.cpp:382] conv0 -> conv0
I0428 19:47:51.675418 26338 net.cpp:124] Setting up conv0
I0428 19:47:51.675431 26338 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:51.675451 26338 net.cpp:139] Memory required for data: 1466800
I0428 19:47:51.675458 26338 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:51.675464 26338 net.cpp:86] Creating Layer pool0
I0428 19:47:51.675468 26338 net.cpp:408] pool0 <- conv0
I0428 19:47:51.675472 26338 net.cpp:382] pool0 -> pool0
I0428 19:47:51.675523 26338 net.cpp:124] Setting up pool0
I0428 19:47:51.675528 26338 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:51.675530 26338 net.cpp:139] Memory required for data: 1754800
I0428 19:47:51.675534 26338 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:51.675541 26338 net.cpp:86] Creating Layer conv1
I0428 19:47:51.675544 26338 net.cpp:408] conv1 <- pool0
I0428 19:47:51.675549 26338 net.cpp:382] conv1 -> conv1
I0428 19:47:51.677681 26338 net.cpp:124] Setting up conv1
I0428 19:47:51.677726 26338 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:51.677729 26338 net.cpp:139] Memory required for data: 1806000
I0428 19:47:51.677738 26338 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:51.677752 26338 net.cpp:86] Creating Layer pool1
I0428 19:47:51.677755 26338 net.cpp:408] pool1 <- conv1
I0428 19:47:51.677760 26338 net.cpp:382] pool1 -> pool1
I0428 19:47:51.677839 26338 net.cpp:124] Setting up pool1
I0428 19:47:51.677846 26338 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:51.677850 26338 net.cpp:139] Memory required for data: 1818800
I0428 19:47:51.677851 26338 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:51.677857 26338 net.cpp:86] Creating Layer ip1
I0428 19:47:51.677860 26338 net.cpp:408] ip1 <- pool1
I0428 19:47:51.677865 26338 net.cpp:382] ip1 -> ip1
I0428 19:47:51.677971 26338 net.cpp:124] Setting up ip1
I0428 19:47:51.677978 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.677992 26338 net.cpp:139] Memory required for data: 1822800
I0428 19:47:51.677999 26338 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:51.678004 26338 net.cpp:86] Creating Layer relu1
I0428 19:47:51.678007 26338 net.cpp:408] relu1 <- ip1
I0428 19:47:51.678012 26338 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:51.678243 26338 net.cpp:124] Setting up relu1
I0428 19:47:51.678252 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.678256 26338 net.cpp:139] Memory required for data: 1826800
I0428 19:47:51.678259 26338 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:51.678267 26338 net.cpp:86] Creating Layer ip2
I0428 19:47:51.678270 26338 net.cpp:408] ip2 <- ip1
I0428 19:47:51.678275 26338 net.cpp:382] ip2 -> ip2
I0428 19:47:51.678395 26338 net.cpp:124] Setting up ip2
I0428 19:47:51.678402 26338 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:51.678406 26338 net.cpp:139] Memory required for data: 1846800
I0428 19:47:51.678412 26338 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:51.678416 26338 net.cpp:86] Creating Layer relu2
I0428 19:47:51.678421 26338 net.cpp:408] relu2 <- ip2
I0428 19:47:51.678424 26338 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:51.678582 26338 net.cpp:124] Setting up relu2
I0428 19:47:51.678589 26338 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:51.678592 26338 net.cpp:139] Memory required for data: 1866800
I0428 19:47:51.678597 26338 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:51.678602 26338 net.cpp:86] Creating Layer ip3
I0428 19:47:51.678606 26338 net.cpp:408] ip3 <- ip2
I0428 19:47:51.678611 26338 net.cpp:382] ip3 -> ip3
I0428 19:47:51.678716 26338 net.cpp:124] Setting up ip3
I0428 19:47:51.678724 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.678726 26338 net.cpp:139] Memory required for data: 1870800
I0428 19:47:51.678735 26338 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:51.678740 26338 net.cpp:86] Creating Layer relu3
I0428 19:47:51.678742 26338 net.cpp:408] relu3 <- ip3
I0428 19:47:51.678751 26338 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:51.679620 26338 net.cpp:124] Setting up relu3
I0428 19:47:51.679630 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.679649 26338 net.cpp:139] Memory required for data: 1874800
I0428 19:47:51.679653 26338 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:51.679658 26338 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:51.679662 26338 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:51.679667 26338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:51.679673 26338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:51.679720 26338 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:51.679726 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.679730 26338 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:51.679733 26338 net.cpp:139] Memory required for data: 1882800
I0428 19:47:51.679736 26338 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:51.679741 26338 net.cpp:86] Creating Layer accuracy
I0428 19:47:51.679744 26338 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:51.679749 26338 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:51.679754 26338 net.cpp:382] accuracy -> accuracy
I0428 19:47:51.679761 26338 net.cpp:124] Setting up accuracy
I0428 19:47:51.679766 26338 net.cpp:131] Top shape: (1)
I0428 19:47:51.679769 26338 net.cpp:139] Memory required for data: 1882804
I0428 19:47:51.679771 26338 layer_factory.hpp:77] Creating layer loss
I0428 19:47:51.679781 26338 net.cpp:86] Creating Layer loss
I0428 19:47:51.679785 26338 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:51.679788 26338 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:51.679798 26338 net.cpp:382] loss -> loss
I0428 19:47:51.679805 26338 layer_factory.hpp:77] Creating layer loss
I0428 19:47:51.680038 26338 net.cpp:124] Setting up loss
I0428 19:47:51.680047 26338 net.cpp:131] Top shape: (1)
I0428 19:47:51.680052 26338 net.cpp:134]     with loss weight 1
I0428 19:47:51.680058 26338 net.cpp:139] Memory required for data: 1882808
I0428 19:47:51.680070 26338 net.cpp:200] loss needs backward computation.
I0428 19:47:51.680088 26338 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:51.680093 26338 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:51.680095 26338 net.cpp:200] relu3 needs backward computation.
I0428 19:47:51.680099 26338 net.cpp:200] ip3 needs backward computation.
I0428 19:47:51.680101 26338 net.cpp:200] relu2 needs backward computation.
I0428 19:47:51.680104 26338 net.cpp:200] ip2 needs backward computation.
I0428 19:47:51.680107 26338 net.cpp:200] relu1 needs backward computation.
I0428 19:47:51.680110 26338 net.cpp:200] ip1 needs backward computation.
I0428 19:47:51.680114 26338 net.cpp:200] pool1 needs backward computation.
I0428 19:47:51.680117 26338 net.cpp:200] conv1 needs backward computation.
I0428 19:47:51.680120 26338 net.cpp:200] pool0 needs backward computation.
I0428 19:47:51.680124 26338 net.cpp:200] conv0 needs backward computation.
I0428 19:47:51.680126 26338 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:51.680130 26338 net.cpp:202] mnist does not need backward computation.
I0428 19:47:51.680132 26338 net.cpp:244] This network produces output accuracy
I0428 19:47:51.680136 26338 net.cpp:244] This network produces output loss
I0428 19:47:51.680145 26338 net.cpp:257] Network initialization done.
I0428 19:47:51.680184 26338 solver.cpp:56] Solver scaffolding done.
I0428 19:47:51.680591 26338 caffe.cpp:248] Starting Optimization
I0428 19:47:51.680596 26338 solver.cpp:273] Solving LeNet
I0428 19:47:51.680599 26338 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:51.681514 26338 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:51.685282 26338 blocking_queue.cpp:49] Waiting for data
I0428 19:47:51.756778 26345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:51.757314 26338 solver.cpp:398]     Test net output #0: accuracy = 0.1043
I0428 19:47:51.757350 26338 solver.cpp:398]     Test net output #1: loss = 2.30339 (* 1 = 2.30339 loss)
I0428 19:47:51.759155 26338 solver.cpp:219] Iteration 0 (0 iter/s, 0.0785109s/100 iters), loss = 2.30449
I0428 19:47:51.759197 26338 solver.cpp:238]     Train net output #0: loss = 2.30449 (* 1 = 2.30449 loss)
I0428 19:47:51.759209 26338 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:51.833382 26338 solver.cpp:219] Iteration 100 (1347.86 iter/s, 0.0741916s/100 iters), loss = 1.60923
I0428 19:47:51.833423 26338 solver.cpp:238]     Train net output #0: loss = 1.60923 (* 1 = 1.60923 loss)
I0428 19:47:51.833431 26338 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:51.903595 26338 solver.cpp:219] Iteration 200 (1425.24 iter/s, 0.0701635s/100 iters), loss = 0.974222
I0428 19:47:51.903636 26338 solver.cpp:238]     Train net output #0: loss = 0.974222 (* 1 = 0.974222 loss)
I0428 19:47:51.903656 26338 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:51.974575 26338 solver.cpp:219] Iteration 300 (1409.53 iter/s, 0.0709458s/100 iters), loss = 0.858575
I0428 19:47:51.974614 26338 solver.cpp:238]     Train net output #0: loss = 0.858575 (* 1 = 0.858575 loss)
I0428 19:47:51.974620 26338 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:52.044524 26338 solver.cpp:219] Iteration 400 (1430.27 iter/s, 0.0699167s/100 iters), loss = 0.607079
I0428 19:47:52.044564 26338 solver.cpp:238]     Train net output #0: loss = 0.607079 (* 1 = 0.607079 loss)
I0428 19:47:52.044570 26338 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:52.113430 26338 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:52.188210 26345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:52.188720 26338 solver.cpp:398]     Test net output #0: accuracy = 0.8111
I0428 19:47:52.188773 26338 solver.cpp:398]     Test net output #1: loss = 0.569565 (* 1 = 0.569565 loss)
I0428 19:47:52.189640 26338 solver.cpp:219] Iteration 500 (689.274 iter/s, 0.14508s/100 iters), loss = 0.643484
I0428 19:47:52.189680 26338 solver.cpp:238]     Train net output #0: loss = 0.643484 (* 1 = 0.643484 loss)
I0428 19:47:52.189702 26338 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:52.264192 26338 solver.cpp:219] Iteration 600 (1341.93 iter/s, 0.0745196s/100 iters), loss = 0.354407
I0428 19:47:52.264231 26338 solver.cpp:238]     Train net output #0: loss = 0.354407 (* 1 = 0.354407 loss)
I0428 19:47:52.264237 26338 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:52.335348 26338 solver.cpp:219] Iteration 700 (1406 iter/s, 0.071124s/100 iters), loss = 0.481919
I0428 19:47:52.335388 26338 solver.cpp:238]     Train net output #0: loss = 0.481919 (* 1 = 0.481919 loss)
I0428 19:47:52.335394 26338 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:52.404635 26338 solver.cpp:219] Iteration 800 (1443.94 iter/s, 0.0692552s/100 iters), loss = 0.7594
I0428 19:47:52.404675 26338 solver.cpp:238]     Train net output #0: loss = 0.7594 (* 1 = 0.7594 loss)
I0428 19:47:52.404681 26338 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:52.474504 26338 solver.cpp:219] Iteration 900 (1431.93 iter/s, 0.0698358s/100 iters), loss = 0.397095
I0428 19:47:52.474544 26338 solver.cpp:238]     Train net output #0: loss = 0.397095 (* 1 = 0.397095 loss)
I0428 19:47:52.474550 26338 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:52.497984 26344 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:52.543124 26338 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:52.543768 26338 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:52.544163 26338 solver.cpp:311] Iteration 1000, loss = 0.228379
I0428 19:47:52.544178 26338 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:52.590898 26345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:52.591414 26338 solver.cpp:398]     Test net output #0: accuracy = 0.9311
I0428 19:47:52.591449 26338 solver.cpp:398]     Test net output #1: loss = 0.22382 (* 1 = 0.22382 loss)
I0428 19:47:52.591454 26338 solver.cpp:316] Optimization Done.
I0428 19:47:52.591457 26338 caffe.cpp:259] Optimization Done.
