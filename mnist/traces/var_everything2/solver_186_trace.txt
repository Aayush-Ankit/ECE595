I0428 19:33:41.490455 23158 caffe.cpp:218] Using GPUs 0
I0428 19:33:41.531493 23158 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:41.978236 23158 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test186.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:41.978366 23158 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test186.prototxt
I0428 19:33:41.978669 23158 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:41.978698 23158 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:41.978768 23158 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:41.978843 23158 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:41.978924 23158 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:41.978942 23158 net.cpp:86] Creating Layer mnist
I0428 19:33:41.978950 23158 net.cpp:382] mnist -> data
I0428 19:33:41.978968 23158 net.cpp:382] mnist -> label
I0428 19:33:41.979953 23158 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:41.982144 23158 net.cpp:124] Setting up mnist
I0428 19:33:41.982175 23158 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:41.982180 23158 net.cpp:131] Top shape: 64 (64)
I0428 19:33:41.982183 23158 net.cpp:139] Memory required for data: 200960
I0428 19:33:41.982188 23158 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:41.982203 23158 net.cpp:86] Creating Layer conv0
I0428 19:33:41.982208 23158 net.cpp:408] conv0 <- data
I0428 19:33:41.982218 23158 net.cpp:382] conv0 -> conv0
I0428 19:33:42.209162 23158 net.cpp:124] Setting up conv0
I0428 19:33:42.209204 23158 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:42.209208 23158 net.cpp:139] Memory required for data: 3887360
I0428 19:33:42.209236 23158 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:42.209249 23158 net.cpp:86] Creating Layer pool0
I0428 19:33:42.209271 23158 net.cpp:408] pool0 <- conv0
I0428 19:33:42.209291 23158 net.cpp:382] pool0 -> pool0
I0428 19:33:42.209334 23158 net.cpp:124] Setting up pool0
I0428 19:33:42.209339 23158 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:42.209342 23158 net.cpp:139] Memory required for data: 4808960
I0428 19:33:42.209345 23158 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:42.209353 23158 net.cpp:86] Creating Layer ip1
I0428 19:33:42.209355 23158 net.cpp:408] ip1 <- pool0
I0428 19:33:42.209360 23158 net.cpp:382] ip1 -> ip1
I0428 19:33:42.211350 23158 net.cpp:124] Setting up ip1
I0428 19:33:42.211364 23158 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:42.211382 23158 net.cpp:139] Memory required for data: 4821760
I0428 19:33:42.211390 23158 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:42.211397 23158 net.cpp:86] Creating Layer relu1
I0428 19:33:42.211401 23158 net.cpp:408] relu1 <- ip1
I0428 19:33:42.211405 23158 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:42.211583 23158 net.cpp:124] Setting up relu1
I0428 19:33:42.211591 23158 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:42.211594 23158 net.cpp:139] Memory required for data: 4834560
I0428 19:33:42.211597 23158 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:42.211603 23158 net.cpp:86] Creating Layer ip2
I0428 19:33:42.211606 23158 net.cpp:408] ip2 <- ip1
I0428 19:33:42.211611 23158 net.cpp:382] ip2 -> ip2
I0428 19:33:42.211699 23158 net.cpp:124] Setting up ip2
I0428 19:33:42.211705 23158 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:42.211709 23158 net.cpp:139] Memory required for data: 4837120
I0428 19:33:42.211715 23158 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:42.211720 23158 net.cpp:86] Creating Layer relu2
I0428 19:33:42.211724 23158 net.cpp:408] relu2 <- ip2
I0428 19:33:42.211726 23158 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:42.212458 23158 net.cpp:124] Setting up relu2
I0428 19:33:42.212471 23158 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:42.212488 23158 net.cpp:139] Memory required for data: 4839680
I0428 19:33:42.212492 23158 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:42.212498 23158 net.cpp:86] Creating Layer ip3
I0428 19:33:42.212502 23158 net.cpp:408] ip3 <- ip2
I0428 19:33:42.212507 23158 net.cpp:382] ip3 -> ip3
I0428 19:33:42.212597 23158 net.cpp:124] Setting up ip3
I0428 19:33:42.212604 23158 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:42.212606 23158 net.cpp:139] Memory required for data: 4842240
I0428 19:33:42.212612 23158 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:42.212617 23158 net.cpp:86] Creating Layer relu3
I0428 19:33:42.212620 23158 net.cpp:408] relu3 <- ip3
I0428 19:33:42.212625 23158 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:42.212760 23158 net.cpp:124] Setting up relu3
I0428 19:33:42.212769 23158 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:42.212771 23158 net.cpp:139] Memory required for data: 4844800
I0428 19:33:42.212774 23158 layer_factory.hpp:77] Creating layer loss
I0428 19:33:42.212779 23158 net.cpp:86] Creating Layer loss
I0428 19:33:42.212782 23158 net.cpp:408] loss <- ip3
I0428 19:33:42.212785 23158 net.cpp:408] loss <- label
I0428 19:33:42.212790 23158 net.cpp:382] loss -> loss
I0428 19:33:42.212805 23158 layer_factory.hpp:77] Creating layer loss
I0428 19:33:42.213086 23158 net.cpp:124] Setting up loss
I0428 19:33:42.213095 23158 net.cpp:131] Top shape: (1)
I0428 19:33:42.213099 23158 net.cpp:134]     with loss weight 1
I0428 19:33:42.213114 23158 net.cpp:139] Memory required for data: 4844804
I0428 19:33:42.213117 23158 net.cpp:200] loss needs backward computation.
I0428 19:33:42.213121 23158 net.cpp:200] relu3 needs backward computation.
I0428 19:33:42.213124 23158 net.cpp:200] ip3 needs backward computation.
I0428 19:33:42.213127 23158 net.cpp:200] relu2 needs backward computation.
I0428 19:33:42.213145 23158 net.cpp:200] ip2 needs backward computation.
I0428 19:33:42.213147 23158 net.cpp:200] relu1 needs backward computation.
I0428 19:33:42.213151 23158 net.cpp:200] ip1 needs backward computation.
I0428 19:33:42.213165 23158 net.cpp:200] pool0 needs backward computation.
I0428 19:33:42.213167 23158 net.cpp:200] conv0 needs backward computation.
I0428 19:33:42.213171 23158 net.cpp:202] mnist does not need backward computation.
I0428 19:33:42.213173 23158 net.cpp:244] This network produces output loss
I0428 19:33:42.213181 23158 net.cpp:257] Network initialization done.
I0428 19:33:42.213484 23158 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test186.prototxt
I0428 19:33:42.213508 23158 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:42.213587 23158 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:42.213647 23158 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:42.213691 23158 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:42.213703 23158 net.cpp:86] Creating Layer mnist
I0428 19:33:42.213707 23158 net.cpp:382] mnist -> data
I0428 19:33:42.213729 23158 net.cpp:382] mnist -> label
I0428 19:33:42.213816 23158 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:42.214884 23158 net.cpp:124] Setting up mnist
I0428 19:33:42.214896 23158 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:42.214901 23158 net.cpp:131] Top shape: 100 (100)
I0428 19:33:42.214905 23158 net.cpp:139] Memory required for data: 314000
I0428 19:33:42.214907 23158 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:42.214915 23158 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:42.214917 23158 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:42.214936 23158 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:42.214942 23158 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:42.214993 23158 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:42.214999 23158 net.cpp:131] Top shape: 100 (100)
I0428 19:33:42.215003 23158 net.cpp:131] Top shape: 100 (100)
I0428 19:33:42.215005 23158 net.cpp:139] Memory required for data: 314800
I0428 19:33:42.215032 23158 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:42.215040 23158 net.cpp:86] Creating Layer conv0
I0428 19:33:42.215044 23158 net.cpp:408] conv0 <- data
I0428 19:33:42.215049 23158 net.cpp:382] conv0 -> conv0
I0428 19:33:42.216737 23158 net.cpp:124] Setting up conv0
I0428 19:33:42.216766 23158 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:42.216769 23158 net.cpp:139] Memory required for data: 6074800
I0428 19:33:42.216778 23158 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:42.216784 23158 net.cpp:86] Creating Layer pool0
I0428 19:33:42.216789 23158 net.cpp:408] pool0 <- conv0
I0428 19:33:42.216792 23158 net.cpp:382] pool0 -> pool0
I0428 19:33:42.216850 23158 net.cpp:124] Setting up pool0
I0428 19:33:42.216856 23158 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:42.216858 23158 net.cpp:139] Memory required for data: 7514800
I0428 19:33:42.216861 23158 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:42.216884 23158 net.cpp:86] Creating Layer ip1
I0428 19:33:42.216887 23158 net.cpp:408] ip1 <- pool0
I0428 19:33:42.216892 23158 net.cpp:382] ip1 -> ip1
I0428 19:33:42.218902 23158 net.cpp:124] Setting up ip1
I0428 19:33:42.218914 23158 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:42.218917 23158 net.cpp:139] Memory required for data: 7534800
I0428 19:33:42.218924 23158 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:42.218930 23158 net.cpp:86] Creating Layer relu1
I0428 19:33:42.218933 23158 net.cpp:408] relu1 <- ip1
I0428 19:33:42.218943 23158 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:42.219125 23158 net.cpp:124] Setting up relu1
I0428 19:33:42.219135 23158 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:42.219138 23158 net.cpp:139] Memory required for data: 7554800
I0428 19:33:42.219141 23158 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:42.219147 23158 net.cpp:86] Creating Layer ip2
I0428 19:33:42.219151 23158 net.cpp:408] ip2 <- ip1
I0428 19:33:42.219161 23158 net.cpp:382] ip2 -> ip2
I0428 19:33:42.219259 23158 net.cpp:124] Setting up ip2
I0428 19:33:42.219265 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.219269 23158 net.cpp:139] Memory required for data: 7558800
I0428 19:33:42.219276 23158 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:42.219280 23158 net.cpp:86] Creating Layer relu2
I0428 19:33:42.219285 23158 net.cpp:408] relu2 <- ip2
I0428 19:33:42.219288 23158 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:42.220191 23158 net.cpp:124] Setting up relu2
I0428 19:33:42.220203 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.220206 23158 net.cpp:139] Memory required for data: 7562800
I0428 19:33:42.220211 23158 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:42.220218 23158 net.cpp:86] Creating Layer ip3
I0428 19:33:42.220223 23158 net.cpp:408] ip3 <- ip2
I0428 19:33:42.220229 23158 net.cpp:382] ip3 -> ip3
I0428 19:33:42.220373 23158 net.cpp:124] Setting up ip3
I0428 19:33:42.220381 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.220384 23158 net.cpp:139] Memory required for data: 7566800
I0428 19:33:42.220391 23158 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:42.220396 23158 net.cpp:86] Creating Layer relu3
I0428 19:33:42.220413 23158 net.cpp:408] relu3 <- ip3
I0428 19:33:42.220417 23158 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:42.220582 23158 net.cpp:124] Setting up relu3
I0428 19:33:42.220589 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.220592 23158 net.cpp:139] Memory required for data: 7570800
I0428 19:33:42.220594 23158 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:42.220599 23158 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:42.220602 23158 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:42.220618 23158 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:42.220623 23158 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:42.220654 23158 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:42.220659 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.220661 23158 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:42.220674 23158 net.cpp:139] Memory required for data: 7578800
I0428 19:33:42.220677 23158 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:42.220682 23158 net.cpp:86] Creating Layer accuracy
I0428 19:33:42.220685 23158 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:42.220705 23158 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:42.220710 23158 net.cpp:382] accuracy -> accuracy
I0428 19:33:42.220716 23158 net.cpp:124] Setting up accuracy
I0428 19:33:42.220719 23158 net.cpp:131] Top shape: (1)
I0428 19:33:42.220722 23158 net.cpp:139] Memory required for data: 7578804
I0428 19:33:42.220726 23158 layer_factory.hpp:77] Creating layer loss
I0428 19:33:42.220729 23158 net.cpp:86] Creating Layer loss
I0428 19:33:42.220732 23158 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:42.220736 23158 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:42.220741 23158 net.cpp:382] loss -> loss
I0428 19:33:42.220746 23158 layer_factory.hpp:77] Creating layer loss
I0428 19:33:42.221038 23158 net.cpp:124] Setting up loss
I0428 19:33:42.221047 23158 net.cpp:131] Top shape: (1)
I0428 19:33:42.221051 23158 net.cpp:134]     with loss weight 1
I0428 19:33:42.221057 23158 net.cpp:139] Memory required for data: 7578808
I0428 19:33:42.221060 23158 net.cpp:200] loss needs backward computation.
I0428 19:33:42.221065 23158 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:42.221068 23158 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:42.221071 23158 net.cpp:200] relu3 needs backward computation.
I0428 19:33:42.221073 23158 net.cpp:200] ip3 needs backward computation.
I0428 19:33:42.221077 23158 net.cpp:200] relu2 needs backward computation.
I0428 19:33:42.221079 23158 net.cpp:200] ip2 needs backward computation.
I0428 19:33:42.221082 23158 net.cpp:200] relu1 needs backward computation.
I0428 19:33:42.221086 23158 net.cpp:200] ip1 needs backward computation.
I0428 19:33:42.221088 23158 net.cpp:200] pool0 needs backward computation.
I0428 19:33:42.221091 23158 net.cpp:200] conv0 needs backward computation.
I0428 19:33:42.221096 23158 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:42.221098 23158 net.cpp:202] mnist does not need backward computation.
I0428 19:33:42.221114 23158 net.cpp:244] This network produces output accuracy
I0428 19:33:42.221118 23158 net.cpp:244] This network produces output loss
I0428 19:33:42.221127 23158 net.cpp:257] Network initialization done.
I0428 19:33:42.221176 23158 solver.cpp:56] Solver scaffolding done.
I0428 19:33:42.221437 23158 caffe.cpp:248] Starting Optimization
I0428 19:33:42.221443 23158 solver.cpp:273] Solving LeNet
I0428 19:33:42.221446 23158 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:42.222259 23158 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:42.229878 23158 blocking_queue.cpp:49] Waiting for data
I0428 19:33:42.298487 23165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:42.299355 23158 solver.cpp:398]     Test net output #0: accuracy = 0.1134
I0428 19:33:42.299376 23158 solver.cpp:398]     Test net output #1: loss = 2.29764 (* 1 = 2.29764 loss)
I0428 19:33:42.303107 23158 solver.cpp:219] Iteration 0 (0 iter/s, 0.0816364s/100 iters), loss = 2.28959
I0428 19:33:42.303129 23158 solver.cpp:238]     Train net output #0: loss = 2.28959 (* 1 = 2.28959 loss)
I0428 19:33:42.303141 23158 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:42.402971 23158 solver.cpp:219] Iteration 100 (1001.71 iter/s, 0.0998298s/100 iters), loss = 0.533171
I0428 19:33:42.403010 23158 solver.cpp:238]     Train net output #0: loss = 0.533171 (* 1 = 0.533171 loss)
I0428 19:33:42.403017 23158 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:42.505844 23158 solver.cpp:219] Iteration 200 (972.536 iter/s, 0.102824s/100 iters), loss = 0.514401
I0428 19:33:42.505867 23158 solver.cpp:238]     Train net output #0: loss = 0.514401 (* 1 = 0.514401 loss)
I0428 19:33:42.505873 23158 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:42.609491 23158 solver.cpp:219] Iteration 300 (965.125 iter/s, 0.103614s/100 iters), loss = 0.434264
I0428 19:33:42.609514 23158 solver.cpp:238]     Train net output #0: loss = 0.434264 (* 1 = 0.434264 loss)
I0428 19:33:42.609520 23158 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:42.708159 23158 solver.cpp:219] Iteration 400 (1013.84 iter/s, 0.0986347s/100 iters), loss = 0.530312
I0428 19:33:42.708181 23158 solver.cpp:238]     Train net output #0: loss = 0.530312 (* 1 = 0.530312 loss)
I0428 19:33:42.708187 23158 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:42.807610 23158 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:42.873169 23165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:42.874109 23158 solver.cpp:398]     Test net output #0: accuracy = 0.9062
I0428 19:33:42.874128 23158 solver.cpp:398]     Test net output #1: loss = 0.398049 (* 1 = 0.398049 loss)
I0428 19:33:42.875138 23158 solver.cpp:219] Iteration 500 (599.004 iter/s, 0.166944s/100 iters), loss = 0.399639
I0428 19:33:42.875162 23158 solver.cpp:238]     Train net output #0: loss = 0.399639 (* 1 = 0.399639 loss)
I0428 19:33:42.875169 23158 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:42.981341 23158 solver.cpp:219] Iteration 600 (941.891 iter/s, 0.106169s/100 iters), loss = 0.33197
I0428 19:33:42.981365 23158 solver.cpp:238]     Train net output #0: loss = 0.33197 (* 1 = 0.33197 loss)
I0428 19:33:42.981385 23158 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:43.079934 23158 solver.cpp:219] Iteration 700 (1014.61 iter/s, 0.0985599s/100 iters), loss = 0.542576
I0428 19:33:43.079957 23158 solver.cpp:238]     Train net output #0: loss = 0.542576 (* 1 = 0.542576 loss)
I0428 19:33:43.079978 23158 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:43.184425 23158 solver.cpp:219] Iteration 800 (957.33 iter/s, 0.104457s/100 iters), loss = 0.418484
I0428 19:33:43.184448 23158 solver.cpp:238]     Train net output #0: loss = 0.418484 (* 1 = 0.418484 loss)
I0428 19:33:43.184469 23158 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:43.282961 23158 solver.cpp:219] Iteration 900 (1015.19 iter/s, 0.0985035s/100 iters), loss = 0.3768
I0428 19:33:43.282984 23158 solver.cpp:238]     Train net output #0: loss = 0.3768 (* 1 = 0.3768 loss)
I0428 19:33:43.283005 23158 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:43.317209 23164 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:43.388104 23158 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:43.392109 23158 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:43.393940 23158 solver.cpp:311] Iteration 1000, loss = 0.385559
I0428 19:33:43.393955 23158 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:43.456400 23165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:43.458494 23158 solver.cpp:398]     Test net output #0: accuracy = 0.9521
I0428 19:33:43.458513 23158 solver.cpp:398]     Test net output #1: loss = 0.336673 (* 1 = 0.336673 loss)
I0428 19:33:43.458518 23158 solver.cpp:316] Optimization Done.
I0428 19:33:43.458520 23158 caffe.cpp:259] Optimization Done.
