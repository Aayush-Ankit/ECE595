I0428 20:25:39.767802  2642 caffe.cpp:218] Using GPUs 0
I0428 20:25:39.804875  2642 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:40.317401  2642 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1458.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:40.317550  2642 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1458.prototxt
I0428 20:25:40.317968  2642 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:40.317988  2642 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:40.318091  2642 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:40.318172  2642 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:40.318274  2642 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:40.318297  2642 net.cpp:86] Creating Layer mnist
I0428 20:25:40.318306  2642 net.cpp:382] mnist -> data
I0428 20:25:40.318328  2642 net.cpp:382] mnist -> label
I0428 20:25:40.319423  2642 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:40.321883  2642 net.cpp:124] Setting up mnist
I0428 20:25:40.321904  2642 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:40.321910  2642 net.cpp:131] Top shape: 64 (64)
I0428 20:25:40.321913  2642 net.cpp:139] Memory required for data: 200960
I0428 20:25:40.321921  2642 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:40.321949  2642 net.cpp:86] Creating Layer conv0
I0428 20:25:40.321971  2642 net.cpp:408] conv0 <- data
I0428 20:25:40.321985  2642 net.cpp:382] conv0 -> conv0
I0428 20:25:40.635466  2642 net.cpp:124] Setting up conv0
I0428 20:25:40.635499  2642 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:40.635504  2642 net.cpp:139] Memory required for data: 14946560
I0428 20:25:40.635522  2642 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:40.635536  2642 net.cpp:86] Creating Layer pool0
I0428 20:25:40.635541  2642 net.cpp:408] pool0 <- conv0
I0428 20:25:40.635547  2642 net.cpp:382] pool0 -> pool0
I0428 20:25:40.635604  2642 net.cpp:124] Setting up pool0
I0428 20:25:40.635612  2642 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:40.635614  2642 net.cpp:139] Memory required for data: 18632960
I0428 20:25:40.635618  2642 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:40.635632  2642 net.cpp:86] Creating Layer conv1
I0428 20:25:40.635635  2642 net.cpp:408] conv1 <- pool0
I0428 20:25:40.635643  2642 net.cpp:382] conv1 -> conv1
I0428 20:25:40.638814  2642 net.cpp:124] Setting up conv1
I0428 20:25:40.638833  2642 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:40.638837  2642 net.cpp:139] Memory required for data: 18665728
I0428 20:25:40.638847  2642 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:40.638856  2642 net.cpp:86] Creating Layer pool1
I0428 20:25:40.638862  2642 net.cpp:408] pool1 <- conv1
I0428 20:25:40.638869  2642 net.cpp:382] pool1 -> pool1
I0428 20:25:40.638913  2642 net.cpp:124] Setting up pool1
I0428 20:25:40.638919  2642 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:40.638923  2642 net.cpp:139] Memory required for data: 18673920
I0428 20:25:40.638927  2642 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:40.638936  2642 net.cpp:86] Creating Layer ip1
I0428 20:25:40.638939  2642 net.cpp:408] ip1 <- pool1
I0428 20:25:40.638944  2642 net.cpp:382] ip1 -> ip1
I0428 20:25:40.639060  2642 net.cpp:124] Setting up ip1
I0428 20:25:40.639070  2642 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:40.639073  2642 net.cpp:139] Memory required for data: 18676480
I0428 20:25:40.639081  2642 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:40.639088  2642 net.cpp:86] Creating Layer relu1
I0428 20:25:40.639092  2642 net.cpp:408] relu1 <- ip1
I0428 20:25:40.639097  2642 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:40.639293  2642 net.cpp:124] Setting up relu1
I0428 20:25:40.639304  2642 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:40.639307  2642 net.cpp:139] Memory required for data: 18679040
I0428 20:25:40.639312  2642 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:40.639319  2642 net.cpp:86] Creating Layer ip2
I0428 20:25:40.639323  2642 net.cpp:408] ip2 <- ip1
I0428 20:25:40.639329  2642 net.cpp:382] ip2 -> ip2
I0428 20:25:40.639442  2642 net.cpp:124] Setting up ip2
I0428 20:25:40.639451  2642 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:25:40.639454  2642 net.cpp:139] Memory required for data: 18685440
I0428 20:25:40.639461  2642 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:40.639468  2642 net.cpp:86] Creating Layer relu2
I0428 20:25:40.639472  2642 net.cpp:408] relu2 <- ip2
I0428 20:25:40.639477  2642 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:40.640321  2642 net.cpp:124] Setting up relu2
I0428 20:25:40.640336  2642 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:25:40.640341  2642 net.cpp:139] Memory required for data: 18691840
I0428 20:25:40.640346  2642 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:40.640352  2642 net.cpp:86] Creating Layer ip3
I0428 20:25:40.640357  2642 net.cpp:408] ip3 <- ip2
I0428 20:25:40.640363  2642 net.cpp:382] ip3 -> ip3
I0428 20:25:40.640480  2642 net.cpp:124] Setting up ip3
I0428 20:25:40.640491  2642 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:40.640493  2642 net.cpp:139] Memory required for data: 18694400
I0428 20:25:40.640502  2642 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:40.640508  2642 net.cpp:86] Creating Layer relu3
I0428 20:25:40.640512  2642 net.cpp:408] relu3 <- ip3
I0428 20:25:40.640516  2642 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:40.640730  2642 net.cpp:124] Setting up relu3
I0428 20:25:40.640743  2642 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:40.640745  2642 net.cpp:139] Memory required for data: 18696960
I0428 20:25:40.640749  2642 layer_factory.hpp:77] Creating layer loss
I0428 20:25:40.640756  2642 net.cpp:86] Creating Layer loss
I0428 20:25:40.640759  2642 net.cpp:408] loss <- ip3
I0428 20:25:40.640764  2642 net.cpp:408] loss <- label
I0428 20:25:40.640772  2642 net.cpp:382] loss -> loss
I0428 20:25:40.640789  2642 layer_factory.hpp:77] Creating layer loss
I0428 20:25:40.641084  2642 net.cpp:124] Setting up loss
I0428 20:25:40.641096  2642 net.cpp:131] Top shape: (1)
I0428 20:25:40.641100  2642 net.cpp:134]     with loss weight 1
I0428 20:25:40.641115  2642 net.cpp:139] Memory required for data: 18696964
I0428 20:25:40.641119  2642 net.cpp:200] loss needs backward computation.
I0428 20:25:40.641124  2642 net.cpp:200] relu3 needs backward computation.
I0428 20:25:40.641129  2642 net.cpp:200] ip3 needs backward computation.
I0428 20:25:40.641131  2642 net.cpp:200] relu2 needs backward computation.
I0428 20:25:40.641134  2642 net.cpp:200] ip2 needs backward computation.
I0428 20:25:40.641139  2642 net.cpp:200] relu1 needs backward computation.
I0428 20:25:40.641141  2642 net.cpp:200] ip1 needs backward computation.
I0428 20:25:40.641144  2642 net.cpp:200] pool1 needs backward computation.
I0428 20:25:40.641149  2642 net.cpp:200] conv1 needs backward computation.
I0428 20:25:40.641151  2642 net.cpp:200] pool0 needs backward computation.
I0428 20:25:40.641155  2642 net.cpp:200] conv0 needs backward computation.
I0428 20:25:40.641160  2642 net.cpp:202] mnist does not need backward computation.
I0428 20:25:40.641162  2642 net.cpp:244] This network produces output loss
I0428 20:25:40.641175  2642 net.cpp:257] Network initialization done.
I0428 20:25:40.641561  2642 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1458.prototxt
I0428 20:25:40.641594  2642 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:40.641706  2642 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:40.641808  2642 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:40.641857  2642 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:40.641875  2642 net.cpp:86] Creating Layer mnist
I0428 20:25:40.641883  2642 net.cpp:382] mnist -> data
I0428 20:25:40.641892  2642 net.cpp:382] mnist -> label
I0428 20:25:40.641996  2642 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:40.644191  2642 net.cpp:124] Setting up mnist
I0428 20:25:40.644207  2642 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:40.644212  2642 net.cpp:131] Top shape: 100 (100)
I0428 20:25:40.644215  2642 net.cpp:139] Memory required for data: 314000
I0428 20:25:40.644219  2642 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:40.644233  2642 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:40.644238  2642 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:40.644243  2642 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:40.644251  2642 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:40.644309  2642 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:40.644315  2642 net.cpp:131] Top shape: 100 (100)
I0428 20:25:40.644318  2642 net.cpp:131] Top shape: 100 (100)
I0428 20:25:40.644322  2642 net.cpp:139] Memory required for data: 314800
I0428 20:25:40.644325  2642 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:40.644336  2642 net.cpp:86] Creating Layer conv0
I0428 20:25:40.644340  2642 net.cpp:408] conv0 <- data
I0428 20:25:40.644347  2642 net.cpp:382] conv0 -> conv0
I0428 20:25:40.646354  2642 net.cpp:124] Setting up conv0
I0428 20:25:40.646371  2642 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:40.646376  2642 net.cpp:139] Memory required for data: 23354800
I0428 20:25:40.646386  2642 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:40.646395  2642 net.cpp:86] Creating Layer pool0
I0428 20:25:40.646399  2642 net.cpp:408] pool0 <- conv0
I0428 20:25:40.646405  2642 net.cpp:382] pool0 -> pool0
I0428 20:25:40.646451  2642 net.cpp:124] Setting up pool0
I0428 20:25:40.646458  2642 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:40.646461  2642 net.cpp:139] Memory required for data: 29114800
I0428 20:25:40.646464  2642 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:40.646476  2642 net.cpp:86] Creating Layer conv1
I0428 20:25:40.646479  2642 net.cpp:408] conv1 <- pool0
I0428 20:25:40.646487  2642 net.cpp:382] conv1 -> conv1
I0428 20:25:40.648282  2642 net.cpp:124] Setting up conv1
I0428 20:25:40.648298  2642 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:40.648301  2642 net.cpp:139] Memory required for data: 29166000
I0428 20:25:40.648313  2642 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:40.648322  2642 net.cpp:86] Creating Layer pool1
I0428 20:25:40.648326  2642 net.cpp:408] pool1 <- conv1
I0428 20:25:40.648334  2642 net.cpp:382] pool1 -> pool1
I0428 20:25:40.648378  2642 net.cpp:124] Setting up pool1
I0428 20:25:40.648385  2642 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:40.648387  2642 net.cpp:139] Memory required for data: 29178800
I0428 20:25:40.648391  2642 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:40.648399  2642 net.cpp:86] Creating Layer ip1
I0428 20:25:40.648403  2642 net.cpp:408] ip1 <- pool1
I0428 20:25:40.648409  2642 net.cpp:382] ip1 -> ip1
I0428 20:25:40.648532  2642 net.cpp:124] Setting up ip1
I0428 20:25:40.648545  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.648561  2642 net.cpp:139] Memory required for data: 29182800
I0428 20:25:40.648571  2642 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:40.648578  2642 net.cpp:86] Creating Layer relu1
I0428 20:25:40.648582  2642 net.cpp:408] relu1 <- ip1
I0428 20:25:40.648587  2642 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:40.648838  2642 net.cpp:124] Setting up relu1
I0428 20:25:40.648859  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.648862  2642 net.cpp:139] Memory required for data: 29186800
I0428 20:25:40.648866  2642 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:40.648876  2642 net.cpp:86] Creating Layer ip2
I0428 20:25:40.648880  2642 net.cpp:408] ip2 <- ip1
I0428 20:25:40.648887  2642 net.cpp:382] ip2 -> ip2
I0428 20:25:40.649032  2642 net.cpp:124] Setting up ip2
I0428 20:25:40.649041  2642 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:25:40.649045  2642 net.cpp:139] Memory required for data: 29196800
I0428 20:25:40.649051  2642 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:40.649063  2642 net.cpp:86] Creating Layer relu2
I0428 20:25:40.649067  2642 net.cpp:408] relu2 <- ip2
I0428 20:25:40.649072  2642 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:40.649263  2642 net.cpp:124] Setting up relu2
I0428 20:25:40.649273  2642 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:25:40.649277  2642 net.cpp:139] Memory required for data: 29206800
I0428 20:25:40.649281  2642 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:40.649286  2642 net.cpp:86] Creating Layer ip3
I0428 20:25:40.649291  2642 net.cpp:408] ip3 <- ip2
I0428 20:25:40.649302  2642 net.cpp:382] ip3 -> ip3
I0428 20:25:40.649422  2642 net.cpp:124] Setting up ip3
I0428 20:25:40.649431  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.649435  2642 net.cpp:139] Memory required for data: 29210800
I0428 20:25:40.649444  2642 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:40.649449  2642 net.cpp:86] Creating Layer relu3
I0428 20:25:40.649453  2642 net.cpp:408] relu3 <- ip3
I0428 20:25:40.649458  2642 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:40.650389  2642 net.cpp:124] Setting up relu3
I0428 20:25:40.650404  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.650408  2642 net.cpp:139] Memory required for data: 29214800
I0428 20:25:40.650413  2642 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:40.650418  2642 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:40.650423  2642 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:40.650429  2642 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:40.650437  2642 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:40.650486  2642 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:40.650492  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.650496  2642 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:40.650501  2642 net.cpp:139] Memory required for data: 29222800
I0428 20:25:40.650504  2642 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:40.650511  2642 net.cpp:86] Creating Layer accuracy
I0428 20:25:40.650516  2642 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:40.650521  2642 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:40.650527  2642 net.cpp:382] accuracy -> accuracy
I0428 20:25:40.650534  2642 net.cpp:124] Setting up accuracy
I0428 20:25:40.650540  2642 net.cpp:131] Top shape: (1)
I0428 20:25:40.650543  2642 net.cpp:139] Memory required for data: 29222804
I0428 20:25:40.650547  2642 layer_factory.hpp:77] Creating layer loss
I0428 20:25:40.650552  2642 net.cpp:86] Creating Layer loss
I0428 20:25:40.650557  2642 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:40.650560  2642 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:40.650571  2642 net.cpp:382] loss -> loss
I0428 20:25:40.650578  2642 layer_factory.hpp:77] Creating layer loss
I0428 20:25:40.650868  2642 net.cpp:124] Setting up loss
I0428 20:25:40.650882  2642 net.cpp:131] Top shape: (1)
I0428 20:25:40.650884  2642 net.cpp:134]     with loss weight 1
I0428 20:25:40.650903  2642 net.cpp:139] Memory required for data: 29222808
I0428 20:25:40.650907  2642 net.cpp:200] loss needs backward computation.
I0428 20:25:40.650923  2642 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:40.650928  2642 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:40.650931  2642 net.cpp:200] relu3 needs backward computation.
I0428 20:25:40.650934  2642 net.cpp:200] ip3 needs backward computation.
I0428 20:25:40.650938  2642 net.cpp:200] relu2 needs backward computation.
I0428 20:25:40.650943  2642 net.cpp:200] ip2 needs backward computation.
I0428 20:25:40.650945  2642 net.cpp:200] relu1 needs backward computation.
I0428 20:25:40.650949  2642 net.cpp:200] ip1 needs backward computation.
I0428 20:25:40.650952  2642 net.cpp:200] pool1 needs backward computation.
I0428 20:25:40.650956  2642 net.cpp:200] conv1 needs backward computation.
I0428 20:25:40.650960  2642 net.cpp:200] pool0 needs backward computation.
I0428 20:25:40.650964  2642 net.cpp:200] conv0 needs backward computation.
I0428 20:25:40.650969  2642 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:40.650981  2642 net.cpp:202] mnist does not need backward computation.
I0428 20:25:40.650985  2642 net.cpp:244] This network produces output accuracy
I0428 20:25:40.650990  2642 net.cpp:244] This network produces output loss
I0428 20:25:40.651002  2642 net.cpp:257] Network initialization done.
I0428 20:25:40.651053  2642 solver.cpp:56] Solver scaffolding done.
I0428 20:25:40.651481  2642 caffe.cpp:248] Starting Optimization
I0428 20:25:40.651489  2642 solver.cpp:273] Solving LeNet
I0428 20:25:40.651492  2642 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:40.652467  2642 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:40.752310  2654 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:40.754992  2642 solver.cpp:398]     Test net output #0: accuracy = 0.0949
I0428 20:25:40.755017  2642 solver.cpp:398]     Test net output #1: loss = 2.30263 (* 1 = 2.30263 loss)
I0428 20:25:40.759894  2642 solver.cpp:219] Iteration 0 (-1.01073e-37 iter/s, 0.108367s/100 iters), loss = 2.30484
I0428 20:25:40.759925  2642 solver.cpp:238]     Train net output #0: loss = 2.30484 (* 1 = 2.30484 loss)
I0428 20:25:40.759939  2642 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:40.975440  2642 solver.cpp:219] Iteration 100 (464.066 iter/s, 0.215486s/100 iters), loss = 0.90695
I0428 20:25:40.975493  2642 solver.cpp:238]     Train net output #0: loss = 0.90695 (* 1 = 0.90695 loss)
I0428 20:25:40.975507  2642 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:41.195472  2642 solver.cpp:219] Iteration 200 (454.617 iter/s, 0.219965s/100 iters), loss = 0.930966
I0428 20:25:41.195513  2642 solver.cpp:238]     Train net output #0: loss = 0.930966 (* 1 = 0.930966 loss)
I0428 20:25:41.195523  2642 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:41.401530  2642 solver.cpp:219] Iteration 300 (485.446 iter/s, 0.205996s/100 iters), loss = 0.681249
I0428 20:25:41.401582  2642 solver.cpp:238]     Train net output #0: loss = 0.681249 (* 1 = 0.681249 loss)
I0428 20:25:41.401595  2642 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:41.616323  2642 solver.cpp:219] Iteration 400 (465.717 iter/s, 0.214723s/100 iters), loss = 0.80527
I0428 20:25:41.616380  2642 solver.cpp:238]     Train net output #0: loss = 0.80527 (* 1 = 0.80527 loss)
I0428 20:25:41.616394  2642 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:41.829800  2642 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:41.929374  2654 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:41.932143  2642 solver.cpp:398]     Test net output #0: accuracy = 0.8094
I0428 20:25:41.932169  2642 solver.cpp:398]     Test net output #1: loss = 0.698581 (* 1 = 0.698581 loss)
I0428 20:25:41.934120  2642 solver.cpp:219] Iteration 500 (314.737 iter/s, 0.317726s/100 iters), loss = 0.732628
I0428 20:25:41.934147  2642 solver.cpp:238]     Train net output #0: loss = 0.732628 (* 1 = 0.732628 loss)
I0428 20:25:41.934175  2642 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:42.153602  2642 solver.cpp:219] Iteration 600 (455.72 iter/s, 0.219433s/100 iters), loss = 0.578071
I0428 20:25:42.153647  2642 solver.cpp:238]     Train net output #0: loss = 0.578071 (* 1 = 0.578071 loss)
I0428 20:25:42.153659  2642 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:42.367593  2642 solver.cpp:219] Iteration 700 (467.445 iter/s, 0.213929s/100 iters), loss = 0.818287
I0428 20:25:42.367633  2642 solver.cpp:238]     Train net output #0: loss = 0.818287 (* 1 = 0.818287 loss)
I0428 20:25:42.367642  2642 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:42.576217  2642 solver.cpp:219] Iteration 800 (479.471 iter/s, 0.208563s/100 iters), loss = 0.563332
I0428 20:25:42.576282  2642 solver.cpp:238]     Train net output #0: loss = 0.563332 (* 1 = 0.563332 loss)
I0428 20:25:42.576295  2642 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:42.786357  2642 solver.cpp:219] Iteration 900 (476.035 iter/s, 0.210069s/100 iters), loss = 0.506058
I0428 20:25:42.786391  2642 solver.cpp:238]     Train net output #0: loss = 0.506058 (* 1 = 0.506058 loss)
I0428 20:25:42.786398  2642 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:42.853855  2652 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:43.001730  2642 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:43.003558  2642 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:43.005230  2642 solver.cpp:311] Iteration 1000, loss = 0.464741
I0428 20:25:43.005267  2642 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:43.112993  2654 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:43.115897  2642 solver.cpp:398]     Test net output #0: accuracy = 0.8665
I0428 20:25:43.115923  2642 solver.cpp:398]     Test net output #1: loss = 0.371326 (* 1 = 0.371326 loss)
I0428 20:25:43.115931  2642 solver.cpp:316] Optimization Done.
I0428 20:25:43.115936  2642 caffe.cpp:259] Optimization Done.
