I0428 19:40:23.607938 24539 caffe.cpp:218] Using GPUs 0
I0428 19:40:23.644227 24539 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:24.152004 24539 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test333.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:24.152181 24539 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test333.prototxt
I0428 19:40:24.152607 24539 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:24.152633 24539 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:24.152748 24539 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:24.152870 24539 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:24.153005 24539 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:24.153043 24539 net.cpp:86] Creating Layer mnist
I0428 19:40:24.153054 24539 net.cpp:382] mnist -> data
I0428 19:40:24.153084 24539 net.cpp:382] mnist -> label
I0428 19:40:24.154377 24539 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:24.156858 24539 net.cpp:124] Setting up mnist
I0428 19:40:24.156879 24539 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:24.156893 24539 net.cpp:131] Top shape: 64 (64)
I0428 19:40:24.156898 24539 net.cpp:139] Memory required for data: 200960
I0428 19:40:24.156908 24539 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:24.156931 24539 net.cpp:86] Creating Layer conv0
I0428 19:40:24.156955 24539 net.cpp:408] conv0 <- data
I0428 19:40:24.156976 24539 net.cpp:382] conv0 -> conv0
I0428 19:40:24.411252 24539 net.cpp:124] Setting up conv0
I0428 19:40:24.411280 24539 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:24.411285 24539 net.cpp:139] Memory required for data: 495872
I0428 19:40:24.411320 24539 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:24.411337 24539 net.cpp:86] Creating Layer pool0
I0428 19:40:24.411344 24539 net.cpp:408] pool0 <- conv0
I0428 19:40:24.411352 24539 net.cpp:382] pool0 -> pool0
I0428 19:40:24.411409 24539 net.cpp:124] Setting up pool0
I0428 19:40:24.411417 24539 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:24.411422 24539 net.cpp:139] Memory required for data: 569600
I0428 19:40:24.411427 24539 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:24.411442 24539 net.cpp:86] Creating Layer conv1
I0428 19:40:24.411448 24539 net.cpp:408] conv1 <- pool0
I0428 19:40:24.411456 24539 net.cpp:382] conv1 -> conv1
I0428 19:40:24.413353 24539 net.cpp:124] Setting up conv1
I0428 19:40:24.413370 24539 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:24.413377 24539 net.cpp:139] Memory required for data: 651520
I0428 19:40:24.413390 24539 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:24.413403 24539 net.cpp:86] Creating Layer pool1
I0428 19:40:24.413408 24539 net.cpp:408] pool1 <- conv1
I0428 19:40:24.413417 24539 net.cpp:382] pool1 -> pool1
I0428 19:40:24.413462 24539 net.cpp:124] Setting up pool1
I0428 19:40:24.413471 24539 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:24.413476 24539 net.cpp:139] Memory required for data: 672000
I0428 19:40:24.413481 24539 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:24.413492 24539 net.cpp:86] Creating Layer ip1
I0428 19:40:24.413498 24539 net.cpp:408] ip1 <- pool1
I0428 19:40:24.413507 24539 net.cpp:382] ip1 -> ip1
I0428 19:40:24.414538 24539 net.cpp:124] Setting up ip1
I0428 19:40:24.414553 24539 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:24.414558 24539 net.cpp:139] Memory required for data: 678400
I0428 19:40:24.414571 24539 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:24.414594 24539 net.cpp:86] Creating Layer relu1
I0428 19:40:24.414600 24539 net.cpp:408] relu1 <- ip1
I0428 19:40:24.414608 24539 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:24.414777 24539 net.cpp:124] Setting up relu1
I0428 19:40:24.414788 24539 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:24.414793 24539 net.cpp:139] Memory required for data: 684800
I0428 19:40:24.414798 24539 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:24.414808 24539 net.cpp:86] Creating Layer ip2
I0428 19:40:24.414813 24539 net.cpp:408] ip2 <- ip1
I0428 19:40:24.414821 24539 net.cpp:382] ip2 -> ip2
I0428 19:40:24.414922 24539 net.cpp:124] Setting up ip2
I0428 19:40:24.414932 24539 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:24.414937 24539 net.cpp:139] Memory required for data: 687360
I0428 19:40:24.414945 24539 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:24.414954 24539 net.cpp:86] Creating Layer relu2
I0428 19:40:24.414963 24539 net.cpp:408] relu2 <- ip2
I0428 19:40:24.414970 24539 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:24.415766 24539 net.cpp:124] Setting up relu2
I0428 19:40:24.415779 24539 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:24.415784 24539 net.cpp:139] Memory required for data: 689920
I0428 19:40:24.415791 24539 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:24.415802 24539 net.cpp:86] Creating Layer ip3
I0428 19:40:24.415807 24539 net.cpp:408] ip3 <- ip2
I0428 19:40:24.415815 24539 net.cpp:382] ip3 -> ip3
I0428 19:40:24.415935 24539 net.cpp:124] Setting up ip3
I0428 19:40:24.415944 24539 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:24.415964 24539 net.cpp:139] Memory required for data: 692480
I0428 19:40:24.415977 24539 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:24.415987 24539 net.cpp:86] Creating Layer relu3
I0428 19:40:24.415994 24539 net.cpp:408] relu3 <- ip3
I0428 19:40:24.416000 24539 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:24.416187 24539 net.cpp:124] Setting up relu3
I0428 19:40:24.416198 24539 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:24.416203 24539 net.cpp:139] Memory required for data: 695040
I0428 19:40:24.416208 24539 layer_factory.hpp:77] Creating layer loss
I0428 19:40:24.416216 24539 net.cpp:86] Creating Layer loss
I0428 19:40:24.416221 24539 net.cpp:408] loss <- ip3
I0428 19:40:24.416227 24539 net.cpp:408] loss <- label
I0428 19:40:24.416235 24539 net.cpp:382] loss -> loss
I0428 19:40:24.416256 24539 layer_factory.hpp:77] Creating layer loss
I0428 19:40:24.416502 24539 net.cpp:124] Setting up loss
I0428 19:40:24.416512 24539 net.cpp:131] Top shape: (1)
I0428 19:40:24.416517 24539 net.cpp:134]     with loss weight 1
I0428 19:40:24.416537 24539 net.cpp:139] Memory required for data: 695044
I0428 19:40:24.416541 24539 net.cpp:200] loss needs backward computation.
I0428 19:40:24.416563 24539 net.cpp:200] relu3 needs backward computation.
I0428 19:40:24.416568 24539 net.cpp:200] ip3 needs backward computation.
I0428 19:40:24.416573 24539 net.cpp:200] relu2 needs backward computation.
I0428 19:40:24.416576 24539 net.cpp:200] ip2 needs backward computation.
I0428 19:40:24.416581 24539 net.cpp:200] relu1 needs backward computation.
I0428 19:40:24.416586 24539 net.cpp:200] ip1 needs backward computation.
I0428 19:40:24.416592 24539 net.cpp:200] pool1 needs backward computation.
I0428 19:40:24.416597 24539 net.cpp:200] conv1 needs backward computation.
I0428 19:40:24.416602 24539 net.cpp:200] pool0 needs backward computation.
I0428 19:40:24.416607 24539 net.cpp:200] conv0 needs backward computation.
I0428 19:40:24.416612 24539 net.cpp:202] mnist does not need backward computation.
I0428 19:40:24.416617 24539 net.cpp:244] This network produces output loss
I0428 19:40:24.416631 24539 net.cpp:257] Network initialization done.
I0428 19:40:24.417016 24539 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test333.prototxt
I0428 19:40:24.417052 24539 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:24.417153 24539 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:24.417315 24539 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:24.417372 24539 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:24.417390 24539 net.cpp:86] Creating Layer mnist
I0428 19:40:24.417399 24539 net.cpp:382] mnist -> data
I0428 19:40:24.417410 24539 net.cpp:382] mnist -> label
I0428 19:40:24.417529 24539 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:24.419737 24539 net.cpp:124] Setting up mnist
I0428 19:40:24.419769 24539 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:24.419775 24539 net.cpp:131] Top shape: 100 (100)
I0428 19:40:24.419780 24539 net.cpp:139] Memory required for data: 314000
I0428 19:40:24.419785 24539 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:24.419814 24539 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:24.419821 24539 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:24.419831 24539 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:24.419842 24539 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:24.419930 24539 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:24.419955 24539 net.cpp:131] Top shape: 100 (100)
I0428 19:40:24.419960 24539 net.cpp:131] Top shape: 100 (100)
I0428 19:40:24.419965 24539 net.cpp:139] Memory required for data: 314800
I0428 19:40:24.419970 24539 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:24.419986 24539 net.cpp:86] Creating Layer conv0
I0428 19:40:24.419993 24539 net.cpp:408] conv0 <- data
I0428 19:40:24.420004 24539 net.cpp:382] conv0 -> conv0
I0428 19:40:24.421872 24539 net.cpp:124] Setting up conv0
I0428 19:40:24.421888 24539 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:24.421893 24539 net.cpp:139] Memory required for data: 775600
I0428 19:40:24.421922 24539 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:24.421931 24539 net.cpp:86] Creating Layer pool0
I0428 19:40:24.421936 24539 net.cpp:408] pool0 <- conv0
I0428 19:40:24.421947 24539 net.cpp:382] pool0 -> pool0
I0428 19:40:24.421988 24539 net.cpp:124] Setting up pool0
I0428 19:40:24.421996 24539 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:24.422000 24539 net.cpp:139] Memory required for data: 890800
I0428 19:40:24.422005 24539 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:24.422020 24539 net.cpp:86] Creating Layer conv1
I0428 19:40:24.422026 24539 net.cpp:408] conv1 <- pool0
I0428 19:40:24.422035 24539 net.cpp:382] conv1 -> conv1
I0428 19:40:24.423768 24539 net.cpp:124] Setting up conv1
I0428 19:40:24.423782 24539 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:24.423804 24539 net.cpp:139] Memory required for data: 1018800
I0428 19:40:24.423818 24539 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:24.423828 24539 net.cpp:86] Creating Layer pool1
I0428 19:40:24.423835 24539 net.cpp:408] pool1 <- conv1
I0428 19:40:24.423842 24539 net.cpp:382] pool1 -> pool1
I0428 19:40:24.423899 24539 net.cpp:124] Setting up pool1
I0428 19:40:24.423908 24539 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:24.423913 24539 net.cpp:139] Memory required for data: 1050800
I0428 19:40:24.423919 24539 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:24.423928 24539 net.cpp:86] Creating Layer ip1
I0428 19:40:24.423934 24539 net.cpp:408] ip1 <- pool1
I0428 19:40:24.423944 24539 net.cpp:382] ip1 -> ip1
I0428 19:40:24.424070 24539 net.cpp:124] Setting up ip1
I0428 19:40:24.424079 24539 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:24.424111 24539 net.cpp:139] Memory required for data: 1060800
I0428 19:40:24.424124 24539 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:24.424134 24539 net.cpp:86] Creating Layer relu1
I0428 19:40:24.424142 24539 net.cpp:408] relu1 <- ip1
I0428 19:40:24.424149 24539 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:24.424319 24539 net.cpp:124] Setting up relu1
I0428 19:40:24.424329 24539 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:24.424334 24539 net.cpp:139] Memory required for data: 1070800
I0428 19:40:24.424340 24539 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:24.424367 24539 net.cpp:86] Creating Layer ip2
I0428 19:40:24.424373 24539 net.cpp:408] ip2 <- ip1
I0428 19:40:24.424382 24539 net.cpp:382] ip2 -> ip2
I0428 19:40:24.424501 24539 net.cpp:124] Setting up ip2
I0428 19:40:24.424510 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.424515 24539 net.cpp:139] Memory required for data: 1074800
I0428 19:40:24.424525 24539 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:24.424535 24539 net.cpp:86] Creating Layer relu2
I0428 19:40:24.424540 24539 net.cpp:408] relu2 <- ip2
I0428 19:40:24.424546 24539 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:24.424765 24539 net.cpp:124] Setting up relu2
I0428 19:40:24.424774 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.424779 24539 net.cpp:139] Memory required for data: 1078800
I0428 19:40:24.424784 24539 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:24.424795 24539 net.cpp:86] Creating Layer ip3
I0428 19:40:24.424800 24539 net.cpp:408] ip3 <- ip2
I0428 19:40:24.424832 24539 net.cpp:382] ip3 -> ip3
I0428 19:40:24.424962 24539 net.cpp:124] Setting up ip3
I0428 19:40:24.424973 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.424978 24539 net.cpp:139] Memory required for data: 1082800
I0428 19:40:24.424993 24539 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:24.425001 24539 net.cpp:86] Creating Layer relu3
I0428 19:40:24.425009 24539 net.cpp:408] relu3 <- ip3
I0428 19:40:24.425016 24539 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:24.425907 24539 net.cpp:124] Setting up relu3
I0428 19:40:24.425921 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.425926 24539 net.cpp:139] Memory required for data: 1086800
I0428 19:40:24.425931 24539 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:24.425940 24539 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:24.425945 24539 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:24.425953 24539 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:24.425963 24539 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:24.426014 24539 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:24.426023 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.426029 24539 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:24.426034 24539 net.cpp:139] Memory required for data: 1094800
I0428 19:40:24.426054 24539 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:24.426064 24539 net.cpp:86] Creating Layer accuracy
I0428 19:40:24.426069 24539 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:24.426081 24539 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:24.426100 24539 net.cpp:382] accuracy -> accuracy
I0428 19:40:24.426111 24539 net.cpp:124] Setting up accuracy
I0428 19:40:24.426120 24539 net.cpp:131] Top shape: (1)
I0428 19:40:24.426125 24539 net.cpp:139] Memory required for data: 1094804
I0428 19:40:24.426139 24539 layer_factory.hpp:77] Creating layer loss
I0428 19:40:24.426149 24539 net.cpp:86] Creating Layer loss
I0428 19:40:24.426156 24539 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:24.426162 24539 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:24.426170 24539 net.cpp:382] loss -> loss
I0428 19:40:24.426180 24539 layer_factory.hpp:77] Creating layer loss
I0428 19:40:24.426476 24539 net.cpp:124] Setting up loss
I0428 19:40:24.426486 24539 net.cpp:131] Top shape: (1)
I0428 19:40:24.426489 24539 net.cpp:134]     with loss weight 1
I0428 19:40:24.426498 24539 net.cpp:139] Memory required for data: 1094808
I0428 19:40:24.426515 24539 net.cpp:200] loss needs backward computation.
I0428 19:40:24.426522 24539 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:24.426527 24539 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:24.426543 24539 net.cpp:200] relu3 needs backward computation.
I0428 19:40:24.426548 24539 net.cpp:200] ip3 needs backward computation.
I0428 19:40:24.426553 24539 net.cpp:200] relu2 needs backward computation.
I0428 19:40:24.426558 24539 net.cpp:200] ip2 needs backward computation.
I0428 19:40:24.426563 24539 net.cpp:200] relu1 needs backward computation.
I0428 19:40:24.426568 24539 net.cpp:200] ip1 needs backward computation.
I0428 19:40:24.426573 24539 net.cpp:200] pool1 needs backward computation.
I0428 19:40:24.426578 24539 net.cpp:200] conv1 needs backward computation.
I0428 19:40:24.426584 24539 net.cpp:200] pool0 needs backward computation.
I0428 19:40:24.426589 24539 net.cpp:200] conv0 needs backward computation.
I0428 19:40:24.426594 24539 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:24.426600 24539 net.cpp:202] mnist does not need backward computation.
I0428 19:40:24.426605 24539 net.cpp:244] This network produces output accuracy
I0428 19:40:24.426610 24539 net.cpp:244] This network produces output loss
I0428 19:40:24.426630 24539 net.cpp:257] Network initialization done.
I0428 19:40:24.426676 24539 solver.cpp:56] Solver scaffolding done.
I0428 19:40:24.427057 24539 caffe.cpp:248] Starting Optimization
I0428 19:40:24.427064 24539 solver.cpp:273] Solving LeNet
I0428 19:40:24.427068 24539 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:24.427323 24539 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:24.430812 24539 blocking_queue.cpp:49] Waiting for data
I0428 19:40:24.503736 24546 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:24.504174 24539 solver.cpp:398]     Test net output #0: accuracy = 0.1112
I0428 19:40:24.504196 24539 solver.cpp:398]     Test net output #1: loss = 2.31087 (* 1 = 2.31087 loss)
I0428 19:40:24.506105 24539 solver.cpp:219] Iteration 0 (0 iter/s, 0.0790006s/100 iters), loss = 2.31415
I0428 19:40:24.506134 24539 solver.cpp:238]     Train net output #0: loss = 2.31415 (* 1 = 2.31415 loss)
I0428 19:40:24.506176 24539 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:24.577253 24539 solver.cpp:219] Iteration 100 (1406.28 iter/s, 0.0711096s/100 iters), loss = 1.12342
I0428 19:40:24.577283 24539 solver.cpp:238]     Train net output #0: loss = 1.12342 (* 1 = 1.12342 loss)
I0428 19:40:24.577308 24539 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:24.648573 24539 solver.cpp:219] Iteration 200 (1402.86 iter/s, 0.0712829s/100 iters), loss = 0.716754
I0428 19:40:24.648602 24539 solver.cpp:238]     Train net output #0: loss = 0.716754 (* 1 = 0.716754 loss)
I0428 19:40:24.648613 24539 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:24.718736 24539 solver.cpp:219] Iteration 300 (1426.03 iter/s, 0.0701245s/100 iters), loss = 0.504625
I0428 19:40:24.718765 24539 solver.cpp:238]     Train net output #0: loss = 0.504625 (* 1 = 0.504625 loss)
I0428 19:40:24.718775 24539 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:24.789005 24539 solver.cpp:219] Iteration 400 (1423.95 iter/s, 0.070227s/100 iters), loss = 0.302772
I0428 19:40:24.789034 24539 solver.cpp:238]     Train net output #0: loss = 0.302772 (* 1 = 0.302772 loss)
I0428 19:40:24.789044 24539 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:24.861306 24539 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:24.915153 24546 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:24.915596 24539 solver.cpp:398]     Test net output #0: accuracy = 0.9239
I0428 19:40:24.915616 24539 solver.cpp:398]     Test net output #1: loss = 0.237481 (* 1 = 0.237481 loss)
I0428 19:40:24.916280 24539 solver.cpp:219] Iteration 500 (785.941 iter/s, 0.127236s/100 iters), loss = 0.219576
I0428 19:40:24.916306 24539 solver.cpp:238]     Train net output #0: loss = 0.219575 (* 1 = 0.219575 loss)
I0428 19:40:24.916352 24539 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:24.989490 24539 solver.cpp:219] Iteration 600 (1366.64 iter/s, 0.0731721s/100 iters), loss = 0.117549
I0428 19:40:24.989519 24539 solver.cpp:238]     Train net output #0: loss = 0.117548 (* 1 = 0.117548 loss)
I0428 19:40:24.989531 24539 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:25.061419 24539 solver.cpp:219] Iteration 700 (1391.11 iter/s, 0.0718848s/100 iters), loss = 0.252672
I0428 19:40:25.061450 24539 solver.cpp:238]     Train net output #0: loss = 0.252672 (* 1 = 0.252672 loss)
I0428 19:40:25.061475 24539 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:25.131922 24539 solver.cpp:219] Iteration 800 (1419.15 iter/s, 0.0704645s/100 iters), loss = 0.320967
I0428 19:40:25.131949 24539 solver.cpp:238]     Train net output #0: loss = 0.320967 (* 1 = 0.320967 loss)
I0428 19:40:25.131959 24539 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:25.202050 24539 solver.cpp:219] Iteration 900 (1426.7 iter/s, 0.0700918s/100 iters), loss = 0.24434
I0428 19:40:25.202078 24539 solver.cpp:238]     Train net output #0: loss = 0.24434 (* 1 = 0.24434 loss)
I0428 19:40:25.202087 24539 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:25.225695 24545 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:25.272687 24539 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:25.273435 24539 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:25.273916 24539 solver.cpp:311] Iteration 1000, loss = 0.213915
I0428 19:40:25.273933 24539 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:25.327613 24546 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:25.328042 24539 solver.cpp:398]     Test net output #0: accuracy = 0.9465
I0428 19:40:25.328061 24539 solver.cpp:398]     Test net output #1: loss = 0.175536 (* 1 = 0.175536 loss)
I0428 19:40:25.328068 24539 solver.cpp:316] Optimization Done.
I0428 19:40:25.328074 24539 caffe.cpp:259] Optimization Done.
