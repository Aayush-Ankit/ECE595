I0428 20:13:23.184002 32452 caffe.cpp:218] Using GPUs 0
I0428 20:13:23.222651 32452 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:23.737121 32452 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1198.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:23.737265 32452 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1198.prototxt
I0428 20:13:23.737686 32452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:23.737706 32452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:23.737809 32452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:23.737889 32452 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:23.737987 32452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:23.738013 32452 net.cpp:86] Creating Layer mnist
I0428 20:13:23.738021 32452 net.cpp:382] mnist -> data
I0428 20:13:23.738044 32452 net.cpp:382] mnist -> label
I0428 20:13:23.739135 32452 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:23.741626 32452 net.cpp:124] Setting up mnist
I0428 20:13:23.741643 32452 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:23.741650 32452 net.cpp:131] Top shape: 64 (64)
I0428 20:13:23.741654 32452 net.cpp:139] Memory required for data: 200960
I0428 20:13:23.741662 32452 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:23.741678 32452 net.cpp:86] Creating Layer conv0
I0428 20:13:23.741699 32452 net.cpp:408] conv0 <- data
I0428 20:13:23.741714 32452 net.cpp:382] conv0 -> conv0
I0428 20:13:24.000506 32452 net.cpp:124] Setting up conv0
I0428 20:13:24.000550 32452 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:24.000553 32452 net.cpp:139] Memory required for data: 3887360
I0428 20:13:24.000568 32452 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:24.000581 32452 net.cpp:86] Creating Layer pool0
I0428 20:13:24.000586 32452 net.cpp:408] pool0 <- conv0
I0428 20:13:24.000605 32452 net.cpp:382] pool0 -> pool0
I0428 20:13:24.000648 32452 net.cpp:124] Setting up pool0
I0428 20:13:24.000653 32452 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:24.000656 32452 net.cpp:139] Memory required for data: 4808960
I0428 20:13:24.000660 32452 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:24.000670 32452 net.cpp:86] Creating Layer conv1
I0428 20:13:24.000674 32452 net.cpp:408] conv1 <- pool0
I0428 20:13:24.000679 32452 net.cpp:382] conv1 -> conv1
I0428 20:13:24.003082 32452 net.cpp:124] Setting up conv1
I0428 20:13:24.003111 32452 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:24.003116 32452 net.cpp:139] Memory required for data: 6447360
I0428 20:13:24.003125 32452 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:24.003134 32452 net.cpp:86] Creating Layer pool1
I0428 20:13:24.003136 32452 net.cpp:408] pool1 <- conv1
I0428 20:13:24.003141 32452 net.cpp:382] pool1 -> pool1
I0428 20:13:24.003207 32452 net.cpp:124] Setting up pool1
I0428 20:13:24.003213 32452 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:24.003216 32452 net.cpp:139] Memory required for data: 6856960
I0428 20:13:24.003221 32452 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:24.003229 32452 net.cpp:86] Creating Layer ip1
I0428 20:13:24.003232 32452 net.cpp:408] ip1 <- pool1
I0428 20:13:24.003237 32452 net.cpp:382] ip1 -> ip1
I0428 20:13:24.003615 32452 net.cpp:124] Setting up ip1
I0428 20:13:24.003623 32452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:24.003641 32452 net.cpp:139] Memory required for data: 6863360
I0428 20:13:24.003648 32452 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:24.003654 32452 net.cpp:86] Creating Layer relu1
I0428 20:13:24.003659 32452 net.cpp:408] relu1 <- ip1
I0428 20:13:24.003662 32452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:24.003844 32452 net.cpp:124] Setting up relu1
I0428 20:13:24.003854 32452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:24.003857 32452 net.cpp:139] Memory required for data: 6869760
I0428 20:13:24.003861 32452 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:24.003867 32452 net.cpp:86] Creating Layer ip2
I0428 20:13:24.003870 32452 net.cpp:408] ip2 <- ip1
I0428 20:13:24.003875 32452 net.cpp:382] ip2 -> ip2
I0428 20:13:24.005018 32452 net.cpp:124] Setting up ip2
I0428 20:13:24.005048 32452 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:24.005053 32452 net.cpp:139] Memory required for data: 6882560
I0428 20:13:24.005061 32452 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:24.005069 32452 net.cpp:86] Creating Layer relu2
I0428 20:13:24.005074 32452 net.cpp:408] relu2 <- ip2
I0428 20:13:24.005079 32452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:24.005934 32452 net.cpp:124] Setting up relu2
I0428 20:13:24.005962 32452 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:24.005966 32452 net.cpp:139] Memory required for data: 6895360
I0428 20:13:24.005970 32452 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:24.005978 32452 net.cpp:86] Creating Layer ip3
I0428 20:13:24.005982 32452 net.cpp:408] ip3 <- ip2
I0428 20:13:24.005988 32452 net.cpp:382] ip3 -> ip3
I0428 20:13:24.006099 32452 net.cpp:124] Setting up ip3
I0428 20:13:24.006108 32452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:24.006111 32452 net.cpp:139] Memory required for data: 6897920
I0428 20:13:24.006120 32452 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:24.006126 32452 net.cpp:86] Creating Layer relu3
I0428 20:13:24.006131 32452 net.cpp:408] relu3 <- ip3
I0428 20:13:24.006137 32452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:24.006332 32452 net.cpp:124] Setting up relu3
I0428 20:13:24.006342 32452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:24.006345 32452 net.cpp:139] Memory required for data: 6900480
I0428 20:13:24.006350 32452 layer_factory.hpp:77] Creating layer loss
I0428 20:13:24.006356 32452 net.cpp:86] Creating Layer loss
I0428 20:13:24.006359 32452 net.cpp:408] loss <- ip3
I0428 20:13:24.006363 32452 net.cpp:408] loss <- label
I0428 20:13:24.006369 32452 net.cpp:382] loss -> loss
I0428 20:13:24.006389 32452 layer_factory.hpp:77] Creating layer loss
I0428 20:13:24.006649 32452 net.cpp:124] Setting up loss
I0428 20:13:24.006659 32452 net.cpp:131] Top shape: (1)
I0428 20:13:24.006664 32452 net.cpp:134]     with loss weight 1
I0428 20:13:24.006678 32452 net.cpp:139] Memory required for data: 6900484
I0428 20:13:24.006682 32452 net.cpp:200] loss needs backward computation.
I0428 20:13:24.006687 32452 net.cpp:200] relu3 needs backward computation.
I0428 20:13:24.006690 32452 net.cpp:200] ip3 needs backward computation.
I0428 20:13:24.006693 32452 net.cpp:200] relu2 needs backward computation.
I0428 20:13:24.006696 32452 net.cpp:200] ip2 needs backward computation.
I0428 20:13:24.006700 32452 net.cpp:200] relu1 needs backward computation.
I0428 20:13:24.006703 32452 net.cpp:200] ip1 needs backward computation.
I0428 20:13:24.006706 32452 net.cpp:200] pool1 needs backward computation.
I0428 20:13:24.006709 32452 net.cpp:200] conv1 needs backward computation.
I0428 20:13:24.006713 32452 net.cpp:200] pool0 needs backward computation.
I0428 20:13:24.006717 32452 net.cpp:200] conv0 needs backward computation.
I0428 20:13:24.006721 32452 net.cpp:202] mnist does not need backward computation.
I0428 20:13:24.006724 32452 net.cpp:244] This network produces output loss
I0428 20:13:24.006733 32452 net.cpp:257] Network initialization done.
I0428 20:13:24.007140 32452 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1198.prototxt
I0428 20:13:24.007172 32452 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:24.007275 32452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:24.007380 32452 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:24.007428 32452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:24.007442 32452 net.cpp:86] Creating Layer mnist
I0428 20:13:24.007447 32452 net.cpp:382] mnist -> data
I0428 20:13:24.007455 32452 net.cpp:382] mnist -> label
I0428 20:13:24.007547 32452 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:24.009974 32452 net.cpp:124] Setting up mnist
I0428 20:13:24.009989 32452 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:24.009995 32452 net.cpp:131] Top shape: 100 (100)
I0428 20:13:24.009999 32452 net.cpp:139] Memory required for data: 314000
I0428 20:13:24.010002 32452 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:24.010013 32452 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:24.010017 32452 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:24.010037 32452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:24.010059 32452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:24.010104 32452 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:24.010112 32452 net.cpp:131] Top shape: 100 (100)
I0428 20:13:24.010115 32452 net.cpp:131] Top shape: 100 (100)
I0428 20:13:24.010118 32452 net.cpp:139] Memory required for data: 314800
I0428 20:13:24.010121 32452 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:24.010131 32452 net.cpp:86] Creating Layer conv0
I0428 20:13:24.010135 32452 net.cpp:408] conv0 <- data
I0428 20:13:24.010140 32452 net.cpp:382] conv0 -> conv0
I0428 20:13:24.012033 32452 net.cpp:124] Setting up conv0
I0428 20:13:24.012049 32452 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:24.012054 32452 net.cpp:139] Memory required for data: 6074800
I0428 20:13:24.012063 32452 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:24.012071 32452 net.cpp:86] Creating Layer pool0
I0428 20:13:24.012074 32452 net.cpp:408] pool0 <- conv0
I0428 20:13:24.012080 32452 net.cpp:382] pool0 -> pool0
I0428 20:13:24.012117 32452 net.cpp:124] Setting up pool0
I0428 20:13:24.012123 32452 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:24.012126 32452 net.cpp:139] Memory required for data: 7514800
I0428 20:13:24.012130 32452 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:24.012138 32452 net.cpp:86] Creating Layer conv1
I0428 20:13:24.012141 32452 net.cpp:408] conv1 <- pool0
I0428 20:13:24.012146 32452 net.cpp:382] conv1 -> conv1
I0428 20:13:24.014348 32452 net.cpp:124] Setting up conv1
I0428 20:13:24.014363 32452 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:24.014369 32452 net.cpp:139] Memory required for data: 10074800
I0428 20:13:24.014376 32452 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:24.014406 32452 net.cpp:86] Creating Layer pool1
I0428 20:13:24.014410 32452 net.cpp:408] pool1 <- conv1
I0428 20:13:24.014421 32452 net.cpp:382] pool1 -> pool1
I0428 20:13:24.014461 32452 net.cpp:124] Setting up pool1
I0428 20:13:24.014467 32452 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:24.014470 32452 net.cpp:139] Memory required for data: 10714800
I0428 20:13:24.014473 32452 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:24.014479 32452 net.cpp:86] Creating Layer ip1
I0428 20:13:24.014483 32452 net.cpp:408] ip1 <- pool1
I0428 20:13:24.014488 32452 net.cpp:382] ip1 -> ip1
I0428 20:13:24.014868 32452 net.cpp:124] Setting up ip1
I0428 20:13:24.014876 32452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:24.014890 32452 net.cpp:139] Memory required for data: 10724800
I0428 20:13:24.014899 32452 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:24.014912 32452 net.cpp:86] Creating Layer relu1
I0428 20:13:24.014916 32452 net.cpp:408] relu1 <- ip1
I0428 20:13:24.014922 32452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:24.015115 32452 net.cpp:124] Setting up relu1
I0428 20:13:24.015125 32452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:24.015130 32452 net.cpp:139] Memory required for data: 10734800
I0428 20:13:24.015132 32452 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:24.015142 32452 net.cpp:86] Creating Layer ip2
I0428 20:13:24.015146 32452 net.cpp:408] ip2 <- ip1
I0428 20:13:24.015151 32452 net.cpp:382] ip2 -> ip2
I0428 20:13:24.015275 32452 net.cpp:124] Setting up ip2
I0428 20:13:24.015283 32452 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:24.015286 32452 net.cpp:139] Memory required for data: 10754800
I0428 20:13:24.015292 32452 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:24.015298 32452 net.cpp:86] Creating Layer relu2
I0428 20:13:24.015301 32452 net.cpp:408] relu2 <- ip2
I0428 20:13:24.015305 32452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:24.015561 32452 net.cpp:124] Setting up relu2
I0428 20:13:24.015570 32452 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:24.015573 32452 net.cpp:139] Memory required for data: 10774800
I0428 20:13:24.015576 32452 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:24.015583 32452 net.cpp:86] Creating Layer ip3
I0428 20:13:24.015588 32452 net.cpp:408] ip3 <- ip2
I0428 20:13:24.015592 32452 net.cpp:382] ip3 -> ip3
I0428 20:13:24.015720 32452 net.cpp:124] Setting up ip3
I0428 20:13:24.015729 32452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:24.015733 32452 net.cpp:139] Memory required for data: 10778800
I0428 20:13:24.015740 32452 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:24.015754 32452 net.cpp:86] Creating Layer relu3
I0428 20:13:24.015758 32452 net.cpp:408] relu3 <- ip3
I0428 20:13:24.015761 32452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:24.016595 32452 net.cpp:124] Setting up relu3
I0428 20:13:24.016608 32452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:24.016613 32452 net.cpp:139] Memory required for data: 10782800
I0428 20:13:24.016616 32452 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:24.016623 32452 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:24.016628 32452 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:24.016633 32452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:24.016640 32452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:24.016685 32452 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:24.016690 32452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:24.016695 32452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:24.016697 32452 net.cpp:139] Memory required for data: 10790800
I0428 20:13:24.016701 32452 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:24.016708 32452 net.cpp:86] Creating Layer accuracy
I0428 20:13:24.016711 32452 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:24.016716 32452 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:24.016721 32452 net.cpp:382] accuracy -> accuracy
I0428 20:13:24.016726 32452 net.cpp:124] Setting up accuracy
I0428 20:13:24.016731 32452 net.cpp:131] Top shape: (1)
I0428 20:13:24.016734 32452 net.cpp:139] Memory required for data: 10790804
I0428 20:13:24.016737 32452 layer_factory.hpp:77] Creating layer loss
I0428 20:13:24.016743 32452 net.cpp:86] Creating Layer loss
I0428 20:13:24.016746 32452 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:24.016751 32452 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:24.016755 32452 net.cpp:382] loss -> loss
I0428 20:13:24.016762 32452 layer_factory.hpp:77] Creating layer loss
I0428 20:13:24.017057 32452 net.cpp:124] Setting up loss
I0428 20:13:24.017069 32452 net.cpp:131] Top shape: (1)
I0428 20:13:24.017073 32452 net.cpp:134]     with loss weight 1
I0428 20:13:24.017098 32452 net.cpp:139] Memory required for data: 10790808
I0428 20:13:24.017102 32452 net.cpp:200] loss needs backward computation.
I0428 20:13:24.017107 32452 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:24.017113 32452 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:24.017117 32452 net.cpp:200] relu3 needs backward computation.
I0428 20:13:24.017120 32452 net.cpp:200] ip3 needs backward computation.
I0428 20:13:24.017123 32452 net.cpp:200] relu2 needs backward computation.
I0428 20:13:24.017127 32452 net.cpp:200] ip2 needs backward computation.
I0428 20:13:24.017129 32452 net.cpp:200] relu1 needs backward computation.
I0428 20:13:24.017132 32452 net.cpp:200] ip1 needs backward computation.
I0428 20:13:24.017137 32452 net.cpp:200] pool1 needs backward computation.
I0428 20:13:24.017146 32452 net.cpp:200] conv1 needs backward computation.
I0428 20:13:24.017149 32452 net.cpp:200] pool0 needs backward computation.
I0428 20:13:24.017153 32452 net.cpp:200] conv0 needs backward computation.
I0428 20:13:24.017158 32452 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:24.017161 32452 net.cpp:202] mnist does not need backward computation.
I0428 20:13:24.017165 32452 net.cpp:244] This network produces output accuracy
I0428 20:13:24.017169 32452 net.cpp:244] This network produces output loss
I0428 20:13:24.017194 32452 net.cpp:257] Network initialization done.
I0428 20:13:24.017240 32452 solver.cpp:56] Solver scaffolding done.
I0428 20:13:24.017611 32452 caffe.cpp:248] Starting Optimization
I0428 20:13:24.017617 32452 solver.cpp:273] Solving LeNet
I0428 20:13:24.017621 32452 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:24.018484 32452 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:24.025557 32452 blocking_queue.cpp:49] Waiting for data
I0428 20:13:24.095573 32459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:24.096339 32452 solver.cpp:398]     Test net output #0: accuracy = 0.1074
I0428 20:13:24.096359 32452 solver.cpp:398]     Test net output #1: loss = 2.29934 (* 1 = 2.29934 loss)
I0428 20:13:24.101184 32452 solver.cpp:219] Iteration 0 (-1.12276e-31 iter/s, 0.0835215s/100 iters), loss = 2.31353
I0428 20:13:24.101223 32452 solver.cpp:238]     Train net output #0: loss = 2.31353 (* 1 = 2.31353 loss)
I0428 20:13:24.101250 32452 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:24.262290 32452 solver.cpp:219] Iteration 100 (620.923 iter/s, 0.161051s/100 iters), loss = 1.1183
I0428 20:13:24.262315 32452 solver.cpp:238]     Train net output #0: loss = 1.1183 (* 1 = 1.1183 loss)
I0428 20:13:24.262336 32452 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:24.427587 32452 solver.cpp:219] Iteration 200 (605.11 iter/s, 0.165259s/100 iters), loss = 0.54175
I0428 20:13:24.427613 32452 solver.cpp:238]     Train net output #0: loss = 0.54175 (* 1 = 0.54175 loss)
I0428 20:13:24.427634 32452 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:24.591825 32452 solver.cpp:219] Iteration 300 (609.026 iter/s, 0.164197s/100 iters), loss = 0.594526
I0428 20:13:24.591856 32452 solver.cpp:238]     Train net output #0: loss = 0.594526 (* 1 = 0.594526 loss)
I0428 20:13:24.591863 32452 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:24.752533 32452 solver.cpp:219] Iteration 400 (622.419 iter/s, 0.160664s/100 iters), loss = 0.395384
I0428 20:13:24.752562 32452 solver.cpp:238]     Train net output #0: loss = 0.395384 (* 1 = 0.395384 loss)
I0428 20:13:24.752569 32452 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:24.920339 32452 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:24.993708 32459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:24.994572 32452 solver.cpp:398]     Test net output #0: accuracy = 0.8573
I0428 20:13:24.994596 32452 solver.cpp:398]     Test net output #1: loss = 0.368386 (* 1 = 0.368386 loss)
I0428 20:13:24.996568 32452 solver.cpp:219] Iteration 500 (409.879 iter/s, 0.243974s/100 iters), loss = 0.36256
I0428 20:13:24.996626 32452 solver.cpp:238]     Train net output #0: loss = 0.36256 (* 1 = 0.36256 loss)
I0428 20:13:24.996639 32452 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:25.160373 32452 solver.cpp:219] Iteration 600 (610.68 iter/s, 0.163752s/100 iters), loss = 0.509424
I0428 20:13:25.160398 32452 solver.cpp:238]     Train net output #0: loss = 0.509424 (* 1 = 0.509424 loss)
I0428 20:13:25.160405 32452 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:25.327036 32452 solver.cpp:219] Iteration 700 (600.153 iter/s, 0.166624s/100 iters), loss = 0.321192
I0428 20:13:25.327076 32452 solver.cpp:238]     Train net output #0: loss = 0.321192 (* 1 = 0.321192 loss)
I0428 20:13:25.327082 32452 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:25.488546 32452 solver.cpp:219] Iteration 800 (619.3 iter/s, 0.161473s/100 iters), loss = 0.379888
I0428 20:13:25.488589 32452 solver.cpp:238]     Train net output #0: loss = 0.379888 (* 1 = 0.379888 loss)
I0428 20:13:25.488596 32452 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:25.645627 32452 solver.cpp:219] Iteration 900 (636.778 iter/s, 0.157041s/100 iters), loss = 0.379941
I0428 20:13:25.645666 32452 solver.cpp:238]     Train net output #0: loss = 0.379941 (* 1 = 0.379941 loss)
I0428 20:13:25.645673 32452 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:25.699070 32458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:25.805642 32452 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:25.808517 32452 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:25.809983 32452 solver.cpp:311] Iteration 1000, loss = 0.316688
I0428 20:13:25.809998 32452 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:25.881745 32459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:25.882644 32452 solver.cpp:398]     Test net output #0: accuracy = 0.8677
I0428 20:13:25.882678 32452 solver.cpp:398]     Test net output #1: loss = 0.327522 (* 1 = 0.327522 loss)
I0428 20:13:25.882683 32452 solver.cpp:316] Optimization Done.
I0428 20:13:25.882688 32452 caffe.cpp:259] Optimization Done.
