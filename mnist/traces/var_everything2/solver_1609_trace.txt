I0428 20:34:41.727222  4511 caffe.cpp:218] Using GPUs 0
I0428 20:34:41.764714  4511 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:42.220723  4511 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1609.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:42.220891  4511 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1609.prototxt
I0428 20:34:42.221220  4511 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:42.221235  4511 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:42.221316  4511 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:42.221370  4511 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:42.221449  4511 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:42.221468  4511 net.cpp:86] Creating Layer mnist
I0428 20:34:42.221474  4511 net.cpp:382] mnist -> data
I0428 20:34:42.221493  4511 net.cpp:382] mnist -> label
I0428 20:34:42.222517  4511 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:42.224793  4511 net.cpp:124] Setting up mnist
I0428 20:34:42.224838  4511 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:42.224844  4511 net.cpp:131] Top shape: 64 (64)
I0428 20:34:42.224864  4511 net.cpp:139] Memory required for data: 200960
I0428 20:34:42.224869  4511 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:42.224882  4511 net.cpp:86] Creating Layer conv0
I0428 20:34:42.224889  4511 net.cpp:408] conv0 <- data
I0428 20:34:42.224920  4511 net.cpp:382] conv0 -> conv0
I0428 20:34:42.454391  4511 net.cpp:124] Setting up conv0
I0428 20:34:42.454416  4511 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:42.454419  4511 net.cpp:139] Memory required for data: 14946560
I0428 20:34:42.454450  4511 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:42.454463  4511 net.cpp:86] Creating Layer pool0
I0428 20:34:42.454466  4511 net.cpp:408] pool0 <- conv0
I0428 20:34:42.454471  4511 net.cpp:382] pool0 -> pool0
I0428 20:34:42.454532  4511 net.cpp:124] Setting up pool0
I0428 20:34:42.454538  4511 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:42.454540  4511 net.cpp:139] Memory required for data: 18632960
I0428 20:34:42.454543  4511 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:42.454555  4511 net.cpp:86] Creating Layer conv1
I0428 20:34:42.454557  4511 net.cpp:408] conv1 <- pool0
I0428 20:34:42.454561  4511 net.cpp:382] conv1 -> conv1
I0428 20:34:42.458008  4511 net.cpp:124] Setting up conv1
I0428 20:34:42.458037  4511 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:42.458041  4511 net.cpp:139] Memory required for data: 19452160
I0428 20:34:42.458050  4511 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:42.458060  4511 net.cpp:86] Creating Layer pool1
I0428 20:34:42.458062  4511 net.cpp:408] pool1 <- conv1
I0428 20:34:42.458067  4511 net.cpp:382] pool1 -> pool1
I0428 20:34:42.458122  4511 net.cpp:124] Setting up pool1
I0428 20:34:42.458127  4511 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:42.458129  4511 net.cpp:139] Memory required for data: 19656960
I0428 20:34:42.458132  4511 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:42.458139  4511 net.cpp:86] Creating Layer ip1
I0428 20:34:42.458142  4511 net.cpp:408] ip1 <- pool1
I0428 20:34:42.458148  4511 net.cpp:382] ip1 -> ip1
I0428 20:34:42.458499  4511 net.cpp:124] Setting up ip1
I0428 20:34:42.458508  4511 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:42.458525  4511 net.cpp:139] Memory required for data: 19669760
I0428 20:34:42.458533  4511 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:42.458537  4511 net.cpp:86] Creating Layer relu1
I0428 20:34:42.458541  4511 net.cpp:408] relu1 <- ip1
I0428 20:34:42.458546  4511 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:42.458711  4511 net.cpp:124] Setting up relu1
I0428 20:34:42.458720  4511 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:42.458724  4511 net.cpp:139] Memory required for data: 19682560
I0428 20:34:42.458726  4511 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:42.458732  4511 net.cpp:86] Creating Layer ip2
I0428 20:34:42.458735  4511 net.cpp:408] ip2 <- ip1
I0428 20:34:42.458741  4511 net.cpp:382] ip2 -> ip2
I0428 20:34:42.458838  4511 net.cpp:124] Setting up ip2
I0428 20:34:42.458845  4511 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:42.458848  4511 net.cpp:139] Memory required for data: 19685120
I0428 20:34:42.458853  4511 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:42.458858  4511 net.cpp:86] Creating Layer relu2
I0428 20:34:42.458863  4511 net.cpp:408] relu2 <- ip2
I0428 20:34:42.458866  4511 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:42.459759  4511 net.cpp:124] Setting up relu2
I0428 20:34:42.459771  4511 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:42.459774  4511 net.cpp:139] Memory required for data: 19687680
I0428 20:34:42.459779  4511 layer_factory.hpp:77] Creating layer loss
I0428 20:34:42.459784  4511 net.cpp:86] Creating Layer loss
I0428 20:34:42.459787  4511 net.cpp:408] loss <- ip2
I0428 20:34:42.459792  4511 net.cpp:408] loss <- label
I0428 20:34:42.459797  4511 net.cpp:382] loss -> loss
I0428 20:34:42.459816  4511 layer_factory.hpp:77] Creating layer loss
I0428 20:34:42.460084  4511 net.cpp:124] Setting up loss
I0428 20:34:42.460094  4511 net.cpp:131] Top shape: (1)
I0428 20:34:42.460098  4511 net.cpp:134]     with loss weight 1
I0428 20:34:42.460111  4511 net.cpp:139] Memory required for data: 19687684
I0428 20:34:42.460115  4511 net.cpp:200] loss needs backward computation.
I0428 20:34:42.460119  4511 net.cpp:200] relu2 needs backward computation.
I0428 20:34:42.460121  4511 net.cpp:200] ip2 needs backward computation.
I0428 20:34:42.460124  4511 net.cpp:200] relu1 needs backward computation.
I0428 20:34:42.460127  4511 net.cpp:200] ip1 needs backward computation.
I0428 20:34:42.460140  4511 net.cpp:200] pool1 needs backward computation.
I0428 20:34:42.460144  4511 net.cpp:200] conv1 needs backward computation.
I0428 20:34:42.460146  4511 net.cpp:200] pool0 needs backward computation.
I0428 20:34:42.460149  4511 net.cpp:200] conv0 needs backward computation.
I0428 20:34:42.460152  4511 net.cpp:202] mnist does not need backward computation.
I0428 20:34:42.460155  4511 net.cpp:244] This network produces output loss
I0428 20:34:42.460165  4511 net.cpp:257] Network initialization done.
I0428 20:34:42.460481  4511 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1609.prototxt
I0428 20:34:42.460521  4511 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:42.460654  4511 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:42.460726  4511 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:42.460772  4511 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:42.460783  4511 net.cpp:86] Creating Layer mnist
I0428 20:34:42.460789  4511 net.cpp:382] mnist -> data
I0428 20:34:42.460796  4511 net.cpp:382] mnist -> label
I0428 20:34:42.460961  4511 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:42.462106  4511 net.cpp:124] Setting up mnist
I0428 20:34:42.462134  4511 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:42.462139  4511 net.cpp:131] Top shape: 100 (100)
I0428 20:34:42.462142  4511 net.cpp:139] Memory required for data: 314000
I0428 20:34:42.462146  4511 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:42.462152  4511 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:42.462154  4511 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:42.462160  4511 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:42.462167  4511 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:42.462257  4511 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:42.462265  4511 net.cpp:131] Top shape: 100 (100)
I0428 20:34:42.462268  4511 net.cpp:131] Top shape: 100 (100)
I0428 20:34:42.462271  4511 net.cpp:139] Memory required for data: 314800
I0428 20:34:42.462275  4511 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:42.462285  4511 net.cpp:86] Creating Layer conv0
I0428 20:34:42.462291  4511 net.cpp:408] conv0 <- data
I0428 20:34:42.462311  4511 net.cpp:382] conv0 -> conv0
I0428 20:34:42.464226  4511 net.cpp:124] Setting up conv0
I0428 20:34:42.464256  4511 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:42.464258  4511 net.cpp:139] Memory required for data: 23354800
I0428 20:34:42.464267  4511 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:42.464275  4511 net.cpp:86] Creating Layer pool0
I0428 20:34:42.464278  4511 net.cpp:408] pool0 <- conv0
I0428 20:34:42.464283  4511 net.cpp:382] pool0 -> pool0
I0428 20:34:42.464339  4511 net.cpp:124] Setting up pool0
I0428 20:34:42.464346  4511 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:42.464349  4511 net.cpp:139] Memory required for data: 29114800
I0428 20:34:42.464351  4511 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:42.464362  4511 net.cpp:86] Creating Layer conv1
I0428 20:34:42.464367  4511 net.cpp:408] conv1 <- pool0
I0428 20:34:42.464390  4511 net.cpp:382] conv1 -> conv1
I0428 20:34:42.467602  4511 net.cpp:124] Setting up conv1
I0428 20:34:42.467630  4511 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:42.467634  4511 net.cpp:139] Memory required for data: 30394800
I0428 20:34:42.467641  4511 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:42.467648  4511 net.cpp:86] Creating Layer pool1
I0428 20:34:42.467650  4511 net.cpp:408] pool1 <- conv1
I0428 20:34:42.467655  4511 net.cpp:382] pool1 -> pool1
I0428 20:34:42.467718  4511 net.cpp:124] Setting up pool1
I0428 20:34:42.467725  4511 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:42.467727  4511 net.cpp:139] Memory required for data: 30714800
I0428 20:34:42.467730  4511 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:42.467737  4511 net.cpp:86] Creating Layer ip1
I0428 20:34:42.467741  4511 net.cpp:408] ip1 <- pool1
I0428 20:34:42.467746  4511 net.cpp:382] ip1 -> ip1
I0428 20:34:42.468106  4511 net.cpp:124] Setting up ip1
I0428 20:34:42.468132  4511 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:42.468142  4511 net.cpp:139] Memory required for data: 30734800
I0428 20:34:42.468150  4511 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:42.468155  4511 net.cpp:86] Creating Layer relu1
I0428 20:34:42.468158  4511 net.cpp:408] relu1 <- ip1
I0428 20:34:42.468163  4511 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:42.468333  4511 net.cpp:124] Setting up relu1
I0428 20:34:42.468343  4511 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:42.468345  4511 net.cpp:139] Memory required for data: 30754800
I0428 20:34:42.468348  4511 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:42.468355  4511 net.cpp:86] Creating Layer ip2
I0428 20:34:42.468358  4511 net.cpp:408] ip2 <- ip1
I0428 20:34:42.468364  4511 net.cpp:382] ip2 -> ip2
I0428 20:34:42.468467  4511 net.cpp:124] Setting up ip2
I0428 20:34:42.468474  4511 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:42.468477  4511 net.cpp:139] Memory required for data: 30758800
I0428 20:34:42.468482  4511 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:42.468487  4511 net.cpp:86] Creating Layer relu2
I0428 20:34:42.468489  4511 net.cpp:408] relu2 <- ip2
I0428 20:34:42.468493  4511 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:42.468689  4511 net.cpp:124] Setting up relu2
I0428 20:34:42.468699  4511 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:42.468703  4511 net.cpp:139] Memory required for data: 30762800
I0428 20:34:42.468706  4511 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:34:42.468711  4511 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:34:42.468714  4511 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:34:42.468719  4511 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:34:42.468751  4511 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:34:42.468853  4511 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:34:42.468863  4511 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:42.468866  4511 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:42.468869  4511 net.cpp:139] Memory required for data: 30770800
I0428 20:34:42.468873  4511 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:42.468886  4511 net.cpp:86] Creating Layer accuracy
I0428 20:34:42.468893  4511 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:34:42.468899  4511 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:42.468904  4511 net.cpp:382] accuracy -> accuracy
I0428 20:34:42.468911  4511 net.cpp:124] Setting up accuracy
I0428 20:34:42.468915  4511 net.cpp:131] Top shape: (1)
I0428 20:34:42.468919  4511 net.cpp:139] Memory required for data: 30770804
I0428 20:34:42.468922  4511 layer_factory.hpp:77] Creating layer loss
I0428 20:34:42.468928  4511 net.cpp:86] Creating Layer loss
I0428 20:34:42.468932  4511 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:34:42.468936  4511 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:42.468940  4511 net.cpp:382] loss -> loss
I0428 20:34:42.468946  4511 layer_factory.hpp:77] Creating layer loss
I0428 20:34:42.469249  4511 net.cpp:124] Setting up loss
I0428 20:34:42.469274  4511 net.cpp:131] Top shape: (1)
I0428 20:34:42.469292  4511 net.cpp:134]     with loss weight 1
I0428 20:34:42.469300  4511 net.cpp:139] Memory required for data: 30770808
I0428 20:34:42.469302  4511 net.cpp:200] loss needs backward computation.
I0428 20:34:42.469306  4511 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:42.469310  4511 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:34:42.469312  4511 net.cpp:200] relu2 needs backward computation.
I0428 20:34:42.469314  4511 net.cpp:200] ip2 needs backward computation.
I0428 20:34:42.469317  4511 net.cpp:200] relu1 needs backward computation.
I0428 20:34:42.469321  4511 net.cpp:200] ip1 needs backward computation.
I0428 20:34:42.469323  4511 net.cpp:200] pool1 needs backward computation.
I0428 20:34:42.469326  4511 net.cpp:200] conv1 needs backward computation.
I0428 20:34:42.469329  4511 net.cpp:200] pool0 needs backward computation.
I0428 20:34:42.469332  4511 net.cpp:200] conv0 needs backward computation.
I0428 20:34:42.469336  4511 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:42.469339  4511 net.cpp:202] mnist does not need backward computation.
I0428 20:34:42.469342  4511 net.cpp:244] This network produces output accuracy
I0428 20:34:42.469346  4511 net.cpp:244] This network produces output loss
I0428 20:34:42.469357  4511 net.cpp:257] Network initialization done.
I0428 20:34:42.469391  4511 solver.cpp:56] Solver scaffolding done.
I0428 20:34:42.469697  4511 caffe.cpp:248] Starting Optimization
I0428 20:34:42.469703  4511 solver.cpp:273] Solving LeNet
I0428 20:34:42.469707  4511 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:42.470636  4511 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:42.538259  4511 blocking_queue.cpp:49] Waiting for data
I0428 20:34:42.584460  4518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:42.586194  4511 solver.cpp:398]     Test net output #0: accuracy = 0.1276
I0428 20:34:42.586230  4511 solver.cpp:398]     Test net output #1: loss = 2.33251 (* 1 = 2.33251 loss)
I0428 20:34:42.590920  4511 solver.cpp:219] Iteration 0 (-6.6935e-31 iter/s, 0.121169s/100 iters), loss = 2.34774
I0428 20:34:42.590960  4511 solver.cpp:238]     Train net output #0: loss = 2.34774 (* 1 = 2.34774 loss)
I0428 20:34:42.590972  4511 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:42.813740  4511 solver.cpp:219] Iteration 100 (448.916 iter/s, 0.222759s/100 iters), loss = 0.15281
I0428 20:34:42.813766  4511 solver.cpp:238]     Train net output #0: loss = 0.15281 (* 1 = 0.15281 loss)
I0428 20:34:42.813772  4511 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:43.041461  4511 solver.cpp:219] Iteration 200 (439.216 iter/s, 0.227678s/100 iters), loss = 0.121137
I0428 20:34:43.041488  4511 solver.cpp:238]     Train net output #0: loss = 0.121137 (* 1 = 0.121137 loss)
I0428 20:34:43.041496  4511 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:43.266736  4511 solver.cpp:219] Iteration 300 (443.989 iter/s, 0.225231s/100 iters), loss = 0.128309
I0428 20:34:43.266777  4511 solver.cpp:238]     Train net output #0: loss = 0.128309 (* 1 = 0.128309 loss)
I0428 20:34:43.266783  4511 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:43.493592  4511 solver.cpp:219] Iteration 400 (440.922 iter/s, 0.226798s/100 iters), loss = 0.0933074
I0428 20:34:43.493634  4511 solver.cpp:238]     Train net output #0: loss = 0.0933073 (* 1 = 0.0933073 loss)
I0428 20:34:43.493641  4511 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:43.717056  4511 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:43.822643  4518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:43.825453  4511 solver.cpp:398]     Test net output #0: accuracy = 0.9699
I0428 20:34:43.825491  4511 solver.cpp:398]     Test net output #1: loss = 0.0874733 (* 1 = 0.0874733 loss)
I0428 20:34:43.827708  4511 solver.cpp:219] Iteration 500 (299.353 iter/s, 0.334053s/100 iters), loss = 0.066685
I0428 20:34:43.827745  4511 solver.cpp:238]     Train net output #0: loss = 0.0666849 (* 1 = 0.0666849 loss)
I0428 20:34:43.827752  4511 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:44.058058  4511 solver.cpp:219] Iteration 600 (434.196 iter/s, 0.230311s/100 iters), loss = 0.0926734
I0428 20:34:44.058099  4511 solver.cpp:238]     Train net output #0: loss = 0.0926733 (* 1 = 0.0926733 loss)
I0428 20:34:44.058104  4511 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:44.288681  4511 solver.cpp:219] Iteration 700 (433.717 iter/s, 0.230565s/100 iters), loss = 0.115874
I0428 20:34:44.288724  4511 solver.cpp:238]     Train net output #0: loss = 0.115874 (* 1 = 0.115874 loss)
I0428 20:34:44.288730  4511 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:44.520829  4511 solver.cpp:219] Iteration 800 (430.87 iter/s, 0.232088s/100 iters), loss = 0.156048
I0428 20:34:44.520855  4511 solver.cpp:238]     Train net output #0: loss = 0.156048 (* 1 = 0.156048 loss)
I0428 20:34:44.520861  4511 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:44.756363  4511 solver.cpp:219] Iteration 900 (424.644 iter/s, 0.235491s/100 iters), loss = 0.203155
I0428 20:34:44.756389  4511 solver.cpp:238]     Train net output #0: loss = 0.203155 (* 1 = 0.203155 loss)
I0428 20:34:44.756395  4511 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:44.835060  4517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:44.989624  4511 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:44.994262  4511 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:44.996361  4511 solver.cpp:311] Iteration 1000, loss = 0.0833688
I0428 20:34:44.996376  4511 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:45.101680  4518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:45.104532  4511 solver.cpp:398]     Test net output #0: accuracy = 0.9806
I0428 20:34:45.104567  4511 solver.cpp:398]     Test net output #1: loss = 0.0559458 (* 1 = 0.0559458 loss)
I0428 20:34:45.104571  4511 solver.cpp:316] Optimization Done.
I0428 20:34:45.104574  4511 caffe.cpp:259] Optimization Done.
