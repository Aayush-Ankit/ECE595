I0428 19:50:05.055094 26927 caffe.cpp:218] Using GPUs 0
I0428 19:50:05.092003 26927 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:05.604112 26927 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test594.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:05.604257 26927 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test594.prototxt
I0428 19:50:05.604636 26927 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:05.604655 26927 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:05.604745 26927 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:05.604833 26927 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:05.604935 26927 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:05.604961 26927 net.cpp:86] Creating Layer mnist
I0428 19:50:05.604969 26927 net.cpp:382] mnist -> data
I0428 19:50:05.604992 26927 net.cpp:382] mnist -> label
I0428 19:50:05.606076 26927 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:05.608525 26927 net.cpp:124] Setting up mnist
I0428 19:50:05.608543 26927 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:05.608549 26927 net.cpp:131] Top shape: 64 (64)
I0428 19:50:05.608553 26927 net.cpp:139] Memory required for data: 200960
I0428 19:50:05.608561 26927 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:05.608588 26927 net.cpp:86] Creating Layer conv0
I0428 19:50:05.608594 26927 net.cpp:408] conv0 <- data
I0428 19:50:05.608606 26927 net.cpp:382] conv0 -> conv0
I0428 19:50:05.893172 26927 net.cpp:124] Setting up conv0
I0428 19:50:05.893198 26927 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:05.893219 26927 net.cpp:139] Memory required for data: 938240
I0428 19:50:05.893247 26927 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:05.893261 26927 net.cpp:86] Creating Layer pool0
I0428 19:50:05.893265 26927 net.cpp:408] pool0 <- conv0
I0428 19:50:05.893271 26927 net.cpp:382] pool0 -> pool0
I0428 19:50:05.893321 26927 net.cpp:124] Setting up pool0
I0428 19:50:05.893333 26927 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:05.893337 26927 net.cpp:139] Memory required for data: 1122560
I0428 19:50:05.893339 26927 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:05.893350 26927 net.cpp:86] Creating Layer conv1
I0428 19:50:05.893353 26927 net.cpp:408] conv1 <- pool0
I0428 19:50:05.893358 26927 net.cpp:382] conv1 -> conv1
I0428 19:50:05.896064 26927 net.cpp:124] Setting up conv1
I0428 19:50:05.896077 26927 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:05.896081 26927 net.cpp:139] Memory required for data: 1286400
I0428 19:50:05.896090 26927 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:05.896097 26927 net.cpp:86] Creating Layer pool1
I0428 19:50:05.896101 26927 net.cpp:408] pool1 <- conv1
I0428 19:50:05.896106 26927 net.cpp:382] pool1 -> pool1
I0428 19:50:05.896144 26927 net.cpp:124] Setting up pool1
I0428 19:50:05.896149 26927 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:05.896152 26927 net.cpp:139] Memory required for data: 1327360
I0428 19:50:05.896154 26927 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:05.896162 26927 net.cpp:86] Creating Layer ip1
I0428 19:50:05.896165 26927 net.cpp:408] ip1 <- pool1
I0428 19:50:05.896172 26927 net.cpp:382] ip1 -> ip1
I0428 19:50:05.897135 26927 net.cpp:124] Setting up ip1
I0428 19:50:05.897148 26927 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:05.897151 26927 net.cpp:139] Memory required for data: 1340160
I0428 19:50:05.897159 26927 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:05.897166 26927 net.cpp:86] Creating Layer relu1
I0428 19:50:05.897169 26927 net.cpp:408] relu1 <- ip1
I0428 19:50:05.897173 26927 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:05.897382 26927 net.cpp:124] Setting up relu1
I0428 19:50:05.897392 26927 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:05.897397 26927 net.cpp:139] Memory required for data: 1352960
I0428 19:50:05.897399 26927 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:05.897405 26927 net.cpp:86] Creating Layer ip2
I0428 19:50:05.897408 26927 net.cpp:408] ip2 <- ip1
I0428 19:50:05.897415 26927 net.cpp:382] ip2 -> ip2
I0428 19:50:05.897531 26927 net.cpp:124] Setting up ip2
I0428 19:50:05.897538 26927 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:05.897541 26927 net.cpp:139] Memory required for data: 1355520
I0428 19:50:05.897547 26927 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:05.897554 26927 net.cpp:86] Creating Layer relu2
I0428 19:50:05.897557 26927 net.cpp:408] relu2 <- ip2
I0428 19:50:05.897562 26927 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:05.898310 26927 net.cpp:124] Setting up relu2
I0428 19:50:05.898322 26927 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:05.898342 26927 net.cpp:139] Memory required for data: 1358080
I0428 19:50:05.898345 26927 layer_factory.hpp:77] Creating layer loss
I0428 19:50:05.898351 26927 net.cpp:86] Creating Layer loss
I0428 19:50:05.898355 26927 net.cpp:408] loss <- ip2
I0428 19:50:05.898375 26927 net.cpp:408] loss <- label
I0428 19:50:05.898381 26927 net.cpp:382] loss -> loss
I0428 19:50:05.898401 26927 layer_factory.hpp:77] Creating layer loss
I0428 19:50:05.898649 26927 net.cpp:124] Setting up loss
I0428 19:50:05.898658 26927 net.cpp:131] Top shape: (1)
I0428 19:50:05.898661 26927 net.cpp:134]     with loss weight 1
I0428 19:50:05.898675 26927 net.cpp:139] Memory required for data: 1358084
I0428 19:50:05.898679 26927 net.cpp:200] loss needs backward computation.
I0428 19:50:05.898684 26927 net.cpp:200] relu2 needs backward computation.
I0428 19:50:05.898685 26927 net.cpp:200] ip2 needs backward computation.
I0428 19:50:05.898689 26927 net.cpp:200] relu1 needs backward computation.
I0428 19:50:05.898691 26927 net.cpp:200] ip1 needs backward computation.
I0428 19:50:05.898703 26927 net.cpp:200] pool1 needs backward computation.
I0428 19:50:05.898706 26927 net.cpp:200] conv1 needs backward computation.
I0428 19:50:05.898710 26927 net.cpp:200] pool0 needs backward computation.
I0428 19:50:05.898712 26927 net.cpp:200] conv0 needs backward computation.
I0428 19:50:05.898715 26927 net.cpp:202] mnist does not need backward computation.
I0428 19:50:05.898718 26927 net.cpp:244] This network produces output loss
I0428 19:50:05.898728 26927 net.cpp:257] Network initialization done.
I0428 19:50:05.899060 26927 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test594.prototxt
I0428 19:50:05.899085 26927 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:05.899199 26927 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:05.899266 26927 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:05.899312 26927 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:05.899323 26927 net.cpp:86] Creating Layer mnist
I0428 19:50:05.899328 26927 net.cpp:382] mnist -> data
I0428 19:50:05.899336 26927 net.cpp:382] mnist -> label
I0428 19:50:05.899441 26927 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:05.901382 26927 net.cpp:124] Setting up mnist
I0428 19:50:05.901396 26927 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:05.901401 26927 net.cpp:131] Top shape: 100 (100)
I0428 19:50:05.901403 26927 net.cpp:139] Memory required for data: 314000
I0428 19:50:05.901407 26927 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:05.901413 26927 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:05.901417 26927 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:05.901422 26927 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:05.901453 26927 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:05.901494 26927 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:05.901509 26927 net.cpp:131] Top shape: 100 (100)
I0428 19:50:05.901512 26927 net.cpp:131] Top shape: 100 (100)
I0428 19:50:05.901515 26927 net.cpp:139] Memory required for data: 314800
I0428 19:50:05.901518 26927 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:05.901528 26927 net.cpp:86] Creating Layer conv0
I0428 19:50:05.901531 26927 net.cpp:408] conv0 <- data
I0428 19:50:05.901537 26927 net.cpp:382] conv0 -> conv0
I0428 19:50:05.903282 26927 net.cpp:124] Setting up conv0
I0428 19:50:05.903296 26927 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:05.903300 26927 net.cpp:139] Memory required for data: 1466800
I0428 19:50:05.903321 26927 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:05.903338 26927 net.cpp:86] Creating Layer pool0
I0428 19:50:05.903342 26927 net.cpp:408] pool0 <- conv0
I0428 19:50:05.903362 26927 net.cpp:382] pool0 -> pool0
I0428 19:50:05.903398 26927 net.cpp:124] Setting up pool0
I0428 19:50:05.903405 26927 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:05.903409 26927 net.cpp:139] Memory required for data: 1754800
I0428 19:50:05.903411 26927 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:05.903420 26927 net.cpp:86] Creating Layer conv1
I0428 19:50:05.903424 26927 net.cpp:408] conv1 <- pool0
I0428 19:50:05.903429 26927 net.cpp:382] conv1 -> conv1
I0428 19:50:05.905484 26927 net.cpp:124] Setting up conv1
I0428 19:50:05.905498 26927 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:05.905503 26927 net.cpp:139] Memory required for data: 2010800
I0428 19:50:05.905511 26927 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:05.905519 26927 net.cpp:86] Creating Layer pool1
I0428 19:50:05.905522 26927 net.cpp:408] pool1 <- conv1
I0428 19:50:05.905527 26927 net.cpp:382] pool1 -> pool1
I0428 19:50:05.905597 26927 net.cpp:124] Setting up pool1
I0428 19:50:05.905603 26927 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:05.905606 26927 net.cpp:139] Memory required for data: 2074800
I0428 19:50:05.905616 26927 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:05.905622 26927 net.cpp:86] Creating Layer ip1
I0428 19:50:05.905624 26927 net.cpp:408] ip1 <- pool1
I0428 19:50:05.905630 26927 net.cpp:382] ip1 -> ip1
I0428 19:50:05.905777 26927 net.cpp:124] Setting up ip1
I0428 19:50:05.905786 26927 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:05.905799 26927 net.cpp:139] Memory required for data: 2094800
I0428 19:50:05.905807 26927 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:05.905813 26927 net.cpp:86] Creating Layer relu1
I0428 19:50:05.905817 26927 net.cpp:408] relu1 <- ip1
I0428 19:50:05.905822 26927 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:05.906086 26927 net.cpp:124] Setting up relu1
I0428 19:50:05.906095 26927 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:05.906102 26927 net.cpp:139] Memory required for data: 2114800
I0428 19:50:05.906106 26927 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:05.906114 26927 net.cpp:86] Creating Layer ip2
I0428 19:50:05.906122 26927 net.cpp:408] ip2 <- ip1
I0428 19:50:05.906127 26927 net.cpp:382] ip2 -> ip2
I0428 19:50:05.906232 26927 net.cpp:124] Setting up ip2
I0428 19:50:05.906239 26927 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:05.906242 26927 net.cpp:139] Memory required for data: 2118800
I0428 19:50:05.906249 26927 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:05.906252 26927 net.cpp:86] Creating Layer relu2
I0428 19:50:05.906255 26927 net.cpp:408] relu2 <- ip2
I0428 19:50:05.906261 26927 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:05.906420 26927 net.cpp:124] Setting up relu2
I0428 19:50:05.906428 26927 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:05.906438 26927 net.cpp:139] Memory required for data: 2122800
I0428 19:50:05.906441 26927 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:50:05.906445 26927 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:50:05.906448 26927 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:50:05.906455 26927 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:50:05.906469 26927 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:50:05.906507 26927 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:50:05.906518 26927 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:05.906523 26927 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:05.906527 26927 net.cpp:139] Memory required for data: 2130800
I0428 19:50:05.906545 26927 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:05.906551 26927 net.cpp:86] Creating Layer accuracy
I0428 19:50:05.906554 26927 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:50:05.906558 26927 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:05.906584 26927 net.cpp:382] accuracy -> accuracy
I0428 19:50:05.906599 26927 net.cpp:124] Setting up accuracy
I0428 19:50:05.906605 26927 net.cpp:131] Top shape: (1)
I0428 19:50:05.906606 26927 net.cpp:139] Memory required for data: 2130804
I0428 19:50:05.906610 26927 layer_factory.hpp:77] Creating layer loss
I0428 19:50:05.906615 26927 net.cpp:86] Creating Layer loss
I0428 19:50:05.906617 26927 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:50:05.906621 26927 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:05.906661 26927 net.cpp:382] loss -> loss
I0428 19:50:05.906667 26927 layer_factory.hpp:77] Creating layer loss
I0428 19:50:05.906945 26927 net.cpp:124] Setting up loss
I0428 19:50:05.906955 26927 net.cpp:131] Top shape: (1)
I0428 19:50:05.906957 26927 net.cpp:134]     with loss weight 1
I0428 19:50:05.906963 26927 net.cpp:139] Memory required for data: 2130808
I0428 19:50:05.906973 26927 net.cpp:200] loss needs backward computation.
I0428 19:50:05.906977 26927 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:05.906986 26927 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:50:05.906990 26927 net.cpp:200] relu2 needs backward computation.
I0428 19:50:05.906991 26927 net.cpp:200] ip2 needs backward computation.
I0428 19:50:05.906994 26927 net.cpp:200] relu1 needs backward computation.
I0428 19:50:05.906997 26927 net.cpp:200] ip1 needs backward computation.
I0428 19:50:05.907001 26927 net.cpp:200] pool1 needs backward computation.
I0428 19:50:05.907003 26927 net.cpp:200] conv1 needs backward computation.
I0428 19:50:05.907006 26927 net.cpp:200] pool0 needs backward computation.
I0428 19:50:05.907009 26927 net.cpp:200] conv0 needs backward computation.
I0428 19:50:05.907012 26927 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:05.907016 26927 net.cpp:202] mnist does not need backward computation.
I0428 19:50:05.907018 26927 net.cpp:244] This network produces output accuracy
I0428 19:50:05.907021 26927 net.cpp:244] This network produces output loss
I0428 19:50:05.907032 26927 net.cpp:257] Network initialization done.
I0428 19:50:05.907068 26927 solver.cpp:56] Solver scaffolding done.
I0428 19:50:05.907343 26927 caffe.cpp:248] Starting Optimization
I0428 19:50:05.907349 26927 solver.cpp:273] Solving LeNet
I0428 19:50:05.907352 26927 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:05.908099 26927 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:05.910111 26927 blocking_queue.cpp:49] Waiting for data
I0428 19:50:05.981315 26934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:05.981835 26927 solver.cpp:398]     Test net output #0: accuracy = 0.1352
I0428 19:50:05.981854 26927 solver.cpp:398]     Test net output #1: loss = 2.30913 (* 1 = 2.30913 loss)
I0428 19:50:05.983736 26927 solver.cpp:219] Iteration 0 (0 iter/s, 0.0763535s/100 iters), loss = 2.34049
I0428 19:50:05.983757 26927 solver.cpp:238]     Train net output #0: loss = 2.34049 (* 1 = 2.34049 loss)
I0428 19:50:05.983811 26927 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:06.065193 26927 solver.cpp:219] Iteration 100 (1228.13 iter/s, 0.0814244s/100 iters), loss = 0.604593
I0428 19:50:06.065217 26927 solver.cpp:238]     Train net output #0: loss = 0.604593 (* 1 = 0.604593 loss)
I0428 19:50:06.065238 26927 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:06.136656 26927 solver.cpp:219] Iteration 200 (1399.99 iter/s, 0.0714291s/100 iters), loss = 0.504609
I0428 19:50:06.136689 26927 solver.cpp:238]     Train net output #0: loss = 0.504609 (* 1 = 0.504609 loss)
I0428 19:50:06.136713 26927 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:06.205981 26927 solver.cpp:219] Iteration 300 (1443.38 iter/s, 0.0692818s/100 iters), loss = 0.342383
I0428 19:50:06.206002 26927 solver.cpp:238]     Train net output #0: loss = 0.342383 (* 1 = 0.342383 loss)
I0428 19:50:06.206023 26927 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:06.276259 26927 solver.cpp:219] Iteration 400 (1423.54 iter/s, 0.0702474s/100 iters), loss = 0.277018
I0428 19:50:06.276298 26927 solver.cpp:238]     Train net output #0: loss = 0.277018 (* 1 = 0.277018 loss)
I0428 19:50:06.276319 26927 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:06.346468 26927 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:06.418669 26934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:06.419158 26927 solver.cpp:398]     Test net output #0: accuracy = 0.849
I0428 19:50:06.419180 26927 solver.cpp:398]     Test net output #1: loss = 0.389797 (* 1 = 0.389797 loss)
I0428 19:50:06.419930 26927 solver.cpp:219] Iteration 500 (696.286 iter/s, 0.143619s/100 iters), loss = 0.445199
I0428 19:50:06.419952 26927 solver.cpp:238]     Train net output #0: loss = 0.445199 (* 1 = 0.445199 loss)
I0428 19:50:06.419958 26927 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:06.501823 26927 solver.cpp:219] Iteration 600 (1221.57 iter/s, 0.0818615s/100 iters), loss = 0.217277
I0428 19:50:06.501845 26927 solver.cpp:238]     Train net output #0: loss = 0.217277 (* 1 = 0.217277 loss)
I0428 19:50:06.501868 26927 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:06.573365 26927 solver.cpp:219] Iteration 700 (1398.39 iter/s, 0.071511s/100 iters), loss = 0.186075
I0428 19:50:06.573387 26927 solver.cpp:238]     Train net output #0: loss = 0.186075 (* 1 = 0.186075 loss)
I0428 19:50:06.573408 26927 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:06.643708 26927 solver.cpp:219] Iteration 800 (1422.24 iter/s, 0.0703118s/100 iters), loss = 0.221862
I0428 19:50:06.643733 26927 solver.cpp:238]     Train net output #0: loss = 0.221862 (* 1 = 0.221862 loss)
I0428 19:50:06.643755 26927 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:06.713486 26927 solver.cpp:219] Iteration 900 (1433.8 iter/s, 0.0697446s/100 iters), loss = 0.272993
I0428 19:50:06.713510 26927 solver.cpp:238]     Train net output #0: loss = 0.272993 (* 1 = 0.272993 loss)
I0428 19:50:06.713531 26927 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:06.736423 26933 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:06.782071 26927 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:06.782913 26927 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:06.783377 26927 solver.cpp:311] Iteration 1000, loss = 0.147685
I0428 19:50:06.783393 26927 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:06.837342 26934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:06.837797 26927 solver.cpp:398]     Test net output #0: accuracy = 0.974
I0428 19:50:06.837816 26927 solver.cpp:398]     Test net output #1: loss = 0.0869178 (* 1 = 0.0869178 loss)
I0428 19:50:06.837821 26927 solver.cpp:316] Optimization Done.
I0428 19:50:06.837824 26927 caffe.cpp:259] Optimization Done.
