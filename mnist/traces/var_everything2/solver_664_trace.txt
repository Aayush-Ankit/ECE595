I0428 19:52:31.621341 27535 caffe.cpp:218] Using GPUs 0
I0428 19:52:31.659220 27535 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:32.172075 27535 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test664.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:32.172219 27535 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test664.prototxt
I0428 19:52:32.172567 27535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:32.172583 27535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:32.172663 27535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:32.172734 27535 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:32.172842 27535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:32.172868 27535 net.cpp:86] Creating Layer mnist
I0428 19:52:32.172876 27535 net.cpp:382] mnist -> data
I0428 19:52:32.172900 27535 net.cpp:382] mnist -> label
I0428 19:52:32.173992 27535 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:32.176445 27535 net.cpp:124] Setting up mnist
I0428 19:52:32.176463 27535 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:32.176470 27535 net.cpp:131] Top shape: 64 (64)
I0428 19:52:32.176475 27535 net.cpp:139] Memory required for data: 200960
I0428 19:52:32.176481 27535 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:32.176498 27535 net.cpp:86] Creating Layer conv0
I0428 19:52:32.176504 27535 net.cpp:408] conv0 <- data
I0428 19:52:32.176515 27535 net.cpp:382] conv0 -> conv0
I0428 19:52:32.454994 27535 net.cpp:124] Setting up conv0
I0428 19:52:32.455037 27535 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:32.455041 27535 net.cpp:139] Memory required for data: 938240
I0428 19:52:32.455056 27535 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:32.455070 27535 net.cpp:86] Creating Layer pool0
I0428 19:52:32.455073 27535 net.cpp:408] pool0 <- conv0
I0428 19:52:32.455078 27535 net.cpp:382] pool0 -> pool0
I0428 19:52:32.455140 27535 net.cpp:124] Setting up pool0
I0428 19:52:32.455145 27535 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:32.455163 27535 net.cpp:139] Memory required for data: 1122560
I0428 19:52:32.455168 27535 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:32.455178 27535 net.cpp:86] Creating Layer conv1
I0428 19:52:32.455181 27535 net.cpp:408] conv1 <- pool0
I0428 19:52:32.455186 27535 net.cpp:382] conv1 -> conv1
I0428 19:52:32.457973 27535 net.cpp:124] Setting up conv1
I0428 19:52:32.457988 27535 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:32.457991 27535 net.cpp:139] Memory required for data: 1941760
I0428 19:52:32.457999 27535 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:32.458006 27535 net.cpp:86] Creating Layer pool1
I0428 19:52:32.458025 27535 net.cpp:408] pool1 <- conv1
I0428 19:52:32.458030 27535 net.cpp:382] pool1 -> pool1
I0428 19:52:32.458066 27535 net.cpp:124] Setting up pool1
I0428 19:52:32.458072 27535 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:32.458075 27535 net.cpp:139] Memory required for data: 2146560
I0428 19:52:32.458077 27535 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:32.458084 27535 net.cpp:86] Creating Layer ip1
I0428 19:52:32.458087 27535 net.cpp:408] ip1 <- pool1
I0428 19:52:32.458091 27535 net.cpp:382] ip1 -> ip1
I0428 19:52:32.458227 27535 net.cpp:124] Setting up ip1
I0428 19:52:32.458235 27535 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:32.458238 27535 net.cpp:139] Memory required for data: 2149120
I0428 19:52:32.458245 27535 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:32.458251 27535 net.cpp:86] Creating Layer relu1
I0428 19:52:32.458254 27535 net.cpp:408] relu1 <- ip1
I0428 19:52:32.458258 27535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:32.458418 27535 net.cpp:124] Setting up relu1
I0428 19:52:32.458427 27535 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:32.458431 27535 net.cpp:139] Memory required for data: 2151680
I0428 19:52:32.458433 27535 layer_factory.hpp:77] Creating layer loss
I0428 19:52:32.458438 27535 net.cpp:86] Creating Layer loss
I0428 19:52:32.458441 27535 net.cpp:408] loss <- ip1
I0428 19:52:32.458446 27535 net.cpp:408] loss <- label
I0428 19:52:32.458451 27535 net.cpp:382] loss -> loss
I0428 19:52:32.458467 27535 layer_factory.hpp:77] Creating layer loss
I0428 19:52:32.459278 27535 net.cpp:124] Setting up loss
I0428 19:52:32.459291 27535 net.cpp:131] Top shape: (1)
I0428 19:52:32.459311 27535 net.cpp:134]     with loss weight 1
I0428 19:52:32.459326 27535 net.cpp:139] Memory required for data: 2151684
I0428 19:52:32.459328 27535 net.cpp:200] loss needs backward computation.
I0428 19:52:32.459332 27535 net.cpp:200] relu1 needs backward computation.
I0428 19:52:32.459336 27535 net.cpp:200] ip1 needs backward computation.
I0428 19:52:32.459338 27535 net.cpp:200] pool1 needs backward computation.
I0428 19:52:32.459342 27535 net.cpp:200] conv1 needs backward computation.
I0428 19:52:32.459344 27535 net.cpp:200] pool0 needs backward computation.
I0428 19:52:32.459348 27535 net.cpp:200] conv0 needs backward computation.
I0428 19:52:32.459352 27535 net.cpp:202] mnist does not need backward computation.
I0428 19:52:32.459354 27535 net.cpp:244] This network produces output loss
I0428 19:52:32.459362 27535 net.cpp:257] Network initialization done.
I0428 19:52:32.459622 27535 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test664.prototxt
I0428 19:52:32.459646 27535 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:32.459722 27535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:32.459794 27535 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:32.459837 27535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:32.459851 27535 net.cpp:86] Creating Layer mnist
I0428 19:52:32.459854 27535 net.cpp:382] mnist -> data
I0428 19:52:32.459862 27535 net.cpp:382] mnist -> label
I0428 19:52:32.459952 27535 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:32.462106 27535 net.cpp:124] Setting up mnist
I0428 19:52:32.462121 27535 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:32.462127 27535 net.cpp:131] Top shape: 100 (100)
I0428 19:52:32.462131 27535 net.cpp:139] Memory required for data: 314000
I0428 19:52:32.462134 27535 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:32.462144 27535 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:32.462148 27535 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:32.462153 27535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:32.462159 27535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:32.462285 27535 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:32.462292 27535 net.cpp:131] Top shape: 100 (100)
I0428 19:52:32.462296 27535 net.cpp:131] Top shape: 100 (100)
I0428 19:52:32.462299 27535 net.cpp:139] Memory required for data: 314800
I0428 19:52:32.462302 27535 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:32.462311 27535 net.cpp:86] Creating Layer conv0
I0428 19:52:32.462329 27535 net.cpp:408] conv0 <- data
I0428 19:52:32.462334 27535 net.cpp:382] conv0 -> conv0
I0428 19:52:32.463237 27535 net.cpp:124] Setting up conv0
I0428 19:52:32.463249 27535 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:32.463269 27535 net.cpp:139] Memory required for data: 1466800
I0428 19:52:32.463277 27535 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:32.463284 27535 net.cpp:86] Creating Layer pool0
I0428 19:52:32.463287 27535 net.cpp:408] pool0 <- conv0
I0428 19:52:32.463292 27535 net.cpp:382] pool0 -> pool0
I0428 19:52:32.463342 27535 net.cpp:124] Setting up pool0
I0428 19:52:32.463347 27535 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:32.463351 27535 net.cpp:139] Memory required for data: 1754800
I0428 19:52:32.463354 27535 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:32.463362 27535 net.cpp:86] Creating Layer conv1
I0428 19:52:32.463366 27535 net.cpp:408] conv1 <- pool0
I0428 19:52:32.463371 27535 net.cpp:382] conv1 -> conv1
I0428 19:52:32.465018 27535 net.cpp:124] Setting up conv1
I0428 19:52:32.465034 27535 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:32.465039 27535 net.cpp:139] Memory required for data: 3034800
I0428 19:52:32.465049 27535 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:32.465054 27535 net.cpp:86] Creating Layer pool1
I0428 19:52:32.465071 27535 net.cpp:408] pool1 <- conv1
I0428 19:52:32.465085 27535 net.cpp:382] pool1 -> pool1
I0428 19:52:32.465124 27535 net.cpp:124] Setting up pool1
I0428 19:52:32.465150 27535 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:32.465153 27535 net.cpp:139] Memory required for data: 3354800
I0428 19:52:32.465157 27535 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:32.465168 27535 net.cpp:86] Creating Layer ip1
I0428 19:52:32.465173 27535 net.cpp:408] ip1 <- pool1
I0428 19:52:32.465178 27535 net.cpp:382] ip1 -> ip1
I0428 19:52:32.465322 27535 net.cpp:124] Setting up ip1
I0428 19:52:32.465330 27535 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:32.465334 27535 net.cpp:139] Memory required for data: 3358800
I0428 19:52:32.465342 27535 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:32.465348 27535 net.cpp:86] Creating Layer relu1
I0428 19:52:32.465350 27535 net.cpp:408] relu1 <- ip1
I0428 19:52:32.465354 27535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:32.466168 27535 net.cpp:124] Setting up relu1
I0428 19:52:32.466179 27535 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:32.466198 27535 net.cpp:139] Memory required for data: 3362800
I0428 19:52:32.466202 27535 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:52:32.466209 27535 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:52:32.466213 27535 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:52:32.466218 27535 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:52:32.466225 27535 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:52:32.466265 27535 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:52:32.466270 27535 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:32.466274 27535 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:32.466277 27535 net.cpp:139] Memory required for data: 3370800
I0428 19:52:32.466279 27535 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:32.466285 27535 net.cpp:86] Creating Layer accuracy
I0428 19:52:32.466289 27535 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:52:32.466292 27535 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:32.466297 27535 net.cpp:382] accuracy -> accuracy
I0428 19:52:32.466303 27535 net.cpp:124] Setting up accuracy
I0428 19:52:32.466307 27535 net.cpp:131] Top shape: (1)
I0428 19:52:32.466310 27535 net.cpp:139] Memory required for data: 3370804
I0428 19:52:32.466313 27535 layer_factory.hpp:77] Creating layer loss
I0428 19:52:32.466317 27535 net.cpp:86] Creating Layer loss
I0428 19:52:32.466321 27535 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:52:32.466325 27535 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:32.466330 27535 net.cpp:382] loss -> loss
I0428 19:52:32.466336 27535 layer_factory.hpp:77] Creating layer loss
I0428 19:52:32.466572 27535 net.cpp:124] Setting up loss
I0428 19:52:32.466581 27535 net.cpp:131] Top shape: (1)
I0428 19:52:32.466585 27535 net.cpp:134]     with loss weight 1
I0428 19:52:32.466593 27535 net.cpp:139] Memory required for data: 3370808
I0428 19:52:32.466596 27535 net.cpp:200] loss needs backward computation.
I0428 19:52:32.466600 27535 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:32.466604 27535 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:52:32.466608 27535 net.cpp:200] relu1 needs backward computation.
I0428 19:52:32.466617 27535 net.cpp:200] ip1 needs backward computation.
I0428 19:52:32.466621 27535 net.cpp:200] pool1 needs backward computation.
I0428 19:52:32.466625 27535 net.cpp:200] conv1 needs backward computation.
I0428 19:52:32.466629 27535 net.cpp:200] pool0 needs backward computation.
I0428 19:52:32.466632 27535 net.cpp:200] conv0 needs backward computation.
I0428 19:52:32.466636 27535 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:32.466640 27535 net.cpp:202] mnist does not need backward computation.
I0428 19:52:32.466644 27535 net.cpp:244] This network produces output accuracy
I0428 19:52:32.466647 27535 net.cpp:244] This network produces output loss
I0428 19:52:32.466666 27535 net.cpp:257] Network initialization done.
I0428 19:52:32.466702 27535 solver.cpp:56] Solver scaffolding done.
I0428 19:52:32.466919 27535 caffe.cpp:248] Starting Optimization
I0428 19:52:32.466925 27535 solver.cpp:273] Solving LeNet
I0428 19:52:32.466929 27535 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:32.467037 27535 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:32.471078 27535 blocking_queue.cpp:49] Waiting for data
I0428 19:52:32.543392 27542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:32.543855 27535 solver.cpp:398]     Test net output #0: accuracy = 0.0924
I0428 19:52:32.543892 27535 solver.cpp:398]     Test net output #1: loss = 2.46744 (* 1 = 2.46744 loss)
I0428 19:52:32.546144 27535 solver.cpp:219] Iteration 0 (0 iter/s, 0.0791889s/100 iters), loss = 2.52175
I0428 19:52:32.546190 27535 solver.cpp:238]     Train net output #0: loss = 2.52175 (* 1 = 2.52175 loss)
I0428 19:52:32.546203 27535 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:32.647256 27535 solver.cpp:219] Iteration 100 (989.537 iter/s, 0.101057s/100 iters), loss = 1.19561
I0428 19:52:32.647299 27535 solver.cpp:238]     Train net output #0: loss = 1.19561 (* 1 = 1.19561 loss)
I0428 19:52:32.647305 27535 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:32.736315 27535 solver.cpp:219] Iteration 200 (1123.51 iter/s, 0.0890071s/100 iters), loss = 1.18075
I0428 19:52:32.736344 27535 solver.cpp:238]     Train net output #0: loss = 1.18075 (* 1 = 1.18075 loss)
I0428 19:52:32.736352 27535 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:32.824897 27535 solver.cpp:219] Iteration 300 (1129.4 iter/s, 0.0885422s/100 iters), loss = 0.641688
I0428 19:52:32.824924 27535 solver.cpp:238]     Train net output #0: loss = 0.641688 (* 1 = 0.641688 loss)
I0428 19:52:32.824931 27535 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:32.915575 27535 solver.cpp:219] Iteration 400 (1103.25 iter/s, 0.0906414s/100 iters), loss = 0.584363
I0428 19:52:32.915608 27535 solver.cpp:238]     Train net output #0: loss = 0.584363 (* 1 = 0.584363 loss)
I0428 19:52:32.915617 27535 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:33.006933 27535 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:33.081557 27542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:33.082006 27535 solver.cpp:398]     Test net output #0: accuracy = 0.7729
I0428 19:52:33.082031 27535 solver.cpp:398]     Test net output #1: loss = 0.581152 (* 1 = 0.581152 loss)
I0428 19:52:33.082978 27535 solver.cpp:219] Iteration 500 (597.527 iter/s, 0.167356s/100 iters), loss = 0.542885
I0428 19:52:33.083003 27535 solver.cpp:238]     Train net output #0: loss = 0.542885 (* 1 = 0.542885 loss)
I0428 19:52:33.083009 27535 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:33.182706 27535 solver.cpp:219] Iteration 600 (1003.11 iter/s, 0.0996895s/100 iters), loss = 0.516741
I0428 19:52:33.182750 27535 solver.cpp:238]     Train net output #0: loss = 0.516741 (* 1 = 0.516741 loss)
I0428 19:52:33.182756 27535 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:33.283622 27535 solver.cpp:219] Iteration 700 (991.454 iter/s, 0.100862s/100 iters), loss = 0.35554
I0428 19:52:33.283649 27535 solver.cpp:238]     Train net output #0: loss = 0.35554 (* 1 = 0.35554 loss)
I0428 19:52:33.283656 27535 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:33.382467 27535 solver.cpp:219] Iteration 800 (1012.1 iter/s, 0.0988047s/100 iters), loss = 0.456445
I0428 19:52:33.382503 27535 solver.cpp:238]     Train net output #0: loss = 0.456445 (* 1 = 0.456445 loss)
I0428 19:52:33.382508 27535 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:33.481734 27535 solver.cpp:219] Iteration 900 (1007.82 iter/s, 0.0992237s/100 iters), loss = 0.731124
I0428 19:52:33.481778 27535 solver.cpp:238]     Train net output #0: loss = 0.731124 (* 1 = 0.731124 loss)
I0428 19:52:33.481784 27535 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:33.515439 27541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:33.580543 27535 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:33.581490 27535 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:33.581984 27535 solver.cpp:311] Iteration 1000, loss = 0.312458
I0428 19:52:33.582002 27535 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:33.658274 27542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:33.658723 27535 solver.cpp:398]     Test net output #0: accuracy = 0.872
I0428 19:52:33.658746 27535 solver.cpp:398]     Test net output #1: loss = 0.330828 (* 1 = 0.330828 loss)
I0428 19:52:33.658751 27535 solver.cpp:316] Optimization Done.
I0428 19:52:33.658753 27535 caffe.cpp:259] Optimization Done.
