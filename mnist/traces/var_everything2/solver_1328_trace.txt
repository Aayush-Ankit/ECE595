I0428 20:18:50.251916  1247 caffe.cpp:218] Using GPUs 0
I0428 20:18:50.280742  1247 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:50.731581  1247 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1328.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:50.731729  1247 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1328.prototxt
I0428 20:18:50.732038  1247 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:50.732053  1247 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:50.732123  1247 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:50.732182  1247 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:50.732269  1247 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:50.732317  1247 net.cpp:86] Creating Layer mnist
I0428 20:18:50.732324  1247 net.cpp:382] mnist -> data
I0428 20:18:50.732342  1247 net.cpp:382] mnist -> label
I0428 20:18:50.733399  1247 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:50.735661  1247 net.cpp:124] Setting up mnist
I0428 20:18:50.735690  1247 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:50.735695  1247 net.cpp:131] Top shape: 64 (64)
I0428 20:18:50.735698  1247 net.cpp:139] Memory required for data: 200960
I0428 20:18:50.735704  1247 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:50.735718  1247 net.cpp:86] Creating Layer conv0
I0428 20:18:50.735723  1247 net.cpp:408] conv0 <- data
I0428 20:18:50.735734  1247 net.cpp:382] conv0 -> conv0
I0428 20:18:50.970999  1247 net.cpp:124] Setting up conv0
I0428 20:18:50.971042  1247 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:50.971046  1247 net.cpp:139] Memory required for data: 7573760
I0428 20:18:50.971060  1247 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:50.971073  1247 net.cpp:86] Creating Layer pool0
I0428 20:18:50.971077  1247 net.cpp:408] pool0 <- conv0
I0428 20:18:50.971082  1247 net.cpp:382] pool0 -> pool0
I0428 20:18:50.971144  1247 net.cpp:124] Setting up pool0
I0428 20:18:50.971150  1247 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:50.971169  1247 net.cpp:139] Memory required for data: 9416960
I0428 20:18:50.971174  1247 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:50.971184  1247 net.cpp:86] Creating Layer conv1
I0428 20:18:50.971186  1247 net.cpp:408] conv1 <- pool0
I0428 20:18:50.971191  1247 net.cpp:382] conv1 -> conv1
I0428 20:18:50.973364  1247 net.cpp:124] Setting up conv1
I0428 20:18:50.973394  1247 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:18:50.973398  1247 net.cpp:139] Memory required for data: 9826560
I0428 20:18:50.973407  1247 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:50.973415  1247 net.cpp:86] Creating Layer pool1
I0428 20:18:50.973419  1247 net.cpp:408] pool1 <- conv1
I0428 20:18:50.973424  1247 net.cpp:382] pool1 -> pool1
I0428 20:18:50.973479  1247 net.cpp:124] Setting up pool1
I0428 20:18:50.973484  1247 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:18:50.973487  1247 net.cpp:139] Memory required for data: 9928960
I0428 20:18:50.973490  1247 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:50.973497  1247 net.cpp:86] Creating Layer ip1
I0428 20:18:50.973500  1247 net.cpp:408] ip1 <- pool1
I0428 20:18:50.973505  1247 net.cpp:382] ip1 -> ip1
I0428 20:18:50.973651  1247 net.cpp:124] Setting up ip1
I0428 20:18:50.973660  1247 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:50.973664  1247 net.cpp:139] Memory required for data: 9931520
I0428 20:18:50.973670  1247 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:50.973675  1247 net.cpp:86] Creating Layer relu1
I0428 20:18:50.973680  1247 net.cpp:408] relu1 <- ip1
I0428 20:18:50.973701  1247 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:50.973896  1247 net.cpp:124] Setting up relu1
I0428 20:18:50.973906  1247 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:50.973909  1247 net.cpp:139] Memory required for data: 9934080
I0428 20:18:50.973912  1247 layer_factory.hpp:77] Creating layer loss
I0428 20:18:50.973918  1247 net.cpp:86] Creating Layer loss
I0428 20:18:50.973923  1247 net.cpp:408] loss <- ip1
I0428 20:18:50.973927  1247 net.cpp:408] loss <- label
I0428 20:18:50.973932  1247 net.cpp:382] loss -> loss
I0428 20:18:50.973950  1247 layer_factory.hpp:77] Creating layer loss
I0428 20:18:50.974797  1247 net.cpp:124] Setting up loss
I0428 20:18:50.974808  1247 net.cpp:131] Top shape: (1)
I0428 20:18:50.974828  1247 net.cpp:134]     with loss weight 1
I0428 20:18:50.974855  1247 net.cpp:139] Memory required for data: 9934084
I0428 20:18:50.974874  1247 net.cpp:200] loss needs backward computation.
I0428 20:18:50.974879  1247 net.cpp:200] relu1 needs backward computation.
I0428 20:18:50.974881  1247 net.cpp:200] ip1 needs backward computation.
I0428 20:18:50.974885  1247 net.cpp:200] pool1 needs backward computation.
I0428 20:18:50.974889  1247 net.cpp:200] conv1 needs backward computation.
I0428 20:18:50.974891  1247 net.cpp:200] pool0 needs backward computation.
I0428 20:18:50.974895  1247 net.cpp:200] conv0 needs backward computation.
I0428 20:18:50.974897  1247 net.cpp:202] mnist does not need backward computation.
I0428 20:18:50.974900  1247 net.cpp:244] This network produces output loss
I0428 20:18:50.974910  1247 net.cpp:257] Network initialization done.
I0428 20:18:50.975208  1247 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1328.prototxt
I0428 20:18:50.975234  1247 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:50.975322  1247 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:50.975399  1247 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:50.975443  1247 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:50.975455  1247 net.cpp:86] Creating Layer mnist
I0428 20:18:50.975461  1247 net.cpp:382] mnist -> data
I0428 20:18:50.975469  1247 net.cpp:382] mnist -> label
I0428 20:18:50.975554  1247 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:50.977664  1247 net.cpp:124] Setting up mnist
I0428 20:18:50.977694  1247 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:50.977699  1247 net.cpp:131] Top shape: 100 (100)
I0428 20:18:50.977701  1247 net.cpp:139] Memory required for data: 314000
I0428 20:18:50.977705  1247 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:50.977744  1247 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:50.977748  1247 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:50.977762  1247 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:50.977771  1247 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:50.977819  1247 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:50.977824  1247 net.cpp:131] Top shape: 100 (100)
I0428 20:18:50.977828  1247 net.cpp:131] Top shape: 100 (100)
I0428 20:18:50.977831  1247 net.cpp:139] Memory required for data: 314800
I0428 20:18:50.977833  1247 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:50.977843  1247 net.cpp:86] Creating Layer conv0
I0428 20:18:50.977862  1247 net.cpp:408] conv0 <- data
I0428 20:18:50.977869  1247 net.cpp:382] conv0 -> conv0
I0428 20:18:50.978924  1247 net.cpp:124] Setting up conv0
I0428 20:18:50.978952  1247 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:50.978955  1247 net.cpp:139] Memory required for data: 11834800
I0428 20:18:50.978965  1247 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:50.978971  1247 net.cpp:86] Creating Layer pool0
I0428 20:18:50.978974  1247 net.cpp:408] pool0 <- conv0
I0428 20:18:50.978981  1247 net.cpp:382] pool0 -> pool0
I0428 20:18:50.979017  1247 net.cpp:124] Setting up pool0
I0428 20:18:50.979022  1247 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:50.979025  1247 net.cpp:139] Memory required for data: 14714800
I0428 20:18:50.979027  1247 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:50.979038  1247 net.cpp:86] Creating Layer conv1
I0428 20:18:50.979041  1247 net.cpp:408] conv1 <- pool0
I0428 20:18:50.979045  1247 net.cpp:382] conv1 -> conv1
I0428 20:18:50.980849  1247 net.cpp:124] Setting up conv1
I0428 20:18:50.980862  1247 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:18:50.980882  1247 net.cpp:139] Memory required for data: 15354800
I0428 20:18:50.980893  1247 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:50.980901  1247 net.cpp:86] Creating Layer pool1
I0428 20:18:50.980929  1247 net.cpp:408] pool1 <- conv1
I0428 20:18:50.980950  1247 net.cpp:382] pool1 -> pool1
I0428 20:18:50.980990  1247 net.cpp:124] Setting up pool1
I0428 20:18:50.980998  1247 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:18:50.981000  1247 net.cpp:139] Memory required for data: 15514800
I0428 20:18:50.981003  1247 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:50.981009  1247 net.cpp:86] Creating Layer ip1
I0428 20:18:50.981014  1247 net.cpp:408] ip1 <- pool1
I0428 20:18:50.981019  1247 net.cpp:382] ip1 -> ip1
I0428 20:18:50.981159  1247 net.cpp:124] Setting up ip1
I0428 20:18:50.981168  1247 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:50.981171  1247 net.cpp:139] Memory required for data: 15518800
I0428 20:18:50.981179  1247 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:50.981209  1247 net.cpp:86] Creating Layer relu1
I0428 20:18:50.981212  1247 net.cpp:408] relu1 <- ip1
I0428 20:18:50.981216  1247 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:50.982031  1247 net.cpp:124] Setting up relu1
I0428 20:18:50.982043  1247 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:50.982046  1247 net.cpp:139] Memory required for data: 15522800
I0428 20:18:50.982050  1247 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:18:50.982058  1247 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:18:50.982061  1247 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:18:50.982066  1247 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:18:50.982072  1247 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:18:50.982144  1247 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:18:50.982149  1247 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:50.982153  1247 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:50.982156  1247 net.cpp:139] Memory required for data: 15530800
I0428 20:18:50.982158  1247 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:50.982162  1247 net.cpp:86] Creating Layer accuracy
I0428 20:18:50.982167  1247 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:18:50.982170  1247 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:50.982175  1247 net.cpp:382] accuracy -> accuracy
I0428 20:18:50.982182  1247 net.cpp:124] Setting up accuracy
I0428 20:18:50.982185  1247 net.cpp:131] Top shape: (1)
I0428 20:18:50.982188  1247 net.cpp:139] Memory required for data: 15530804
I0428 20:18:50.982192  1247 layer_factory.hpp:77] Creating layer loss
I0428 20:18:50.982195  1247 net.cpp:86] Creating Layer loss
I0428 20:18:50.982198  1247 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:18:50.982203  1247 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:50.982205  1247 net.cpp:382] loss -> loss
I0428 20:18:50.982211  1247 layer_factory.hpp:77] Creating layer loss
I0428 20:18:50.982476  1247 net.cpp:124] Setting up loss
I0428 20:18:50.982486  1247 net.cpp:131] Top shape: (1)
I0428 20:18:50.982489  1247 net.cpp:134]     with loss weight 1
I0428 20:18:50.982512  1247 net.cpp:139] Memory required for data: 15530808
I0428 20:18:50.982522  1247 net.cpp:200] loss needs backward computation.
I0428 20:18:50.982527  1247 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:50.982529  1247 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:18:50.982533  1247 net.cpp:200] relu1 needs backward computation.
I0428 20:18:50.982537  1247 net.cpp:200] ip1 needs backward computation.
I0428 20:18:50.982539  1247 net.cpp:200] pool1 needs backward computation.
I0428 20:18:50.982542  1247 net.cpp:200] conv1 needs backward computation.
I0428 20:18:50.982552  1247 net.cpp:200] pool0 needs backward computation.
I0428 20:18:50.982554  1247 net.cpp:200] conv0 needs backward computation.
I0428 20:18:50.982558  1247 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:50.982563  1247 net.cpp:202] mnist does not need backward computation.
I0428 20:18:50.982565  1247 net.cpp:244] This network produces output accuracy
I0428 20:18:50.982569  1247 net.cpp:244] This network produces output loss
I0428 20:18:50.982589  1247 net.cpp:257] Network initialization done.
I0428 20:18:50.982637  1247 solver.cpp:56] Solver scaffolding done.
I0428 20:18:50.982890  1247 caffe.cpp:248] Starting Optimization
I0428 20:18:50.982899  1247 solver.cpp:273] Solving LeNet
I0428 20:18:50.982902  1247 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:50.983022  1247 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:50.989068  1247 blocking_queue.cpp:49] Waiting for data
I0428 20:18:51.061074  1254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:51.061764  1247 solver.cpp:398]     Test net output #0: accuracy = 0.0576
I0428 20:18:51.061784  1247 solver.cpp:398]     Test net output #1: loss = 2.3538 (* 1 = 2.3538 loss)
I0428 20:18:51.066061  1247 solver.cpp:219] Iteration 0 (0 iter/s, 0.0831345s/100 iters), loss = 2.33321
I0428 20:18:51.066084  1247 solver.cpp:238]     Train net output #0: loss = 2.33321 (* 1 = 2.33321 loss)
I0428 20:18:51.066097  1247 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:51.197609  1247 solver.cpp:219] Iteration 100 (760.397 iter/s, 0.13151s/100 iters), loss = 1.25481
I0428 20:18:51.197649  1247 solver.cpp:238]     Train net output #0: loss = 1.25481 (* 1 = 1.25481 loss)
I0428 20:18:51.197655  1247 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:51.328080  1247 solver.cpp:219] Iteration 200 (766.773 iter/s, 0.130417s/100 iters), loss = 0.984297
I0428 20:18:51.328119  1247 solver.cpp:238]     Train net output #0: loss = 0.984297 (* 1 = 0.984297 loss)
I0428 20:18:51.328126  1247 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:51.459493  1247 solver.cpp:219] Iteration 300 (761.167 iter/s, 0.131377s/100 iters), loss = 0.809151
I0428 20:18:51.459532  1247 solver.cpp:238]     Train net output #0: loss = 0.809151 (* 1 = 0.809151 loss)
I0428 20:18:51.459538  1247 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:51.582105  1247 solver.cpp:219] Iteration 400 (815.924 iter/s, 0.122561s/100 iters), loss = 1.11939
I0428 20:18:51.582149  1247 solver.cpp:238]     Train net output #0: loss = 1.11939 (* 1 = 1.11939 loss)
I0428 20:18:51.582155  1247 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:51.699559  1247 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:51.776895  1254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:51.777581  1247 solver.cpp:398]     Test net output #0: accuracy = 0.6833
I0428 20:18:51.777603  1247 solver.cpp:398]     Test net output #1: loss = 0.807171 (* 1 = 0.807171 loss)
I0428 20:18:51.778872  1247 solver.cpp:219] Iteration 500 (508.327 iter/s, 0.196724s/100 iters), loss = 0.961086
I0428 20:18:51.778911  1247 solver.cpp:238]     Train net output #0: loss = 0.961086 (* 1 = 0.961086 loss)
I0428 20:18:51.778918  1247 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:51.910435  1247 solver.cpp:219] Iteration 600 (760.384 iter/s, 0.131512s/100 iters), loss = 0.737424
I0428 20:18:51.910459  1247 solver.cpp:238]     Train net output #0: loss = 0.737424 (* 1 = 0.737424 loss)
I0428 20:18:51.910480  1247 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:52.035065  1247 solver.cpp:219] Iteration 700 (802.606 iter/s, 0.124594s/100 iters), loss = 0.741736
I0428 20:18:52.035106  1247 solver.cpp:238]     Train net output #0: loss = 0.741736 (* 1 = 0.741736 loss)
I0428 20:18:52.035112  1247 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:52.166870  1247 solver.cpp:219] Iteration 800 (758.906 iter/s, 0.131769s/100 iters), loss = 0.887417
I0428 20:18:52.166910  1247 solver.cpp:238]     Train net output #0: loss = 0.887417 (* 1 = 0.887417 loss)
I0428 20:18:52.166916  1247 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:52.297740  1247 solver.cpp:219] Iteration 900 (764.33 iter/s, 0.130833s/100 iters), loss = 0.593326
I0428 20:18:52.297780  1247 solver.cpp:238]     Train net output #0: loss = 0.593326 (* 1 = 0.593326 loss)
I0428 20:18:52.297785  1247 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:52.341207  1253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:52.425974  1247 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:52.427328  1247 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:52.428175  1247 solver.cpp:311] Iteration 1000, loss = 0.487713
I0428 20:18:52.428189  1247 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:52.504262  1254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:52.504938  1247 solver.cpp:398]     Test net output #0: accuracy = 0.7821
I0428 20:18:52.504959  1247 solver.cpp:398]     Test net output #1: loss = 0.551121 (* 1 = 0.551121 loss)
I0428 20:18:52.504966  1247 solver.cpp:316] Optimization Done.
I0428 20:18:52.504968  1247 caffe.cpp:259] Optimization Done.
