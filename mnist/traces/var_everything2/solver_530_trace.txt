I0428 19:47:56.717000 26362 caffe.cpp:218] Using GPUs 0
I0428 19:47:56.756786 26362 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:57.218447 26362 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test530.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:57.218605 26362 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test530.prototxt
I0428 19:47:57.218974 26362 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:57.219007 26362 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:57.219087 26362 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:57.219151 26362 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:57.219231 26362 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:57.219249 26362 net.cpp:86] Creating Layer mnist
I0428 19:47:57.219257 26362 net.cpp:382] mnist -> data
I0428 19:47:57.219275 26362 net.cpp:382] mnist -> label
I0428 19:47:57.220335 26362 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:57.222612 26362 net.cpp:124] Setting up mnist
I0428 19:47:57.222627 26362 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:57.222632 26362 net.cpp:131] Top shape: 64 (64)
I0428 19:47:57.222635 26362 net.cpp:139] Memory required for data: 200960
I0428 19:47:57.222641 26362 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:57.222668 26362 net.cpp:86] Creating Layer conv0
I0428 19:47:57.222684 26362 net.cpp:408] conv0 <- data
I0428 19:47:57.222693 26362 net.cpp:382] conv0 -> conv0
I0428 19:47:57.453503 26362 net.cpp:124] Setting up conv0
I0428 19:47:57.453527 26362 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:57.453531 26362 net.cpp:139] Memory required for data: 938240
I0428 19:47:57.453547 26362 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:57.453558 26362 net.cpp:86] Creating Layer pool0
I0428 19:47:57.453562 26362 net.cpp:408] pool0 <- conv0
I0428 19:47:57.453567 26362 net.cpp:382] pool0 -> pool0
I0428 19:47:57.453625 26362 net.cpp:124] Setting up pool0
I0428 19:47:57.453631 26362 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:57.453634 26362 net.cpp:139] Memory required for data: 1122560
I0428 19:47:57.453636 26362 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:57.453646 26362 net.cpp:86] Creating Layer conv1
I0428 19:47:57.453649 26362 net.cpp:408] conv1 <- pool0
I0428 19:47:57.453654 26362 net.cpp:382] conv1 -> conv1
I0428 19:47:57.455492 26362 net.cpp:124] Setting up conv1
I0428 19:47:57.455520 26362 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:57.455523 26362 net.cpp:139] Memory required for data: 1155328
I0428 19:47:57.455533 26362 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:57.455539 26362 net.cpp:86] Creating Layer pool1
I0428 19:47:57.455543 26362 net.cpp:408] pool1 <- conv1
I0428 19:47:57.455549 26362 net.cpp:382] pool1 -> pool1
I0428 19:47:57.455600 26362 net.cpp:124] Setting up pool1
I0428 19:47:57.455605 26362 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:57.455608 26362 net.cpp:139] Memory required for data: 1163520
I0428 19:47:57.455610 26362 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:57.455617 26362 net.cpp:86] Creating Layer ip1
I0428 19:47:57.455621 26362 net.cpp:408] ip1 <- pool1
I0428 19:47:57.455626 26362 net.cpp:382] ip1 -> ip1
I0428 19:47:57.455724 26362 net.cpp:124] Setting up ip1
I0428 19:47:57.455730 26362 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:57.455734 26362 net.cpp:139] Memory required for data: 1169920
I0428 19:47:57.455741 26362 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:57.455746 26362 net.cpp:86] Creating Layer relu1
I0428 19:47:57.455749 26362 net.cpp:408] relu1 <- ip1
I0428 19:47:57.455754 26362 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:57.455929 26362 net.cpp:124] Setting up relu1
I0428 19:47:57.455937 26362 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:57.455940 26362 net.cpp:139] Memory required for data: 1176320
I0428 19:47:57.455943 26362 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:57.455950 26362 net.cpp:86] Creating Layer ip2
I0428 19:47:57.455952 26362 net.cpp:408] ip2 <- ip1
I0428 19:47:57.455957 26362 net.cpp:382] ip2 -> ip2
I0428 19:47:57.456048 26362 net.cpp:124] Setting up ip2
I0428 19:47:57.456053 26362 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:57.456056 26362 net.cpp:139] Memory required for data: 1178880
I0428 19:47:57.456063 26362 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:57.456068 26362 net.cpp:86] Creating Layer relu2
I0428 19:47:57.456070 26362 net.cpp:408] relu2 <- ip2
I0428 19:47:57.456074 26362 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:57.456787 26362 net.cpp:124] Setting up relu2
I0428 19:47:57.456799 26362 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:57.456825 26362 net.cpp:139] Memory required for data: 1181440
I0428 19:47:57.456827 26362 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:57.456849 26362 net.cpp:86] Creating Layer ip3
I0428 19:47:57.456853 26362 net.cpp:408] ip3 <- ip2
I0428 19:47:57.456858 26362 net.cpp:382] ip3 -> ip3
I0428 19:47:57.456985 26362 net.cpp:124] Setting up ip3
I0428 19:47:57.456995 26362 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:57.457005 26362 net.cpp:139] Memory required for data: 1184000
I0428 19:47:57.457028 26362 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:57.457034 26362 net.cpp:86] Creating Layer relu3
I0428 19:47:57.457037 26362 net.cpp:408] relu3 <- ip3
I0428 19:47:57.457042 26362 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:57.457248 26362 net.cpp:124] Setting up relu3
I0428 19:47:57.457257 26362 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:57.457260 26362 net.cpp:139] Memory required for data: 1186560
I0428 19:47:57.457263 26362 layer_factory.hpp:77] Creating layer loss
I0428 19:47:57.457268 26362 net.cpp:86] Creating Layer loss
I0428 19:47:57.457271 26362 net.cpp:408] loss <- ip3
I0428 19:47:57.457275 26362 net.cpp:408] loss <- label
I0428 19:47:57.457281 26362 net.cpp:382] loss -> loss
I0428 19:47:57.457298 26362 layer_factory.hpp:77] Creating layer loss
I0428 19:47:57.457540 26362 net.cpp:124] Setting up loss
I0428 19:47:57.457548 26362 net.cpp:131] Top shape: (1)
I0428 19:47:57.457551 26362 net.cpp:134]     with loss weight 1
I0428 19:47:57.457564 26362 net.cpp:139] Memory required for data: 1186564
I0428 19:47:57.457567 26362 net.cpp:200] loss needs backward computation.
I0428 19:47:57.457571 26362 net.cpp:200] relu3 needs backward computation.
I0428 19:47:57.457573 26362 net.cpp:200] ip3 needs backward computation.
I0428 19:47:57.457576 26362 net.cpp:200] relu2 needs backward computation.
I0428 19:47:57.457579 26362 net.cpp:200] ip2 needs backward computation.
I0428 19:47:57.457581 26362 net.cpp:200] relu1 needs backward computation.
I0428 19:47:57.457584 26362 net.cpp:200] ip1 needs backward computation.
I0428 19:47:57.457587 26362 net.cpp:200] pool1 needs backward computation.
I0428 19:47:57.457589 26362 net.cpp:200] conv1 needs backward computation.
I0428 19:47:57.457592 26362 net.cpp:200] pool0 needs backward computation.
I0428 19:47:57.457595 26362 net.cpp:200] conv0 needs backward computation.
I0428 19:47:57.457598 26362 net.cpp:202] mnist does not need backward computation.
I0428 19:47:57.457602 26362 net.cpp:244] This network produces output loss
I0428 19:47:57.457609 26362 net.cpp:257] Network initialization done.
I0428 19:47:57.457978 26362 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test530.prototxt
I0428 19:47:57.458020 26362 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:57.458125 26362 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:57.458204 26362 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:57.458246 26362 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:57.458257 26362 net.cpp:86] Creating Layer mnist
I0428 19:47:57.458262 26362 net.cpp:382] mnist -> data
I0428 19:47:57.458269 26362 net.cpp:382] mnist -> label
I0428 19:47:57.458350 26362 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:57.460445 26362 net.cpp:124] Setting up mnist
I0428 19:47:57.460474 26362 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:57.460479 26362 net.cpp:131] Top shape: 100 (100)
I0428 19:47:57.460482 26362 net.cpp:139] Memory required for data: 314000
I0428 19:47:57.460486 26362 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:57.460492 26362 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:57.460495 26362 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:57.460500 26362 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:57.460506 26362 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:57.460541 26362 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:57.460546 26362 net.cpp:131] Top shape: 100 (100)
I0428 19:47:57.460549 26362 net.cpp:131] Top shape: 100 (100)
I0428 19:47:57.460552 26362 net.cpp:139] Memory required for data: 314800
I0428 19:47:57.460554 26362 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:57.460562 26362 net.cpp:86] Creating Layer conv0
I0428 19:47:57.460566 26362 net.cpp:408] conv0 <- data
I0428 19:47:57.460569 26362 net.cpp:382] conv0 -> conv0
I0428 19:47:57.462314 26362 net.cpp:124] Setting up conv0
I0428 19:47:57.462328 26362 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:57.462332 26362 net.cpp:139] Memory required for data: 1466800
I0428 19:47:57.462342 26362 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:57.462347 26362 net.cpp:86] Creating Layer pool0
I0428 19:47:57.462352 26362 net.cpp:408] pool0 <- conv0
I0428 19:47:57.462355 26362 net.cpp:382] pool0 -> pool0
I0428 19:47:57.462397 26362 net.cpp:124] Setting up pool0
I0428 19:47:57.462404 26362 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:57.462406 26362 net.cpp:139] Memory required for data: 1754800
I0428 19:47:57.462409 26362 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:57.462417 26362 net.cpp:86] Creating Layer conv1
I0428 19:47:57.462420 26362 net.cpp:408] conv1 <- pool0
I0428 19:47:57.462425 26362 net.cpp:382] conv1 -> conv1
I0428 19:47:57.464584 26362 net.cpp:124] Setting up conv1
I0428 19:47:57.464597 26362 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:57.464601 26362 net.cpp:139] Memory required for data: 1806000
I0428 19:47:57.464609 26362 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:57.464632 26362 net.cpp:86] Creating Layer pool1
I0428 19:47:57.464637 26362 net.cpp:408] pool1 <- conv1
I0428 19:47:57.464649 26362 net.cpp:382] pool1 -> pool1
I0428 19:47:57.464689 26362 net.cpp:124] Setting up pool1
I0428 19:47:57.464694 26362 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:57.464697 26362 net.cpp:139] Memory required for data: 1818800
I0428 19:47:57.464700 26362 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:57.464705 26362 net.cpp:86] Creating Layer ip1
I0428 19:47:57.464709 26362 net.cpp:408] ip1 <- pool1
I0428 19:47:57.464715 26362 net.cpp:382] ip1 -> ip1
I0428 19:47:57.464855 26362 net.cpp:124] Setting up ip1
I0428 19:47:57.464864 26362 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:57.464895 26362 net.cpp:139] Memory required for data: 1828800
I0428 19:47:57.464902 26362 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:57.464910 26362 net.cpp:86] Creating Layer relu1
I0428 19:47:57.464913 26362 net.cpp:408] relu1 <- ip1
I0428 19:47:57.464917 26362 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:57.465222 26362 net.cpp:124] Setting up relu1
I0428 19:47:57.465232 26362 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:57.465241 26362 net.cpp:139] Memory required for data: 1838800
I0428 19:47:57.465245 26362 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:57.465252 26362 net.cpp:86] Creating Layer ip2
I0428 19:47:57.465255 26362 net.cpp:408] ip2 <- ip1
I0428 19:47:57.465260 26362 net.cpp:382] ip2 -> ip2
I0428 19:47:57.465373 26362 net.cpp:124] Setting up ip2
I0428 19:47:57.465379 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.465382 26362 net.cpp:139] Memory required for data: 1842800
I0428 19:47:57.465387 26362 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:57.465391 26362 net.cpp:86] Creating Layer relu2
I0428 19:47:57.465394 26362 net.cpp:408] relu2 <- ip2
I0428 19:47:57.465399 26362 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:57.465559 26362 net.cpp:124] Setting up relu2
I0428 19:47:57.465566 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.465569 26362 net.cpp:139] Memory required for data: 1846800
I0428 19:47:57.465572 26362 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:57.465595 26362 net.cpp:86] Creating Layer ip3
I0428 19:47:57.465597 26362 net.cpp:408] ip3 <- ip2
I0428 19:47:57.465602 26362 net.cpp:382] ip3 -> ip3
I0428 19:47:57.465718 26362 net.cpp:124] Setting up ip3
I0428 19:47:57.465725 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.465728 26362 net.cpp:139] Memory required for data: 1850800
I0428 19:47:57.465736 26362 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:57.465740 26362 net.cpp:86] Creating Layer relu3
I0428 19:47:57.465744 26362 net.cpp:408] relu3 <- ip3
I0428 19:47:57.465747 26362 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:57.466533 26362 net.cpp:124] Setting up relu3
I0428 19:47:57.466545 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.466548 26362 net.cpp:139] Memory required for data: 1854800
I0428 19:47:57.466552 26362 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:57.466557 26362 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:57.466562 26362 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:57.466567 26362 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:57.466572 26362 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:57.466614 26362 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:57.466619 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.466622 26362 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:57.466625 26362 net.cpp:139] Memory required for data: 1862800
I0428 19:47:57.466627 26362 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:57.466634 26362 net.cpp:86] Creating Layer accuracy
I0428 19:47:57.466636 26362 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:57.466640 26362 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:57.466645 26362 net.cpp:382] accuracy -> accuracy
I0428 19:47:57.466650 26362 net.cpp:124] Setting up accuracy
I0428 19:47:57.466655 26362 net.cpp:131] Top shape: (1)
I0428 19:47:57.466657 26362 net.cpp:139] Memory required for data: 1862804
I0428 19:47:57.466660 26362 layer_factory.hpp:77] Creating layer loss
I0428 19:47:57.466665 26362 net.cpp:86] Creating Layer loss
I0428 19:47:57.466668 26362 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:57.466672 26362 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:57.466675 26362 net.cpp:382] loss -> loss
I0428 19:47:57.466681 26362 layer_factory.hpp:77] Creating layer loss
I0428 19:47:57.466969 26362 net.cpp:124] Setting up loss
I0428 19:47:57.466979 26362 net.cpp:131] Top shape: (1)
I0428 19:47:57.466981 26362 net.cpp:134]     with loss weight 1
I0428 19:47:57.466987 26362 net.cpp:139] Memory required for data: 1862808
I0428 19:47:57.467000 26362 net.cpp:200] loss needs backward computation.
I0428 19:47:57.467005 26362 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:57.467007 26362 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:57.467010 26362 net.cpp:200] relu3 needs backward computation.
I0428 19:47:57.467013 26362 net.cpp:200] ip3 needs backward computation.
I0428 19:47:57.467016 26362 net.cpp:200] relu2 needs backward computation.
I0428 19:47:57.467020 26362 net.cpp:200] ip2 needs backward computation.
I0428 19:47:57.467022 26362 net.cpp:200] relu1 needs backward computation.
I0428 19:47:57.467047 26362 net.cpp:200] ip1 needs backward computation.
I0428 19:47:57.467051 26362 net.cpp:200] pool1 needs backward computation.
I0428 19:47:57.467053 26362 net.cpp:200] conv1 needs backward computation.
I0428 19:47:57.467056 26362 net.cpp:200] pool0 needs backward computation.
I0428 19:47:57.467059 26362 net.cpp:200] conv0 needs backward computation.
I0428 19:47:57.467062 26362 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:57.467067 26362 net.cpp:202] mnist does not need backward computation.
I0428 19:47:57.467068 26362 net.cpp:244] This network produces output accuracy
I0428 19:47:57.467072 26362 net.cpp:244] This network produces output loss
I0428 19:47:57.467083 26362 net.cpp:257] Network initialization done.
I0428 19:47:57.467123 26362 solver.cpp:56] Solver scaffolding done.
I0428 19:47:57.467447 26362 caffe.cpp:248] Starting Optimization
I0428 19:47:57.467453 26362 solver.cpp:273] Solving LeNet
I0428 19:47:57.467456 26362 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:57.468230 26362 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:57.471835 26362 blocking_queue.cpp:49] Waiting for data
I0428 19:47:57.542650 26369 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:57.543182 26362 solver.cpp:398]     Test net output #0: accuracy = 0.1156
I0428 19:47:57.543205 26362 solver.cpp:398]     Test net output #1: loss = 2.2951 (* 1 = 2.2951 loss)
I0428 19:47:57.544898 26362 solver.cpp:219] Iteration 0 (-1.08871e-30 iter/s, 0.0774165s/100 iters), loss = 2.29139
I0428 19:47:57.544951 26362 solver.cpp:238]     Train net output #0: loss = 2.29139 (* 1 = 2.29139 loss)
I0428 19:47:57.544980 26362 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:57.614925 26362 solver.cpp:219] Iteration 100 (1428.98 iter/s, 0.0699802s/100 iters), loss = 1.14974
I0428 19:47:57.614964 26362 solver.cpp:238]     Train net output #0: loss = 1.14974 (* 1 = 1.14974 loss)
I0428 19:47:57.614990 26362 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:57.689323 26362 solver.cpp:219] Iteration 200 (1345 iter/s, 0.0743496s/100 iters), loss = 0.788803
I0428 19:47:57.689347 26362 solver.cpp:238]     Train net output #0: loss = 0.788803 (* 1 = 0.788803 loss)
I0428 19:47:57.689368 26362 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:57.759317 26362 solver.cpp:219] Iteration 300 (1429.33 iter/s, 0.0699628s/100 iters), loss = 0.384644
I0428 19:47:57.759341 26362 solver.cpp:238]     Train net output #0: loss = 0.384644 (* 1 = 0.384644 loss)
I0428 19:47:57.759347 26362 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:57.832386 26362 solver.cpp:219] Iteration 400 (1369.29 iter/s, 0.0730307s/100 iters), loss = 0.476813
I0428 19:47:57.832453 26362 solver.cpp:238]     Train net output #0: loss = 0.476813 (* 1 = 0.476813 loss)
I0428 19:47:57.832470 26362 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:57.920778 26362 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:57.999012 26369 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:57.999667 26362 solver.cpp:398]     Test net output #0: accuracy = 0.9124
I0428 19:47:57.999694 26362 solver.cpp:398]     Test net output #1: loss = 0.280676 (* 1 = 0.280676 loss)
I0428 19:47:58.000727 26362 solver.cpp:219] Iteration 500 (594.262 iter/s, 0.168276s/100 iters), loss = 0.244612
I0428 19:47:58.000762 26362 solver.cpp:238]     Train net output #0: loss = 0.244612 (* 1 = 0.244612 loss)
I0428 19:47:58.000793 26362 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:58.075341 26362 solver.cpp:219] Iteration 600 (1340.97 iter/s, 0.0745728s/100 iters), loss = 0.174925
I0428 19:47:58.075371 26362 solver.cpp:238]     Train net output #0: loss = 0.174925 (* 1 = 0.174925 loss)
I0428 19:47:58.075378 26362 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:58.147557 26362 solver.cpp:219] Iteration 700 (1385.47 iter/s, 0.0721777s/100 iters), loss = 0.267796
I0428 19:47:58.147586 26362 solver.cpp:238]     Train net output #0: loss = 0.267796 (* 1 = 0.267796 loss)
I0428 19:47:58.147594 26362 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:58.220048 26362 solver.cpp:219] Iteration 800 (1380.22 iter/s, 0.0724521s/100 iters), loss = 0.346081
I0428 19:47:58.220078 26362 solver.cpp:238]     Train net output #0: loss = 0.346081 (* 1 = 0.346081 loss)
I0428 19:47:58.220085 26362 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:58.292881 26362 solver.cpp:219] Iteration 900 (1373.76 iter/s, 0.0727932s/100 iters), loss = 0.36927
I0428 19:47:58.292912 26362 solver.cpp:238]     Train net output #0: loss = 0.36927 (* 1 = 0.36927 loss)
I0428 19:47:58.292918 26362 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:58.317276 26368 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:58.367349 26362 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:58.368017 26362 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:58.368449 26362 solver.cpp:311] Iteration 1000, loss = 0.218879
I0428 19:47:58.368468 26362 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:58.445945 26369 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:58.446604 26362 solver.cpp:398]     Test net output #0: accuracy = 0.9404
I0428 19:47:58.446631 26362 solver.cpp:398]     Test net output #1: loss = 0.186976 (* 1 = 0.186976 loss)
I0428 19:47:58.446640 26362 solver.cpp:316] Optimization Done.
I0428 19:47:58.446645 26362 caffe.cpp:259] Optimization Done.
