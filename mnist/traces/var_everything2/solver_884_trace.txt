I0428 20:00:44.045519 29543 caffe.cpp:218] Using GPUs 0
I0428 20:00:44.081436 29543 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:44.593323 29543 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test884.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:44.593466 29543 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test884.prototxt
I0428 20:00:44.593878 29543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:44.593899 29543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:44.594002 29543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:44.594079 29543 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:44.594184 29543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:44.594210 29543 net.cpp:86] Creating Layer mnist
I0428 20:00:44.594218 29543 net.cpp:382] mnist -> data
I0428 20:00:44.594240 29543 net.cpp:382] mnist -> label
I0428 20:00:44.595306 29543 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:44.597683 29543 net.cpp:124] Setting up mnist
I0428 20:00:44.597702 29543 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:44.597708 29543 net.cpp:131] Top shape: 64 (64)
I0428 20:00:44.597712 29543 net.cpp:139] Memory required for data: 200960
I0428 20:00:44.597719 29543 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:44.597734 29543 net.cpp:86] Creating Layer conv0
I0428 20:00:44.597754 29543 net.cpp:408] conv0 <- data
I0428 20:00:44.597767 29543 net.cpp:382] conv0 -> conv0
I0428 20:00:44.884013 29543 net.cpp:124] Setting up conv0
I0428 20:00:44.884045 29543 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:44.884050 29543 net.cpp:139] Memory required for data: 1675520
I0428 20:00:44.884068 29543 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:44.884084 29543 net.cpp:86] Creating Layer pool0
I0428 20:00:44.884088 29543 net.cpp:408] pool0 <- conv0
I0428 20:00:44.884095 29543 net.cpp:382] pool0 -> pool0
I0428 20:00:44.884151 29543 net.cpp:124] Setting up pool0
I0428 20:00:44.884158 29543 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:44.884162 29543 net.cpp:139] Memory required for data: 2044160
I0428 20:00:44.884166 29543 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:44.884179 29543 net.cpp:86] Creating Layer conv1
I0428 20:00:44.884183 29543 net.cpp:408] conv1 <- pool0
I0428 20:00:44.884189 29543 net.cpp:382] conv1 -> conv1
I0428 20:00:44.887398 29543 net.cpp:124] Setting up conv1
I0428 20:00:44.887416 29543 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:44.887421 29543 net.cpp:139] Memory required for data: 2453760
I0428 20:00:44.887431 29543 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:44.887442 29543 net.cpp:86] Creating Layer pool1
I0428 20:00:44.887446 29543 net.cpp:408] pool1 <- conv1
I0428 20:00:44.887452 29543 net.cpp:382] pool1 -> pool1
I0428 20:00:44.887503 29543 net.cpp:124] Setting up pool1
I0428 20:00:44.887512 29543 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:44.887516 29543 net.cpp:139] Memory required for data: 2556160
I0428 20:00:44.887519 29543 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:44.887527 29543 net.cpp:86] Creating Layer ip1
I0428 20:00:44.887531 29543 net.cpp:408] ip1 <- pool1
I0428 20:00:44.887538 29543 net.cpp:382] ip1 -> ip1
I0428 20:00:44.887725 29543 net.cpp:124] Setting up ip1
I0428 20:00:44.887735 29543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:44.887739 29543 net.cpp:139] Memory required for data: 2562560
I0428 20:00:44.887748 29543 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:44.887755 29543 net.cpp:86] Creating Layer relu1
I0428 20:00:44.887759 29543 net.cpp:408] relu1 <- ip1
I0428 20:00:44.887766 29543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:44.887969 29543 net.cpp:124] Setting up relu1
I0428 20:00:44.887980 29543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:44.887984 29543 net.cpp:139] Memory required for data: 2568960
I0428 20:00:44.887989 29543 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:44.887996 29543 net.cpp:86] Creating Layer ip2
I0428 20:00:44.888000 29543 net.cpp:408] ip2 <- ip1
I0428 20:00:44.888005 29543 net.cpp:382] ip2 -> ip2
I0428 20:00:44.888128 29543 net.cpp:124] Setting up ip2
I0428 20:00:44.888137 29543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:44.888140 29543 net.cpp:139] Memory required for data: 2575360
I0428 20:00:44.888147 29543 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:44.888154 29543 net.cpp:86] Creating Layer relu2
I0428 20:00:44.888159 29543 net.cpp:408] relu2 <- ip2
I0428 20:00:44.888164 29543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:44.889024 29543 net.cpp:124] Setting up relu2
I0428 20:00:44.889039 29543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:44.889044 29543 net.cpp:139] Memory required for data: 2581760
I0428 20:00:44.889047 29543 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:44.889057 29543 net.cpp:86] Creating Layer ip3
I0428 20:00:44.889061 29543 net.cpp:408] ip3 <- ip2
I0428 20:00:44.889067 29543 net.cpp:382] ip3 -> ip3
I0428 20:00:44.889197 29543 net.cpp:124] Setting up ip3
I0428 20:00:44.889206 29543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:44.889210 29543 net.cpp:139] Memory required for data: 2584320
I0428 20:00:44.889219 29543 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:44.889227 29543 net.cpp:86] Creating Layer relu3
I0428 20:00:44.889230 29543 net.cpp:408] relu3 <- ip3
I0428 20:00:44.889235 29543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:44.889446 29543 net.cpp:124] Setting up relu3
I0428 20:00:44.889457 29543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:44.889461 29543 net.cpp:139] Memory required for data: 2586880
I0428 20:00:44.889466 29543 layer_factory.hpp:77] Creating layer loss
I0428 20:00:44.889473 29543 net.cpp:86] Creating Layer loss
I0428 20:00:44.889477 29543 net.cpp:408] loss <- ip3
I0428 20:00:44.889482 29543 net.cpp:408] loss <- label
I0428 20:00:44.889489 29543 net.cpp:382] loss -> loss
I0428 20:00:44.889509 29543 layer_factory.hpp:77] Creating layer loss
I0428 20:00:44.889797 29543 net.cpp:124] Setting up loss
I0428 20:00:44.889808 29543 net.cpp:131] Top shape: (1)
I0428 20:00:44.889812 29543 net.cpp:134]     with loss weight 1
I0428 20:00:44.889829 29543 net.cpp:139] Memory required for data: 2586884
I0428 20:00:44.889833 29543 net.cpp:200] loss needs backward computation.
I0428 20:00:44.889837 29543 net.cpp:200] relu3 needs backward computation.
I0428 20:00:44.889840 29543 net.cpp:200] ip3 needs backward computation.
I0428 20:00:44.889844 29543 net.cpp:200] relu2 needs backward computation.
I0428 20:00:44.889847 29543 net.cpp:200] ip2 needs backward computation.
I0428 20:00:44.889850 29543 net.cpp:200] relu1 needs backward computation.
I0428 20:00:44.889853 29543 net.cpp:200] ip1 needs backward computation.
I0428 20:00:44.889858 29543 net.cpp:200] pool1 needs backward computation.
I0428 20:00:44.889860 29543 net.cpp:200] conv1 needs backward computation.
I0428 20:00:44.889864 29543 net.cpp:200] pool0 needs backward computation.
I0428 20:00:44.889868 29543 net.cpp:200] conv0 needs backward computation.
I0428 20:00:44.889871 29543 net.cpp:202] mnist does not need backward computation.
I0428 20:00:44.889875 29543 net.cpp:244] This network produces output loss
I0428 20:00:44.889888 29543 net.cpp:257] Network initialization done.
I0428 20:00:44.890274 29543 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test884.prototxt
I0428 20:00:44.890306 29543 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:44.890419 29543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:44.890521 29543 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:44.890571 29543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:44.890588 29543 net.cpp:86] Creating Layer mnist
I0428 20:00:44.890594 29543 net.cpp:382] mnist -> data
I0428 20:00:44.890604 29543 net.cpp:382] mnist -> label
I0428 20:00:44.890707 29543 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:44.892910 29543 net.cpp:124] Setting up mnist
I0428 20:00:44.892926 29543 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:44.892932 29543 net.cpp:131] Top shape: 100 (100)
I0428 20:00:44.892936 29543 net.cpp:139] Memory required for data: 314000
I0428 20:00:44.892940 29543 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:44.892948 29543 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:44.892952 29543 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:44.892982 29543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:44.892990 29543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:44.893045 29543 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:44.893054 29543 net.cpp:131] Top shape: 100 (100)
I0428 20:00:44.893059 29543 net.cpp:131] Top shape: 100 (100)
I0428 20:00:44.893062 29543 net.cpp:139] Memory required for data: 314800
I0428 20:00:44.893066 29543 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:44.893077 29543 net.cpp:86] Creating Layer conv0
I0428 20:00:44.893081 29543 net.cpp:408] conv0 <- data
I0428 20:00:44.893087 29543 net.cpp:382] conv0 -> conv0
I0428 20:00:44.895069 29543 net.cpp:124] Setting up conv0
I0428 20:00:44.895087 29543 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:44.895092 29543 net.cpp:139] Memory required for data: 2618800
I0428 20:00:44.895102 29543 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:44.895112 29543 net.cpp:86] Creating Layer pool0
I0428 20:00:44.895115 29543 net.cpp:408] pool0 <- conv0
I0428 20:00:44.895122 29543 net.cpp:382] pool0 -> pool0
I0428 20:00:44.895169 29543 net.cpp:124] Setting up pool0
I0428 20:00:44.895175 29543 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:44.895179 29543 net.cpp:139] Memory required for data: 3194800
I0428 20:00:44.895182 29543 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:44.895193 29543 net.cpp:86] Creating Layer conv1
I0428 20:00:44.895197 29543 net.cpp:408] conv1 <- pool0
I0428 20:00:44.895205 29543 net.cpp:382] conv1 -> conv1
I0428 20:00:44.897588 29543 net.cpp:124] Setting up conv1
I0428 20:00:44.897603 29543 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:44.897608 29543 net.cpp:139] Memory required for data: 3834800
I0428 20:00:44.897620 29543 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:44.897627 29543 net.cpp:86] Creating Layer pool1
I0428 20:00:44.897631 29543 net.cpp:408] pool1 <- conv1
I0428 20:00:44.897637 29543 net.cpp:382] pool1 -> pool1
I0428 20:00:44.897692 29543 net.cpp:124] Setting up pool1
I0428 20:00:44.897699 29543 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:44.897702 29543 net.cpp:139] Memory required for data: 3994800
I0428 20:00:44.897706 29543 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:44.897714 29543 net.cpp:86] Creating Layer ip1
I0428 20:00:44.897718 29543 net.cpp:408] ip1 <- pool1
I0428 20:00:44.897723 29543 net.cpp:382] ip1 -> ip1
I0428 20:00:44.897935 29543 net.cpp:124] Setting up ip1
I0428 20:00:44.897946 29543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:44.897961 29543 net.cpp:139] Memory required for data: 4004800
I0428 20:00:44.897971 29543 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:44.897979 29543 net.cpp:86] Creating Layer relu1
I0428 20:00:44.897985 29543 net.cpp:408] relu1 <- ip1
I0428 20:00:44.897990 29543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:44.898195 29543 net.cpp:124] Setting up relu1
I0428 20:00:44.898210 29543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:44.898217 29543 net.cpp:139] Memory required for data: 4014800
I0428 20:00:44.898222 29543 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:44.898231 29543 net.cpp:86] Creating Layer ip2
I0428 20:00:44.898234 29543 net.cpp:408] ip2 <- ip1
I0428 20:00:44.898241 29543 net.cpp:382] ip2 -> ip2
I0428 20:00:44.898367 29543 net.cpp:124] Setting up ip2
I0428 20:00:44.898377 29543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:44.898381 29543 net.cpp:139] Memory required for data: 4024800
I0428 20:00:44.898388 29543 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:44.898396 29543 net.cpp:86] Creating Layer relu2
I0428 20:00:44.898399 29543 net.cpp:408] relu2 <- ip2
I0428 20:00:44.898404 29543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:44.898619 29543 net.cpp:124] Setting up relu2
I0428 20:00:44.898632 29543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:44.898634 29543 net.cpp:139] Memory required for data: 4034800
I0428 20:00:44.898638 29543 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:44.898646 29543 net.cpp:86] Creating Layer ip3
I0428 20:00:44.898650 29543 net.cpp:408] ip3 <- ip2
I0428 20:00:44.898656 29543 net.cpp:382] ip3 -> ip3
I0428 20:00:44.898795 29543 net.cpp:124] Setting up ip3
I0428 20:00:44.898805 29543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:44.898808 29543 net.cpp:139] Memory required for data: 4038800
I0428 20:00:44.898818 29543 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:44.898824 29543 net.cpp:86] Creating Layer relu3
I0428 20:00:44.898828 29543 net.cpp:408] relu3 <- ip3
I0428 20:00:44.898834 29543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:44.899757 29543 net.cpp:124] Setting up relu3
I0428 20:00:44.899772 29543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:44.899776 29543 net.cpp:139] Memory required for data: 4042800
I0428 20:00:44.899780 29543 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:44.899787 29543 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:44.899791 29543 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:44.899798 29543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:44.899806 29543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:44.899857 29543 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:44.899868 29543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:44.899873 29543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:44.899875 29543 net.cpp:139] Memory required for data: 4050800
I0428 20:00:44.899879 29543 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:44.899889 29543 net.cpp:86] Creating Layer accuracy
I0428 20:00:44.899893 29543 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:44.899899 29543 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:44.899909 29543 net.cpp:382] accuracy -> accuracy
I0428 20:00:44.899917 29543 net.cpp:124] Setting up accuracy
I0428 20:00:44.899922 29543 net.cpp:131] Top shape: (1)
I0428 20:00:44.899925 29543 net.cpp:139] Memory required for data: 4050804
I0428 20:00:44.899930 29543 layer_factory.hpp:77] Creating layer loss
I0428 20:00:44.899936 29543 net.cpp:86] Creating Layer loss
I0428 20:00:44.899940 29543 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:44.899945 29543 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:44.899950 29543 net.cpp:382] loss -> loss
I0428 20:00:44.899956 29543 layer_factory.hpp:77] Creating layer loss
I0428 20:00:44.900243 29543 net.cpp:124] Setting up loss
I0428 20:00:44.900254 29543 net.cpp:131] Top shape: (1)
I0428 20:00:44.900259 29543 net.cpp:134]     with loss weight 1
I0428 20:00:44.900277 29543 net.cpp:139] Memory required for data: 4050808
I0428 20:00:44.900282 29543 net.cpp:200] loss needs backward computation.
I0428 20:00:44.900287 29543 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:44.900292 29543 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:44.900297 29543 net.cpp:200] relu3 needs backward computation.
I0428 20:00:44.900301 29543 net.cpp:200] ip3 needs backward computation.
I0428 20:00:44.900305 29543 net.cpp:200] relu2 needs backward computation.
I0428 20:00:44.900308 29543 net.cpp:200] ip2 needs backward computation.
I0428 20:00:44.900312 29543 net.cpp:200] relu1 needs backward computation.
I0428 20:00:44.900315 29543 net.cpp:200] ip1 needs backward computation.
I0428 20:00:44.900319 29543 net.cpp:200] pool1 needs backward computation.
I0428 20:00:44.900322 29543 net.cpp:200] conv1 needs backward computation.
I0428 20:00:44.900326 29543 net.cpp:200] pool0 needs backward computation.
I0428 20:00:44.900329 29543 net.cpp:200] conv0 needs backward computation.
I0428 20:00:44.900336 29543 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:44.900341 29543 net.cpp:202] mnist does not need backward computation.
I0428 20:00:44.900343 29543 net.cpp:244] This network produces output accuracy
I0428 20:00:44.900347 29543 net.cpp:244] This network produces output loss
I0428 20:00:44.900362 29543 net.cpp:257] Network initialization done.
I0428 20:00:44.900411 29543 solver.cpp:56] Solver scaffolding done.
I0428 20:00:44.900854 29543 caffe.cpp:248] Starting Optimization
I0428 20:00:44.900863 29543 solver.cpp:273] Solving LeNet
I0428 20:00:44.900866 29543 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:44.901754 29543 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:44.906162 29543 blocking_queue.cpp:49] Waiting for data
I0428 20:00:44.972946 29550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:44.973605 29543 solver.cpp:398]     Test net output #0: accuracy = 0.0774
I0428 20:00:44.973636 29543 solver.cpp:398]     Test net output #1: loss = 2.33242 (* 1 = 2.33242 loss)
I0428 20:00:44.977180 29543 solver.cpp:219] Iteration 0 (2.98459 iter/s, 0.0762747s/100 iters), loss = 2.33203
I0428 20:00:44.977221 29543 solver.cpp:238]     Train net output #0: loss = 2.33203 (* 1 = 2.33203 loss)
I0428 20:00:44.977238 29543 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:45.077584 29543 solver.cpp:219] Iteration 100 (996.482 iter/s, 0.100353s/100 iters), loss = 0.851576
I0428 20:00:45.077617 29543 solver.cpp:238]     Train net output #0: loss = 0.851576 (* 1 = 0.851576 loss)
I0428 20:00:45.077625 29543 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:45.169778 29543 solver.cpp:219] Iteration 200 (1085.18 iter/s, 0.0921509s/100 iters), loss = 0.573552
I0428 20:00:45.169807 29543 solver.cpp:238]     Train net output #0: loss = 0.573552 (* 1 = 0.573552 loss)
I0428 20:00:45.169814 29543 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:45.259865 29543 solver.cpp:219] Iteration 300 (1110.51 iter/s, 0.0900485s/100 iters), loss = 0.27376
I0428 20:00:45.259894 29543 solver.cpp:238]     Train net output #0: loss = 0.27376 (* 1 = 0.27376 loss)
I0428 20:00:45.259902 29543 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:45.350893 29543 solver.cpp:219] Iteration 400 (1099.04 iter/s, 0.0909885s/100 iters), loss = 0.342074
I0428 20:00:45.350934 29543 solver.cpp:238]     Train net output #0: loss = 0.342074 (* 1 = 0.342074 loss)
I0428 20:00:45.350941 29543 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:45.441871 29543 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:45.494877 29550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:45.495420 29543 solver.cpp:398]     Test net output #0: accuracy = 0.8681
I0428 20:00:45.495447 29543 solver.cpp:398]     Test net output #1: loss = 0.375885 (* 1 = 0.375885 loss)
I0428 20:00:45.496350 29543 solver.cpp:219] Iteration 500 (687.695 iter/s, 0.145413s/100 iters), loss = 0.494347
I0428 20:00:45.496400 29543 solver.cpp:238]     Train net output #0: loss = 0.494347 (* 1 = 0.494347 loss)
I0428 20:00:45.496412 29543 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:45.588275 29543 solver.cpp:219] Iteration 600 (1088.54 iter/s, 0.0918659s/100 iters), loss = 0.13325
I0428 20:00:45.588306 29543 solver.cpp:238]     Train net output #0: loss = 0.13325 (* 1 = 0.13325 loss)
I0428 20:00:45.588315 29543 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:45.680555 29543 solver.cpp:219] Iteration 700 (1084.13 iter/s, 0.0922399s/100 iters), loss = 0.172557
I0428 20:00:45.680586 29543 solver.cpp:238]     Train net output #0: loss = 0.172557 (* 1 = 0.172557 loss)
I0428 20:00:45.680593 29543 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:45.771764 29543 solver.cpp:219] Iteration 800 (1096.87 iter/s, 0.0911687s/100 iters), loss = 0.326551
I0428 20:00:45.771793 29543 solver.cpp:238]     Train net output #0: loss = 0.326551 (* 1 = 0.326551 loss)
I0428 20:00:45.771800 29543 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:45.860546 29543 solver.cpp:219] Iteration 900 (1126.83 iter/s, 0.0887449s/100 iters), loss = 0.247218
I0428 20:00:45.860581 29543 solver.cpp:238]     Train net output #0: loss = 0.247218 (* 1 = 0.247218 loss)
I0428 20:00:45.860587 29543 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:45.889710 29549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:45.946586 29543 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:45.947631 29543 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:45.948282 29543 solver.cpp:311] Iteration 1000, loss = 0.165193
I0428 20:00:45.948295 29543 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:45.995625 29550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:45.996330 29543 solver.cpp:398]     Test net output #0: accuracy = 0.9725
I0428 20:00:45.996348 29543 solver.cpp:398]     Test net output #1: loss = 0.0864354 (* 1 = 0.0864354 loss)
I0428 20:00:45.996369 29543 solver.cpp:316] Optimization Done.
I0428 20:00:45.996372 29543 caffe.cpp:259] Optimization Done.
