I0428 19:31:54.990463 22708 caffe.cpp:218] Using GPUs 0
I0428 19:31:55.031613 22708 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:55.498661 22708 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test137.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:55.498819 22708 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test137.prototxt
I0428 19:31:55.499125 22708 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:55.499145 22708 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:55.499228 22708 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:55.499316 22708 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:55.499424 22708 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:55.499452 22708 net.cpp:86] Creating Layer mnist
I0428 19:31:55.499465 22708 net.cpp:382] mnist -> data
I0428 19:31:55.499491 22708 net.cpp:382] mnist -> label
I0428 19:31:55.500497 22708 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:55.502950 22708 net.cpp:124] Setting up mnist
I0428 19:31:55.502998 22708 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:55.503010 22708 net.cpp:131] Top shape: 64 (64)
I0428 19:31:55.503016 22708 net.cpp:139] Memory required for data: 200960
I0428 19:31:55.503033 22708 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:55.503059 22708 net.cpp:86] Creating Layer conv0
I0428 19:31:55.503067 22708 net.cpp:408] conv0 <- data
I0428 19:31:55.503084 22708 net.cpp:382] conv0 -> conv0
I0428 19:31:55.732851 22708 net.cpp:124] Setting up conv0
I0428 19:31:55.732880 22708 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:55.732887 22708 net.cpp:139] Memory required for data: 1675520
I0428 19:31:55.732923 22708 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:55.732940 22708 net.cpp:86] Creating Layer pool0
I0428 19:31:55.732964 22708 net.cpp:408] pool0 <- conv0
I0428 19:31:55.732975 22708 net.cpp:382] pool0 -> pool0
I0428 19:31:55.733029 22708 net.cpp:124] Setting up pool0
I0428 19:31:55.733039 22708 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:55.733047 22708 net.cpp:139] Memory required for data: 2044160
I0428 19:31:55.733052 22708 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:55.733064 22708 net.cpp:86] Creating Layer ip1
I0428 19:31:55.733072 22708 net.cpp:408] ip1 <- pool0
I0428 19:31:55.733081 22708 net.cpp:382] ip1 -> ip1
I0428 19:31:55.734076 22708 net.cpp:124] Setting up ip1
I0428 19:31:55.734091 22708 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:55.734097 22708 net.cpp:139] Memory required for data: 2046720
I0428 19:31:55.734109 22708 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:55.734127 22708 net.cpp:86] Creating Layer relu1
I0428 19:31:55.734135 22708 net.cpp:408] relu1 <- ip1
I0428 19:31:55.734143 22708 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:55.734300 22708 net.cpp:124] Setting up relu1
I0428 19:31:55.734311 22708 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:55.734318 22708 net.cpp:139] Memory required for data: 2049280
I0428 19:31:55.734323 22708 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:55.734333 22708 net.cpp:86] Creating Layer ip2
I0428 19:31:55.734339 22708 net.cpp:408] ip2 <- ip1
I0428 19:31:55.734349 22708 net.cpp:382] ip2 -> ip2
I0428 19:31:55.734462 22708 net.cpp:124] Setting up ip2
I0428 19:31:55.734472 22708 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:55.734478 22708 net.cpp:139] Memory required for data: 2062080
I0428 19:31:55.734491 22708 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:55.734501 22708 net.cpp:86] Creating Layer relu2
I0428 19:31:55.734508 22708 net.cpp:408] relu2 <- ip2
I0428 19:31:55.734515 22708 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:55.735231 22708 net.cpp:124] Setting up relu2
I0428 19:31:55.735245 22708 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:55.735251 22708 net.cpp:139] Memory required for data: 2074880
I0428 19:31:55.735257 22708 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:55.735268 22708 net.cpp:86] Creating Layer ip3
I0428 19:31:55.735290 22708 net.cpp:408] ip3 <- ip2
I0428 19:31:55.735299 22708 net.cpp:382] ip3 -> ip3
I0428 19:31:55.735399 22708 net.cpp:124] Setting up ip3
I0428 19:31:55.735409 22708 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:55.735415 22708 net.cpp:139] Memory required for data: 2077440
I0428 19:31:55.735425 22708 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:55.735435 22708 net.cpp:86] Creating Layer relu3
I0428 19:31:55.735442 22708 net.cpp:408] relu3 <- ip3
I0428 19:31:55.735450 22708 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:55.735608 22708 net.cpp:124] Setting up relu3
I0428 19:31:55.735620 22708 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:55.735625 22708 net.cpp:139] Memory required for data: 2080000
I0428 19:31:55.735631 22708 layer_factory.hpp:77] Creating layer loss
I0428 19:31:55.735646 22708 net.cpp:86] Creating Layer loss
I0428 19:31:55.735653 22708 net.cpp:408] loss <- ip3
I0428 19:31:55.735661 22708 net.cpp:408] loss <- label
I0428 19:31:55.735671 22708 net.cpp:382] loss -> loss
I0428 19:31:55.735692 22708 layer_factory.hpp:77] Creating layer loss
I0428 19:31:55.735919 22708 net.cpp:124] Setting up loss
I0428 19:31:55.735930 22708 net.cpp:131] Top shape: (1)
I0428 19:31:55.735936 22708 net.cpp:134]     with loss weight 1
I0428 19:31:55.735955 22708 net.cpp:139] Memory required for data: 2080004
I0428 19:31:55.735962 22708 net.cpp:200] loss needs backward computation.
I0428 19:31:55.735970 22708 net.cpp:200] relu3 needs backward computation.
I0428 19:31:55.735975 22708 net.cpp:200] ip3 needs backward computation.
I0428 19:31:55.735981 22708 net.cpp:200] relu2 needs backward computation.
I0428 19:31:55.735986 22708 net.cpp:200] ip2 needs backward computation.
I0428 19:31:55.735992 22708 net.cpp:200] relu1 needs backward computation.
I0428 19:31:55.735998 22708 net.cpp:200] ip1 needs backward computation.
I0428 19:31:55.736014 22708 net.cpp:200] pool0 needs backward computation.
I0428 19:31:55.736021 22708 net.cpp:200] conv0 needs backward computation.
I0428 19:31:55.736027 22708 net.cpp:202] mnist does not need backward computation.
I0428 19:31:55.736034 22708 net.cpp:244] This network produces output loss
I0428 19:31:55.736047 22708 net.cpp:257] Network initialization done.
I0428 19:31:55.736305 22708 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test137.prototxt
I0428 19:31:55.736335 22708 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:55.736416 22708 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:55.736506 22708 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:55.736564 22708 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:55.736582 22708 net.cpp:86] Creating Layer mnist
I0428 19:31:55.736590 22708 net.cpp:382] mnist -> data
I0428 19:31:55.736603 22708 net.cpp:382] mnist -> label
I0428 19:31:55.736729 22708 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:55.738775 22708 net.cpp:124] Setting up mnist
I0428 19:31:55.738804 22708 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:55.738826 22708 net.cpp:131] Top shape: 100 (100)
I0428 19:31:55.738847 22708 net.cpp:139] Memory required for data: 314000
I0428 19:31:55.738852 22708 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:55.738875 22708 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:55.738880 22708 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:55.738886 22708 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:55.738894 22708 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:55.738962 22708 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:55.738972 22708 net.cpp:131] Top shape: 100 (100)
I0428 19:31:55.738978 22708 net.cpp:131] Top shape: 100 (100)
I0428 19:31:55.738982 22708 net.cpp:139] Memory required for data: 314800
I0428 19:31:55.738998 22708 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:55.739009 22708 net.cpp:86] Creating Layer conv0
I0428 19:31:55.739014 22708 net.cpp:408] conv0 <- data
I0428 19:31:55.739020 22708 net.cpp:382] conv0 -> conv0
I0428 19:31:55.740512 22708 net.cpp:124] Setting up conv0
I0428 19:31:55.740527 22708 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:55.740531 22708 net.cpp:139] Memory required for data: 2618800
I0428 19:31:55.740542 22708 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:55.740551 22708 net.cpp:86] Creating Layer pool0
I0428 19:31:55.740572 22708 net.cpp:408] pool0 <- conv0
I0428 19:31:55.740578 22708 net.cpp:382] pool0 -> pool0
I0428 19:31:55.740634 22708 net.cpp:124] Setting up pool0
I0428 19:31:55.740643 22708 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:55.740648 22708 net.cpp:139] Memory required for data: 3194800
I0428 19:31:55.740653 22708 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:55.740660 22708 net.cpp:86] Creating Layer ip1
I0428 19:31:55.740669 22708 net.cpp:408] ip1 <- pool0
I0428 19:31:55.740675 22708 net.cpp:382] ip1 -> ip1
I0428 19:31:55.740897 22708 net.cpp:124] Setting up ip1
I0428 19:31:55.740908 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.740927 22708 net.cpp:139] Memory required for data: 3198800
I0428 19:31:55.740936 22708 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:55.740947 22708 net.cpp:86] Creating Layer relu1
I0428 19:31:55.740979 22708 net.cpp:408] relu1 <- ip1
I0428 19:31:55.740985 22708 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:55.741166 22708 net.cpp:124] Setting up relu1
I0428 19:31:55.741178 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.741181 22708 net.cpp:139] Memory required for data: 3202800
I0428 19:31:55.741186 22708 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:55.741194 22708 net.cpp:86] Creating Layer ip2
I0428 19:31:55.741200 22708 net.cpp:408] ip2 <- ip1
I0428 19:31:55.741224 22708 net.cpp:382] ip2 -> ip2
I0428 19:31:55.741331 22708 net.cpp:124] Setting up ip2
I0428 19:31:55.741340 22708 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:55.741345 22708 net.cpp:139] Memory required for data: 3222800
I0428 19:31:55.741355 22708 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:55.741361 22708 net.cpp:86] Creating Layer relu2
I0428 19:31:55.741366 22708 net.cpp:408] relu2 <- ip2
I0428 19:31:55.741372 22708 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:55.742249 22708 net.cpp:124] Setting up relu2
I0428 19:31:55.742260 22708 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:55.742281 22708 net.cpp:139] Memory required for data: 3242800
I0428 19:31:55.742285 22708 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:55.742295 22708 net.cpp:86] Creating Layer ip3
I0428 19:31:55.742300 22708 net.cpp:408] ip3 <- ip2
I0428 19:31:55.742306 22708 net.cpp:382] ip3 -> ip3
I0428 19:31:55.742425 22708 net.cpp:124] Setting up ip3
I0428 19:31:55.742435 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.742440 22708 net.cpp:139] Memory required for data: 3246800
I0428 19:31:55.742446 22708 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:55.742452 22708 net.cpp:86] Creating Layer relu3
I0428 19:31:55.742456 22708 net.cpp:408] relu3 <- ip3
I0428 19:31:55.742461 22708 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:55.742630 22708 net.cpp:124] Setting up relu3
I0428 19:31:55.742641 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.742645 22708 net.cpp:139] Memory required for data: 3250800
I0428 19:31:55.742650 22708 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:55.742656 22708 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:55.742660 22708 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:55.742666 22708 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:55.742682 22708 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:55.742717 22708 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:55.742725 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.742730 22708 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:55.742745 22708 net.cpp:139] Memory required for data: 3258800
I0428 19:31:55.742750 22708 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:55.742758 22708 net.cpp:86] Creating Layer accuracy
I0428 19:31:55.742769 22708 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:55.742774 22708 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:55.742780 22708 net.cpp:382] accuracy -> accuracy
I0428 19:31:55.742789 22708 net.cpp:124] Setting up accuracy
I0428 19:31:55.742794 22708 net.cpp:131] Top shape: (1)
I0428 19:31:55.742799 22708 net.cpp:139] Memory required for data: 3258804
I0428 19:31:55.742804 22708 layer_factory.hpp:77] Creating layer loss
I0428 19:31:55.742810 22708 net.cpp:86] Creating Layer loss
I0428 19:31:55.742815 22708 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:55.742820 22708 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:55.742825 22708 net.cpp:382] loss -> loss
I0428 19:31:55.742838 22708 layer_factory.hpp:77] Creating layer loss
I0428 19:31:55.743068 22708 net.cpp:124] Setting up loss
I0428 19:31:55.743083 22708 net.cpp:131] Top shape: (1)
I0428 19:31:55.743088 22708 net.cpp:134]     with loss weight 1
I0428 19:31:55.743094 22708 net.cpp:139] Memory required for data: 3258808
I0428 19:31:55.743099 22708 net.cpp:200] loss needs backward computation.
I0428 19:31:55.743104 22708 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:55.743109 22708 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:55.743114 22708 net.cpp:200] relu3 needs backward computation.
I0428 19:31:55.743118 22708 net.cpp:200] ip3 needs backward computation.
I0428 19:31:55.743122 22708 net.cpp:200] relu2 needs backward computation.
I0428 19:31:55.743127 22708 net.cpp:200] ip2 needs backward computation.
I0428 19:31:55.743131 22708 net.cpp:200] relu1 needs backward computation.
I0428 19:31:55.743135 22708 net.cpp:200] ip1 needs backward computation.
I0428 19:31:55.743140 22708 net.cpp:200] pool0 needs backward computation.
I0428 19:31:55.743144 22708 net.cpp:200] conv0 needs backward computation.
I0428 19:31:55.743149 22708 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:55.743155 22708 net.cpp:202] mnist does not need backward computation.
I0428 19:31:55.743158 22708 net.cpp:244] This network produces output accuracy
I0428 19:31:55.743162 22708 net.cpp:244] This network produces output loss
I0428 19:31:55.743173 22708 net.cpp:257] Network initialization done.
I0428 19:31:55.743212 22708 solver.cpp:56] Solver scaffolding done.
I0428 19:31:55.743566 22708 caffe.cpp:248] Starting Optimization
I0428 19:31:55.743574 22708 solver.cpp:273] Solving LeNet
I0428 19:31:55.743578 22708 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:55.744326 22708 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:55.759240 22708 blocking_queue.cpp:49] Waiting for data
I0428 19:31:55.793447 22715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:55.794006 22708 solver.cpp:398]     Test net output #0: accuracy = 0.0894
I0428 19:31:55.794040 22708 solver.cpp:398]     Test net output #1: loss = 2.33678 (* 1 = 2.33678 loss)
I0428 19:31:55.796905 22708 solver.cpp:219] Iteration 0 (-1.52337e-30 iter/s, 0.0532852s/100 iters), loss = 2.35663
I0428 19:31:55.796946 22708 solver.cpp:238]     Train net output #0: loss = 2.35663 (* 1 = 2.35663 loss)
I0428 19:31:55.796958 22708 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:55.860466 22708 solver.cpp:219] Iteration 100 (1574.06 iter/s, 0.0635299s/100 iters), loss = 1.10918
I0428 19:31:55.860507 22708 solver.cpp:238]     Train net output #0: loss = 1.10918 (* 1 = 1.10918 loss)
I0428 19:31:55.860513 22708 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:55.923441 22708 solver.cpp:219] Iteration 200 (1588.76 iter/s, 0.0629422s/100 iters), loss = 1.02148
I0428 19:31:55.923480 22708 solver.cpp:238]     Train net output #0: loss = 1.02148 (* 1 = 1.02148 loss)
I0428 19:31:55.923487 22708 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:55.985378 22708 solver.cpp:219] Iteration 300 (1615.38 iter/s, 0.061905s/100 iters), loss = 0.83603
I0428 19:31:55.985419 22708 solver.cpp:238]     Train net output #0: loss = 0.83603 (* 1 = 0.83603 loss)
I0428 19:31:55.985425 22708 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:56.047881 22708 solver.cpp:219] Iteration 400 (1600.76 iter/s, 0.0624703s/100 iters), loss = 0.624291
I0428 19:31:56.047921 22708 solver.cpp:238]     Train net output #0: loss = 0.624291 (* 1 = 0.624291 loss)
I0428 19:31:56.047929 22708 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:56.109581 22708 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:56.155031 22715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:56.155586 22708 solver.cpp:398]     Test net output #0: accuracy = 0.7296
I0428 19:31:56.155604 22708 solver.cpp:398]     Test net output #1: loss = 0.727036 (* 1 = 0.727036 loss)
I0428 19:31:56.156328 22708 solver.cpp:219] Iteration 500 (922.399 iter/s, 0.108413s/100 iters), loss = 0.731852
I0428 19:31:56.156352 22708 solver.cpp:238]     Train net output #0: loss = 0.731852 (* 1 = 0.731852 loss)
I0428 19:31:56.156360 22708 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:56.229404 22708 solver.cpp:219] Iteration 600 (1369.12 iter/s, 0.0730399s/100 iters), loss = 0.961707
I0428 19:31:56.229445 22708 solver.cpp:238]     Train net output #0: loss = 0.961707 (* 1 = 0.961707 loss)
I0428 19:31:56.229454 22708 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:56.301138 22708 solver.cpp:219] Iteration 700 (1394.69 iter/s, 0.0717005s/100 iters), loss = 0.636222
I0428 19:31:56.301182 22708 solver.cpp:238]     Train net output #0: loss = 0.636222 (* 1 = 0.636222 loss)
I0428 19:31:56.301189 22708 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:56.374537 22708 solver.cpp:219] Iteration 800 (1363.08 iter/s, 0.0733635s/100 iters), loss = 0.656845
I0428 19:31:56.374578 22708 solver.cpp:238]     Train net output #0: loss = 0.656845 (* 1 = 0.656845 loss)
I0428 19:31:56.374585 22708 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:56.447737 22708 solver.cpp:219] Iteration 900 (1366.74 iter/s, 0.0731668s/100 iters), loss = 0.880374
I0428 19:31:56.447777 22708 solver.cpp:238]     Train net output #0: loss = 0.880374 (* 1 = 0.880374 loss)
I0428 19:31:56.447784 22708 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:56.470746 22714 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:56.513010 22708 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:56.513779 22708 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:56.514369 22708 solver.cpp:311] Iteration 1000, loss = 0.63044
I0428 19:31:56.514384 22708 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:56.578843 22715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:56.579499 22708 solver.cpp:398]     Test net output #0: accuracy = 0.7556
I0428 19:31:56.579537 22708 solver.cpp:398]     Test net output #1: loss = 0.619814 (* 1 = 0.619814 loss)
I0428 19:31:56.579546 22708 solver.cpp:316] Optimization Done.
I0428 19:31:56.579552 22708 caffe.cpp:259] Optimization Done.
