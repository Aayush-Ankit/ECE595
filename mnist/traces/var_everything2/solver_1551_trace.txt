I0428 20:31:11.513506  3917 caffe.cpp:218] Using GPUs 0
I0428 20:31:11.552736  3917 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:12.071171  3917 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1551.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:12.071343  3917 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1551.prototxt
I0428 20:31:12.071766  3917 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:12.071794  3917 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:12.071910  3917 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:12.072028  3917 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:12.072160  3917 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:12.072194  3917 net.cpp:86] Creating Layer mnist
I0428 20:31:12.072208  3917 net.cpp:382] mnist -> data
I0428 20:31:12.072239  3917 net.cpp:382] mnist -> label
I0428 20:31:12.073525  3917 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:12.076212  3917 net.cpp:124] Setting up mnist
I0428 20:31:12.076233  3917 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:12.076243  3917 net.cpp:131] Top shape: 64 (64)
I0428 20:31:12.076249  3917 net.cpp:139] Memory required for data: 200960
I0428 20:31:12.076261  3917 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:12.076303  3917 net.cpp:86] Creating Layer conv0
I0428 20:31:12.076325  3917 net.cpp:408] conv0 <- data
I0428 20:31:12.076347  3917 net.cpp:382] conv0 -> conv0
I0428 20:31:12.367594  3917 net.cpp:124] Setting up conv0
I0428 20:31:12.367624  3917 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:12.367630  3917 net.cpp:139] Memory required for data: 14946560
I0428 20:31:12.367652  3917 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:12.367671  3917 net.cpp:86] Creating Layer pool0
I0428 20:31:12.367678  3917 net.cpp:408] pool0 <- conv0
I0428 20:31:12.367688  3917 net.cpp:382] pool0 -> pool0
I0428 20:31:12.367753  3917 net.cpp:124] Setting up pool0
I0428 20:31:12.367764  3917 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:12.367769  3917 net.cpp:139] Memory required for data: 18632960
I0428 20:31:12.367775  3917 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:12.367791  3917 net.cpp:86] Creating Layer conv1
I0428 20:31:12.367799  3917 net.cpp:408] conv1 <- pool0
I0428 20:31:12.367808  3917 net.cpp:382] conv1 -> conv1
I0428 20:31:12.369904  3917 net.cpp:124] Setting up conv1
I0428 20:31:12.369921  3917 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:12.369928  3917 net.cpp:139] Memory required for data: 18796800
I0428 20:31:12.369942  3917 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:12.369954  3917 net.cpp:86] Creating Layer pool1
I0428 20:31:12.369961  3917 net.cpp:408] pool1 <- conv1
I0428 20:31:12.369969  3917 net.cpp:382] pool1 -> pool1
I0428 20:31:12.370018  3917 net.cpp:124] Setting up pool1
I0428 20:31:12.370026  3917 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:12.370033  3917 net.cpp:139] Memory required for data: 18837760
I0428 20:31:12.370038  3917 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:12.370056  3917 net.cpp:86] Creating Layer ip1
I0428 20:31:12.370064  3917 net.cpp:408] ip1 <- pool1
I0428 20:31:12.370072  3917 net.cpp:382] ip1 -> ip1
I0428 20:31:12.371100  3917 net.cpp:124] Setting up ip1
I0428 20:31:12.371114  3917 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:12.371120  3917 net.cpp:139] Memory required for data: 18850560
I0428 20:31:12.371134  3917 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:12.371145  3917 net.cpp:86] Creating Layer relu1
I0428 20:31:12.371151  3917 net.cpp:408] relu1 <- ip1
I0428 20:31:12.371160  3917 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:12.371345  3917 net.cpp:124] Setting up relu1
I0428 20:31:12.371356  3917 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:12.371361  3917 net.cpp:139] Memory required for data: 18863360
I0428 20:31:12.371367  3917 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:12.371377  3917 net.cpp:86] Creating Layer ip2
I0428 20:31:12.371383  3917 net.cpp:408] ip2 <- ip1
I0428 20:31:12.371392  3917 net.cpp:382] ip2 -> ip2
I0428 20:31:12.371505  3917 net.cpp:124] Setting up ip2
I0428 20:31:12.371515  3917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:12.371520  3917 net.cpp:139] Memory required for data: 18865920
I0428 20:31:12.371531  3917 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:12.371541  3917 net.cpp:86] Creating Layer relu2
I0428 20:31:12.371546  3917 net.cpp:408] relu2 <- ip2
I0428 20:31:12.371554  3917 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:12.372323  3917 net.cpp:124] Setting up relu2
I0428 20:31:12.372339  3917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:12.372344  3917 net.cpp:139] Memory required for data: 18868480
I0428 20:31:12.372350  3917 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:12.372361  3917 net.cpp:86] Creating Layer ip3
I0428 20:31:12.372367  3917 net.cpp:408] ip3 <- ip2
I0428 20:31:12.372377  3917 net.cpp:382] ip3 -> ip3
I0428 20:31:12.372490  3917 net.cpp:124] Setting up ip3
I0428 20:31:12.372501  3917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:12.372506  3917 net.cpp:139] Memory required for data: 18871040
I0428 20:31:12.372520  3917 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:12.372529  3917 net.cpp:86] Creating Layer relu3
I0428 20:31:12.372540  3917 net.cpp:408] relu3 <- ip3
I0428 20:31:12.372548  3917 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:12.372733  3917 net.cpp:124] Setting up relu3
I0428 20:31:12.372745  3917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:12.372750  3917 net.cpp:139] Memory required for data: 18873600
I0428 20:31:12.372756  3917 layer_factory.hpp:77] Creating layer loss
I0428 20:31:12.372766  3917 net.cpp:86] Creating Layer loss
I0428 20:31:12.372771  3917 net.cpp:408] loss <- ip3
I0428 20:31:12.372781  3917 net.cpp:408] loss <- label
I0428 20:31:12.372789  3917 net.cpp:382] loss -> loss
I0428 20:31:12.372817  3917 layer_factory.hpp:77] Creating layer loss
I0428 20:31:12.373086  3917 net.cpp:124] Setting up loss
I0428 20:31:12.373097  3917 net.cpp:131] Top shape: (1)
I0428 20:31:12.373102  3917 net.cpp:134]     with loss weight 1
I0428 20:31:12.373123  3917 net.cpp:139] Memory required for data: 18873604
I0428 20:31:12.373129  3917 net.cpp:200] loss needs backward computation.
I0428 20:31:12.373136  3917 net.cpp:200] relu3 needs backward computation.
I0428 20:31:12.373142  3917 net.cpp:200] ip3 needs backward computation.
I0428 20:31:12.373147  3917 net.cpp:200] relu2 needs backward computation.
I0428 20:31:12.373152  3917 net.cpp:200] ip2 needs backward computation.
I0428 20:31:12.373157  3917 net.cpp:200] relu1 needs backward computation.
I0428 20:31:12.373162  3917 net.cpp:200] ip1 needs backward computation.
I0428 20:31:12.373167  3917 net.cpp:200] pool1 needs backward computation.
I0428 20:31:12.373173  3917 net.cpp:200] conv1 needs backward computation.
I0428 20:31:12.373179  3917 net.cpp:200] pool0 needs backward computation.
I0428 20:31:12.373184  3917 net.cpp:200] conv0 needs backward computation.
I0428 20:31:12.373190  3917 net.cpp:202] mnist does not need backward computation.
I0428 20:31:12.373195  3917 net.cpp:244] This network produces output loss
I0428 20:31:12.373214  3917 net.cpp:257] Network initialization done.
I0428 20:31:12.373560  3917 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1551.prototxt
I0428 20:31:12.373597  3917 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:12.373705  3917 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:12.373834  3917 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:12.373898  3917 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:12.373915  3917 net.cpp:86] Creating Layer mnist
I0428 20:31:12.373924  3917 net.cpp:382] mnist -> data
I0428 20:31:12.373935  3917 net.cpp:382] mnist -> label
I0428 20:31:12.374068  3917 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:12.376209  3917 net.cpp:124] Setting up mnist
I0428 20:31:12.376227  3917 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:12.376235  3917 net.cpp:131] Top shape: 100 (100)
I0428 20:31:12.376240  3917 net.cpp:139] Memory required for data: 314000
I0428 20:31:12.376246  3917 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:12.376278  3917 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:12.376284  3917 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:12.376292  3917 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:12.376304  3917 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:12.376402  3917 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:12.376411  3917 net.cpp:131] Top shape: 100 (100)
I0428 20:31:12.376418  3917 net.cpp:131] Top shape: 100 (100)
I0428 20:31:12.376423  3917 net.cpp:139] Memory required for data: 314800
I0428 20:31:12.376430  3917 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:12.376444  3917 net.cpp:86] Creating Layer conv0
I0428 20:31:12.376452  3917 net.cpp:408] conv0 <- data
I0428 20:31:12.376463  3917 net.cpp:382] conv0 -> conv0
I0428 20:31:12.378100  3917 net.cpp:124] Setting up conv0
I0428 20:31:12.378116  3917 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:12.378123  3917 net.cpp:139] Memory required for data: 23354800
I0428 20:31:12.378137  3917 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:12.378149  3917 net.cpp:86] Creating Layer pool0
I0428 20:31:12.378157  3917 net.cpp:408] pool0 <- conv0
I0428 20:31:12.378166  3917 net.cpp:382] pool0 -> pool0
I0428 20:31:12.378226  3917 net.cpp:124] Setting up pool0
I0428 20:31:12.378235  3917 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:12.378240  3917 net.cpp:139] Memory required for data: 29114800
I0428 20:31:12.378245  3917 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:12.378278  3917 net.cpp:86] Creating Layer conv1
I0428 20:31:12.378285  3917 net.cpp:408] conv1 <- pool0
I0428 20:31:12.378296  3917 net.cpp:382] conv1 -> conv1
I0428 20:31:12.380122  3917 net.cpp:124] Setting up conv1
I0428 20:31:12.380137  3917 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:12.380142  3917 net.cpp:139] Memory required for data: 29370800
I0428 20:31:12.380156  3917 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:12.380168  3917 net.cpp:86] Creating Layer pool1
I0428 20:31:12.380174  3917 net.cpp:408] pool1 <- conv1
I0428 20:31:12.380183  3917 net.cpp:382] pool1 -> pool1
I0428 20:31:12.380229  3917 net.cpp:124] Setting up pool1
I0428 20:31:12.380239  3917 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:12.380244  3917 net.cpp:139] Memory required for data: 29434800
I0428 20:31:12.380249  3917 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:12.380259  3917 net.cpp:86] Creating Layer ip1
I0428 20:31:12.380265  3917 net.cpp:408] ip1 <- pool1
I0428 20:31:12.380275  3917 net.cpp:382] ip1 -> ip1
I0428 20:31:12.380439  3917 net.cpp:124] Setting up ip1
I0428 20:31:12.380460  3917 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:12.380465  3917 net.cpp:139] Memory required for data: 29454800
I0428 20:31:12.380478  3917 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:12.380487  3917 net.cpp:86] Creating Layer relu1
I0428 20:31:12.380494  3917 net.cpp:408] relu1 <- ip1
I0428 20:31:12.380506  3917 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:12.380681  3917 net.cpp:124] Setting up relu1
I0428 20:31:12.380691  3917 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:12.380700  3917 net.cpp:139] Memory required for data: 29474800
I0428 20:31:12.380705  3917 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:12.380718  3917 net.cpp:86] Creating Layer ip2
I0428 20:31:12.380725  3917 net.cpp:408] ip2 <- ip1
I0428 20:31:12.380735  3917 net.cpp:382] ip2 -> ip2
I0428 20:31:12.380904  3917 net.cpp:124] Setting up ip2
I0428 20:31:12.380914  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.380921  3917 net.cpp:139] Memory required for data: 29478800
I0428 20:31:12.380931  3917 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:12.380941  3917 net.cpp:86] Creating Layer relu2
I0428 20:31:12.380949  3917 net.cpp:408] relu2 <- ip2
I0428 20:31:12.380957  3917 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:12.381242  3917 net.cpp:124] Setting up relu2
I0428 20:31:12.381253  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.381258  3917 net.cpp:139] Memory required for data: 29482800
I0428 20:31:12.381263  3917 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:12.381274  3917 net.cpp:86] Creating Layer ip3
I0428 20:31:12.381280  3917 net.cpp:408] ip3 <- ip2
I0428 20:31:12.381289  3917 net.cpp:382] ip3 -> ip3
I0428 20:31:12.381403  3917 net.cpp:124] Setting up ip3
I0428 20:31:12.381412  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.381417  3917 net.cpp:139] Memory required for data: 29486800
I0428 20:31:12.381430  3917 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:12.381441  3917 net.cpp:86] Creating Layer relu3
I0428 20:31:12.381448  3917 net.cpp:408] relu3 <- ip3
I0428 20:31:12.381456  3917 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:12.382277  3917 net.cpp:124] Setting up relu3
I0428 20:31:12.382292  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.382297  3917 net.cpp:139] Memory required for data: 29490800
I0428 20:31:12.382302  3917 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:12.382316  3917 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:12.382323  3917 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:12.382330  3917 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:12.382342  3917 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:12.382395  3917 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:12.382402  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.382410  3917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:12.382421  3917 net.cpp:139] Memory required for data: 29498800
I0428 20:31:12.382427  3917 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:12.382437  3917 net.cpp:86] Creating Layer accuracy
I0428 20:31:12.382458  3917 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:12.382465  3917 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:12.382473  3917 net.cpp:382] accuracy -> accuracy
I0428 20:31:12.382485  3917 net.cpp:124] Setting up accuracy
I0428 20:31:12.382494  3917 net.cpp:131] Top shape: (1)
I0428 20:31:12.382500  3917 net.cpp:139] Memory required for data: 29498804
I0428 20:31:12.382506  3917 layer_factory.hpp:77] Creating layer loss
I0428 20:31:12.382516  3917 net.cpp:86] Creating Layer loss
I0428 20:31:12.382522  3917 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:12.382529  3917 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:12.382537  3917 net.cpp:382] loss -> loss
I0428 20:31:12.382547  3917 layer_factory.hpp:77] Creating layer loss
I0428 20:31:12.382810  3917 net.cpp:124] Setting up loss
I0428 20:31:12.382822  3917 net.cpp:131] Top shape: (1)
I0428 20:31:12.382827  3917 net.cpp:134]     with loss weight 1
I0428 20:31:12.382849  3917 net.cpp:139] Memory required for data: 29498808
I0428 20:31:12.382856  3917 net.cpp:200] loss needs backward computation.
I0428 20:31:12.382863  3917 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:12.382869  3917 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:12.382874  3917 net.cpp:200] relu3 needs backward computation.
I0428 20:31:12.382880  3917 net.cpp:200] ip3 needs backward computation.
I0428 20:31:12.382885  3917 net.cpp:200] relu2 needs backward computation.
I0428 20:31:12.382901  3917 net.cpp:200] ip2 needs backward computation.
I0428 20:31:12.382906  3917 net.cpp:200] relu1 needs backward computation.
I0428 20:31:12.382912  3917 net.cpp:200] ip1 needs backward computation.
I0428 20:31:12.382917  3917 net.cpp:200] pool1 needs backward computation.
I0428 20:31:12.382922  3917 net.cpp:200] conv1 needs backward computation.
I0428 20:31:12.382936  3917 net.cpp:200] pool0 needs backward computation.
I0428 20:31:12.382941  3917 net.cpp:200] conv0 needs backward computation.
I0428 20:31:12.382948  3917 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:12.382954  3917 net.cpp:202] mnist does not need backward computation.
I0428 20:31:12.382961  3917 net.cpp:244] This network produces output accuracy
I0428 20:31:12.382967  3917 net.cpp:244] This network produces output loss
I0428 20:31:12.382984  3917 net.cpp:257] Network initialization done.
I0428 20:31:12.383038  3917 solver.cpp:56] Solver scaffolding done.
I0428 20:31:12.383409  3917 caffe.cpp:248] Starting Optimization
I0428 20:31:12.383415  3917 solver.cpp:273] Solving LeNet
I0428 20:31:12.383419  3917 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:12.384192  3917 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:12.480459  3924 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:12.481964  3917 solver.cpp:398]     Test net output #0: accuracy = 0.0276
I0428 20:31:12.481987  3917 solver.cpp:398]     Test net output #1: loss = 2.33064 (* 1 = 2.33064 loss)
I0428 20:31:12.486569  3917 solver.cpp:219] Iteration 0 (-7.8753e-43 iter/s, 0.103113s/100 iters), loss = 2.32259
I0428 20:31:12.486598  3917 solver.cpp:238]     Train net output #0: loss = 2.32259 (* 1 = 2.32259 loss)
I0428 20:31:12.486629  3917 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:12.701805  3917 solver.cpp:219] Iteration 100 (464.722 iter/s, 0.215182s/100 iters), loss = 0.405197
I0428 20:31:12.701869  3917 solver.cpp:238]     Train net output #0: loss = 0.405197 (* 1 = 0.405197 loss)
I0428 20:31:12.701889  3917 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:12.928690  3917 solver.cpp:219] Iteration 200 (440.896 iter/s, 0.226811s/100 iters), loss = 0.509317
I0428 20:31:12.928748  3917 solver.cpp:238]     Train net output #0: loss = 0.509317 (* 1 = 0.509317 loss)
I0428 20:31:12.928769  3917 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:13.152133  3917 solver.cpp:219] Iteration 300 (447.683 iter/s, 0.223372s/100 iters), loss = 0.52153
I0428 20:31:13.152191  3917 solver.cpp:238]     Train net output #0: loss = 0.52153 (* 1 = 0.52153 loss)
I0428 20:31:13.152212  3917 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:13.377863  3917 solver.cpp:219] Iteration 400 (443.143 iter/s, 0.225661s/100 iters), loss = 0.274855
I0428 20:31:13.377915  3917 solver.cpp:238]     Train net output #0: loss = 0.274855 (* 1 = 0.274855 loss)
I0428 20:31:13.377933  3917 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:13.596333  3917 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:13.697294  3924 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:13.700809  3917 solver.cpp:398]     Test net output #0: accuracy = 0.8682
I0428 20:31:13.700842  3917 solver.cpp:398]     Test net output #1: loss = 0.354636 (* 1 = 0.354636 loss)
I0428 20:31:13.702793  3917 solver.cpp:219] Iteration 500 (307.82 iter/s, 0.324865s/100 iters), loss = 0.199008
I0428 20:31:13.702826  3917 solver.cpp:238]     Train net output #0: loss = 0.199008 (* 1 = 0.199008 loss)
I0428 20:31:13.702860  3917 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:13.930868  3917 solver.cpp:219] Iteration 600 (438.552 iter/s, 0.228023s/100 iters), loss = 0.206889
I0428 20:31:13.930923  3917 solver.cpp:238]     Train net output #0: loss = 0.206889 (* 1 = 0.206889 loss)
I0428 20:31:13.930938  3917 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:14.160394  3917 solver.cpp:219] Iteration 700 (435.814 iter/s, 0.229456s/100 iters), loss = 0.53301
I0428 20:31:14.160442  3917 solver.cpp:238]     Train net output #0: loss = 0.53301 (* 1 = 0.53301 loss)
I0428 20:31:14.160454  3917 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:14.387735  3917 solver.cpp:219] Iteration 800 (439.994 iter/s, 0.227276s/100 iters), loss = 0.456007
I0428 20:31:14.387785  3917 solver.cpp:238]     Train net output #0: loss = 0.456007 (* 1 = 0.456007 loss)
I0428 20:31:14.387796  3917 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:14.612691  3917 solver.cpp:219] Iteration 900 (444.664 iter/s, 0.224889s/100 iters), loss = 0.380286
I0428 20:31:14.612740  3917 solver.cpp:238]     Train net output #0: loss = 0.380286 (* 1 = 0.380286 loss)
I0428 20:31:14.612752  3917 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:14.687446  3923 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:14.835297  3917 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:14.837751  3917 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:14.839221  3917 solver.cpp:311] Iteration 1000, loss = 0.410803
I0428 20:31:14.839248  3917 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:14.941228  3924 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:14.944746  3917 solver.cpp:398]     Test net output #0: accuracy = 0.877
I0428 20:31:14.944769  3917 solver.cpp:398]     Test net output #1: loss = 0.324874 (* 1 = 0.324874 loss)
I0428 20:31:14.944774  3917 solver.cpp:316] Optimization Done.
I0428 20:31:14.944778  3917 caffe.cpp:259] Optimization Done.
