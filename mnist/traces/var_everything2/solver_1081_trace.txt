I0428 20:08:21.857723 31365 caffe.cpp:218] Using GPUs 0
I0428 20:08:21.886535 31365 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:22.333587 31365 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1081.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:22.333719 31365 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1081.prototxt
I0428 20:08:22.334045 31365 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:22.334060 31365 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:22.334138 31365 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:22.334202 31365 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:22.334297 31365 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:22.334317 31365 net.cpp:86] Creating Layer mnist
I0428 20:08:22.334323 31365 net.cpp:382] mnist -> data
I0428 20:08:22.334343 31365 net.cpp:382] mnist -> label
I0428 20:08:22.335335 31365 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:22.337610 31365 net.cpp:124] Setting up mnist
I0428 20:08:22.337642 31365 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:22.337648 31365 net.cpp:131] Top shape: 64 (64)
I0428 20:08:22.337651 31365 net.cpp:139] Memory required for data: 200960
I0428 20:08:22.337657 31365 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:22.337671 31365 net.cpp:86] Creating Layer conv0
I0428 20:08:22.337688 31365 net.cpp:408] conv0 <- data
I0428 20:08:22.337698 31365 net.cpp:382] conv0 -> conv0
I0428 20:08:22.566035 31365 net.cpp:124] Setting up conv0
I0428 20:08:22.566077 31365 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:22.566082 31365 net.cpp:139] Memory required for data: 3887360
I0428 20:08:22.566112 31365 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:22.566126 31365 net.cpp:86] Creating Layer pool0
I0428 20:08:22.566130 31365 net.cpp:408] pool0 <- conv0
I0428 20:08:22.566153 31365 net.cpp:382] pool0 -> pool0
I0428 20:08:22.566197 31365 net.cpp:124] Setting up pool0
I0428 20:08:22.566215 31365 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:22.566218 31365 net.cpp:139] Memory required for data: 4808960
I0428 20:08:22.566221 31365 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:22.566232 31365 net.cpp:86] Creating Layer conv1
I0428 20:08:22.566236 31365 net.cpp:408] conv1 <- pool0
I0428 20:08:22.566241 31365 net.cpp:382] conv1 -> conv1
I0428 20:08:22.569288 31365 net.cpp:124] Setting up conv1
I0428 20:08:22.569319 31365 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:22.569324 31365 net.cpp:139] Memory required for data: 4972800
I0428 20:08:22.569332 31365 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:22.569341 31365 net.cpp:86] Creating Layer pool1
I0428 20:08:22.569344 31365 net.cpp:408] pool1 <- conv1
I0428 20:08:22.569350 31365 net.cpp:382] pool1 -> pool1
I0428 20:08:22.569419 31365 net.cpp:124] Setting up pool1
I0428 20:08:22.569425 31365 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:22.569428 31365 net.cpp:139] Memory required for data: 5013760
I0428 20:08:22.569432 31365 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:22.569443 31365 net.cpp:86] Creating Layer ip1
I0428 20:08:22.569447 31365 net.cpp:408] ip1 <- pool1
I0428 20:08:22.569453 31365 net.cpp:382] ip1 -> ip1
I0428 20:08:22.570482 31365 net.cpp:124] Setting up ip1
I0428 20:08:22.570495 31365 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:22.570516 31365 net.cpp:139] Memory required for data: 5020160
I0428 20:08:22.570525 31365 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:22.570535 31365 net.cpp:86] Creating Layer relu1
I0428 20:08:22.570539 31365 net.cpp:408] relu1 <- ip1
I0428 20:08:22.570545 31365 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:22.570754 31365 net.cpp:124] Setting up relu1
I0428 20:08:22.570763 31365 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:22.570767 31365 net.cpp:139] Memory required for data: 5026560
I0428 20:08:22.570770 31365 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:22.570777 31365 net.cpp:86] Creating Layer ip2
I0428 20:08:22.570781 31365 net.cpp:408] ip2 <- ip1
I0428 20:08:22.570787 31365 net.cpp:382] ip2 -> ip2
I0428 20:08:22.570911 31365 net.cpp:124] Setting up ip2
I0428 20:08:22.570919 31365 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:22.570921 31365 net.cpp:139] Memory required for data: 5039360
I0428 20:08:22.570927 31365 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:22.570935 31365 net.cpp:86] Creating Layer relu2
I0428 20:08:22.570938 31365 net.cpp:408] relu2 <- ip2
I0428 20:08:22.570943 31365 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:22.571777 31365 net.cpp:124] Setting up relu2
I0428 20:08:22.571806 31365 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:22.571810 31365 net.cpp:139] Memory required for data: 5052160
I0428 20:08:22.571813 31365 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:22.571820 31365 net.cpp:86] Creating Layer ip3
I0428 20:08:22.571825 31365 net.cpp:408] ip3 <- ip2
I0428 20:08:22.571831 31365 net.cpp:382] ip3 -> ip3
I0428 20:08:22.571975 31365 net.cpp:124] Setting up ip3
I0428 20:08:22.571985 31365 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:22.571987 31365 net.cpp:139] Memory required for data: 5054720
I0428 20:08:22.571995 31365 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:22.572001 31365 net.cpp:86] Creating Layer relu3
I0428 20:08:22.572005 31365 net.cpp:408] relu3 <- ip3
I0428 20:08:22.572008 31365 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:22.572218 31365 net.cpp:124] Setting up relu3
I0428 20:08:22.572228 31365 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:22.572232 31365 net.cpp:139] Memory required for data: 5057280
I0428 20:08:22.572234 31365 layer_factory.hpp:77] Creating layer loss
I0428 20:08:22.572242 31365 net.cpp:86] Creating Layer loss
I0428 20:08:22.572244 31365 net.cpp:408] loss <- ip3
I0428 20:08:22.572248 31365 net.cpp:408] loss <- label
I0428 20:08:22.572253 31365 net.cpp:382] loss -> loss
I0428 20:08:22.572271 31365 layer_factory.hpp:77] Creating layer loss
I0428 20:08:22.572515 31365 net.cpp:124] Setting up loss
I0428 20:08:22.572525 31365 net.cpp:131] Top shape: (1)
I0428 20:08:22.572527 31365 net.cpp:134]     with loss weight 1
I0428 20:08:22.572543 31365 net.cpp:139] Memory required for data: 5057284
I0428 20:08:22.572546 31365 net.cpp:200] loss needs backward computation.
I0428 20:08:22.572551 31365 net.cpp:200] relu3 needs backward computation.
I0428 20:08:22.572553 31365 net.cpp:200] ip3 needs backward computation.
I0428 20:08:22.572556 31365 net.cpp:200] relu2 needs backward computation.
I0428 20:08:22.572559 31365 net.cpp:200] ip2 needs backward computation.
I0428 20:08:22.572562 31365 net.cpp:200] relu1 needs backward computation.
I0428 20:08:22.572564 31365 net.cpp:200] ip1 needs backward computation.
I0428 20:08:22.572567 31365 net.cpp:200] pool1 needs backward computation.
I0428 20:08:22.572571 31365 net.cpp:200] conv1 needs backward computation.
I0428 20:08:22.572574 31365 net.cpp:200] pool0 needs backward computation.
I0428 20:08:22.572577 31365 net.cpp:200] conv0 needs backward computation.
I0428 20:08:22.572597 31365 net.cpp:202] mnist does not need backward computation.
I0428 20:08:22.572600 31365 net.cpp:244] This network produces output loss
I0428 20:08:22.572610 31365 net.cpp:257] Network initialization done.
I0428 20:08:22.572986 31365 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1081.prototxt
I0428 20:08:22.573015 31365 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:22.573117 31365 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:22.573253 31365 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:22.573302 31365 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:22.573315 31365 net.cpp:86] Creating Layer mnist
I0428 20:08:22.573323 31365 net.cpp:382] mnist -> data
I0428 20:08:22.573329 31365 net.cpp:382] mnist -> label
I0428 20:08:22.573421 31365 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:22.575574 31365 net.cpp:124] Setting up mnist
I0428 20:08:22.575608 31365 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:22.575614 31365 net.cpp:131] Top shape: 100 (100)
I0428 20:08:22.575618 31365 net.cpp:139] Memory required for data: 314000
I0428 20:08:22.575621 31365 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:22.575628 31365 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:22.575633 31365 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:22.575639 31365 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:22.575645 31365 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:22.575774 31365 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:22.575783 31365 net.cpp:131] Top shape: 100 (100)
I0428 20:08:22.575788 31365 net.cpp:131] Top shape: 100 (100)
I0428 20:08:22.575790 31365 net.cpp:139] Memory required for data: 314800
I0428 20:08:22.575793 31365 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:22.575803 31365 net.cpp:86] Creating Layer conv0
I0428 20:08:22.575805 31365 net.cpp:408] conv0 <- data
I0428 20:08:22.575812 31365 net.cpp:382] conv0 -> conv0
I0428 20:08:22.577575 31365 net.cpp:124] Setting up conv0
I0428 20:08:22.577605 31365 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:22.577608 31365 net.cpp:139] Memory required for data: 6074800
I0428 20:08:22.577617 31365 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:22.577623 31365 net.cpp:86] Creating Layer pool0
I0428 20:08:22.577627 31365 net.cpp:408] pool0 <- conv0
I0428 20:08:22.577632 31365 net.cpp:382] pool0 -> pool0
I0428 20:08:22.577669 31365 net.cpp:124] Setting up pool0
I0428 20:08:22.577675 31365 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:22.577677 31365 net.cpp:139] Memory required for data: 7514800
I0428 20:08:22.577680 31365 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:22.577690 31365 net.cpp:86] Creating Layer conv1
I0428 20:08:22.577693 31365 net.cpp:408] conv1 <- pool0
I0428 20:08:22.577698 31365 net.cpp:382] conv1 -> conv1
I0428 20:08:22.579959 31365 net.cpp:124] Setting up conv1
I0428 20:08:22.579972 31365 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:22.579993 31365 net.cpp:139] Memory required for data: 7770800
I0428 20:08:22.580001 31365 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:22.580008 31365 net.cpp:86] Creating Layer pool1
I0428 20:08:22.580011 31365 net.cpp:408] pool1 <- conv1
I0428 20:08:22.580018 31365 net.cpp:382] pool1 -> pool1
I0428 20:08:22.580091 31365 net.cpp:124] Setting up pool1
I0428 20:08:22.580103 31365 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:22.580106 31365 net.cpp:139] Memory required for data: 7834800
I0428 20:08:22.580109 31365 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:22.580116 31365 net.cpp:86] Creating Layer ip1
I0428 20:08:22.580119 31365 net.cpp:408] ip1 <- pool1
I0428 20:08:22.580126 31365 net.cpp:382] ip1 -> ip1
I0428 20:08:22.580272 31365 net.cpp:124] Setting up ip1
I0428 20:08:22.580281 31365 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:22.580294 31365 net.cpp:139] Memory required for data: 7844800
I0428 20:08:22.580303 31365 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:22.580314 31365 net.cpp:86] Creating Layer relu1
I0428 20:08:22.580317 31365 net.cpp:408] relu1 <- ip1
I0428 20:08:22.580323 31365 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:22.580518 31365 net.cpp:124] Setting up relu1
I0428 20:08:22.580528 31365 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:22.580531 31365 net.cpp:139] Memory required for data: 7854800
I0428 20:08:22.580535 31365 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:22.580543 31365 net.cpp:86] Creating Layer ip2
I0428 20:08:22.580546 31365 net.cpp:408] ip2 <- ip1
I0428 20:08:22.580552 31365 net.cpp:382] ip2 -> ip2
I0428 20:08:22.580665 31365 net.cpp:124] Setting up ip2
I0428 20:08:22.580684 31365 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:22.580687 31365 net.cpp:139] Memory required for data: 7874800
I0428 20:08:22.580693 31365 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:22.580721 31365 net.cpp:86] Creating Layer relu2
I0428 20:08:22.580726 31365 net.cpp:408] relu2 <- ip2
I0428 20:08:22.580730 31365 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:22.580934 31365 net.cpp:124] Setting up relu2
I0428 20:08:22.580942 31365 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:22.580946 31365 net.cpp:139] Memory required for data: 7894800
I0428 20:08:22.580950 31365 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:22.580957 31365 net.cpp:86] Creating Layer ip3
I0428 20:08:22.580961 31365 net.cpp:408] ip3 <- ip2
I0428 20:08:22.580966 31365 net.cpp:382] ip3 -> ip3
I0428 20:08:22.581080 31365 net.cpp:124] Setting up ip3
I0428 20:08:22.581087 31365 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:22.581090 31365 net.cpp:139] Memory required for data: 7898800
I0428 20:08:22.581099 31365 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:22.581104 31365 net.cpp:86] Creating Layer relu3
I0428 20:08:22.581109 31365 net.cpp:408] relu3 <- ip3
I0428 20:08:22.581112 31365 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:22.581984 31365 net.cpp:124] Setting up relu3
I0428 20:08:22.582015 31365 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:22.582018 31365 net.cpp:139] Memory required for data: 7902800
I0428 20:08:22.582022 31365 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:22.582027 31365 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:22.582031 31365 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:22.582037 31365 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:22.582043 31365 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:22.582085 31365 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:22.582092 31365 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:22.582096 31365 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:22.582099 31365 net.cpp:139] Memory required for data: 7910800
I0428 20:08:22.582103 31365 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:22.582108 31365 net.cpp:86] Creating Layer accuracy
I0428 20:08:22.582111 31365 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:22.582116 31365 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:22.582121 31365 net.cpp:382] accuracy -> accuracy
I0428 20:08:22.582129 31365 net.cpp:124] Setting up accuracy
I0428 20:08:22.582144 31365 net.cpp:131] Top shape: (1)
I0428 20:08:22.582147 31365 net.cpp:139] Memory required for data: 7910804
I0428 20:08:22.582150 31365 layer_factory.hpp:77] Creating layer loss
I0428 20:08:22.582156 31365 net.cpp:86] Creating Layer loss
I0428 20:08:22.582159 31365 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:22.582164 31365 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:22.582167 31365 net.cpp:382] loss -> loss
I0428 20:08:22.582173 31365 layer_factory.hpp:77] Creating layer loss
I0428 20:08:22.582420 31365 net.cpp:124] Setting up loss
I0428 20:08:22.582429 31365 net.cpp:131] Top shape: (1)
I0428 20:08:22.582433 31365 net.cpp:134]     with loss weight 1
I0428 20:08:22.582450 31365 net.cpp:139] Memory required for data: 7910808
I0428 20:08:22.582454 31365 net.cpp:200] loss needs backward computation.
I0428 20:08:22.582458 31365 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:22.582463 31365 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:22.582466 31365 net.cpp:200] relu3 needs backward computation.
I0428 20:08:22.582469 31365 net.cpp:200] ip3 needs backward computation.
I0428 20:08:22.582473 31365 net.cpp:200] relu2 needs backward computation.
I0428 20:08:22.582475 31365 net.cpp:200] ip2 needs backward computation.
I0428 20:08:22.582479 31365 net.cpp:200] relu1 needs backward computation.
I0428 20:08:22.582487 31365 net.cpp:200] ip1 needs backward computation.
I0428 20:08:22.582490 31365 net.cpp:200] pool1 needs backward computation.
I0428 20:08:22.582494 31365 net.cpp:200] conv1 needs backward computation.
I0428 20:08:22.582496 31365 net.cpp:200] pool0 needs backward computation.
I0428 20:08:22.582499 31365 net.cpp:200] conv0 needs backward computation.
I0428 20:08:22.582504 31365 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:22.582507 31365 net.cpp:202] mnist does not need backward computation.
I0428 20:08:22.582510 31365 net.cpp:244] This network produces output accuracy
I0428 20:08:22.582514 31365 net.cpp:244] This network produces output loss
I0428 20:08:22.582525 31365 net.cpp:257] Network initialization done.
I0428 20:08:22.582598 31365 solver.cpp:56] Solver scaffolding done.
I0428 20:08:22.583029 31365 caffe.cpp:248] Starting Optimization
I0428 20:08:22.583034 31365 solver.cpp:273] Solving LeNet
I0428 20:08:22.583037 31365 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:22.583945 31365 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:22.588578 31365 blocking_queue.cpp:49] Waiting for data
I0428 20:08:22.660295 31372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:22.660912 31365 solver.cpp:398]     Test net output #0: accuracy = 0.0755
I0428 20:08:22.660945 31365 solver.cpp:398]     Test net output #1: loss = 2.31597 (* 1 = 2.31597 loss)
I0428 20:08:22.664582 31365 solver.cpp:219] Iteration 0 (-9.97725e-43 iter/s, 0.0815022s/100 iters), loss = 2.32477
I0428 20:08:22.664623 31365 solver.cpp:238]     Train net output #0: loss = 2.32477 (* 1 = 2.32477 loss)
I0428 20:08:22.664633 31365 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:22.756736 31365 solver.cpp:219] Iteration 100 (1085.75 iter/s, 0.0921018s/100 iters), loss = 0.641292
I0428 20:08:22.756777 31365 solver.cpp:238]     Train net output #0: loss = 0.641292 (* 1 = 0.641292 loss)
I0428 20:08:22.756783 31365 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:22.853215 31365 solver.cpp:219] Iteration 200 (1037.06 iter/s, 0.0964269s/100 iters), loss = 0.335973
I0428 20:08:22.853245 31365 solver.cpp:238]     Train net output #0: loss = 0.335972 (* 1 = 0.335972 loss)
I0428 20:08:22.853253 31365 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:22.945168 31365 solver.cpp:219] Iteration 300 (1087.97 iter/s, 0.0919141s/100 iters), loss = 0.254932
I0428 20:08:22.945191 31365 solver.cpp:238]     Train net output #0: loss = 0.254932 (* 1 = 0.254932 loss)
I0428 20:08:22.945199 31365 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:23.039055 31365 solver.cpp:219] Iteration 400 (1065.49 iter/s, 0.0938537s/100 iters), loss = 0.146666
I0428 20:08:23.039079 31365 solver.cpp:238]     Train net output #0: loss = 0.146666 (* 1 = 0.146666 loss)
I0428 20:08:23.039085 31365 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:23.133729 31365 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:23.210440 31372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:23.211050 31365 solver.cpp:398]     Test net output #0: accuracy = 0.9586
I0428 20:08:23.211073 31365 solver.cpp:398]     Test net output #1: loss = 0.135124 (* 1 = 0.135124 loss)
I0428 20:08:23.212023 31365 solver.cpp:219] Iteration 500 (578.286 iter/s, 0.172925s/100 iters), loss = 0.11094
I0428 20:08:23.212090 31365 solver.cpp:238]     Train net output #0: loss = 0.11094 (* 1 = 0.11094 loss)
I0428 20:08:23.212101 31365 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:23.308352 31365 solver.cpp:219] Iteration 600 (1038.77 iter/s, 0.0962681s/100 iters), loss = 0.0880761
I0428 20:08:23.308378 31365 solver.cpp:238]     Train net output #0: loss = 0.0880761 (* 1 = 0.0880761 loss)
I0428 20:08:23.308384 31365 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:23.397778 31365 solver.cpp:219] Iteration 700 (1118.68 iter/s, 0.0893911s/100 iters), loss = 0.190928
I0428 20:08:23.397802 31365 solver.cpp:238]     Train net output #0: loss = 0.190928 (* 1 = 0.190928 loss)
I0428 20:08:23.397824 31365 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:23.486806 31365 solver.cpp:219] Iteration 800 (1123.66 iter/s, 0.0889949s/100 iters), loss = 0.278671
I0428 20:08:23.486830 31365 solver.cpp:238]     Train net output #0: loss = 0.278671 (* 1 = 0.278671 loss)
I0428 20:08:23.486851 31365 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:23.576282 31365 solver.cpp:219] Iteration 900 (1118.05 iter/s, 0.0894413s/100 iters), loss = 0.20887
I0428 20:08:23.576304 31365 solver.cpp:238]     Train net output #0: loss = 0.20887 (* 1 = 0.20887 loss)
I0428 20:08:23.576310 31365 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:23.606853 31371 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:23.667059 31365 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:23.668066 31365 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:23.668709 31365 solver.cpp:311] Iteration 1000, loss = 0.0957685
I0428 20:08:23.668723 31365 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:23.744237 31372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:23.744827 31365 solver.cpp:398]     Test net output #0: accuracy = 0.9676
I0428 20:08:23.744848 31365 solver.cpp:398]     Test net output #1: loss = 0.0970987 (* 1 = 0.0970987 loss)
I0428 20:08:23.744854 31365 solver.cpp:316] Optimization Done.
I0428 20:08:23.744858 31365 caffe.cpp:259] Optimization Done.
