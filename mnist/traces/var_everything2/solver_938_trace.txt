I0428 20:02:49.311997 30062 caffe.cpp:218] Using GPUs 0
I0428 20:02:49.346669 30062 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:49.857499 30062 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test938.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:49.857640 30062 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test938.prototxt
I0428 20:02:49.857982 30062 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:49.858001 30062 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:49.858083 30062 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:02:49.858152 30062 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:49.858258 30062 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:49.858283 30062 net.cpp:86] Creating Layer mnist
I0428 20:02:49.858290 30062 net.cpp:382] mnist -> data
I0428 20:02:49.858314 30062 net.cpp:382] mnist -> label
I0428 20:02:49.859416 30062 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:49.861874 30062 net.cpp:124] Setting up mnist
I0428 20:02:49.861893 30062 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:49.861901 30062 net.cpp:131] Top shape: 64 (64)
I0428 20:02:49.861903 30062 net.cpp:139] Memory required for data: 200960
I0428 20:02:49.861910 30062 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:49.861928 30062 net.cpp:86] Creating Layer conv0
I0428 20:02:49.861934 30062 net.cpp:408] conv0 <- data
I0428 20:02:49.861946 30062 net.cpp:382] conv0 -> conv0
I0428 20:02:50.138293 30062 net.cpp:124] Setting up conv0
I0428 20:02:50.138320 30062 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:50.138324 30062 net.cpp:139] Memory required for data: 1675520
I0428 20:02:50.138356 30062 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:50.138368 30062 net.cpp:86] Creating Layer pool0
I0428 20:02:50.138373 30062 net.cpp:408] pool0 <- conv0
I0428 20:02:50.138378 30062 net.cpp:382] pool0 -> pool0
I0428 20:02:50.138423 30062 net.cpp:124] Setting up pool0
I0428 20:02:50.138430 30062 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:50.138451 30062 net.cpp:139] Memory required for data: 2044160
I0428 20:02:50.138454 30062 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:50.138465 30062 net.cpp:86] Creating Layer conv1
I0428 20:02:50.138468 30062 net.cpp:408] conv1 <- pool0
I0428 20:02:50.138473 30062 net.cpp:382] conv1 -> conv1
I0428 20:02:50.140604 30062 net.cpp:124] Setting up conv1
I0428 20:02:50.140619 30062 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:02:50.140622 30062 net.cpp:139] Memory required for data: 3682560
I0428 20:02:50.140646 30062 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:50.140655 30062 net.cpp:86] Creating Layer pool1
I0428 20:02:50.140660 30062 net.cpp:408] pool1 <- conv1
I0428 20:02:50.140664 30062 net.cpp:382] pool1 -> pool1
I0428 20:02:50.140702 30062 net.cpp:124] Setting up pool1
I0428 20:02:50.140709 30062 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:02:50.140712 30062 net.cpp:139] Memory required for data: 4092160
I0428 20:02:50.140715 30062 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:50.140722 30062 net.cpp:86] Creating Layer ip1
I0428 20:02:50.140727 30062 net.cpp:408] ip1 <- pool1
I0428 20:02:50.140730 30062 net.cpp:382] ip1 -> ip1
I0428 20:02:50.141836 30062 net.cpp:124] Setting up ip1
I0428 20:02:50.141850 30062 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:50.141855 30062 net.cpp:139] Memory required for data: 4094720
I0428 20:02:50.141863 30062 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:50.141870 30062 net.cpp:86] Creating Layer relu1
I0428 20:02:50.141873 30062 net.cpp:408] relu1 <- ip1
I0428 20:02:50.141877 30062 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:50.142048 30062 net.cpp:124] Setting up relu1
I0428 20:02:50.142072 30062 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:50.142076 30062 net.cpp:139] Memory required for data: 4097280
I0428 20:02:50.142078 30062 layer_factory.hpp:77] Creating layer loss
I0428 20:02:50.142084 30062 net.cpp:86] Creating Layer loss
I0428 20:02:50.142088 30062 net.cpp:408] loss <- ip1
I0428 20:02:50.142091 30062 net.cpp:408] loss <- label
I0428 20:02:50.142096 30062 net.cpp:382] loss -> loss
I0428 20:02:50.142127 30062 layer_factory.hpp:77] Creating layer loss
I0428 20:02:50.143033 30062 net.cpp:124] Setting up loss
I0428 20:02:50.143045 30062 net.cpp:131] Top shape: (1)
I0428 20:02:50.143049 30062 net.cpp:134]     with loss weight 1
I0428 20:02:50.143064 30062 net.cpp:139] Memory required for data: 4097284
I0428 20:02:50.143067 30062 net.cpp:200] loss needs backward computation.
I0428 20:02:50.143071 30062 net.cpp:200] relu1 needs backward computation.
I0428 20:02:50.143074 30062 net.cpp:200] ip1 needs backward computation.
I0428 20:02:50.143077 30062 net.cpp:200] pool1 needs backward computation.
I0428 20:02:50.143080 30062 net.cpp:200] conv1 needs backward computation.
I0428 20:02:50.143085 30062 net.cpp:200] pool0 needs backward computation.
I0428 20:02:50.143087 30062 net.cpp:200] conv0 needs backward computation.
I0428 20:02:50.143090 30062 net.cpp:202] mnist does not need backward computation.
I0428 20:02:50.143093 30062 net.cpp:244] This network produces output loss
I0428 20:02:50.143101 30062 net.cpp:257] Network initialization done.
I0428 20:02:50.143376 30062 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test938.prototxt
I0428 20:02:50.143401 30062 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:50.143474 30062 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:02:50.143548 30062 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:50.143625 30062 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:50.143640 30062 net.cpp:86] Creating Layer mnist
I0428 20:02:50.143645 30062 net.cpp:382] mnist -> data
I0428 20:02:50.143653 30062 net.cpp:382] mnist -> label
I0428 20:02:50.143746 30062 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:50.145803 30062 net.cpp:124] Setting up mnist
I0428 20:02:50.145817 30062 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:50.145823 30062 net.cpp:131] Top shape: 100 (100)
I0428 20:02:50.145825 30062 net.cpp:139] Memory required for data: 314000
I0428 20:02:50.145829 30062 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:50.145838 30062 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:50.145843 30062 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:50.145848 30062 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:50.145855 30062 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:50.145947 30062 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:50.145956 30062 net.cpp:131] Top shape: 100 (100)
I0428 20:02:50.145959 30062 net.cpp:131] Top shape: 100 (100)
I0428 20:02:50.145962 30062 net.cpp:139] Memory required for data: 314800
I0428 20:02:50.145965 30062 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:50.145975 30062 net.cpp:86] Creating Layer conv0
I0428 20:02:50.145978 30062 net.cpp:408] conv0 <- data
I0428 20:02:50.145984 30062 net.cpp:382] conv0 -> conv0
I0428 20:02:50.146891 30062 net.cpp:124] Setting up conv0
I0428 20:02:50.146903 30062 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:50.146908 30062 net.cpp:139] Memory required for data: 2618800
I0428 20:02:50.146931 30062 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:50.146939 30062 net.cpp:86] Creating Layer pool0
I0428 20:02:50.146942 30062 net.cpp:408] pool0 <- conv0
I0428 20:02:50.146948 30062 net.cpp:382] pool0 -> pool0
I0428 20:02:50.146983 30062 net.cpp:124] Setting up pool0
I0428 20:02:50.146991 30062 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:50.146994 30062 net.cpp:139] Memory required for data: 3194800
I0428 20:02:50.146996 30062 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:50.147006 30062 net.cpp:86] Creating Layer conv1
I0428 20:02:50.147020 30062 net.cpp:408] conv1 <- pool0
I0428 20:02:50.147027 30062 net.cpp:382] conv1 -> conv1
I0428 20:02:50.148849 30062 net.cpp:124] Setting up conv1
I0428 20:02:50.148861 30062 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:02:50.148865 30062 net.cpp:139] Memory required for data: 5754800
I0428 20:02:50.148890 30062 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:50.148896 30062 net.cpp:86] Creating Layer pool1
I0428 20:02:50.148911 30062 net.cpp:408] pool1 <- conv1
I0428 20:02:50.148917 30062 net.cpp:382] pool1 -> pool1
I0428 20:02:50.148983 30062 net.cpp:124] Setting up pool1
I0428 20:02:50.148989 30062 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:02:50.148993 30062 net.cpp:139] Memory required for data: 6394800
I0428 20:02:50.148998 30062 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:50.149011 30062 net.cpp:86] Creating Layer ip1
I0428 20:02:50.149016 30062 net.cpp:408] ip1 <- pool1
I0428 20:02:50.149024 30062 net.cpp:382] ip1 -> ip1
I0428 20:02:50.149233 30062 net.cpp:124] Setting up ip1
I0428 20:02:50.149243 30062 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:50.149260 30062 net.cpp:139] Memory required for data: 6398800
I0428 20:02:50.149268 30062 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:50.149274 30062 net.cpp:86] Creating Layer relu1
I0428 20:02:50.149283 30062 net.cpp:408] relu1 <- ip1
I0428 20:02:50.149287 30062 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:50.150061 30062 net.cpp:124] Setting up relu1
I0428 20:02:50.150074 30062 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:50.150079 30062 net.cpp:139] Memory required for data: 6402800
I0428 20:02:50.150081 30062 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:02:50.150091 30062 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:02:50.150095 30062 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:02:50.150099 30062 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:02:50.150108 30062 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:02:50.150151 30062 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:02:50.150157 30062 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:50.150161 30062 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:50.150164 30062 net.cpp:139] Memory required for data: 6410800
I0428 20:02:50.150167 30062 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:50.150173 30062 net.cpp:86] Creating Layer accuracy
I0428 20:02:50.150177 30062 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:02:50.150180 30062 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:50.150185 30062 net.cpp:382] accuracy -> accuracy
I0428 20:02:50.150192 30062 net.cpp:124] Setting up accuracy
I0428 20:02:50.150195 30062 net.cpp:131] Top shape: (1)
I0428 20:02:50.150198 30062 net.cpp:139] Memory required for data: 6410804
I0428 20:02:50.150202 30062 layer_factory.hpp:77] Creating layer loss
I0428 20:02:50.150208 30062 net.cpp:86] Creating Layer loss
I0428 20:02:50.150212 30062 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:02:50.150215 30062 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:50.150219 30062 net.cpp:382] loss -> loss
I0428 20:02:50.150225 30062 layer_factory.hpp:77] Creating layer loss
I0428 20:02:50.150598 30062 net.cpp:124] Setting up loss
I0428 20:02:50.150609 30062 net.cpp:131] Top shape: (1)
I0428 20:02:50.150611 30062 net.cpp:134]     with loss weight 1
I0428 20:02:50.150619 30062 net.cpp:139] Memory required for data: 6410808
I0428 20:02:50.150624 30062 net.cpp:200] loss needs backward computation.
I0428 20:02:50.150670 30062 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:50.150673 30062 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:02:50.150691 30062 net.cpp:200] relu1 needs backward computation.
I0428 20:02:50.150715 30062 net.cpp:200] ip1 needs backward computation.
I0428 20:02:50.150718 30062 net.cpp:200] pool1 needs backward computation.
I0428 20:02:50.150722 30062 net.cpp:200] conv1 needs backward computation.
I0428 20:02:50.150739 30062 net.cpp:200] pool0 needs backward computation.
I0428 20:02:50.150743 30062 net.cpp:200] conv0 needs backward computation.
I0428 20:02:50.150746 30062 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:50.150750 30062 net.cpp:202] mnist does not need backward computation.
I0428 20:02:50.150763 30062 net.cpp:244] This network produces output accuracy
I0428 20:02:50.150765 30062 net.cpp:244] This network produces output loss
I0428 20:02:50.150785 30062 net.cpp:257] Network initialization done.
I0428 20:02:50.150817 30062 solver.cpp:56] Solver scaffolding done.
I0428 20:02:50.151057 30062 caffe.cpp:248] Starting Optimization
I0428 20:02:50.151062 30062 solver.cpp:273] Solving LeNet
I0428 20:02:50.151077 30062 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:50.151214 30062 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:50.155194 30062 blocking_queue.cpp:49] Waiting for data
I0428 20:02:50.259232 30069 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:50.259948 30062 solver.cpp:398]     Test net output #0: accuracy = 0.1279
I0428 20:02:50.259986 30062 solver.cpp:398]     Test net output #1: loss = 2.33671 (* 1 = 2.33671 loss)
I0428 20:02:50.265544 30062 solver.cpp:219] Iteration 0 (0 iter/s, 0.114423s/100 iters), loss = 2.37397
I0428 20:02:50.265585 30062 solver.cpp:238]     Train net output #0: loss = 2.37397 (* 1 = 2.37397 loss)
I0428 20:02:50.265607 30062 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:50.419389 30062 solver.cpp:219] Iteration 100 (650.257 iter/s, 0.153785s/100 iters), loss = 1.28098
I0428 20:02:50.419430 30062 solver.cpp:238]     Train net output #0: loss = 1.28098 (* 1 = 1.28098 loss)
I0428 20:02:50.419440 30062 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:50.565966 30062 solver.cpp:219] Iteration 200 (682.467 iter/s, 0.146527s/100 iters), loss = 1.43038
I0428 20:02:50.565999 30062 solver.cpp:238]     Train net output #0: loss = 1.43038 (* 1 = 1.43038 loss)
I0428 20:02:50.566005 30062 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:50.709472 30062 solver.cpp:219] Iteration 300 (697.057 iter/s, 0.14346s/100 iters), loss = 1.32202
I0428 20:02:50.709504 30062 solver.cpp:238]     Train net output #0: loss = 1.32202 (* 1 = 1.32202 loss)
I0428 20:02:50.709514 30062 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:50.853567 30062 solver.cpp:219] Iteration 400 (694.207 iter/s, 0.144049s/100 iters), loss = 1.28387
I0428 20:02:50.853600 30062 solver.cpp:238]     Train net output #0: loss = 1.28387 (* 1 = 1.28387 loss)
I0428 20:02:50.853607 30062 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:50.995245 30062 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:51.062722 30069 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:51.063472 30062 solver.cpp:398]     Test net output #0: accuracy = 0.5766
I0428 20:02:51.063524 30062 solver.cpp:398]     Test net output #1: loss = 1.20311 (* 1 = 1.20311 loss)
I0428 20:02:51.065181 30062 solver.cpp:219] Iteration 500 (472.696 iter/s, 0.211552s/100 iters), loss = 1.25778
I0428 20:02:51.065235 30062 solver.cpp:238]     Train net output #0: loss = 1.25778 (* 1 = 1.25778 loss)
I0428 20:02:51.065248 30062 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:51.219868 30062 solver.cpp:219] Iteration 600 (646.74 iter/s, 0.154622s/100 iters), loss = 1.1756
I0428 20:02:51.219905 30062 solver.cpp:238]     Train net output #0: loss = 1.1756 (* 1 = 1.1756 loss)
I0428 20:02:51.219915 30062 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:51.367175 30062 solver.cpp:219] Iteration 700 (679.083 iter/s, 0.147257s/100 iters), loss = 1.19274
I0428 20:02:51.367209 30062 solver.cpp:238]     Train net output #0: loss = 1.19274 (* 1 = 1.19274 loss)
I0428 20:02:51.367218 30062 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:51.503816 30062 solver.cpp:219] Iteration 800 (732.099 iter/s, 0.136594s/100 iters), loss = 1.4536
I0428 20:02:51.503849 30062 solver.cpp:238]     Train net output #0: loss = 1.4536 (* 1 = 1.4536 loss)
I0428 20:02:51.503857 30062 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:51.660962 30062 solver.cpp:219] Iteration 900 (636.558 iter/s, 0.157095s/100 iters), loss = 1.4154
I0428 20:02:51.661005 30062 solver.cpp:238]     Train net output #0: loss = 1.4154 (* 1 = 1.4154 loss)
I0428 20:02:51.661015 30062 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:51.711443 30068 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:51.808133 30062 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:51.809993 30062 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:51.810981 30062 solver.cpp:311] Iteration 1000, loss = 1.25314
I0428 20:02:51.811017 30062 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:51.883548 30069 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:51.884197 30062 solver.cpp:398]     Test net output #0: accuracy = 0.5926
I0428 20:02:51.884227 30062 solver.cpp:398]     Test net output #1: loss = 1.18657 (* 1 = 1.18657 loss)
I0428 20:02:51.884234 30062 solver.cpp:316] Optimization Done.
I0428 20:02:51.884239 30062 caffe.cpp:259] Optimization Done.
