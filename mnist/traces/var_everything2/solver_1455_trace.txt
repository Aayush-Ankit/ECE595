I0428 20:25:28.980484  2602 caffe.cpp:218] Using GPUs 0
I0428 20:25:29.017182  2602 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:29.528673  2602 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1455.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:29.528823  2602 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1455.prototxt
I0428 20:25:29.529227  2602 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:29.529247  2602 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:29.529343  2602 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:29.529418  2602 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:29.529520  2602 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:29.529541  2602 net.cpp:86] Creating Layer mnist
I0428 20:25:29.529549  2602 net.cpp:382] mnist -> data
I0428 20:25:29.529572  2602 net.cpp:382] mnist -> label
I0428 20:25:29.530664  2602 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:29.533357  2602 net.cpp:124] Setting up mnist
I0428 20:25:29.533375  2602 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:29.533382  2602 net.cpp:131] Top shape: 64 (64)
I0428 20:25:29.533386  2602 net.cpp:139] Memory required for data: 200960
I0428 20:25:29.533394  2602 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:29.533411  2602 net.cpp:86] Creating Layer conv0
I0428 20:25:29.533430  2602 net.cpp:408] conv0 <- data
I0428 20:25:29.533442  2602 net.cpp:382] conv0 -> conv0
I0428 20:25:29.806443  2602 net.cpp:124] Setting up conv0
I0428 20:25:29.806469  2602 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:29.806473  2602 net.cpp:139] Memory required for data: 14946560
I0428 20:25:29.806488  2602 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:29.806499  2602 net.cpp:86] Creating Layer pool0
I0428 20:25:29.806504  2602 net.cpp:408] pool0 <- conv0
I0428 20:25:29.806509  2602 net.cpp:382] pool0 -> pool0
I0428 20:25:29.806586  2602 net.cpp:124] Setting up pool0
I0428 20:25:29.806593  2602 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:29.806596  2602 net.cpp:139] Memory required for data: 18632960
I0428 20:25:29.806599  2602 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:29.806609  2602 net.cpp:86] Creating Layer conv1
I0428 20:25:29.806612  2602 net.cpp:408] conv1 <- pool0
I0428 20:25:29.806617  2602 net.cpp:382] conv1 -> conv1
I0428 20:25:29.809531  2602 net.cpp:124] Setting up conv1
I0428 20:25:29.809561  2602 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:29.809564  2602 net.cpp:139] Memory required for data: 18665728
I0428 20:25:29.809572  2602 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:29.809579  2602 net.cpp:86] Creating Layer pool1
I0428 20:25:29.809583  2602 net.cpp:408] pool1 <- conv1
I0428 20:25:29.809587  2602 net.cpp:382] pool1 -> pool1
I0428 20:25:29.809639  2602 net.cpp:124] Setting up pool1
I0428 20:25:29.809644  2602 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:29.809648  2602 net.cpp:139] Memory required for data: 18673920
I0428 20:25:29.809650  2602 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:29.809656  2602 net.cpp:86] Creating Layer ip1
I0428 20:25:29.809659  2602 net.cpp:408] ip1 <- pool1
I0428 20:25:29.809664  2602 net.cpp:382] ip1 -> ip1
I0428 20:25:29.809756  2602 net.cpp:124] Setting up ip1
I0428 20:25:29.809762  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.809765  2602 net.cpp:139] Memory required for data: 18676480
I0428 20:25:29.809772  2602 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:29.809779  2602 net.cpp:86] Creating Layer relu1
I0428 20:25:29.809782  2602 net.cpp:408] relu1 <- ip1
I0428 20:25:29.809787  2602 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:29.809953  2602 net.cpp:124] Setting up relu1
I0428 20:25:29.809962  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.809964  2602 net.cpp:139] Memory required for data: 18679040
I0428 20:25:29.809967  2602 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:29.809973  2602 net.cpp:86] Creating Layer ip2
I0428 20:25:29.809976  2602 net.cpp:408] ip2 <- ip1
I0428 20:25:29.809981  2602 net.cpp:382] ip2 -> ip2
I0428 20:25:29.810066  2602 net.cpp:124] Setting up ip2
I0428 20:25:29.810072  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.810075  2602 net.cpp:139] Memory required for data: 18681600
I0428 20:25:29.810081  2602 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:29.810086  2602 net.cpp:86] Creating Layer relu2
I0428 20:25:29.810088  2602 net.cpp:408] relu2 <- ip2
I0428 20:25:29.810092  2602 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:29.810858  2602 net.cpp:124] Setting up relu2
I0428 20:25:29.810869  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.810873  2602 net.cpp:139] Memory required for data: 18684160
I0428 20:25:29.810878  2602 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:29.810883  2602 net.cpp:86] Creating Layer ip3
I0428 20:25:29.810887  2602 net.cpp:408] ip3 <- ip2
I0428 20:25:29.810907  2602 net.cpp:382] ip3 -> ip3
I0428 20:25:29.810997  2602 net.cpp:124] Setting up ip3
I0428 20:25:29.811003  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.811007  2602 net.cpp:139] Memory required for data: 18686720
I0428 20:25:29.811013  2602 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:29.811018  2602 net.cpp:86] Creating Layer relu3
I0428 20:25:29.811022  2602 net.cpp:408] relu3 <- ip3
I0428 20:25:29.811025  2602 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:29.811178  2602 net.cpp:124] Setting up relu3
I0428 20:25:29.811187  2602 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:29.811189  2602 net.cpp:139] Memory required for data: 18689280
I0428 20:25:29.811192  2602 layer_factory.hpp:77] Creating layer loss
I0428 20:25:29.811197  2602 net.cpp:86] Creating Layer loss
I0428 20:25:29.811200  2602 net.cpp:408] loss <- ip3
I0428 20:25:29.811204  2602 net.cpp:408] loss <- label
I0428 20:25:29.811209  2602 net.cpp:382] loss -> loss
I0428 20:25:29.811226  2602 layer_factory.hpp:77] Creating layer loss
I0428 20:25:29.811453  2602 net.cpp:124] Setting up loss
I0428 20:25:29.811462  2602 net.cpp:131] Top shape: (1)
I0428 20:25:29.811466  2602 net.cpp:134]     with loss weight 1
I0428 20:25:29.811481  2602 net.cpp:139] Memory required for data: 18689284
I0428 20:25:29.811484  2602 net.cpp:200] loss needs backward computation.
I0428 20:25:29.811488  2602 net.cpp:200] relu3 needs backward computation.
I0428 20:25:29.811491  2602 net.cpp:200] ip3 needs backward computation.
I0428 20:25:29.811493  2602 net.cpp:200] relu2 needs backward computation.
I0428 20:25:29.811496  2602 net.cpp:200] ip2 needs backward computation.
I0428 20:25:29.811499  2602 net.cpp:200] relu1 needs backward computation.
I0428 20:25:29.811502  2602 net.cpp:200] ip1 needs backward computation.
I0428 20:25:29.811506  2602 net.cpp:200] pool1 needs backward computation.
I0428 20:25:29.811509  2602 net.cpp:200] conv1 needs backward computation.
I0428 20:25:29.811512  2602 net.cpp:200] pool0 needs backward computation.
I0428 20:25:29.811516  2602 net.cpp:200] conv0 needs backward computation.
I0428 20:25:29.811518  2602 net.cpp:202] mnist does not need backward computation.
I0428 20:25:29.811522  2602 net.cpp:244] This network produces output loss
I0428 20:25:29.811530  2602 net.cpp:257] Network initialization done.
I0428 20:25:29.811872  2602 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1455.prototxt
I0428 20:25:29.811898  2602 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:29.812016  2602 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:29.812091  2602 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:29.812134  2602 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:29.812147  2602 net.cpp:86] Creating Layer mnist
I0428 20:25:29.812151  2602 net.cpp:382] mnist -> data
I0428 20:25:29.812160  2602 net.cpp:382] mnist -> label
I0428 20:25:29.812238  2602 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:29.814265  2602 net.cpp:124] Setting up mnist
I0428 20:25:29.814296  2602 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:29.814301  2602 net.cpp:131] Top shape: 100 (100)
I0428 20:25:29.814304  2602 net.cpp:139] Memory required for data: 314000
I0428 20:25:29.814308  2602 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:29.814316  2602 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:29.814319  2602 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:29.814324  2602 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:29.814332  2602 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:29.814375  2602 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:29.814383  2602 net.cpp:131] Top shape: 100 (100)
I0428 20:25:29.814385  2602 net.cpp:131] Top shape: 100 (100)
I0428 20:25:29.814389  2602 net.cpp:139] Memory required for data: 314800
I0428 20:25:29.814393  2602 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:29.814400  2602 net.cpp:86] Creating Layer conv0
I0428 20:25:29.814404  2602 net.cpp:408] conv0 <- data
I0428 20:25:29.814409  2602 net.cpp:382] conv0 -> conv0
I0428 20:25:29.816234  2602 net.cpp:124] Setting up conv0
I0428 20:25:29.816248  2602 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:29.816268  2602 net.cpp:139] Memory required for data: 23354800
I0428 20:25:29.816277  2602 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:29.816283  2602 net.cpp:86] Creating Layer pool0
I0428 20:25:29.816287  2602 net.cpp:408] pool0 <- conv0
I0428 20:25:29.816293  2602 net.cpp:382] pool0 -> pool0
I0428 20:25:29.816328  2602 net.cpp:124] Setting up pool0
I0428 20:25:29.816334  2602 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:29.816337  2602 net.cpp:139] Memory required for data: 29114800
I0428 20:25:29.816340  2602 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:29.816349  2602 net.cpp:86] Creating Layer conv1
I0428 20:25:29.816352  2602 net.cpp:408] conv1 <- pool0
I0428 20:25:29.816357  2602 net.cpp:382] conv1 -> conv1
I0428 20:25:29.818015  2602 net.cpp:124] Setting up conv1
I0428 20:25:29.818045  2602 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:29.818048  2602 net.cpp:139] Memory required for data: 29166000
I0428 20:25:29.818058  2602 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:29.818065  2602 net.cpp:86] Creating Layer pool1
I0428 20:25:29.818079  2602 net.cpp:408] pool1 <- conv1
I0428 20:25:29.818084  2602 net.cpp:382] pool1 -> pool1
I0428 20:25:29.818121  2602 net.cpp:124] Setting up pool1
I0428 20:25:29.818128  2602 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:29.818131  2602 net.cpp:139] Memory required for data: 29178800
I0428 20:25:29.818135  2602 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:29.818140  2602 net.cpp:86] Creating Layer ip1
I0428 20:25:29.818145  2602 net.cpp:408] ip1 <- pool1
I0428 20:25:29.818148  2602 net.cpp:382] ip1 -> ip1
I0428 20:25:29.818244  2602 net.cpp:124] Setting up ip1
I0428 20:25:29.818270  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.818285  2602 net.cpp:139] Memory required for data: 29182800
I0428 20:25:29.818294  2602 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:29.818300  2602 net.cpp:86] Creating Layer relu1
I0428 20:25:29.818302  2602 net.cpp:408] relu1 <- ip1
I0428 20:25:29.818307  2602 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:29.818480  2602 net.cpp:124] Setting up relu1
I0428 20:25:29.818488  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.818492  2602 net.cpp:139] Memory required for data: 29186800
I0428 20:25:29.818495  2602 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:29.818502  2602 net.cpp:86] Creating Layer ip2
I0428 20:25:29.818506  2602 net.cpp:408] ip2 <- ip1
I0428 20:25:29.818511  2602 net.cpp:382] ip2 -> ip2
I0428 20:25:29.818617  2602 net.cpp:124] Setting up ip2
I0428 20:25:29.818624  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.818627  2602 net.cpp:139] Memory required for data: 29190800
I0428 20:25:29.818634  2602 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:29.818639  2602 net.cpp:86] Creating Layer relu2
I0428 20:25:29.818641  2602 net.cpp:408] relu2 <- ip2
I0428 20:25:29.818645  2602 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:29.818826  2602 net.cpp:124] Setting up relu2
I0428 20:25:29.818835  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.818838  2602 net.cpp:139] Memory required for data: 29194800
I0428 20:25:29.818841  2602 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:29.818846  2602 net.cpp:86] Creating Layer ip3
I0428 20:25:29.818850  2602 net.cpp:408] ip3 <- ip2
I0428 20:25:29.818855  2602 net.cpp:382] ip3 -> ip3
I0428 20:25:29.818969  2602 net.cpp:124] Setting up ip3
I0428 20:25:29.818975  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.818979  2602 net.cpp:139] Memory required for data: 29198800
I0428 20:25:29.818987  2602 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:29.818991  2602 net.cpp:86] Creating Layer relu3
I0428 20:25:29.818994  2602 net.cpp:408] relu3 <- ip3
I0428 20:25:29.818998  2602 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:29.819842  2602 net.cpp:124] Setting up relu3
I0428 20:25:29.819856  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.819860  2602 net.cpp:139] Memory required for data: 29202800
I0428 20:25:29.819864  2602 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:29.819870  2602 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:29.819875  2602 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:29.819880  2602 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:29.819886  2602 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:29.819926  2602 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:29.819931  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.819936  2602 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:29.819939  2602 net.cpp:139] Memory required for data: 29210800
I0428 20:25:29.819942  2602 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:29.819947  2602 net.cpp:86] Creating Layer accuracy
I0428 20:25:29.819950  2602 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:29.819955  2602 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:29.819960  2602 net.cpp:382] accuracy -> accuracy
I0428 20:25:29.819981  2602 net.cpp:124] Setting up accuracy
I0428 20:25:29.819986  2602 net.cpp:131] Top shape: (1)
I0428 20:25:29.819988  2602 net.cpp:139] Memory required for data: 29210804
I0428 20:25:29.819993  2602 layer_factory.hpp:77] Creating layer loss
I0428 20:25:29.820011  2602 net.cpp:86] Creating Layer loss
I0428 20:25:29.820016  2602 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:29.820020  2602 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:29.820024  2602 net.cpp:382] loss -> loss
I0428 20:25:29.820030  2602 layer_factory.hpp:77] Creating layer loss
I0428 20:25:29.820247  2602 net.cpp:124] Setting up loss
I0428 20:25:29.820255  2602 net.cpp:131] Top shape: (1)
I0428 20:25:29.820260  2602 net.cpp:134]     with loss weight 1
I0428 20:25:29.820276  2602 net.cpp:139] Memory required for data: 29210808
I0428 20:25:29.820281  2602 net.cpp:200] loss needs backward computation.
I0428 20:25:29.820284  2602 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:29.820288  2602 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:29.820291  2602 net.cpp:200] relu3 needs backward computation.
I0428 20:25:29.820300  2602 net.cpp:200] ip3 needs backward computation.
I0428 20:25:29.820303  2602 net.cpp:200] relu2 needs backward computation.
I0428 20:25:29.820307  2602 net.cpp:200] ip2 needs backward computation.
I0428 20:25:29.820309  2602 net.cpp:200] relu1 needs backward computation.
I0428 20:25:29.820328  2602 net.cpp:200] ip1 needs backward computation.
I0428 20:25:29.820333  2602 net.cpp:200] pool1 needs backward computation.
I0428 20:25:29.820335  2602 net.cpp:200] conv1 needs backward computation.
I0428 20:25:29.820338  2602 net.cpp:200] pool0 needs backward computation.
I0428 20:25:29.820341  2602 net.cpp:200] conv0 needs backward computation.
I0428 20:25:29.820346  2602 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:29.820349  2602 net.cpp:202] mnist does not need backward computation.
I0428 20:25:29.820353  2602 net.cpp:244] This network produces output accuracy
I0428 20:25:29.820361  2602 net.cpp:244] This network produces output loss
I0428 20:25:29.820372  2602 net.cpp:257] Network initialization done.
I0428 20:25:29.820415  2602 solver.cpp:56] Solver scaffolding done.
I0428 20:25:29.820762  2602 caffe.cpp:248] Starting Optimization
I0428 20:25:29.820770  2602 solver.cpp:273] Solving LeNet
I0428 20:25:29.820772  2602 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:29.821712  2602 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:29.918057  2613 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:29.919613  2602 solver.cpp:398]     Test net output #0: accuracy = 0.1198
I0428 20:25:29.919632  2602 solver.cpp:398]     Test net output #1: loss = 2.30936 (* 1 = 2.30936 loss)
I0428 20:25:29.924173  2602 solver.cpp:219] Iteration 0 (0 iter/s, 0.103368s/100 iters), loss = 2.30941
I0428 20:25:29.924196  2602 solver.cpp:238]     Train net output #0: loss = 2.30941 (* 1 = 2.30941 loss)
I0428 20:25:29.924207  2602 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:30.137871  2602 solver.cpp:219] Iteration 100 (468.041 iter/s, 0.213657s/100 iters), loss = 1.28273
I0428 20:25:30.137898  2602 solver.cpp:238]     Train net output #0: loss = 1.28273 (* 1 = 1.28273 loss)
I0428 20:25:30.137904  2602 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:30.337589  2602 solver.cpp:219] Iteration 200 (500.809 iter/s, 0.199677s/100 iters), loss = 0.938186
I0428 20:25:30.337630  2602 solver.cpp:238]     Train net output #0: loss = 0.938186 (* 1 = 0.938186 loss)
I0428 20:25:30.337652  2602 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:30.541404  2602 solver.cpp:219] Iteration 300 (490.792 iter/s, 0.203752s/100 iters), loss = 0.524147
I0428 20:25:30.541450  2602 solver.cpp:238]     Train net output #0: loss = 0.524147 (* 1 = 0.524147 loss)
I0428 20:25:30.541461  2602 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:30.753051  2602 solver.cpp:219] Iteration 400 (472.621 iter/s, 0.211586s/100 iters), loss = 0.484122
I0428 20:25:30.753088  2602 solver.cpp:238]     Train net output #0: loss = 0.484122 (* 1 = 0.484122 loss)
I0428 20:25:30.753098  2602 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:30.954581  2602 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:31.063942  2613 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:31.066771  2602 solver.cpp:398]     Test net output #0: accuracy = 0.8986
I0428 20:25:31.066802  2602 solver.cpp:398]     Test net output #1: loss = 0.353869 (* 1 = 0.353869 loss)
I0428 20:25:31.068753  2602 solver.cpp:219] Iteration 500 (316.811 iter/s, 0.315646s/100 iters), loss = 0.360207
I0428 20:25:31.068785  2602 solver.cpp:238]     Train net output #0: loss = 0.360207 (* 1 = 0.360207 loss)
I0428 20:25:31.068822  2602 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:31.285163  2602 solver.cpp:219] Iteration 600 (462.193 iter/s, 0.21636s/100 iters), loss = 0.241492
I0428 20:25:31.285208  2602 solver.cpp:238]     Train net output #0: loss = 0.241492 (* 1 = 0.241492 loss)
I0428 20:25:31.285220  2602 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:31.500525  2602 solver.cpp:219] Iteration 700 (464.468 iter/s, 0.2153s/100 iters), loss = 0.366187
I0428 20:25:31.500577  2602 solver.cpp:238]     Train net output #0: loss = 0.366187 (* 1 = 0.366187 loss)
I0428 20:25:31.500591  2602 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:31.717125  2602 solver.cpp:219] Iteration 800 (461.821 iter/s, 0.216534s/100 iters), loss = 0.388569
I0428 20:25:31.717164  2602 solver.cpp:238]     Train net output #0: loss = 0.388569 (* 1 = 0.388569 loss)
I0428 20:25:31.717172  2602 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:31.938655  2602 solver.cpp:219] Iteration 900 (451.529 iter/s, 0.22147s/100 iters), loss = 0.295379
I0428 20:25:31.938714  2602 solver.cpp:238]     Train net output #0: loss = 0.295379 (* 1 = 0.295379 loss)
I0428 20:25:31.938730  2602 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:32.014533  2612 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:32.153909  2602 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:32.155534  2602 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:32.156541  2602 solver.cpp:311] Iteration 1000, loss = 0.213678
I0428 20:25:32.156563  2602 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:32.187074  2602 blocking_queue.cpp:49] Waiting for data
I0428 20:25:32.257170  2613 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:32.258653  2602 solver.cpp:398]     Test net output #0: accuracy = 0.9327
I0428 20:25:32.258677  2602 solver.cpp:398]     Test net output #1: loss = 0.228983 (* 1 = 0.228983 loss)
I0428 20:25:32.258682  2602 solver.cpp:316] Optimization Done.
I0428 20:25:32.258687  2602 caffe.cpp:259] Optimization Done.
