I0428 20:12:22.963456 32244 caffe.cpp:218] Using GPUs 0
I0428 20:12:22.999706 32244 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:23.510864 32244 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1179.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:23.511010 32244 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1179.prototxt
I0428 20:12:23.511380 32244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:23.511397 32244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:23.511484 32244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:12:23.511554 32244 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:23.511653 32244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:23.511678 32244 net.cpp:86] Creating Layer mnist
I0428 20:12:23.511687 32244 net.cpp:382] mnist -> data
I0428 20:12:23.511708 32244 net.cpp:382] mnist -> label
I0428 20:12:23.512820 32244 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:23.515256 32244 net.cpp:124] Setting up mnist
I0428 20:12:23.515275 32244 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:23.515280 32244 net.cpp:131] Top shape: 64 (64)
I0428 20:12:23.515285 32244 net.cpp:139] Memory required for data: 200960
I0428 20:12:23.515291 32244 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:23.515307 32244 net.cpp:86] Creating Layer conv0
I0428 20:12:23.515314 32244 net.cpp:408] conv0 <- data
I0428 20:12:23.515326 32244 net.cpp:382] conv0 -> conv0
I0428 20:12:23.806797 32244 net.cpp:124] Setting up conv0
I0428 20:12:23.806828 32244 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:23.806834 32244 net.cpp:139] Memory required for data: 3887360
I0428 20:12:23.806875 32244 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:23.806891 32244 net.cpp:86] Creating Layer pool0
I0428 20:12:23.806900 32244 net.cpp:408] pool0 <- conv0
I0428 20:12:23.806907 32244 net.cpp:382] pool0 -> pool0
I0428 20:12:23.806965 32244 net.cpp:124] Setting up pool0
I0428 20:12:23.806973 32244 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:23.806977 32244 net.cpp:139] Memory required for data: 4808960
I0428 20:12:23.806982 32244 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:23.806994 32244 net.cpp:86] Creating Layer conv1
I0428 20:12:23.806999 32244 net.cpp:408] conv1 <- pool0
I0428 20:12:23.807005 32244 net.cpp:382] conv1 -> conv1
I0428 20:12:23.809566 32244 net.cpp:124] Setting up conv1
I0428 20:12:23.809583 32244 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:23.809588 32244 net.cpp:139] Memory required for data: 6447360
I0428 20:12:23.809598 32244 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:23.809607 32244 net.cpp:86] Creating Layer pool1
I0428 20:12:23.809612 32244 net.cpp:408] pool1 <- conv1
I0428 20:12:23.809617 32244 net.cpp:382] pool1 -> pool1
I0428 20:12:23.809660 32244 net.cpp:124] Setting up pool1
I0428 20:12:23.809669 32244 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:23.809672 32244 net.cpp:139] Memory required for data: 6856960
I0428 20:12:23.809676 32244 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:23.809684 32244 net.cpp:86] Creating Layer ip1
I0428 20:12:23.809691 32244 net.cpp:408] ip1 <- pool1
I0428 20:12:23.809697 32244 net.cpp:382] ip1 -> ip1
I0428 20:12:23.811309 32244 net.cpp:124] Setting up ip1
I0428 20:12:23.811324 32244 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:12:23.811328 32244 net.cpp:139] Memory required for data: 6869760
I0428 20:12:23.811337 32244 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:23.811347 32244 net.cpp:86] Creating Layer relu1
I0428 20:12:23.811353 32244 net.cpp:408] relu1 <- ip1
I0428 20:12:23.811358 32244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:23.811560 32244 net.cpp:124] Setting up relu1
I0428 20:12:23.811570 32244 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:12:23.811574 32244 net.cpp:139] Memory required for data: 6882560
I0428 20:12:23.811578 32244 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:23.811586 32244 net.cpp:86] Creating Layer ip2
I0428 20:12:23.811591 32244 net.cpp:408] ip2 <- ip1
I0428 20:12:23.811597 32244 net.cpp:382] ip2 -> ip2
I0428 20:12:23.811709 32244 net.cpp:124] Setting up ip2
I0428 20:12:23.811717 32244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:23.811722 32244 net.cpp:139] Memory required for data: 6885120
I0428 20:12:23.811728 32244 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:23.811735 32244 net.cpp:86] Creating Layer relu2
I0428 20:12:23.811740 32244 net.cpp:408] relu2 <- ip2
I0428 20:12:23.811745 32244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:23.812561 32244 net.cpp:124] Setting up relu2
I0428 20:12:23.812575 32244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:23.812579 32244 net.cpp:139] Memory required for data: 6887680
I0428 20:12:23.812583 32244 layer_factory.hpp:77] Creating layer loss
I0428 20:12:23.812592 32244 net.cpp:86] Creating Layer loss
I0428 20:12:23.812595 32244 net.cpp:408] loss <- ip2
I0428 20:12:23.812600 32244 net.cpp:408] loss <- label
I0428 20:12:23.812608 32244 net.cpp:382] loss -> loss
I0428 20:12:23.812626 32244 layer_factory.hpp:77] Creating layer loss
I0428 20:12:23.812916 32244 net.cpp:124] Setting up loss
I0428 20:12:23.812928 32244 net.cpp:131] Top shape: (1)
I0428 20:12:23.812932 32244 net.cpp:134]     with loss weight 1
I0428 20:12:23.812949 32244 net.cpp:139] Memory required for data: 6887684
I0428 20:12:23.812954 32244 net.cpp:200] loss needs backward computation.
I0428 20:12:23.812958 32244 net.cpp:200] relu2 needs backward computation.
I0428 20:12:23.812961 32244 net.cpp:200] ip2 needs backward computation.
I0428 20:12:23.812965 32244 net.cpp:200] relu1 needs backward computation.
I0428 20:12:23.812968 32244 net.cpp:200] ip1 needs backward computation.
I0428 20:12:23.812985 32244 net.cpp:200] pool1 needs backward computation.
I0428 20:12:23.812989 32244 net.cpp:200] conv1 needs backward computation.
I0428 20:12:23.812994 32244 net.cpp:200] pool0 needs backward computation.
I0428 20:12:23.812997 32244 net.cpp:200] conv0 needs backward computation.
I0428 20:12:23.813001 32244 net.cpp:202] mnist does not need backward computation.
I0428 20:12:23.813005 32244 net.cpp:244] This network produces output loss
I0428 20:12:23.813015 32244 net.cpp:257] Network initialization done.
I0428 20:12:23.813354 32244 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1179.prototxt
I0428 20:12:23.813383 32244 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:23.813479 32244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:12:23.813552 32244 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:23.813613 32244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:23.813627 32244 net.cpp:86] Creating Layer mnist
I0428 20:12:23.813633 32244 net.cpp:382] mnist -> data
I0428 20:12:23.813642 32244 net.cpp:382] mnist -> label
I0428 20:12:23.813735 32244 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:23.814924 32244 net.cpp:124] Setting up mnist
I0428 20:12:23.814950 32244 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:23.814957 32244 net.cpp:131] Top shape: 100 (100)
I0428 20:12:23.814961 32244 net.cpp:139] Memory required for data: 314000
I0428 20:12:23.814965 32244 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:23.814973 32244 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:23.814978 32244 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:23.814985 32244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:23.814992 32244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:23.815114 32244 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:23.815122 32244 net.cpp:131] Top shape: 100 (100)
I0428 20:12:23.815126 32244 net.cpp:131] Top shape: 100 (100)
I0428 20:12:23.815130 32244 net.cpp:139] Memory required for data: 314800
I0428 20:12:23.815134 32244 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:23.815143 32244 net.cpp:86] Creating Layer conv0
I0428 20:12:23.815148 32244 net.cpp:408] conv0 <- data
I0428 20:12:23.815155 32244 net.cpp:382] conv0 -> conv0
I0428 20:12:23.816959 32244 net.cpp:124] Setting up conv0
I0428 20:12:23.816977 32244 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:23.816980 32244 net.cpp:139] Memory required for data: 6074800
I0428 20:12:23.816992 32244 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:23.816998 32244 net.cpp:86] Creating Layer pool0
I0428 20:12:23.817013 32244 net.cpp:408] pool0 <- conv0
I0428 20:12:23.817019 32244 net.cpp:382] pool0 -> pool0
I0428 20:12:23.817059 32244 net.cpp:124] Setting up pool0
I0428 20:12:23.817067 32244 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:23.817070 32244 net.cpp:139] Memory required for data: 7514800
I0428 20:12:23.817075 32244 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:23.817083 32244 net.cpp:86] Creating Layer conv1
I0428 20:12:23.817088 32244 net.cpp:408] conv1 <- pool0
I0428 20:12:23.817095 32244 net.cpp:382] conv1 -> conv1
I0428 20:12:23.819039 32244 net.cpp:124] Setting up conv1
I0428 20:12:23.819062 32244 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:23.819067 32244 net.cpp:139] Memory required for data: 10074800
I0428 20:12:23.819087 32244 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:23.819094 32244 net.cpp:86] Creating Layer pool1
I0428 20:12:23.819098 32244 net.cpp:408] pool1 <- conv1
I0428 20:12:23.819104 32244 net.cpp:382] pool1 -> pool1
I0428 20:12:23.819169 32244 net.cpp:124] Setting up pool1
I0428 20:12:23.819177 32244 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:23.819182 32244 net.cpp:139] Memory required for data: 10714800
I0428 20:12:23.819186 32244 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:23.819195 32244 net.cpp:86] Creating Layer ip1
I0428 20:12:23.819198 32244 net.cpp:408] ip1 <- pool1
I0428 20:12:23.819205 32244 net.cpp:382] ip1 -> ip1
I0428 20:12:23.819823 32244 net.cpp:124] Setting up ip1
I0428 20:12:23.819833 32244 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:12:23.819838 32244 net.cpp:139] Memory required for data: 10734800
I0428 20:12:23.819845 32244 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:23.819851 32244 net.cpp:86] Creating Layer relu1
I0428 20:12:23.819856 32244 net.cpp:408] relu1 <- ip1
I0428 20:12:23.819862 32244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:23.820076 32244 net.cpp:124] Setting up relu1
I0428 20:12:23.820087 32244 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:12:23.820091 32244 net.cpp:139] Memory required for data: 10754800
I0428 20:12:23.820096 32244 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:23.820103 32244 net.cpp:86] Creating Layer ip2
I0428 20:12:23.820108 32244 net.cpp:408] ip2 <- ip1
I0428 20:12:23.820114 32244 net.cpp:382] ip2 -> ip2
I0428 20:12:23.820261 32244 net.cpp:124] Setting up ip2
I0428 20:12:23.820269 32244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:23.820281 32244 net.cpp:139] Memory required for data: 10758800
I0428 20:12:23.820287 32244 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:23.820294 32244 net.cpp:86] Creating Layer relu2
I0428 20:12:23.820297 32244 net.cpp:408] relu2 <- ip2
I0428 20:12:23.820303 32244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:23.820483 32244 net.cpp:124] Setting up relu2
I0428 20:12:23.820493 32244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:23.820497 32244 net.cpp:139] Memory required for data: 10762800
I0428 20:12:23.820502 32244 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:12:23.820507 32244 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:12:23.820511 32244 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:12:23.820518 32244 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:12:23.820540 32244 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:12:23.820581 32244 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:12:23.820590 32244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:23.820593 32244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:23.820597 32244 net.cpp:139] Memory required for data: 10770800
I0428 20:12:23.820600 32244 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:23.820607 32244 net.cpp:86] Creating Layer accuracy
I0428 20:12:23.820611 32244 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:12:23.820616 32244 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:23.820622 32244 net.cpp:382] accuracy -> accuracy
I0428 20:12:23.820631 32244 net.cpp:124] Setting up accuracy
I0428 20:12:23.820637 32244 net.cpp:131] Top shape: (1)
I0428 20:12:23.820641 32244 net.cpp:139] Memory required for data: 10770804
I0428 20:12:23.820644 32244 layer_factory.hpp:77] Creating layer loss
I0428 20:12:23.820649 32244 net.cpp:86] Creating Layer loss
I0428 20:12:23.820653 32244 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:12:23.820657 32244 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:23.820662 32244 net.cpp:382] loss -> loss
I0428 20:12:23.820669 32244 layer_factory.hpp:77] Creating layer loss
I0428 20:12:23.820964 32244 net.cpp:124] Setting up loss
I0428 20:12:23.820977 32244 net.cpp:131] Top shape: (1)
I0428 20:12:23.820981 32244 net.cpp:134]     with loss weight 1
I0428 20:12:23.820989 32244 net.cpp:139] Memory required for data: 10770808
I0428 20:12:23.820994 32244 net.cpp:200] loss needs backward computation.
I0428 20:12:23.820998 32244 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:23.821003 32244 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:12:23.821007 32244 net.cpp:200] relu2 needs backward computation.
I0428 20:12:23.821009 32244 net.cpp:200] ip2 needs backward computation.
I0428 20:12:23.821013 32244 net.cpp:200] relu1 needs backward computation.
I0428 20:12:23.821017 32244 net.cpp:200] ip1 needs backward computation.
I0428 20:12:23.821020 32244 net.cpp:200] pool1 needs backward computation.
I0428 20:12:23.821024 32244 net.cpp:200] conv1 needs backward computation.
I0428 20:12:23.821027 32244 net.cpp:200] pool0 needs backward computation.
I0428 20:12:23.821032 32244 net.cpp:200] conv0 needs backward computation.
I0428 20:12:23.821035 32244 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:23.821039 32244 net.cpp:202] mnist does not need backward computation.
I0428 20:12:23.821043 32244 net.cpp:244] This network produces output accuracy
I0428 20:12:23.821051 32244 net.cpp:244] This network produces output loss
I0428 20:12:23.821063 32244 net.cpp:257] Network initialization done.
I0428 20:12:23.821106 32244 solver.cpp:56] Solver scaffolding done.
I0428 20:12:23.821482 32244 caffe.cpp:248] Starting Optimization
I0428 20:12:23.821490 32244 solver.cpp:273] Solving LeNet
I0428 20:12:23.821493 32244 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:23.822343 32244 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:23.830282 32244 blocking_queue.cpp:49] Waiting for data
I0428 20:12:23.898886 32251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:23.899633 32244 solver.cpp:398]     Test net output #0: accuracy = 0.1027
I0428 20:12:23.899652 32244 solver.cpp:398]     Test net output #1: loss = 2.33636 (* 1 = 2.33636 loss)
I0428 20:12:23.904507 32244 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829863s/100 iters), loss = 2.333
I0428 20:12:23.904532 32244 solver.cpp:238]     Train net output #0: loss = 2.333 (* 1 = 2.333 loss)
I0428 20:12:23.904543 32244 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:24.062186 32244 solver.cpp:219] Iteration 100 (634.371 iter/s, 0.157637s/100 iters), loss = 0.560463
I0428 20:12:24.062212 32244 solver.cpp:238]     Train net output #0: loss = 0.560463 (* 1 = 0.560463 loss)
I0428 20:12:24.062219 32244 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:24.220034 32244 solver.cpp:219] Iteration 200 (633.683 iter/s, 0.157808s/100 iters), loss = 0.256066
I0428 20:12:24.220077 32244 solver.cpp:238]     Train net output #0: loss = 0.256066 (* 1 = 0.256066 loss)
I0428 20:12:24.220082 32244 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:24.377745 32244 solver.cpp:219] Iteration 300 (634.223 iter/s, 0.157673s/100 iters), loss = 0.46356
I0428 20:12:24.377774 32244 solver.cpp:238]     Train net output #0: loss = 0.46356 (* 1 = 0.46356 loss)
I0428 20:12:24.377781 32244 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:24.537106 32244 solver.cpp:219] Iteration 400 (627.684 iter/s, 0.159316s/100 iters), loss = 0.24638
I0428 20:12:24.537142 32244 solver.cpp:238]     Train net output #0: loss = 0.24638 (* 1 = 0.24638 loss)
I0428 20:12:24.537148 32244 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:24.691020 32244 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:24.755476 32251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:24.757789 32244 solver.cpp:398]     Test net output #0: accuracy = 0.8772
I0428 20:12:24.757827 32244 solver.cpp:398]     Test net output #1: loss = 0.319275 (* 1 = 0.319275 loss)
I0428 20:12:24.759263 32244 solver.cpp:219] Iteration 500 (450.234 iter/s, 0.222106s/100 iters), loss = 0.35675
I0428 20:12:24.759285 32244 solver.cpp:238]     Train net output #0: loss = 0.35675 (* 1 = 0.35675 loss)
I0428 20:12:24.759292 32244 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:24.918440 32244 solver.cpp:219] Iteration 600 (628.37 iter/s, 0.159142s/100 iters), loss = 0.383391
I0428 20:12:24.918470 32244 solver.cpp:238]     Train net output #0: loss = 0.383391 (* 1 = 0.383391 loss)
I0428 20:12:24.918478 32244 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:25.080724 32244 solver.cpp:219] Iteration 700 (616.373 iter/s, 0.162239s/100 iters), loss = 0.362333
I0428 20:12:25.080751 32244 solver.cpp:238]     Train net output #0: loss = 0.362332 (* 1 = 0.362332 loss)
I0428 20:12:25.080759 32244 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:25.239444 32244 solver.cpp:219] Iteration 800 (630.195 iter/s, 0.158681s/100 iters), loss = 0.510344
I0428 20:12:25.239485 32244 solver.cpp:238]     Train net output #0: loss = 0.510344 (* 1 = 0.510344 loss)
I0428 20:12:25.239491 32244 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:25.398365 32244 solver.cpp:219] Iteration 900 (629.399 iter/s, 0.158882s/100 iters), loss = 0.428812
I0428 20:12:25.398402 32244 solver.cpp:238]     Train net output #0: loss = 0.428812 (* 1 = 0.428812 loss)
I0428 20:12:25.398409 32244 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:25.450196 32250 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:25.555635 32244 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:25.558925 32244 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:25.560550 32244 solver.cpp:311] Iteration 1000, loss = 0.367942
I0428 20:12:25.560566 32244 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:25.629799 32251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:25.630549 32244 solver.cpp:398]     Test net output #0: accuracy = 0.8848
I0428 20:12:25.630570 32244 solver.cpp:398]     Test net output #1: loss = 0.293551 (* 1 = 0.293551 loss)
I0428 20:12:25.630576 32244 solver.cpp:316] Optimization Done.
I0428 20:12:25.630580 32244 caffe.cpp:259] Optimization Done.
