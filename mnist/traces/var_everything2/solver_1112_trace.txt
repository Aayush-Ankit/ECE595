I0428 20:09:33.360847 31649 caffe.cpp:218] Using GPUs 0
I0428 20:09:33.389947 31649 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:33.830667 31649 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1112.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:33.830828 31649 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1112.prototxt
I0428 20:09:33.831202 31649 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:33.831233 31649 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:33.831311 31649 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:33.831374 31649 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:33.831457 31649 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:33.831476 31649 net.cpp:86] Creating Layer mnist
I0428 20:09:33.831483 31649 net.cpp:382] mnist -> data
I0428 20:09:33.831501 31649 net.cpp:382] mnist -> label
I0428 20:09:33.832489 31649 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:33.834720 31649 net.cpp:124] Setting up mnist
I0428 20:09:33.834751 31649 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:33.834756 31649 net.cpp:131] Top shape: 64 (64)
I0428 20:09:33.834760 31649 net.cpp:139] Memory required for data: 200960
I0428 20:09:33.834765 31649 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:33.834780 31649 net.cpp:86] Creating Layer conv0
I0428 20:09:33.834797 31649 net.cpp:408] conv0 <- data
I0428 20:09:33.834808 31649 net.cpp:382] conv0 -> conv0
I0428 20:09:34.073832 31649 net.cpp:124] Setting up conv0
I0428 20:09:34.073873 31649 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:34.073878 31649 net.cpp:139] Memory required for data: 3887360
I0428 20:09:34.073894 31649 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:34.073922 31649 net.cpp:86] Creating Layer pool0
I0428 20:09:34.073926 31649 net.cpp:408] pool0 <- conv0
I0428 20:09:34.073932 31649 net.cpp:382] pool0 -> pool0
I0428 20:09:34.073976 31649 net.cpp:124] Setting up pool0
I0428 20:09:34.073984 31649 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:34.073987 31649 net.cpp:139] Memory required for data: 4808960
I0428 20:09:34.073989 31649 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:34.074002 31649 net.cpp:86] Creating Layer conv1
I0428 20:09:34.074004 31649 net.cpp:408] conv1 <- pool0
I0428 20:09:34.074009 31649 net.cpp:382] conv1 -> conv1
I0428 20:09:34.076907 31649 net.cpp:124] Setting up conv1
I0428 20:09:34.076936 31649 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:34.076941 31649 net.cpp:139] Memory required for data: 5218560
I0428 20:09:34.076948 31649 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:34.076956 31649 net.cpp:86] Creating Layer pool1
I0428 20:09:34.076959 31649 net.cpp:408] pool1 <- conv1
I0428 20:09:34.076964 31649 net.cpp:382] pool1 -> pool1
I0428 20:09:34.077015 31649 net.cpp:124] Setting up pool1
I0428 20:09:34.077021 31649 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:34.077024 31649 net.cpp:139] Memory required for data: 5320960
I0428 20:09:34.077028 31649 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:34.077033 31649 net.cpp:86] Creating Layer ip1
I0428 20:09:34.077036 31649 net.cpp:408] ip1 <- pool1
I0428 20:09:34.077041 31649 net.cpp:382] ip1 -> ip1
I0428 20:09:34.078083 31649 net.cpp:124] Setting up ip1
I0428 20:09:34.078096 31649 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:34.078116 31649 net.cpp:139] Memory required for data: 5323520
I0428 20:09:34.078125 31649 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:34.078131 31649 net.cpp:86] Creating Layer relu1
I0428 20:09:34.078135 31649 net.cpp:408] relu1 <- ip1
I0428 20:09:34.078138 31649 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:34.078353 31649 net.cpp:124] Setting up relu1
I0428 20:09:34.078362 31649 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:34.078366 31649 net.cpp:139] Memory required for data: 5326080
I0428 20:09:34.078368 31649 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:34.078375 31649 net.cpp:86] Creating Layer ip2
I0428 20:09:34.078378 31649 net.cpp:408] ip2 <- ip1
I0428 20:09:34.078383 31649 net.cpp:382] ip2 -> ip2
I0428 20:09:34.078482 31649 net.cpp:124] Setting up ip2
I0428 20:09:34.078490 31649 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:34.078492 31649 net.cpp:139] Memory required for data: 5338880
I0428 20:09:34.078497 31649 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:34.078503 31649 net.cpp:86] Creating Layer relu2
I0428 20:09:34.078506 31649 net.cpp:408] relu2 <- ip2
I0428 20:09:34.078511 31649 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:34.079289 31649 net.cpp:124] Setting up relu2
I0428 20:09:34.079301 31649 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:34.079321 31649 net.cpp:139] Memory required for data: 5351680
I0428 20:09:34.079325 31649 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:34.079332 31649 net.cpp:86] Creating Layer ip3
I0428 20:09:34.079350 31649 net.cpp:408] ip3 <- ip2
I0428 20:09:34.079356 31649 net.cpp:382] ip3 -> ip3
I0428 20:09:34.079460 31649 net.cpp:124] Setting up ip3
I0428 20:09:34.079468 31649 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:34.079470 31649 net.cpp:139] Memory required for data: 5354240
I0428 20:09:34.079479 31649 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:34.079484 31649 net.cpp:86] Creating Layer relu3
I0428 20:09:34.079488 31649 net.cpp:408] relu3 <- ip3
I0428 20:09:34.079491 31649 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:34.079676 31649 net.cpp:124] Setting up relu3
I0428 20:09:34.079684 31649 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:34.079687 31649 net.cpp:139] Memory required for data: 5356800
I0428 20:09:34.079690 31649 layer_factory.hpp:77] Creating layer loss
I0428 20:09:34.079695 31649 net.cpp:86] Creating Layer loss
I0428 20:09:34.079699 31649 net.cpp:408] loss <- ip3
I0428 20:09:34.079702 31649 net.cpp:408] loss <- label
I0428 20:09:34.079708 31649 net.cpp:382] loss -> loss
I0428 20:09:34.079735 31649 layer_factory.hpp:77] Creating layer loss
I0428 20:09:34.079953 31649 net.cpp:124] Setting up loss
I0428 20:09:34.079962 31649 net.cpp:131] Top shape: (1)
I0428 20:09:34.079967 31649 net.cpp:134]     with loss weight 1
I0428 20:09:34.079979 31649 net.cpp:139] Memory required for data: 5356804
I0428 20:09:34.079982 31649 net.cpp:200] loss needs backward computation.
I0428 20:09:34.079987 31649 net.cpp:200] relu3 needs backward computation.
I0428 20:09:34.079989 31649 net.cpp:200] ip3 needs backward computation.
I0428 20:09:34.079993 31649 net.cpp:200] relu2 needs backward computation.
I0428 20:09:34.079994 31649 net.cpp:200] ip2 needs backward computation.
I0428 20:09:34.079998 31649 net.cpp:200] relu1 needs backward computation.
I0428 20:09:34.080000 31649 net.cpp:200] ip1 needs backward computation.
I0428 20:09:34.080003 31649 net.cpp:200] pool1 needs backward computation.
I0428 20:09:34.080006 31649 net.cpp:200] conv1 needs backward computation.
I0428 20:09:34.080009 31649 net.cpp:200] pool0 needs backward computation.
I0428 20:09:34.080013 31649 net.cpp:200] conv0 needs backward computation.
I0428 20:09:34.080015 31649 net.cpp:202] mnist does not need backward computation.
I0428 20:09:34.080018 31649 net.cpp:244] This network produces output loss
I0428 20:09:34.080027 31649 net.cpp:257] Network initialization done.
I0428 20:09:34.080343 31649 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1112.prototxt
I0428 20:09:34.080379 31649 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:34.080479 31649 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:34.080555 31649 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:34.080600 31649 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:34.080611 31649 net.cpp:86] Creating Layer mnist
I0428 20:09:34.080615 31649 net.cpp:382] mnist -> data
I0428 20:09:34.080623 31649 net.cpp:382] mnist -> label
I0428 20:09:34.080708 31649 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:34.082718 31649 net.cpp:124] Setting up mnist
I0428 20:09:34.082731 31649 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:34.082752 31649 net.cpp:131] Top shape: 100 (100)
I0428 20:09:34.082756 31649 net.cpp:139] Memory required for data: 314000
I0428 20:09:34.082775 31649 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:34.082782 31649 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:34.082785 31649 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:34.082790 31649 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:34.082798 31649 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:34.082896 31649 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:34.082904 31649 net.cpp:131] Top shape: 100 (100)
I0428 20:09:34.082908 31649 net.cpp:131] Top shape: 100 (100)
I0428 20:09:34.082911 31649 net.cpp:139] Memory required for data: 314800
I0428 20:09:34.082914 31649 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:34.082923 31649 net.cpp:86] Creating Layer conv0
I0428 20:09:34.082927 31649 net.cpp:408] conv0 <- data
I0428 20:09:34.082932 31649 net.cpp:382] conv0 -> conv0
I0428 20:09:34.084615 31649 net.cpp:124] Setting up conv0
I0428 20:09:34.084645 31649 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:34.084650 31649 net.cpp:139] Memory required for data: 6074800
I0428 20:09:34.084657 31649 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:34.084664 31649 net.cpp:86] Creating Layer pool0
I0428 20:09:34.084667 31649 net.cpp:408] pool0 <- conv0
I0428 20:09:34.084672 31649 net.cpp:382] pool0 -> pool0
I0428 20:09:34.084708 31649 net.cpp:124] Setting up pool0
I0428 20:09:34.084714 31649 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:34.084717 31649 net.cpp:139] Memory required for data: 7514800
I0428 20:09:34.084720 31649 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:34.084728 31649 net.cpp:86] Creating Layer conv1
I0428 20:09:34.084731 31649 net.cpp:408] conv1 <- pool0
I0428 20:09:34.084736 31649 net.cpp:382] conv1 -> conv1
I0428 20:09:34.087132 31649 net.cpp:124] Setting up conv1
I0428 20:09:34.087162 31649 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:34.087167 31649 net.cpp:139] Memory required for data: 8154800
I0428 20:09:34.087175 31649 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:34.087183 31649 net.cpp:86] Creating Layer pool1
I0428 20:09:34.087186 31649 net.cpp:408] pool1 <- conv1
I0428 20:09:34.087191 31649 net.cpp:382] pool1 -> pool1
I0428 20:09:34.087231 31649 net.cpp:124] Setting up pool1
I0428 20:09:34.087239 31649 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:34.087242 31649 net.cpp:139] Memory required for data: 8314800
I0428 20:09:34.087245 31649 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:34.087251 31649 net.cpp:86] Creating Layer ip1
I0428 20:09:34.087255 31649 net.cpp:408] ip1 <- pool1
I0428 20:09:34.087260 31649 net.cpp:382] ip1 -> ip1
I0428 20:09:34.087409 31649 net.cpp:124] Setting up ip1
I0428 20:09:34.087417 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.087431 31649 net.cpp:139] Memory required for data: 8318800
I0428 20:09:34.087438 31649 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:34.087443 31649 net.cpp:86] Creating Layer relu1
I0428 20:09:34.087446 31649 net.cpp:408] relu1 <- ip1
I0428 20:09:34.087450 31649 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:34.087643 31649 net.cpp:124] Setting up relu1
I0428 20:09:34.087653 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.087656 31649 net.cpp:139] Memory required for data: 8322800
I0428 20:09:34.087661 31649 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:34.087666 31649 net.cpp:86] Creating Layer ip2
I0428 20:09:34.087671 31649 net.cpp:408] ip2 <- ip1
I0428 20:09:34.087676 31649 net.cpp:382] ip2 -> ip2
I0428 20:09:34.087779 31649 net.cpp:124] Setting up ip2
I0428 20:09:34.087785 31649 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:34.087790 31649 net.cpp:139] Memory required for data: 8342800
I0428 20:09:34.087795 31649 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:34.087800 31649 net.cpp:86] Creating Layer relu2
I0428 20:09:34.087802 31649 net.cpp:408] relu2 <- ip2
I0428 20:09:34.087806 31649 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:34.087971 31649 net.cpp:124] Setting up relu2
I0428 20:09:34.087978 31649 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:34.087981 31649 net.cpp:139] Memory required for data: 8362800
I0428 20:09:34.087985 31649 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:34.087990 31649 net.cpp:86] Creating Layer ip3
I0428 20:09:34.087992 31649 net.cpp:408] ip3 <- ip2
I0428 20:09:34.087997 31649 net.cpp:382] ip3 -> ip3
I0428 20:09:34.088150 31649 net.cpp:124] Setting up ip3
I0428 20:09:34.088157 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.088160 31649 net.cpp:139] Memory required for data: 8366800
I0428 20:09:34.088168 31649 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:34.088173 31649 net.cpp:86] Creating Layer relu3
I0428 20:09:34.088176 31649 net.cpp:408] relu3 <- ip3
I0428 20:09:34.088182 31649 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:34.088994 31649 net.cpp:124] Setting up relu3
I0428 20:09:34.089006 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.089025 31649 net.cpp:139] Memory required for data: 8370800
I0428 20:09:34.089030 31649 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:34.089035 31649 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:34.089037 31649 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:34.089043 31649 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:34.089049 31649 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:34.089092 31649 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:34.089097 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.089102 31649 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:34.089103 31649 net.cpp:139] Memory required for data: 8378800
I0428 20:09:34.089107 31649 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:34.089112 31649 net.cpp:86] Creating Layer accuracy
I0428 20:09:34.089115 31649 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:34.089119 31649 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:34.089124 31649 net.cpp:382] accuracy -> accuracy
I0428 20:09:34.089131 31649 net.cpp:124] Setting up accuracy
I0428 20:09:34.089134 31649 net.cpp:131] Top shape: (1)
I0428 20:09:34.089138 31649 net.cpp:139] Memory required for data: 8378804
I0428 20:09:34.089140 31649 layer_factory.hpp:77] Creating layer loss
I0428 20:09:34.089144 31649 net.cpp:86] Creating Layer loss
I0428 20:09:34.089148 31649 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:34.089159 31649 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:34.089162 31649 net.cpp:382] loss -> loss
I0428 20:09:34.089169 31649 layer_factory.hpp:77] Creating layer loss
I0428 20:09:34.089458 31649 net.cpp:124] Setting up loss
I0428 20:09:34.089468 31649 net.cpp:131] Top shape: (1)
I0428 20:09:34.089488 31649 net.cpp:134]     with loss weight 1
I0428 20:09:34.089504 31649 net.cpp:139] Memory required for data: 8378808
I0428 20:09:34.089522 31649 net.cpp:200] loss needs backward computation.
I0428 20:09:34.089526 31649 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:34.089529 31649 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:34.089532 31649 net.cpp:200] relu3 needs backward computation.
I0428 20:09:34.089535 31649 net.cpp:200] ip3 needs backward computation.
I0428 20:09:34.089537 31649 net.cpp:200] relu2 needs backward computation.
I0428 20:09:34.089540 31649 net.cpp:200] ip2 needs backward computation.
I0428 20:09:34.089542 31649 net.cpp:200] relu1 needs backward computation.
I0428 20:09:34.089545 31649 net.cpp:200] ip1 needs backward computation.
I0428 20:09:34.089548 31649 net.cpp:200] pool1 needs backward computation.
I0428 20:09:34.089551 31649 net.cpp:200] conv1 needs backward computation.
I0428 20:09:34.089555 31649 net.cpp:200] pool0 needs backward computation.
I0428 20:09:34.089557 31649 net.cpp:200] conv0 needs backward computation.
I0428 20:09:34.089560 31649 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:34.089565 31649 net.cpp:202] mnist does not need backward computation.
I0428 20:09:34.089567 31649 net.cpp:244] This network produces output accuracy
I0428 20:09:34.089570 31649 net.cpp:244] This network produces output loss
I0428 20:09:34.089581 31649 net.cpp:257] Network initialization done.
I0428 20:09:34.089637 31649 solver.cpp:56] Solver scaffolding done.
I0428 20:09:34.090021 31649 caffe.cpp:248] Starting Optimization
I0428 20:09:34.090028 31649 solver.cpp:273] Solving LeNet
I0428 20:09:34.090040 31649 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:34.090875 31649 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:34.096674 31649 blocking_queue.cpp:49] Waiting for data
I0428 20:09:34.166158 31656 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:34.166790 31649 solver.cpp:398]     Test net output #0: accuracy = 0.1126
I0428 20:09:34.166824 31649 solver.cpp:398]     Test net output #1: loss = 2.2948 (* 1 = 2.2948 loss)
I0428 20:09:34.170475 31649 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803918s/100 iters), loss = 2.28196
I0428 20:09:34.170498 31649 solver.cpp:238]     Train net output #0: loss = 2.28196 (* 1 = 2.28196 loss)
I0428 20:09:34.170509 31649 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:34.272114 31649 solver.cpp:219] Iteration 100 (984.24 iter/s, 0.101601s/100 iters), loss = 0.657917
I0428 20:09:34.272156 31649 solver.cpp:238]     Train net output #0: loss = 0.657917 (* 1 = 0.657917 loss)
I0428 20:09:34.272162 31649 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:34.375239 31649 solver.cpp:219] Iteration 200 (970.024 iter/s, 0.10309s/100 iters), loss = 0.806894
I0428 20:09:34.375280 31649 solver.cpp:238]     Train net output #0: loss = 0.806894 (* 1 = 0.806894 loss)
I0428 20:09:34.375286 31649 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:34.479207 31649 solver.cpp:219] Iteration 300 (962.14 iter/s, 0.103935s/100 iters), loss = 0.488765
I0428 20:09:34.479246 31649 solver.cpp:238]     Train net output #0: loss = 0.488765 (* 1 = 0.488765 loss)
I0428 20:09:34.479254 31649 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:34.582617 31649 solver.cpp:219] Iteration 400 (967.325 iter/s, 0.103378s/100 iters), loss = 0.719625
I0428 20:09:34.582656 31649 solver.cpp:238]     Train net output #0: loss = 0.719625 (* 1 = 0.719625 loss)
I0428 20:09:34.582664 31649 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:34.683547 31649 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:34.738257 31656 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:34.739207 31649 solver.cpp:398]     Test net output #0: accuracy = 0.8729
I0428 20:09:34.739243 31649 solver.cpp:398]     Test net output #1: loss = 0.561243 (* 1 = 0.561243 loss)
I0428 20:09:34.740324 31649 solver.cpp:219] Iteration 500 (634.234 iter/s, 0.15767s/100 iters), loss = 0.648354
I0428 20:09:34.740376 31649 solver.cpp:238]     Train net output #0: loss = 0.648354 (* 1 = 0.648354 loss)
I0428 20:09:34.740384 31649 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:34.838562 31649 solver.cpp:219] Iteration 600 (1018.41 iter/s, 0.0981925s/100 iters), loss = 0.417709
I0428 20:09:34.838600 31649 solver.cpp:238]     Train net output #0: loss = 0.417709 (* 1 = 0.417709 loss)
I0428 20:09:34.838606 31649 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:34.938418 31649 solver.cpp:219] Iteration 700 (1001.76 iter/s, 0.0998247s/100 iters), loss = 0.824235
I0428 20:09:34.938459 31649 solver.cpp:238]     Train net output #0: loss = 0.824235 (* 1 = 0.824235 loss)
I0428 20:09:34.938467 31649 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:35.039302 31649 solver.cpp:219] Iteration 800 (991.575 iter/s, 0.10085s/100 iters), loss = 0.666868
I0428 20:09:35.039343 31649 solver.cpp:238]     Train net output #0: loss = 0.666868 (* 1 = 0.666868 loss)
I0428 20:09:35.039350 31649 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:35.137029 31649 solver.cpp:219] Iteration 900 (1023.63 iter/s, 0.0976916s/100 iters), loss = 0.303689
I0428 20:09:35.137069 31649 solver.cpp:238]     Train net output #0: loss = 0.303689 (* 1 = 0.303689 loss)
I0428 20:09:35.137075 31649 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:35.170107 31655 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:35.239511 31649 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:35.240721 31649 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:35.241499 31649 solver.cpp:311] Iteration 1000, loss = 0.375241
I0428 20:09:35.241516 31649 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:35.297557 31656 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:35.299451 31649 solver.cpp:398]     Test net output #0: accuracy = 0.8863
I0428 20:09:35.299470 31649 solver.cpp:398]     Test net output #1: loss = 0.29907 (* 1 = 0.29907 loss)
I0428 20:09:35.299487 31649 solver.cpp:316] Optimization Done.
I0428 20:09:35.299490 31649 caffe.cpp:259] Optimization Done.
