I0428 19:51:03.043025 27183 caffe.cpp:218] Using GPUs 0
I0428 19:51:03.080771 27183 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:03.591600 27183 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test622.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:03.591742 27183 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test622.prototxt
I0428 19:51:03.592149 27183 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:03.592165 27183 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:03.592263 27183 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:03.592339 27183 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:03.592442 27183 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:03.592464 27183 net.cpp:86] Creating Layer mnist
I0428 19:51:03.592473 27183 net.cpp:382] mnist -> data
I0428 19:51:03.592495 27183 net.cpp:382] mnist -> label
I0428 19:51:03.593595 27183 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:03.596042 27183 net.cpp:124] Setting up mnist
I0428 19:51:03.596060 27183 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:03.596066 27183 net.cpp:131] Top shape: 64 (64)
I0428 19:51:03.596071 27183 net.cpp:139] Memory required for data: 200960
I0428 19:51:03.596077 27183 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:03.596093 27183 net.cpp:86] Creating Layer conv0
I0428 19:51:03.596113 27183 net.cpp:408] conv0 <- data
I0428 19:51:03.596125 27183 net.cpp:382] conv0 -> conv0
I0428 19:51:03.845347 27183 net.cpp:124] Setting up conv0
I0428 19:51:03.845373 27183 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:03.845377 27183 net.cpp:139] Memory required for data: 938240
I0428 19:51:03.845391 27183 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:03.845402 27183 net.cpp:86] Creating Layer pool0
I0428 19:51:03.845407 27183 net.cpp:408] pool0 <- conv0
I0428 19:51:03.845412 27183 net.cpp:382] pool0 -> pool0
I0428 19:51:03.845487 27183 net.cpp:124] Setting up pool0
I0428 19:51:03.845492 27183 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:03.845495 27183 net.cpp:139] Memory required for data: 1122560
I0428 19:51:03.845499 27183 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:03.845508 27183 net.cpp:86] Creating Layer conv1
I0428 19:51:03.845512 27183 net.cpp:408] conv1 <- pool0
I0428 19:51:03.845516 27183 net.cpp:382] conv1 -> conv1
I0428 19:51:03.848294 27183 net.cpp:124] Setting up conv1
I0428 19:51:03.848309 27183 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:51:03.848312 27183 net.cpp:139] Memory required for data: 1286400
I0428 19:51:03.848320 27183 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:03.848327 27183 net.cpp:86] Creating Layer pool1
I0428 19:51:03.848346 27183 net.cpp:408] pool1 <- conv1
I0428 19:51:03.848351 27183 net.cpp:382] pool1 -> pool1
I0428 19:51:03.848388 27183 net.cpp:124] Setting up pool1
I0428 19:51:03.848393 27183 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:51:03.848397 27183 net.cpp:139] Memory required for data: 1327360
I0428 19:51:03.848399 27183 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:03.848407 27183 net.cpp:86] Creating Layer ip1
I0428 19:51:03.848409 27183 net.cpp:408] ip1 <- pool1
I0428 19:51:03.848413 27183 net.cpp:382] ip1 -> ip1
I0428 19:51:03.849434 27183 net.cpp:124] Setting up ip1
I0428 19:51:03.849447 27183 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:03.849452 27183 net.cpp:139] Memory required for data: 1340160
I0428 19:51:03.849459 27183 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:03.849465 27183 net.cpp:86] Creating Layer relu1
I0428 19:51:03.849469 27183 net.cpp:408] relu1 <- ip1
I0428 19:51:03.849473 27183 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:03.849640 27183 net.cpp:124] Setting up relu1
I0428 19:51:03.849649 27183 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:03.849653 27183 net.cpp:139] Memory required for data: 1352960
I0428 19:51:03.849656 27183 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:03.849663 27183 net.cpp:86] Creating Layer ip2
I0428 19:51:03.849665 27183 net.cpp:408] ip2 <- ip1
I0428 19:51:03.849670 27183 net.cpp:382] ip2 -> ip2
I0428 19:51:03.849820 27183 net.cpp:124] Setting up ip2
I0428 19:51:03.849828 27183 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:03.849830 27183 net.cpp:139] Memory required for data: 1365760
I0428 19:51:03.849835 27183 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:03.849841 27183 net.cpp:86] Creating Layer relu2
I0428 19:51:03.849844 27183 net.cpp:408] relu2 <- ip2
I0428 19:51:03.849848 27183 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:03.850594 27183 net.cpp:124] Setting up relu2
I0428 19:51:03.850606 27183 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:03.850610 27183 net.cpp:139] Memory required for data: 1378560
I0428 19:51:03.850613 27183 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:03.850620 27183 net.cpp:86] Creating Layer ip3
I0428 19:51:03.850623 27183 net.cpp:408] ip3 <- ip2
I0428 19:51:03.850630 27183 net.cpp:382] ip3 -> ip3
I0428 19:51:03.850739 27183 net.cpp:124] Setting up ip3
I0428 19:51:03.850746 27183 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:03.850749 27183 net.cpp:139] Memory required for data: 1381120
I0428 19:51:03.850756 27183 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:03.850761 27183 net.cpp:86] Creating Layer relu3
I0428 19:51:03.850764 27183 net.cpp:408] relu3 <- ip3
I0428 19:51:03.850783 27183 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:03.850936 27183 net.cpp:124] Setting up relu3
I0428 19:51:03.850944 27183 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:03.850947 27183 net.cpp:139] Memory required for data: 1383680
I0428 19:51:03.850950 27183 layer_factory.hpp:77] Creating layer loss
I0428 19:51:03.850956 27183 net.cpp:86] Creating Layer loss
I0428 19:51:03.850960 27183 net.cpp:408] loss <- ip3
I0428 19:51:03.850963 27183 net.cpp:408] loss <- label
I0428 19:51:03.850968 27183 net.cpp:382] loss -> loss
I0428 19:51:03.850999 27183 layer_factory.hpp:77] Creating layer loss
I0428 19:51:03.851212 27183 net.cpp:124] Setting up loss
I0428 19:51:03.851220 27183 net.cpp:131] Top shape: (1)
I0428 19:51:03.851223 27183 net.cpp:134]     with loss weight 1
I0428 19:51:03.851238 27183 net.cpp:139] Memory required for data: 1383684
I0428 19:51:03.851241 27183 net.cpp:200] loss needs backward computation.
I0428 19:51:03.851244 27183 net.cpp:200] relu3 needs backward computation.
I0428 19:51:03.851248 27183 net.cpp:200] ip3 needs backward computation.
I0428 19:51:03.851251 27183 net.cpp:200] relu2 needs backward computation.
I0428 19:51:03.851253 27183 net.cpp:200] ip2 needs backward computation.
I0428 19:51:03.851256 27183 net.cpp:200] relu1 needs backward computation.
I0428 19:51:03.851258 27183 net.cpp:200] ip1 needs backward computation.
I0428 19:51:03.851261 27183 net.cpp:200] pool1 needs backward computation.
I0428 19:51:03.851264 27183 net.cpp:200] conv1 needs backward computation.
I0428 19:51:03.851267 27183 net.cpp:200] pool0 needs backward computation.
I0428 19:51:03.851270 27183 net.cpp:200] conv0 needs backward computation.
I0428 19:51:03.851274 27183 net.cpp:202] mnist does not need backward computation.
I0428 19:51:03.851276 27183 net.cpp:244] This network produces output loss
I0428 19:51:03.851285 27183 net.cpp:257] Network initialization done.
I0428 19:51:03.851608 27183 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test622.prototxt
I0428 19:51:03.851634 27183 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:03.851723 27183 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:03.851800 27183 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:03.851845 27183 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:03.851871 27183 net.cpp:86] Creating Layer mnist
I0428 19:51:03.851889 27183 net.cpp:382] mnist -> data
I0428 19:51:03.851897 27183 net.cpp:382] mnist -> label
I0428 19:51:03.851974 27183 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:03.853893 27183 net.cpp:124] Setting up mnist
I0428 19:51:03.853924 27183 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:03.853929 27183 net.cpp:131] Top shape: 100 (100)
I0428 19:51:03.853931 27183 net.cpp:139] Memory required for data: 314000
I0428 19:51:03.853935 27183 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:03.853945 27183 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:03.853950 27183 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:03.853953 27183 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:03.853960 27183 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:03.854039 27183 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:03.854048 27183 net.cpp:131] Top shape: 100 (100)
I0428 19:51:03.854066 27183 net.cpp:131] Top shape: 100 (100)
I0428 19:51:03.854068 27183 net.cpp:139] Memory required for data: 314800
I0428 19:51:03.854071 27183 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:03.854095 27183 net.cpp:86] Creating Layer conv0
I0428 19:51:03.854099 27183 net.cpp:408] conv0 <- data
I0428 19:51:03.854104 27183 net.cpp:382] conv0 -> conv0
I0428 19:51:03.855604 27183 net.cpp:124] Setting up conv0
I0428 19:51:03.855618 27183 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:03.855621 27183 net.cpp:139] Memory required for data: 1466800
I0428 19:51:03.855644 27183 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:03.855651 27183 net.cpp:86] Creating Layer pool0
I0428 19:51:03.855654 27183 net.cpp:408] pool0 <- conv0
I0428 19:51:03.855659 27183 net.cpp:382] pool0 -> pool0
I0428 19:51:03.855708 27183 net.cpp:124] Setting up pool0
I0428 19:51:03.855715 27183 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:03.855718 27183 net.cpp:139] Memory required for data: 1754800
I0428 19:51:03.855721 27183 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:03.855731 27183 net.cpp:86] Creating Layer conv1
I0428 19:51:03.855733 27183 net.cpp:408] conv1 <- pool0
I0428 19:51:03.855738 27183 net.cpp:382] conv1 -> conv1
I0428 19:51:03.857791 27183 net.cpp:124] Setting up conv1
I0428 19:51:03.857805 27183 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:51:03.857808 27183 net.cpp:139] Memory required for data: 2010800
I0428 19:51:03.857832 27183 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:03.857839 27183 net.cpp:86] Creating Layer pool1
I0428 19:51:03.857842 27183 net.cpp:408] pool1 <- conv1
I0428 19:51:03.857847 27183 net.cpp:382] pool1 -> pool1
I0428 19:51:03.857923 27183 net.cpp:124] Setting up pool1
I0428 19:51:03.857930 27183 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:51:03.857933 27183 net.cpp:139] Memory required for data: 2074800
I0428 19:51:03.857938 27183 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:03.857944 27183 net.cpp:86] Creating Layer ip1
I0428 19:51:03.857947 27183 net.cpp:408] ip1 <- pool1
I0428 19:51:03.857951 27183 net.cpp:382] ip1 -> ip1
I0428 19:51:03.858103 27183 net.cpp:124] Setting up ip1
I0428 19:51:03.858111 27183 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:03.858125 27183 net.cpp:139] Memory required for data: 2094800
I0428 19:51:03.858132 27183 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:03.858137 27183 net.cpp:86] Creating Layer relu1
I0428 19:51:03.858141 27183 net.cpp:408] relu1 <- ip1
I0428 19:51:03.858145 27183 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:03.858335 27183 net.cpp:124] Setting up relu1
I0428 19:51:03.858343 27183 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:03.858347 27183 net.cpp:139] Memory required for data: 2114800
I0428 19:51:03.858350 27183 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:03.858357 27183 net.cpp:86] Creating Layer ip2
I0428 19:51:03.858361 27183 net.cpp:408] ip2 <- ip1
I0428 19:51:03.858366 27183 net.cpp:382] ip2 -> ip2
I0428 19:51:03.858515 27183 net.cpp:124] Setting up ip2
I0428 19:51:03.858526 27183 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:03.858530 27183 net.cpp:139] Memory required for data: 2134800
I0428 19:51:03.858535 27183 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:03.858539 27183 net.cpp:86] Creating Layer relu2
I0428 19:51:03.858542 27183 net.cpp:408] relu2 <- ip2
I0428 19:51:03.858546 27183 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:03.858729 27183 net.cpp:124] Setting up relu2
I0428 19:51:03.858737 27183 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:03.858741 27183 net.cpp:139] Memory required for data: 2154800
I0428 19:51:03.858744 27183 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:03.858749 27183 net.cpp:86] Creating Layer ip3
I0428 19:51:03.858752 27183 net.cpp:408] ip3 <- ip2
I0428 19:51:03.858757 27183 net.cpp:382] ip3 -> ip3
I0428 19:51:03.858875 27183 net.cpp:124] Setting up ip3
I0428 19:51:03.858885 27183 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:03.858887 27183 net.cpp:139] Memory required for data: 2158800
I0428 19:51:03.858894 27183 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:03.858899 27183 net.cpp:86] Creating Layer relu3
I0428 19:51:03.858902 27183 net.cpp:408] relu3 <- ip3
I0428 19:51:03.858907 27183 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:03.859719 27183 net.cpp:124] Setting up relu3
I0428 19:51:03.859732 27183 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:03.859735 27183 net.cpp:139] Memory required for data: 2162800
I0428 19:51:03.859738 27183 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:03.859745 27183 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:03.859747 27183 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:03.859753 27183 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:03.859760 27183 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:03.859797 27183 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:03.859803 27183 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:03.859807 27183 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:03.859809 27183 net.cpp:139] Memory required for data: 2170800
I0428 19:51:03.859812 27183 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:03.859817 27183 net.cpp:86] Creating Layer accuracy
I0428 19:51:03.859822 27183 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:03.859824 27183 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:03.859832 27183 net.cpp:382] accuracy -> accuracy
I0428 19:51:03.859838 27183 net.cpp:124] Setting up accuracy
I0428 19:51:03.859843 27183 net.cpp:131] Top shape: (1)
I0428 19:51:03.859844 27183 net.cpp:139] Memory required for data: 2170804
I0428 19:51:03.859848 27183 layer_factory.hpp:77] Creating layer loss
I0428 19:51:03.859851 27183 net.cpp:86] Creating Layer loss
I0428 19:51:03.859854 27183 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:03.859858 27183 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:03.859861 27183 net.cpp:382] loss -> loss
I0428 19:51:03.859868 27183 layer_factory.hpp:77] Creating layer loss
I0428 19:51:03.860097 27183 net.cpp:124] Setting up loss
I0428 19:51:03.860107 27183 net.cpp:131] Top shape: (1)
I0428 19:51:03.860110 27183 net.cpp:134]     with loss weight 1
I0428 19:51:03.860116 27183 net.cpp:139] Memory required for data: 2170808
I0428 19:51:03.860128 27183 net.cpp:200] loss needs backward computation.
I0428 19:51:03.860131 27183 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:03.860136 27183 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:03.860138 27183 net.cpp:200] relu3 needs backward computation.
I0428 19:51:03.860141 27183 net.cpp:200] ip3 needs backward computation.
I0428 19:51:03.860143 27183 net.cpp:200] relu2 needs backward computation.
I0428 19:51:03.860146 27183 net.cpp:200] ip2 needs backward computation.
I0428 19:51:03.860148 27183 net.cpp:200] relu1 needs backward computation.
I0428 19:51:03.860152 27183 net.cpp:200] ip1 needs backward computation.
I0428 19:51:03.860154 27183 net.cpp:200] pool1 needs backward computation.
I0428 19:51:03.860157 27183 net.cpp:200] conv1 needs backward computation.
I0428 19:51:03.860159 27183 net.cpp:200] pool0 needs backward computation.
I0428 19:51:03.860162 27183 net.cpp:200] conv0 needs backward computation.
I0428 19:51:03.860167 27183 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:03.860169 27183 net.cpp:202] mnist does not need backward computation.
I0428 19:51:03.860172 27183 net.cpp:244] This network produces output accuracy
I0428 19:51:03.860175 27183 net.cpp:244] This network produces output loss
I0428 19:51:03.860186 27183 net.cpp:257] Network initialization done.
I0428 19:51:03.860226 27183 solver.cpp:56] Solver scaffolding done.
I0428 19:51:03.860575 27183 caffe.cpp:248] Starting Optimization
I0428 19:51:03.860582 27183 solver.cpp:273] Solving LeNet
I0428 19:51:03.860585 27183 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:03.861426 27183 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:03.865792 27183 blocking_queue.cpp:49] Waiting for data
I0428 19:51:03.915923 27190 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:03.916450 27183 solver.cpp:398]     Test net output #0: accuracy = 0.0798
I0428 19:51:03.916503 27183 solver.cpp:398]     Test net output #1: loss = 2.33199 (* 1 = 2.33199 loss)
I0428 19:51:03.918365 27183 solver.cpp:219] Iteration 0 (0 iter/s, 0.0577516s/100 iters), loss = 2.32941
I0428 19:51:03.918390 27183 solver.cpp:238]     Train net output #0: loss = 2.32941 (* 1 = 2.32941 loss)
I0428 19:51:03.918402 27183 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:03.992719 27183 solver.cpp:219] Iteration 100 (1345.59 iter/s, 0.0743168s/100 iters), loss = 1.0329
I0428 19:51:03.992744 27183 solver.cpp:238]     Train net output #0: loss = 1.0329 (* 1 = 1.0329 loss)
I0428 19:51:03.992751 27183 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:04.066303 27183 solver.cpp:219] Iteration 200 (1359.62 iter/s, 0.0735498s/100 iters), loss = 0.940733
I0428 19:51:04.066328 27183 solver.cpp:238]     Train net output #0: loss = 0.940733 (* 1 = 0.940733 loss)
I0428 19:51:04.066334 27183 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:04.140045 27183 solver.cpp:219] Iteration 300 (1356.68 iter/s, 0.0737095s/100 iters), loss = 1.12897
I0428 19:51:04.140069 27183 solver.cpp:238]     Train net output #0: loss = 1.12897 (* 1 = 1.12897 loss)
I0428 19:51:04.140074 27183 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:04.212527 27183 solver.cpp:219] Iteration 400 (1380.28 iter/s, 0.072449s/100 iters), loss = 1.19261
I0428 19:51:04.212565 27183 solver.cpp:238]     Train net output #0: loss = 1.19261 (* 1 = 1.19261 loss)
I0428 19:51:04.212571 27183 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:04.284550 27183 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:04.329807 27190 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:04.330291 27183 solver.cpp:398]     Test net output #0: accuracy = 0.652
I0428 19:51:04.330323 27183 solver.cpp:398]     Test net output #1: loss = 0.969283 (* 1 = 0.969283 loss)
I0428 19:51:04.331209 27183 solver.cpp:219] Iteration 500 (842.831 iter/s, 0.118648s/100 iters), loss = 0.991188
I0428 19:51:04.331249 27183 solver.cpp:238]     Train net output #0: loss = 0.991188 (* 1 = 0.991188 loss)
I0428 19:51:04.331269 27183 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:04.415915 27183 solver.cpp:219] Iteration 600 (1181.22 iter/s, 0.0846585s/100 iters), loss = 0.615149
I0428 19:51:04.415940 27183 solver.cpp:238]     Train net output #0: loss = 0.615149 (* 1 = 0.615149 loss)
I0428 19:51:04.415946 27183 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:04.491611 27183 solver.cpp:219] Iteration 700 (1321.68 iter/s, 0.0756613s/100 iters), loss = 0.912811
I0428 19:51:04.491652 27183 solver.cpp:238]     Train net output #0: loss = 0.912811 (* 1 = 0.912811 loss)
I0428 19:51:04.491673 27183 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:04.573114 27183 solver.cpp:219] Iteration 800 (1227.47 iter/s, 0.0814684s/100 iters), loss = 0.909737
I0428 19:51:04.573154 27183 solver.cpp:238]     Train net output #0: loss = 0.909737 (* 1 = 0.909737 loss)
I0428 19:51:04.573177 27183 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:04.649590 27183 solver.cpp:219] Iteration 900 (1308.47 iter/s, 0.0764253s/100 iters), loss = 0.828637
I0428 19:51:04.649628 27183 solver.cpp:238]     Train net output #0: loss = 0.828637 (* 1 = 0.828637 loss)
I0428 19:51:04.649634 27183 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:04.673878 27189 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:04.721504 27183 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:04.722379 27183 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:04.722858 27183 solver.cpp:311] Iteration 1000, loss = 0.780432
I0428 19:51:04.722875 27183 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:04.787472 27190 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:04.787983 27183 solver.cpp:398]     Test net output #0: accuracy = 0.6863
I0428 19:51:04.788018 27183 solver.cpp:398]     Test net output #1: loss = 0.787574 (* 1 = 0.787574 loss)
I0428 19:51:04.788023 27183 solver.cpp:316] Optimization Done.
I0428 19:51:04.788027 27183 caffe.cpp:259] Optimization Done.
