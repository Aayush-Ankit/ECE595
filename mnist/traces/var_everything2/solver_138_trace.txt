I0428 19:31:56.854882 22716 caffe.cpp:218] Using GPUs 0
I0428 19:31:56.895972 22716 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:57.416309 22716 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test138.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:57.416481 22716 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test138.prototxt
I0428 19:31:57.416870 22716 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:57.416891 22716 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:57.416991 22716 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:57.417099 22716 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:57.417229 22716 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:57.417263 22716 net.cpp:86] Creating Layer mnist
I0428 19:31:57.417276 22716 net.cpp:382] mnist -> data
I0428 19:31:57.417306 22716 net.cpp:382] mnist -> label
I0428 19:31:57.418539 22716 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:57.421010 22716 net.cpp:124] Setting up mnist
I0428 19:31:57.421030 22716 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:57.421039 22716 net.cpp:131] Top shape: 64 (64)
I0428 19:31:57.421046 22716 net.cpp:139] Memory required for data: 200960
I0428 19:31:57.421056 22716 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:57.421082 22716 net.cpp:86] Creating Layer conv0
I0428 19:31:57.421093 22716 net.cpp:408] conv0 <- data
I0428 19:31:57.421116 22716 net.cpp:382] conv0 -> conv0
I0428 19:31:57.704073 22716 net.cpp:124] Setting up conv0
I0428 19:31:57.704102 22716 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:57.704109 22716 net.cpp:139] Memory required for data: 1675520
I0428 19:31:57.704129 22716 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:57.704147 22716 net.cpp:86] Creating Layer pool0
I0428 19:31:57.704167 22716 net.cpp:408] pool0 <- conv0
I0428 19:31:57.704177 22716 net.cpp:382] pool0 -> pool0
I0428 19:31:57.704236 22716 net.cpp:124] Setting up pool0
I0428 19:31:57.704246 22716 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:57.704251 22716 net.cpp:139] Memory required for data: 2044160
I0428 19:31:57.704255 22716 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:57.704267 22716 net.cpp:86] Creating Layer ip1
I0428 19:31:57.704272 22716 net.cpp:408] ip1 <- pool0
I0428 19:31:57.704280 22716 net.cpp:382] ip1 -> ip1
I0428 19:31:57.704586 22716 net.cpp:124] Setting up ip1
I0428 19:31:57.704596 22716 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:57.704601 22716 net.cpp:139] Memory required for data: 2050560
I0428 19:31:57.704612 22716 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:57.704625 22716 net.cpp:86] Creating Layer relu1
I0428 19:31:57.704632 22716 net.cpp:408] relu1 <- ip1
I0428 19:31:57.704639 22716 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:57.704802 22716 net.cpp:124] Setting up relu1
I0428 19:31:57.704818 22716 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:57.704823 22716 net.cpp:139] Memory required for data: 2056960
I0428 19:31:57.704829 22716 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:57.704838 22716 net.cpp:86] Creating Layer ip2
I0428 19:31:57.704844 22716 net.cpp:408] ip2 <- ip1
I0428 19:31:57.704852 22716 net.cpp:382] ip2 -> ip2
I0428 19:31:57.704952 22716 net.cpp:124] Setting up ip2
I0428 19:31:57.704962 22716 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:57.704965 22716 net.cpp:139] Memory required for data: 2059520
I0428 19:31:57.704977 22716 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:57.704985 22716 net.cpp:86] Creating Layer relu2
I0428 19:31:57.704991 22716 net.cpp:408] relu2 <- ip2
I0428 19:31:57.704998 22716 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:57.705773 22716 net.cpp:124] Setting up relu2
I0428 19:31:57.705802 22716 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:57.705808 22716 net.cpp:139] Memory required for data: 2062080
I0428 19:31:57.705813 22716 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:57.705826 22716 net.cpp:86] Creating Layer ip3
I0428 19:31:57.705832 22716 net.cpp:408] ip3 <- ip2
I0428 19:31:57.705840 22716 net.cpp:382] ip3 -> ip3
I0428 19:31:57.705957 22716 net.cpp:124] Setting up ip3
I0428 19:31:57.705966 22716 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:57.705972 22716 net.cpp:139] Memory required for data: 2064640
I0428 19:31:57.705981 22716 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:57.705991 22716 net.cpp:86] Creating Layer relu3
I0428 19:31:57.705997 22716 net.cpp:408] relu3 <- ip3
I0428 19:31:57.706004 22716 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:57.706157 22716 net.cpp:124] Setting up relu3
I0428 19:31:57.706167 22716 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:57.706172 22716 net.cpp:139] Memory required for data: 2067200
I0428 19:31:57.706176 22716 layer_factory.hpp:77] Creating layer loss
I0428 19:31:57.706185 22716 net.cpp:86] Creating Layer loss
I0428 19:31:57.706190 22716 net.cpp:408] loss <- ip3
I0428 19:31:57.706197 22716 net.cpp:408] loss <- label
I0428 19:31:57.706205 22716 net.cpp:382] loss -> loss
I0428 19:31:57.706228 22716 layer_factory.hpp:77] Creating layer loss
I0428 19:31:57.706465 22716 net.cpp:124] Setting up loss
I0428 19:31:57.706476 22716 net.cpp:131] Top shape: (1)
I0428 19:31:57.706481 22716 net.cpp:134]     with loss weight 1
I0428 19:31:57.706501 22716 net.cpp:139] Memory required for data: 2067204
I0428 19:31:57.706507 22716 net.cpp:200] loss needs backward computation.
I0428 19:31:57.706513 22716 net.cpp:200] relu3 needs backward computation.
I0428 19:31:57.706518 22716 net.cpp:200] ip3 needs backward computation.
I0428 19:31:57.706538 22716 net.cpp:200] relu2 needs backward computation.
I0428 19:31:57.706558 22716 net.cpp:200] ip2 needs backward computation.
I0428 19:31:57.706563 22716 net.cpp:200] relu1 needs backward computation.
I0428 19:31:57.706568 22716 net.cpp:200] ip1 needs backward computation.
I0428 19:31:57.706584 22716 net.cpp:200] pool0 needs backward computation.
I0428 19:31:57.706590 22716 net.cpp:200] conv0 needs backward computation.
I0428 19:31:57.706596 22716 net.cpp:202] mnist does not need backward computation.
I0428 19:31:57.706601 22716 net.cpp:244] This network produces output loss
I0428 19:31:57.706614 22716 net.cpp:257] Network initialization done.
I0428 19:31:57.706907 22716 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test138.prototxt
I0428 19:31:57.706939 22716 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:57.707021 22716 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:57.707111 22716 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:57.707167 22716 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:57.707185 22716 net.cpp:86] Creating Layer mnist
I0428 19:31:57.707191 22716 net.cpp:382] mnist -> data
I0428 19:31:57.707202 22716 net.cpp:382] mnist -> label
I0428 19:31:57.707331 22716 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:57.709436 22716 net.cpp:124] Setting up mnist
I0428 19:31:57.709451 22716 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:57.709460 22716 net.cpp:131] Top shape: 100 (100)
I0428 19:31:57.709465 22716 net.cpp:139] Memory required for data: 314000
I0428 19:31:57.709486 22716 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:57.709519 22716 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:57.709525 22716 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:57.709532 22716 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:57.709558 22716 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:57.709657 22716 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:57.709666 22716 net.cpp:131] Top shape: 100 (100)
I0428 19:31:57.709672 22716 net.cpp:131] Top shape: 100 (100)
I0428 19:31:57.709678 22716 net.cpp:139] Memory required for data: 314800
I0428 19:31:57.709697 22716 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:57.709710 22716 net.cpp:86] Creating Layer conv0
I0428 19:31:57.709717 22716 net.cpp:408] conv0 <- data
I0428 19:31:57.709727 22716 net.cpp:382] conv0 -> conv0
I0428 19:31:57.711256 22716 net.cpp:124] Setting up conv0
I0428 19:31:57.711271 22716 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:57.711277 22716 net.cpp:139] Memory required for data: 2618800
I0428 19:31:57.711290 22716 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:57.711299 22716 net.cpp:86] Creating Layer pool0
I0428 19:31:57.711307 22716 net.cpp:408] pool0 <- conv0
I0428 19:31:57.711314 22716 net.cpp:382] pool0 -> pool0
I0428 19:31:57.711355 22716 net.cpp:124] Setting up pool0
I0428 19:31:57.711364 22716 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:57.711369 22716 net.cpp:139] Memory required for data: 3194800
I0428 19:31:57.711374 22716 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:57.711385 22716 net.cpp:86] Creating Layer ip1
I0428 19:31:57.711390 22716 net.cpp:408] ip1 <- pool0
I0428 19:31:57.711397 22716 net.cpp:382] ip1 -> ip1
I0428 19:31:57.711691 22716 net.cpp:124] Setting up ip1
I0428 19:31:57.711701 22716 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:57.711721 22716 net.cpp:139] Memory required for data: 3204800
I0428 19:31:57.711732 22716 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:57.711741 22716 net.cpp:86] Creating Layer relu1
I0428 19:31:57.711746 22716 net.cpp:408] relu1 <- ip1
I0428 19:31:57.711755 22716 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:57.712074 22716 net.cpp:124] Setting up relu1
I0428 19:31:57.712085 22716 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:57.712091 22716 net.cpp:139] Memory required for data: 3214800
I0428 19:31:57.712110 22716 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:57.712134 22716 net.cpp:86] Creating Layer ip2
I0428 19:31:57.712139 22716 net.cpp:408] ip2 <- ip1
I0428 19:31:57.712148 22716 net.cpp:382] ip2 -> ip2
I0428 19:31:57.712252 22716 net.cpp:124] Setting up ip2
I0428 19:31:57.712262 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.712267 22716 net.cpp:139] Memory required for data: 3218800
I0428 19:31:57.712278 22716 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:57.712287 22716 net.cpp:86] Creating Layer relu2
I0428 19:31:57.712294 22716 net.cpp:408] relu2 <- ip2
I0428 19:31:57.712301 22716 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:57.713165 22716 net.cpp:124] Setting up relu2
I0428 19:31:57.713178 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.713183 22716 net.cpp:139] Memory required for data: 3222800
I0428 19:31:57.713189 22716 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:57.713201 22716 net.cpp:86] Creating Layer ip3
I0428 19:31:57.713207 22716 net.cpp:408] ip3 <- ip2
I0428 19:31:57.713215 22716 net.cpp:382] ip3 -> ip3
I0428 19:31:57.713369 22716 net.cpp:124] Setting up ip3
I0428 19:31:57.713379 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.713385 22716 net.cpp:139] Memory required for data: 3226800
I0428 19:31:57.713394 22716 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:57.713418 22716 net.cpp:86] Creating Layer relu3
I0428 19:31:57.713423 22716 net.cpp:408] relu3 <- ip3
I0428 19:31:57.713430 22716 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:57.713587 22716 net.cpp:124] Setting up relu3
I0428 19:31:57.713598 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.713603 22716 net.cpp:139] Memory required for data: 3230800
I0428 19:31:57.713608 22716 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:57.713614 22716 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:57.713620 22716 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:57.713629 22716 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:57.713639 22716 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:57.713680 22716 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:57.713687 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.713695 22716 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:57.713711 22716 net.cpp:139] Memory required for data: 3238800
I0428 19:31:57.713717 22716 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:57.713726 22716 net.cpp:86] Creating Layer accuracy
I0428 19:31:57.713731 22716 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:57.713737 22716 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:57.713745 22716 net.cpp:382] accuracy -> accuracy
I0428 19:31:57.713757 22716 net.cpp:124] Setting up accuracy
I0428 19:31:57.713765 22716 net.cpp:131] Top shape: (1)
I0428 19:31:57.713771 22716 net.cpp:139] Memory required for data: 3238804
I0428 19:31:57.713776 22716 layer_factory.hpp:77] Creating layer loss
I0428 19:31:57.713783 22716 net.cpp:86] Creating Layer loss
I0428 19:31:57.713789 22716 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:57.713796 22716 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:57.713804 22716 net.cpp:382] loss -> loss
I0428 19:31:57.713824 22716 layer_factory.hpp:77] Creating layer loss
I0428 19:31:57.714082 22716 net.cpp:124] Setting up loss
I0428 19:31:57.714094 22716 net.cpp:131] Top shape: (1)
I0428 19:31:57.714099 22716 net.cpp:134]     with loss weight 1
I0428 19:31:57.714109 22716 net.cpp:139] Memory required for data: 3238808
I0428 19:31:57.714115 22716 net.cpp:200] loss needs backward computation.
I0428 19:31:57.714123 22716 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:57.714128 22716 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:57.714134 22716 net.cpp:200] relu3 needs backward computation.
I0428 19:31:57.714139 22716 net.cpp:200] ip3 needs backward computation.
I0428 19:31:57.714144 22716 net.cpp:200] relu2 needs backward computation.
I0428 19:31:57.714150 22716 net.cpp:200] ip2 needs backward computation.
I0428 19:31:57.714155 22716 net.cpp:200] relu1 needs backward computation.
I0428 19:31:57.714160 22716 net.cpp:200] ip1 needs backward computation.
I0428 19:31:57.714166 22716 net.cpp:200] pool0 needs backward computation.
I0428 19:31:57.714171 22716 net.cpp:200] conv0 needs backward computation.
I0428 19:31:57.714179 22716 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:57.714184 22716 net.cpp:202] mnist does not need backward computation.
I0428 19:31:57.714190 22716 net.cpp:244] This network produces output accuracy
I0428 19:31:57.714195 22716 net.cpp:244] This network produces output loss
I0428 19:31:57.714210 22716 net.cpp:257] Network initialization done.
I0428 19:31:57.714278 22716 solver.cpp:56] Solver scaffolding done.
I0428 19:31:57.714536 22716 caffe.cpp:248] Starting Optimization
I0428 19:31:57.714545 22716 solver.cpp:273] Solving LeNet
I0428 19:31:57.714548 22716 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:57.714686 22716 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:57.719434 22716 blocking_queue.cpp:49] Waiting for data
I0428 19:31:57.790860 22723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:57.791390 22716 solver.cpp:398]     Test net output #0: accuracy = 0.0583
I0428 19:31:57.791411 22716 solver.cpp:398]     Test net output #1: loss = 2.32339 (* 1 = 2.32339 loss)
I0428 19:31:57.793889 22716 solver.cpp:219] Iteration 0 (-1.15984e-31 iter/s, 0.0793128s/100 iters), loss = 2.32834
I0428 19:31:57.793918 22716 solver.cpp:238]     Train net output #0: loss = 2.32834 (* 1 = 2.32834 loss)
I0428 19:31:57.793951 22716 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:57.867794 22716 solver.cpp:219] Iteration 100 (1353.73 iter/s, 0.0738701s/100 iters), loss = 1.26526
I0428 19:31:57.867821 22716 solver.cpp:238]     Train net output #0: loss = 1.26526 (* 1 = 1.26526 loss)
I0428 19:31:57.867846 22716 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:57.940560 22716 solver.cpp:219] Iteration 200 (1374.94 iter/s, 0.0727306s/100 iters), loss = 1.11458
I0428 19:31:57.940600 22716 solver.cpp:238]     Train net output #0: loss = 1.11458 (* 1 = 1.11458 loss)
I0428 19:31:57.940614 22716 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:58.010483 22716 solver.cpp:219] Iteration 300 (1431.01 iter/s, 0.0698807s/100 iters), loss = 0.543066
I0428 19:31:58.010515 22716 solver.cpp:238]     Train net output #0: loss = 0.543066 (* 1 = 0.543066 loss)
I0428 19:31:58.010527 22716 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:58.076567 22716 solver.cpp:219] Iteration 400 (1514.07 iter/s, 0.066047s/100 iters), loss = 0.673092
I0428 19:31:58.076596 22716 solver.cpp:238]     Train net output #0: loss = 0.673092 (* 1 = 0.673092 loss)
I0428 19:31:58.076606 22716 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:58.141600 22716 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:58.216065 22723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:58.216593 22716 solver.cpp:398]     Test net output #0: accuracy = 0.8631
I0428 19:31:58.216615 22716 solver.cpp:398]     Test net output #1: loss = 0.432061 (* 1 = 0.432061 loss)
I0428 19:31:58.217334 22716 solver.cpp:219] Iteration 500 (710.588 iter/s, 0.140728s/100 iters), loss = 0.562307
I0428 19:31:58.217363 22716 solver.cpp:238]     Train net output #0: loss = 0.562307 (* 1 = 0.562307 loss)
I0428 19:31:58.217382 22716 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:58.289234 22716 solver.cpp:219] Iteration 600 (1391.49 iter/s, 0.0718653s/100 iters), loss = 0.144652
I0428 19:31:58.289263 22716 solver.cpp:238]     Train net output #0: loss = 0.144652 (* 1 = 0.144652 loss)
I0428 19:31:58.289289 22716 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:58.362620 22716 solver.cpp:219] Iteration 700 (1363.32 iter/s, 0.0733502s/100 iters), loss = 0.358536
I0428 19:31:58.362650 22716 solver.cpp:238]     Train net output #0: loss = 0.358536 (* 1 = 0.358536 loss)
I0428 19:31:58.362676 22716 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:58.431897 22716 solver.cpp:219] Iteration 800 (1444.23 iter/s, 0.0692408s/100 iters), loss = 0.314201
I0428 19:31:58.431924 22716 solver.cpp:238]     Train net output #0: loss = 0.314201 (* 1 = 0.314201 loss)
I0428 19:31:58.431934 22716 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:58.496785 22716 solver.cpp:219] Iteration 900 (1541.88 iter/s, 0.0648561s/100 iters), loss = 0.338606
I0428 19:31:58.496834 22716 solver.cpp:238]     Train net output #0: loss = 0.338606 (* 1 = 0.338606 loss)
I0428 19:31:58.496845 22716 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:58.518666 22722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:58.561646 22716 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:58.562604 22716 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:58.563267 22716 solver.cpp:311] Iteration 1000, loss = 0.235322
I0428 19:31:58.563282 22716 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:58.639108 22723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:58.639645 22716 solver.cpp:398]     Test net output #0: accuracy = 0.9542
I0428 19:31:58.639667 22716 solver.cpp:398]     Test net output #1: loss = 0.153249 (* 1 = 0.153249 loss)
I0428 19:31:58.639675 22716 solver.cpp:316] Optimization Done.
I0428 19:31:58.639680 22716 caffe.cpp:259] Optimization Done.
