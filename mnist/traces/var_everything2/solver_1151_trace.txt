I0428 20:11:07.101269 32006 caffe.cpp:218] Using GPUs 0
I0428 20:11:07.142362 32006 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:07.642269 32006 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1151.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:07.642393 32006 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1151.prototxt
I0428 20:11:07.642745 32006 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:07.642763 32006 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:07.642853 32006 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:07.642918 32006 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:07.643000 32006 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:07.643023 32006 net.cpp:86] Creating Layer mnist
I0428 20:11:07.643028 32006 net.cpp:382] mnist -> data
I0428 20:11:07.643049 32006 net.cpp:382] mnist -> label
I0428 20:11:07.644008 32006 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:07.646203 32006 net.cpp:124] Setting up mnist
I0428 20:11:07.646219 32006 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:07.646224 32006 net.cpp:131] Top shape: 64 (64)
I0428 20:11:07.646226 32006 net.cpp:139] Memory required for data: 200960
I0428 20:11:07.646232 32006 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:07.646265 32006 net.cpp:86] Creating Layer conv0
I0428 20:11:07.646301 32006 net.cpp:408] conv0 <- data
I0428 20:11:07.646311 32006 net.cpp:382] conv0 -> conv0
I0428 20:11:07.876574 32006 net.cpp:124] Setting up conv0
I0428 20:11:07.876601 32006 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:07.876605 32006 net.cpp:139] Memory required for data: 3887360
I0428 20:11:07.876634 32006 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:07.876648 32006 net.cpp:86] Creating Layer pool0
I0428 20:11:07.876652 32006 net.cpp:408] pool0 <- conv0
I0428 20:11:07.876657 32006 net.cpp:382] pool0 -> pool0
I0428 20:11:07.876715 32006 net.cpp:124] Setting up pool0
I0428 20:11:07.876729 32006 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:07.876730 32006 net.cpp:139] Memory required for data: 4808960
I0428 20:11:07.876734 32006 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:07.876744 32006 net.cpp:86] Creating Layer conv1
I0428 20:11:07.876747 32006 net.cpp:408] conv1 <- pool0
I0428 20:11:07.876752 32006 net.cpp:382] conv1 -> conv1
I0428 20:11:07.878772 32006 net.cpp:124] Setting up conv1
I0428 20:11:07.878803 32006 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:07.878806 32006 net.cpp:139] Memory required for data: 5628160
I0428 20:11:07.878831 32006 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:07.878854 32006 net.cpp:86] Creating Layer pool1
I0428 20:11:07.878857 32006 net.cpp:408] pool1 <- conv1
I0428 20:11:07.878876 32006 net.cpp:382] pool1 -> pool1
I0428 20:11:07.878928 32006 net.cpp:124] Setting up pool1
I0428 20:11:07.878933 32006 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:07.878937 32006 net.cpp:139] Memory required for data: 5832960
I0428 20:11:07.878939 32006 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:07.878947 32006 net.cpp:86] Creating Layer ip1
I0428 20:11:07.878950 32006 net.cpp:408] ip1 <- pool1
I0428 20:11:07.878960 32006 net.cpp:382] ip1 -> ip1
I0428 20:11:07.879962 32006 net.cpp:124] Setting up ip1
I0428 20:11:07.879976 32006 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:07.879994 32006 net.cpp:139] Memory required for data: 5835520
I0428 20:11:07.880003 32006 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:07.880009 32006 net.cpp:86] Creating Layer relu1
I0428 20:11:07.880013 32006 net.cpp:408] relu1 <- ip1
I0428 20:11:07.880018 32006 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:07.880210 32006 net.cpp:124] Setting up relu1
I0428 20:11:07.880234 32006 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:07.880250 32006 net.cpp:139] Memory required for data: 5838080
I0428 20:11:07.880254 32006 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:07.880260 32006 net.cpp:86] Creating Layer ip2
I0428 20:11:07.880264 32006 net.cpp:408] ip2 <- ip1
I0428 20:11:07.880267 32006 net.cpp:382] ip2 -> ip2
I0428 20:11:07.880358 32006 net.cpp:124] Setting up ip2
I0428 20:11:07.880365 32006 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:07.880368 32006 net.cpp:139] Memory required for data: 5850880
I0428 20:11:07.880373 32006 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:07.880379 32006 net.cpp:86] Creating Layer relu2
I0428 20:11:07.880383 32006 net.cpp:408] relu2 <- ip2
I0428 20:11:07.880386 32006 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:07.881224 32006 net.cpp:124] Setting up relu2
I0428 20:11:07.881250 32006 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:07.881269 32006 net.cpp:139] Memory required for data: 5863680
I0428 20:11:07.881273 32006 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:07.881294 32006 net.cpp:86] Creating Layer ip3
I0428 20:11:07.881297 32006 net.cpp:408] ip3 <- ip2
I0428 20:11:07.881304 32006 net.cpp:382] ip3 -> ip3
I0428 20:11:07.881405 32006 net.cpp:124] Setting up ip3
I0428 20:11:07.881412 32006 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:07.881415 32006 net.cpp:139] Memory required for data: 5866240
I0428 20:11:07.881424 32006 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:07.881429 32006 net.cpp:86] Creating Layer relu3
I0428 20:11:07.881431 32006 net.cpp:408] relu3 <- ip3
I0428 20:11:07.881435 32006 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:07.881597 32006 net.cpp:124] Setting up relu3
I0428 20:11:07.881606 32006 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:07.881609 32006 net.cpp:139] Memory required for data: 5868800
I0428 20:11:07.881613 32006 layer_factory.hpp:77] Creating layer loss
I0428 20:11:07.881618 32006 net.cpp:86] Creating Layer loss
I0428 20:11:07.881638 32006 net.cpp:408] loss <- ip3
I0428 20:11:07.881640 32006 net.cpp:408] loss <- label
I0428 20:11:07.881645 32006 net.cpp:382] loss -> loss
I0428 20:11:07.881664 32006 layer_factory.hpp:77] Creating layer loss
I0428 20:11:07.881911 32006 net.cpp:124] Setting up loss
I0428 20:11:07.881922 32006 net.cpp:131] Top shape: (1)
I0428 20:11:07.881924 32006 net.cpp:134]     with loss weight 1
I0428 20:11:07.881939 32006 net.cpp:139] Memory required for data: 5868804
I0428 20:11:07.881943 32006 net.cpp:200] loss needs backward computation.
I0428 20:11:07.881947 32006 net.cpp:200] relu3 needs backward computation.
I0428 20:11:07.881949 32006 net.cpp:200] ip3 needs backward computation.
I0428 20:11:07.881952 32006 net.cpp:200] relu2 needs backward computation.
I0428 20:11:07.881954 32006 net.cpp:200] ip2 needs backward computation.
I0428 20:11:07.881958 32006 net.cpp:200] relu1 needs backward computation.
I0428 20:11:07.881959 32006 net.cpp:200] ip1 needs backward computation.
I0428 20:11:07.881963 32006 net.cpp:200] pool1 needs backward computation.
I0428 20:11:07.881965 32006 net.cpp:200] conv1 needs backward computation.
I0428 20:11:07.881968 32006 net.cpp:200] pool0 needs backward computation.
I0428 20:11:07.881970 32006 net.cpp:200] conv0 needs backward computation.
I0428 20:11:07.881974 32006 net.cpp:202] mnist does not need backward computation.
I0428 20:11:07.881976 32006 net.cpp:244] This network produces output loss
I0428 20:11:07.881985 32006 net.cpp:257] Network initialization done.
I0428 20:11:07.882385 32006 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1151.prototxt
I0428 20:11:07.882454 32006 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:07.882540 32006 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:07.882617 32006 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:07.882663 32006 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:07.882675 32006 net.cpp:86] Creating Layer mnist
I0428 20:11:07.882680 32006 net.cpp:382] mnist -> data
I0428 20:11:07.882688 32006 net.cpp:382] mnist -> label
I0428 20:11:07.882768 32006 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:07.885012 32006 net.cpp:124] Setting up mnist
I0428 20:11:07.885042 32006 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:07.885047 32006 net.cpp:131] Top shape: 100 (100)
I0428 20:11:07.885051 32006 net.cpp:139] Memory required for data: 314000
I0428 20:11:07.885054 32006 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:07.885061 32006 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:07.885064 32006 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:07.885071 32006 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:07.885078 32006 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:07.885133 32006 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:07.885143 32006 net.cpp:131] Top shape: 100 (100)
I0428 20:11:07.885145 32006 net.cpp:131] Top shape: 100 (100)
I0428 20:11:07.885159 32006 net.cpp:139] Memory required for data: 314800
I0428 20:11:07.885162 32006 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:07.885181 32006 net.cpp:86] Creating Layer conv0
I0428 20:11:07.885185 32006 net.cpp:408] conv0 <- data
I0428 20:11:07.885190 32006 net.cpp:382] conv0 -> conv0
I0428 20:11:07.886852 32006 net.cpp:124] Setting up conv0
I0428 20:11:07.886864 32006 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:07.886883 32006 net.cpp:139] Memory required for data: 6074800
I0428 20:11:07.886893 32006 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:07.886898 32006 net.cpp:86] Creating Layer pool0
I0428 20:11:07.886901 32006 net.cpp:408] pool0 <- conv0
I0428 20:11:07.886907 32006 net.cpp:382] pool0 -> pool0
I0428 20:11:07.886942 32006 net.cpp:124] Setting up pool0
I0428 20:11:07.886955 32006 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:07.886957 32006 net.cpp:139] Memory required for data: 7514800
I0428 20:11:07.886975 32006 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:07.886984 32006 net.cpp:86] Creating Layer conv1
I0428 20:11:07.886987 32006 net.cpp:408] conv1 <- pool0
I0428 20:11:07.886992 32006 net.cpp:382] conv1 -> conv1
I0428 20:11:07.888718 32006 net.cpp:124] Setting up conv1
I0428 20:11:07.888731 32006 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:07.888751 32006 net.cpp:139] Memory required for data: 8794800
I0428 20:11:07.888761 32006 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:07.888768 32006 net.cpp:86] Creating Layer pool1
I0428 20:11:07.888787 32006 net.cpp:408] pool1 <- conv1
I0428 20:11:07.888793 32006 net.cpp:382] pool1 -> pool1
I0428 20:11:07.888867 32006 net.cpp:124] Setting up pool1
I0428 20:11:07.888875 32006 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:07.888878 32006 net.cpp:139] Memory required for data: 9114800
I0428 20:11:07.888881 32006 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:07.888887 32006 net.cpp:86] Creating Layer ip1
I0428 20:11:07.888898 32006 net.cpp:408] ip1 <- pool1
I0428 20:11:07.888906 32006 net.cpp:382] ip1 -> ip1
I0428 20:11:07.889071 32006 net.cpp:124] Setting up ip1
I0428 20:11:07.889081 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.889111 32006 net.cpp:139] Memory required for data: 9118800
I0428 20:11:07.889132 32006 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:07.889139 32006 net.cpp:86] Creating Layer relu1
I0428 20:11:07.889143 32006 net.cpp:408] relu1 <- ip1
I0428 20:11:07.889147 32006 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:07.889320 32006 net.cpp:124] Setting up relu1
I0428 20:11:07.889329 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.889333 32006 net.cpp:139] Memory required for data: 9122800
I0428 20:11:07.889336 32006 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:07.889343 32006 net.cpp:86] Creating Layer ip2
I0428 20:11:07.889348 32006 net.cpp:408] ip2 <- ip1
I0428 20:11:07.889374 32006 net.cpp:382] ip2 -> ip2
I0428 20:11:07.889487 32006 net.cpp:124] Setting up ip2
I0428 20:11:07.889494 32006 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:07.889497 32006 net.cpp:139] Memory required for data: 9142800
I0428 20:11:07.889503 32006 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:07.889508 32006 net.cpp:86] Creating Layer relu2
I0428 20:11:07.889511 32006 net.cpp:408] relu2 <- ip2
I0428 20:11:07.889515 32006 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:07.889755 32006 net.cpp:124] Setting up relu2
I0428 20:11:07.889765 32006 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:07.889767 32006 net.cpp:139] Memory required for data: 9162800
I0428 20:11:07.889770 32006 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:07.889777 32006 net.cpp:86] Creating Layer ip3
I0428 20:11:07.889781 32006 net.cpp:408] ip3 <- ip2
I0428 20:11:07.889787 32006 net.cpp:382] ip3 -> ip3
I0428 20:11:07.889895 32006 net.cpp:124] Setting up ip3
I0428 20:11:07.889919 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.889924 32006 net.cpp:139] Memory required for data: 9166800
I0428 20:11:07.889931 32006 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:07.889936 32006 net.cpp:86] Creating Layer relu3
I0428 20:11:07.889940 32006 net.cpp:408] relu3 <- ip3
I0428 20:11:07.889943 32006 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:07.890781 32006 net.cpp:124] Setting up relu3
I0428 20:11:07.890792 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.890815 32006 net.cpp:139] Memory required for data: 9170800
I0428 20:11:07.890832 32006 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:07.890839 32006 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:07.890843 32006 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:07.890849 32006 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:07.890856 32006 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:07.890903 32006 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:07.890909 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.890913 32006 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:07.890916 32006 net.cpp:139] Memory required for data: 9178800
I0428 20:11:07.890919 32006 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:07.890930 32006 net.cpp:86] Creating Layer accuracy
I0428 20:11:07.890933 32006 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:07.890938 32006 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:07.890943 32006 net.cpp:382] accuracy -> accuracy
I0428 20:11:07.890949 32006 net.cpp:124] Setting up accuracy
I0428 20:11:07.890954 32006 net.cpp:131] Top shape: (1)
I0428 20:11:07.890955 32006 net.cpp:139] Memory required for data: 9178804
I0428 20:11:07.890959 32006 layer_factory.hpp:77] Creating layer loss
I0428 20:11:07.890964 32006 net.cpp:86] Creating Layer loss
I0428 20:11:07.890967 32006 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:07.890971 32006 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:07.890975 32006 net.cpp:382] loss -> loss
I0428 20:11:07.890980 32006 layer_factory.hpp:77] Creating layer loss
I0428 20:11:07.891252 32006 net.cpp:124] Setting up loss
I0428 20:11:07.891261 32006 net.cpp:131] Top shape: (1)
I0428 20:11:07.891264 32006 net.cpp:134]     with loss weight 1
I0428 20:11:07.891295 32006 net.cpp:139] Memory required for data: 9178808
I0428 20:11:07.891299 32006 net.cpp:200] loss needs backward computation.
I0428 20:11:07.891302 32006 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:07.891306 32006 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:07.891309 32006 net.cpp:200] relu3 needs backward computation.
I0428 20:11:07.891312 32006 net.cpp:200] ip3 needs backward computation.
I0428 20:11:07.891315 32006 net.cpp:200] relu2 needs backward computation.
I0428 20:11:07.891319 32006 net.cpp:200] ip2 needs backward computation.
I0428 20:11:07.891321 32006 net.cpp:200] relu1 needs backward computation.
I0428 20:11:07.891324 32006 net.cpp:200] ip1 needs backward computation.
I0428 20:11:07.891326 32006 net.cpp:200] pool1 needs backward computation.
I0428 20:11:07.891330 32006 net.cpp:200] conv1 needs backward computation.
I0428 20:11:07.891332 32006 net.cpp:200] pool0 needs backward computation.
I0428 20:11:07.891335 32006 net.cpp:200] conv0 needs backward computation.
I0428 20:11:07.891338 32006 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:07.891342 32006 net.cpp:202] mnist does not need backward computation.
I0428 20:11:07.891345 32006 net.cpp:244] This network produces output accuracy
I0428 20:11:07.891348 32006 net.cpp:244] This network produces output loss
I0428 20:11:07.891360 32006 net.cpp:257] Network initialization done.
I0428 20:11:07.891402 32006 solver.cpp:56] Solver scaffolding done.
I0428 20:11:07.891753 32006 caffe.cpp:248] Starting Optimization
I0428 20:11:07.891758 32006 solver.cpp:273] Solving LeNet
I0428 20:11:07.891762 32006 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:07.892717 32006 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:07.898512 32006 blocking_queue.cpp:49] Waiting for data
I0428 20:11:07.966073 32015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:07.966722 32006 solver.cpp:398]     Test net output #0: accuracy = 0.0658
I0428 20:11:07.966754 32006 solver.cpp:398]     Test net output #1: loss = 2.31693 (* 1 = 2.31693 loss)
I0428 20:11:07.970500 32006 solver.cpp:219] Iteration 0 (-1.33271e-31 iter/s, 0.0786903s/100 iters), loss = 2.31758
I0428 20:11:07.970541 32006 solver.cpp:238]     Train net output #0: loss = 2.31758 (* 1 = 2.31758 loss)
I0428 20:11:07.970551 32006 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:08.091648 32006 solver.cpp:219] Iteration 100 (825.692 iter/s, 0.121111s/100 iters), loss = 0.5585
I0428 20:11:08.091673 32006 solver.cpp:238]     Train net output #0: loss = 0.5585 (* 1 = 0.5585 loss)
I0428 20:11:08.091680 32006 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:08.211009 32006 solver.cpp:219] Iteration 200 (838.05 iter/s, 0.119325s/100 iters), loss = 0.289681
I0428 20:11:08.211048 32006 solver.cpp:238]     Train net output #0: loss = 0.289681 (* 1 = 0.289681 loss)
I0428 20:11:08.211055 32006 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:08.330127 32006 solver.cpp:219] Iteration 300 (839.744 iter/s, 0.119084s/100 iters), loss = 0.249027
I0428 20:11:08.330183 32006 solver.cpp:238]     Train net output #0: loss = 0.249027 (* 1 = 0.249027 loss)
I0428 20:11:08.330188 32006 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:08.451082 32006 solver.cpp:219] Iteration 400 (827.133 iter/s, 0.1209s/100 iters), loss = 0.216118
I0428 20:11:08.451135 32006 solver.cpp:238]     Train net output #0: loss = 0.216118 (* 1 = 0.216118 loss)
I0428 20:11:08.451156 32006 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:08.587285 32006 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:08.661738 32015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:08.662410 32006 solver.cpp:398]     Test net output #0: accuracy = 0.9557
I0428 20:11:08.662436 32006 solver.cpp:398]     Test net output #1: loss = 0.138258 (* 1 = 0.138258 loss)
I0428 20:11:08.663661 32006 solver.cpp:219] Iteration 500 (470.56 iter/s, 0.212513s/100 iters), loss = 0.0640436
I0428 20:11:08.663722 32006 solver.cpp:238]     Train net output #0: loss = 0.0640436 (* 1 = 0.0640436 loss)
I0428 20:11:08.663733 32006 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:08.798146 32006 solver.cpp:219] Iteration 600 (743.975 iter/s, 0.134413s/100 iters), loss = 0.100214
I0428 20:11:08.798178 32006 solver.cpp:238]     Train net output #0: loss = 0.100214 (* 1 = 0.100214 loss)
I0428 20:11:08.798185 32006 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:08.936249 32006 solver.cpp:219] Iteration 700 (724.329 iter/s, 0.138059s/100 iters), loss = 0.120549
I0428 20:11:08.936286 32006 solver.cpp:238]     Train net output #0: loss = 0.120549 (* 1 = 0.120549 loss)
I0428 20:11:08.936295 32006 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:09.065032 32006 solver.cpp:219] Iteration 800 (776.794 iter/s, 0.128734s/100 iters), loss = 0.160954
I0428 20:11:09.065065 32006 solver.cpp:238]     Train net output #0: loss = 0.160954 (* 1 = 0.160954 loss)
I0428 20:11:09.065073 32006 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:09.192198 32006 solver.cpp:219] Iteration 900 (786.656 iter/s, 0.12712s/100 iters), loss = 0.155334
I0428 20:11:09.192235 32006 solver.cpp:238]     Train net output #0: loss = 0.155334 (* 1 = 0.155334 loss)
I0428 20:11:09.192245 32006 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:09.234607 32014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:09.317721 32006 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:09.319406 32006 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:09.320515 32006 solver.cpp:311] Iteration 1000, loss = 0.0923727
I0428 20:11:09.320550 32006 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:09.397193 32015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:09.397943 32006 solver.cpp:398]     Test net output #0: accuracy = 0.9715
I0428 20:11:09.397970 32006 solver.cpp:398]     Test net output #1: loss = 0.0900873 (* 1 = 0.0900873 loss)
I0428 20:11:09.397977 32006 solver.cpp:316] Optimization Done.
I0428 20:11:09.397981 32006 caffe.cpp:259] Optimization Done.
