I0428 20:24:25.154412  2403 caffe.cpp:218] Using GPUs 0
I0428 20:24:25.185834  2403 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:25.702147  2403 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1437.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:25.702292  2403 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1437.prototxt
I0428 20:24:25.702708  2403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:25.702728  2403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:25.702828  2403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:25.702908  2403 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:25.703007  2403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:25.703032  2403 net.cpp:86] Creating Layer mnist
I0428 20:24:25.703040  2403 net.cpp:382] mnist -> data
I0428 20:24:25.703063  2403 net.cpp:382] mnist -> label
I0428 20:24:25.704157  2403 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:25.706620  2403 net.cpp:124] Setting up mnist
I0428 20:24:25.706639  2403 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:25.706645  2403 net.cpp:131] Top shape: 64 (64)
I0428 20:24:25.706647  2403 net.cpp:139] Memory required for data: 200960
I0428 20:24:25.706655  2403 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:25.706671  2403 net.cpp:86] Creating Layer conv0
I0428 20:24:25.706692  2403 net.cpp:408] conv0 <- data
I0428 20:24:25.706706  2403 net.cpp:382] conv0 -> conv0
I0428 20:24:25.996868  2403 net.cpp:124] Setting up conv0
I0428 20:24:25.996898  2403 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:25.996903  2403 net.cpp:139] Memory required for data: 7573760
I0428 20:24:25.996922  2403 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:25.996937  2403 net.cpp:86] Creating Layer pool0
I0428 20:24:25.996942  2403 net.cpp:408] pool0 <- conv0
I0428 20:24:25.996948  2403 net.cpp:382] pool0 -> pool0
I0428 20:24:25.997009  2403 net.cpp:124] Setting up pool0
I0428 20:24:25.997018  2403 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:25.997022  2403 net.cpp:139] Memory required for data: 9416960
I0428 20:24:25.997026  2403 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:25.997040  2403 net.cpp:86] Creating Layer conv1
I0428 20:24:25.997043  2403 net.cpp:408] conv1 <- pool0
I0428 20:24:25.997050  2403 net.cpp:382] conv1 -> conv1
I0428 20:24:26.001013  2403 net.cpp:124] Setting up conv1
I0428 20:24:26.001031  2403 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:26.001036  2403 net.cpp:139] Memory required for data: 11055360
I0428 20:24:26.001046  2403 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:26.001055  2403 net.cpp:86] Creating Layer pool1
I0428 20:24:26.001060  2403 net.cpp:408] pool1 <- conv1
I0428 20:24:26.001066  2403 net.cpp:382] pool1 -> pool1
I0428 20:24:26.001111  2403 net.cpp:124] Setting up pool1
I0428 20:24:26.001117  2403 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:26.001121  2403 net.cpp:139] Memory required for data: 11464960
I0428 20:24:26.001124  2403 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:26.001137  2403 net.cpp:86] Creating Layer ip1
I0428 20:24:26.001142  2403 net.cpp:408] ip1 <- pool1
I0428 20:24:26.001147  2403 net.cpp:382] ip1 -> ip1
I0428 20:24:26.001801  2403 net.cpp:124] Setting up ip1
I0428 20:24:26.001811  2403 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:26.001814  2403 net.cpp:139] Memory required for data: 11477760
I0428 20:24:26.001823  2403 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:26.001829  2403 net.cpp:86] Creating Layer relu1
I0428 20:24:26.001833  2403 net.cpp:408] relu1 <- ip1
I0428 20:24:26.001838  2403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:26.002033  2403 net.cpp:124] Setting up relu1
I0428 20:24:26.002044  2403 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:26.002048  2403 net.cpp:139] Memory required for data: 11490560
I0428 20:24:26.002051  2403 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:26.002058  2403 net.cpp:86] Creating Layer ip2
I0428 20:24:26.002063  2403 net.cpp:408] ip2 <- ip1
I0428 20:24:26.002068  2403 net.cpp:382] ip2 -> ip2
I0428 20:24:26.002193  2403 net.cpp:124] Setting up ip2
I0428 20:24:26.002202  2403 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:26.002205  2403 net.cpp:139] Memory required for data: 11496960
I0428 20:24:26.002212  2403 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:26.002218  2403 net.cpp:86] Creating Layer relu2
I0428 20:24:26.002223  2403 net.cpp:408] relu2 <- ip2
I0428 20:24:26.002228  2403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:26.003067  2403 net.cpp:124] Setting up relu2
I0428 20:24:26.003083  2403 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:26.003087  2403 net.cpp:139] Memory required for data: 11503360
I0428 20:24:26.003092  2403 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:26.003100  2403 net.cpp:86] Creating Layer ip3
I0428 20:24:26.003103  2403 net.cpp:408] ip3 <- ip2
I0428 20:24:26.003110  2403 net.cpp:382] ip3 -> ip3
I0428 20:24:26.003226  2403 net.cpp:124] Setting up ip3
I0428 20:24:26.003235  2403 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:26.003239  2403 net.cpp:139] Memory required for data: 11505920
I0428 20:24:26.003249  2403 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:26.003255  2403 net.cpp:86] Creating Layer relu3
I0428 20:24:26.003259  2403 net.cpp:408] relu3 <- ip3
I0428 20:24:26.003264  2403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:26.003460  2403 net.cpp:124] Setting up relu3
I0428 20:24:26.003471  2403 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:26.003475  2403 net.cpp:139] Memory required for data: 11508480
I0428 20:24:26.003479  2403 layer_factory.hpp:77] Creating layer loss
I0428 20:24:26.003485  2403 net.cpp:86] Creating Layer loss
I0428 20:24:26.003489  2403 net.cpp:408] loss <- ip3
I0428 20:24:26.003494  2403 net.cpp:408] loss <- label
I0428 20:24:26.003500  2403 net.cpp:382] loss -> loss
I0428 20:24:26.003520  2403 layer_factory.hpp:77] Creating layer loss
I0428 20:24:26.003784  2403 net.cpp:124] Setting up loss
I0428 20:24:26.003795  2403 net.cpp:131] Top shape: (1)
I0428 20:24:26.003800  2403 net.cpp:134]     with loss weight 1
I0428 20:24:26.003815  2403 net.cpp:139] Memory required for data: 11508484
I0428 20:24:26.003819  2403 net.cpp:200] loss needs backward computation.
I0428 20:24:26.003823  2403 net.cpp:200] relu3 needs backward computation.
I0428 20:24:26.003826  2403 net.cpp:200] ip3 needs backward computation.
I0428 20:24:26.003830  2403 net.cpp:200] relu2 needs backward computation.
I0428 20:24:26.003834  2403 net.cpp:200] ip2 needs backward computation.
I0428 20:24:26.003837  2403 net.cpp:200] relu1 needs backward computation.
I0428 20:24:26.003840  2403 net.cpp:200] ip1 needs backward computation.
I0428 20:24:26.003844  2403 net.cpp:200] pool1 needs backward computation.
I0428 20:24:26.003847  2403 net.cpp:200] conv1 needs backward computation.
I0428 20:24:26.003851  2403 net.cpp:200] pool0 needs backward computation.
I0428 20:24:26.003855  2403 net.cpp:200] conv0 needs backward computation.
I0428 20:24:26.003859  2403 net.cpp:202] mnist does not need backward computation.
I0428 20:24:26.003862  2403 net.cpp:244] This network produces output loss
I0428 20:24:26.003873  2403 net.cpp:257] Network initialization done.
I0428 20:24:26.004251  2403 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1437.prototxt
I0428 20:24:26.004282  2403 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:26.004389  2403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:26.004480  2403 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:26.004531  2403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:26.004546  2403 net.cpp:86] Creating Layer mnist
I0428 20:24:26.004551  2403 net.cpp:382] mnist -> data
I0428 20:24:26.004560  2403 net.cpp:382] mnist -> label
I0428 20:24:26.004660  2403 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:26.005899  2403 net.cpp:124] Setting up mnist
I0428 20:24:26.005915  2403 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:26.005921  2403 net.cpp:131] Top shape: 100 (100)
I0428 20:24:26.005924  2403 net.cpp:139] Memory required for data: 314000
I0428 20:24:26.005929  2403 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:26.005941  2403 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:26.005946  2403 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:26.005952  2403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:26.005960  2403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:26.006011  2403 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:26.006019  2403 net.cpp:131] Top shape: 100 (100)
I0428 20:24:26.006023  2403 net.cpp:131] Top shape: 100 (100)
I0428 20:24:26.006027  2403 net.cpp:139] Memory required for data: 314800
I0428 20:24:26.006031  2403 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:26.006041  2403 net.cpp:86] Creating Layer conv0
I0428 20:24:26.006044  2403 net.cpp:408] conv0 <- data
I0428 20:24:26.006050  2403 net.cpp:382] conv0 -> conv0
I0428 20:24:26.007980  2403 net.cpp:124] Setting up conv0
I0428 20:24:26.007997  2403 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:26.008002  2403 net.cpp:139] Memory required for data: 11834800
I0428 20:24:26.008013  2403 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:26.008020  2403 net.cpp:86] Creating Layer pool0
I0428 20:24:26.008024  2403 net.cpp:408] pool0 <- conv0
I0428 20:24:26.008030  2403 net.cpp:382] pool0 -> pool0
I0428 20:24:26.008074  2403 net.cpp:124] Setting up pool0
I0428 20:24:26.008080  2403 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:26.008083  2403 net.cpp:139] Memory required for data: 14714800
I0428 20:24:26.008086  2403 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:26.008096  2403 net.cpp:86] Creating Layer conv1
I0428 20:24:26.008100  2403 net.cpp:408] conv1 <- pool0
I0428 20:24:26.008106  2403 net.cpp:382] conv1 -> conv1
I0428 20:24:26.011636  2403 net.cpp:124] Setting up conv1
I0428 20:24:26.011654  2403 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:26.011658  2403 net.cpp:139] Memory required for data: 17274800
I0428 20:24:26.011668  2403 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:26.011677  2403 net.cpp:86] Creating Layer pool1
I0428 20:24:26.011680  2403 net.cpp:408] pool1 <- conv1
I0428 20:24:26.011687  2403 net.cpp:382] pool1 -> pool1
I0428 20:24:26.011740  2403 net.cpp:124] Setting up pool1
I0428 20:24:26.011746  2403 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:26.011750  2403 net.cpp:139] Memory required for data: 17914800
I0428 20:24:26.011754  2403 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:26.011760  2403 net.cpp:86] Creating Layer ip1
I0428 20:24:26.011765  2403 net.cpp:408] ip1 <- pool1
I0428 20:24:26.011771  2403 net.cpp:382] ip1 -> ip1
I0428 20:24:26.012421  2403 net.cpp:124] Setting up ip1
I0428 20:24:26.012444  2403 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:26.012449  2403 net.cpp:139] Memory required for data: 17934800
I0428 20:24:26.012456  2403 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:26.012464  2403 net.cpp:86] Creating Layer relu1
I0428 20:24:26.012467  2403 net.cpp:408] relu1 <- ip1
I0428 20:24:26.012472  2403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:26.012660  2403 net.cpp:124] Setting up relu1
I0428 20:24:26.012671  2403 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:26.012676  2403 net.cpp:139] Memory required for data: 17954800
I0428 20:24:26.012678  2403 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:26.012687  2403 net.cpp:86] Creating Layer ip2
I0428 20:24:26.012691  2403 net.cpp:408] ip2 <- ip1
I0428 20:24:26.012697  2403 net.cpp:382] ip2 -> ip2
I0428 20:24:26.012835  2403 net.cpp:124] Setting up ip2
I0428 20:24:26.012843  2403 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:26.012848  2403 net.cpp:139] Memory required for data: 17964800
I0428 20:24:26.012856  2403 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:26.012861  2403 net.cpp:86] Creating Layer relu2
I0428 20:24:26.012866  2403 net.cpp:408] relu2 <- ip2
I0428 20:24:26.012871  2403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:26.013052  2403 net.cpp:124] Setting up relu2
I0428 20:24:26.013062  2403 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:26.013067  2403 net.cpp:139] Memory required for data: 17974800
I0428 20:24:26.013070  2403 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:26.013077  2403 net.cpp:86] Creating Layer ip3
I0428 20:24:26.013080  2403 net.cpp:408] ip3 <- ip2
I0428 20:24:26.013085  2403 net.cpp:382] ip3 -> ip3
I0428 20:24:26.013221  2403 net.cpp:124] Setting up ip3
I0428 20:24:26.013231  2403 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:26.013234  2403 net.cpp:139] Memory required for data: 17978800
I0428 20:24:26.013243  2403 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:26.013249  2403 net.cpp:86] Creating Layer relu3
I0428 20:24:26.013252  2403 net.cpp:408] relu3 <- ip3
I0428 20:24:26.013257  2403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:26.014158  2403 net.cpp:124] Setting up relu3
I0428 20:24:26.014173  2403 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:26.014178  2403 net.cpp:139] Memory required for data: 17982800
I0428 20:24:26.014181  2403 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:26.014188  2403 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:26.014192  2403 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:26.014199  2403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:26.014207  2403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:26.014250  2403 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:26.014256  2403 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:26.014261  2403 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:26.014264  2403 net.cpp:139] Memory required for data: 17990800
I0428 20:24:26.014268  2403 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:26.014274  2403 net.cpp:86] Creating Layer accuracy
I0428 20:24:26.014278  2403 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:26.014284  2403 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:26.014289  2403 net.cpp:382] accuracy -> accuracy
I0428 20:24:26.014297  2403 net.cpp:124] Setting up accuracy
I0428 20:24:26.014302  2403 net.cpp:131] Top shape: (1)
I0428 20:24:26.014305  2403 net.cpp:139] Memory required for data: 17990804
I0428 20:24:26.014308  2403 layer_factory.hpp:77] Creating layer loss
I0428 20:24:26.014313  2403 net.cpp:86] Creating Layer loss
I0428 20:24:26.014317  2403 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:26.014322  2403 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:26.014327  2403 net.cpp:382] loss -> loss
I0428 20:24:26.014333  2403 layer_factory.hpp:77] Creating layer loss
I0428 20:24:26.014602  2403 net.cpp:124] Setting up loss
I0428 20:24:26.014614  2403 net.cpp:131] Top shape: (1)
I0428 20:24:26.014618  2403 net.cpp:134]     with loss weight 1
I0428 20:24:26.014638  2403 net.cpp:139] Memory required for data: 17990808
I0428 20:24:26.014643  2403 net.cpp:200] loss needs backward computation.
I0428 20:24:26.014648  2403 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:26.014652  2403 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:26.014657  2403 net.cpp:200] relu3 needs backward computation.
I0428 20:24:26.014660  2403 net.cpp:200] ip3 needs backward computation.
I0428 20:24:26.014664  2403 net.cpp:200] relu2 needs backward computation.
I0428 20:24:26.014668  2403 net.cpp:200] ip2 needs backward computation.
I0428 20:24:26.014672  2403 net.cpp:200] relu1 needs backward computation.
I0428 20:24:26.014675  2403 net.cpp:200] ip1 needs backward computation.
I0428 20:24:26.014678  2403 net.cpp:200] pool1 needs backward computation.
I0428 20:24:26.014683  2403 net.cpp:200] conv1 needs backward computation.
I0428 20:24:26.014688  2403 net.cpp:200] pool0 needs backward computation.
I0428 20:24:26.014691  2403 net.cpp:200] conv0 needs backward computation.
I0428 20:24:26.014696  2403 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:26.014701  2403 net.cpp:202] mnist does not need backward computation.
I0428 20:24:26.014704  2403 net.cpp:244] This network produces output accuracy
I0428 20:24:26.014709  2403 net.cpp:244] This network produces output loss
I0428 20:24:26.014721  2403 net.cpp:257] Network initialization done.
I0428 20:24:26.014771  2403 solver.cpp:56] Solver scaffolding done.
I0428 20:24:26.015225  2403 caffe.cpp:248] Starting Optimization
I0428 20:24:26.015233  2403 solver.cpp:273] Solving LeNet
I0428 20:24:26.015236  2403 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:26.015457  2403 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:26.110899  2411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:26.113343  2403 solver.cpp:398]     Test net output #0: accuracy = 0.1191
I0428 20:24:26.113366  2403 solver.cpp:398]     Test net output #1: loss = 2.30098 (* 1 = 2.30098 loss)
I0428 20:24:26.119268  2403 solver.cpp:219] Iteration 0 (0 iter/s, 0.103992s/100 iters), loss = 2.28127
I0428 20:24:26.119295  2403 solver.cpp:238]     Train net output #0: loss = 2.28127 (* 1 = 2.28127 loss)
I0428 20:24:26.119307  2403 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:26.341279  2403 solver.cpp:219] Iteration 100 (450.523 iter/s, 0.221964s/100 iters), loss = 0.714073
I0428 20:24:26.341325  2403 solver.cpp:238]     Train net output #0: loss = 0.714073 (* 1 = 0.714073 loss)
I0428 20:24:26.341337  2403 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:26.587113  2403 solver.cpp:219] Iteration 200 (406.882 iter/s, 0.245771s/100 iters), loss = 0.345768
I0428 20:24:26.587157  2403 solver.cpp:238]     Train net output #0: loss = 0.345768 (* 1 = 0.345768 loss)
I0428 20:24:26.587167  2403 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:26.835301  2403 solver.cpp:219] Iteration 300 (403.019 iter/s, 0.248127s/100 iters), loss = 0.761592
I0428 20:24:26.835350  2403 solver.cpp:238]     Train net output #0: loss = 0.761592 (* 1 = 0.761592 loss)
I0428 20:24:26.835361  2403 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:27.084775  2403 solver.cpp:219] Iteration 400 (400.949 iter/s, 0.249409s/100 iters), loss = 0.398761
I0428 20:24:27.084832  2403 solver.cpp:238]     Train net output #0: loss = 0.398761 (* 1 = 0.398761 loss)
I0428 20:24:27.084846  2403 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:27.329075  2403 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:27.424242  2411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:27.425665  2403 solver.cpp:398]     Test net output #0: accuracy = 0.7823
I0428 20:24:27.425703  2403 solver.cpp:398]     Test net output #1: loss = 0.536969 (* 1 = 0.536969 loss)
I0428 20:24:27.427984  2403 solver.cpp:219] Iteration 500 (291.431 iter/s, 0.343134s/100 iters), loss = 0.494246
I0428 20:24:27.428012  2403 solver.cpp:238]     Train net output #0: loss = 0.494246 (* 1 = 0.494246 loss)
I0428 20:24:27.428036  2403 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:27.659438  2403 solver.cpp:219] Iteration 600 (432.138 iter/s, 0.231408s/100 iters), loss = 0.595097
I0428 20:24:27.659476  2403 solver.cpp:238]     Train net output #0: loss = 0.595097 (* 1 = 0.595097 loss)
I0428 20:24:27.659484  2403 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:27.904129  2403 solver.cpp:219] Iteration 700 (408.773 iter/s, 0.244635s/100 iters), loss = 0.612129
I0428 20:24:27.904165  2403 solver.cpp:238]     Train net output #0: loss = 0.612129 (* 1 = 0.612129 loss)
I0428 20:24:27.904175  2403 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:28.149369  2403 solver.cpp:219] Iteration 800 (407.856 iter/s, 0.245185s/100 iters), loss = 0.712218
I0428 20:24:28.149406  2403 solver.cpp:238]     Train net output #0: loss = 0.712218 (* 1 = 0.712218 loss)
I0428 20:24:28.149416  2403 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:28.393208  2403 solver.cpp:219] Iteration 900 (410.201 iter/s, 0.243783s/100 iters), loss = 0.71734
I0428 20:24:28.393250  2403 solver.cpp:238]     Train net output #0: loss = 0.71734 (* 1 = 0.71734 loss)
I0428 20:24:28.393261  2403 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:28.476016  2410 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:28.639168  2403 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:28.646440  2403 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:28.649658  2403 solver.cpp:311] Iteration 1000, loss = 0.592625
I0428 20:24:28.649686  2403 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:28.743896  2411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:28.746455  2403 solver.cpp:398]     Test net output #0: accuracy = 0.79
I0428 20:24:28.746481  2403 solver.cpp:398]     Test net output #1: loss = 0.510295 (* 1 = 0.510295 loss)
I0428 20:24:28.746487  2403 solver.cpp:316] Optimization Done.
I0428 20:24:28.746491  2403 caffe.cpp:259] Optimization Done.
