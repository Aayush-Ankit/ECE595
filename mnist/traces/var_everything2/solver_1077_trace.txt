I0428 20:08:13.068155 31332 caffe.cpp:218] Using GPUs 0
I0428 20:08:13.105585 31332 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:13.559247 31332 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1077.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:13.559391 31332 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1077.prototxt
I0428 20:08:13.559765 31332 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:13.559797 31332 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:13.559877 31332 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:13.559938 31332 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:13.560019 31332 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:13.560040 31332 net.cpp:86] Creating Layer mnist
I0428 20:08:13.560046 31332 net.cpp:382] mnist -> data
I0428 20:08:13.560065 31332 net.cpp:382] mnist -> label
I0428 20:08:13.561038 31332 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:13.563519 31332 net.cpp:124] Setting up mnist
I0428 20:08:13.563549 31332 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:13.563554 31332 net.cpp:131] Top shape: 64 (64)
I0428 20:08:13.563571 31332 net.cpp:139] Memory required for data: 200960
I0428 20:08:13.563578 31332 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:13.563627 31332 net.cpp:86] Creating Layer conv0
I0428 20:08:13.563644 31332 net.cpp:408] conv0 <- data
I0428 20:08:13.563657 31332 net.cpp:382] conv0 -> conv0
I0428 20:08:13.792958 31332 net.cpp:124] Setting up conv0
I0428 20:08:13.792999 31332 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:13.793002 31332 net.cpp:139] Memory required for data: 3887360
I0428 20:08:13.793018 31332 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:13.793031 31332 net.cpp:86] Creating Layer pool0
I0428 20:08:13.793035 31332 net.cpp:408] pool0 <- conv0
I0428 20:08:13.793056 31332 net.cpp:382] pool0 -> pool0
I0428 20:08:13.793103 31332 net.cpp:124] Setting up pool0
I0428 20:08:13.793118 31332 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:13.793123 31332 net.cpp:139] Memory required for data: 4808960
I0428 20:08:13.793125 31332 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:13.793135 31332 net.cpp:86] Creating Layer conv1
I0428 20:08:13.793139 31332 net.cpp:408] conv1 <- pool0
I0428 20:08:13.793144 31332 net.cpp:382] conv1 -> conv1
I0428 20:08:13.795984 31332 net.cpp:124] Setting up conv1
I0428 20:08:13.796012 31332 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:13.796016 31332 net.cpp:139] Memory required for data: 4972800
I0428 20:08:13.796025 31332 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:13.796035 31332 net.cpp:86] Creating Layer pool1
I0428 20:08:13.796038 31332 net.cpp:408] pool1 <- conv1
I0428 20:08:13.796042 31332 net.cpp:382] pool1 -> pool1
I0428 20:08:13.796080 31332 net.cpp:124] Setting up pool1
I0428 20:08:13.796085 31332 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:13.796088 31332 net.cpp:139] Memory required for data: 5013760
I0428 20:08:13.796092 31332 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:13.796098 31332 net.cpp:86] Creating Layer ip1
I0428 20:08:13.796102 31332 net.cpp:408] ip1 <- pool1
I0428 20:08:13.796105 31332 net.cpp:382] ip1 -> ip1
I0428 20:08:13.797163 31332 net.cpp:124] Setting up ip1
I0428 20:08:13.797175 31332 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:13.797194 31332 net.cpp:139] Memory required for data: 5020160
I0428 20:08:13.797202 31332 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:13.797209 31332 net.cpp:86] Creating Layer relu1
I0428 20:08:13.797211 31332 net.cpp:408] relu1 <- ip1
I0428 20:08:13.797216 31332 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:13.797392 31332 net.cpp:124] Setting up relu1
I0428 20:08:13.797401 31332 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:13.797405 31332 net.cpp:139] Memory required for data: 5026560
I0428 20:08:13.797407 31332 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:13.797413 31332 net.cpp:86] Creating Layer ip2
I0428 20:08:13.797416 31332 net.cpp:408] ip2 <- ip1
I0428 20:08:13.797421 31332 net.cpp:382] ip2 -> ip2
I0428 20:08:13.797528 31332 net.cpp:124] Setting up ip2
I0428 20:08:13.797535 31332 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:13.797538 31332 net.cpp:139] Memory required for data: 5032960
I0428 20:08:13.797544 31332 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:13.797549 31332 net.cpp:86] Creating Layer relu2
I0428 20:08:13.797551 31332 net.cpp:408] relu2 <- ip2
I0428 20:08:13.797555 31332 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:13.798385 31332 net.cpp:124] Setting up relu2
I0428 20:08:13.798396 31332 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:13.798415 31332 net.cpp:139] Memory required for data: 5039360
I0428 20:08:13.798418 31332 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:13.798425 31332 net.cpp:86] Creating Layer ip3
I0428 20:08:13.798429 31332 net.cpp:408] ip3 <- ip2
I0428 20:08:13.798434 31332 net.cpp:382] ip3 -> ip3
I0428 20:08:13.798521 31332 net.cpp:124] Setting up ip3
I0428 20:08:13.798528 31332 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:13.798532 31332 net.cpp:139] Memory required for data: 5041920
I0428 20:08:13.798538 31332 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:13.798542 31332 net.cpp:86] Creating Layer relu3
I0428 20:08:13.798545 31332 net.cpp:408] relu3 <- ip3
I0428 20:08:13.798549 31332 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:13.798723 31332 net.cpp:124] Setting up relu3
I0428 20:08:13.798732 31332 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:13.798734 31332 net.cpp:139] Memory required for data: 5044480
I0428 20:08:13.798738 31332 layer_factory.hpp:77] Creating layer loss
I0428 20:08:13.798743 31332 net.cpp:86] Creating Layer loss
I0428 20:08:13.798746 31332 net.cpp:408] loss <- ip3
I0428 20:08:13.798750 31332 net.cpp:408] loss <- label
I0428 20:08:13.798755 31332 net.cpp:382] loss -> loss
I0428 20:08:13.798771 31332 layer_factory.hpp:77] Creating layer loss
I0428 20:08:13.799003 31332 net.cpp:124] Setting up loss
I0428 20:08:13.799012 31332 net.cpp:131] Top shape: (1)
I0428 20:08:13.799016 31332 net.cpp:134]     with loss weight 1
I0428 20:08:13.799029 31332 net.cpp:139] Memory required for data: 5044484
I0428 20:08:13.799033 31332 net.cpp:200] loss needs backward computation.
I0428 20:08:13.799036 31332 net.cpp:200] relu3 needs backward computation.
I0428 20:08:13.799039 31332 net.cpp:200] ip3 needs backward computation.
I0428 20:08:13.799042 31332 net.cpp:200] relu2 needs backward computation.
I0428 20:08:13.799046 31332 net.cpp:200] ip2 needs backward computation.
I0428 20:08:13.799048 31332 net.cpp:200] relu1 needs backward computation.
I0428 20:08:13.799052 31332 net.cpp:200] ip1 needs backward computation.
I0428 20:08:13.799054 31332 net.cpp:200] pool1 needs backward computation.
I0428 20:08:13.799057 31332 net.cpp:200] conv1 needs backward computation.
I0428 20:08:13.799060 31332 net.cpp:200] pool0 needs backward computation.
I0428 20:08:13.799063 31332 net.cpp:200] conv0 needs backward computation.
I0428 20:08:13.799067 31332 net.cpp:202] mnist does not need backward computation.
I0428 20:08:13.799069 31332 net.cpp:244] This network produces output loss
I0428 20:08:13.799078 31332 net.cpp:257] Network initialization done.
I0428 20:08:13.799437 31332 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1077.prototxt
I0428 20:08:13.799479 31332 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:13.799571 31332 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:13.799646 31332 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:13.799691 31332 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:13.799732 31332 net.cpp:86] Creating Layer mnist
I0428 20:08:13.799737 31332 net.cpp:382] mnist -> data
I0428 20:08:13.799744 31332 net.cpp:382] mnist -> label
I0428 20:08:13.799821 31332 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:13.801918 31332 net.cpp:124] Setting up mnist
I0428 20:08:13.801960 31332 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:13.801965 31332 net.cpp:131] Top shape: 100 (100)
I0428 20:08:13.801969 31332 net.cpp:139] Memory required for data: 314000
I0428 20:08:13.801972 31332 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:13.802006 31332 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:13.802011 31332 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:13.802014 31332 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:13.802021 31332 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:13.802063 31332 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:13.802068 31332 net.cpp:131] Top shape: 100 (100)
I0428 20:08:13.802073 31332 net.cpp:131] Top shape: 100 (100)
I0428 20:08:13.802074 31332 net.cpp:139] Memory required for data: 314800
I0428 20:08:13.802078 31332 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:13.802084 31332 net.cpp:86] Creating Layer conv0
I0428 20:08:13.802088 31332 net.cpp:408] conv0 <- data
I0428 20:08:13.802093 31332 net.cpp:382] conv0 -> conv0
I0428 20:08:13.803797 31332 net.cpp:124] Setting up conv0
I0428 20:08:13.803810 31332 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:13.803814 31332 net.cpp:139] Memory required for data: 6074800
I0428 20:08:13.803822 31332 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:13.803828 31332 net.cpp:86] Creating Layer pool0
I0428 20:08:13.803831 31332 net.cpp:408] pool0 <- conv0
I0428 20:08:13.803835 31332 net.cpp:382] pool0 -> pool0
I0428 20:08:13.803869 31332 net.cpp:124] Setting up pool0
I0428 20:08:13.803874 31332 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:13.803876 31332 net.cpp:139] Memory required for data: 7514800
I0428 20:08:13.803879 31332 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:13.803886 31332 net.cpp:86] Creating Layer conv1
I0428 20:08:13.803889 31332 net.cpp:408] conv1 <- pool0
I0428 20:08:13.803894 31332 net.cpp:382] conv1 -> conv1
I0428 20:08:13.806182 31332 net.cpp:124] Setting up conv1
I0428 20:08:13.806196 31332 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:13.806200 31332 net.cpp:139] Memory required for data: 7770800
I0428 20:08:13.806208 31332 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:13.806223 31332 net.cpp:86] Creating Layer pool1
I0428 20:08:13.806227 31332 net.cpp:408] pool1 <- conv1
I0428 20:08:13.806233 31332 net.cpp:382] pool1 -> pool1
I0428 20:08:13.806272 31332 net.cpp:124] Setting up pool1
I0428 20:08:13.806277 31332 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:13.806284 31332 net.cpp:139] Memory required for data: 7834800
I0428 20:08:13.806288 31332 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:13.806293 31332 net.cpp:86] Creating Layer ip1
I0428 20:08:13.806301 31332 net.cpp:408] ip1 <- pool1
I0428 20:08:13.806306 31332 net.cpp:382] ip1 -> ip1
I0428 20:08:13.806424 31332 net.cpp:124] Setting up ip1
I0428 20:08:13.806432 31332 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:13.806444 31332 net.cpp:139] Memory required for data: 7844800
I0428 20:08:13.806452 31332 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:13.806457 31332 net.cpp:86] Creating Layer relu1
I0428 20:08:13.806460 31332 net.cpp:408] relu1 <- ip1
I0428 20:08:13.806464 31332 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:13.806690 31332 net.cpp:124] Setting up relu1
I0428 20:08:13.806699 31332 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:13.806702 31332 net.cpp:139] Memory required for data: 7854800
I0428 20:08:13.806705 31332 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:13.806712 31332 net.cpp:86] Creating Layer ip2
I0428 20:08:13.806715 31332 net.cpp:408] ip2 <- ip1
I0428 20:08:13.806721 31332 net.cpp:382] ip2 -> ip2
I0428 20:08:13.806850 31332 net.cpp:124] Setting up ip2
I0428 20:08:13.806859 31332 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:13.806861 31332 net.cpp:139] Memory required for data: 7864800
I0428 20:08:13.806867 31332 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:13.806872 31332 net.cpp:86] Creating Layer relu2
I0428 20:08:13.806890 31332 net.cpp:408] relu2 <- ip2
I0428 20:08:13.806893 31332 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:13.807042 31332 net.cpp:124] Setting up relu2
I0428 20:08:13.807050 31332 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:13.807054 31332 net.cpp:139] Memory required for data: 7874800
I0428 20:08:13.807057 31332 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:13.807067 31332 net.cpp:86] Creating Layer ip3
I0428 20:08:13.807070 31332 net.cpp:408] ip3 <- ip2
I0428 20:08:13.807076 31332 net.cpp:382] ip3 -> ip3
I0428 20:08:13.807188 31332 net.cpp:124] Setting up ip3
I0428 20:08:13.807194 31332 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:13.807198 31332 net.cpp:139] Memory required for data: 7878800
I0428 20:08:13.807205 31332 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:13.807209 31332 net.cpp:86] Creating Layer relu3
I0428 20:08:13.807212 31332 net.cpp:408] relu3 <- ip3
I0428 20:08:13.807216 31332 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:13.808079 31332 net.cpp:124] Setting up relu3
I0428 20:08:13.808090 31332 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:13.808094 31332 net.cpp:139] Memory required for data: 7882800
I0428 20:08:13.808097 31332 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:13.808102 31332 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:13.808105 31332 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:13.808110 31332 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:13.808116 31332 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:13.808190 31332 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:13.808197 31332 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:13.808200 31332 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:13.808203 31332 net.cpp:139] Memory required for data: 7890800
I0428 20:08:13.808205 31332 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:13.808210 31332 net.cpp:86] Creating Layer accuracy
I0428 20:08:13.808213 31332 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:13.808223 31332 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:13.808228 31332 net.cpp:382] accuracy -> accuracy
I0428 20:08:13.808235 31332 net.cpp:124] Setting up accuracy
I0428 20:08:13.808238 31332 net.cpp:131] Top shape: (1)
I0428 20:08:13.808241 31332 net.cpp:139] Memory required for data: 7890804
I0428 20:08:13.808243 31332 layer_factory.hpp:77] Creating layer loss
I0428 20:08:13.808248 31332 net.cpp:86] Creating Layer loss
I0428 20:08:13.808250 31332 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:13.808254 31332 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:13.808257 31332 net.cpp:382] loss -> loss
I0428 20:08:13.808262 31332 layer_factory.hpp:77] Creating layer loss
I0428 20:08:13.808523 31332 net.cpp:124] Setting up loss
I0428 20:08:13.808532 31332 net.cpp:131] Top shape: (1)
I0428 20:08:13.808537 31332 net.cpp:134]     with loss weight 1
I0428 20:08:13.808552 31332 net.cpp:139] Memory required for data: 7890808
I0428 20:08:13.808555 31332 net.cpp:200] loss needs backward computation.
I0428 20:08:13.808558 31332 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:13.808562 31332 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:13.808578 31332 net.cpp:200] relu3 needs backward computation.
I0428 20:08:13.808579 31332 net.cpp:200] ip3 needs backward computation.
I0428 20:08:13.808583 31332 net.cpp:200] relu2 needs backward computation.
I0428 20:08:13.808585 31332 net.cpp:200] ip2 needs backward computation.
I0428 20:08:13.808588 31332 net.cpp:200] relu1 needs backward computation.
I0428 20:08:13.808591 31332 net.cpp:200] ip1 needs backward computation.
I0428 20:08:13.808594 31332 net.cpp:200] pool1 needs backward computation.
I0428 20:08:13.808596 31332 net.cpp:200] conv1 needs backward computation.
I0428 20:08:13.808599 31332 net.cpp:200] pool0 needs backward computation.
I0428 20:08:13.808609 31332 net.cpp:200] conv0 needs backward computation.
I0428 20:08:13.808611 31332 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:13.808615 31332 net.cpp:202] mnist does not need backward computation.
I0428 20:08:13.808617 31332 net.cpp:244] This network produces output accuracy
I0428 20:08:13.808621 31332 net.cpp:244] This network produces output loss
I0428 20:08:13.808632 31332 net.cpp:257] Network initialization done.
I0428 20:08:13.808673 31332 solver.cpp:56] Solver scaffolding done.
I0428 20:08:13.809072 31332 caffe.cpp:248] Starting Optimization
I0428 20:08:13.809093 31332 solver.cpp:273] Solving LeNet
I0428 20:08:13.809097 31332 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:13.809978 31332 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:13.815204 31332 blocking_queue.cpp:49] Waiting for data
I0428 20:08:13.887569 31339 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:13.888212 31332 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0428 20:08:13.888233 31332 solver.cpp:398]     Test net output #1: loss = 2.30563 (* 1 = 2.30563 loss)
I0428 20:08:13.891886 31332 solver.cpp:219] Iteration 0 (-1.7265e-31 iter/s, 0.0827649s/100 iters), loss = 2.30583
I0428 20:08:13.891909 31332 solver.cpp:238]     Train net output #0: loss = 2.30583 (* 1 = 2.30583 loss)
I0428 20:08:13.891935 31332 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:13.983739 31332 solver.cpp:219] Iteration 100 (1089.14 iter/s, 0.0918159s/100 iters), loss = 0.787336
I0428 20:08:13.983767 31332 solver.cpp:238]     Train net output #0: loss = 0.787336 (* 1 = 0.787336 loss)
I0428 20:08:13.983773 31332 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:14.073683 31332 solver.cpp:219] Iteration 200 (1112.26 iter/s, 0.0899072s/100 iters), loss = 0.607912
I0428 20:08:14.073707 31332 solver.cpp:238]     Train net output #0: loss = 0.607912 (* 1 = 0.607912 loss)
I0428 20:08:14.073714 31332 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:14.167886 31332 solver.cpp:219] Iteration 300 (1061.92 iter/s, 0.0941689s/100 iters), loss = 0.831943
I0428 20:08:14.167917 31332 solver.cpp:238]     Train net output #0: loss = 0.831943 (* 1 = 0.831943 loss)
I0428 20:08:14.167937 31332 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:14.263090 31332 solver.cpp:219] Iteration 400 (1050.82 iter/s, 0.0951634s/100 iters), loss = 0.557216
I0428 20:08:14.263131 31332 solver.cpp:238]     Train net output #0: loss = 0.557216 (* 1 = 0.557216 loss)
I0428 20:08:14.263139 31332 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:14.372102 31332 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:14.447309 31339 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:14.447950 31332 solver.cpp:398]     Test net output #0: accuracy = 0.7722
I0428 20:08:14.447991 31332 solver.cpp:398]     Test net output #1: loss = 0.592048 (* 1 = 0.592048 loss)
I0428 20:08:14.448976 31332 solver.cpp:219] Iteration 500 (538.126 iter/s, 0.18583s/100 iters), loss = 0.46299
I0428 20:08:14.449026 31332 solver.cpp:238]     Train net output #0: loss = 0.46299 (* 1 = 0.46299 loss)
I0428 20:08:14.449039 31332 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:14.546476 31332 solver.cpp:219] Iteration 600 (1026.21 iter/s, 0.0974456s/100 iters), loss = 0.484964
I0428 20:08:14.546510 31332 solver.cpp:238]     Train net output #0: loss = 0.484964 (* 1 = 0.484964 loss)
I0428 20:08:14.546522 31332 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:14.646914 31332 solver.cpp:219] Iteration 700 (996.076 iter/s, 0.100394s/100 iters), loss = 0.435887
I0428 20:08:14.646958 31332 solver.cpp:238]     Train net output #0: loss = 0.435887 (* 1 = 0.435887 loss)
I0428 20:08:14.646981 31332 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:14.746484 31332 solver.cpp:219] Iteration 800 (1004.85 iter/s, 0.0995174s/100 iters), loss = 0.576297
I0428 20:08:14.746512 31332 solver.cpp:238]     Train net output #0: loss = 0.576297 (* 1 = 0.576297 loss)
I0428 20:08:14.746523 31332 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:14.841836 31332 solver.cpp:219] Iteration 900 (1049.15 iter/s, 0.0953148s/100 iters), loss = 0.543429
I0428 20:08:14.841867 31332 solver.cpp:238]     Train net output #0: loss = 0.543429 (* 1 = 0.543429 loss)
I0428 20:08:14.841874 31332 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:14.873193 31338 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:14.934651 31332 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:14.935580 31332 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:14.936388 31332 solver.cpp:311] Iteration 1000, loss = 0.440293
I0428 20:08:14.936421 31332 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:15.000968 31339 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:15.003042 31332 solver.cpp:398]     Test net output #0: accuracy = 0.8749
I0428 20:08:15.003080 31332 solver.cpp:398]     Test net output #1: loss = 0.324952 (* 1 = 0.324952 loss)
I0428 20:08:15.003088 31332 solver.cpp:316] Optimization Done.
I0428 20:08:15.003093 31332 caffe.cpp:259] Optimization Done.
