I0428 19:41:23.089084 24813 caffe.cpp:218] Using GPUs 0
I0428 19:41:23.129922 24813 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:23.650527 24813 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test363.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:23.650670 24813 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test363.prototxt
I0428 19:41:23.651089 24813 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:23.651109 24813 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:23.651213 24813 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:23.651293 24813 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:23.651393 24813 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:23.651417 24813 net.cpp:86] Creating Layer mnist
I0428 19:41:23.651424 24813 net.cpp:382] mnist -> data
I0428 19:41:23.651449 24813 net.cpp:382] mnist -> label
I0428 19:41:23.652559 24813 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:23.655028 24813 net.cpp:124] Setting up mnist
I0428 19:41:23.655048 24813 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:23.655055 24813 net.cpp:131] Top shape: 64 (64)
I0428 19:41:23.655058 24813 net.cpp:139] Memory required for data: 200960
I0428 19:41:23.655066 24813 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:23.655082 24813 net.cpp:86] Creating Layer conv0
I0428 19:41:23.655104 24813 net.cpp:408] conv0 <- data
I0428 19:41:23.655117 24813 net.cpp:382] conv0 -> conv0
I0428 19:41:23.945828 24813 net.cpp:124] Setting up conv0
I0428 19:41:23.945861 24813 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:23.945866 24813 net.cpp:139] Memory required for data: 495872
I0428 19:41:23.945884 24813 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:23.945899 24813 net.cpp:86] Creating Layer pool0
I0428 19:41:23.945904 24813 net.cpp:408] pool0 <- conv0
I0428 19:41:23.945910 24813 net.cpp:382] pool0 -> pool0
I0428 19:41:23.945966 24813 net.cpp:124] Setting up pool0
I0428 19:41:23.945973 24813 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:23.945977 24813 net.cpp:139] Memory required for data: 569600
I0428 19:41:23.945981 24813 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:23.945994 24813 net.cpp:86] Creating Layer conv1
I0428 19:41:23.945998 24813 net.cpp:408] conv1 <- pool0
I0428 19:41:23.946004 24813 net.cpp:382] conv1 -> conv1
I0428 19:41:23.948140 24813 net.cpp:124] Setting up conv1
I0428 19:41:23.948158 24813 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:23.948163 24813 net.cpp:139] Memory required for data: 733440
I0428 19:41:23.948173 24813 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:23.948181 24813 net.cpp:86] Creating Layer pool1
I0428 19:41:23.948187 24813 net.cpp:408] pool1 <- conv1
I0428 19:41:23.948194 24813 net.cpp:382] pool1 -> pool1
I0428 19:41:23.948238 24813 net.cpp:124] Setting up pool1
I0428 19:41:23.948246 24813 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:23.948248 24813 net.cpp:139] Memory required for data: 774400
I0428 19:41:23.948252 24813 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:23.948261 24813 net.cpp:86] Creating Layer ip1
I0428 19:41:23.948264 24813 net.cpp:408] ip1 <- pool1
I0428 19:41:23.948269 24813 net.cpp:382] ip1 -> ip1
I0428 19:41:23.949381 24813 net.cpp:124] Setting up ip1
I0428 19:41:23.949398 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.949401 24813 net.cpp:139] Memory required for data: 776960
I0428 19:41:23.949411 24813 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:23.949419 24813 net.cpp:86] Creating Layer relu1
I0428 19:41:23.949422 24813 net.cpp:408] relu1 <- ip1
I0428 19:41:23.949429 24813 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:23.949633 24813 net.cpp:124] Setting up relu1
I0428 19:41:23.949643 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.949647 24813 net.cpp:139] Memory required for data: 779520
I0428 19:41:23.949651 24813 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:23.949659 24813 net.cpp:86] Creating Layer ip2
I0428 19:41:23.949663 24813 net.cpp:408] ip2 <- ip1
I0428 19:41:23.949668 24813 net.cpp:382] ip2 -> ip2
I0428 19:41:23.949784 24813 net.cpp:124] Setting up ip2
I0428 19:41:23.949791 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.949795 24813 net.cpp:139] Memory required for data: 782080
I0428 19:41:23.949802 24813 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:23.949810 24813 net.cpp:86] Creating Layer relu2
I0428 19:41:23.949815 24813 net.cpp:408] relu2 <- ip2
I0428 19:41:23.949820 24813 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:23.950666 24813 net.cpp:124] Setting up relu2
I0428 19:41:23.950681 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.950685 24813 net.cpp:139] Memory required for data: 784640
I0428 19:41:23.950690 24813 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:23.950698 24813 net.cpp:86] Creating Layer ip3
I0428 19:41:23.950702 24813 net.cpp:408] ip3 <- ip2
I0428 19:41:23.950708 24813 net.cpp:382] ip3 -> ip3
I0428 19:41:23.950827 24813 net.cpp:124] Setting up ip3
I0428 19:41:23.950836 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.950840 24813 net.cpp:139] Memory required for data: 787200
I0428 19:41:23.950850 24813 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:23.950855 24813 net.cpp:86] Creating Layer relu3
I0428 19:41:23.950860 24813 net.cpp:408] relu3 <- ip3
I0428 19:41:23.950865 24813 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:23.951062 24813 net.cpp:124] Setting up relu3
I0428 19:41:23.951071 24813 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:23.951076 24813 net.cpp:139] Memory required for data: 789760
I0428 19:41:23.951079 24813 layer_factory.hpp:77] Creating layer loss
I0428 19:41:23.951086 24813 net.cpp:86] Creating Layer loss
I0428 19:41:23.951091 24813 net.cpp:408] loss <- ip3
I0428 19:41:23.951095 24813 net.cpp:408] loss <- label
I0428 19:41:23.951102 24813 net.cpp:382] loss -> loss
I0428 19:41:23.951122 24813 layer_factory.hpp:77] Creating layer loss
I0428 19:41:23.951388 24813 net.cpp:124] Setting up loss
I0428 19:41:23.951400 24813 net.cpp:131] Top shape: (1)
I0428 19:41:23.951403 24813 net.cpp:134]     with loss weight 1
I0428 19:41:23.951419 24813 net.cpp:139] Memory required for data: 789764
I0428 19:41:23.951423 24813 net.cpp:200] loss needs backward computation.
I0428 19:41:23.951427 24813 net.cpp:200] relu3 needs backward computation.
I0428 19:41:23.951431 24813 net.cpp:200] ip3 needs backward computation.
I0428 19:41:23.951434 24813 net.cpp:200] relu2 needs backward computation.
I0428 19:41:23.951437 24813 net.cpp:200] ip2 needs backward computation.
I0428 19:41:23.951442 24813 net.cpp:200] relu1 needs backward computation.
I0428 19:41:23.951444 24813 net.cpp:200] ip1 needs backward computation.
I0428 19:41:23.951447 24813 net.cpp:200] pool1 needs backward computation.
I0428 19:41:23.951452 24813 net.cpp:200] conv1 needs backward computation.
I0428 19:41:23.951455 24813 net.cpp:200] pool0 needs backward computation.
I0428 19:41:23.951459 24813 net.cpp:200] conv0 needs backward computation.
I0428 19:41:23.951463 24813 net.cpp:202] mnist does not need backward computation.
I0428 19:41:23.951467 24813 net.cpp:244] This network produces output loss
I0428 19:41:23.951478 24813 net.cpp:257] Network initialization done.
I0428 19:41:23.951861 24813 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test363.prototxt
I0428 19:41:23.951894 24813 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:23.952000 24813 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:23.952096 24813 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:23.952147 24813 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:23.952162 24813 net.cpp:86] Creating Layer mnist
I0428 19:41:23.952167 24813 net.cpp:382] mnist -> data
I0428 19:41:23.952177 24813 net.cpp:382] mnist -> label
I0428 19:41:23.952276 24813 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:23.954679 24813 net.cpp:124] Setting up mnist
I0428 19:41:23.954695 24813 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:23.954701 24813 net.cpp:131] Top shape: 100 (100)
I0428 19:41:23.954705 24813 net.cpp:139] Memory required for data: 314000
I0428 19:41:23.954710 24813 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:23.954723 24813 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:23.954727 24813 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:23.954733 24813 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:23.954741 24813 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:23.954795 24813 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:23.954802 24813 net.cpp:131] Top shape: 100 (100)
I0428 19:41:23.954807 24813 net.cpp:131] Top shape: 100 (100)
I0428 19:41:23.954810 24813 net.cpp:139] Memory required for data: 314800
I0428 19:41:23.954814 24813 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:23.954824 24813 net.cpp:86] Creating Layer conv0
I0428 19:41:23.954828 24813 net.cpp:408] conv0 <- data
I0428 19:41:23.954834 24813 net.cpp:382] conv0 -> conv0
I0428 19:41:23.956828 24813 net.cpp:124] Setting up conv0
I0428 19:41:23.956845 24813 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:23.956849 24813 net.cpp:139] Memory required for data: 775600
I0428 19:41:23.956861 24813 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:23.956868 24813 net.cpp:86] Creating Layer pool0
I0428 19:41:23.956872 24813 net.cpp:408] pool0 <- conv0
I0428 19:41:23.956878 24813 net.cpp:382] pool0 -> pool0
I0428 19:41:23.956923 24813 net.cpp:124] Setting up pool0
I0428 19:41:23.956929 24813 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:23.956933 24813 net.cpp:139] Memory required for data: 890800
I0428 19:41:23.956936 24813 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:23.956946 24813 net.cpp:86] Creating Layer conv1
I0428 19:41:23.956950 24813 net.cpp:408] conv1 <- pool0
I0428 19:41:23.956955 24813 net.cpp:382] conv1 -> conv1
I0428 19:41:23.958655 24813 net.cpp:124] Setting up conv1
I0428 19:41:23.958672 24813 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:23.958676 24813 net.cpp:139] Memory required for data: 1146800
I0428 19:41:23.958686 24813 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:23.958693 24813 net.cpp:86] Creating Layer pool1
I0428 19:41:23.958698 24813 net.cpp:408] pool1 <- conv1
I0428 19:41:23.958705 24813 net.cpp:382] pool1 -> pool1
I0428 19:41:23.958748 24813 net.cpp:124] Setting up pool1
I0428 19:41:23.958755 24813 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:23.958760 24813 net.cpp:139] Memory required for data: 1210800
I0428 19:41:23.958762 24813 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:23.958775 24813 net.cpp:86] Creating Layer ip1
I0428 19:41:23.958778 24813 net.cpp:408] ip1 <- pool1
I0428 19:41:23.958784 24813 net.cpp:382] ip1 -> ip1
I0428 19:41:23.958919 24813 net.cpp:124] Setting up ip1
I0428 19:41:23.958927 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.958945 24813 net.cpp:139] Memory required for data: 1214800
I0428 19:41:23.958955 24813 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:23.958961 24813 net.cpp:86] Creating Layer relu1
I0428 19:41:23.958964 24813 net.cpp:408] relu1 <- ip1
I0428 19:41:23.958971 24813 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:23.959177 24813 net.cpp:124] Setting up relu1
I0428 19:41:23.959187 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.959190 24813 net.cpp:139] Memory required for data: 1218800
I0428 19:41:23.959194 24813 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:23.959204 24813 net.cpp:86] Creating Layer ip2
I0428 19:41:23.959208 24813 net.cpp:408] ip2 <- ip1
I0428 19:41:23.959214 24813 net.cpp:382] ip2 -> ip2
I0428 19:41:23.959334 24813 net.cpp:124] Setting up ip2
I0428 19:41:23.959343 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.959348 24813 net.cpp:139] Memory required for data: 1222800
I0428 19:41:23.959354 24813 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:23.959360 24813 net.cpp:86] Creating Layer relu2
I0428 19:41:23.959367 24813 net.cpp:408] relu2 <- ip2
I0428 19:41:23.959372 24813 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:23.959588 24813 net.cpp:124] Setting up relu2
I0428 19:41:23.959597 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.959600 24813 net.cpp:139] Memory required for data: 1226800
I0428 19:41:23.959604 24813 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:23.959612 24813 net.cpp:86] Creating Layer ip3
I0428 19:41:23.959616 24813 net.cpp:408] ip3 <- ip2
I0428 19:41:23.959621 24813 net.cpp:382] ip3 -> ip3
I0428 19:41:23.959758 24813 net.cpp:124] Setting up ip3
I0428 19:41:23.959767 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.959784 24813 net.cpp:139] Memory required for data: 1230800
I0428 19:41:23.959794 24813 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:23.959801 24813 net.cpp:86] Creating Layer relu3
I0428 19:41:23.959805 24813 net.cpp:408] relu3 <- ip3
I0428 19:41:23.959810 24813 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:23.960754 24813 net.cpp:124] Setting up relu3
I0428 19:41:23.960772 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.960777 24813 net.cpp:139] Memory required for data: 1234800
I0428 19:41:23.960788 24813 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:23.960794 24813 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:23.960798 24813 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:23.960804 24813 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:23.960819 24813 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:23.960870 24813 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:23.960876 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.960880 24813 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:23.960885 24813 net.cpp:139] Memory required for data: 1242800
I0428 19:41:23.960888 24813 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:23.960894 24813 net.cpp:86] Creating Layer accuracy
I0428 19:41:23.960897 24813 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:23.960909 24813 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:23.960916 24813 net.cpp:382] accuracy -> accuracy
I0428 19:41:23.960924 24813 net.cpp:124] Setting up accuracy
I0428 19:41:23.960929 24813 net.cpp:131] Top shape: (1)
I0428 19:41:23.960932 24813 net.cpp:139] Memory required for data: 1242804
I0428 19:41:23.960937 24813 layer_factory.hpp:77] Creating layer loss
I0428 19:41:23.960949 24813 net.cpp:86] Creating Layer loss
I0428 19:41:23.960952 24813 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:23.960958 24813 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:23.960963 24813 net.cpp:382] loss -> loss
I0428 19:41:23.960969 24813 layer_factory.hpp:77] Creating layer loss
I0428 19:41:23.961268 24813 net.cpp:124] Setting up loss
I0428 19:41:23.961280 24813 net.cpp:131] Top shape: (1)
I0428 19:41:23.961284 24813 net.cpp:134]     with loss weight 1
I0428 19:41:23.961292 24813 net.cpp:139] Memory required for data: 1242808
I0428 19:41:23.961308 24813 net.cpp:200] loss needs backward computation.
I0428 19:41:23.961313 24813 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:23.961318 24813 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:23.961328 24813 net.cpp:200] relu3 needs backward computation.
I0428 19:41:23.961331 24813 net.cpp:200] ip3 needs backward computation.
I0428 19:41:23.961335 24813 net.cpp:200] relu2 needs backward computation.
I0428 19:41:23.961339 24813 net.cpp:200] ip2 needs backward computation.
I0428 19:41:23.961343 24813 net.cpp:200] relu1 needs backward computation.
I0428 19:41:23.961345 24813 net.cpp:200] ip1 needs backward computation.
I0428 19:41:23.961349 24813 net.cpp:200] pool1 needs backward computation.
I0428 19:41:23.961352 24813 net.cpp:200] conv1 needs backward computation.
I0428 19:41:23.961356 24813 net.cpp:200] pool0 needs backward computation.
I0428 19:41:23.961359 24813 net.cpp:200] conv0 needs backward computation.
I0428 19:41:23.961364 24813 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:23.961367 24813 net.cpp:202] mnist does not need backward computation.
I0428 19:41:23.961371 24813 net.cpp:244] This network produces output accuracy
I0428 19:41:23.961375 24813 net.cpp:244] This network produces output loss
I0428 19:41:23.961390 24813 net.cpp:257] Network initialization done.
I0428 19:41:23.961438 24813 solver.cpp:56] Solver scaffolding done.
I0428 19:41:23.961848 24813 caffe.cpp:248] Starting Optimization
I0428 19:41:23.961858 24813 solver.cpp:273] Solving LeNet
I0428 19:41:23.961863 24813 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:23.962844 24813 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:23.965342 24813 blocking_queue.cpp:49] Waiting for data
I0428 19:41:24.036326 24820 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:24.036763 24813 solver.cpp:398]     Test net output #0: accuracy = 0.13
I0428 19:41:24.036782 24813 solver.cpp:398]     Test net output #1: loss = 2.29367 (* 1 = 2.29367 loss)
I0428 19:41:24.038537 24813 solver.cpp:219] Iteration 0 (0 iter/s, 0.0766331s/100 iters), loss = 2.2933
I0428 19:41:24.038569 24813 solver.cpp:238]     Train net output #0: loss = 2.2933 (* 1 = 2.2933 loss)
I0428 19:41:24.038583 24813 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:24.114146 24813 solver.cpp:219] Iteration 100 (1323.35 iter/s, 0.0755655s/100 iters), loss = 1.44913
I0428 19:41:24.114171 24813 solver.cpp:238]     Train net output #0: loss = 1.44913 (* 1 = 1.44913 loss)
I0428 19:41:24.114176 24813 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:24.188758 24813 solver.cpp:219] Iteration 200 (1340.92 iter/s, 0.0745759s/100 iters), loss = 1.06514
I0428 19:41:24.188781 24813 solver.cpp:238]     Train net output #0: loss = 1.06514 (* 1 = 1.06514 loss)
I0428 19:41:24.188803 24813 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:24.260291 24813 solver.cpp:219] Iteration 300 (1398.69 iter/s, 0.0714955s/100 iters), loss = 0.567347
I0428 19:41:24.260347 24813 solver.cpp:238]     Train net output #0: loss = 0.567347 (* 1 = 0.567347 loss)
I0428 19:41:24.260354 24813 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:24.337985 24813 solver.cpp:219] Iteration 400 (1288.24 iter/s, 0.0776254s/100 iters), loss = 0.697737
I0428 19:41:24.338027 24813 solver.cpp:238]     Train net output #0: loss = 0.697737 (* 1 = 0.697737 loss)
I0428 19:41:24.338032 24813 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:24.412545 24813 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:24.465911 24820 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:24.466326 24813 solver.cpp:398]     Test net output #0: accuracy = 0.7385
I0428 19:41:24.466344 24813 solver.cpp:398]     Test net output #1: loss = 0.709754 (* 1 = 0.709754 loss)
I0428 19:41:24.467183 24813 solver.cpp:219] Iteration 500 (774.319 iter/s, 0.129146s/100 iters), loss = 0.750763
I0428 19:41:24.467211 24813 solver.cpp:238]     Train net output #0: loss = 0.750763 (* 1 = 0.750763 loss)
I0428 19:41:24.467236 24813 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:24.545083 24813 solver.cpp:219] Iteration 600 (1284.36 iter/s, 0.0778598s/100 iters), loss = 0.863996
I0428 19:41:24.545107 24813 solver.cpp:238]     Train net output #0: loss = 0.863996 (* 1 = 0.863996 loss)
I0428 19:41:24.545130 24813 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:24.620218 24813 solver.cpp:219] Iteration 700 (1331.56 iter/s, 0.0751s/100 iters), loss = 0.582883
I0428 19:41:24.620242 24813 solver.cpp:238]     Train net output #0: loss = 0.582883 (* 1 = 0.582883 loss)
I0428 19:41:24.620265 24813 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:24.693864 24813 solver.cpp:219] Iteration 800 (1358.49 iter/s, 0.0736113s/100 iters), loss = 0.857144
I0428 19:41:24.693904 24813 solver.cpp:238]     Train net output #0: loss = 0.857144 (* 1 = 0.857144 loss)
I0428 19:41:24.693927 24813 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:24.766832 24813 solver.cpp:219] Iteration 900 (1371.48 iter/s, 0.0729139s/100 iters), loss = 0.796769
I0428 19:41:24.766856 24813 solver.cpp:238]     Train net output #0: loss = 0.796769 (* 1 = 0.796769 loss)
I0428 19:41:24.766863 24813 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:24.791426 24819 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:24.838115 24813 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:24.838816 24813 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:24.839251 24813 solver.cpp:311] Iteration 1000, loss = 0.588446
I0428 19:41:24.839280 24813 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:24.905946 24820 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:24.906395 24813 solver.cpp:398]     Test net output #0: accuracy = 0.7657
I0428 19:41:24.906411 24813 solver.cpp:398]     Test net output #1: loss = 0.609858 (* 1 = 0.609858 loss)
I0428 19:41:24.906416 24813 solver.cpp:316] Optimization Done.
I0428 19:41:24.906419 24813 caffe.cpp:259] Optimization Done.
