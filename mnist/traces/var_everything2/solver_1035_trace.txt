I0428 20:06:42.429841 30932 caffe.cpp:218] Using GPUs 0
I0428 20:06:42.465421 30932 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:42.920262 30932 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1035.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:42.920399 30932 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1035.prototxt
I0428 20:06:42.920740 30932 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:42.920771 30932 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:42.920876 30932 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:42.920940 30932 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:42.921021 30932 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:42.921041 30932 net.cpp:86] Creating Layer mnist
I0428 20:06:42.921047 30932 net.cpp:382] mnist -> data
I0428 20:06:42.921066 30932 net.cpp:382] mnist -> label
I0428 20:06:42.922021 30932 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:42.924299 30932 net.cpp:124] Setting up mnist
I0428 20:06:42.924329 30932 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:42.924335 30932 net.cpp:131] Top shape: 64 (64)
I0428 20:06:42.924337 30932 net.cpp:139] Memory required for data: 200960
I0428 20:06:42.924342 30932 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:42.924357 30932 net.cpp:86] Creating Layer conv0
I0428 20:06:42.924379 30932 net.cpp:408] conv0 <- data
I0428 20:06:42.924391 30932 net.cpp:382] conv0 -> conv0
I0428 20:06:43.150521 30932 net.cpp:124] Setting up conv0
I0428 20:06:43.150563 30932 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:43.150566 30932 net.cpp:139] Memory required for data: 3887360
I0428 20:06:43.150581 30932 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:43.150609 30932 net.cpp:86] Creating Layer pool0
I0428 20:06:43.150612 30932 net.cpp:408] pool0 <- conv0
I0428 20:06:43.150631 30932 net.cpp:382] pool0 -> pool0
I0428 20:06:43.150673 30932 net.cpp:124] Setting up pool0
I0428 20:06:43.150681 30932 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:43.150682 30932 net.cpp:139] Memory required for data: 4808960
I0428 20:06:43.150686 30932 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:43.150696 30932 net.cpp:86] Creating Layer conv1
I0428 20:06:43.150698 30932 net.cpp:408] conv1 <- pool0
I0428 20:06:43.150703 30932 net.cpp:382] conv1 -> conv1
I0428 20:06:43.153671 30932 net.cpp:124] Setting up conv1
I0428 20:06:43.153686 30932 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:43.153689 30932 net.cpp:139] Memory required for data: 4890880
I0428 20:06:43.153697 30932 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:43.153703 30932 net.cpp:86] Creating Layer pool1
I0428 20:06:43.153707 30932 net.cpp:408] pool1 <- conv1
I0428 20:06:43.153710 30932 net.cpp:382] pool1 -> pool1
I0428 20:06:43.153760 30932 net.cpp:124] Setting up pool1
I0428 20:06:43.153766 30932 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:43.153769 30932 net.cpp:139] Memory required for data: 4911360
I0428 20:06:43.153772 30932 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:43.153779 30932 net.cpp:86] Creating Layer ip1
I0428 20:06:43.153782 30932 net.cpp:408] ip1 <- pool1
I0428 20:06:43.153787 30932 net.cpp:382] ip1 -> ip1
I0428 20:06:43.153887 30932 net.cpp:124] Setting up ip1
I0428 20:06:43.153893 30932 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:43.153897 30932 net.cpp:139] Memory required for data: 4917760
I0428 20:06:43.153903 30932 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:43.153908 30932 net.cpp:86] Creating Layer relu1
I0428 20:06:43.153911 30932 net.cpp:408] relu1 <- ip1
I0428 20:06:43.153915 30932 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:43.154067 30932 net.cpp:124] Setting up relu1
I0428 20:06:43.154075 30932 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:43.154078 30932 net.cpp:139] Memory required for data: 4924160
I0428 20:06:43.154081 30932 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:43.154088 30932 net.cpp:86] Creating Layer ip2
I0428 20:06:43.154090 30932 net.cpp:408] ip2 <- ip1
I0428 20:06:43.154095 30932 net.cpp:382] ip2 -> ip2
I0428 20:06:43.154176 30932 net.cpp:124] Setting up ip2
I0428 20:06:43.154183 30932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:43.154186 30932 net.cpp:139] Memory required for data: 4926720
I0428 20:06:43.154191 30932 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:43.154196 30932 net.cpp:86] Creating Layer relu2
I0428 20:06:43.154199 30932 net.cpp:408] relu2 <- ip2
I0428 20:06:43.154202 30932 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:43.154904 30932 net.cpp:124] Setting up relu2
I0428 20:06:43.154917 30932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:43.154937 30932 net.cpp:139] Memory required for data: 4929280
I0428 20:06:43.154940 30932 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:43.154947 30932 net.cpp:86] Creating Layer ip3
I0428 20:06:43.154950 30932 net.cpp:408] ip3 <- ip2
I0428 20:06:43.154955 30932 net.cpp:382] ip3 -> ip3
I0428 20:06:43.155047 30932 net.cpp:124] Setting up ip3
I0428 20:06:43.155055 30932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:43.155058 30932 net.cpp:139] Memory required for data: 4931840
I0428 20:06:43.155066 30932 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:43.155071 30932 net.cpp:86] Creating Layer relu3
I0428 20:06:43.155073 30932 net.cpp:408] relu3 <- ip3
I0428 20:06:43.155077 30932 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:43.155236 30932 net.cpp:124] Setting up relu3
I0428 20:06:43.155244 30932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:43.155247 30932 net.cpp:139] Memory required for data: 4934400
I0428 20:06:43.155251 30932 layer_factory.hpp:77] Creating layer loss
I0428 20:06:43.155256 30932 net.cpp:86] Creating Layer loss
I0428 20:06:43.155259 30932 net.cpp:408] loss <- ip3
I0428 20:06:43.155262 30932 net.cpp:408] loss <- label
I0428 20:06:43.155268 30932 net.cpp:382] loss -> loss
I0428 20:06:43.155282 30932 layer_factory.hpp:77] Creating layer loss
I0428 20:06:43.155524 30932 net.cpp:124] Setting up loss
I0428 20:06:43.155534 30932 net.cpp:131] Top shape: (1)
I0428 20:06:43.155536 30932 net.cpp:134]     with loss weight 1
I0428 20:06:43.155551 30932 net.cpp:139] Memory required for data: 4934404
I0428 20:06:43.155555 30932 net.cpp:200] loss needs backward computation.
I0428 20:06:43.155558 30932 net.cpp:200] relu3 needs backward computation.
I0428 20:06:43.155561 30932 net.cpp:200] ip3 needs backward computation.
I0428 20:06:43.155563 30932 net.cpp:200] relu2 needs backward computation.
I0428 20:06:43.155566 30932 net.cpp:200] ip2 needs backward computation.
I0428 20:06:43.155570 30932 net.cpp:200] relu1 needs backward computation.
I0428 20:06:43.155572 30932 net.cpp:200] ip1 needs backward computation.
I0428 20:06:43.155575 30932 net.cpp:200] pool1 needs backward computation.
I0428 20:06:43.155578 30932 net.cpp:200] conv1 needs backward computation.
I0428 20:06:43.155581 30932 net.cpp:200] pool0 needs backward computation.
I0428 20:06:43.155583 30932 net.cpp:200] conv0 needs backward computation.
I0428 20:06:43.155587 30932 net.cpp:202] mnist does not need backward computation.
I0428 20:06:43.155589 30932 net.cpp:244] This network produces output loss
I0428 20:06:43.155598 30932 net.cpp:257] Network initialization done.
I0428 20:06:43.155936 30932 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1035.prototxt
I0428 20:06:43.155977 30932 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:43.156062 30932 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:43.156136 30932 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:43.156178 30932 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:43.156189 30932 net.cpp:86] Creating Layer mnist
I0428 20:06:43.156193 30932 net.cpp:382] mnist -> data
I0428 20:06:43.156201 30932 net.cpp:382] mnist -> label
I0428 20:06:43.156277 30932 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:43.158197 30932 net.cpp:124] Setting up mnist
I0428 20:06:43.158229 30932 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:43.158234 30932 net.cpp:131] Top shape: 100 (100)
I0428 20:06:43.158237 30932 net.cpp:139] Memory required for data: 314000
I0428 20:06:43.158241 30932 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:43.158247 30932 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:43.158252 30932 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:43.158255 30932 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:43.158264 30932 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:43.158344 30932 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:43.158351 30932 net.cpp:131] Top shape: 100 (100)
I0428 20:06:43.158355 30932 net.cpp:131] Top shape: 100 (100)
I0428 20:06:43.158359 30932 net.cpp:139] Memory required for data: 314800
I0428 20:06:43.158360 30932 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:43.158370 30932 net.cpp:86] Creating Layer conv0
I0428 20:06:43.158372 30932 net.cpp:408] conv0 <- data
I0428 20:06:43.158377 30932 net.cpp:382] conv0 -> conv0
I0428 20:06:43.159914 30932 net.cpp:124] Setting up conv0
I0428 20:06:43.159943 30932 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:43.159946 30932 net.cpp:139] Memory required for data: 6074800
I0428 20:06:43.159956 30932 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:43.159963 30932 net.cpp:86] Creating Layer pool0
I0428 20:06:43.159967 30932 net.cpp:408] pool0 <- conv0
I0428 20:06:43.159971 30932 net.cpp:382] pool0 -> pool0
I0428 20:06:43.160007 30932 net.cpp:124] Setting up pool0
I0428 20:06:43.160013 30932 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:43.160017 30932 net.cpp:139] Memory required for data: 7514800
I0428 20:06:43.160019 30932 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:43.160027 30932 net.cpp:86] Creating Layer conv1
I0428 20:06:43.160030 30932 net.cpp:408] conv1 <- pool0
I0428 20:06:43.160034 30932 net.cpp:382] conv1 -> conv1
I0428 20:06:43.162019 30932 net.cpp:124] Setting up conv1
I0428 20:06:43.162047 30932 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:43.162051 30932 net.cpp:139] Memory required for data: 7642800
I0428 20:06:43.162060 30932 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:43.162065 30932 net.cpp:86] Creating Layer pool1
I0428 20:06:43.162068 30932 net.cpp:408] pool1 <- conv1
I0428 20:06:43.162073 30932 net.cpp:382] pool1 -> pool1
I0428 20:06:43.162154 30932 net.cpp:124] Setting up pool1
I0428 20:06:43.162165 30932 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:43.162171 30932 net.cpp:139] Memory required for data: 7674800
I0428 20:06:43.162195 30932 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:43.162205 30932 net.cpp:86] Creating Layer ip1
I0428 20:06:43.162210 30932 net.cpp:408] ip1 <- pool1
I0428 20:06:43.162220 30932 net.cpp:382] ip1 -> ip1
I0428 20:06:43.162358 30932 net.cpp:124] Setting up ip1
I0428 20:06:43.162367 30932 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:43.162382 30932 net.cpp:139] Memory required for data: 7684800
I0428 20:06:43.162390 30932 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:43.162396 30932 net.cpp:86] Creating Layer relu1
I0428 20:06:43.162400 30932 net.cpp:408] relu1 <- ip1
I0428 20:06:43.162405 30932 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:43.162586 30932 net.cpp:124] Setting up relu1
I0428 20:06:43.162598 30932 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:43.162601 30932 net.cpp:139] Memory required for data: 7694800
I0428 20:06:43.162606 30932 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:43.162612 30932 net.cpp:86] Creating Layer ip2
I0428 20:06:43.162616 30932 net.cpp:408] ip2 <- ip1
I0428 20:06:43.162619 30932 net.cpp:382] ip2 -> ip2
I0428 20:06:43.162729 30932 net.cpp:124] Setting up ip2
I0428 20:06:43.162736 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.162739 30932 net.cpp:139] Memory required for data: 7698800
I0428 20:06:43.162745 30932 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:43.162750 30932 net.cpp:86] Creating Layer relu2
I0428 20:06:43.162753 30932 net.cpp:408] relu2 <- ip2
I0428 20:06:43.162757 30932 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:43.162936 30932 net.cpp:124] Setting up relu2
I0428 20:06:43.162946 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.162950 30932 net.cpp:139] Memory required for data: 7702800
I0428 20:06:43.162953 30932 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:43.162958 30932 net.cpp:86] Creating Layer ip3
I0428 20:06:43.162961 30932 net.cpp:408] ip3 <- ip2
I0428 20:06:43.162966 30932 net.cpp:382] ip3 -> ip3
I0428 20:06:43.163074 30932 net.cpp:124] Setting up ip3
I0428 20:06:43.163084 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.163091 30932 net.cpp:139] Memory required for data: 7706800
I0428 20:06:43.163099 30932 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:43.163105 30932 net.cpp:86] Creating Layer relu3
I0428 20:06:43.163107 30932 net.cpp:408] relu3 <- ip3
I0428 20:06:43.163111 30932 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:43.163964 30932 net.cpp:124] Setting up relu3
I0428 20:06:43.163975 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.163993 30932 net.cpp:139] Memory required for data: 7710800
I0428 20:06:43.163997 30932 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:43.164002 30932 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:43.164005 30932 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:43.164011 30932 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:43.164017 30932 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:43.164059 30932 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:43.164065 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.164069 30932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:43.164072 30932 net.cpp:139] Memory required for data: 7718800
I0428 20:06:43.164074 30932 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:43.164080 30932 net.cpp:86] Creating Layer accuracy
I0428 20:06:43.164084 30932 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:43.164088 30932 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:43.164093 30932 net.cpp:382] accuracy -> accuracy
I0428 20:06:43.164099 30932 net.cpp:124] Setting up accuracy
I0428 20:06:43.164103 30932 net.cpp:131] Top shape: (1)
I0428 20:06:43.164105 30932 net.cpp:139] Memory required for data: 7718804
I0428 20:06:43.164108 30932 layer_factory.hpp:77] Creating layer loss
I0428 20:06:43.164113 30932 net.cpp:86] Creating Layer loss
I0428 20:06:43.164116 30932 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:43.164120 30932 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:43.164124 30932 net.cpp:382] loss -> loss
I0428 20:06:43.164129 30932 layer_factory.hpp:77] Creating layer loss
I0428 20:06:43.164379 30932 net.cpp:124] Setting up loss
I0428 20:06:43.164388 30932 net.cpp:131] Top shape: (1)
I0428 20:06:43.164391 30932 net.cpp:134]     with loss weight 1
I0428 20:06:43.164397 30932 net.cpp:139] Memory required for data: 7718808
I0428 20:06:43.164409 30932 net.cpp:200] loss needs backward computation.
I0428 20:06:43.164413 30932 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:43.164417 30932 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:43.164419 30932 net.cpp:200] relu3 needs backward computation.
I0428 20:06:43.164422 30932 net.cpp:200] ip3 needs backward computation.
I0428 20:06:43.164424 30932 net.cpp:200] relu2 needs backward computation.
I0428 20:06:43.164427 30932 net.cpp:200] ip2 needs backward computation.
I0428 20:06:43.164429 30932 net.cpp:200] relu1 needs backward computation.
I0428 20:06:43.164432 30932 net.cpp:200] ip1 needs backward computation.
I0428 20:06:43.164434 30932 net.cpp:200] pool1 needs backward computation.
I0428 20:06:43.164438 30932 net.cpp:200] conv1 needs backward computation.
I0428 20:06:43.164440 30932 net.cpp:200] pool0 needs backward computation.
I0428 20:06:43.164443 30932 net.cpp:200] conv0 needs backward computation.
I0428 20:06:43.164446 30932 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:43.164449 30932 net.cpp:202] mnist does not need backward computation.
I0428 20:06:43.164451 30932 net.cpp:244] This network produces output accuracy
I0428 20:06:43.164454 30932 net.cpp:244] This network produces output loss
I0428 20:06:43.164465 30932 net.cpp:257] Network initialization done.
I0428 20:06:43.164505 30932 solver.cpp:56] Solver scaffolding done.
I0428 20:06:43.164906 30932 caffe.cpp:248] Starting Optimization
I0428 20:06:43.164958 30932 solver.cpp:273] Solving LeNet
I0428 20:06:43.164979 30932 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:43.165832 30932 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:43.171350 30932 blocking_queue.cpp:49] Waiting for data
I0428 20:06:43.243680 30939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:43.244261 30932 solver.cpp:398]     Test net output #0: accuracy = 0.1025
I0428 20:06:43.244295 30932 solver.cpp:398]     Test net output #1: loss = 2.59438 (* 1 = 2.59438 loss)
I0428 20:06:43.247939 30932 solver.cpp:219] Iteration 0 (-9.79508e-43 iter/s, 0.0829305s/100 iters), loss = 2.72343
I0428 20:06:43.247978 30932 solver.cpp:238]     Train net output #0: loss = 2.72343 (* 1 = 2.72343 loss)
I0428 20:06:43.247989 30932 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:43.336984 30932 solver.cpp:219] Iteration 100 (1123.48 iter/s, 0.089009s/100 iters), loss = 0.824453
I0428 20:06:43.337025 30932 solver.cpp:238]     Train net output #0: loss = 0.824453 (* 1 = 0.824453 loss)
I0428 20:06:43.337033 30932 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:43.424749 30932 solver.cpp:219] Iteration 200 (1139.87 iter/s, 0.0877291s/100 iters), loss = 0.472959
I0428 20:06:43.424775 30932 solver.cpp:238]     Train net output #0: loss = 0.472959 (* 1 = 0.472959 loss)
I0428 20:06:43.424782 30932 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:43.516748 30932 solver.cpp:219] Iteration 300 (1087.39 iter/s, 0.0919634s/100 iters), loss = 0.321046
I0428 20:06:43.516773 30932 solver.cpp:238]     Train net output #0: loss = 0.321046 (* 1 = 0.321046 loss)
I0428 20:06:43.516779 30932 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:43.606633 30932 solver.cpp:219] Iteration 400 (1112.96 iter/s, 0.0898509s/100 iters), loss = 0.195784
I0428 20:06:43.606657 30932 solver.cpp:238]     Train net output #0: loss = 0.195784 (* 1 = 0.195784 loss)
I0428 20:06:43.606679 30932 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:43.694115 30932 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:43.748430 30939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:43.748992 30932 solver.cpp:398]     Test net output #0: accuracy = 0.9457
I0428 20:06:43.749027 30932 solver.cpp:398]     Test net output #1: loss = 0.177104 (* 1 = 0.177104 loss)
I0428 20:06:43.750094 30932 solver.cpp:219] Iteration 500 (697.231 iter/s, 0.143425s/100 iters), loss = 0.275233
I0428 20:06:43.750147 30932 solver.cpp:238]     Train net output #0: loss = 0.275233 (* 1 = 0.275233 loss)
I0428 20:06:43.750154 30932 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:43.841356 30932 solver.cpp:219] Iteration 600 (1096.48 iter/s, 0.0912005s/100 iters), loss = 0.17022
I0428 20:06:43.841395 30932 solver.cpp:238]     Train net output #0: loss = 0.17022 (* 1 = 0.17022 loss)
I0428 20:06:43.841401 30932 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:43.928351 30932 solver.cpp:219] Iteration 700 (1149.93 iter/s, 0.0869622s/100 iters), loss = 0.168876
I0428 20:06:43.928390 30932 solver.cpp:238]     Train net output #0: loss = 0.168876 (* 1 = 0.168876 loss)
I0428 20:06:43.928397 30932 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:44.019778 30932 solver.cpp:219] Iteration 800 (1094.18 iter/s, 0.0913929s/100 iters), loss = 0.364433
I0428 20:06:44.019819 30932 solver.cpp:238]     Train net output #0: loss = 0.364433 (* 1 = 0.364433 loss)
I0428 20:06:44.019825 30932 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:44.111755 30932 solver.cpp:219] Iteration 900 (1087.81 iter/s, 0.0919276s/100 iters), loss = 0.2521
I0428 20:06:44.111780 30932 solver.cpp:238]     Train net output #0: loss = 0.2521 (* 1 = 0.2521 loss)
I0428 20:06:44.111786 30932 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:44.140600 30938 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:44.197216 30932 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:44.197988 30932 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:44.198577 30932 solver.cpp:311] Iteration 1000, loss = 0.219622
I0428 20:06:44.198591 30932 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:44.262136 30939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:44.262728 30932 solver.cpp:398]     Test net output #0: accuracy = 0.9597
I0428 20:06:44.262761 30932 solver.cpp:398]     Test net output #1: loss = 0.119809 (* 1 = 0.119809 loss)
I0428 20:06:44.262766 30932 solver.cpp:316] Optimization Done.
I0428 20:06:44.262769 30932 caffe.cpp:259] Optimization Done.
