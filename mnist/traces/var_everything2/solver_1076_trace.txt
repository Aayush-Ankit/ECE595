I0428 20:08:10.894647 31324 caffe.cpp:218] Using GPUs 0
I0428 20:08:10.930274 31324 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:11.382602 31324 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1076.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:11.382730 31324 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1076.prototxt
I0428 20:08:11.383069 31324 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:11.383083 31324 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:11.383174 31324 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:11.383234 31324 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:11.383317 31324 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:11.383335 31324 net.cpp:86] Creating Layer mnist
I0428 20:08:11.383342 31324 net.cpp:382] mnist -> data
I0428 20:08:11.383363 31324 net.cpp:382] mnist -> label
I0428 20:08:11.384357 31324 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:11.386478 31324 net.cpp:124] Setting up mnist
I0428 20:08:11.386524 31324 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:11.386529 31324 net.cpp:131] Top shape: 64 (64)
I0428 20:08:11.386531 31324 net.cpp:139] Memory required for data: 200960
I0428 20:08:11.386538 31324 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:11.386554 31324 net.cpp:86] Creating Layer conv0
I0428 20:08:11.386582 31324 net.cpp:408] conv0 <- data
I0428 20:08:11.386592 31324 net.cpp:382] conv0 -> conv0
I0428 20:08:11.615636 31324 net.cpp:124] Setting up conv0
I0428 20:08:11.615661 31324 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:11.615665 31324 net.cpp:139] Memory required for data: 3887360
I0428 20:08:11.615679 31324 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:11.615692 31324 net.cpp:86] Creating Layer pool0
I0428 20:08:11.615696 31324 net.cpp:408] pool0 <- conv0
I0428 20:08:11.615701 31324 net.cpp:382] pool0 -> pool0
I0428 20:08:11.615759 31324 net.cpp:124] Setting up pool0
I0428 20:08:11.615764 31324 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:11.615767 31324 net.cpp:139] Memory required for data: 4808960
I0428 20:08:11.615769 31324 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:11.615780 31324 net.cpp:86] Creating Layer conv1
I0428 20:08:11.615783 31324 net.cpp:408] conv1 <- pool0
I0428 20:08:11.615787 31324 net.cpp:382] conv1 -> conv1
I0428 20:08:11.618608 31324 net.cpp:124] Setting up conv1
I0428 20:08:11.618639 31324 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:11.618643 31324 net.cpp:139] Memory required for data: 4972800
I0428 20:08:11.618652 31324 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:11.618660 31324 net.cpp:86] Creating Layer pool1
I0428 20:08:11.618664 31324 net.cpp:408] pool1 <- conv1
I0428 20:08:11.618669 31324 net.cpp:382] pool1 -> pool1
I0428 20:08:11.618703 31324 net.cpp:124] Setting up pool1
I0428 20:08:11.618710 31324 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:11.618712 31324 net.cpp:139] Memory required for data: 5013760
I0428 20:08:11.618715 31324 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:11.618721 31324 net.cpp:86] Creating Layer ip1
I0428 20:08:11.618724 31324 net.cpp:408] ip1 <- pool1
I0428 20:08:11.618728 31324 net.cpp:382] ip1 -> ip1
I0428 20:08:11.619690 31324 net.cpp:124] Setting up ip1
I0428 20:08:11.619704 31324 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:11.619706 31324 net.cpp:139] Memory required for data: 5020160
I0428 20:08:11.619714 31324 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:11.619720 31324 net.cpp:86] Creating Layer relu1
I0428 20:08:11.619724 31324 net.cpp:408] relu1 <- ip1
I0428 20:08:11.619729 31324 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:11.619902 31324 net.cpp:124] Setting up relu1
I0428 20:08:11.619911 31324 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:11.619915 31324 net.cpp:139] Memory required for data: 5026560
I0428 20:08:11.619917 31324 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:11.619923 31324 net.cpp:86] Creating Layer ip2
I0428 20:08:11.619926 31324 net.cpp:408] ip2 <- ip1
I0428 20:08:11.619931 31324 net.cpp:382] ip2 -> ip2
I0428 20:08:11.620018 31324 net.cpp:124] Setting up ip2
I0428 20:08:11.620024 31324 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:11.620028 31324 net.cpp:139] Memory required for data: 5029120
I0428 20:08:11.620033 31324 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:11.620038 31324 net.cpp:86] Creating Layer relu2
I0428 20:08:11.620040 31324 net.cpp:408] relu2 <- ip2
I0428 20:08:11.620044 31324 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:11.620852 31324 net.cpp:124] Setting up relu2
I0428 20:08:11.620864 31324 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:11.620883 31324 net.cpp:139] Memory required for data: 5031680
I0428 20:08:11.620887 31324 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:11.620909 31324 net.cpp:86] Creating Layer ip3
I0428 20:08:11.620913 31324 net.cpp:408] ip3 <- ip2
I0428 20:08:11.620918 31324 net.cpp:382] ip3 -> ip3
I0428 20:08:11.621039 31324 net.cpp:124] Setting up ip3
I0428 20:08:11.621047 31324 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:11.621050 31324 net.cpp:139] Memory required for data: 5034240
I0428 20:08:11.621059 31324 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:11.621064 31324 net.cpp:86] Creating Layer relu3
I0428 20:08:11.621068 31324 net.cpp:408] relu3 <- ip3
I0428 20:08:11.621073 31324 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:11.621306 31324 net.cpp:124] Setting up relu3
I0428 20:08:11.621315 31324 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:11.621318 31324 net.cpp:139] Memory required for data: 5036800
I0428 20:08:11.621321 31324 layer_factory.hpp:77] Creating layer loss
I0428 20:08:11.621328 31324 net.cpp:86] Creating Layer loss
I0428 20:08:11.621331 31324 net.cpp:408] loss <- ip3
I0428 20:08:11.621335 31324 net.cpp:408] loss <- label
I0428 20:08:11.621340 31324 net.cpp:382] loss -> loss
I0428 20:08:11.621357 31324 layer_factory.hpp:77] Creating layer loss
I0428 20:08:11.621609 31324 net.cpp:124] Setting up loss
I0428 20:08:11.621619 31324 net.cpp:131] Top shape: (1)
I0428 20:08:11.621639 31324 net.cpp:134]     with loss weight 1
I0428 20:08:11.621652 31324 net.cpp:139] Memory required for data: 5036804
I0428 20:08:11.621655 31324 net.cpp:200] loss needs backward computation.
I0428 20:08:11.621659 31324 net.cpp:200] relu3 needs backward computation.
I0428 20:08:11.621662 31324 net.cpp:200] ip3 needs backward computation.
I0428 20:08:11.621665 31324 net.cpp:200] relu2 needs backward computation.
I0428 20:08:11.621668 31324 net.cpp:200] ip2 needs backward computation.
I0428 20:08:11.621671 31324 net.cpp:200] relu1 needs backward computation.
I0428 20:08:11.621675 31324 net.cpp:200] ip1 needs backward computation.
I0428 20:08:11.621677 31324 net.cpp:200] pool1 needs backward computation.
I0428 20:08:11.621680 31324 net.cpp:200] conv1 needs backward computation.
I0428 20:08:11.621685 31324 net.cpp:200] pool0 needs backward computation.
I0428 20:08:11.621687 31324 net.cpp:200] conv0 needs backward computation.
I0428 20:08:11.621690 31324 net.cpp:202] mnist does not need backward computation.
I0428 20:08:11.621693 31324 net.cpp:244] This network produces output loss
I0428 20:08:11.621702 31324 net.cpp:257] Network initialization done.
I0428 20:08:11.622054 31324 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1076.prototxt
I0428 20:08:11.622081 31324 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:11.622162 31324 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:11.622234 31324 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:11.622277 31324 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:11.622289 31324 net.cpp:86] Creating Layer mnist
I0428 20:08:11.622293 31324 net.cpp:382] mnist -> data
I0428 20:08:11.622300 31324 net.cpp:382] mnist -> label
I0428 20:08:11.622390 31324 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:11.624337 31324 net.cpp:124] Setting up mnist
I0428 20:08:11.624366 31324 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:11.624372 31324 net.cpp:131] Top shape: 100 (100)
I0428 20:08:11.624375 31324 net.cpp:139] Memory required for data: 314000
I0428 20:08:11.624393 31324 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:11.624402 31324 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:11.624404 31324 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:11.624409 31324 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:11.624415 31324 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:11.624549 31324 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:11.624557 31324 net.cpp:131] Top shape: 100 (100)
I0428 20:08:11.624562 31324 net.cpp:131] Top shape: 100 (100)
I0428 20:08:11.624563 31324 net.cpp:139] Memory required for data: 314800
I0428 20:08:11.624567 31324 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:11.624575 31324 net.cpp:86] Creating Layer conv0
I0428 20:08:11.624579 31324 net.cpp:408] conv0 <- data
I0428 20:08:11.624584 31324 net.cpp:382] conv0 -> conv0
I0428 20:08:11.626133 31324 net.cpp:124] Setting up conv0
I0428 20:08:11.626163 31324 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:11.626166 31324 net.cpp:139] Memory required for data: 6074800
I0428 20:08:11.626175 31324 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:11.626181 31324 net.cpp:86] Creating Layer pool0
I0428 20:08:11.626184 31324 net.cpp:408] pool0 <- conv0
I0428 20:08:11.626189 31324 net.cpp:382] pool0 -> pool0
I0428 20:08:11.626222 31324 net.cpp:124] Setting up pool0
I0428 20:08:11.626227 31324 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:11.626230 31324 net.cpp:139] Memory required for data: 7514800
I0428 20:08:11.626233 31324 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:11.626241 31324 net.cpp:86] Creating Layer conv1
I0428 20:08:11.626245 31324 net.cpp:408] conv1 <- pool0
I0428 20:08:11.626248 31324 net.cpp:382] conv1 -> conv1
I0428 20:08:11.628410 31324 net.cpp:124] Setting up conv1
I0428 20:08:11.628423 31324 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:11.628448 31324 net.cpp:139] Memory required for data: 7770800
I0428 20:08:11.628458 31324 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:11.628463 31324 net.cpp:86] Creating Layer pool1
I0428 20:08:11.628468 31324 net.cpp:408] pool1 <- conv1
I0428 20:08:11.628473 31324 net.cpp:382] pool1 -> pool1
I0428 20:08:11.628512 31324 net.cpp:124] Setting up pool1
I0428 20:08:11.628518 31324 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:11.628521 31324 net.cpp:139] Memory required for data: 7834800
I0428 20:08:11.628525 31324 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:11.628767 31324 net.cpp:86] Creating Layer ip1
I0428 20:08:11.628770 31324 net.cpp:408] ip1 <- pool1
I0428 20:08:11.628775 31324 net.cpp:382] ip1 -> ip1
I0428 20:08:11.628963 31324 net.cpp:124] Setting up ip1
I0428 20:08:11.628973 31324 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:11.628989 31324 net.cpp:139] Memory required for data: 7844800
I0428 20:08:11.629004 31324 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:11.629009 31324 net.cpp:86] Creating Layer relu1
I0428 20:08:11.629014 31324 net.cpp:408] relu1 <- ip1
I0428 20:08:11.629019 31324 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:11.629263 31324 net.cpp:124] Setting up relu1
I0428 20:08:11.629273 31324 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:11.629277 31324 net.cpp:139] Memory required for data: 7854800
I0428 20:08:11.629281 31324 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:11.629288 31324 net.cpp:86] Creating Layer ip2
I0428 20:08:11.629292 31324 net.cpp:408] ip2 <- ip1
I0428 20:08:11.629297 31324 net.cpp:382] ip2 -> ip2
I0428 20:08:11.629401 31324 net.cpp:124] Setting up ip2
I0428 20:08:11.629410 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.629413 31324 net.cpp:139] Memory required for data: 7858800
I0428 20:08:11.629420 31324 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:11.629425 31324 net.cpp:86] Creating Layer relu2
I0428 20:08:11.629428 31324 net.cpp:408] relu2 <- ip2
I0428 20:08:11.629432 31324 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:11.629587 31324 net.cpp:124] Setting up relu2
I0428 20:08:11.629595 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.629598 31324 net.cpp:139] Memory required for data: 7862800
I0428 20:08:11.629612 31324 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:11.629618 31324 net.cpp:86] Creating Layer ip3
I0428 20:08:11.629621 31324 net.cpp:408] ip3 <- ip2
I0428 20:08:11.629627 31324 net.cpp:382] ip3 -> ip3
I0428 20:08:11.629720 31324 net.cpp:124] Setting up ip3
I0428 20:08:11.629727 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.629731 31324 net.cpp:139] Memory required for data: 7866800
I0428 20:08:11.629739 31324 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:11.629743 31324 net.cpp:86] Creating Layer relu3
I0428 20:08:11.629746 31324 net.cpp:408] relu3 <- ip3
I0428 20:08:11.629750 31324 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:11.630630 31324 net.cpp:124] Setting up relu3
I0428 20:08:11.630661 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.630664 31324 net.cpp:139] Memory required for data: 7870800
I0428 20:08:11.630667 31324 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:11.630689 31324 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:11.630693 31324 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:11.630698 31324 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:11.630707 31324 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:11.630775 31324 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:11.630796 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.630800 31324 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:11.630803 31324 net.cpp:139] Memory required for data: 7878800
I0428 20:08:11.630807 31324 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:11.630812 31324 net.cpp:86] Creating Layer accuracy
I0428 20:08:11.630815 31324 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:11.630820 31324 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:11.630825 31324 net.cpp:382] accuracy -> accuracy
I0428 20:08:11.630832 31324 net.cpp:124] Setting up accuracy
I0428 20:08:11.630837 31324 net.cpp:131] Top shape: (1)
I0428 20:08:11.630841 31324 net.cpp:139] Memory required for data: 7878804
I0428 20:08:11.630843 31324 layer_factory.hpp:77] Creating layer loss
I0428 20:08:11.630848 31324 net.cpp:86] Creating Layer loss
I0428 20:08:11.630852 31324 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:11.630856 31324 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:11.630861 31324 net.cpp:382] loss -> loss
I0428 20:08:11.630867 31324 layer_factory.hpp:77] Creating layer loss
I0428 20:08:11.631141 31324 net.cpp:124] Setting up loss
I0428 20:08:11.631151 31324 net.cpp:131] Top shape: (1)
I0428 20:08:11.631155 31324 net.cpp:134]     with loss weight 1
I0428 20:08:11.631172 31324 net.cpp:139] Memory required for data: 7878808
I0428 20:08:11.631177 31324 net.cpp:200] loss needs backward computation.
I0428 20:08:11.631181 31324 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:11.631186 31324 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:11.631189 31324 net.cpp:200] relu3 needs backward computation.
I0428 20:08:11.631193 31324 net.cpp:200] ip3 needs backward computation.
I0428 20:08:11.631196 31324 net.cpp:200] relu2 needs backward computation.
I0428 20:08:11.631199 31324 net.cpp:200] ip2 needs backward computation.
I0428 20:08:11.631202 31324 net.cpp:200] relu1 needs backward computation.
I0428 20:08:11.631211 31324 net.cpp:200] ip1 needs backward computation.
I0428 20:08:11.631214 31324 net.cpp:200] pool1 needs backward computation.
I0428 20:08:11.631218 31324 net.cpp:200] conv1 needs backward computation.
I0428 20:08:11.631222 31324 net.cpp:200] pool0 needs backward computation.
I0428 20:08:11.631225 31324 net.cpp:200] conv0 needs backward computation.
I0428 20:08:11.631229 31324 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:11.631233 31324 net.cpp:202] mnist does not need backward computation.
I0428 20:08:11.631237 31324 net.cpp:244] This network produces output accuracy
I0428 20:08:11.631240 31324 net.cpp:244] This network produces output loss
I0428 20:08:11.631250 31324 net.cpp:257] Network initialization done.
I0428 20:08:11.631294 31324 solver.cpp:56] Solver scaffolding done.
I0428 20:08:11.631650 31324 caffe.cpp:248] Starting Optimization
I0428 20:08:11.631656 31324 solver.cpp:273] Solving LeNet
I0428 20:08:11.631660 31324 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:11.632488 31324 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:11.637081 31324 blocking_queue.cpp:49] Waiting for data
I0428 20:08:11.708271 31331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:11.708932 31324 solver.cpp:398]     Test net output #0: accuracy = 0.0982
I0428 20:08:11.708967 31324 solver.cpp:398]     Test net output #1: loss = 2.31664 (* 1 = 2.31664 loss)
I0428 20:08:11.712608 31324 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809144s/100 iters), loss = 2.32428
I0428 20:08:11.712630 31324 solver.cpp:238]     Train net output #0: loss = 2.32428 (* 1 = 2.32428 loss)
I0428 20:08:11.712641 31324 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:11.810971 31324 solver.cpp:219] Iteration 100 (1017.09 iter/s, 0.0983195s/100 iters), loss = 0.794362
I0428 20:08:11.811012 31324 solver.cpp:238]     Train net output #0: loss = 0.794362 (* 1 = 0.794362 loss)
I0428 20:08:11.811017 31324 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:11.904618 31324 solver.cpp:219] Iteration 200 (1068.41 iter/s, 0.0935967s/100 iters), loss = 0.309967
I0428 20:08:11.904657 31324 solver.cpp:238]     Train net output #0: loss = 0.309967 (* 1 = 0.309967 loss)
I0428 20:08:11.904664 31324 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:11.997310 31324 solver.cpp:219] Iteration 300 (1079.23 iter/s, 0.0926587s/100 iters), loss = 0.320457
I0428 20:08:11.997349 31324 solver.cpp:238]     Train net output #0: loss = 0.320457 (* 1 = 0.320457 loss)
I0428 20:08:11.997354 31324 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:12.088518 31324 solver.cpp:219] Iteration 400 (1096.78 iter/s, 0.091176s/100 iters), loss = 0.105075
I0428 20:08:12.088542 31324 solver.cpp:238]     Train net output #0: loss = 0.105075 (* 1 = 0.105075 loss)
I0428 20:08:12.088548 31324 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:12.179858 31324 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:12.252583 31331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:12.253193 31324 solver.cpp:398]     Test net output #0: accuracy = 0.9458
I0428 20:08:12.253226 31324 solver.cpp:398]     Test net output #1: loss = 0.187877 (* 1 = 0.187877 loss)
I0428 20:08:12.254155 31324 solver.cpp:219] Iteration 500 (603.871 iter/s, 0.165598s/100 iters), loss = 0.164004
I0428 20:08:12.254205 31324 solver.cpp:238]     Train net output #0: loss = 0.164004 (* 1 = 0.164004 loss)
I0428 20:08:12.254215 31324 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:12.351487 31324 solver.cpp:219] Iteration 600 (1027.92 iter/s, 0.0972836s/100 iters), loss = 0.0709225
I0428 20:08:12.351527 31324 solver.cpp:238]     Train net output #0: loss = 0.0709226 (* 1 = 0.0709226 loss)
I0428 20:08:12.351533 31324 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:12.451164 31324 solver.cpp:219] Iteration 700 (1003.76 iter/s, 0.099625s/100 iters), loss = 0.136522
I0428 20:08:12.451210 31324 solver.cpp:238]     Train net output #0: loss = 0.136522 (* 1 = 0.136522 loss)
I0428 20:08:12.451217 31324 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:12.549826 31324 solver.cpp:219] Iteration 800 (1014.14 iter/s, 0.0986061s/100 iters), loss = 0.365801
I0428 20:08:12.549867 31324 solver.cpp:238]     Train net output #0: loss = 0.365801 (* 1 = 0.365801 loss)
I0428 20:08:12.549875 31324 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:12.643133 31324 solver.cpp:219] Iteration 900 (1072.31 iter/s, 0.0932567s/100 iters), loss = 0.171058
I0428 20:08:12.643172 31324 solver.cpp:238]     Train net output #0: loss = 0.171058 (* 1 = 0.171058 loss)
I0428 20:08:12.643194 31324 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:12.674162 31330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:12.733974 31324 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:12.734849 31324 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:12.735443 31324 solver.cpp:311] Iteration 1000, loss = 0.128676
I0428 20:08:12.735466 31324 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:12.790453 31331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:12.791064 31324 solver.cpp:398]     Test net output #0: accuracy = 0.966
I0428 20:08:12.791084 31324 solver.cpp:398]     Test net output #1: loss = 0.110853 (* 1 = 0.110853 loss)
I0428 20:08:12.791088 31324 solver.cpp:316] Optimization Done.
I0428 20:08:12.791090 31324 caffe.cpp:259] Optimization Done.
