I0428 19:29:34.645341 22059 caffe.cpp:218] Using GPUs 0
I0428 19:29:34.686194 22059 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:35.208292 22059 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test63.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:35.208431 22059 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test63.prototxt
I0428 19:29:35.208803 22059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:35.208828 22059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:35.208921 22059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:35.208999 22059 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:35.209101 22059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:35.209126 22059 net.cpp:86] Creating Layer mnist
I0428 19:29:35.209134 22059 net.cpp:382] mnist -> data
I0428 19:29:35.209156 22059 net.cpp:382] mnist -> label
I0428 19:29:35.210255 22059 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:35.212718 22059 net.cpp:124] Setting up mnist
I0428 19:29:35.212734 22059 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:35.212743 22059 net.cpp:131] Top shape: 64 (64)
I0428 19:29:35.212745 22059 net.cpp:139] Memory required for data: 200960
I0428 19:29:35.212757 22059 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:35.212772 22059 net.cpp:86] Creating Layer conv0
I0428 19:29:35.212779 22059 net.cpp:408] conv0 <- data
I0428 19:29:35.212791 22059 net.cpp:382] conv0 -> conv0
I0428 19:29:35.505692 22059 net.cpp:124] Setting up conv0
I0428 19:29:35.505722 22059 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:35.505728 22059 net.cpp:139] Memory required for data: 495872
I0428 19:29:35.505744 22059 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:35.505759 22059 net.cpp:86] Creating Layer pool0
I0428 19:29:35.505784 22059 net.cpp:408] pool0 <- conv0
I0428 19:29:35.505791 22059 net.cpp:382] pool0 -> pool0
I0428 19:29:35.505846 22059 net.cpp:124] Setting up pool0
I0428 19:29:35.505861 22059 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:35.505866 22059 net.cpp:139] Memory required for data: 569600
I0428 19:29:35.505868 22059 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:35.505877 22059 net.cpp:86] Creating Layer ip1
I0428 19:29:35.505882 22059 net.cpp:408] ip1 <- pool0
I0428 19:29:35.505887 22059 net.cpp:382] ip1 -> ip1
I0428 19:29:35.506991 22059 net.cpp:124] Setting up ip1
I0428 19:29:35.507006 22059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:35.507010 22059 net.cpp:139] Memory required for data: 576000
I0428 19:29:35.507019 22059 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:35.507027 22059 net.cpp:86] Creating Layer relu1
I0428 19:29:35.507031 22059 net.cpp:408] relu1 <- ip1
I0428 19:29:35.507038 22059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:35.507230 22059 net.cpp:124] Setting up relu1
I0428 19:29:35.507241 22059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:35.507244 22059 net.cpp:139] Memory required for data: 582400
I0428 19:29:35.507248 22059 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:35.507256 22059 net.cpp:86] Creating Layer ip2
I0428 19:29:35.507258 22059 net.cpp:408] ip2 <- ip1
I0428 19:29:35.507264 22059 net.cpp:382] ip2 -> ip2
I0428 19:29:35.507374 22059 net.cpp:124] Setting up ip2
I0428 19:29:35.507381 22059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:35.507385 22059 net.cpp:139] Memory required for data: 588800
I0428 19:29:35.507393 22059 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:35.507400 22059 net.cpp:86] Creating Layer relu2
I0428 19:29:35.507402 22059 net.cpp:408] relu2 <- ip2
I0428 19:29:35.507407 22059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:35.508230 22059 net.cpp:124] Setting up relu2
I0428 19:29:35.508244 22059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:35.508249 22059 net.cpp:139] Memory required for data: 595200
I0428 19:29:35.508252 22059 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:35.508260 22059 net.cpp:86] Creating Layer ip3
I0428 19:29:35.508263 22059 net.cpp:408] ip3 <- ip2
I0428 19:29:35.508270 22059 net.cpp:382] ip3 -> ip3
I0428 19:29:35.508384 22059 net.cpp:124] Setting up ip3
I0428 19:29:35.508393 22059 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:35.508396 22059 net.cpp:139] Memory required for data: 597760
I0428 19:29:35.508402 22059 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:35.508409 22059 net.cpp:86] Creating Layer relu3
I0428 19:29:35.508414 22059 net.cpp:408] relu3 <- ip3
I0428 19:29:35.508417 22059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:35.508594 22059 net.cpp:124] Setting up relu3
I0428 19:29:35.508602 22059 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:35.508606 22059 net.cpp:139] Memory required for data: 600320
I0428 19:29:35.508610 22059 layer_factory.hpp:77] Creating layer loss
I0428 19:29:35.508616 22059 net.cpp:86] Creating Layer loss
I0428 19:29:35.508620 22059 net.cpp:408] loss <- ip3
I0428 19:29:35.508625 22059 net.cpp:408] loss <- label
I0428 19:29:35.508630 22059 net.cpp:382] loss -> loss
I0428 19:29:35.508646 22059 layer_factory.hpp:77] Creating layer loss
I0428 19:29:35.508916 22059 net.cpp:124] Setting up loss
I0428 19:29:35.508927 22059 net.cpp:131] Top shape: (1)
I0428 19:29:35.508931 22059 net.cpp:134]     with loss weight 1
I0428 19:29:35.508949 22059 net.cpp:139] Memory required for data: 600324
I0428 19:29:35.508967 22059 net.cpp:200] loss needs backward computation.
I0428 19:29:35.508972 22059 net.cpp:200] relu3 needs backward computation.
I0428 19:29:35.508975 22059 net.cpp:200] ip3 needs backward computation.
I0428 19:29:35.508980 22059 net.cpp:200] relu2 needs backward computation.
I0428 19:29:35.508982 22059 net.cpp:200] ip2 needs backward computation.
I0428 19:29:35.508985 22059 net.cpp:200] relu1 needs backward computation.
I0428 19:29:35.508988 22059 net.cpp:200] ip1 needs backward computation.
I0428 19:29:35.509003 22059 net.cpp:200] pool0 needs backward computation.
I0428 19:29:35.509007 22059 net.cpp:200] conv0 needs backward computation.
I0428 19:29:35.509011 22059 net.cpp:202] mnist does not need backward computation.
I0428 19:29:35.509014 22059 net.cpp:244] This network produces output loss
I0428 19:29:35.509023 22059 net.cpp:257] Network initialization done.
I0428 19:29:35.509328 22059 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test63.prototxt
I0428 19:29:35.509356 22059 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:35.509448 22059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:35.509517 22059 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:35.509567 22059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:35.509580 22059 net.cpp:86] Creating Layer mnist
I0428 19:29:35.509587 22059 net.cpp:382] mnist -> data
I0428 19:29:35.509594 22059 net.cpp:382] mnist -> label
I0428 19:29:35.509687 22059 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:35.511924 22059 net.cpp:124] Setting up mnist
I0428 19:29:35.511940 22059 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:35.511945 22059 net.cpp:131] Top shape: 100 (100)
I0428 19:29:35.511948 22059 net.cpp:139] Memory required for data: 314000
I0428 19:29:35.511952 22059 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:35.511960 22059 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:35.511963 22059 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:35.511968 22059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:35.511976 22059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:35.512042 22059 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:35.512049 22059 net.cpp:131] Top shape: 100 (100)
I0428 19:29:35.512053 22059 net.cpp:131] Top shape: 100 (100)
I0428 19:29:35.512056 22059 net.cpp:139] Memory required for data: 314800
I0428 19:29:35.512069 22059 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:35.512079 22059 net.cpp:86] Creating Layer conv0
I0428 19:29:35.512084 22059 net.cpp:408] conv0 <- data
I0428 19:29:35.512089 22059 net.cpp:382] conv0 -> conv0
I0428 19:29:35.513927 22059 net.cpp:124] Setting up conv0
I0428 19:29:35.513943 22059 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:35.513947 22059 net.cpp:139] Memory required for data: 775600
I0428 19:29:35.513957 22059 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:35.513964 22059 net.cpp:86] Creating Layer pool0
I0428 19:29:35.513968 22059 net.cpp:408] pool0 <- conv0
I0428 19:29:35.513974 22059 net.cpp:382] pool0 -> pool0
I0428 19:29:35.514014 22059 net.cpp:124] Setting up pool0
I0428 19:29:35.514020 22059 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:35.514024 22059 net.cpp:139] Memory required for data: 890800
I0428 19:29:35.514027 22059 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:35.514034 22059 net.cpp:86] Creating Layer ip1
I0428 19:29:35.514039 22059 net.cpp:408] ip1 <- pool0
I0428 19:29:35.514044 22059 net.cpp:382] ip1 -> ip1
I0428 19:29:35.514188 22059 net.cpp:124] Setting up ip1
I0428 19:29:35.514195 22059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:35.514199 22059 net.cpp:139] Memory required for data: 900800
I0428 19:29:35.514206 22059 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:35.514211 22059 net.cpp:86] Creating Layer relu1
I0428 19:29:35.514215 22059 net.cpp:408] relu1 <- ip1
I0428 19:29:35.514219 22059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:35.514394 22059 net.cpp:124] Setting up relu1
I0428 19:29:35.514403 22059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:35.514406 22059 net.cpp:139] Memory required for data: 910800
I0428 19:29:35.514410 22059 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:35.514416 22059 net.cpp:86] Creating Layer ip2
I0428 19:29:35.514420 22059 net.cpp:408] ip2 <- ip1
I0428 19:29:35.514425 22059 net.cpp:382] ip2 -> ip2
I0428 19:29:35.514533 22059 net.cpp:124] Setting up ip2
I0428 19:29:35.514541 22059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:35.514544 22059 net.cpp:139] Memory required for data: 920800
I0428 19:29:35.514552 22059 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:35.514557 22059 net.cpp:86] Creating Layer relu2
I0428 19:29:35.514561 22059 net.cpp:408] relu2 <- ip2
I0428 19:29:35.514565 22059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:35.515465 22059 net.cpp:124] Setting up relu2
I0428 19:29:35.515480 22059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:35.515483 22059 net.cpp:139] Memory required for data: 930800
I0428 19:29:35.515487 22059 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:35.515496 22059 net.cpp:86] Creating Layer ip3
I0428 19:29:35.515499 22059 net.cpp:408] ip3 <- ip2
I0428 19:29:35.515506 22059 net.cpp:382] ip3 -> ip3
I0428 19:29:35.515650 22059 net.cpp:124] Setting up ip3
I0428 19:29:35.515661 22059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:35.515663 22059 net.cpp:139] Memory required for data: 934800
I0428 19:29:35.515671 22059 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:35.515676 22059 net.cpp:86] Creating Layer relu3
I0428 19:29:35.515686 22059 net.cpp:408] relu3 <- ip3
I0428 19:29:35.515691 22059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:35.515866 22059 net.cpp:124] Setting up relu3
I0428 19:29:35.515875 22059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:35.515879 22059 net.cpp:139] Memory required for data: 938800
I0428 19:29:35.515882 22059 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:35.515894 22059 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:35.515898 22059 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:35.515903 22059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:35.515914 22059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:35.515954 22059 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:35.515959 22059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:35.515962 22059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:35.515979 22059 net.cpp:139] Memory required for data: 946800
I0428 19:29:35.515982 22059 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:35.515995 22059 net.cpp:86] Creating Layer accuracy
I0428 19:29:35.515998 22059 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:35.516002 22059 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:35.516016 22059 net.cpp:382] accuracy -> accuracy
I0428 19:29:35.516024 22059 net.cpp:124] Setting up accuracy
I0428 19:29:35.516029 22059 net.cpp:131] Top shape: (1)
I0428 19:29:35.516032 22059 net.cpp:139] Memory required for data: 946804
I0428 19:29:35.516043 22059 layer_factory.hpp:77] Creating layer loss
I0428 19:29:35.516048 22059 net.cpp:86] Creating Layer loss
I0428 19:29:35.516052 22059 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:35.516057 22059 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:35.516067 22059 net.cpp:382] loss -> loss
I0428 19:29:35.516073 22059 layer_factory.hpp:77] Creating layer loss
I0428 19:29:35.516327 22059 net.cpp:124] Setting up loss
I0428 19:29:35.516338 22059 net.cpp:131] Top shape: (1)
I0428 19:29:35.516342 22059 net.cpp:134]     with loss weight 1
I0428 19:29:35.516350 22059 net.cpp:139] Memory required for data: 946808
I0428 19:29:35.516355 22059 net.cpp:200] loss needs backward computation.
I0428 19:29:35.516358 22059 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:35.516362 22059 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:35.516366 22059 net.cpp:200] relu3 needs backward computation.
I0428 19:29:35.516371 22059 net.cpp:200] ip3 needs backward computation.
I0428 19:29:35.516373 22059 net.cpp:200] relu2 needs backward computation.
I0428 19:29:35.516376 22059 net.cpp:200] ip2 needs backward computation.
I0428 19:29:35.516381 22059 net.cpp:200] relu1 needs backward computation.
I0428 19:29:35.516383 22059 net.cpp:200] ip1 needs backward computation.
I0428 19:29:35.516396 22059 net.cpp:200] pool0 needs backward computation.
I0428 19:29:35.516399 22059 net.cpp:200] conv0 needs backward computation.
I0428 19:29:35.516403 22059 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:35.516408 22059 net.cpp:202] mnist does not need backward computation.
I0428 19:29:35.516410 22059 net.cpp:244] This network produces output accuracy
I0428 19:29:35.516414 22059 net.cpp:244] This network produces output loss
I0428 19:29:35.516430 22059 net.cpp:257] Network initialization done.
I0428 19:29:35.516470 22059 solver.cpp:56] Solver scaffolding done.
I0428 19:29:35.516775 22059 caffe.cpp:248] Starting Optimization
I0428 19:29:35.516782 22059 solver.cpp:273] Solving LeNet
I0428 19:29:35.516785 22059 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:35.517632 22059 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:35.519745 22059 blocking_queue.cpp:49] Waiting for data
I0428 19:29:35.594030 22068 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:35.594563 22059 solver.cpp:398]     Test net output #0: accuracy = 0.1097
I0428 19:29:35.594594 22059 solver.cpp:398]     Test net output #1: loss = 2.28925 (* 1 = 2.28925 loss)
I0428 19:29:35.596882 22059 solver.cpp:219] Iteration 0 (-2.34191e-31 iter/s, 0.0800532s/100 iters), loss = 2.29973
I0428 19:29:35.596925 22059 solver.cpp:238]     Train net output #0: loss = 2.29973 (* 1 = 2.29973 loss)
I0428 19:29:35.596943 22059 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:35.666026 22059 solver.cpp:219] Iteration 100 (1447.3 iter/s, 0.0690944s/100 iters), loss = 0.461913
I0428 19:29:35.666060 22059 solver.cpp:238]     Train net output #0: loss = 0.461913 (* 1 = 0.461913 loss)
I0428 19:29:35.666069 22059 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:35.739313 22059 solver.cpp:219] Iteration 200 (1365.36 iter/s, 0.0732406s/100 iters), loss = 0.289487
I0428 19:29:35.739358 22059 solver.cpp:238]     Train net output #0: loss = 0.289487 (* 1 = 0.289487 loss)
I0428 19:29:35.739369 22059 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:35.805025 22059 solver.cpp:219] Iteration 300 (1522.98 iter/s, 0.0656609s/100 iters), loss = 0.304839
I0428 19:29:35.805055 22059 solver.cpp:238]     Train net output #0: loss = 0.304839 (* 1 = 0.304839 loss)
I0428 19:29:35.805063 22059 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:35.864658 22059 solver.cpp:219] Iteration 400 (1678 iter/s, 0.0595947s/100 iters), loss = 0.176172
I0428 19:29:35.864687 22059 solver.cpp:238]     Train net output #0: loss = 0.176172 (* 1 = 0.176172 loss)
I0428 19:29:35.864696 22059 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:35.924293 22059 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:35.978147 22068 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:35.978584 22059 solver.cpp:398]     Test net output #0: accuracy = 0.9325
I0428 19:29:35.978608 22059 solver.cpp:398]     Test net output #1: loss = 0.222904 (* 1 = 0.222904 loss)
I0428 19:29:35.979274 22059 solver.cpp:219] Iteration 500 (872.78 iter/s, 0.114576s/100 iters), loss = 0.226196
I0428 19:29:35.979300 22059 solver.cpp:238]     Train net output #0: loss = 0.226196 (* 1 = 0.226196 loss)
I0428 19:29:35.979308 22059 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:36.043169 22059 solver.cpp:219] Iteration 600 (1565.93 iter/s, 0.0638597s/100 iters), loss = 0.183603
I0428 19:29:36.043210 22059 solver.cpp:238]     Train net output #0: loss = 0.183603 (* 1 = 0.183603 loss)
I0428 19:29:36.043220 22059 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:36.105093 22059 solver.cpp:219] Iteration 700 (1616.14 iter/s, 0.0618757s/100 iters), loss = 0.342217
I0428 19:29:36.105123 22059 solver.cpp:238]     Train net output #0: loss = 0.342217 (* 1 = 0.342217 loss)
I0428 19:29:36.105130 22059 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:36.165330 22059 solver.cpp:219] Iteration 800 (1661.16 iter/s, 0.0601989s/100 iters), loss = 0.32314
I0428 19:29:36.165359 22059 solver.cpp:238]     Train net output #0: loss = 0.32314 (* 1 = 0.32314 loss)
I0428 19:29:36.165365 22059 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:36.225528 22059 solver.cpp:219] Iteration 900 (1662.23 iter/s, 0.06016s/100 iters), loss = 0.277286
I0428 19:29:36.225558 22059 solver.cpp:238]     Train net output #0: loss = 0.277285 (* 1 = 0.277285 loss)
I0428 19:29:36.225564 22059 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:36.248030 22067 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:36.287757 22059 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:36.288580 22059 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:36.289006 22059 solver.cpp:311] Iteration 1000, loss = 0.193937
I0428 19:29:36.289024 22059 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:36.364727 22068 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:36.365216 22059 solver.cpp:398]     Test net output #0: accuracy = 0.9504
I0428 19:29:36.365245 22059 solver.cpp:398]     Test net output #1: loss = 0.163456 (* 1 = 0.163456 loss)
I0428 19:29:36.365252 22059 solver.cpp:316] Optimization Done.
I0428 19:29:36.365255 22059 caffe.cpp:259] Optimization Done.
