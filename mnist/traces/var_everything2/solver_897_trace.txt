I0428 20:01:12.706872 29677 caffe.cpp:218] Using GPUs 0
I0428 20:01:12.743963 29677 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:13.196074 29677 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test897.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:13.196210 29677 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test897.prototxt
I0428 20:01:13.196481 29677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:13.196526 29677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:13.196586 29677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:01:13.196642 29677 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:13.196722 29677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:13.196743 29677 net.cpp:86] Creating Layer mnist
I0428 20:01:13.196748 29677 net.cpp:382] mnist -> data
I0428 20:01:13.196766 29677 net.cpp:382] mnist -> label
I0428 20:01:13.197795 29677 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:13.200062 29677 net.cpp:124] Setting up mnist
I0428 20:01:13.200109 29677 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:13.200115 29677 net.cpp:131] Top shape: 64 (64)
I0428 20:01:13.200134 29677 net.cpp:139] Memory required for data: 200960
I0428 20:01:13.200139 29677 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:13.200166 29677 net.cpp:86] Creating Layer conv0
I0428 20:01:13.200171 29677 net.cpp:408] conv0 <- data
I0428 20:01:13.200181 29677 net.cpp:382] conv0 -> conv0
I0428 20:01:13.426268 29677 net.cpp:124] Setting up conv0
I0428 20:01:13.426293 29677 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:13.426297 29677 net.cpp:139] Memory required for data: 1675520
I0428 20:01:13.426311 29677 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:13.426323 29677 net.cpp:86] Creating Layer pool0
I0428 20:01:13.426327 29677 net.cpp:408] pool0 <- conv0
I0428 20:01:13.426332 29677 net.cpp:382] pool0 -> pool0
I0428 20:01:13.426391 29677 net.cpp:124] Setting up pool0
I0428 20:01:13.426398 29677 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:13.426420 29677 net.cpp:139] Memory required for data: 2044160
I0428 20:01:13.426424 29677 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:13.426434 29677 net.cpp:86] Creating Layer conv1
I0428 20:01:13.426437 29677 net.cpp:408] conv1 <- pool0
I0428 20:01:13.426442 29677 net.cpp:382] conv1 -> conv1
I0428 20:01:13.429312 29677 net.cpp:124] Setting up conv1
I0428 20:01:13.429327 29677 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:01:13.429329 29677 net.cpp:139] Memory required for data: 2863360
I0428 20:01:13.429337 29677 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:13.429360 29677 net.cpp:86] Creating Layer pool1
I0428 20:01:13.429364 29677 net.cpp:408] pool1 <- conv1
I0428 20:01:13.429368 29677 net.cpp:382] pool1 -> pool1
I0428 20:01:13.429404 29677 net.cpp:124] Setting up pool1
I0428 20:01:13.429410 29677 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:01:13.429414 29677 net.cpp:139] Memory required for data: 3068160
I0428 20:01:13.429416 29677 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:13.429424 29677 net.cpp:86] Creating Layer ip1
I0428 20:01:13.429426 29677 net.cpp:408] ip1 <- pool1
I0428 20:01:13.429430 29677 net.cpp:382] ip1 -> ip1
I0428 20:01:13.429564 29677 net.cpp:124] Setting up ip1
I0428 20:01:13.429571 29677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:13.429574 29677 net.cpp:139] Memory required for data: 3070720
I0428 20:01:13.429581 29677 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:13.429587 29677 net.cpp:86] Creating Layer relu1
I0428 20:01:13.429589 29677 net.cpp:408] relu1 <- ip1
I0428 20:01:13.429594 29677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:13.429765 29677 net.cpp:124] Setting up relu1
I0428 20:01:13.429774 29677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:13.429776 29677 net.cpp:139] Memory required for data: 3073280
I0428 20:01:13.429778 29677 layer_factory.hpp:77] Creating layer loss
I0428 20:01:13.429785 29677 net.cpp:86] Creating Layer loss
I0428 20:01:13.429787 29677 net.cpp:408] loss <- ip1
I0428 20:01:13.429790 29677 net.cpp:408] loss <- label
I0428 20:01:13.429795 29677 net.cpp:382] loss -> loss
I0428 20:01:13.429806 29677 layer_factory.hpp:77] Creating layer loss
I0428 20:01:13.430696 29677 net.cpp:124] Setting up loss
I0428 20:01:13.430724 29677 net.cpp:131] Top shape: (1)
I0428 20:01:13.430728 29677 net.cpp:134]     with loss weight 1
I0428 20:01:13.430742 29677 net.cpp:139] Memory required for data: 3073284
I0428 20:01:13.430745 29677 net.cpp:200] loss needs backward computation.
I0428 20:01:13.430748 29677 net.cpp:200] relu1 needs backward computation.
I0428 20:01:13.430752 29677 net.cpp:200] ip1 needs backward computation.
I0428 20:01:13.430754 29677 net.cpp:200] pool1 needs backward computation.
I0428 20:01:13.430757 29677 net.cpp:200] conv1 needs backward computation.
I0428 20:01:13.430759 29677 net.cpp:200] pool0 needs backward computation.
I0428 20:01:13.430763 29677 net.cpp:200] conv0 needs backward computation.
I0428 20:01:13.430765 29677 net.cpp:202] mnist does not need backward computation.
I0428 20:01:13.430768 29677 net.cpp:244] This network produces output loss
I0428 20:01:13.430775 29677 net.cpp:257] Network initialization done.
I0428 20:01:13.431038 29677 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test897.prototxt
I0428 20:01:13.431077 29677 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:13.431149 29677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:01:13.431226 29677 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:13.431270 29677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:13.431283 29677 net.cpp:86] Creating Layer mnist
I0428 20:01:13.431288 29677 net.cpp:382] mnist -> data
I0428 20:01:13.431295 29677 net.cpp:382] mnist -> label
I0428 20:01:13.431397 29677 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:13.433516 29677 net.cpp:124] Setting up mnist
I0428 20:01:13.433562 29677 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:13.433569 29677 net.cpp:131] Top shape: 100 (100)
I0428 20:01:13.433573 29677 net.cpp:139] Memory required for data: 314000
I0428 20:01:13.433575 29677 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:13.433583 29677 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:13.433586 29677 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:13.433591 29677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:13.433598 29677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:13.433646 29677 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:13.433653 29677 net.cpp:131] Top shape: 100 (100)
I0428 20:01:13.433657 29677 net.cpp:131] Top shape: 100 (100)
I0428 20:01:13.433660 29677 net.cpp:139] Memory required for data: 314800
I0428 20:01:13.433663 29677 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:13.433672 29677 net.cpp:86] Creating Layer conv0
I0428 20:01:13.433678 29677 net.cpp:408] conv0 <- data
I0428 20:01:13.433701 29677 net.cpp:382] conv0 -> conv0
I0428 20:01:13.434746 29677 net.cpp:124] Setting up conv0
I0428 20:01:13.434774 29677 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:13.434778 29677 net.cpp:139] Memory required for data: 2618800
I0428 20:01:13.434788 29677 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:13.434795 29677 net.cpp:86] Creating Layer pool0
I0428 20:01:13.434798 29677 net.cpp:408] pool0 <- conv0
I0428 20:01:13.434803 29677 net.cpp:382] pool0 -> pool0
I0428 20:01:13.434856 29677 net.cpp:124] Setting up pool0
I0428 20:01:13.434864 29677 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:13.434866 29677 net.cpp:139] Memory required for data: 3194800
I0428 20:01:13.434870 29677 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:13.434878 29677 net.cpp:86] Creating Layer conv1
I0428 20:01:13.434881 29677 net.cpp:408] conv1 <- pool0
I0428 20:01:13.434888 29677 net.cpp:382] conv1 -> conv1
I0428 20:01:13.436583 29677 net.cpp:124] Setting up conv1
I0428 20:01:13.436611 29677 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:01:13.436615 29677 net.cpp:139] Memory required for data: 4474800
I0428 20:01:13.436625 29677 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:13.436631 29677 net.cpp:86] Creating Layer pool1
I0428 20:01:13.436661 29677 net.cpp:408] pool1 <- conv1
I0428 20:01:13.436671 29677 net.cpp:382] pool1 -> pool1
I0428 20:01:13.436709 29677 net.cpp:124] Setting up pool1
I0428 20:01:13.436717 29677 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:01:13.436719 29677 net.cpp:139] Memory required for data: 4794800
I0428 20:01:13.436723 29677 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:13.436730 29677 net.cpp:86] Creating Layer ip1
I0428 20:01:13.436733 29677 net.cpp:408] ip1 <- pool1
I0428 20:01:13.436739 29677 net.cpp:382] ip1 -> ip1
I0428 20:01:13.436923 29677 net.cpp:124] Setting up ip1
I0428 20:01:13.436931 29677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:13.436934 29677 net.cpp:139] Memory required for data: 4798800
I0428 20:01:13.436942 29677 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:13.436949 29677 net.cpp:86] Creating Layer relu1
I0428 20:01:13.436955 29677 net.cpp:408] relu1 <- ip1
I0428 20:01:13.436960 29677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:13.437858 29677 net.cpp:124] Setting up relu1
I0428 20:01:13.437873 29677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:13.437877 29677 net.cpp:139] Memory required for data: 4802800
I0428 20:01:13.437881 29677 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:01:13.437903 29677 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:01:13.437906 29677 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:01:13.437912 29677 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:01:13.437919 29677 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:01:13.437965 29677 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:01:13.437970 29677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:13.437974 29677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:13.437978 29677 net.cpp:139] Memory required for data: 4810800
I0428 20:01:13.437981 29677 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:13.437988 29677 net.cpp:86] Creating Layer accuracy
I0428 20:01:13.437991 29677 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:01:13.437996 29677 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:13.438001 29677 net.cpp:382] accuracy -> accuracy
I0428 20:01:13.438009 29677 net.cpp:124] Setting up accuracy
I0428 20:01:13.438014 29677 net.cpp:131] Top shape: (1)
I0428 20:01:13.438016 29677 net.cpp:139] Memory required for data: 4810804
I0428 20:01:13.438019 29677 layer_factory.hpp:77] Creating layer loss
I0428 20:01:13.438025 29677 net.cpp:86] Creating Layer loss
I0428 20:01:13.438030 29677 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:01:13.438033 29677 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:13.438038 29677 net.cpp:382] loss -> loss
I0428 20:01:13.438045 29677 layer_factory.hpp:77] Creating layer loss
I0428 20:01:13.438318 29677 net.cpp:124] Setting up loss
I0428 20:01:13.438326 29677 net.cpp:131] Top shape: (1)
I0428 20:01:13.438330 29677 net.cpp:134]     with loss weight 1
I0428 20:01:13.438336 29677 net.cpp:139] Memory required for data: 4810808
I0428 20:01:13.438340 29677 net.cpp:200] loss needs backward computation.
I0428 20:01:13.438344 29677 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:13.438349 29677 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:01:13.438352 29677 net.cpp:200] relu1 needs backward computation.
I0428 20:01:13.438356 29677 net.cpp:200] ip1 needs backward computation.
I0428 20:01:13.438359 29677 net.cpp:200] pool1 needs backward computation.
I0428 20:01:13.438362 29677 net.cpp:200] conv1 needs backward computation.
I0428 20:01:13.438366 29677 net.cpp:200] pool0 needs backward computation.
I0428 20:01:13.438370 29677 net.cpp:200] conv0 needs backward computation.
I0428 20:01:13.438374 29677 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:13.438377 29677 net.cpp:202] mnist does not need backward computation.
I0428 20:01:13.438380 29677 net.cpp:244] This network produces output accuracy
I0428 20:01:13.438385 29677 net.cpp:244] This network produces output loss
I0428 20:01:13.438408 29677 net.cpp:257] Network initialization done.
I0428 20:01:13.438443 29677 solver.cpp:56] Solver scaffolding done.
I0428 20:01:13.438691 29677 caffe.cpp:248] Starting Optimization
I0428 20:01:13.438696 29677 solver.cpp:273] Solving LeNet
I0428 20:01:13.438699 29677 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:13.438838 29677 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:13.443275 29677 blocking_queue.cpp:49] Waiting for data
I0428 20:01:13.511795 29684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:13.512281 29677 solver.cpp:398]     Test net output #0: accuracy = 0.1172
I0428 20:01:13.512315 29677 solver.cpp:398]     Test net output #1: loss = 2.34404 (* 1 = 2.34404 loss)
I0428 20:01:13.515501 29677 solver.cpp:219] Iteration 0 (0 iter/s, 0.0767652s/100 iters), loss = 2.34469
I0428 20:01:13.515522 29677 solver.cpp:238]     Train net output #0: loss = 2.34469 (* 1 = 2.34469 loss)
I0428 20:01:13.515532 29677 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:13.608898 29677 solver.cpp:219] Iteration 100 (1071.1 iter/s, 0.0933622s/100 iters), loss = 1.22004
I0428 20:01:13.608924 29677 solver.cpp:238]     Train net output #0: loss = 1.22004 (* 1 = 1.22004 loss)
I0428 20:01:13.608932 29677 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:13.700973 29677 solver.cpp:219] Iteration 200 (1086.53 iter/s, 0.0920361s/100 iters), loss = 0.849525
I0428 20:01:13.700999 29677 solver.cpp:238]     Train net output #0: loss = 0.849525 (* 1 = 0.849525 loss)
I0428 20:01:13.701005 29677 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:13.793750 29677 solver.cpp:219] Iteration 300 (1078.26 iter/s, 0.0927416s/100 iters), loss = 0.970628
I0428 20:01:13.793787 29677 solver.cpp:238]     Train net output #0: loss = 0.970628 (* 1 = 0.970628 loss)
I0428 20:01:13.793793 29677 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:13.886278 29677 solver.cpp:219] Iteration 400 (1081.12 iter/s, 0.0924968s/100 iters), loss = 1.05269
I0428 20:01:13.886317 29677 solver.cpp:238]     Train net output #0: loss = 1.05269 (* 1 = 1.05269 loss)
I0428 20:01:13.886322 29677 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:13.976920 29677 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:14.030303 29684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:14.030786 29677 solver.cpp:398]     Test net output #0: accuracy = 0.6002
I0428 20:01:14.030822 29677 solver.cpp:398]     Test net output #1: loss = 1.00026 (* 1 = 1.00026 loss)
I0428 20:01:14.031833 29677 solver.cpp:219] Iteration 500 (687.207 iter/s, 0.145517s/100 iters), loss = 1.25935
I0428 20:01:14.031898 29677 solver.cpp:238]     Train net output #0: loss = 1.25935 (* 1 = 1.25935 loss)
I0428 20:01:14.031905 29677 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:14.138216 29677 solver.cpp:219] Iteration 600 (940.727 iter/s, 0.106301s/100 iters), loss = 0.787255
I0428 20:01:14.138257 29677 solver.cpp:238]     Train net output #0: loss = 0.787255 (* 1 = 0.787255 loss)
I0428 20:01:14.138263 29677 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:14.243280 29677 solver.cpp:219] Iteration 700 (952.252 iter/s, 0.105014s/100 iters), loss = 0.856868
I0428 20:01:14.243321 29677 solver.cpp:238]     Train net output #0: loss = 0.856868 (* 1 = 0.856868 loss)
I0428 20:01:14.243327 29677 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:14.345752 29677 solver.cpp:219] Iteration 800 (976.222 iter/s, 0.102436s/100 iters), loss = 0.759308
I0428 20:01:14.345795 29677 solver.cpp:238]     Train net output #0: loss = 0.759308 (* 1 = 0.759308 loss)
I0428 20:01:14.345803 29677 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:14.441110 29677 solver.cpp:219] Iteration 900 (1049.27 iter/s, 0.0953047s/100 iters), loss = 0.577392
I0428 20:01:14.441151 29677 solver.cpp:238]     Train net output #0: loss = 0.577392 (* 1 = 0.577392 loss)
I0428 20:01:14.441159 29677 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:14.471583 29683 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:14.532336 29677 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:14.533398 29677 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:14.534153 29677 solver.cpp:311] Iteration 1000, loss = 0.268216
I0428 20:01:14.534183 29677 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:14.618872 29684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:14.619451 29677 solver.cpp:398]     Test net output #0: accuracy = 0.8764
I0428 20:01:14.619479 29677 solver.cpp:398]     Test net output #1: loss = 0.325309 (* 1 = 0.325309 loss)
I0428 20:01:14.619488 29677 solver.cpp:316] Optimization Done.
I0428 20:01:14.619493 29677 caffe.cpp:259] Optimization Done.
