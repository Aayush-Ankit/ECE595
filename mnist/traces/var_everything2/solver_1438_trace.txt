I0428 20:24:29.031042  2415 caffe.cpp:218] Using GPUs 0
I0428 20:24:29.063721  2415 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:29.559415  2415 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1438.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:29.559551  2415 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1438.prototxt
I0428 20:24:29.559883  2415 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:29.559898  2415 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:29.559978  2415 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:29.560040  2415 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:29.560120  2415 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:29.560140  2415 net.cpp:86] Creating Layer mnist
I0428 20:24:29.560147  2415 net.cpp:382] mnist -> data
I0428 20:24:29.560165  2415 net.cpp:382] mnist -> label
I0428 20:24:29.561197  2415 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:29.563357  2415 net.cpp:124] Setting up mnist
I0428 20:24:29.563372  2415 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:29.563392  2415 net.cpp:131] Top shape: 64 (64)
I0428 20:24:29.563395  2415 net.cpp:139] Memory required for data: 200960
I0428 20:24:29.563400  2415 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:29.563441  2415 net.cpp:86] Creating Layer conv0
I0428 20:24:29.563473  2415 net.cpp:408] conv0 <- data
I0428 20:24:29.563483  2415 net.cpp:382] conv0 -> conv0
I0428 20:24:29.792166  2415 net.cpp:124] Setting up conv0
I0428 20:24:29.792207  2415 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:29.792210  2415 net.cpp:139] Memory required for data: 7573760
I0428 20:24:29.792225  2415 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:29.792238  2415 net.cpp:86] Creating Layer pool0
I0428 20:24:29.792243  2415 net.cpp:408] pool0 <- conv0
I0428 20:24:29.792246  2415 net.cpp:382] pool0 -> pool0
I0428 20:24:29.792294  2415 net.cpp:124] Setting up pool0
I0428 20:24:29.792299  2415 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:29.792301  2415 net.cpp:139] Memory required for data: 9416960
I0428 20:24:29.792304  2415 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:29.792315  2415 net.cpp:86] Creating Layer conv1
I0428 20:24:29.792317  2415 net.cpp:408] conv1 <- pool0
I0428 20:24:29.792322  2415 net.cpp:382] conv1 -> conv1
I0428 20:24:29.795716  2415 net.cpp:124] Setting up conv1
I0428 20:24:29.795729  2415 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:29.795732  2415 net.cpp:139] Memory required for data: 11055360
I0428 20:24:29.795740  2415 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:29.795748  2415 net.cpp:86] Creating Layer pool1
I0428 20:24:29.795752  2415 net.cpp:408] pool1 <- conv1
I0428 20:24:29.795771  2415 net.cpp:382] pool1 -> pool1
I0428 20:24:29.795805  2415 net.cpp:124] Setting up pool1
I0428 20:24:29.795810  2415 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:29.795814  2415 net.cpp:139] Memory required for data: 11464960
I0428 20:24:29.795816  2415 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:29.795824  2415 net.cpp:86] Creating Layer ip1
I0428 20:24:29.795826  2415 net.cpp:408] ip1 <- pool1
I0428 20:24:29.795830  2415 net.cpp:382] ip1 -> ip1
I0428 20:24:29.796327  2415 net.cpp:124] Setting up ip1
I0428 20:24:29.796335  2415 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:29.796339  2415 net.cpp:139] Memory required for data: 11477760
I0428 20:24:29.796345  2415 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:29.796350  2415 net.cpp:86] Creating Layer relu1
I0428 20:24:29.796353  2415 net.cpp:408] relu1 <- ip1
I0428 20:24:29.796357  2415 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:29.796528  2415 net.cpp:124] Setting up relu1
I0428 20:24:29.796537  2415 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:29.796540  2415 net.cpp:139] Memory required for data: 11490560
I0428 20:24:29.796543  2415 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:29.796550  2415 net.cpp:86] Creating Layer ip2
I0428 20:24:29.796552  2415 net.cpp:408] ip2 <- ip1
I0428 20:24:29.796557  2415 net.cpp:382] ip2 -> ip2
I0428 20:24:29.796658  2415 net.cpp:124] Setting up ip2
I0428 20:24:29.796664  2415 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:29.796667  2415 net.cpp:139] Memory required for data: 11496960
I0428 20:24:29.796674  2415 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:29.796679  2415 net.cpp:86] Creating Layer relu2
I0428 20:24:29.796681  2415 net.cpp:408] relu2 <- ip2
I0428 20:24:29.796685  2415 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:29.797547  2415 net.cpp:124] Setting up relu2
I0428 20:24:29.797560  2415 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:29.797564  2415 net.cpp:139] Memory required for data: 11503360
I0428 20:24:29.797567  2415 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:29.797574  2415 net.cpp:86] Creating Layer ip3
I0428 20:24:29.797577  2415 net.cpp:408] ip3 <- ip2
I0428 20:24:29.797583  2415 net.cpp:382] ip3 -> ip3
I0428 20:24:29.797679  2415 net.cpp:124] Setting up ip3
I0428 20:24:29.797688  2415 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:29.797690  2415 net.cpp:139] Memory required for data: 11505920
I0428 20:24:29.797698  2415 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:29.797703  2415 net.cpp:86] Creating Layer relu3
I0428 20:24:29.797706  2415 net.cpp:408] relu3 <- ip3
I0428 20:24:29.797710  2415 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:29.797883  2415 net.cpp:124] Setting up relu3
I0428 20:24:29.797891  2415 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:29.797894  2415 net.cpp:139] Memory required for data: 11508480
I0428 20:24:29.797897  2415 layer_factory.hpp:77] Creating layer loss
I0428 20:24:29.797902  2415 net.cpp:86] Creating Layer loss
I0428 20:24:29.797905  2415 net.cpp:408] loss <- ip3
I0428 20:24:29.797909  2415 net.cpp:408] loss <- label
I0428 20:24:29.797914  2415 net.cpp:382] loss -> loss
I0428 20:24:29.797931  2415 layer_factory.hpp:77] Creating layer loss
I0428 20:24:29.798169  2415 net.cpp:124] Setting up loss
I0428 20:24:29.798179  2415 net.cpp:131] Top shape: (1)
I0428 20:24:29.798198  2415 net.cpp:134]     with loss weight 1
I0428 20:24:29.798230  2415 net.cpp:139] Memory required for data: 11508484
I0428 20:24:29.798234  2415 net.cpp:200] loss needs backward computation.
I0428 20:24:29.798238  2415 net.cpp:200] relu3 needs backward computation.
I0428 20:24:29.798241  2415 net.cpp:200] ip3 needs backward computation.
I0428 20:24:29.798244  2415 net.cpp:200] relu2 needs backward computation.
I0428 20:24:29.798247  2415 net.cpp:200] ip2 needs backward computation.
I0428 20:24:29.798250  2415 net.cpp:200] relu1 needs backward computation.
I0428 20:24:29.798254  2415 net.cpp:200] ip1 needs backward computation.
I0428 20:24:29.798256  2415 net.cpp:200] pool1 needs backward computation.
I0428 20:24:29.798259  2415 net.cpp:200] conv1 needs backward computation.
I0428 20:24:29.798262  2415 net.cpp:200] pool0 needs backward computation.
I0428 20:24:29.798265  2415 net.cpp:200] conv0 needs backward computation.
I0428 20:24:29.798269  2415 net.cpp:202] mnist does not need backward computation.
I0428 20:24:29.798272  2415 net.cpp:244] This network produces output loss
I0428 20:24:29.798282  2415 net.cpp:257] Network initialization done.
I0428 20:24:29.798627  2415 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1438.prototxt
I0428 20:24:29.798653  2415 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:29.798753  2415 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:29.798830  2415 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:29.798871  2415 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:29.798897  2415 net.cpp:86] Creating Layer mnist
I0428 20:24:29.798902  2415 net.cpp:382] mnist -> data
I0428 20:24:29.798908  2415 net.cpp:382] mnist -> label
I0428 20:24:29.798988  2415 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:29.800118  2415 net.cpp:124] Setting up mnist
I0428 20:24:29.800145  2415 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:29.800150  2415 net.cpp:131] Top shape: 100 (100)
I0428 20:24:29.800153  2415 net.cpp:139] Memory required for data: 314000
I0428 20:24:29.800156  2415 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:29.800166  2415 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:29.800169  2415 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:29.800174  2415 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:29.800180  2415 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:29.800215  2415 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:29.800220  2415 net.cpp:131] Top shape: 100 (100)
I0428 20:24:29.800223  2415 net.cpp:131] Top shape: 100 (100)
I0428 20:24:29.800226  2415 net.cpp:139] Memory required for data: 314800
I0428 20:24:29.800230  2415 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:29.800236  2415 net.cpp:86] Creating Layer conv0
I0428 20:24:29.800240  2415 net.cpp:408] conv0 <- data
I0428 20:24:29.800243  2415 net.cpp:382] conv0 -> conv0
I0428 20:24:29.801924  2415 net.cpp:124] Setting up conv0
I0428 20:24:29.801937  2415 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:29.801941  2415 net.cpp:139] Memory required for data: 11834800
I0428 20:24:29.801950  2415 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:29.801955  2415 net.cpp:86] Creating Layer pool0
I0428 20:24:29.801959  2415 net.cpp:408] pool0 <- conv0
I0428 20:24:29.801964  2415 net.cpp:382] pool0 -> pool0
I0428 20:24:29.802000  2415 net.cpp:124] Setting up pool0
I0428 20:24:29.802006  2415 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:29.802008  2415 net.cpp:139] Memory required for data: 14714800
I0428 20:24:29.802011  2415 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:29.802019  2415 net.cpp:86] Creating Layer conv1
I0428 20:24:29.802022  2415 net.cpp:408] conv1 <- pool0
I0428 20:24:29.802027  2415 net.cpp:382] conv1 -> conv1
I0428 20:24:29.805104  2415 net.cpp:124] Setting up conv1
I0428 20:24:29.805117  2415 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:29.805122  2415 net.cpp:139] Memory required for data: 17274800
I0428 20:24:29.805147  2415 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:29.805169  2415 net.cpp:86] Creating Layer pool1
I0428 20:24:29.805172  2415 net.cpp:408] pool1 <- conv1
I0428 20:24:29.805194  2415 net.cpp:382] pool1 -> pool1
I0428 20:24:29.805259  2415 net.cpp:124] Setting up pool1
I0428 20:24:29.805265  2415 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:29.805268  2415 net.cpp:139] Memory required for data: 17914800
I0428 20:24:29.805270  2415 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:29.805277  2415 net.cpp:86] Creating Layer ip1
I0428 20:24:29.805287  2415 net.cpp:408] ip1 <- pool1
I0428 20:24:29.805291  2415 net.cpp:382] ip1 -> ip1
I0428 20:24:29.805815  2415 net.cpp:124] Setting up ip1
I0428 20:24:29.805832  2415 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:29.805842  2415 net.cpp:139] Memory required for data: 17934800
I0428 20:24:29.805850  2415 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:29.805856  2415 net.cpp:86] Creating Layer relu1
I0428 20:24:29.805860  2415 net.cpp:408] relu1 <- ip1
I0428 20:24:29.805863  2415 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:29.806015  2415 net.cpp:124] Setting up relu1
I0428 20:24:29.806023  2415 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:29.806026  2415 net.cpp:139] Memory required for data: 17954800
I0428 20:24:29.806030  2415 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:29.806036  2415 net.cpp:86] Creating Layer ip2
I0428 20:24:29.806040  2415 net.cpp:408] ip2 <- ip1
I0428 20:24:29.806044  2415 net.cpp:382] ip2 -> ip2
I0428 20:24:29.806165  2415 net.cpp:124] Setting up ip2
I0428 20:24:29.806174  2415 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:29.806176  2415 net.cpp:139] Memory required for data: 17964800
I0428 20:24:29.806181  2415 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:29.806185  2415 net.cpp:86] Creating Layer relu2
I0428 20:24:29.806188  2415 net.cpp:408] relu2 <- ip2
I0428 20:24:29.806192  2415 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:29.806457  2415 net.cpp:124] Setting up relu2
I0428 20:24:29.806466  2415 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:29.806475  2415 net.cpp:139] Memory required for data: 17974800
I0428 20:24:29.806478  2415 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:29.806484  2415 net.cpp:86] Creating Layer ip3
I0428 20:24:29.806493  2415 net.cpp:408] ip3 <- ip2
I0428 20:24:29.806499  2415 net.cpp:382] ip3 -> ip3
I0428 20:24:29.806627  2415 net.cpp:124] Setting up ip3
I0428 20:24:29.806634  2415 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:29.806638  2415 net.cpp:139] Memory required for data: 17978800
I0428 20:24:29.806659  2415 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:29.806669  2415 net.cpp:86] Creating Layer relu3
I0428 20:24:29.806674  2415 net.cpp:408] relu3 <- ip3
I0428 20:24:29.806677  2415 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:29.807390  2415 net.cpp:124] Setting up relu3
I0428 20:24:29.807402  2415 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:29.807405  2415 net.cpp:139] Memory required for data: 17982800
I0428 20:24:29.807410  2415 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:29.807415  2415 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:29.807417  2415 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:29.807422  2415 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:29.807428  2415 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:29.807468  2415 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:29.807474  2415 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:29.807478  2415 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:29.807482  2415 net.cpp:139] Memory required for data: 17990800
I0428 20:24:29.807492  2415 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:29.807503  2415 net.cpp:86] Creating Layer accuracy
I0428 20:24:29.807507  2415 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:29.807510  2415 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:29.807515  2415 net.cpp:382] accuracy -> accuracy
I0428 20:24:29.807523  2415 net.cpp:124] Setting up accuracy
I0428 20:24:29.807526  2415 net.cpp:131] Top shape: (1)
I0428 20:24:29.807528  2415 net.cpp:139] Memory required for data: 17990804
I0428 20:24:29.807531  2415 layer_factory.hpp:77] Creating layer loss
I0428 20:24:29.807535  2415 net.cpp:86] Creating Layer loss
I0428 20:24:29.807538  2415 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:29.807541  2415 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:29.807545  2415 net.cpp:382] loss -> loss
I0428 20:24:29.807550  2415 layer_factory.hpp:77] Creating layer loss
I0428 20:24:29.807847  2415 net.cpp:124] Setting up loss
I0428 20:24:29.807857  2415 net.cpp:131] Top shape: (1)
I0428 20:24:29.807862  2415 net.cpp:134]     with loss weight 1
I0428 20:24:29.807875  2415 net.cpp:139] Memory required for data: 17990808
I0428 20:24:29.807879  2415 net.cpp:200] loss needs backward computation.
I0428 20:24:29.807883  2415 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:29.807886  2415 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:29.807889  2415 net.cpp:200] relu3 needs backward computation.
I0428 20:24:29.807898  2415 net.cpp:200] ip3 needs backward computation.
I0428 20:24:29.807901  2415 net.cpp:200] relu2 needs backward computation.
I0428 20:24:29.807904  2415 net.cpp:200] ip2 needs backward computation.
I0428 20:24:29.807906  2415 net.cpp:200] relu1 needs backward computation.
I0428 20:24:29.807909  2415 net.cpp:200] ip1 needs backward computation.
I0428 20:24:29.807922  2415 net.cpp:200] pool1 needs backward computation.
I0428 20:24:29.807925  2415 net.cpp:200] conv1 needs backward computation.
I0428 20:24:29.807929  2415 net.cpp:200] pool0 needs backward computation.
I0428 20:24:29.807931  2415 net.cpp:200] conv0 needs backward computation.
I0428 20:24:29.807935  2415 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:29.807940  2415 net.cpp:202] mnist does not need backward computation.
I0428 20:24:29.807941  2415 net.cpp:244] This network produces output accuracy
I0428 20:24:29.807945  2415 net.cpp:244] This network produces output loss
I0428 20:24:29.807956  2415 net.cpp:257] Network initialization done.
I0428 20:24:29.808012  2415 solver.cpp:56] Solver scaffolding done.
I0428 20:24:29.808336  2415 caffe.cpp:248] Starting Optimization
I0428 20:24:29.808342  2415 solver.cpp:273] Solving LeNet
I0428 20:24:29.808346  2415 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:29.808538  2415 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:29.820482  2415 blocking_queue.cpp:49] Waiting for data
I0428 20:24:29.900187  2422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:29.901540  2415 solver.cpp:398]     Test net output #0: accuracy = 0.0618
I0428 20:24:29.901561  2415 solver.cpp:398]     Test net output #1: loss = 2.34235 (* 1 = 2.34235 loss)
I0428 20:24:29.907359  2415 solver.cpp:219] Iteration 0 (-8.21161e-43 iter/s, 0.098987s/100 iters), loss = 2.33406
I0428 20:24:29.907383  2415 solver.cpp:238]     Train net output #0: loss = 2.33406 (* 1 = 2.33406 loss)
I0428 20:24:29.907409  2415 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:30.145512  2415 solver.cpp:219] Iteration 100 (419.989 iter/s, 0.238101s/100 iters), loss = 0.586545
I0428 20:24:30.145563  2415 solver.cpp:238]     Train net output #0: loss = 0.586545 (* 1 = 0.586545 loss)
I0428 20:24:30.145576  2415 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:30.394769  2415 solver.cpp:219] Iteration 200 (401.303 iter/s, 0.249188s/100 iters), loss = 0.462151
I0428 20:24:30.394819  2415 solver.cpp:238]     Train net output #0: loss = 0.462151 (* 1 = 0.462151 loss)
I0428 20:24:30.394830  2415 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:30.645148  2415 solver.cpp:219] Iteration 300 (399.508 iter/s, 0.250308s/100 iters), loss = 0.659321
I0428 20:24:30.645216  2415 solver.cpp:238]     Train net output #0: loss = 0.659321 (* 1 = 0.659321 loss)
I0428 20:24:30.645236  2415 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:30.893103  2415 solver.cpp:219] Iteration 400 (403.43 iter/s, 0.247875s/100 iters), loss = 0.691865
I0428 20:24:30.893160  2415 solver.cpp:238]     Train net output #0: loss = 0.691865 (* 1 = 0.691865 loss)
I0428 20:24:30.893180  2415 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:31.139798  2415 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:31.238090  2422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:31.240602  2415 solver.cpp:398]     Test net output #0: accuracy = 0.8675
I0428 20:24:31.240631  2415 solver.cpp:398]     Test net output #1: loss = 0.536583 (* 1 = 0.536583 loss)
I0428 20:24:31.242851  2415 solver.cpp:219] Iteration 500 (285.978 iter/s, 0.349678s/100 iters), loss = 0.522969
I0428 20:24:31.242905  2415 solver.cpp:238]     Train net output #0: loss = 0.522969 (* 1 = 0.522969 loss)
I0428 20:24:31.242918  2415 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:31.476673  2415 solver.cpp:219] Iteration 600 (427.803 iter/s, 0.233753s/100 iters), loss = 0.541603
I0428 20:24:31.476723  2415 solver.cpp:238]     Train net output #0: loss = 0.541603 (* 1 = 0.541603 loss)
I0428 20:24:31.476742  2415 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:31.715689  2415 solver.cpp:219] Iteration 700 (418.49 iter/s, 0.238954s/100 iters), loss = 0.63927
I0428 20:24:31.715730  2415 solver.cpp:238]     Train net output #0: loss = 0.63927 (* 1 = 0.63927 loss)
I0428 20:24:31.715744  2415 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:31.957367  2415 solver.cpp:219] Iteration 800 (413.871 iter/s, 0.241621s/100 iters), loss = 0.746625
I0428 20:24:31.957415  2415 solver.cpp:238]     Train net output #0: loss = 0.746625 (* 1 = 0.746625 loss)
I0428 20:24:31.957432  2415 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:32.208101  2415 solver.cpp:219] Iteration 900 (398.929 iter/s, 0.250671s/100 iters), loss = 0.59596
I0428 20:24:32.208151  2415 solver.cpp:238]     Train net output #0: loss = 0.595961 (* 1 = 0.595961 loss)
I0428 20:24:32.208168  2415 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:32.291005  2421 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:32.453039  2415 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:32.460481  2415 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:32.463681  2415 solver.cpp:311] Iteration 1000, loss = 0.64383
I0428 20:24:32.463711  2415 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:32.558408  2422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:32.560928  2415 solver.cpp:398]     Test net output #0: accuracy = 0.8839
I0428 20:24:32.560958  2415 solver.cpp:398]     Test net output #1: loss = 0.522801 (* 1 = 0.522801 loss)
I0428 20:24:32.560972  2415 solver.cpp:316] Optimization Done.
I0428 20:24:32.560978  2415 caffe.cpp:259] Optimization Done.
