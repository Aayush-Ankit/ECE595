I0428 19:38:52.532876 24156 caffe.cpp:218] Using GPUs 0
I0428 19:38:52.574057 24156 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:53.014039 24156 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test287.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:53.014195 24156 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test287.prototxt
I0428 19:38:53.014538 24156 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:53.014557 24156 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:53.014644 24156 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:53.014734 24156 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:53.014837 24156 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:53.014865 24156 net.cpp:86] Creating Layer mnist
I0428 19:38:53.014875 24156 net.cpp:382] mnist -> data
I0428 19:38:53.014899 24156 net.cpp:382] mnist -> label
I0428 19:38:53.015921 24156 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:53.018328 24156 net.cpp:124] Setting up mnist
I0428 19:38:53.018362 24156 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:53.018373 24156 net.cpp:131] Top shape: 64 (64)
I0428 19:38:53.018378 24156 net.cpp:139] Memory required for data: 200960
I0428 19:38:53.018388 24156 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:53.018405 24156 net.cpp:86] Creating Layer conv0
I0428 19:38:53.018425 24156 net.cpp:408] conv0 <- data
I0428 19:38:53.018460 24156 net.cpp:382] conv0 -> conv0
I0428 19:38:53.250597 24156 net.cpp:124] Setting up conv0
I0428 19:38:53.250623 24156 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:53.250628 24156 net.cpp:139] Memory required for data: 495872
I0428 19:38:53.250648 24156 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:53.250664 24156 net.cpp:86] Creating Layer pool0
I0428 19:38:53.250677 24156 net.cpp:408] pool0 <- conv0
I0428 19:38:53.250686 24156 net.cpp:382] pool0 -> pool0
I0428 19:38:53.250737 24156 net.cpp:124] Setting up pool0
I0428 19:38:53.250746 24156 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:53.250751 24156 net.cpp:139] Memory required for data: 569600
I0428 19:38:53.250756 24156 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:53.250771 24156 net.cpp:86] Creating Layer conv1
I0428 19:38:53.250777 24156 net.cpp:408] conv1 <- pool0
I0428 19:38:53.250784 24156 net.cpp:382] conv1 -> conv1
I0428 19:38:53.252583 24156 net.cpp:124] Setting up conv1
I0428 19:38:53.252601 24156 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:53.252607 24156 net.cpp:139] Memory required for data: 602368
I0428 19:38:53.252620 24156 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:53.252631 24156 net.cpp:86] Creating Layer pool1
I0428 19:38:53.252643 24156 net.cpp:408] pool1 <- conv1
I0428 19:38:53.252651 24156 net.cpp:382] pool1 -> pool1
I0428 19:38:53.252710 24156 net.cpp:124] Setting up pool1
I0428 19:38:53.252720 24156 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:53.252725 24156 net.cpp:139] Memory required for data: 610560
I0428 19:38:53.252730 24156 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:53.252741 24156 net.cpp:86] Creating Layer ip1
I0428 19:38:53.252751 24156 net.cpp:408] ip1 <- pool1
I0428 19:38:53.252759 24156 net.cpp:382] ip1 -> ip1
I0428 19:38:53.252892 24156 net.cpp:124] Setting up ip1
I0428 19:38:53.252902 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.252907 24156 net.cpp:139] Memory required for data: 613120
I0428 19:38:53.252918 24156 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:53.252931 24156 net.cpp:86] Creating Layer relu1
I0428 19:38:53.252938 24156 net.cpp:408] relu1 <- ip1
I0428 19:38:53.252945 24156 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:53.253120 24156 net.cpp:124] Setting up relu1
I0428 19:38:53.253131 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.253150 24156 net.cpp:139] Memory required for data: 615680
I0428 19:38:53.253155 24156 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:53.253166 24156 net.cpp:86] Creating Layer ip2
I0428 19:38:53.253171 24156 net.cpp:408] ip2 <- ip1
I0428 19:38:53.253181 24156 net.cpp:382] ip2 -> ip2
I0428 19:38:53.253284 24156 net.cpp:124] Setting up ip2
I0428 19:38:53.253293 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.253298 24156 net.cpp:139] Memory required for data: 618240
I0428 19:38:53.253305 24156 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:53.253315 24156 net.cpp:86] Creating Layer relu2
I0428 19:38:53.253320 24156 net.cpp:408] relu2 <- ip2
I0428 19:38:53.253327 24156 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:53.254046 24156 net.cpp:124] Setting up relu2
I0428 19:38:53.254060 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.254065 24156 net.cpp:139] Memory required for data: 620800
I0428 19:38:53.254086 24156 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:53.254097 24156 net.cpp:86] Creating Layer ip3
I0428 19:38:53.254103 24156 net.cpp:408] ip3 <- ip2
I0428 19:38:53.254113 24156 net.cpp:382] ip3 -> ip3
I0428 19:38:53.254220 24156 net.cpp:124] Setting up ip3
I0428 19:38:53.254230 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.254235 24156 net.cpp:139] Memory required for data: 623360
I0428 19:38:53.254246 24156 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:53.254256 24156 net.cpp:86] Creating Layer relu3
I0428 19:38:53.254261 24156 net.cpp:408] relu3 <- ip3
I0428 19:38:53.254269 24156 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:53.254461 24156 net.cpp:124] Setting up relu3
I0428 19:38:53.254470 24156 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:53.254475 24156 net.cpp:139] Memory required for data: 625920
I0428 19:38:53.254479 24156 layer_factory.hpp:77] Creating layer loss
I0428 19:38:53.254488 24156 net.cpp:86] Creating Layer loss
I0428 19:38:53.254492 24156 net.cpp:408] loss <- ip3
I0428 19:38:53.254499 24156 net.cpp:408] loss <- label
I0428 19:38:53.254508 24156 net.cpp:382] loss -> loss
I0428 19:38:53.254530 24156 layer_factory.hpp:77] Creating layer loss
I0428 19:38:53.254773 24156 net.cpp:124] Setting up loss
I0428 19:38:53.254783 24156 net.cpp:131] Top shape: (1)
I0428 19:38:53.254788 24156 net.cpp:134]     with loss weight 1
I0428 19:38:53.254808 24156 net.cpp:139] Memory required for data: 625924
I0428 19:38:53.254814 24156 net.cpp:200] loss needs backward computation.
I0428 19:38:53.254834 24156 net.cpp:200] relu3 needs backward computation.
I0428 19:38:53.254839 24156 net.cpp:200] ip3 needs backward computation.
I0428 19:38:53.254844 24156 net.cpp:200] relu2 needs backward computation.
I0428 19:38:53.254848 24156 net.cpp:200] ip2 needs backward computation.
I0428 19:38:53.254853 24156 net.cpp:200] relu1 needs backward computation.
I0428 19:38:53.254858 24156 net.cpp:200] ip1 needs backward computation.
I0428 19:38:53.254863 24156 net.cpp:200] pool1 needs backward computation.
I0428 19:38:53.254868 24156 net.cpp:200] conv1 needs backward computation.
I0428 19:38:53.254886 24156 net.cpp:200] pool0 needs backward computation.
I0428 19:38:53.254891 24156 net.cpp:200] conv0 needs backward computation.
I0428 19:38:53.254896 24156 net.cpp:202] mnist does not need backward computation.
I0428 19:38:53.254901 24156 net.cpp:244] This network produces output loss
I0428 19:38:53.254917 24156 net.cpp:257] Network initialization done.
I0428 19:38:53.255235 24156 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test287.prototxt
I0428 19:38:53.255269 24156 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:53.255365 24156 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:53.255482 24156 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:53.255542 24156 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:53.255559 24156 net.cpp:86] Creating Layer mnist
I0428 19:38:53.255568 24156 net.cpp:382] mnist -> data
I0428 19:38:53.255578 24156 net.cpp:382] mnist -> label
I0428 19:38:53.255695 24156 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:53.257877 24156 net.cpp:124] Setting up mnist
I0428 19:38:53.257910 24156 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:53.257917 24156 net.cpp:131] Top shape: 100 (100)
I0428 19:38:53.257922 24156 net.cpp:139] Memory required for data: 314000
I0428 19:38:53.257942 24156 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:53.257958 24156 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:53.257964 24156 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:53.257973 24156 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:53.257984 24156 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:53.258097 24156 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:53.258106 24156 net.cpp:131] Top shape: 100 (100)
I0428 19:38:53.258113 24156 net.cpp:131] Top shape: 100 (100)
I0428 19:38:53.258118 24156 net.cpp:139] Memory required for data: 314800
I0428 19:38:53.258124 24156 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:53.258139 24156 net.cpp:86] Creating Layer conv0
I0428 19:38:53.258159 24156 net.cpp:408] conv0 <- data
I0428 19:38:53.258183 24156 net.cpp:382] conv0 -> conv0
I0428 19:38:53.259760 24156 net.cpp:124] Setting up conv0
I0428 19:38:53.259775 24156 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:53.259780 24156 net.cpp:139] Memory required for data: 775600
I0428 19:38:53.259793 24156 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:53.259804 24156 net.cpp:86] Creating Layer pool0
I0428 19:38:53.259811 24156 net.cpp:408] pool0 <- conv0
I0428 19:38:53.259820 24156 net.cpp:382] pool0 -> pool0
I0428 19:38:53.259860 24156 net.cpp:124] Setting up pool0
I0428 19:38:53.259867 24156 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:53.259871 24156 net.cpp:139] Memory required for data: 890800
I0428 19:38:53.259876 24156 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:53.259889 24156 net.cpp:86] Creating Layer conv1
I0428 19:38:53.259896 24156 net.cpp:408] conv1 <- pool0
I0428 19:38:53.259905 24156 net.cpp:382] conv1 -> conv1
I0428 19:38:53.261729 24156 net.cpp:124] Setting up conv1
I0428 19:38:53.261757 24156 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:53.261762 24156 net.cpp:139] Memory required for data: 942000
I0428 19:38:53.261790 24156 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:53.261801 24156 net.cpp:86] Creating Layer pool1
I0428 19:38:53.261806 24156 net.cpp:408] pool1 <- conv1
I0428 19:38:53.261819 24156 net.cpp:382] pool1 -> pool1
I0428 19:38:53.261862 24156 net.cpp:124] Setting up pool1
I0428 19:38:53.261869 24156 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:53.261874 24156 net.cpp:139] Memory required for data: 954800
I0428 19:38:53.261879 24156 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:53.261890 24156 net.cpp:86] Creating Layer ip1
I0428 19:38:53.261898 24156 net.cpp:408] ip1 <- pool1
I0428 19:38:53.261906 24156 net.cpp:382] ip1 -> ip1
I0428 19:38:53.262012 24156 net.cpp:124] Setting up ip1
I0428 19:38:53.262020 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.262037 24156 net.cpp:139] Memory required for data: 958800
I0428 19:38:53.262049 24156 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:53.262058 24156 net.cpp:86] Creating Layer relu1
I0428 19:38:53.262065 24156 net.cpp:408] relu1 <- ip1
I0428 19:38:53.262073 24156 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:53.262297 24156 net.cpp:124] Setting up relu1
I0428 19:38:53.262307 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.262313 24156 net.cpp:139] Memory required for data: 962800
I0428 19:38:53.262320 24156 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:53.262331 24156 net.cpp:86] Creating Layer ip2
I0428 19:38:53.262336 24156 net.cpp:408] ip2 <- ip1
I0428 19:38:53.262346 24156 net.cpp:382] ip2 -> ip2
I0428 19:38:53.262495 24156 net.cpp:124] Setting up ip2
I0428 19:38:53.262502 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.262506 24156 net.cpp:139] Memory required for data: 966800
I0428 19:38:53.262516 24156 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:53.262522 24156 net.cpp:86] Creating Layer relu2
I0428 19:38:53.262527 24156 net.cpp:408] relu2 <- ip2
I0428 19:38:53.262537 24156 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:53.262712 24156 net.cpp:124] Setting up relu2
I0428 19:38:53.262722 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.262727 24156 net.cpp:139] Memory required for data: 970800
I0428 19:38:53.262732 24156 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:53.262756 24156 net.cpp:86] Creating Layer ip3
I0428 19:38:53.262761 24156 net.cpp:408] ip3 <- ip2
I0428 19:38:53.262769 24156 net.cpp:382] ip3 -> ip3
I0428 19:38:53.262899 24156 net.cpp:124] Setting up ip3
I0428 19:38:53.262909 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.262914 24156 net.cpp:139] Memory required for data: 974800
I0428 19:38:53.262928 24156 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:53.262938 24156 net.cpp:86] Creating Layer relu3
I0428 19:38:53.262943 24156 net.cpp:408] relu3 <- ip3
I0428 19:38:53.262951 24156 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:53.263880 24156 net.cpp:124] Setting up relu3
I0428 19:38:53.263893 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.263900 24156 net.cpp:139] Memory required for data: 978800
I0428 19:38:53.263906 24156 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:53.263913 24156 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:53.263919 24156 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:53.263926 24156 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:53.263936 24156 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:53.263980 24156 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:53.263988 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.263994 24156 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:53.264000 24156 net.cpp:139] Memory required for data: 986800
I0428 19:38:53.264005 24156 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:53.264014 24156 net.cpp:86] Creating Layer accuracy
I0428 19:38:53.264019 24156 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:53.264025 24156 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:53.264034 24156 net.cpp:382] accuracy -> accuracy
I0428 19:38:53.264047 24156 net.cpp:124] Setting up accuracy
I0428 19:38:53.264055 24156 net.cpp:131] Top shape: (1)
I0428 19:38:53.264060 24156 net.cpp:139] Memory required for data: 986804
I0428 19:38:53.264065 24156 layer_factory.hpp:77] Creating layer loss
I0428 19:38:53.264072 24156 net.cpp:86] Creating Layer loss
I0428 19:38:53.264077 24156 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:53.264083 24156 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:53.264092 24156 net.cpp:382] loss -> loss
I0428 19:38:53.264102 24156 layer_factory.hpp:77] Creating layer loss
I0428 19:38:53.264396 24156 net.cpp:124] Setting up loss
I0428 19:38:53.264408 24156 net.cpp:131] Top shape: (1)
I0428 19:38:53.264413 24156 net.cpp:134]     with loss weight 1
I0428 19:38:53.264423 24156 net.cpp:139] Memory required for data: 986808
I0428 19:38:53.264441 24156 net.cpp:200] loss needs backward computation.
I0428 19:38:53.264448 24156 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:53.264468 24156 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:53.264474 24156 net.cpp:200] relu3 needs backward computation.
I0428 19:38:53.264480 24156 net.cpp:200] ip3 needs backward computation.
I0428 19:38:53.264485 24156 net.cpp:200] relu2 needs backward computation.
I0428 19:38:53.264490 24156 net.cpp:200] ip2 needs backward computation.
I0428 19:38:53.264497 24156 net.cpp:200] relu1 needs backward computation.
I0428 19:38:53.264518 24156 net.cpp:200] ip1 needs backward computation.
I0428 19:38:53.264523 24156 net.cpp:200] pool1 needs backward computation.
I0428 19:38:53.264528 24156 net.cpp:200] conv1 needs backward computation.
I0428 19:38:53.264534 24156 net.cpp:200] pool0 needs backward computation.
I0428 19:38:53.264539 24156 net.cpp:200] conv0 needs backward computation.
I0428 19:38:53.264545 24156 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:53.264551 24156 net.cpp:202] mnist does not need backward computation.
I0428 19:38:53.264556 24156 net.cpp:244] This network produces output accuracy
I0428 19:38:53.264561 24156 net.cpp:244] This network produces output loss
I0428 19:38:53.264580 24156 net.cpp:257] Network initialization done.
I0428 19:38:53.264642 24156 solver.cpp:56] Solver scaffolding done.
I0428 19:38:53.265043 24156 caffe.cpp:248] Starting Optimization
I0428 19:38:53.265050 24156 solver.cpp:273] Solving LeNet
I0428 19:38:53.265055 24156 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:53.266001 24156 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:53.268640 24156 blocking_queue.cpp:49] Waiting for data
I0428 19:38:53.343008 24163 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:53.343468 24156 solver.cpp:398]     Test net output #0: accuracy = 0.1036
I0428 19:38:53.343488 24156 solver.cpp:398]     Test net output #1: loss = 2.29966 (* 1 = 2.29966 loss)
I0428 19:38:53.345389 24156 solver.cpp:219] Iteration 0 (-1.01174e-42 iter/s, 0.0802929s/100 iters), loss = 2.30661
I0428 19:38:53.345422 24156 solver.cpp:238]     Train net output #0: loss = 2.30661 (* 1 = 2.30661 loss)
I0428 19:38:53.345463 24156 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:53.415704 24156 solver.cpp:219] Iteration 100 (1422.93 iter/s, 0.0702773s/100 iters), loss = 1.72088
I0428 19:38:53.415735 24156 solver.cpp:238]     Train net output #0: loss = 1.72088 (* 1 = 1.72088 loss)
I0428 19:38:53.415762 24156 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:53.484117 24156 solver.cpp:219] Iteration 200 (1462.51 iter/s, 0.0683756s/100 iters), loss = 1.4524
I0428 19:38:53.484144 24156 solver.cpp:238]     Train net output #0: loss = 1.4524 (* 1 = 1.4524 loss)
I0428 19:38:53.484171 24156 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:53.552445 24156 solver.cpp:219] Iteration 300 (1464.23 iter/s, 0.0682955s/100 iters), loss = 1.39821
I0428 19:38:53.552476 24156 solver.cpp:238]     Train net output #0: loss = 1.39821 (* 1 = 1.39821 loss)
I0428 19:38:53.552505 24156 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:53.623829 24156 solver.cpp:219] Iteration 400 (1401.6 iter/s, 0.0713472s/100 iters), loss = 1.0894
I0428 19:38:53.623859 24156 solver.cpp:238]     Train net output #0: loss = 1.0894 (* 1 = 1.0894 loss)
I0428 19:38:53.623886 24156 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:53.691229 24156 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:53.766145 24163 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:53.766582 24156 solver.cpp:398]     Test net output #0: accuracy = 0.6544
I0428 19:38:53.766605 24156 solver.cpp:398]     Test net output #1: loss = 1.0339 (* 1 = 1.0339 loss)
I0428 19:38:53.767446 24156 solver.cpp:219] Iteration 500 (696.495 iter/s, 0.143576s/100 iters), loss = 0.983783
I0428 19:38:53.767493 24156 solver.cpp:238]     Train net output #0: loss = 0.983783 (* 1 = 0.983783 loss)
I0428 19:38:53.767519 24156 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:53.840350 24156 solver.cpp:219] Iteration 600 (1372.35 iter/s, 0.0728676s/100 iters), loss = 1.0306
I0428 19:38:53.840384 24156 solver.cpp:238]     Train net output #0: loss = 1.0306 (* 1 = 1.0306 loss)
I0428 19:38:53.840395 24156 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:53.909586 24156 solver.cpp:219] Iteration 700 (1445.15 iter/s, 0.0691968s/100 iters), loss = 0.799281
I0428 19:38:53.909616 24156 solver.cpp:238]     Train net output #0: loss = 0.799281 (* 1 = 0.799281 loss)
I0428 19:38:53.909644 24156 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:53.977612 24156 solver.cpp:219] Iteration 800 (1470.82 iter/s, 0.0679895s/100 iters), loss = 0.893275
I0428 19:38:53.977643 24156 solver.cpp:238]     Train net output #0: loss = 0.893275 (* 1 = 0.893275 loss)
I0428 19:38:53.977671 24156 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:54.046869 24156 solver.cpp:219] Iteration 900 (1444.7 iter/s, 0.0692183s/100 iters), loss = 0.71016
I0428 19:38:54.046900 24156 solver.cpp:238]     Train net output #0: loss = 0.71016 (* 1 = 0.71016 loss)
I0428 19:38:54.046927 24156 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:54.070152 24162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:54.114864 24156 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:54.115520 24156 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:54.115924 24156 solver.cpp:311] Iteration 1000, loss = 0.529601
I0428 19:38:54.115942 24156 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:54.190376 24163 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:54.190851 24156 solver.cpp:398]     Test net output #0: accuracy = 0.8077
I0428 19:38:54.190873 24156 solver.cpp:398]     Test net output #1: loss = 0.573716 (* 1 = 0.573716 loss)
I0428 19:38:54.190882 24156 solver.cpp:316] Optimization Done.
I0428 19:38:54.190888 24156 caffe.cpp:259] Optimization Done.
