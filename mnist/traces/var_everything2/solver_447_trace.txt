I0428 19:44:25.269963 25599 caffe.cpp:218] Using GPUs 0
I0428 19:44:25.307034 25599 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:25.761059 25599 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test447.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:25.761188 25599 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test447.prototxt
I0428 19:44:25.761548 25599 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:25.761579 25599 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:25.761664 25599 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:25.761745 25599 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:25.761847 25599 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:25.761885 25599 net.cpp:86] Creating Layer mnist
I0428 19:44:25.761893 25599 net.cpp:382] mnist -> data
I0428 19:44:25.761934 25599 net.cpp:382] mnist -> label
I0428 19:44:25.762986 25599 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:25.765239 25599 net.cpp:124] Setting up mnist
I0428 19:44:25.765269 25599 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:25.765277 25599 net.cpp:131] Top shape: 64 (64)
I0428 19:44:25.765280 25599 net.cpp:139] Memory required for data: 200960
I0428 19:44:25.765287 25599 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:25.765300 25599 net.cpp:86] Creating Layer conv0
I0428 19:44:25.765316 25599 net.cpp:408] conv0 <- data
I0428 19:44:25.765327 25599 net.cpp:382] conv0 -> conv0
I0428 19:44:25.995369 25599 net.cpp:124] Setting up conv0
I0428 19:44:25.995395 25599 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:25.995399 25599 net.cpp:139] Memory required for data: 495872
I0428 19:44:25.995414 25599 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:25.995426 25599 net.cpp:86] Creating Layer pool0
I0428 19:44:25.995429 25599 net.cpp:408] pool0 <- conv0
I0428 19:44:25.995434 25599 net.cpp:382] pool0 -> pool0
I0428 19:44:25.995494 25599 net.cpp:124] Setting up pool0
I0428 19:44:25.995501 25599 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:25.995504 25599 net.cpp:139] Memory required for data: 569600
I0428 19:44:25.995507 25599 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:25.995517 25599 net.cpp:86] Creating Layer conv1
I0428 19:44:25.995520 25599 net.cpp:408] conv1 <- pool0
I0428 19:44:25.995525 25599 net.cpp:382] conv1 -> conv1
I0428 19:44:25.998338 25599 net.cpp:124] Setting up conv1
I0428 19:44:25.998352 25599 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:25.998371 25599 net.cpp:139] Memory required for data: 1388800
I0428 19:44:25.998380 25599 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:25.998387 25599 net.cpp:86] Creating Layer pool1
I0428 19:44:25.998391 25599 net.cpp:408] pool1 <- conv1
I0428 19:44:25.998396 25599 net.cpp:382] pool1 -> pool1
I0428 19:44:25.998464 25599 net.cpp:124] Setting up pool1
I0428 19:44:25.998469 25599 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:25.998472 25599 net.cpp:139] Memory required for data: 1593600
I0428 19:44:25.998476 25599 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:25.998482 25599 net.cpp:86] Creating Layer ip1
I0428 19:44:25.998486 25599 net.cpp:408] ip1 <- pool1
I0428 19:44:25.998489 25599 net.cpp:382] ip1 -> ip1
I0428 19:44:25.999536 25599 net.cpp:124] Setting up ip1
I0428 19:44:25.999565 25599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:25.999568 25599 net.cpp:139] Memory required for data: 1596160
I0428 19:44:25.999577 25599 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:25.999583 25599 net.cpp:86] Creating Layer relu1
I0428 19:44:25.999588 25599 net.cpp:408] relu1 <- ip1
I0428 19:44:25.999593 25599 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:25.999804 25599 net.cpp:124] Setting up relu1
I0428 19:44:25.999812 25599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:25.999815 25599 net.cpp:139] Memory required for data: 1598720
I0428 19:44:25.999819 25599 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:25.999825 25599 net.cpp:86] Creating Layer ip2
I0428 19:44:25.999827 25599 net.cpp:408] ip2 <- ip1
I0428 19:44:25.999832 25599 net.cpp:382] ip2 -> ip2
I0428 19:44:25.999939 25599 net.cpp:124] Setting up ip2
I0428 19:44:25.999946 25599 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:25.999949 25599 net.cpp:139] Memory required for data: 1611520
I0428 19:44:25.999954 25599 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:25.999961 25599 net.cpp:86] Creating Layer relu2
I0428 19:44:25.999964 25599 net.cpp:408] relu2 <- ip2
I0428 19:44:25.999969 25599 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:26.000771 25599 net.cpp:124] Setting up relu2
I0428 19:44:26.000783 25599 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:26.000797 25599 net.cpp:139] Memory required for data: 1624320
I0428 19:44:26.000802 25599 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:26.000808 25599 net.cpp:86] Creating Layer ip3
I0428 19:44:26.000818 25599 net.cpp:408] ip3 <- ip2
I0428 19:44:26.000838 25599 net.cpp:382] ip3 -> ip3
I0428 19:44:26.000982 25599 net.cpp:124] Setting up ip3
I0428 19:44:26.000990 25599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:26.000994 25599 net.cpp:139] Memory required for data: 1626880
I0428 19:44:26.001003 25599 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:26.001009 25599 net.cpp:86] Creating Layer relu3
I0428 19:44:26.001013 25599 net.cpp:408] relu3 <- ip3
I0428 19:44:26.001018 25599 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:26.001214 25599 net.cpp:124] Setting up relu3
I0428 19:44:26.001237 25599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:26.001240 25599 net.cpp:139] Memory required for data: 1629440
I0428 19:44:26.001243 25599 layer_factory.hpp:77] Creating layer loss
I0428 19:44:26.001268 25599 net.cpp:86] Creating Layer loss
I0428 19:44:26.001273 25599 net.cpp:408] loss <- ip3
I0428 19:44:26.001277 25599 net.cpp:408] loss <- label
I0428 19:44:26.001283 25599 net.cpp:382] loss -> loss
I0428 19:44:26.001296 25599 layer_factory.hpp:77] Creating layer loss
I0428 19:44:26.001562 25599 net.cpp:124] Setting up loss
I0428 19:44:26.001572 25599 net.cpp:131] Top shape: (1)
I0428 19:44:26.001575 25599 net.cpp:134]     with loss weight 1
I0428 19:44:26.001590 25599 net.cpp:139] Memory required for data: 1629444
I0428 19:44:26.001593 25599 net.cpp:200] loss needs backward computation.
I0428 19:44:26.001596 25599 net.cpp:200] relu3 needs backward computation.
I0428 19:44:26.001600 25599 net.cpp:200] ip3 needs backward computation.
I0428 19:44:26.001603 25599 net.cpp:200] relu2 needs backward computation.
I0428 19:44:26.001605 25599 net.cpp:200] ip2 needs backward computation.
I0428 19:44:26.001608 25599 net.cpp:200] relu1 needs backward computation.
I0428 19:44:26.001611 25599 net.cpp:200] ip1 needs backward computation.
I0428 19:44:26.001615 25599 net.cpp:200] pool1 needs backward computation.
I0428 19:44:26.001617 25599 net.cpp:200] conv1 needs backward computation.
I0428 19:44:26.001621 25599 net.cpp:200] pool0 needs backward computation.
I0428 19:44:26.001624 25599 net.cpp:200] conv0 needs backward computation.
I0428 19:44:26.001627 25599 net.cpp:202] mnist does not need backward computation.
I0428 19:44:26.001631 25599 net.cpp:244] This network produces output loss
I0428 19:44:26.001639 25599 net.cpp:257] Network initialization done.
I0428 19:44:26.001999 25599 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test447.prototxt
I0428 19:44:26.002056 25599 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:26.002157 25599 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:26.002239 25599 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:26.002286 25599 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:26.002298 25599 net.cpp:86] Creating Layer mnist
I0428 19:44:26.002302 25599 net.cpp:382] mnist -> data
I0428 19:44:26.002310 25599 net.cpp:382] mnist -> label
I0428 19:44:26.002414 25599 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:26.004703 25599 net.cpp:124] Setting up mnist
I0428 19:44:26.004746 25599 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:26.004751 25599 net.cpp:131] Top shape: 100 (100)
I0428 19:44:26.004755 25599 net.cpp:139] Memory required for data: 314000
I0428 19:44:26.004758 25599 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:26.004765 25599 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:26.004767 25599 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:26.004772 25599 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:26.004778 25599 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:26.004878 25599 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:26.004885 25599 net.cpp:131] Top shape: 100 (100)
I0428 19:44:26.004889 25599 net.cpp:131] Top shape: 100 (100)
I0428 19:44:26.004891 25599 net.cpp:139] Memory required for data: 314800
I0428 19:44:26.004895 25599 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:26.004915 25599 net.cpp:86] Creating Layer conv0
I0428 19:44:26.004920 25599 net.cpp:408] conv0 <- data
I0428 19:44:26.004925 25599 net.cpp:382] conv0 -> conv0
I0428 19:44:26.006788 25599 net.cpp:124] Setting up conv0
I0428 19:44:26.006801 25599 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:26.006820 25599 net.cpp:139] Memory required for data: 775600
I0428 19:44:26.006845 25599 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:26.006867 25599 net.cpp:86] Creating Layer pool0
I0428 19:44:26.006871 25599 net.cpp:408] pool0 <- conv0
I0428 19:44:26.006892 25599 net.cpp:382] pool0 -> pool0
I0428 19:44:26.006928 25599 net.cpp:124] Setting up pool0
I0428 19:44:26.006945 25599 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:26.006948 25599 net.cpp:139] Memory required for data: 890800
I0428 19:44:26.006952 25599 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:26.006960 25599 net.cpp:86] Creating Layer conv1
I0428 19:44:26.006964 25599 net.cpp:408] conv1 <- pool0
I0428 19:44:26.006970 25599 net.cpp:382] conv1 -> conv1
I0428 19:44:26.008538 25599 net.cpp:124] Setting up conv1
I0428 19:44:26.008565 25599 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:26.008585 25599 net.cpp:139] Memory required for data: 2170800
I0428 19:44:26.008594 25599 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:26.008599 25599 net.cpp:86] Creating Layer pool1
I0428 19:44:26.008604 25599 net.cpp:408] pool1 <- conv1
I0428 19:44:26.008610 25599 net.cpp:382] pool1 -> pool1
I0428 19:44:26.008644 25599 net.cpp:124] Setting up pool1
I0428 19:44:26.008649 25599 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:26.008652 25599 net.cpp:139] Memory required for data: 2490800
I0428 19:44:26.008656 25599 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:26.008661 25599 net.cpp:86] Creating Layer ip1
I0428 19:44:26.008664 25599 net.cpp:408] ip1 <- pool1
I0428 19:44:26.008671 25599 net.cpp:382] ip1 -> ip1
I0428 19:44:26.008855 25599 net.cpp:124] Setting up ip1
I0428 19:44:26.008882 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.008895 25599 net.cpp:139] Memory required for data: 2494800
I0428 19:44:26.008904 25599 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:26.008909 25599 net.cpp:86] Creating Layer relu1
I0428 19:44:26.008913 25599 net.cpp:408] relu1 <- ip1
I0428 19:44:26.008919 25599 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:26.009096 25599 net.cpp:124] Setting up relu1
I0428 19:44:26.009105 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.009109 25599 net.cpp:139] Memory required for data: 2498800
I0428 19:44:26.009112 25599 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:26.009119 25599 net.cpp:86] Creating Layer ip2
I0428 19:44:26.009124 25599 net.cpp:408] ip2 <- ip1
I0428 19:44:26.009130 25599 net.cpp:382] ip2 -> ip2
I0428 19:44:26.009336 25599 net.cpp:124] Setting up ip2
I0428 19:44:26.009344 25599 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:26.009347 25599 net.cpp:139] Memory required for data: 2518800
I0428 19:44:26.009353 25599 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:26.009363 25599 net.cpp:86] Creating Layer relu2
I0428 19:44:26.009366 25599 net.cpp:408] relu2 <- ip2
I0428 19:44:26.009372 25599 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:26.009590 25599 net.cpp:124] Setting up relu2
I0428 19:44:26.009599 25599 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:26.009603 25599 net.cpp:139] Memory required for data: 2538800
I0428 19:44:26.009606 25599 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:26.009613 25599 net.cpp:86] Creating Layer ip3
I0428 19:44:26.009616 25599 net.cpp:408] ip3 <- ip2
I0428 19:44:26.009626 25599 net.cpp:382] ip3 -> ip3
I0428 19:44:26.009734 25599 net.cpp:124] Setting up ip3
I0428 19:44:26.009744 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.009752 25599 net.cpp:139] Memory required for data: 2542800
I0428 19:44:26.009760 25599 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:26.009768 25599 net.cpp:86] Creating Layer relu3
I0428 19:44:26.009770 25599 net.cpp:408] relu3 <- ip3
I0428 19:44:26.009774 25599 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:26.010562 25599 net.cpp:124] Setting up relu3
I0428 19:44:26.010591 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.010594 25599 net.cpp:139] Memory required for data: 2546800
I0428 19:44:26.010598 25599 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:26.010603 25599 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:26.010607 25599 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:26.010612 25599 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:26.010617 25599 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:26.010715 25599 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:26.010722 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.010726 25599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:26.010730 25599 net.cpp:139] Memory required for data: 2554800
I0428 19:44:26.010735 25599 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:26.010740 25599 net.cpp:86] Creating Layer accuracy
I0428 19:44:26.010743 25599 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:26.010747 25599 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:26.010753 25599 net.cpp:382] accuracy -> accuracy
I0428 19:44:26.010761 25599 net.cpp:124] Setting up accuracy
I0428 19:44:26.010766 25599 net.cpp:131] Top shape: (1)
I0428 19:44:26.010769 25599 net.cpp:139] Memory required for data: 2554804
I0428 19:44:26.010772 25599 layer_factory.hpp:77] Creating layer loss
I0428 19:44:26.010777 25599 net.cpp:86] Creating Layer loss
I0428 19:44:26.010781 25599 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:26.010787 25599 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:26.010792 25599 net.cpp:382] loss -> loss
I0428 19:44:26.010797 25599 layer_factory.hpp:77] Creating layer loss
I0428 19:44:26.011054 25599 net.cpp:124] Setting up loss
I0428 19:44:26.011065 25599 net.cpp:131] Top shape: (1)
I0428 19:44:26.011067 25599 net.cpp:134]     with loss weight 1
I0428 19:44:26.011073 25599 net.cpp:139] Memory required for data: 2554808
I0428 19:44:26.011102 25599 net.cpp:200] loss needs backward computation.
I0428 19:44:26.011106 25599 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:26.011111 25599 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:26.011113 25599 net.cpp:200] relu3 needs backward computation.
I0428 19:44:26.011117 25599 net.cpp:200] ip3 needs backward computation.
I0428 19:44:26.011121 25599 net.cpp:200] relu2 needs backward computation.
I0428 19:44:26.011123 25599 net.cpp:200] ip2 needs backward computation.
I0428 19:44:26.011126 25599 net.cpp:200] relu1 needs backward computation.
I0428 19:44:26.011143 25599 net.cpp:200] ip1 needs backward computation.
I0428 19:44:26.011168 25599 net.cpp:200] pool1 needs backward computation.
I0428 19:44:26.011170 25599 net.cpp:200] conv1 needs backward computation.
I0428 19:44:26.011173 25599 net.cpp:200] pool0 needs backward computation.
I0428 19:44:26.011176 25599 net.cpp:200] conv0 needs backward computation.
I0428 19:44:26.011180 25599 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:26.011184 25599 net.cpp:202] mnist does not need backward computation.
I0428 19:44:26.011186 25599 net.cpp:244] This network produces output accuracy
I0428 19:44:26.011190 25599 net.cpp:244] This network produces output loss
I0428 19:44:26.011206 25599 net.cpp:257] Network initialization done.
I0428 19:44:26.011247 25599 solver.cpp:56] Solver scaffolding done.
I0428 19:44:26.011610 25599 caffe.cpp:248] Starting Optimization
I0428 19:44:26.011616 25599 solver.cpp:273] Solving LeNet
I0428 19:44:26.011618 25599 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:26.012512 25599 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:26.015974 25599 blocking_queue.cpp:49] Waiting for data
I0428 19:44:26.086379 25606 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:26.086885 25599 solver.cpp:398]     Test net output #0: accuracy = 0.0899
I0428 19:44:26.086920 25599 solver.cpp:398]     Test net output #1: loss = 2.30773 (* 1 = 2.30773 loss)
I0428 19:44:26.089063 25599 solver.cpp:219] Iteration 0 (0 iter/s, 0.0773908s/100 iters), loss = 2.30262
I0428 19:44:26.089103 25599 solver.cpp:238]     Train net output #0: loss = 2.30262 (* 1 = 2.30262 loss)
I0428 19:44:26.089115 25599 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:26.196825 25599 solver.cpp:219] Iteration 100 (928.424 iter/s, 0.107709s/100 iters), loss = 0.873627
I0428 19:44:26.196851 25599 solver.cpp:238]     Train net output #0: loss = 0.873627 (* 1 = 0.873627 loss)
I0428 19:44:26.196857 25599 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:26.303433 25599 solver.cpp:219] Iteration 200 (938.425 iter/s, 0.106562s/100 iters), loss = 0.819995
I0428 19:44:26.303469 25599 solver.cpp:238]     Train net output #0: loss = 0.819995 (* 1 = 0.819995 loss)
I0428 19:44:26.303480 25599 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:26.410758 25599 solver.cpp:219] Iteration 300 (932.181 iter/s, 0.107275s/100 iters), loss = 0.500919
I0428 19:44:26.410784 25599 solver.cpp:238]     Train net output #0: loss = 0.500919 (* 1 = 0.500919 loss)
I0428 19:44:26.410790 25599 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:26.512542 25599 solver.cpp:219] Iteration 400 (982.872 iter/s, 0.101743s/100 iters), loss = 0.78503
I0428 19:44:26.512578 25599 solver.cpp:238]     Train net output #0: loss = 0.78503 (* 1 = 0.78503 loss)
I0428 19:44:26.512588 25599 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:26.616297 25599 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:26.690737 25606 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:26.691227 25599 solver.cpp:398]     Test net output #0: accuracy = 0.8168
I0428 19:44:26.691251 25599 solver.cpp:398]     Test net output #1: loss = 0.638843 (* 1 = 0.638843 loss)
I0428 19:44:26.692278 25599 solver.cpp:219] Iteration 500 (556.519 iter/s, 0.179688s/100 iters), loss = 0.73535
I0428 19:44:26.692333 25599 solver.cpp:238]     Train net output #0: loss = 0.73535 (* 1 = 0.73535 loss)
I0428 19:44:26.692356 25599 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:26.798562 25599 solver.cpp:219] Iteration 600 (941.468 iter/s, 0.106217s/100 iters), loss = 0.30619
I0428 19:44:26.798588 25599 solver.cpp:238]     Train net output #0: loss = 0.30619 (* 1 = 0.30619 loss)
I0428 19:44:26.798610 25599 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:26.895704 25599 solver.cpp:219] Iteration 700 (1029.83 iter/s, 0.0971038s/100 iters), loss = 0.509124
I0428 19:44:26.895730 25599 solver.cpp:238]     Train net output #0: loss = 0.509124 (* 1 = 0.509124 loss)
I0428 19:44:26.895752 25599 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:26.997923 25599 solver.cpp:219] Iteration 800 (978.745 iter/s, 0.102172s/100 iters), loss = 0.666411
I0428 19:44:26.997956 25599 solver.cpp:238]     Train net output #0: loss = 0.666411 (* 1 = 0.666411 loss)
I0428 19:44:26.997964 25599 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:27.102414 25599 solver.cpp:219] Iteration 900 (957.433 iter/s, 0.104446s/100 iters), loss = 0.344973
I0428 19:44:27.102444 25599 solver.cpp:238]     Train net output #0: loss = 0.344973 (* 1 = 0.344973 loss)
I0428 19:44:27.102452 25599 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:27.136689 25605 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:27.201328 25599 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:27.202383 25599 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:27.202937 25599 solver.cpp:311] Iteration 1000, loss = 0.4142
I0428 19:44:27.202953 25599 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:27.277510 25606 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:27.278018 25599 solver.cpp:398]     Test net output #0: accuracy = 0.9558
I0428 19:44:27.278043 25599 solver.cpp:398]     Test net output #1: loss = 0.348994 (* 1 = 0.348994 loss)
I0428 19:44:27.278048 25599 solver.cpp:316] Optimization Done.
I0428 19:44:27.278053 25599 caffe.cpp:259] Optimization Done.
