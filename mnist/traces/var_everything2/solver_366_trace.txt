I0428 19:41:29.122876 24838 caffe.cpp:218] Using GPUs 0
I0428 19:41:29.163985 24838 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:29.629211 24838 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test366.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:29.629369 24838 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test366.prototxt
I0428 19:41:29.629705 24838 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:29.629724 24838 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:29.629809 24838 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:29.629899 24838 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:29.630002 24838 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:29.630029 24838 net.cpp:86] Creating Layer mnist
I0428 19:41:29.630038 24838 net.cpp:382] mnist -> data
I0428 19:41:29.630065 24838 net.cpp:382] mnist -> label
I0428 19:41:29.631171 24838 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:29.633534 24838 net.cpp:124] Setting up mnist
I0428 19:41:29.633551 24838 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:29.633561 24838 net.cpp:131] Top shape: 64 (64)
I0428 19:41:29.633566 24838 net.cpp:139] Memory required for data: 200960
I0428 19:41:29.633575 24838 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:29.633592 24838 net.cpp:86] Creating Layer conv0
I0428 19:41:29.633612 24838 net.cpp:408] conv0 <- data
I0428 19:41:29.633630 24838 net.cpp:382] conv0 -> conv0
I0428 19:41:29.858774 24838 net.cpp:124] Setting up conv0
I0428 19:41:29.858803 24838 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:29.858808 24838 net.cpp:139] Memory required for data: 495872
I0428 19:41:29.858842 24838 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:29.858860 24838 net.cpp:86] Creating Layer pool0
I0428 19:41:29.858865 24838 net.cpp:408] pool0 <- conv0
I0428 19:41:29.858875 24838 net.cpp:382] pool0 -> pool0
I0428 19:41:29.858932 24838 net.cpp:124] Setting up pool0
I0428 19:41:29.858939 24838 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:29.858944 24838 net.cpp:139] Memory required for data: 569600
I0428 19:41:29.858949 24838 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:29.858964 24838 net.cpp:86] Creating Layer conv1
I0428 19:41:29.858970 24838 net.cpp:408] conv1 <- pool0
I0428 19:41:29.858992 24838 net.cpp:382] conv1 -> conv1
I0428 19:41:29.860755 24838 net.cpp:124] Setting up conv1
I0428 19:41:29.860771 24838 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:29.860777 24838 net.cpp:139] Memory required for data: 733440
I0428 19:41:29.860790 24838 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:29.860801 24838 net.cpp:86] Creating Layer pool1
I0428 19:41:29.860807 24838 net.cpp:408] pool1 <- conv1
I0428 19:41:29.860836 24838 net.cpp:382] pool1 -> pool1
I0428 19:41:29.860914 24838 net.cpp:124] Setting up pool1
I0428 19:41:29.860924 24838 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:29.860930 24838 net.cpp:139] Memory required for data: 774400
I0428 19:41:29.860935 24838 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:29.860947 24838 net.cpp:86] Creating Layer ip1
I0428 19:41:29.860954 24838 net.cpp:408] ip1 <- pool1
I0428 19:41:29.860962 24838 net.cpp:382] ip1 -> ip1
I0428 19:41:29.861969 24838 net.cpp:124] Setting up ip1
I0428 19:41:29.861984 24838 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:29.861989 24838 net.cpp:139] Memory required for data: 776960
I0428 19:41:29.862001 24838 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:29.862010 24838 net.cpp:86] Creating Layer relu1
I0428 19:41:29.862016 24838 net.cpp:408] relu1 <- ip1
I0428 19:41:29.862023 24838 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:29.862210 24838 net.cpp:124] Setting up relu1
I0428 19:41:29.862220 24838 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:29.862224 24838 net.cpp:139] Memory required for data: 779520
I0428 19:41:29.862229 24838 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:29.862239 24838 net.cpp:86] Creating Layer ip2
I0428 19:41:29.862244 24838 net.cpp:408] ip2 <- ip1
I0428 19:41:29.862267 24838 net.cpp:382] ip2 -> ip2
I0428 19:41:29.862381 24838 net.cpp:124] Setting up ip2
I0428 19:41:29.862390 24838 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:29.862411 24838 net.cpp:139] Memory required for data: 785920
I0428 19:41:29.862419 24838 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:29.862428 24838 net.cpp:86] Creating Layer relu2
I0428 19:41:29.862438 24838 net.cpp:408] relu2 <- ip2
I0428 19:41:29.862445 24838 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:29.863193 24838 net.cpp:124] Setting up relu2
I0428 19:41:29.863206 24838 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:29.863212 24838 net.cpp:139] Memory required for data: 792320
I0428 19:41:29.863217 24838 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:29.863227 24838 net.cpp:86] Creating Layer ip3
I0428 19:41:29.863234 24838 net.cpp:408] ip3 <- ip2
I0428 19:41:29.863241 24838 net.cpp:382] ip3 -> ip3
I0428 19:41:29.863374 24838 net.cpp:124] Setting up ip3
I0428 19:41:29.863384 24838 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:29.863389 24838 net.cpp:139] Memory required for data: 794880
I0428 19:41:29.863400 24838 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:29.863411 24838 net.cpp:86] Creating Layer relu3
I0428 19:41:29.863418 24838 net.cpp:408] relu3 <- ip3
I0428 19:41:29.863425 24838 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:29.863593 24838 net.cpp:124] Setting up relu3
I0428 19:41:29.863603 24838 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:29.863607 24838 net.cpp:139] Memory required for data: 797440
I0428 19:41:29.863612 24838 layer_factory.hpp:77] Creating layer loss
I0428 19:41:29.863623 24838 net.cpp:86] Creating Layer loss
I0428 19:41:29.863628 24838 net.cpp:408] loss <- ip3
I0428 19:41:29.863634 24838 net.cpp:408] loss <- label
I0428 19:41:29.863644 24838 net.cpp:382] loss -> loss
I0428 19:41:29.863665 24838 layer_factory.hpp:77] Creating layer loss
I0428 19:41:29.863921 24838 net.cpp:124] Setting up loss
I0428 19:41:29.863931 24838 net.cpp:131] Top shape: (1)
I0428 19:41:29.863936 24838 net.cpp:134]     with loss weight 1
I0428 19:41:29.863955 24838 net.cpp:139] Memory required for data: 797444
I0428 19:41:29.863960 24838 net.cpp:200] loss needs backward computation.
I0428 19:41:29.863966 24838 net.cpp:200] relu3 needs backward computation.
I0428 19:41:29.863971 24838 net.cpp:200] ip3 needs backward computation.
I0428 19:41:29.863976 24838 net.cpp:200] relu2 needs backward computation.
I0428 19:41:29.863981 24838 net.cpp:200] ip2 needs backward computation.
I0428 19:41:29.863986 24838 net.cpp:200] relu1 needs backward computation.
I0428 19:41:29.863991 24838 net.cpp:200] ip1 needs backward computation.
I0428 19:41:29.863996 24838 net.cpp:200] pool1 needs backward computation.
I0428 19:41:29.864001 24838 net.cpp:200] conv1 needs backward computation.
I0428 19:41:29.864006 24838 net.cpp:200] pool0 needs backward computation.
I0428 19:41:29.864009 24838 net.cpp:200] conv0 needs backward computation.
I0428 19:41:29.864015 24838 net.cpp:202] mnist does not need backward computation.
I0428 19:41:29.864019 24838 net.cpp:244] This network produces output loss
I0428 19:41:29.864035 24838 net.cpp:257] Network initialization done.
I0428 19:41:29.864378 24838 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test366.prototxt
I0428 19:41:29.864410 24838 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:29.864521 24838 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:29.864648 24838 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:29.864706 24838 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:29.864723 24838 net.cpp:86] Creating Layer mnist
I0428 19:41:29.864732 24838 net.cpp:382] mnist -> data
I0428 19:41:29.864743 24838 net.cpp:382] mnist -> label
I0428 19:41:29.864884 24838 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:29.867252 24838 net.cpp:124] Setting up mnist
I0428 19:41:29.867282 24838 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:29.867290 24838 net.cpp:131] Top shape: 100 (100)
I0428 19:41:29.867295 24838 net.cpp:139] Memory required for data: 314000
I0428 19:41:29.867300 24838 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:29.867328 24838 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:29.867334 24838 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:29.867343 24838 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:29.867354 24838 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:29.867460 24838 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:29.867482 24838 net.cpp:131] Top shape: 100 (100)
I0428 19:41:29.867488 24838 net.cpp:131] Top shape: 100 (100)
I0428 19:41:29.867504 24838 net.cpp:139] Memory required for data: 314800
I0428 19:41:29.867509 24838 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:29.867523 24838 net.cpp:86] Creating Layer conv0
I0428 19:41:29.867530 24838 net.cpp:408] conv0 <- data
I0428 19:41:29.867539 24838 net.cpp:382] conv0 -> conv0
I0428 19:41:29.869220 24838 net.cpp:124] Setting up conv0
I0428 19:41:29.869235 24838 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:29.869240 24838 net.cpp:139] Memory required for data: 775600
I0428 19:41:29.869269 24838 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:29.869282 24838 net.cpp:86] Creating Layer pool0
I0428 19:41:29.869287 24838 net.cpp:408] pool0 <- conv0
I0428 19:41:29.869294 24838 net.cpp:382] pool0 -> pool0
I0428 19:41:29.869339 24838 net.cpp:124] Setting up pool0
I0428 19:41:29.869349 24838 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:29.869354 24838 net.cpp:139] Memory required for data: 890800
I0428 19:41:29.869357 24838 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:29.869372 24838 net.cpp:86] Creating Layer conv1
I0428 19:41:29.869379 24838 net.cpp:408] conv1 <- pool0
I0428 19:41:29.869390 24838 net.cpp:382] conv1 -> conv1
I0428 19:41:29.870980 24838 net.cpp:124] Setting up conv1
I0428 19:41:29.870997 24838 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:29.871017 24838 net.cpp:139] Memory required for data: 1146800
I0428 19:41:29.871031 24838 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:29.871042 24838 net.cpp:86] Creating Layer pool1
I0428 19:41:29.871047 24838 net.cpp:408] pool1 <- conv1
I0428 19:41:29.871055 24838 net.cpp:382] pool1 -> pool1
I0428 19:41:29.871098 24838 net.cpp:124] Setting up pool1
I0428 19:41:29.871106 24838 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:29.871121 24838 net.cpp:139] Memory required for data: 1210800
I0428 19:41:29.871126 24838 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:29.871137 24838 net.cpp:86] Creating Layer ip1
I0428 19:41:29.871143 24838 net.cpp:408] ip1 <- pool1
I0428 19:41:29.871150 24838 net.cpp:382] ip1 -> ip1
I0428 19:41:29.871268 24838 net.cpp:124] Setting up ip1
I0428 19:41:29.871278 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.871294 24838 net.cpp:139] Memory required for data: 1214800
I0428 19:41:29.871309 24838 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:29.871320 24838 net.cpp:86] Creating Layer relu1
I0428 19:41:29.871325 24838 net.cpp:408] relu1 <- ip1
I0428 19:41:29.871335 24838 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:29.871498 24838 net.cpp:124] Setting up relu1
I0428 19:41:29.871508 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.871513 24838 net.cpp:139] Memory required for data: 1218800
I0428 19:41:29.871518 24838 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:29.871531 24838 net.cpp:86] Creating Layer ip2
I0428 19:41:29.871536 24838 net.cpp:408] ip2 <- ip1
I0428 19:41:29.871546 24838 net.cpp:382] ip2 -> ip2
I0428 19:41:29.871675 24838 net.cpp:124] Setting up ip2
I0428 19:41:29.871683 24838 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:29.871688 24838 net.cpp:139] Memory required for data: 1228800
I0428 19:41:29.871696 24838 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:29.871718 24838 net.cpp:86] Creating Layer relu2
I0428 19:41:29.871723 24838 net.cpp:408] relu2 <- ip2
I0428 19:41:29.871729 24838 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:29.871938 24838 net.cpp:124] Setting up relu2
I0428 19:41:29.871949 24838 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:29.871954 24838 net.cpp:139] Memory required for data: 1238800
I0428 19:41:29.871959 24838 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:29.871968 24838 net.cpp:86] Creating Layer ip3
I0428 19:41:29.871974 24838 net.cpp:408] ip3 <- ip2
I0428 19:41:29.871985 24838 net.cpp:382] ip3 -> ip3
I0428 19:41:29.872093 24838 net.cpp:124] Setting up ip3
I0428 19:41:29.872103 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.872123 24838 net.cpp:139] Memory required for data: 1242800
I0428 19:41:29.872134 24838 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:29.872143 24838 net.cpp:86] Creating Layer relu3
I0428 19:41:29.872149 24838 net.cpp:408] relu3 <- ip3
I0428 19:41:29.872159 24838 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:29.873028 24838 net.cpp:124] Setting up relu3
I0428 19:41:29.873044 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.873049 24838 net.cpp:139] Memory required for data: 1246800
I0428 19:41:29.873054 24838 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:29.873062 24838 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:29.873069 24838 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:29.873078 24838 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:29.873088 24838 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:29.873133 24838 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:29.873143 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.873149 24838 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:29.873155 24838 net.cpp:139] Memory required for data: 1254800
I0428 19:41:29.873160 24838 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:29.873170 24838 net.cpp:86] Creating Layer accuracy
I0428 19:41:29.873177 24838 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:29.873198 24838 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:29.873216 24838 net.cpp:382] accuracy -> accuracy
I0428 19:41:29.873234 24838 net.cpp:124] Setting up accuracy
I0428 19:41:29.873242 24838 net.cpp:131] Top shape: (1)
I0428 19:41:29.873247 24838 net.cpp:139] Memory required for data: 1254804
I0428 19:41:29.873252 24838 layer_factory.hpp:77] Creating layer loss
I0428 19:41:29.873260 24838 net.cpp:86] Creating Layer loss
I0428 19:41:29.873265 24838 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:29.873270 24838 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:29.873277 24838 net.cpp:382] loss -> loss
I0428 19:41:29.873287 24838 layer_factory.hpp:77] Creating layer loss
I0428 19:41:29.873534 24838 net.cpp:124] Setting up loss
I0428 19:41:29.873545 24838 net.cpp:131] Top shape: (1)
I0428 19:41:29.873550 24838 net.cpp:134]     with loss weight 1
I0428 19:41:29.873580 24838 net.cpp:139] Memory required for data: 1254808
I0428 19:41:29.873597 24838 net.cpp:200] loss needs backward computation.
I0428 19:41:29.873603 24838 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:29.873620 24838 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:29.873625 24838 net.cpp:200] relu3 needs backward computation.
I0428 19:41:29.873631 24838 net.cpp:200] ip3 needs backward computation.
I0428 19:41:29.873636 24838 net.cpp:200] relu2 needs backward computation.
I0428 19:41:29.873641 24838 net.cpp:200] ip2 needs backward computation.
I0428 19:41:29.873646 24838 net.cpp:200] relu1 needs backward computation.
I0428 19:41:29.873651 24838 net.cpp:200] ip1 needs backward computation.
I0428 19:41:29.873656 24838 net.cpp:200] pool1 needs backward computation.
I0428 19:41:29.873662 24838 net.cpp:200] conv1 needs backward computation.
I0428 19:41:29.873667 24838 net.cpp:200] pool0 needs backward computation.
I0428 19:41:29.873672 24838 net.cpp:200] conv0 needs backward computation.
I0428 19:41:29.873683 24838 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:29.873689 24838 net.cpp:202] mnist does not need backward computation.
I0428 19:41:29.873693 24838 net.cpp:244] This network produces output accuracy
I0428 19:41:29.873700 24838 net.cpp:244] This network produces output loss
I0428 19:41:29.873718 24838 net.cpp:257] Network initialization done.
I0428 19:41:29.873766 24838 solver.cpp:56] Solver scaffolding done.
I0428 19:41:29.874160 24838 caffe.cpp:248] Starting Optimization
I0428 19:41:29.874166 24838 solver.cpp:273] Solving LeNet
I0428 19:41:29.874171 24838 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:29.875043 24838 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:29.877735 24838 blocking_queue.cpp:49] Waiting for data
I0428 19:41:29.940876 24845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:29.941284 24838 solver.cpp:398]     Test net output #0: accuracy = 0.0728
I0428 19:41:29.941304 24838 solver.cpp:398]     Test net output #1: loss = 2.30556 (* 1 = 2.30556 loss)
I0428 19:41:29.943071 24838 solver.cpp:219] Iteration 0 (0 iter/s, 0.068865s/100 iters), loss = 2.30516
I0428 19:41:29.943097 24838 solver.cpp:238]     Train net output #0: loss = 2.30516 (* 1 = 2.30516 loss)
I0428 19:41:29.943130 24838 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:30.014840 24838 solver.cpp:219] Iteration 100 (1394.05 iter/s, 0.0717332s/100 iters), loss = 1.93953
I0428 19:41:30.014869 24838 solver.cpp:238]     Train net output #0: loss = 1.93953 (* 1 = 1.93953 loss)
I0428 19:41:30.014894 24838 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:30.087220 24838 solver.cpp:219] Iteration 200 (1382.26 iter/s, 0.0723455s/100 iters), loss = 1.89286
I0428 19:41:30.087249 24838 solver.cpp:238]     Train net output #0: loss = 1.89286 (* 1 = 1.89286 loss)
I0428 19:41:30.087273 24838 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:30.159881 24838 solver.cpp:219] Iteration 300 (1376.89 iter/s, 0.0726272s/100 iters), loss = 1.31708
I0428 19:41:30.159909 24838 solver.cpp:238]     Train net output #0: loss = 1.31708 (* 1 = 1.31708 loss)
I0428 19:41:30.159934 24838 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:30.232085 24838 solver.cpp:219] Iteration 400 (1385.63 iter/s, 0.0721695s/100 iters), loss = 1.24382
I0428 19:41:30.232111 24838 solver.cpp:238]     Train net output #0: loss = 1.24382 (* 1 = 1.24382 loss)
I0428 19:41:30.232136 24838 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:30.304472 24838 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:30.356729 24845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:30.357174 24838 solver.cpp:398]     Test net output #0: accuracy = 0.6253
I0428 19:41:30.357205 24838 solver.cpp:398]     Test net output #1: loss = 1.1553 (* 1 = 1.1553 loss)
I0428 19:41:30.357981 24838 solver.cpp:219] Iteration 500 (794.541 iter/s, 0.125859s/100 iters), loss = 1.22367
I0428 19:41:30.358013 24838 solver.cpp:238]     Train net output #0: loss = 1.22367 (* 1 = 1.22367 loss)
I0428 19:41:30.358043 24838 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:30.438984 24838 solver.cpp:219] Iteration 600 (1235.12 iter/s, 0.0809637s/100 iters), loss = 1.25573
I0428 19:41:30.439013 24838 solver.cpp:238]     Train net output #0: loss = 1.25573 (* 1 = 1.25573 loss)
I0428 19:41:30.439039 24838 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:30.513546 24838 solver.cpp:219] Iteration 700 (1341.84 iter/s, 0.0745247s/100 iters), loss = 0.841315
I0428 19:41:30.513574 24838 solver.cpp:238]     Train net output #0: loss = 0.841315 (* 1 = 0.841315 loss)
I0428 19:41:30.513600 24838 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:30.587312 24838 solver.cpp:219] Iteration 800 (1356.39 iter/s, 0.0737249s/100 iters), loss = 1.09872
I0428 19:41:30.587339 24838 solver.cpp:238]     Train net output #0: loss = 1.09872 (* 1 = 1.09872 loss)
I0428 19:41:30.587364 24838 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:30.659597 24838 solver.cpp:219] Iteration 900 (1384.12 iter/s, 0.0722483s/100 iters), loss = 0.970165
I0428 19:41:30.659624 24838 solver.cpp:238]     Train net output #0: loss = 0.970165 (* 1 = 0.970165 loss)
I0428 19:41:30.659649 24838 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:30.684093 24844 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:30.731693 24838 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:30.732429 24838 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:30.732899 24838 solver.cpp:311] Iteration 1000, loss = 0.951468
I0428 19:41:30.732918 24838 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:30.785902 24845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:30.786331 24838 solver.cpp:398]     Test net output #0: accuracy = 0.7558
I0428 19:41:30.786351 24838 solver.cpp:398]     Test net output #1: loss = 0.820988 (* 1 = 0.820988 loss)
I0428 19:41:30.786363 24838 solver.cpp:316] Optimization Done.
I0428 19:41:30.786368 24838 caffe.cpp:259] Optimization Done.
