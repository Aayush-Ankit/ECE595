I0428 19:28:31.414290 21650 caffe.cpp:218] Using GPUs 0
I0428 19:28:31.455463 21650 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:31.974884 21650 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test28.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:31.975055 21650 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test28.prototxt
I0428 19:28:31.975374 21650 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:31.975395 21650 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:31.975476 21650 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:31.975570 21650 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:31.975703 21650 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:31.975735 21650 net.cpp:86] Creating Layer mnist
I0428 19:28:31.975747 21650 net.cpp:382] mnist -> data
I0428 19:28:31.975785 21650 net.cpp:382] mnist -> label
I0428 19:28:31.976996 21650 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:31.979486 21650 net.cpp:124] Setting up mnist
I0428 19:28:31.979506 21650 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:31.979517 21650 net.cpp:131] Top shape: 64 (64)
I0428 19:28:31.979522 21650 net.cpp:139] Memory required for data: 200960
I0428 19:28:31.979533 21650 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:31.979554 21650 net.cpp:86] Creating Layer ip1
I0428 19:28:31.979564 21650 net.cpp:408] ip1 <- data
I0428 19:28:31.979583 21650 net.cpp:382] ip1 -> ip1
I0428 19:28:31.979882 21650 net.cpp:124] Setting up ip1
I0428 19:28:31.979893 21650 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:31.979900 21650 net.cpp:139] Memory required for data: 207360
I0428 19:28:31.979920 21650 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:31.979938 21650 net.cpp:86] Creating Layer relu1
I0428 19:28:31.979948 21650 net.cpp:408] relu1 <- ip1
I0428 19:28:31.979957 21650 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:32.264586 21650 net.cpp:124] Setting up relu1
I0428 19:28:32.264618 21650 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:32.264624 21650 net.cpp:139] Memory required for data: 213760
I0428 19:28:32.264631 21650 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:32.264649 21650 net.cpp:86] Creating Layer ip2
I0428 19:28:32.264677 21650 net.cpp:408] ip2 <- ip1
I0428 19:28:32.264690 21650 net.cpp:382] ip2 -> ip2
I0428 19:28:32.265751 21650 net.cpp:124] Setting up ip2
I0428 19:28:32.265766 21650 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:32.265774 21650 net.cpp:139] Memory required for data: 226560
I0428 19:28:32.265790 21650 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:32.265807 21650 net.cpp:86] Creating Layer relu2
I0428 19:28:32.265815 21650 net.cpp:408] relu2 <- ip2
I0428 19:28:32.265822 21650 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:32.266634 21650 net.cpp:124] Setting up relu2
I0428 19:28:32.266649 21650 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:32.266655 21650 net.cpp:139] Memory required for data: 239360
I0428 19:28:32.266661 21650 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:32.266674 21650 net.cpp:86] Creating Layer ip3
I0428 19:28:32.266680 21650 net.cpp:408] ip3 <- ip2
I0428 19:28:32.266703 21650 net.cpp:382] ip3 -> ip3
I0428 19:28:32.267664 21650 net.cpp:124] Setting up ip3
I0428 19:28:32.267679 21650 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:32.267684 21650 net.cpp:139] Memory required for data: 241920
I0428 19:28:32.267699 21650 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:32.267709 21650 net.cpp:86] Creating Layer relu3
I0428 19:28:32.267720 21650 net.cpp:408] relu3 <- ip3
I0428 19:28:32.267729 21650 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:32.267899 21650 net.cpp:124] Setting up relu3
I0428 19:28:32.267910 21650 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:32.267915 21650 net.cpp:139] Memory required for data: 244480
I0428 19:28:32.267920 21650 layer_factory.hpp:77] Creating layer loss
I0428 19:28:32.267930 21650 net.cpp:86] Creating Layer loss
I0428 19:28:32.267935 21650 net.cpp:408] loss <- ip3
I0428 19:28:32.267942 21650 net.cpp:408] loss <- label
I0428 19:28:32.267951 21650 net.cpp:382] loss -> loss
I0428 19:28:32.267972 21650 layer_factory.hpp:77] Creating layer loss
I0428 19:28:32.268208 21650 net.cpp:124] Setting up loss
I0428 19:28:32.268219 21650 net.cpp:131] Top shape: (1)
I0428 19:28:32.268225 21650 net.cpp:134]     with loss weight 1
I0428 19:28:32.268245 21650 net.cpp:139] Memory required for data: 244484
I0428 19:28:32.268251 21650 net.cpp:200] loss needs backward computation.
I0428 19:28:32.268259 21650 net.cpp:200] relu3 needs backward computation.
I0428 19:28:32.268263 21650 net.cpp:200] ip3 needs backward computation.
I0428 19:28:32.268270 21650 net.cpp:200] relu2 needs backward computation.
I0428 19:28:32.268275 21650 net.cpp:200] ip2 needs backward computation.
I0428 19:28:32.268280 21650 net.cpp:200] relu1 needs backward computation.
I0428 19:28:32.268285 21650 net.cpp:200] ip1 needs backward computation.
I0428 19:28:32.268295 21650 net.cpp:202] mnist does not need backward computation.
I0428 19:28:32.268299 21650 net.cpp:244] This network produces output loss
I0428 19:28:32.268312 21650 net.cpp:257] Network initialization done.
I0428 19:28:32.268556 21650 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test28.prototxt
I0428 19:28:32.268587 21650 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:32.268662 21650 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:32.268761 21650 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:32.268831 21650 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:32.268849 21650 net.cpp:86] Creating Layer mnist
I0428 19:28:32.268857 21650 net.cpp:382] mnist -> data
I0428 19:28:32.268868 21650 net.cpp:382] mnist -> label
I0428 19:28:32.269006 21650 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:32.271152 21650 net.cpp:124] Setting up mnist
I0428 19:28:32.271167 21650 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:32.271176 21650 net.cpp:131] Top shape: 100 (100)
I0428 19:28:32.271181 21650 net.cpp:139] Memory required for data: 314000
I0428 19:28:32.271188 21650 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:32.271203 21650 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:32.271209 21650 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:32.271217 21650 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:32.271229 21650 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:32.271302 21650 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:32.271311 21650 net.cpp:131] Top shape: 100 (100)
I0428 19:28:32.271318 21650 net.cpp:131] Top shape: 100 (100)
I0428 19:28:32.271323 21650 net.cpp:139] Memory required for data: 314800
I0428 19:28:32.271328 21650 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:32.271339 21650 net.cpp:86] Creating Layer ip1
I0428 19:28:32.271345 21650 net.cpp:408] ip1 <- data
I0428 19:28:32.271354 21650 net.cpp:382] ip1 -> ip1
I0428 19:28:32.271577 21650 net.cpp:124] Setting up ip1
I0428 19:28:32.271587 21650 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:32.271594 21650 net.cpp:139] Memory required for data: 324800
I0428 19:28:32.271607 21650 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:32.271616 21650 net.cpp:86] Creating Layer relu1
I0428 19:28:32.271622 21650 net.cpp:408] relu1 <- ip1
I0428 19:28:32.271631 21650 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:32.272547 21650 net.cpp:124] Setting up relu1
I0428 19:28:32.272562 21650 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:32.272567 21650 net.cpp:139] Memory required for data: 334800
I0428 19:28:32.272573 21650 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:32.272585 21650 net.cpp:86] Creating Layer ip2
I0428 19:28:32.272591 21650 net.cpp:408] ip2 <- ip1
I0428 19:28:32.272603 21650 net.cpp:382] ip2 -> ip2
I0428 19:28:32.272720 21650 net.cpp:124] Setting up ip2
I0428 19:28:32.272730 21650 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:32.272735 21650 net.cpp:139] Memory required for data: 354800
I0428 19:28:32.272748 21650 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:32.272758 21650 net.cpp:86] Creating Layer relu2
I0428 19:28:32.272764 21650 net.cpp:408] relu2 <- ip2
I0428 19:28:32.272773 21650 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:32.272944 21650 net.cpp:124] Setting up relu2
I0428 19:28:32.272963 21650 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:32.272967 21650 net.cpp:139] Memory required for data: 374800
I0428 19:28:32.272972 21650 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:32.272982 21650 net.cpp:86] Creating Layer ip3
I0428 19:28:32.272987 21650 net.cpp:408] ip3 <- ip2
I0428 19:28:32.272999 21650 net.cpp:382] ip3 -> ip3
I0428 19:28:32.273114 21650 net.cpp:124] Setting up ip3
I0428 19:28:32.273123 21650 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:32.273129 21650 net.cpp:139] Memory required for data: 378800
I0428 19:28:32.273141 21650 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:32.273150 21650 net.cpp:86] Creating Layer relu3
I0428 19:28:32.273156 21650 net.cpp:408] relu3 <- ip3
I0428 19:28:32.273164 21650 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:32.273329 21650 net.cpp:124] Setting up relu3
I0428 19:28:32.273337 21650 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:32.273344 21650 net.cpp:139] Memory required for data: 382800
I0428 19:28:32.273349 21650 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:32.273358 21650 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:32.273365 21650 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:32.273373 21650 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:32.273383 21650 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:32.273427 21650 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:32.273435 21650 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:32.273442 21650 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:32.273447 21650 net.cpp:139] Memory required for data: 390800
I0428 19:28:32.273453 21650 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:32.273463 21650 net.cpp:86] Creating Layer accuracy
I0428 19:28:32.273469 21650 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:32.273476 21650 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:32.273486 21650 net.cpp:382] accuracy -> accuracy
I0428 19:28:32.273502 21650 net.cpp:124] Setting up accuracy
I0428 19:28:32.273509 21650 net.cpp:131] Top shape: (1)
I0428 19:28:32.273514 21650 net.cpp:139] Memory required for data: 390804
I0428 19:28:32.273520 21650 layer_factory.hpp:77] Creating layer loss
I0428 19:28:32.273527 21650 net.cpp:86] Creating Layer loss
I0428 19:28:32.273533 21650 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:32.273540 21650 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:32.273547 21650 net.cpp:382] loss -> loss
I0428 19:28:32.273557 21650 layer_factory.hpp:77] Creating layer loss
I0428 19:28:32.273828 21650 net.cpp:124] Setting up loss
I0428 19:28:32.273839 21650 net.cpp:131] Top shape: (1)
I0428 19:28:32.273844 21650 net.cpp:134]     with loss weight 1
I0428 19:28:32.273855 21650 net.cpp:139] Memory required for data: 390808
I0428 19:28:32.273861 21650 net.cpp:200] loss needs backward computation.
I0428 19:28:32.273869 21650 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:32.273874 21650 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:32.273880 21650 net.cpp:200] relu3 needs backward computation.
I0428 19:28:32.273885 21650 net.cpp:200] ip3 needs backward computation.
I0428 19:28:32.273891 21650 net.cpp:200] relu2 needs backward computation.
I0428 19:28:32.273896 21650 net.cpp:200] ip2 needs backward computation.
I0428 19:28:32.273902 21650 net.cpp:200] relu1 needs backward computation.
I0428 19:28:32.273907 21650 net.cpp:200] ip1 needs backward computation.
I0428 19:28:32.273913 21650 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:32.273921 21650 net.cpp:202] mnist does not need backward computation.
I0428 19:28:32.273926 21650 net.cpp:244] This network produces output accuracy
I0428 19:28:32.273931 21650 net.cpp:244] This network produces output loss
I0428 19:28:32.273947 21650 net.cpp:257] Network initialization done.
I0428 19:28:32.273985 21650 solver.cpp:56] Solver scaffolding done.
I0428 19:28:32.274209 21650 caffe.cpp:248] Starting Optimization
I0428 19:28:32.274216 21650 solver.cpp:273] Solving LeNet
I0428 19:28:32.274221 21650 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:32.275518 21650 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:32.275660 21650 blocking_queue.cpp:49] Waiting for data
I0428 19:28:32.348677 21657 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:32.349213 21650 solver.cpp:398]     Test net output #0: accuracy = 0.0948
I0428 19:28:32.349252 21650 solver.cpp:398]     Test net output #1: loss = 2.30018 (* 1 = 2.30018 loss)
I0428 19:28:32.350116 21650 solver.cpp:219] Iteration 0 (-1.60615e-30 iter/s, 0.0758643s/100 iters), loss = 2.30276
I0428 19:28:32.350165 21650 solver.cpp:238]     Train net output #0: loss = 2.30276 (* 1 = 2.30276 loss)
I0428 19:28:32.350201 21650 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:32.410140 21650 solver.cpp:219] Iteration 100 (1667.34 iter/s, 0.0599757s/100 iters), loss = 0.890975
I0428 19:28:32.410181 21650 solver.cpp:238]     Train net output #0: loss = 0.890975 (* 1 = 0.890975 loss)
I0428 19:28:32.410197 21650 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:32.462343 21650 solver.cpp:219] Iteration 200 (1917.16 iter/s, 0.0521605s/100 iters), loss = 0.531566
I0428 19:28:32.462375 21650 solver.cpp:238]     Train net output #0: loss = 0.531566 (* 1 = 0.531566 loss)
I0428 19:28:32.462389 21650 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:32.509135 21650 solver.cpp:219] Iteration 300 (2138.77 iter/s, 0.0467558s/100 iters), loss = 0.715836
I0428 19:28:32.509161 21650 solver.cpp:238]     Train net output #0: loss = 0.715836 (* 1 = 0.715836 loss)
I0428 19:28:32.509172 21650 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:32.552172 21650 solver.cpp:219] Iteration 400 (2325.26 iter/s, 0.043006s/100 iters), loss = 0.46685
I0428 19:28:32.552202 21650 solver.cpp:238]     Train net output #0: loss = 0.46685 (* 1 = 0.46685 loss)
I0428 19:28:32.552212 21650 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:32.596725 21650 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:32.675493 21657 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:32.676005 21650 solver.cpp:398]     Test net output #0: accuracy = 0.8309
I0428 19:28:32.676039 21650 solver.cpp:398]     Test net output #1: loss = 0.518066 (* 1 = 0.518066 loss)
I0428 19:28:32.676542 21650 solver.cpp:219] Iteration 500 (804.324 iter/s, 0.124328s/100 iters), loss = 0.547055
I0428 19:28:32.676584 21650 solver.cpp:238]     Train net output #0: loss = 0.547055 (* 1 = 0.547055 loss)
I0428 19:28:32.676609 21650 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:32.736021 21650 solver.cpp:219] Iteration 600 (1682.54 iter/s, 0.0594339s/100 iters), loss = 0.429221
I0428 19:28:32.736057 21650 solver.cpp:238]     Train net output #0: loss = 0.429221 (* 1 = 0.429221 loss)
I0428 19:28:32.736075 21650 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:32.786836 21650 solver.cpp:219] Iteration 700 (1969.47 iter/s, 0.050775s/100 iters), loss = 0.476568
I0428 19:28:32.786869 21650 solver.cpp:238]     Train net output #0: loss = 0.476568 (* 1 = 0.476568 loss)
I0428 19:28:32.786880 21650 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:32.832319 21650 solver.cpp:219] Iteration 800 (2200.46 iter/s, 0.0454451s/100 iters), loss = 0.628964
I0428 19:28:32.832345 21650 solver.cpp:238]     Train net output #0: loss = 0.628964 (* 1 = 0.628964 loss)
I0428 19:28:32.832355 21650 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:32.877251 21650 solver.cpp:219] Iteration 900 (2227.26 iter/s, 0.0448983s/100 iters), loss = 0.552768
I0428 19:28:32.877288 21650 solver.cpp:238]     Train net output #0: loss = 0.552768 (* 1 = 0.552768 loss)
I0428 19:28:32.877301 21650 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:32.894186 21656 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:32.925144 21650 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:32.925896 21650 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:32.926417 21650 solver.cpp:311] Iteration 1000, loss = 0.32453
I0428 19:28:32.926436 21650 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:32.928791 21650 blocking_queue.cpp:49] Waiting for data
I0428 19:28:32.999158 21657 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:32.999676 21650 solver.cpp:398]     Test net output #0: accuracy = 0.9217
I0428 19:28:32.999707 21650 solver.cpp:398]     Test net output #1: loss = 0.269867 (* 1 = 0.269867 loss)
I0428 19:28:32.999721 21650 solver.cpp:316] Optimization Done.
I0428 19:28:32.999729 21650 caffe.cpp:259] Optimization Done.
