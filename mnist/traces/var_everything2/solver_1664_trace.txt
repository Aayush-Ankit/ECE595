I0428 20:38:22.014344  5113 caffe.cpp:218] Using GPUs 0
I0428 20:38:22.052424  5113 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:22.564288  5113 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1664.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:22.564443  5113 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1664.prototxt
I0428 20:38:22.565114  5113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:22.565143  5113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:22.565304  5113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:22.565421  5113 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:22.565562  5113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:22.565604  5113 net.cpp:86] Creating Layer mnist
I0428 20:38:22.565618  5113 net.cpp:382] mnist -> data
I0428 20:38:22.565649  5113 net.cpp:382] mnist -> label
I0428 20:38:22.567175  5113 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:22.569895  5113 net.cpp:124] Setting up mnist
I0428 20:38:22.569913  5113 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:22.569921  5113 net.cpp:131] Top shape: 64 (64)
I0428 20:38:22.569923  5113 net.cpp:139] Memory required for data: 200960
I0428 20:38:22.569931  5113 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:22.569947  5113 net.cpp:86] Creating Layer conv0
I0428 20:38:22.569969  5113 net.cpp:408] conv0 <- data
I0428 20:38:22.569991  5113 net.cpp:382] conv0 -> conv0
I0428 20:38:22.848464  5113 net.cpp:124] Setting up conv0
I0428 20:38:22.848490  5113 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:22.848495  5113 net.cpp:139] Memory required for data: 14946560
I0428 20:38:22.848508  5113 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:22.848520  5113 net.cpp:86] Creating Layer pool0
I0428 20:38:22.848525  5113 net.cpp:408] pool0 <- conv0
I0428 20:38:22.848529  5113 net.cpp:382] pool0 -> pool0
I0428 20:38:22.848583  5113 net.cpp:124] Setting up pool0
I0428 20:38:22.848593  5113 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:22.848598  5113 net.cpp:139] Memory required for data: 18632960
I0428 20:38:22.848603  5113 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:22.848618  5113 net.cpp:86] Creating Layer conv1
I0428 20:38:22.848628  5113 net.cpp:408] conv1 <- pool0
I0428 20:38:22.848636  5113 net.cpp:382] conv1 -> conv1
I0428 20:38:22.853159  5113 net.cpp:124] Setting up conv1
I0428 20:38:22.853174  5113 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:22.853178  5113 net.cpp:139] Memory required for data: 20271360
I0428 20:38:22.853185  5113 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:22.853193  5113 net.cpp:86] Creating Layer pool1
I0428 20:38:22.853196  5113 net.cpp:408] pool1 <- conv1
I0428 20:38:22.853200  5113 net.cpp:382] pool1 -> pool1
I0428 20:38:22.853281  5113 net.cpp:124] Setting up pool1
I0428 20:38:22.853287  5113 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:22.853289  5113 net.cpp:139] Memory required for data: 20680960
I0428 20:38:22.853292  5113 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:22.853305  5113 net.cpp:86] Creating Layer ip1
I0428 20:38:22.853308  5113 net.cpp:408] ip1 <- pool1
I0428 20:38:22.853312  5113 net.cpp:382] ip1 -> ip1
I0428 20:38:22.853632  5113 net.cpp:124] Setting up ip1
I0428 20:38:22.853639  5113 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:22.853642  5113 net.cpp:139] Memory required for data: 20687360
I0428 20:38:22.853649  5113 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:22.853654  5113 net.cpp:86] Creating Layer relu1
I0428 20:38:22.853657  5113 net.cpp:408] relu1 <- ip1
I0428 20:38:22.853662  5113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:22.853811  5113 net.cpp:124] Setting up relu1
I0428 20:38:22.853818  5113 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:22.853821  5113 net.cpp:139] Memory required for data: 20693760
I0428 20:38:22.853824  5113 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:22.853830  5113 net.cpp:86] Creating Layer ip2
I0428 20:38:22.853833  5113 net.cpp:408] ip2 <- ip1
I0428 20:38:22.853837  5113 net.cpp:382] ip2 -> ip2
I0428 20:38:22.853925  5113 net.cpp:124] Setting up ip2
I0428 20:38:22.853931  5113 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:22.853935  5113 net.cpp:139] Memory required for data: 20700160
I0428 20:38:22.853940  5113 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:22.853945  5113 net.cpp:86] Creating Layer relu2
I0428 20:38:22.853948  5113 net.cpp:408] relu2 <- ip2
I0428 20:38:22.853951  5113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:22.854655  5113 net.cpp:124] Setting up relu2
I0428 20:38:22.854667  5113 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:22.854671  5113 net.cpp:139] Memory required for data: 20706560
I0428 20:38:22.854673  5113 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:22.854681  5113 net.cpp:86] Creating Layer ip3
I0428 20:38:22.854683  5113 net.cpp:408] ip3 <- ip2
I0428 20:38:22.854688  5113 net.cpp:382] ip3 -> ip3
I0428 20:38:22.854779  5113 net.cpp:124] Setting up ip3
I0428 20:38:22.854787  5113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:22.854790  5113 net.cpp:139] Memory required for data: 20709120
I0428 20:38:22.854797  5113 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:22.854802  5113 net.cpp:86] Creating Layer relu3
I0428 20:38:22.854805  5113 net.cpp:408] relu3 <- ip3
I0428 20:38:22.854825  5113 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:22.854965  5113 net.cpp:124] Setting up relu3
I0428 20:38:22.854974  5113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:22.854976  5113 net.cpp:139] Memory required for data: 20711680
I0428 20:38:22.854979  5113 layer_factory.hpp:77] Creating layer loss
I0428 20:38:22.854985  5113 net.cpp:86] Creating Layer loss
I0428 20:38:22.854988  5113 net.cpp:408] loss <- ip3
I0428 20:38:22.854991  5113 net.cpp:408] loss <- label
I0428 20:38:22.854996  5113 net.cpp:382] loss -> loss
I0428 20:38:22.855013  5113 layer_factory.hpp:77] Creating layer loss
I0428 20:38:22.855221  5113 net.cpp:124] Setting up loss
I0428 20:38:22.855229  5113 net.cpp:131] Top shape: (1)
I0428 20:38:22.855233  5113 net.cpp:134]     with loss weight 1
I0428 20:38:22.855247  5113 net.cpp:139] Memory required for data: 20711684
I0428 20:38:22.855250  5113 net.cpp:200] loss needs backward computation.
I0428 20:38:22.855253  5113 net.cpp:200] relu3 needs backward computation.
I0428 20:38:22.855257  5113 net.cpp:200] ip3 needs backward computation.
I0428 20:38:22.855259  5113 net.cpp:200] relu2 needs backward computation.
I0428 20:38:22.855262  5113 net.cpp:200] ip2 needs backward computation.
I0428 20:38:22.855264  5113 net.cpp:200] relu1 needs backward computation.
I0428 20:38:22.855267  5113 net.cpp:200] ip1 needs backward computation.
I0428 20:38:22.855269  5113 net.cpp:200] pool1 needs backward computation.
I0428 20:38:22.855273  5113 net.cpp:200] conv1 needs backward computation.
I0428 20:38:22.855275  5113 net.cpp:200] pool0 needs backward computation.
I0428 20:38:22.855278  5113 net.cpp:200] conv0 needs backward computation.
I0428 20:38:22.855281  5113 net.cpp:202] mnist does not need backward computation.
I0428 20:38:22.855283  5113 net.cpp:244] This network produces output loss
I0428 20:38:22.855293  5113 net.cpp:257] Network initialization done.
I0428 20:38:22.855644  5113 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1664.prototxt
I0428 20:38:22.855680  5113 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:22.855798  5113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:22.855871  5113 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:22.855914  5113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:22.855926  5113 net.cpp:86] Creating Layer mnist
I0428 20:38:22.855931  5113 net.cpp:382] mnist -> data
I0428 20:38:22.855937  5113 net.cpp:382] mnist -> label
I0428 20:38:22.856016  5113 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:22.858029  5113 net.cpp:124] Setting up mnist
I0428 20:38:22.858042  5113 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:22.858047  5113 net.cpp:131] Top shape: 100 (100)
I0428 20:38:22.858049  5113 net.cpp:139] Memory required for data: 314000
I0428 20:38:22.858053  5113 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:22.858059  5113 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:22.858062  5113 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:22.858067  5113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:22.858073  5113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:22.858108  5113 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:22.858114  5113 net.cpp:131] Top shape: 100 (100)
I0428 20:38:22.858116  5113 net.cpp:131] Top shape: 100 (100)
I0428 20:38:22.858119  5113 net.cpp:139] Memory required for data: 314800
I0428 20:38:22.858122  5113 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:22.858129  5113 net.cpp:86] Creating Layer conv0
I0428 20:38:22.858132  5113 net.cpp:408] conv0 <- data
I0428 20:38:22.858136  5113 net.cpp:382] conv0 -> conv0
I0428 20:38:22.859944  5113 net.cpp:124] Setting up conv0
I0428 20:38:22.859958  5113 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:22.859961  5113 net.cpp:139] Memory required for data: 23354800
I0428 20:38:22.859971  5113 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:22.859988  5113 net.cpp:86] Creating Layer pool0
I0428 20:38:22.859992  5113 net.cpp:408] pool0 <- conv0
I0428 20:38:22.859998  5113 net.cpp:382] pool0 -> pool0
I0428 20:38:22.860034  5113 net.cpp:124] Setting up pool0
I0428 20:38:22.860040  5113 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:22.860044  5113 net.cpp:139] Memory required for data: 29114800
I0428 20:38:22.860045  5113 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:22.860054  5113 net.cpp:86] Creating Layer conv1
I0428 20:38:22.860057  5113 net.cpp:408] conv1 <- pool0
I0428 20:38:22.860064  5113 net.cpp:382] conv1 -> conv1
I0428 20:38:22.863194  5113 net.cpp:124] Setting up conv1
I0428 20:38:22.863207  5113 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:22.863217  5113 net.cpp:139] Memory required for data: 31674800
I0428 20:38:22.863225  5113 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:22.863231  5113 net.cpp:86] Creating Layer pool1
I0428 20:38:22.863234  5113 net.cpp:408] pool1 <- conv1
I0428 20:38:22.863240  5113 net.cpp:382] pool1 -> pool1
I0428 20:38:22.863276  5113 net.cpp:124] Setting up pool1
I0428 20:38:22.863281  5113 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:22.863284  5113 net.cpp:139] Memory required for data: 32314800
I0428 20:38:22.863286  5113 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:22.863293  5113 net.cpp:86] Creating Layer ip1
I0428 20:38:22.863301  5113 net.cpp:408] ip1 <- pool1
I0428 20:38:22.863306  5113 net.cpp:382] ip1 -> ip1
I0428 20:38:22.863682  5113 net.cpp:124] Setting up ip1
I0428 20:38:22.863726  5113 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:22.863729  5113 net.cpp:139] Memory required for data: 32324800
I0428 20:38:22.863736  5113 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:22.863741  5113 net.cpp:86] Creating Layer relu1
I0428 20:38:22.863744  5113 net.cpp:408] relu1 <- ip1
I0428 20:38:22.863750  5113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:22.863903  5113 net.cpp:124] Setting up relu1
I0428 20:38:22.863911  5113 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:22.863914  5113 net.cpp:139] Memory required for data: 32334800
I0428 20:38:22.863917  5113 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:22.863925  5113 net.cpp:86] Creating Layer ip2
I0428 20:38:22.863929  5113 net.cpp:408] ip2 <- ip1
I0428 20:38:22.863932  5113 net.cpp:382] ip2 -> ip2
I0428 20:38:22.864029  5113 net.cpp:124] Setting up ip2
I0428 20:38:22.864037  5113 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:22.864039  5113 net.cpp:139] Memory required for data: 32344800
I0428 20:38:22.864044  5113 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:22.864049  5113 net.cpp:86] Creating Layer relu2
I0428 20:38:22.864051  5113 net.cpp:408] relu2 <- ip2
I0428 20:38:22.864056  5113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:22.864377  5113 net.cpp:124] Setting up relu2
I0428 20:38:22.864385  5113 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:22.864389  5113 net.cpp:139] Memory required for data: 32354800
I0428 20:38:22.864392  5113 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:22.864399  5113 net.cpp:86] Creating Layer ip3
I0428 20:38:22.864403  5113 net.cpp:408] ip3 <- ip2
I0428 20:38:22.864408  5113 net.cpp:382] ip3 -> ip3
I0428 20:38:22.864572  5113 net.cpp:124] Setting up ip3
I0428 20:38:22.864578  5113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:22.864586  5113 net.cpp:139] Memory required for data: 32358800
I0428 20:38:22.864593  5113 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:22.864599  5113 net.cpp:86] Creating Layer relu3
I0428 20:38:22.864603  5113 net.cpp:408] relu3 <- ip3
I0428 20:38:22.864605  5113 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:22.865413  5113 net.cpp:124] Setting up relu3
I0428 20:38:22.865427  5113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:22.865430  5113 net.cpp:139] Memory required for data: 32362800
I0428 20:38:22.865433  5113 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:22.865438  5113 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:22.865442  5113 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:22.865447  5113 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:22.865453  5113 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:22.865491  5113 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:22.865496  5113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:22.865499  5113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:22.865502  5113 net.cpp:139] Memory required for data: 32370800
I0428 20:38:22.865504  5113 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:22.865509  5113 net.cpp:86] Creating Layer accuracy
I0428 20:38:22.865512  5113 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:22.865517  5113 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:22.865521  5113 net.cpp:382] accuracy -> accuracy
I0428 20:38:22.865527  5113 net.cpp:124] Setting up accuracy
I0428 20:38:22.865531  5113 net.cpp:131] Top shape: (1)
I0428 20:38:22.865533  5113 net.cpp:139] Memory required for data: 32370804
I0428 20:38:22.865536  5113 layer_factory.hpp:77] Creating layer loss
I0428 20:38:22.865543  5113 net.cpp:86] Creating Layer loss
I0428 20:38:22.865546  5113 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:22.865550  5113 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:22.865555  5113 net.cpp:382] loss -> loss
I0428 20:38:22.865559  5113 layer_factory.hpp:77] Creating layer loss
I0428 20:38:22.865869  5113 net.cpp:124] Setting up loss
I0428 20:38:22.865877  5113 net.cpp:131] Top shape: (1)
I0428 20:38:22.865880  5113 net.cpp:134]     with loss weight 1
I0428 20:38:22.865897  5113 net.cpp:139] Memory required for data: 32370808
I0428 20:38:22.865901  5113 net.cpp:200] loss needs backward computation.
I0428 20:38:22.865906  5113 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:22.865908  5113 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:22.865911  5113 net.cpp:200] relu3 needs backward computation.
I0428 20:38:22.865914  5113 net.cpp:200] ip3 needs backward computation.
I0428 20:38:22.865917  5113 net.cpp:200] relu2 needs backward computation.
I0428 20:38:22.865921  5113 net.cpp:200] ip2 needs backward computation.
I0428 20:38:22.865923  5113 net.cpp:200] relu1 needs backward computation.
I0428 20:38:22.865926  5113 net.cpp:200] ip1 needs backward computation.
I0428 20:38:22.865928  5113 net.cpp:200] pool1 needs backward computation.
I0428 20:38:22.865931  5113 net.cpp:200] conv1 needs backward computation.
I0428 20:38:22.865934  5113 net.cpp:200] pool0 needs backward computation.
I0428 20:38:22.865937  5113 net.cpp:200] conv0 needs backward computation.
I0428 20:38:22.865942  5113 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:22.865945  5113 net.cpp:202] mnist does not need backward computation.
I0428 20:38:22.865947  5113 net.cpp:244] This network produces output accuracy
I0428 20:38:22.865950  5113 net.cpp:244] This network produces output loss
I0428 20:38:22.865962  5113 net.cpp:257] Network initialization done.
I0428 20:38:22.866019  5113 solver.cpp:56] Solver scaffolding done.
I0428 20:38:22.866348  5113 caffe.cpp:248] Starting Optimization
I0428 20:38:22.866355  5113 solver.cpp:273] Solving LeNet
I0428 20:38:22.866358  5113 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:22.867784  5113 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:22.990506  5120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:22.993929  5113 solver.cpp:398]     Test net output #0: accuracy = 0.0753
I0428 20:38:22.993949  5113 solver.cpp:398]     Test net output #1: loss = 2.32313 (* 1 = 2.32313 loss)
I0428 20:38:22.999233  5113 solver.cpp:219] Iteration 0 (-1.79558e-31 iter/s, 0.132829s/100 iters), loss = 2.32041
I0428 20:38:22.999258  5113 solver.cpp:238]     Train net output #0: loss = 2.32041 (* 1 = 2.32041 loss)
I0428 20:38:22.999269  5113 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:23.270076  5113 solver.cpp:219] Iteration 100 (369.282 iter/s, 0.270796s/100 iters), loss = 0.217613
I0428 20:38:23.270117  5113 solver.cpp:238]     Train net output #0: loss = 0.217613 (* 1 = 0.217613 loss)
I0428 20:38:23.270124  5113 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:23.536695  5113 solver.cpp:219] Iteration 200 (375.129 iter/s, 0.266575s/100 iters), loss = 0.182074
I0428 20:38:23.536718  5113 solver.cpp:238]     Train net output #0: loss = 0.182074 (* 1 = 0.182074 loss)
I0428 20:38:23.536725  5113 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:23.805718  5113 solver.cpp:219] Iteration 300 (371.773 iter/s, 0.268981s/100 iters), loss = 0.230526
I0428 20:38:23.805742  5113 solver.cpp:238]     Train net output #0: loss = 0.230526 (* 1 = 0.230526 loss)
I0428 20:38:23.805747  5113 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:24.077391  5113 solver.cpp:219] Iteration 400 (368.146 iter/s, 0.271631s/100 iters), loss = 0.0957728
I0428 20:38:24.077430  5113 solver.cpp:238]     Train net output #0: loss = 0.0957727 (* 1 = 0.0957727 loss)
I0428 20:38:24.077436  5113 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:24.347281  5113 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:24.474128  5120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:24.477608  5113 solver.cpp:398]     Test net output #0: accuracy = 0.968
I0428 20:38:24.477629  5113 solver.cpp:398]     Test net output #1: loss = 0.102181 (* 1 = 0.102181 loss)
I0428 20:38:24.480345  5113 solver.cpp:219] Iteration 500 (248.197 iter/s, 0.402906s/100 iters), loss = 0.107783
I0428 20:38:24.480378  5113 solver.cpp:238]     Train net output #0: loss = 0.107783 (* 1 = 0.107783 loss)
I0428 20:38:24.480414  5113 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:24.767866  5113 solver.cpp:219] Iteration 600 (347.867 iter/s, 0.287467s/100 iters), loss = 0.113882
I0428 20:38:24.767894  5113 solver.cpp:238]     Train net output #0: loss = 0.113882 (* 1 = 0.113882 loss)
I0428 20:38:24.767900  5113 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:25.054028  5113 solver.cpp:219] Iteration 700 (349.512 iter/s, 0.286113s/100 iters), loss = 0.174785
I0428 20:38:25.054069  5113 solver.cpp:238]     Train net output #0: loss = 0.174785 (* 1 = 0.174785 loss)
I0428 20:38:25.054075  5113 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:25.364614  5113 solver.cpp:219] Iteration 800 (322.034 iter/s, 0.310526s/100 iters), loss = 0.238706
I0428 20:38:25.364668  5113 solver.cpp:238]     Train net output #0: loss = 0.238706 (* 1 = 0.238706 loss)
I0428 20:38:25.364679  5113 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:25.673388  5113 solver.cpp:219] Iteration 900 (323.928 iter/s, 0.30871s/100 iters), loss = 0.0960927
I0428 20:38:25.673425  5113 solver.cpp:238]     Train net output #0: loss = 0.0960928 (* 1 = 0.0960928 loss)
I0428 20:38:25.673435  5113 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:25.777845  5119 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:25.983786  5113 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:25.991247  5113 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:25.995585  5113 solver.cpp:311] Iteration 1000, loss = 0.0891995
I0428 20:38:25.995609  5113 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:26.131781  5120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:26.135419  5113 solver.cpp:398]     Test net output #0: accuracy = 0.9801
I0428 20:38:26.135443  5113 solver.cpp:398]     Test net output #1: loss = 0.0628965 (* 1 = 0.0628965 loss)
I0428 20:38:26.135450  5113 solver.cpp:316] Optimization Done.
I0428 20:38:26.135465  5113 caffe.cpp:259] Optimization Done.
