I0428 20:00:23.834365 29468 caffe.cpp:218] Using GPUs 0
I0428 20:00:23.871955 29468 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:24.383278 29468 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test875.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:24.383417 29468 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test875.prototxt
I0428 20:00:24.383823 29468 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:24.383848 29468 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:24.383949 29468 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:24.384033 29468 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:24.384135 29468 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:24.384158 29468 net.cpp:86] Creating Layer mnist
I0428 20:00:24.384166 29468 net.cpp:382] mnist -> data
I0428 20:00:24.384188 29468 net.cpp:382] mnist -> label
I0428 20:00:24.385280 29468 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:24.387750 29468 net.cpp:124] Setting up mnist
I0428 20:00:24.387768 29468 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:24.387775 29468 net.cpp:131] Top shape: 64 (64)
I0428 20:00:24.387779 29468 net.cpp:139] Memory required for data: 200960
I0428 20:00:24.387786 29468 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:24.387802 29468 net.cpp:86] Creating Layer conv0
I0428 20:00:24.387823 29468 net.cpp:408] conv0 <- data
I0428 20:00:24.387835 29468 net.cpp:382] conv0 -> conv0
I0428 20:00:24.668900 29468 net.cpp:124] Setting up conv0
I0428 20:00:24.668928 29468 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:24.668932 29468 net.cpp:139] Memory required for data: 1675520
I0428 20:00:24.668946 29468 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:24.668958 29468 net.cpp:86] Creating Layer pool0
I0428 20:00:24.668962 29468 net.cpp:408] pool0 <- conv0
I0428 20:00:24.668968 29468 net.cpp:382] pool0 -> pool0
I0428 20:00:24.669013 29468 net.cpp:124] Setting up pool0
I0428 20:00:24.669018 29468 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:24.669021 29468 net.cpp:139] Memory required for data: 2044160
I0428 20:00:24.669023 29468 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:24.669034 29468 net.cpp:86] Creating Layer conv1
I0428 20:00:24.669037 29468 net.cpp:408] conv1 <- pool0
I0428 20:00:24.669042 29468 net.cpp:382] conv1 -> conv1
I0428 20:00:24.671638 29468 net.cpp:124] Setting up conv1
I0428 20:00:24.671651 29468 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:24.671670 29468 net.cpp:139] Memory required for data: 2453760
I0428 20:00:24.671679 29468 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:24.671686 29468 net.cpp:86] Creating Layer pool1
I0428 20:00:24.671690 29468 net.cpp:408] pool1 <- conv1
I0428 20:00:24.671694 29468 net.cpp:382] pool1 -> pool1
I0428 20:00:24.671763 29468 net.cpp:124] Setting up pool1
I0428 20:00:24.671777 29468 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:24.671780 29468 net.cpp:139] Memory required for data: 2556160
I0428 20:00:24.671783 29468 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:24.671792 29468 net.cpp:86] Creating Layer ip1
I0428 20:00:24.671794 29468 net.cpp:408] ip1 <- pool1
I0428 20:00:24.671799 29468 net.cpp:382] ip1 -> ip1
I0428 20:00:24.672797 29468 net.cpp:124] Setting up ip1
I0428 20:00:24.672817 29468 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:24.672821 29468 net.cpp:139] Memory required for data: 2558720
I0428 20:00:24.672845 29468 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:24.672866 29468 net.cpp:86] Creating Layer relu1
I0428 20:00:24.672870 29468 net.cpp:408] relu1 <- ip1
I0428 20:00:24.672875 29468 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:24.673069 29468 net.cpp:124] Setting up relu1
I0428 20:00:24.673092 29468 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:24.673096 29468 net.cpp:139] Memory required for data: 2561280
I0428 20:00:24.673099 29468 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:24.673106 29468 net.cpp:86] Creating Layer ip2
I0428 20:00:24.673110 29468 net.cpp:408] ip2 <- ip1
I0428 20:00:24.673115 29468 net.cpp:382] ip2 -> ip2
I0428 20:00:24.673270 29468 net.cpp:124] Setting up ip2
I0428 20:00:24.673279 29468 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:24.673281 29468 net.cpp:139] Memory required for data: 2567680
I0428 20:00:24.673286 29468 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:24.673292 29468 net.cpp:86] Creating Layer relu2
I0428 20:00:24.673295 29468 net.cpp:408] relu2 <- ip2
I0428 20:00:24.673300 29468 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:24.674007 29468 net.cpp:124] Setting up relu2
I0428 20:00:24.674019 29468 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:24.674038 29468 net.cpp:139] Memory required for data: 2574080
I0428 20:00:24.674041 29468 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:24.674048 29468 net.cpp:86] Creating Layer ip3
I0428 20:00:24.674052 29468 net.cpp:408] ip3 <- ip2
I0428 20:00:24.674057 29468 net.cpp:382] ip3 -> ip3
I0428 20:00:24.674151 29468 net.cpp:124] Setting up ip3
I0428 20:00:24.674160 29468 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:24.674163 29468 net.cpp:139] Memory required for data: 2576640
I0428 20:00:24.674170 29468 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:24.674175 29468 net.cpp:86] Creating Layer relu3
I0428 20:00:24.674180 29468 net.cpp:408] relu3 <- ip3
I0428 20:00:24.674183 29468 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:24.674367 29468 net.cpp:124] Setting up relu3
I0428 20:00:24.674376 29468 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:24.674379 29468 net.cpp:139] Memory required for data: 2579200
I0428 20:00:24.674382 29468 layer_factory.hpp:77] Creating layer loss
I0428 20:00:24.674387 29468 net.cpp:86] Creating Layer loss
I0428 20:00:24.674391 29468 net.cpp:408] loss <- ip3
I0428 20:00:24.674394 29468 net.cpp:408] loss <- label
I0428 20:00:24.674398 29468 net.cpp:382] loss -> loss
I0428 20:00:24.674415 29468 layer_factory.hpp:77] Creating layer loss
I0428 20:00:24.674620 29468 net.cpp:124] Setting up loss
I0428 20:00:24.674629 29468 net.cpp:131] Top shape: (1)
I0428 20:00:24.674633 29468 net.cpp:134]     with loss weight 1
I0428 20:00:24.674646 29468 net.cpp:139] Memory required for data: 2579204
I0428 20:00:24.674649 29468 net.cpp:200] loss needs backward computation.
I0428 20:00:24.674652 29468 net.cpp:200] relu3 needs backward computation.
I0428 20:00:24.674655 29468 net.cpp:200] ip3 needs backward computation.
I0428 20:00:24.674659 29468 net.cpp:200] relu2 needs backward computation.
I0428 20:00:24.674660 29468 net.cpp:200] ip2 needs backward computation.
I0428 20:00:24.674664 29468 net.cpp:200] relu1 needs backward computation.
I0428 20:00:24.674665 29468 net.cpp:200] ip1 needs backward computation.
I0428 20:00:24.674669 29468 net.cpp:200] pool1 needs backward computation.
I0428 20:00:24.674671 29468 net.cpp:200] conv1 needs backward computation.
I0428 20:00:24.674674 29468 net.cpp:200] pool0 needs backward computation.
I0428 20:00:24.674677 29468 net.cpp:200] conv0 needs backward computation.
I0428 20:00:24.674680 29468 net.cpp:202] mnist does not need backward computation.
I0428 20:00:24.674682 29468 net.cpp:244] This network produces output loss
I0428 20:00:24.674691 29468 net.cpp:257] Network initialization done.
I0428 20:00:24.674988 29468 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test875.prototxt
I0428 20:00:24.675014 29468 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:24.675117 29468 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:24.675192 29468 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:24.675233 29468 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:24.675248 29468 net.cpp:86] Creating Layer mnist
I0428 20:00:24.675253 29468 net.cpp:382] mnist -> data
I0428 20:00:24.675261 29468 net.cpp:382] mnist -> label
I0428 20:00:24.675339 29468 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:24.677355 29468 net.cpp:124] Setting up mnist
I0428 20:00:24.677382 29468 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:24.677387 29468 net.cpp:131] Top shape: 100 (100)
I0428 20:00:24.677392 29468 net.cpp:139] Memory required for data: 314000
I0428 20:00:24.677394 29468 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:24.677429 29468 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:24.677433 29468 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:24.677438 29468 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:24.677446 29468 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:24.677495 29468 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:24.677501 29468 net.cpp:131] Top shape: 100 (100)
I0428 20:00:24.677505 29468 net.cpp:131] Top shape: 100 (100)
I0428 20:00:24.677507 29468 net.cpp:139] Memory required for data: 314800
I0428 20:00:24.677510 29468 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:24.677517 29468 net.cpp:86] Creating Layer conv0
I0428 20:00:24.677521 29468 net.cpp:408] conv0 <- data
I0428 20:00:24.677525 29468 net.cpp:382] conv0 -> conv0
I0428 20:00:24.679312 29468 net.cpp:124] Setting up conv0
I0428 20:00:24.679327 29468 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:24.679330 29468 net.cpp:139] Memory required for data: 2618800
I0428 20:00:24.679338 29468 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:24.679361 29468 net.cpp:86] Creating Layer pool0
I0428 20:00:24.679364 29468 net.cpp:408] pool0 <- conv0
I0428 20:00:24.679370 29468 net.cpp:382] pool0 -> pool0
I0428 20:00:24.679405 29468 net.cpp:124] Setting up pool0
I0428 20:00:24.679411 29468 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:24.679414 29468 net.cpp:139] Memory required for data: 3194800
I0428 20:00:24.679416 29468 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:24.679425 29468 net.cpp:86] Creating Layer conv1
I0428 20:00:24.679445 29468 net.cpp:408] conv1 <- pool0
I0428 20:00:24.679450 29468 net.cpp:382] conv1 -> conv1
I0428 20:00:24.681710 29468 net.cpp:124] Setting up conv1
I0428 20:00:24.681725 29468 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:24.681730 29468 net.cpp:139] Memory required for data: 3834800
I0428 20:00:24.681761 29468 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:24.681768 29468 net.cpp:86] Creating Layer pool1
I0428 20:00:24.681773 29468 net.cpp:408] pool1 <- conv1
I0428 20:00:24.681778 29468 net.cpp:382] pool1 -> pool1
I0428 20:00:24.681820 29468 net.cpp:124] Setting up pool1
I0428 20:00:24.681828 29468 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:24.681831 29468 net.cpp:139] Memory required for data: 3994800
I0428 20:00:24.681833 29468 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:24.681840 29468 net.cpp:86] Creating Layer ip1
I0428 20:00:24.681843 29468 net.cpp:408] ip1 <- pool1
I0428 20:00:24.681849 29468 net.cpp:382] ip1 -> ip1
I0428 20:00:24.682020 29468 net.cpp:124] Setting up ip1
I0428 20:00:24.682029 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.682044 29468 net.cpp:139] Memory required for data: 3998800
I0428 20:00:24.682051 29468 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:24.682056 29468 net.cpp:86] Creating Layer relu1
I0428 20:00:24.682060 29468 net.cpp:408] relu1 <- ip1
I0428 20:00:24.682065 29468 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:24.682312 29468 net.cpp:124] Setting up relu1
I0428 20:00:24.682320 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.682324 29468 net.cpp:139] Memory required for data: 4002800
I0428 20:00:24.682328 29468 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:24.682337 29468 net.cpp:86] Creating Layer ip2
I0428 20:00:24.682339 29468 net.cpp:408] ip2 <- ip1
I0428 20:00:24.682345 29468 net.cpp:382] ip2 -> ip2
I0428 20:00:24.682456 29468 net.cpp:124] Setting up ip2
I0428 20:00:24.682464 29468 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:24.682467 29468 net.cpp:139] Memory required for data: 4012800
I0428 20:00:24.682472 29468 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:24.682477 29468 net.cpp:86] Creating Layer relu2
I0428 20:00:24.682481 29468 net.cpp:408] relu2 <- ip2
I0428 20:00:24.682485 29468 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:24.682654 29468 net.cpp:124] Setting up relu2
I0428 20:00:24.682663 29468 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:24.682667 29468 net.cpp:139] Memory required for data: 4022800
I0428 20:00:24.682670 29468 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:24.682677 29468 net.cpp:86] Creating Layer ip3
I0428 20:00:24.682678 29468 net.cpp:408] ip3 <- ip2
I0428 20:00:24.682683 29468 net.cpp:382] ip3 -> ip3
I0428 20:00:24.682813 29468 net.cpp:124] Setting up ip3
I0428 20:00:24.682821 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.682824 29468 net.cpp:139] Memory required for data: 4026800
I0428 20:00:24.682832 29468 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:24.682837 29468 net.cpp:86] Creating Layer relu3
I0428 20:00:24.682847 29468 net.cpp:408] relu3 <- ip3
I0428 20:00:24.682852 29468 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:24.683646 29468 net.cpp:124] Setting up relu3
I0428 20:00:24.683658 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.683662 29468 net.cpp:139] Memory required for data: 4030800
I0428 20:00:24.683665 29468 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:24.683673 29468 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:24.683677 29468 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:24.683681 29468 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:24.683687 29468 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:24.683732 29468 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:24.683737 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.683742 29468 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:24.683744 29468 net.cpp:139] Memory required for data: 4038800
I0428 20:00:24.683746 29468 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:24.683751 29468 net.cpp:86] Creating Layer accuracy
I0428 20:00:24.683768 29468 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:24.683773 29468 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:24.683779 29468 net.cpp:382] accuracy -> accuracy
I0428 20:00:24.683784 29468 net.cpp:124] Setting up accuracy
I0428 20:00:24.683789 29468 net.cpp:131] Top shape: (1)
I0428 20:00:24.683791 29468 net.cpp:139] Memory required for data: 4038804
I0428 20:00:24.683794 29468 layer_factory.hpp:77] Creating layer loss
I0428 20:00:24.683815 29468 net.cpp:86] Creating Layer loss
I0428 20:00:24.683817 29468 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:24.683820 29468 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:24.683825 29468 net.cpp:382] loss -> loss
I0428 20:00:24.683831 29468 layer_factory.hpp:77] Creating layer loss
I0428 20:00:24.684078 29468 net.cpp:124] Setting up loss
I0428 20:00:24.684088 29468 net.cpp:131] Top shape: (1)
I0428 20:00:24.684092 29468 net.cpp:134]     with loss weight 1
I0428 20:00:24.684134 29468 net.cpp:139] Memory required for data: 4038808
I0428 20:00:24.684144 29468 net.cpp:200] loss needs backward computation.
I0428 20:00:24.684147 29468 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:24.684151 29468 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:24.684154 29468 net.cpp:200] relu3 needs backward computation.
I0428 20:00:24.684162 29468 net.cpp:200] ip3 needs backward computation.
I0428 20:00:24.684165 29468 net.cpp:200] relu2 needs backward computation.
I0428 20:00:24.684167 29468 net.cpp:200] ip2 needs backward computation.
I0428 20:00:24.684170 29468 net.cpp:200] relu1 needs backward computation.
I0428 20:00:24.684172 29468 net.cpp:200] ip1 needs backward computation.
I0428 20:00:24.684195 29468 net.cpp:200] pool1 needs backward computation.
I0428 20:00:24.684198 29468 net.cpp:200] conv1 needs backward computation.
I0428 20:00:24.684201 29468 net.cpp:200] pool0 needs backward computation.
I0428 20:00:24.684204 29468 net.cpp:200] conv0 needs backward computation.
I0428 20:00:24.684207 29468 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:24.684211 29468 net.cpp:202] mnist does not need backward computation.
I0428 20:00:24.684213 29468 net.cpp:244] This network produces output accuracy
I0428 20:00:24.684217 29468 net.cpp:244] This network produces output loss
I0428 20:00:24.684234 29468 net.cpp:257] Network initialization done.
I0428 20:00:24.684274 29468 solver.cpp:56] Solver scaffolding done.
I0428 20:00:24.684612 29468 caffe.cpp:248] Starting Optimization
I0428 20:00:24.684619 29468 solver.cpp:273] Solving LeNet
I0428 20:00:24.684623 29468 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:24.684777 29468 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:24.689229 29468 blocking_queue.cpp:49] Waiting for data
I0428 20:00:24.760496 29475 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:24.761045 29468 solver.cpp:398]     Test net output #0: accuracy = 0.0667
I0428 20:00:24.761065 29468 solver.cpp:398]     Test net output #1: loss = 2.3439 (* 1 = 2.3439 loss)
I0428 20:00:24.763646 29468 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789965s/100 iters), loss = 2.33406
I0428 20:00:24.763671 29468 solver.cpp:238]     Train net output #0: loss = 2.33406 (* 1 = 2.33406 loss)
I0428 20:00:24.763698 29468 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:24.864316 29468 solver.cpp:219] Iteration 100 (993.714 iter/s, 0.100633s/100 iters), loss = 0.592943
I0428 20:00:24.864344 29468 solver.cpp:238]     Train net output #0: loss = 0.592943 (* 1 = 0.592943 loss)
I0428 20:00:24.864351 29468 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:24.957036 29468 solver.cpp:219] Iteration 200 (1079 iter/s, 0.0926781s/100 iters), loss = 0.390573
I0428 20:00:24.957077 29468 solver.cpp:238]     Train net output #0: loss = 0.390573 (* 1 = 0.390573 loss)
I0428 20:00:24.957084 29468 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:25.048609 29468 solver.cpp:219] Iteration 300 (1092.62 iter/s, 0.0915229s/100 iters), loss = 0.452465
I0428 20:00:25.048632 29468 solver.cpp:238]     Train net output #0: loss = 0.452465 (* 1 = 0.452465 loss)
I0428 20:00:25.048640 29468 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:25.139858 29468 solver.cpp:219] Iteration 400 (1096.31 iter/s, 0.091215s/100 iters), loss = 0.34253
I0428 20:00:25.139883 29468 solver.cpp:238]     Train net output #0: loss = 0.34253 (* 1 = 0.34253 loss)
I0428 20:00:25.139889 29468 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:25.232286 29468 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:25.307405 29475 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:25.307992 29468 solver.cpp:398]     Test net output #0: accuracy = 0.8614
I0428 20:00:25.308012 29468 solver.cpp:398]     Test net output #1: loss = 0.381384 (* 1 = 0.381384 loss)
I0428 20:00:25.309034 29468 solver.cpp:219] Iteration 500 (591.247 iter/s, 0.169134s/100 iters), loss = 0.382738
I0428 20:00:25.309089 29468 solver.cpp:238]     Train net output #0: loss = 0.382738 (* 1 = 0.382738 loss)
I0428 20:00:25.309111 29468 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:25.412569 29468 solver.cpp:219] Iteration 600 (966.458 iter/s, 0.103471s/100 iters), loss = 0.395422
I0428 20:00:25.412609 29468 solver.cpp:238]     Train net output #0: loss = 0.395422 (* 1 = 0.395422 loss)
I0428 20:00:25.412616 29468 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:25.505693 29468 solver.cpp:219] Iteration 700 (1074.42 iter/s, 0.0930736s/100 iters), loss = 0.427957
I0428 20:00:25.505733 29468 solver.cpp:238]     Train net output #0: loss = 0.427957 (* 1 = 0.427957 loss)
I0428 20:00:25.505739 29468 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:25.595381 29468 solver.cpp:219] Iteration 800 (1115.41 iter/s, 0.0896533s/100 iters), loss = 0.581325
I0428 20:00:25.595419 29468 solver.cpp:238]     Train net output #0: loss = 0.581325 (* 1 = 0.581325 loss)
I0428 20:00:25.595425 29468 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:25.693523 29468 solver.cpp:219] Iteration 900 (1019.28 iter/s, 0.0981084s/100 iters), loss = 0.536331
I0428 20:00:25.693548 29468 solver.cpp:238]     Train net output #0: loss = 0.536331 (* 1 = 0.536331 loss)
I0428 20:00:25.693555 29468 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:25.724931 29474 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:25.785358 29468 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:25.786304 29468 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:25.786907 29468 solver.cpp:311] Iteration 1000, loss = 0.326818
I0428 20:00:25.786936 29468 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:25.858690 29475 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:25.859285 29468 solver.cpp:398]     Test net output #0: accuracy = 0.8793
I0428 20:00:25.859311 29468 solver.cpp:398]     Test net output #1: loss = 0.314573 (* 1 = 0.314573 loss)
I0428 20:00:25.859318 29468 solver.cpp:316] Optimization Done.
I0428 20:00:25.859323 29468 caffe.cpp:259] Optimization Done.
