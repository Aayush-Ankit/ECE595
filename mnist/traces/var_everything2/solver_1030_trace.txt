I0428 20:06:31.348893 30892 caffe.cpp:218] Using GPUs 0
I0428 20:06:31.385923 30892 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:31.840184 30892 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1030.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:31.840330 30892 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1030.prototxt
I0428 20:06:31.840684 30892 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:31.840715 30892 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:31.840837 30892 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:31.840931 30892 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:31.841013 30892 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:31.841033 30892 net.cpp:86] Creating Layer mnist
I0428 20:06:31.841040 30892 net.cpp:382] mnist -> data
I0428 20:06:31.841059 30892 net.cpp:382] mnist -> label
I0428 20:06:31.842067 30892 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:31.844336 30892 net.cpp:124] Setting up mnist
I0428 20:06:31.844367 30892 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:31.844372 30892 net.cpp:131] Top shape: 64 (64)
I0428 20:06:31.844374 30892 net.cpp:139] Memory required for data: 200960
I0428 20:06:31.844380 30892 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:31.844394 30892 net.cpp:86] Creating Layer conv0
I0428 20:06:31.844411 30892 net.cpp:408] conv0 <- data
I0428 20:06:31.844424 30892 net.cpp:382] conv0 -> conv0
I0428 20:06:32.070590 30892 net.cpp:124] Setting up conv0
I0428 20:06:32.070631 30892 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:32.070636 30892 net.cpp:139] Memory required for data: 3887360
I0428 20:06:32.070649 30892 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:32.070662 30892 net.cpp:86] Creating Layer pool0
I0428 20:06:32.070665 30892 net.cpp:408] pool0 <- conv0
I0428 20:06:32.070670 30892 net.cpp:382] pool0 -> pool0
I0428 20:06:32.070713 30892 net.cpp:124] Setting up pool0
I0428 20:06:32.070718 30892 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:32.070720 30892 net.cpp:139] Memory required for data: 4808960
I0428 20:06:32.070722 30892 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:32.070732 30892 net.cpp:86] Creating Layer conv1
I0428 20:06:32.070735 30892 net.cpp:408] conv1 <- pool0
I0428 20:06:32.070740 30892 net.cpp:382] conv1 -> conv1
I0428 20:06:32.073549 30892 net.cpp:124] Setting up conv1
I0428 20:06:32.073578 30892 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:32.073582 30892 net.cpp:139] Memory required for data: 4890880
I0428 20:06:32.073590 30892 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:32.073597 30892 net.cpp:86] Creating Layer pool1
I0428 20:06:32.073601 30892 net.cpp:408] pool1 <- conv1
I0428 20:06:32.073606 30892 net.cpp:382] pool1 -> pool1
I0428 20:06:32.073657 30892 net.cpp:124] Setting up pool1
I0428 20:06:32.073662 30892 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:32.073664 30892 net.cpp:139] Memory required for data: 4911360
I0428 20:06:32.073667 30892 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:32.073673 30892 net.cpp:86] Creating Layer ip1
I0428 20:06:32.073676 30892 net.cpp:408] ip1 <- pool1
I0428 20:06:32.073681 30892 net.cpp:382] ip1 -> ip1
I0428 20:06:32.073796 30892 net.cpp:124] Setting up ip1
I0428 20:06:32.073803 30892 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:32.073807 30892 net.cpp:139] Memory required for data: 4913920
I0428 20:06:32.073813 30892 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:32.073818 30892 net.cpp:86] Creating Layer relu1
I0428 20:06:32.073822 30892 net.cpp:408] relu1 <- ip1
I0428 20:06:32.073827 30892 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:32.073992 30892 net.cpp:124] Setting up relu1
I0428 20:06:32.074002 30892 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:32.074005 30892 net.cpp:139] Memory required for data: 4916480
I0428 20:06:32.074008 30892 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:32.074014 30892 net.cpp:86] Creating Layer ip2
I0428 20:06:32.074018 30892 net.cpp:408] ip2 <- ip1
I0428 20:06:32.074023 30892 net.cpp:382] ip2 -> ip2
I0428 20:06:32.074126 30892 net.cpp:124] Setting up ip2
I0428 20:06:32.074133 30892 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:32.074136 30892 net.cpp:139] Memory required for data: 4922880
I0428 20:06:32.074141 30892 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:32.074146 30892 net.cpp:86] Creating Layer relu2
I0428 20:06:32.074151 30892 net.cpp:408] relu2 <- ip2
I0428 20:06:32.074153 30892 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:32.074897 30892 net.cpp:124] Setting up relu2
I0428 20:06:32.074925 30892 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:32.074928 30892 net.cpp:139] Memory required for data: 4929280
I0428 20:06:32.074932 30892 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:32.074939 30892 net.cpp:86] Creating Layer ip3
I0428 20:06:32.074944 30892 net.cpp:408] ip3 <- ip2
I0428 20:06:32.074949 30892 net.cpp:382] ip3 -> ip3
I0428 20:06:32.075045 30892 net.cpp:124] Setting up ip3
I0428 20:06:32.075053 30892 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:32.075057 30892 net.cpp:139] Memory required for data: 4931840
I0428 20:06:32.075064 30892 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:32.075069 30892 net.cpp:86] Creating Layer relu3
I0428 20:06:32.075073 30892 net.cpp:408] relu3 <- ip3
I0428 20:06:32.075076 30892 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:32.075251 30892 net.cpp:124] Setting up relu3
I0428 20:06:32.075259 30892 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:32.075263 30892 net.cpp:139] Memory required for data: 4934400
I0428 20:06:32.075266 30892 layer_factory.hpp:77] Creating layer loss
I0428 20:06:32.075271 30892 net.cpp:86] Creating Layer loss
I0428 20:06:32.075274 30892 net.cpp:408] loss <- ip3
I0428 20:06:32.075278 30892 net.cpp:408] loss <- label
I0428 20:06:32.075284 30892 net.cpp:382] loss -> loss
I0428 20:06:32.075300 30892 layer_factory.hpp:77] Creating layer loss
I0428 20:06:32.075536 30892 net.cpp:124] Setting up loss
I0428 20:06:32.075546 30892 net.cpp:131] Top shape: (1)
I0428 20:06:32.075549 30892 net.cpp:134]     with loss weight 1
I0428 20:06:32.075563 30892 net.cpp:139] Memory required for data: 4934404
I0428 20:06:32.075567 30892 net.cpp:200] loss needs backward computation.
I0428 20:06:32.075570 30892 net.cpp:200] relu3 needs backward computation.
I0428 20:06:32.075573 30892 net.cpp:200] ip3 needs backward computation.
I0428 20:06:32.075577 30892 net.cpp:200] relu2 needs backward computation.
I0428 20:06:32.075579 30892 net.cpp:200] ip2 needs backward computation.
I0428 20:06:32.075582 30892 net.cpp:200] relu1 needs backward computation.
I0428 20:06:32.075585 30892 net.cpp:200] ip1 needs backward computation.
I0428 20:06:32.075588 30892 net.cpp:200] pool1 needs backward computation.
I0428 20:06:32.075592 30892 net.cpp:200] conv1 needs backward computation.
I0428 20:06:32.075594 30892 net.cpp:200] pool0 needs backward computation.
I0428 20:06:32.075598 30892 net.cpp:200] conv0 needs backward computation.
I0428 20:06:32.075600 30892 net.cpp:202] mnist does not need backward computation.
I0428 20:06:32.075603 30892 net.cpp:244] This network produces output loss
I0428 20:06:32.075626 30892 net.cpp:257] Network initialization done.
I0428 20:06:32.075985 30892 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1030.prototxt
I0428 20:06:32.076052 30892 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:32.076145 30892 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:32.076247 30892 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:32.076304 30892 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:32.076316 30892 net.cpp:86] Creating Layer mnist
I0428 20:06:32.076323 30892 net.cpp:382] mnist -> data
I0428 20:06:32.076329 30892 net.cpp:382] mnist -> label
I0428 20:06:32.076416 30892 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:32.078348 30892 net.cpp:124] Setting up mnist
I0428 20:06:32.078392 30892 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:32.078398 30892 net.cpp:131] Top shape: 100 (100)
I0428 20:06:32.078400 30892 net.cpp:139] Memory required for data: 314000
I0428 20:06:32.078404 30892 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:32.078418 30892 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:32.078421 30892 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:32.078428 30892 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:32.078434 30892 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:32.078493 30892 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:32.078500 30892 net.cpp:131] Top shape: 100 (100)
I0428 20:06:32.078502 30892 net.cpp:131] Top shape: 100 (100)
I0428 20:06:32.078505 30892 net.cpp:139] Memory required for data: 314800
I0428 20:06:32.078508 30892 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:32.078516 30892 net.cpp:86] Creating Layer conv0
I0428 20:06:32.078519 30892 net.cpp:408] conv0 <- data
I0428 20:06:32.078526 30892 net.cpp:382] conv0 -> conv0
I0428 20:06:32.080346 30892 net.cpp:124] Setting up conv0
I0428 20:06:32.080370 30892 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:32.080374 30892 net.cpp:139] Memory required for data: 6074800
I0428 20:06:32.080400 30892 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:32.080410 30892 net.cpp:86] Creating Layer pool0
I0428 20:06:32.080413 30892 net.cpp:408] pool0 <- conv0
I0428 20:06:32.080418 30892 net.cpp:382] pool0 -> pool0
I0428 20:06:32.080471 30892 net.cpp:124] Setting up pool0
I0428 20:06:32.080476 30892 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:32.080479 30892 net.cpp:139] Memory required for data: 7514800
I0428 20:06:32.080482 30892 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:32.080492 30892 net.cpp:86] Creating Layer conv1
I0428 20:06:32.080494 30892 net.cpp:408] conv1 <- pool0
I0428 20:06:32.080500 30892 net.cpp:382] conv1 -> conv1
I0428 20:06:32.082743 30892 net.cpp:124] Setting up conv1
I0428 20:06:32.082772 30892 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:32.082777 30892 net.cpp:139] Memory required for data: 7642800
I0428 20:06:32.082787 30892 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:32.082793 30892 net.cpp:86] Creating Layer pool1
I0428 20:06:32.082803 30892 net.cpp:408] pool1 <- conv1
I0428 20:06:32.082808 30892 net.cpp:382] pool1 -> pool1
I0428 20:06:32.082881 30892 net.cpp:124] Setting up pool1
I0428 20:06:32.082898 30892 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:32.082902 30892 net.cpp:139] Memory required for data: 7674800
I0428 20:06:32.082909 30892 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:32.082917 30892 net.cpp:86] Creating Layer ip1
I0428 20:06:32.082921 30892 net.cpp:408] ip1 <- pool1
I0428 20:06:32.082926 30892 net.cpp:382] ip1 -> ip1
I0428 20:06:32.083039 30892 net.cpp:124] Setting up ip1
I0428 20:06:32.083046 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.083060 30892 net.cpp:139] Memory required for data: 7678800
I0428 20:06:32.083067 30892 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:32.083073 30892 net.cpp:86] Creating Layer relu1
I0428 20:06:32.083076 30892 net.cpp:408] relu1 <- ip1
I0428 20:06:32.083081 30892 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:32.083344 30892 net.cpp:124] Setting up relu1
I0428 20:06:32.083355 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.083359 30892 net.cpp:139] Memory required for data: 7682800
I0428 20:06:32.083362 30892 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:32.083369 30892 net.cpp:86] Creating Layer ip2
I0428 20:06:32.083372 30892 net.cpp:408] ip2 <- ip1
I0428 20:06:32.083379 30892 net.cpp:382] ip2 -> ip2
I0428 20:06:32.083492 30892 net.cpp:124] Setting up ip2
I0428 20:06:32.083500 30892 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:32.083504 30892 net.cpp:139] Memory required for data: 7692800
I0428 20:06:32.083509 30892 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:32.083515 30892 net.cpp:86] Creating Layer relu2
I0428 20:06:32.083518 30892 net.cpp:408] relu2 <- ip2
I0428 20:06:32.083523 30892 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:32.083703 30892 net.cpp:124] Setting up relu2
I0428 20:06:32.083711 30892 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:32.083714 30892 net.cpp:139] Memory required for data: 7702800
I0428 20:06:32.083719 30892 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:32.083725 30892 net.cpp:86] Creating Layer ip3
I0428 20:06:32.083729 30892 net.cpp:408] ip3 <- ip2
I0428 20:06:32.083740 30892 net.cpp:382] ip3 -> ip3
I0428 20:06:32.083889 30892 net.cpp:124] Setting up ip3
I0428 20:06:32.083899 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.083904 30892 net.cpp:139] Memory required for data: 7706800
I0428 20:06:32.083911 30892 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:32.083916 30892 net.cpp:86] Creating Layer relu3
I0428 20:06:32.083920 30892 net.cpp:408] relu3 <- ip3
I0428 20:06:32.083940 30892 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:32.084724 30892 net.cpp:124] Setting up relu3
I0428 20:06:32.084736 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.084755 30892 net.cpp:139] Memory required for data: 7710800
I0428 20:06:32.084761 30892 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:32.084769 30892 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:32.084772 30892 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:32.084779 30892 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:32.084785 30892 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:32.084875 30892 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:32.084884 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.084889 30892 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:32.084893 30892 net.cpp:139] Memory required for data: 7718800
I0428 20:06:32.084895 30892 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:32.084902 30892 net.cpp:86] Creating Layer accuracy
I0428 20:06:32.084904 30892 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:32.084913 30892 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:32.084919 30892 net.cpp:382] accuracy -> accuracy
I0428 20:06:32.084926 30892 net.cpp:124] Setting up accuracy
I0428 20:06:32.084929 30892 net.cpp:131] Top shape: (1)
I0428 20:06:32.084933 30892 net.cpp:139] Memory required for data: 7718804
I0428 20:06:32.084936 30892 layer_factory.hpp:77] Creating layer loss
I0428 20:06:32.084942 30892 net.cpp:86] Creating Layer loss
I0428 20:06:32.084950 30892 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:32.084954 30892 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:32.084959 30892 net.cpp:382] loss -> loss
I0428 20:06:32.084969 30892 layer_factory.hpp:77] Creating layer loss
I0428 20:06:32.085245 30892 net.cpp:124] Setting up loss
I0428 20:06:32.085254 30892 net.cpp:131] Top shape: (1)
I0428 20:06:32.085258 30892 net.cpp:134]     with loss weight 1
I0428 20:06:32.085263 30892 net.cpp:139] Memory required for data: 7718808
I0428 20:06:32.085278 30892 net.cpp:200] loss needs backward computation.
I0428 20:06:32.085281 30892 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:32.085285 30892 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:32.085289 30892 net.cpp:200] relu3 needs backward computation.
I0428 20:06:32.085291 30892 net.cpp:200] ip3 needs backward computation.
I0428 20:06:32.085294 30892 net.cpp:200] relu2 needs backward computation.
I0428 20:06:32.085296 30892 net.cpp:200] ip2 needs backward computation.
I0428 20:06:32.085299 30892 net.cpp:200] relu1 needs backward computation.
I0428 20:06:32.085301 30892 net.cpp:200] ip1 needs backward computation.
I0428 20:06:32.085304 30892 net.cpp:200] pool1 needs backward computation.
I0428 20:06:32.085307 30892 net.cpp:200] conv1 needs backward computation.
I0428 20:06:32.085310 30892 net.cpp:200] pool0 needs backward computation.
I0428 20:06:32.085314 30892 net.cpp:200] conv0 needs backward computation.
I0428 20:06:32.085319 30892 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:32.085321 30892 net.cpp:202] mnist does not need backward computation.
I0428 20:06:32.085325 30892 net.cpp:244] This network produces output accuracy
I0428 20:06:32.085333 30892 net.cpp:244] This network produces output loss
I0428 20:06:32.085345 30892 net.cpp:257] Network initialization done.
I0428 20:06:32.085384 30892 solver.cpp:56] Solver scaffolding done.
I0428 20:06:32.085705 30892 caffe.cpp:248] Starting Optimization
I0428 20:06:32.085711 30892 solver.cpp:273] Solving LeNet
I0428 20:06:32.085714 30892 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:32.086625 30892 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:32.091770 30892 blocking_queue.cpp:49] Waiting for data
I0428 20:06:32.162700 30899 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:32.163318 30892 solver.cpp:398]     Test net output #0: accuracy = 0.0911
I0428 20:06:32.163352 30892 solver.cpp:398]     Test net output #1: loss = 2.31105 (* 1 = 2.31105 loss)
I0428 20:06:32.167099 30892 solver.cpp:219] Iteration 0 (-2.01385e-31 iter/s, 0.0813389s/100 iters), loss = 2.29557
I0428 20:06:32.167138 30892 solver.cpp:238]     Train net output #0: loss = 2.29557 (* 1 = 2.29557 loss)
I0428 20:06:32.167150 30892 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:32.260345 30892 solver.cpp:219] Iteration 100 (1073.02 iter/s, 0.0931952s/100 iters), loss = 1.20737
I0428 20:06:32.260385 30892 solver.cpp:238]     Train net output #0: loss = 1.20737 (* 1 = 1.20737 loss)
I0428 20:06:32.260390 30892 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:32.347506 30892 solver.cpp:219] Iteration 200 (1147.74 iter/s, 0.087128s/100 iters), loss = 1.23256
I0428 20:06:32.347545 30892 solver.cpp:238]     Train net output #0: loss = 1.23256 (* 1 = 1.23256 loss)
I0428 20:06:32.347551 30892 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:32.433533 30892 solver.cpp:219] Iteration 300 (1162.87 iter/s, 0.0859944s/100 iters), loss = 0.676559
I0428 20:06:32.433573 30892 solver.cpp:238]     Train net output #0: loss = 0.676559 (* 1 = 0.676559 loss)
I0428 20:06:32.433578 30892 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:32.520440 30892 solver.cpp:219] Iteration 400 (1151.09 iter/s, 0.0868741s/100 iters), loss = 0.303217
I0428 20:06:32.520483 30892 solver.cpp:238]     Train net output #0: loss = 0.303217 (* 1 = 0.303217 loss)
I0428 20:06:32.520488 30892 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:32.606422 30892 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:32.681635 30899 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:32.682288 30892 solver.cpp:398]     Test net output #0: accuracy = 0.9239
I0428 20:06:32.682317 30892 solver.cpp:398]     Test net output #1: loss = 0.247852 (* 1 = 0.247852 loss)
I0428 20:06:32.683434 30892 solver.cpp:219] Iteration 500 (613.735 iter/s, 0.162937s/100 iters), loss = 0.229598
I0428 20:06:32.683490 30892 solver.cpp:238]     Train net output #0: loss = 0.229598 (* 1 = 0.229598 loss)
I0428 20:06:32.683502 30892 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:32.779075 30892 solver.cpp:219] Iteration 600 (1046.25 iter/s, 0.0955791s/100 iters), loss = 0.22394
I0428 20:06:32.779103 30892 solver.cpp:238]     Train net output #0: loss = 0.22394 (* 1 = 0.22394 loss)
I0428 20:06:32.779111 30892 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:32.868793 30892 solver.cpp:219] Iteration 700 (1115.08 iter/s, 0.0896799s/100 iters), loss = 0.199501
I0428 20:06:32.868839 30892 solver.cpp:238]     Train net output #0: loss = 0.199501 (* 1 = 0.199501 loss)
I0428 20:06:32.868846 30892 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:32.957031 30892 solver.cpp:219] Iteration 800 (1134.01 iter/s, 0.0881827s/100 iters), loss = 0.238907
I0428 20:06:32.957072 30892 solver.cpp:238]     Train net output #0: loss = 0.238907 (* 1 = 0.238907 loss)
I0428 20:06:32.957078 30892 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:33.044898 30892 solver.cpp:219] Iteration 900 (1138.54 iter/s, 0.0878315s/100 iters), loss = 0.218415
I0428 20:06:33.044924 30892 solver.cpp:238]     Train net output #0: loss = 0.218415 (* 1 = 0.218415 loss)
I0428 20:06:33.044931 30892 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:33.074813 30898 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:33.132158 30892 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:33.133016 30892 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:33.133590 30892 solver.cpp:311] Iteration 1000, loss = 0.178941
I0428 20:06:33.133608 30892 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:33.208597 30899 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:33.209231 30892 solver.cpp:398]     Test net output #0: accuracy = 0.9671
I0428 20:06:33.209251 30892 solver.cpp:398]     Test net output #1: loss = 0.106302 (* 1 = 0.106302 loss)
I0428 20:06:33.209257 30892 solver.cpp:316] Optimization Done.
I0428 20:06:33.209260 30892 caffe.cpp:259] Optimization Done.
