I0428 19:29:47.746490 22118 caffe.cpp:218] Using GPUs 0
I0428 19:29:47.787781 22118 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:48.252979 22118 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test70.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:48.253116 22118 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test70.prototxt
I0428 19:29:48.253402 22118 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:48.253419 22118 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:48.253491 22118 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:48.253569 22118 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:48.253676 22118 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:48.253702 22118 net.cpp:86] Creating Layer mnist
I0428 19:29:48.253712 22118 net.cpp:382] mnist -> data
I0428 19:29:48.253738 22118 net.cpp:382] mnist -> label
I0428 19:29:48.254703 22118 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:48.256911 22118 net.cpp:124] Setting up mnist
I0428 19:29:48.256944 22118 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:48.256954 22118 net.cpp:131] Top shape: 64 (64)
I0428 19:29:48.256960 22118 net.cpp:139] Memory required for data: 200960
I0428 19:29:48.256970 22118 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:48.256994 22118 net.cpp:86] Creating Layer conv0
I0428 19:29:48.257002 22118 net.cpp:408] conv0 <- data
I0428 19:29:48.257017 22118 net.cpp:382] conv0 -> conv0
I0428 19:29:48.549252 22118 net.cpp:124] Setting up conv0
I0428 19:29:48.549285 22118 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:48.549291 22118 net.cpp:139] Memory required for data: 495872
I0428 19:29:48.549309 22118 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:48.549324 22118 net.cpp:86] Creating Layer pool0
I0428 19:29:48.549352 22118 net.cpp:408] pool0 <- conv0
I0428 19:29:48.549360 22118 net.cpp:382] pool0 -> pool0
I0428 19:29:48.549417 22118 net.cpp:124] Setting up pool0
I0428 19:29:48.549427 22118 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:48.549432 22118 net.cpp:139] Memory required for data: 569600
I0428 19:29:48.549435 22118 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:48.549443 22118 net.cpp:86] Creating Layer ip1
I0428 19:29:48.549448 22118 net.cpp:408] ip1 <- pool0
I0428 19:29:48.549453 22118 net.cpp:382] ip1 -> ip1
I0428 19:29:48.550647 22118 net.cpp:124] Setting up ip1
I0428 19:29:48.550663 22118 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:48.550668 22118 net.cpp:139] Memory required for data: 582400
I0428 19:29:48.550678 22118 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:48.550685 22118 net.cpp:86] Creating Layer relu1
I0428 19:29:48.550700 22118 net.cpp:408] relu1 <- ip1
I0428 19:29:48.550706 22118 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:48.550907 22118 net.cpp:124] Setting up relu1
I0428 19:29:48.550918 22118 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:48.550922 22118 net.cpp:139] Memory required for data: 595200
I0428 19:29:48.550926 22118 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:48.550935 22118 net.cpp:86] Creating Layer ip2
I0428 19:29:48.550938 22118 net.cpp:408] ip2 <- ip1
I0428 19:29:48.550945 22118 net.cpp:382] ip2 -> ip2
I0428 19:29:48.551059 22118 net.cpp:124] Setting up ip2
I0428 19:29:48.551066 22118 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:48.551070 22118 net.cpp:139] Memory required for data: 597760
I0428 19:29:48.551079 22118 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:48.551086 22118 net.cpp:86] Creating Layer relu2
I0428 19:29:48.551090 22118 net.cpp:408] relu2 <- ip2
I0428 19:29:48.551095 22118 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:48.551949 22118 net.cpp:124] Setting up relu2
I0428 19:29:48.551964 22118 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:48.551969 22118 net.cpp:139] Memory required for data: 600320
I0428 19:29:48.551972 22118 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:48.551980 22118 net.cpp:86] Creating Layer ip3
I0428 19:29:48.551985 22118 net.cpp:408] ip3 <- ip2
I0428 19:29:48.551991 22118 net.cpp:382] ip3 -> ip3
I0428 19:29:48.552111 22118 net.cpp:124] Setting up ip3
I0428 19:29:48.552120 22118 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:48.552124 22118 net.cpp:139] Memory required for data: 602880
I0428 19:29:48.552131 22118 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:48.552139 22118 net.cpp:86] Creating Layer relu3
I0428 19:29:48.552145 22118 net.cpp:408] relu3 <- ip3
I0428 19:29:48.552150 22118 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:48.552327 22118 net.cpp:124] Setting up relu3
I0428 19:29:48.552336 22118 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:48.552340 22118 net.cpp:139] Memory required for data: 605440
I0428 19:29:48.552345 22118 layer_factory.hpp:77] Creating layer loss
I0428 19:29:48.552350 22118 net.cpp:86] Creating Layer loss
I0428 19:29:48.552356 22118 net.cpp:408] loss <- ip3
I0428 19:29:48.552361 22118 net.cpp:408] loss <- label
I0428 19:29:48.552368 22118 net.cpp:382] loss -> loss
I0428 19:29:48.552397 22118 layer_factory.hpp:77] Creating layer loss
I0428 19:29:48.552671 22118 net.cpp:124] Setting up loss
I0428 19:29:48.552682 22118 net.cpp:131] Top shape: (1)
I0428 19:29:48.552686 22118 net.cpp:134]     with loss weight 1
I0428 19:29:48.552702 22118 net.cpp:139] Memory required for data: 605444
I0428 19:29:48.552706 22118 net.cpp:200] loss needs backward computation.
I0428 19:29:48.552711 22118 net.cpp:200] relu3 needs backward computation.
I0428 19:29:48.552716 22118 net.cpp:200] ip3 needs backward computation.
I0428 19:29:48.552719 22118 net.cpp:200] relu2 needs backward computation.
I0428 19:29:48.552722 22118 net.cpp:200] ip2 needs backward computation.
I0428 19:29:48.552726 22118 net.cpp:200] relu1 needs backward computation.
I0428 19:29:48.552729 22118 net.cpp:200] ip1 needs backward computation.
I0428 19:29:48.552744 22118 net.cpp:200] pool0 needs backward computation.
I0428 19:29:48.552748 22118 net.cpp:200] conv0 needs backward computation.
I0428 19:29:48.552752 22118 net.cpp:202] mnist does not need backward computation.
I0428 19:29:48.552757 22118 net.cpp:244] This network produces output loss
I0428 19:29:48.552767 22118 net.cpp:257] Network initialization done.
I0428 19:29:48.553107 22118 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test70.prototxt
I0428 19:29:48.553140 22118 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:48.553246 22118 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:48.553323 22118 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:48.553376 22118 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:48.553391 22118 net.cpp:86] Creating Layer mnist
I0428 19:29:48.553397 22118 net.cpp:382] mnist -> data
I0428 19:29:48.553413 22118 net.cpp:382] mnist -> label
I0428 19:29:48.553515 22118 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:48.555691 22118 net.cpp:124] Setting up mnist
I0428 19:29:48.555707 22118 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:48.555713 22118 net.cpp:131] Top shape: 100 (100)
I0428 19:29:48.555717 22118 net.cpp:139] Memory required for data: 314000
I0428 19:29:48.555722 22118 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:48.555737 22118 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:48.555742 22118 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:48.555761 22118 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:48.555768 22118 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:48.555821 22118 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:48.555830 22118 net.cpp:131] Top shape: 100 (100)
I0428 19:29:48.555835 22118 net.cpp:131] Top shape: 100 (100)
I0428 19:29:48.555837 22118 net.cpp:139] Memory required for data: 314800
I0428 19:29:48.555855 22118 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:48.555866 22118 net.cpp:86] Creating Layer conv0
I0428 19:29:48.555869 22118 net.cpp:408] conv0 <- data
I0428 19:29:48.555876 22118 net.cpp:382] conv0 -> conv0
I0428 19:29:48.557857 22118 net.cpp:124] Setting up conv0
I0428 19:29:48.557874 22118 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:48.557878 22118 net.cpp:139] Memory required for data: 775600
I0428 19:29:48.557889 22118 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:48.557898 22118 net.cpp:86] Creating Layer pool0
I0428 19:29:48.557904 22118 net.cpp:408] pool0 <- conv0
I0428 19:29:48.557910 22118 net.cpp:382] pool0 -> pool0
I0428 19:29:48.557955 22118 net.cpp:124] Setting up pool0
I0428 19:29:48.557961 22118 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:48.557965 22118 net.cpp:139] Memory required for data: 890800
I0428 19:29:48.557968 22118 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:48.557976 22118 net.cpp:86] Creating Layer ip1
I0428 19:29:48.557981 22118 net.cpp:408] ip1 <- pool0
I0428 19:29:48.557987 22118 net.cpp:382] ip1 -> ip1
I0428 19:29:48.558204 22118 net.cpp:124] Setting up ip1
I0428 19:29:48.558214 22118 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:48.558218 22118 net.cpp:139] Memory required for data: 910800
I0428 19:29:48.558226 22118 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:48.558231 22118 net.cpp:86] Creating Layer relu1
I0428 19:29:48.558235 22118 net.cpp:408] relu1 <- ip1
I0428 19:29:48.558241 22118 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:48.558527 22118 net.cpp:124] Setting up relu1
I0428 19:29:48.558538 22118 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:48.558542 22118 net.cpp:139] Memory required for data: 930800
I0428 19:29:48.558547 22118 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:48.558554 22118 net.cpp:86] Creating Layer ip2
I0428 19:29:48.558558 22118 net.cpp:408] ip2 <- ip1
I0428 19:29:48.558563 22118 net.cpp:382] ip2 -> ip2
I0428 19:29:48.558703 22118 net.cpp:124] Setting up ip2
I0428 19:29:48.558713 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.558717 22118 net.cpp:139] Memory required for data: 934800
I0428 19:29:48.558727 22118 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:48.558734 22118 net.cpp:86] Creating Layer relu2
I0428 19:29:48.558738 22118 net.cpp:408] relu2 <- ip2
I0428 19:29:48.558743 22118 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:48.559686 22118 net.cpp:124] Setting up relu2
I0428 19:29:48.559701 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.559706 22118 net.cpp:139] Memory required for data: 938800
I0428 19:29:48.559710 22118 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:48.559720 22118 net.cpp:86] Creating Layer ip3
I0428 19:29:48.559725 22118 net.cpp:408] ip3 <- ip2
I0428 19:29:48.559732 22118 net.cpp:382] ip3 -> ip3
I0428 19:29:48.559859 22118 net.cpp:124] Setting up ip3
I0428 19:29:48.559867 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.559871 22118 net.cpp:139] Memory required for data: 942800
I0428 19:29:48.559878 22118 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:48.559885 22118 net.cpp:86] Creating Layer relu3
I0428 19:29:48.559890 22118 net.cpp:408] relu3 <- ip3
I0428 19:29:48.559896 22118 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:48.560096 22118 net.cpp:124] Setting up relu3
I0428 19:29:48.560106 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.560111 22118 net.cpp:139] Memory required for data: 946800
I0428 19:29:48.560114 22118 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:48.560122 22118 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:48.560127 22118 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:48.560132 22118 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:48.560139 22118 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:48.560181 22118 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:48.560189 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.560194 22118 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:48.560209 22118 net.cpp:139] Memory required for data: 954800
I0428 19:29:48.560214 22118 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:48.560221 22118 net.cpp:86] Creating Layer accuracy
I0428 19:29:48.560225 22118 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:48.560230 22118 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:48.560235 22118 net.cpp:382] accuracy -> accuracy
I0428 19:29:48.560243 22118 net.cpp:124] Setting up accuracy
I0428 19:29:48.560248 22118 net.cpp:131] Top shape: (1)
I0428 19:29:48.560252 22118 net.cpp:139] Memory required for data: 954804
I0428 19:29:48.560256 22118 layer_factory.hpp:77] Creating layer loss
I0428 19:29:48.560263 22118 net.cpp:86] Creating Layer loss
I0428 19:29:48.560267 22118 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:48.560271 22118 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:48.560276 22118 net.cpp:382] loss -> loss
I0428 19:29:48.560284 22118 layer_factory.hpp:77] Creating layer loss
I0428 19:29:48.560581 22118 net.cpp:124] Setting up loss
I0428 19:29:48.560591 22118 net.cpp:131] Top shape: (1)
I0428 19:29:48.560595 22118 net.cpp:134]     with loss weight 1
I0428 19:29:48.560602 22118 net.cpp:139] Memory required for data: 954808
I0428 19:29:48.560606 22118 net.cpp:200] loss needs backward computation.
I0428 19:29:48.560611 22118 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:48.560616 22118 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:48.560618 22118 net.cpp:200] relu3 needs backward computation.
I0428 19:29:48.560621 22118 net.cpp:200] ip3 needs backward computation.
I0428 19:29:48.560626 22118 net.cpp:200] relu2 needs backward computation.
I0428 19:29:48.560628 22118 net.cpp:200] ip2 needs backward computation.
I0428 19:29:48.560641 22118 net.cpp:200] relu1 needs backward computation.
I0428 19:29:48.560643 22118 net.cpp:200] ip1 needs backward computation.
I0428 19:29:48.560647 22118 net.cpp:200] pool0 needs backward computation.
I0428 19:29:48.560650 22118 net.cpp:200] conv0 needs backward computation.
I0428 19:29:48.560654 22118 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:48.560658 22118 net.cpp:202] mnist does not need backward computation.
I0428 19:29:48.560662 22118 net.cpp:244] This network produces output accuracy
I0428 19:29:48.560665 22118 net.cpp:244] This network produces output loss
I0428 19:29:48.560679 22118 net.cpp:257] Network initialization done.
I0428 19:29:48.560724 22118 solver.cpp:56] Solver scaffolding done.
I0428 19:29:48.561055 22118 caffe.cpp:248] Starting Optimization
I0428 19:29:48.561064 22118 solver.cpp:273] Solving LeNet
I0428 19:29:48.561067 22118 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:48.561944 22118 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:48.564580 22118 blocking_queue.cpp:49] Waiting for data
I0428 19:29:48.633689 22125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:48.634136 22118 solver.cpp:398]     Test net output #0: accuracy = 0.1264
I0428 19:29:48.634160 22118 solver.cpp:398]     Test net output #1: loss = 2.30289 (* 1 = 2.30289 loss)
I0428 19:29:48.636682 22118 solver.cpp:219] Iteration 0 (-4.62165e-31 iter/s, 0.0755828s/100 iters), loss = 2.29001
I0428 19:29:48.636716 22118 solver.cpp:238]     Train net output #0: loss = 2.29001 (* 1 = 2.29001 loss)
I0428 19:29:48.636730 22118 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:48.700875 22118 solver.cpp:219] Iteration 100 (1558.88 iter/s, 0.0641485s/100 iters), loss = 1.0637
I0428 19:29:48.700920 22118 solver.cpp:238]     Train net output #0: loss = 1.0637 (* 1 = 1.0637 loss)
I0428 19:29:48.700932 22118 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:48.760781 22118 solver.cpp:219] Iteration 200 (1670.74 iter/s, 0.0598538s/100 iters), loss = 0.687737
I0428 19:29:48.760807 22118 solver.cpp:238]     Train net output #0: loss = 0.687737 (* 1 = 0.687737 loss)
I0428 19:29:48.760821 22118 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:48.817950 22118 solver.cpp:219] Iteration 300 (1750.27 iter/s, 0.0571341s/100 iters), loss = 0.944039
I0428 19:29:48.817976 22118 solver.cpp:238]     Train net output #0: loss = 0.944039 (* 1 = 0.944039 loss)
I0428 19:29:48.817982 22118 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:48.871419 22118 solver.cpp:219] Iteration 400 (1871.6 iter/s, 0.0534301s/100 iters), loss = 0.636924
I0428 19:29:48.871471 22118 solver.cpp:238]     Train net output #0: loss = 0.636924 (* 1 = 0.636924 loss)
I0428 19:29:48.871477 22118 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:48.925858 22118 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:48.997790 22125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:48.998236 22118 solver.cpp:398]     Test net output #0: accuracy = 0.7587
I0428 19:29:48.998272 22118 solver.cpp:398]     Test net output #1: loss = 0.649147 (* 1 = 0.649147 loss)
I0428 19:29:48.998960 22118 solver.cpp:219] Iteration 500 (784.445 iter/s, 0.127479s/100 iters), loss = 0.672126
I0428 19:29:48.999030 22118 solver.cpp:238]     Train net output #0: loss = 0.672126 (* 1 = 0.672126 loss)
I0428 19:29:48.999053 22118 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:49.056443 22118 solver.cpp:219] Iteration 600 (1742.03 iter/s, 0.0574044s/100 iters), loss = 0.630909
I0428 19:29:49.056493 22118 solver.cpp:238]     Train net output #0: loss = 0.630909 (* 1 = 0.630909 loss)
I0428 19:29:49.056500 22118 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:49.112406 22118 solver.cpp:219] Iteration 700 (1788.74 iter/s, 0.0559053s/100 iters), loss = 0.554242
I0428 19:29:49.112455 22118 solver.cpp:238]     Train net output #0: loss = 0.554242 (* 1 = 0.554242 loss)
I0428 19:29:49.112462 22118 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:49.168201 22118 solver.cpp:219] Iteration 800 (1794.01 iter/s, 0.0557412s/100 iters), loss = 0.939767
I0428 19:29:49.168241 22118 solver.cpp:238]     Train net output #0: loss = 0.939767 (* 1 = 0.939767 loss)
I0428 19:29:49.168246 22118 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:49.225473 22118 solver.cpp:219] Iteration 900 (1747.01 iter/s, 0.0572406s/100 iters), loss = 0.872682
I0428 19:29:49.225512 22118 solver.cpp:238]     Train net output #0: loss = 0.872682 (* 1 = 0.872682 loss)
I0428 19:29:49.225517 22118 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:49.244611 22124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:49.281744 22118 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:49.282537 22118 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:49.283053 22118 solver.cpp:311] Iteration 1000, loss = 0.670828
I0428 19:29:49.283069 22118 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:49.357640 22125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:49.358060 22118 solver.cpp:398]     Test net output #0: accuracy = 0.7697
I0428 19:29:49.358094 22118 solver.cpp:398]     Test net output #1: loss = 0.601027 (* 1 = 0.601027 loss)
I0428 19:29:49.358099 22118 solver.cpp:316] Optimization Done.
I0428 19:29:49.358103 22118 caffe.cpp:259] Optimization Done.
