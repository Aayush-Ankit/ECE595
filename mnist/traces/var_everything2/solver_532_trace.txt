I0428 19:48:00.883152 26380 caffe.cpp:218] Using GPUs 0
I0428 19:48:00.924094 26380 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:01.443845 26380 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test532.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:01.444012 26380 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test532.prototxt
I0428 19:48:01.444422 26380 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:01.444445 26380 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:01.444557 26380 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:01.444664 26380 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:01.444802 26380 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:01.444842 26380 net.cpp:86] Creating Layer mnist
I0428 19:48:01.444856 26380 net.cpp:382] mnist -> data
I0428 19:48:01.444887 26380 net.cpp:382] mnist -> label
I0428 19:48:01.446162 26380 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:01.448619 26380 net.cpp:124] Setting up mnist
I0428 19:48:01.448639 26380 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:01.448649 26380 net.cpp:131] Top shape: 64 (64)
I0428 19:48:01.448657 26380 net.cpp:139] Memory required for data: 200960
I0428 19:48:01.448668 26380 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:01.448690 26380 net.cpp:86] Creating Layer conv0
I0428 19:48:01.448715 26380 net.cpp:408] conv0 <- data
I0428 19:48:01.448734 26380 net.cpp:382] conv0 -> conv0
I0428 19:48:01.741804 26380 net.cpp:124] Setting up conv0
I0428 19:48:01.741837 26380 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:01.741842 26380 net.cpp:139] Memory required for data: 938240
I0428 19:48:01.741865 26380 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:01.741884 26380 net.cpp:86] Creating Layer pool0
I0428 19:48:01.741902 26380 net.cpp:408] pool0 <- conv0
I0428 19:48:01.741912 26380 net.cpp:382] pool0 -> pool0
I0428 19:48:01.741976 26380 net.cpp:124] Setting up pool0
I0428 19:48:01.741986 26380 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:01.741991 26380 net.cpp:139] Memory required for data: 1122560
I0428 19:48:01.741998 26380 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:01.742017 26380 net.cpp:86] Creating Layer conv1
I0428 19:48:01.742024 26380 net.cpp:408] conv1 <- pool0
I0428 19:48:01.742034 26380 net.cpp:382] conv1 -> conv1
I0428 19:48:01.744114 26380 net.cpp:124] Setting up conv1
I0428 19:48:01.744133 26380 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:48:01.744140 26380 net.cpp:139] Memory required for data: 1155328
I0428 19:48:01.744155 26380 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:01.744169 26380 net.cpp:86] Creating Layer pool1
I0428 19:48:01.744176 26380 net.cpp:408] pool1 <- conv1
I0428 19:48:01.744186 26380 net.cpp:382] pool1 -> pool1
I0428 19:48:01.744237 26380 net.cpp:124] Setting up pool1
I0428 19:48:01.744248 26380 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:48:01.744254 26380 net.cpp:139] Memory required for data: 1163520
I0428 19:48:01.744261 26380 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:01.744273 26380 net.cpp:86] Creating Layer ip1
I0428 19:48:01.744280 26380 net.cpp:408] ip1 <- pool1
I0428 19:48:01.744290 26380 net.cpp:382] ip1 -> ip1
I0428 19:48:01.744423 26380 net.cpp:124] Setting up ip1
I0428 19:48:01.744434 26380 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:01.744441 26380 net.cpp:139] Memory required for data: 1169920
I0428 19:48:01.744454 26380 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:01.744468 26380 net.cpp:86] Creating Layer relu1
I0428 19:48:01.744478 26380 net.cpp:408] relu1 <- ip1
I0428 19:48:01.744488 26380 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:01.744683 26380 net.cpp:124] Setting up relu1
I0428 19:48:01.744695 26380 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:01.744701 26380 net.cpp:139] Memory required for data: 1176320
I0428 19:48:01.744707 26380 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:01.744719 26380 net.cpp:86] Creating Layer ip2
I0428 19:48:01.744726 26380 net.cpp:408] ip2 <- ip1
I0428 19:48:01.744736 26380 net.cpp:382] ip2 -> ip2
I0428 19:48:01.744864 26380 net.cpp:124] Setting up ip2
I0428 19:48:01.744875 26380 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:01.744881 26380 net.cpp:139] Memory required for data: 1182720
I0428 19:48:01.744891 26380 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:01.744902 26380 net.cpp:86] Creating Layer relu2
I0428 19:48:01.744910 26380 net.cpp:408] relu2 <- ip2
I0428 19:48:01.744917 26380 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:01.745745 26380 net.cpp:124] Setting up relu2
I0428 19:48:01.745761 26380 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:01.745769 26380 net.cpp:139] Memory required for data: 1189120
I0428 19:48:01.745774 26380 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:01.745787 26380 net.cpp:86] Creating Layer ip3
I0428 19:48:01.745793 26380 net.cpp:408] ip3 <- ip2
I0428 19:48:01.745805 26380 net.cpp:382] ip3 -> ip3
I0428 19:48:01.745929 26380 net.cpp:124] Setting up ip3
I0428 19:48:01.745940 26380 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:01.745946 26380 net.cpp:139] Memory required for data: 1191680
I0428 19:48:01.745961 26380 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:01.745972 26380 net.cpp:86] Creating Layer relu3
I0428 19:48:01.745980 26380 net.cpp:408] relu3 <- ip3
I0428 19:48:01.745987 26380 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:01.746184 26380 net.cpp:124] Setting up relu3
I0428 19:48:01.746196 26380 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:01.746202 26380 net.cpp:139] Memory required for data: 1194240
I0428 19:48:01.746208 26380 layer_factory.hpp:77] Creating layer loss
I0428 19:48:01.746219 26380 net.cpp:86] Creating Layer loss
I0428 19:48:01.746225 26380 net.cpp:408] loss <- ip3
I0428 19:48:01.746233 26380 net.cpp:408] loss <- label
I0428 19:48:01.746243 26380 net.cpp:382] loss -> loss
I0428 19:48:01.746269 26380 layer_factory.hpp:77] Creating layer loss
I0428 19:48:01.746541 26380 net.cpp:124] Setting up loss
I0428 19:48:01.746553 26380 net.cpp:131] Top shape: (1)
I0428 19:48:01.746561 26380 net.cpp:134]     with loss weight 1
I0428 19:48:01.746582 26380 net.cpp:139] Memory required for data: 1194244
I0428 19:48:01.746589 26380 net.cpp:200] loss needs backward computation.
I0428 19:48:01.746597 26380 net.cpp:200] relu3 needs backward computation.
I0428 19:48:01.746603 26380 net.cpp:200] ip3 needs backward computation.
I0428 19:48:01.746609 26380 net.cpp:200] relu2 needs backward computation.
I0428 19:48:01.746614 26380 net.cpp:200] ip2 needs backward computation.
I0428 19:48:01.746620 26380 net.cpp:200] relu1 needs backward computation.
I0428 19:48:01.746626 26380 net.cpp:200] ip1 needs backward computation.
I0428 19:48:01.746632 26380 net.cpp:200] pool1 needs backward computation.
I0428 19:48:01.746639 26380 net.cpp:200] conv1 needs backward computation.
I0428 19:48:01.746644 26380 net.cpp:200] pool0 needs backward computation.
I0428 19:48:01.746650 26380 net.cpp:200] conv0 needs backward computation.
I0428 19:48:01.746657 26380 net.cpp:202] mnist does not need backward computation.
I0428 19:48:01.746664 26380 net.cpp:244] This network produces output loss
I0428 19:48:01.746680 26380 net.cpp:257] Network initialization done.
I0428 19:48:01.747053 26380 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test532.prototxt
I0428 19:48:01.747093 26380 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:01.747206 26380 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:01.747340 26380 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:01.747406 26380 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:01.747426 26380 net.cpp:86] Creating Layer mnist
I0428 19:48:01.747436 26380 net.cpp:382] mnist -> data
I0428 19:48:01.747449 26380 net.cpp:382] mnist -> label
I0428 19:48:01.747587 26380 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:01.750129 26380 net.cpp:124] Setting up mnist
I0428 19:48:01.750147 26380 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:01.750157 26380 net.cpp:131] Top shape: 100 (100)
I0428 19:48:01.750164 26380 net.cpp:139] Memory required for data: 314000
I0428 19:48:01.750170 26380 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:01.750205 26380 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:01.750211 26380 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:01.750221 26380 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:01.750234 26380 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:01.750329 26380 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:01.750339 26380 net.cpp:131] Top shape: 100 (100)
I0428 19:48:01.750346 26380 net.cpp:131] Top shape: 100 (100)
I0428 19:48:01.750352 26380 net.cpp:139] Memory required for data: 314800
I0428 19:48:01.750358 26380 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:01.750375 26380 net.cpp:86] Creating Layer conv0
I0428 19:48:01.750383 26380 net.cpp:408] conv0 <- data
I0428 19:48:01.750393 26380 net.cpp:382] conv0 -> conv0
I0428 19:48:01.752102 26380 net.cpp:124] Setting up conv0
I0428 19:48:01.752121 26380 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:01.752128 26380 net.cpp:139] Memory required for data: 1466800
I0428 19:48:01.752144 26380 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:01.752156 26380 net.cpp:86] Creating Layer pool0
I0428 19:48:01.752162 26380 net.cpp:408] pool0 <- conv0
I0428 19:48:01.752173 26380 net.cpp:382] pool0 -> pool0
I0428 19:48:01.752224 26380 net.cpp:124] Setting up pool0
I0428 19:48:01.752234 26380 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:01.752240 26380 net.cpp:139] Memory required for data: 1754800
I0428 19:48:01.752246 26380 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:01.752261 26380 net.cpp:86] Creating Layer conv1
I0428 19:48:01.752269 26380 net.cpp:408] conv1 <- pool0
I0428 19:48:01.752279 26380 net.cpp:382] conv1 -> conv1
I0428 19:48:01.754528 26380 net.cpp:124] Setting up conv1
I0428 19:48:01.754547 26380 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:48:01.754555 26380 net.cpp:139] Memory required for data: 1806000
I0428 19:48:01.754575 26380 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:01.754586 26380 net.cpp:86] Creating Layer pool1
I0428 19:48:01.754601 26380 net.cpp:408] pool1 <- conv1
I0428 19:48:01.754611 26380 net.cpp:382] pool1 -> pool1
I0428 19:48:01.754672 26380 net.cpp:124] Setting up pool1
I0428 19:48:01.754681 26380 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:48:01.754688 26380 net.cpp:139] Memory required for data: 1818800
I0428 19:48:01.754693 26380 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:01.754704 26380 net.cpp:86] Creating Layer ip1
I0428 19:48:01.754710 26380 net.cpp:408] ip1 <- pool1
I0428 19:48:01.754720 26380 net.cpp:382] ip1 -> ip1
I0428 19:48:01.754866 26380 net.cpp:124] Setting up ip1
I0428 19:48:01.754878 26380 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:01.754897 26380 net.cpp:139] Memory required for data: 1828800
I0428 19:48:01.754912 26380 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:01.754922 26380 net.cpp:86] Creating Layer relu1
I0428 19:48:01.754930 26380 net.cpp:408] relu1 <- ip1
I0428 19:48:01.754938 26380 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:01.755131 26380 net.cpp:124] Setting up relu1
I0428 19:48:01.755143 26380 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:01.755149 26380 net.cpp:139] Memory required for data: 1838800
I0428 19:48:01.755156 26380 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:01.755170 26380 net.cpp:86] Creating Layer ip2
I0428 19:48:01.755179 26380 net.cpp:408] ip2 <- ip1
I0428 19:48:01.755190 26380 net.cpp:382] ip2 -> ip2
I0428 19:48:01.755316 26380 net.cpp:124] Setting up ip2
I0428 19:48:01.755326 26380 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:01.755332 26380 net.cpp:139] Memory required for data: 1848800
I0428 19:48:01.755342 26380 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:01.755352 26380 net.cpp:86] Creating Layer relu2
I0428 19:48:01.755359 26380 net.cpp:408] relu2 <- ip2
I0428 19:48:01.755368 26380 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:01.755548 26380 net.cpp:124] Setting up relu2
I0428 19:48:01.755559 26380 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:01.755565 26380 net.cpp:139] Memory required for data: 1858800
I0428 19:48:01.755571 26380 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:01.755583 26380 net.cpp:86] Creating Layer ip3
I0428 19:48:01.755589 26380 net.cpp:408] ip3 <- ip2
I0428 19:48:01.755599 26380 net.cpp:382] ip3 -> ip3
I0428 19:48:01.755738 26380 net.cpp:124] Setting up ip3
I0428 19:48:01.755748 26380 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:01.755755 26380 net.cpp:139] Memory required for data: 1862800
I0428 19:48:01.755769 26380 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:01.755779 26380 net.cpp:86] Creating Layer relu3
I0428 19:48:01.755786 26380 net.cpp:408] relu3 <- ip3
I0428 19:48:01.755795 26380 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:01.756670 26380 net.cpp:124] Setting up relu3
I0428 19:48:01.756685 26380 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:01.756692 26380 net.cpp:139] Memory required for data: 1866800
I0428 19:48:01.756698 26380 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:01.756708 26380 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:01.756714 26380 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:01.756726 26380 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:01.756736 26380 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:01.756804 26380 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:01.756822 26380 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:01.756831 26380 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:01.756837 26380 net.cpp:139] Memory required for data: 1874800
I0428 19:48:01.756844 26380 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:01.756853 26380 net.cpp:86] Creating Layer accuracy
I0428 19:48:01.756860 26380 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:01.756870 26380 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:01.756884 26380 net.cpp:382] accuracy -> accuracy
I0428 19:48:01.756899 26380 net.cpp:124] Setting up accuracy
I0428 19:48:01.756908 26380 net.cpp:131] Top shape: (1)
I0428 19:48:01.756914 26380 net.cpp:139] Memory required for data: 1874804
I0428 19:48:01.756920 26380 layer_factory.hpp:77] Creating layer loss
I0428 19:48:01.756929 26380 net.cpp:86] Creating Layer loss
I0428 19:48:01.756935 26380 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:01.756943 26380 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:01.756952 26380 net.cpp:382] loss -> loss
I0428 19:48:01.756963 26380 layer_factory.hpp:77] Creating layer loss
I0428 19:48:01.757235 26380 net.cpp:124] Setting up loss
I0428 19:48:01.757249 26380 net.cpp:131] Top shape: (1)
I0428 19:48:01.757256 26380 net.cpp:134]     with loss weight 1
I0428 19:48:01.757268 26380 net.cpp:139] Memory required for data: 1874808
I0428 19:48:01.757288 26380 net.cpp:200] loss needs backward computation.
I0428 19:48:01.757297 26380 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:01.757303 26380 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:01.757309 26380 net.cpp:200] relu3 needs backward computation.
I0428 19:48:01.757315 26380 net.cpp:200] ip3 needs backward computation.
I0428 19:48:01.757323 26380 net.cpp:200] relu2 needs backward computation.
I0428 19:48:01.757328 26380 net.cpp:200] ip2 needs backward computation.
I0428 19:48:01.757334 26380 net.cpp:200] relu1 needs backward computation.
I0428 19:48:01.757340 26380 net.cpp:200] ip1 needs backward computation.
I0428 19:48:01.757346 26380 net.cpp:200] pool1 needs backward computation.
I0428 19:48:01.757352 26380 net.cpp:200] conv1 needs backward computation.
I0428 19:48:01.757359 26380 net.cpp:200] pool0 needs backward computation.
I0428 19:48:01.757365 26380 net.cpp:200] conv0 needs backward computation.
I0428 19:48:01.757372 26380 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:01.757380 26380 net.cpp:202] mnist does not need backward computation.
I0428 19:48:01.757385 26380 net.cpp:244] This network produces output accuracy
I0428 19:48:01.757393 26380 net.cpp:244] This network produces output loss
I0428 19:48:01.757412 26380 net.cpp:257] Network initialization done.
I0428 19:48:01.757468 26380 solver.cpp:56] Solver scaffolding done.
I0428 19:48:01.757894 26380 caffe.cpp:248] Starting Optimization
I0428 19:48:01.757902 26380 solver.cpp:273] Solving LeNet
I0428 19:48:01.757907 26380 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:01.758760 26380 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:01.762378 26380 blocking_queue.cpp:49] Waiting for data
I0428 19:48:01.831252 26387 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:01.831739 26380 solver.cpp:398]     Test net output #0: accuracy = 0.0993
I0428 19:48:01.831760 26380 solver.cpp:398]     Test net output #1: loss = 2.32822 (* 1 = 2.32822 loss)
I0428 19:48:01.833626 26380 solver.cpp:219] Iteration 0 (-1.67444e-30 iter/s, 0.0756819s/100 iters), loss = 2.30706
I0428 19:48:01.833698 26380 solver.cpp:238]     Train net output #0: loss = 2.30706 (* 1 = 2.30706 loss)
I0428 19:48:01.833716 26380 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:01.907619 26380 solver.cpp:219] Iteration 100 (1352.28 iter/s, 0.0739493s/100 iters), loss = 0.889221
I0428 19:48:01.907649 26380 solver.cpp:238]     Train net output #0: loss = 0.889221 (* 1 = 0.889221 loss)
I0428 19:48:01.907658 26380 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:01.981204 26380 solver.cpp:219] Iteration 200 (1359.62 iter/s, 0.0735498s/100 iters), loss = 0.691833
I0428 19:48:01.981235 26380 solver.cpp:238]     Train net output #0: loss = 0.691833 (* 1 = 0.691833 loss)
I0428 19:48:01.981245 26380 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:02.050314 26380 solver.cpp:219] Iteration 300 (1447.75 iter/s, 0.0690729s/100 iters), loss = 0.749245
I0428 19:48:02.050341 26380 solver.cpp:238]     Train net output #0: loss = 0.749245 (* 1 = 0.749245 loss)
I0428 19:48:02.050350 26380 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:02.120956 26380 solver.cpp:219] Iteration 400 (1416.23 iter/s, 0.0706098s/100 iters), loss = 0.288891
I0428 19:48:02.120983 26380 solver.cpp:238]     Train net output #0: loss = 0.288891 (* 1 = 0.288891 loss)
I0428 19:48:02.120993 26380 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:02.192414 26380 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:02.267993 26387 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:02.268508 26380 solver.cpp:398]     Test net output #0: accuracy = 0.9194
I0428 19:48:02.268530 26380 solver.cpp:398]     Test net output #1: loss = 0.262511 (* 1 = 0.262511 loss)
I0428 19:48:02.269430 26380 solver.cpp:219] Iteration 500 (673.695 iter/s, 0.148435s/100 iters), loss = 0.233862
I0428 19:48:02.269457 26380 solver.cpp:238]     Train net output #0: loss = 0.233862 (* 1 = 0.233862 loss)
I0428 19:48:02.269495 26380 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:02.345705 26380 solver.cpp:219] Iteration 600 (1311.61 iter/s, 0.0762419s/100 iters), loss = 0.304394
I0428 19:48:02.345733 26380 solver.cpp:238]     Train net output #0: loss = 0.304394 (* 1 = 0.304394 loss)
I0428 19:48:02.345743 26380 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:02.417456 26380 solver.cpp:219] Iteration 700 (1394.39 iter/s, 0.0717158s/100 iters), loss = 0.296167
I0428 19:48:02.417484 26380 solver.cpp:238]     Train net output #0: loss = 0.296167 (* 1 = 0.296167 loss)
I0428 19:48:02.417492 26380 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:02.489114 26380 solver.cpp:219] Iteration 800 (1396.15 iter/s, 0.0716257s/100 iters), loss = 0.313405
I0428 19:48:02.489156 26380 solver.cpp:238]     Train net output #0: loss = 0.313405 (* 1 = 0.313405 loss)
I0428 19:48:02.489166 26380 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:02.561213 26380 solver.cpp:219] Iteration 900 (1387.89 iter/s, 0.0720517s/100 iters), loss = 0.304135
I0428 19:48:02.561241 26380 solver.cpp:238]     Train net output #0: loss = 0.304135 (* 1 = 0.304135 loss)
I0428 19:48:02.561251 26380 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:02.585003 26386 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:02.631273 26380 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:02.631907 26380 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:02.632436 26380 solver.cpp:311] Iteration 1000, loss = 0.380347
I0428 19:48:02.632452 26380 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:02.707509 26387 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:02.707999 26380 solver.cpp:398]     Test net output #0: accuracy = 0.9441
I0428 19:48:02.708024 26380 solver.cpp:398]     Test net output #1: loss = 0.181287 (* 1 = 0.181287 loss)
I0428 19:48:02.708031 26380 solver.cpp:316] Optimization Done.
I0428 19:48:02.708039 26380 caffe.cpp:259] Optimization Done.
