I0428 19:55:52.594689 28294 caffe.cpp:218] Using GPUs 0
I0428 19:55:52.632122 28294 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:53.141223 28294 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test742.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:53.141363 28294 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test742.prototxt
I0428 19:55:53.141705 28294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:53.141721 28294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:53.141803 28294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:53.141875 28294 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:53.141973 28294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:53.141996 28294 net.cpp:86] Creating Layer mnist
I0428 19:55:53.142005 28294 net.cpp:382] mnist -> data
I0428 19:55:53.142029 28294 net.cpp:382] mnist -> label
I0428 19:55:53.143115 28294 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:53.145581 28294 net.cpp:124] Setting up mnist
I0428 19:55:53.145599 28294 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:53.145607 28294 net.cpp:131] Top shape: 64 (64)
I0428 19:55:53.145611 28294 net.cpp:139] Memory required for data: 200960
I0428 19:55:53.145618 28294 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:53.145634 28294 net.cpp:86] Creating Layer conv0
I0428 19:55:53.145639 28294 net.cpp:408] conv0 <- data
I0428 19:55:53.145653 28294 net.cpp:382] conv0 -> conv0
I0428 19:55:53.380822 28294 net.cpp:124] Setting up conv0
I0428 19:55:53.380862 28294 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:55:53.380867 28294 net.cpp:139] Memory required for data: 1675520
I0428 19:55:53.380897 28294 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:53.380909 28294 net.cpp:86] Creating Layer pool0
I0428 19:55:53.380913 28294 net.cpp:408] pool0 <- conv0
I0428 19:55:53.380918 28294 net.cpp:382] pool0 -> pool0
I0428 19:55:53.380985 28294 net.cpp:124] Setting up pool0
I0428 19:55:53.380990 28294 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:55:53.381009 28294 net.cpp:139] Memory required for data: 2044160
I0428 19:55:53.381012 28294 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:53.381024 28294 net.cpp:86] Creating Layer conv1
I0428 19:55:53.381027 28294 net.cpp:408] conv1 <- pool0
I0428 19:55:53.381032 28294 net.cpp:382] conv1 -> conv1
I0428 19:55:53.382887 28294 net.cpp:124] Setting up conv1
I0428 19:55:53.382925 28294 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:55:53.382927 28294 net.cpp:139] Memory required for data: 2076928
I0428 19:55:53.382936 28294 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:53.382943 28294 net.cpp:86] Creating Layer pool1
I0428 19:55:53.382946 28294 net.cpp:408] pool1 <- conv1
I0428 19:55:53.382951 28294 net.cpp:382] pool1 -> pool1
I0428 19:55:53.383002 28294 net.cpp:124] Setting up pool1
I0428 19:55:53.383008 28294 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:55:53.383010 28294 net.cpp:139] Memory required for data: 2085120
I0428 19:55:53.383013 28294 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:53.383020 28294 net.cpp:86] Creating Layer ip1
I0428 19:55:53.383023 28294 net.cpp:408] ip1 <- pool1
I0428 19:55:53.383028 28294 net.cpp:382] ip1 -> ip1
I0428 19:55:53.383118 28294 net.cpp:124] Setting up ip1
I0428 19:55:53.383126 28294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:53.383128 28294 net.cpp:139] Memory required for data: 2087680
I0428 19:55:53.383136 28294 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:53.383141 28294 net.cpp:86] Creating Layer relu1
I0428 19:55:53.383143 28294 net.cpp:408] relu1 <- ip1
I0428 19:55:53.383147 28294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:53.383306 28294 net.cpp:124] Setting up relu1
I0428 19:55:53.383313 28294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:53.383317 28294 net.cpp:139] Memory required for data: 2090240
I0428 19:55:53.383321 28294 layer_factory.hpp:77] Creating layer loss
I0428 19:55:53.383325 28294 net.cpp:86] Creating Layer loss
I0428 19:55:53.383328 28294 net.cpp:408] loss <- ip1
I0428 19:55:53.383332 28294 net.cpp:408] loss <- label
I0428 19:55:53.383337 28294 net.cpp:382] loss -> loss
I0428 19:55:53.383355 28294 layer_factory.hpp:77] Creating layer loss
I0428 19:55:53.384178 28294 net.cpp:124] Setting up loss
I0428 19:55:53.384191 28294 net.cpp:131] Top shape: (1)
I0428 19:55:53.384209 28294 net.cpp:134]     with loss weight 1
I0428 19:55:53.384224 28294 net.cpp:139] Memory required for data: 2090244
I0428 19:55:53.384227 28294 net.cpp:200] loss needs backward computation.
I0428 19:55:53.384232 28294 net.cpp:200] relu1 needs backward computation.
I0428 19:55:53.384234 28294 net.cpp:200] ip1 needs backward computation.
I0428 19:55:53.384238 28294 net.cpp:200] pool1 needs backward computation.
I0428 19:55:53.384241 28294 net.cpp:200] conv1 needs backward computation.
I0428 19:55:53.384244 28294 net.cpp:200] pool0 needs backward computation.
I0428 19:55:53.384248 28294 net.cpp:200] conv0 needs backward computation.
I0428 19:55:53.384250 28294 net.cpp:202] mnist does not need backward computation.
I0428 19:55:53.384253 28294 net.cpp:244] This network produces output loss
I0428 19:55:53.384263 28294 net.cpp:257] Network initialization done.
I0428 19:55:53.384536 28294 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test742.prototxt
I0428 19:55:53.384560 28294 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:53.384649 28294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:53.384723 28294 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:53.384764 28294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:53.384775 28294 net.cpp:86] Creating Layer mnist
I0428 19:55:53.384779 28294 net.cpp:382] mnist -> data
I0428 19:55:53.384788 28294 net.cpp:382] mnist -> label
I0428 19:55:53.384888 28294 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:53.386920 28294 net.cpp:124] Setting up mnist
I0428 19:55:53.386948 28294 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:53.386953 28294 net.cpp:131] Top shape: 100 (100)
I0428 19:55:53.386956 28294 net.cpp:139] Memory required for data: 314000
I0428 19:55:53.386960 28294 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:53.386988 28294 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:53.386992 28294 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:53.386996 28294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:53.387003 28294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:53.387038 28294 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:53.387043 28294 net.cpp:131] Top shape: 100 (100)
I0428 19:55:53.387048 28294 net.cpp:131] Top shape: 100 (100)
I0428 19:55:53.387049 28294 net.cpp:139] Memory required for data: 314800
I0428 19:55:53.387053 28294 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:53.387060 28294 net.cpp:86] Creating Layer conv0
I0428 19:55:53.387063 28294 net.cpp:408] conv0 <- data
I0428 19:55:53.387068 28294 net.cpp:382] conv0 -> conv0
I0428 19:55:53.388034 28294 net.cpp:124] Setting up conv0
I0428 19:55:53.388046 28294 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:55:53.388051 28294 net.cpp:139] Memory required for data: 2618800
I0428 19:55:53.388058 28294 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:53.388082 28294 net.cpp:86] Creating Layer pool0
I0428 19:55:53.388084 28294 net.cpp:408] pool0 <- conv0
I0428 19:55:53.388089 28294 net.cpp:382] pool0 -> pool0
I0428 19:55:53.388124 28294 net.cpp:124] Setting up pool0
I0428 19:55:53.388130 28294 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:55:53.388133 28294 net.cpp:139] Memory required for data: 3194800
I0428 19:55:53.388136 28294 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:53.388146 28294 net.cpp:86] Creating Layer conv1
I0428 19:55:53.388149 28294 net.cpp:408] conv1 <- pool0
I0428 19:55:53.388154 28294 net.cpp:382] conv1 -> conv1
I0428 19:55:53.390359 28294 net.cpp:124] Setting up conv1
I0428 19:55:53.390372 28294 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:55:53.390377 28294 net.cpp:139] Memory required for data: 3246000
I0428 19:55:53.390385 28294 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:53.390393 28294 net.cpp:86] Creating Layer pool1
I0428 19:55:53.390420 28294 net.cpp:408] pool1 <- conv1
I0428 19:55:53.390426 28294 net.cpp:382] pool1 -> pool1
I0428 19:55:53.390501 28294 net.cpp:124] Setting up pool1
I0428 19:55:53.390508 28294 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:55:53.390525 28294 net.cpp:139] Memory required for data: 3258800
I0428 19:55:53.390528 28294 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:53.390535 28294 net.cpp:86] Creating Layer ip1
I0428 19:55:53.390538 28294 net.cpp:408] ip1 <- pool1
I0428 19:55:53.390542 28294 net.cpp:382] ip1 -> ip1
I0428 19:55:53.390679 28294 net.cpp:124] Setting up ip1
I0428 19:55:53.390687 28294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:53.390691 28294 net.cpp:139] Memory required for data: 3262800
I0428 19:55:53.390697 28294 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:53.390704 28294 net.cpp:86] Creating Layer relu1
I0428 19:55:53.390707 28294 net.cpp:408] relu1 <- ip1
I0428 19:55:53.390712 28294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:53.391477 28294 net.cpp:124] Setting up relu1
I0428 19:55:53.391491 28294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:53.391495 28294 net.cpp:139] Memory required for data: 3266800
I0428 19:55:53.391499 28294 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:55:53.391520 28294 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:55:53.391525 28294 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:55:53.391530 28294 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:55:53.391535 28294 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:55:53.391582 28294 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:55:53.391588 28294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:53.391592 28294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:53.391595 28294 net.cpp:139] Memory required for data: 3274800
I0428 19:55:53.391598 28294 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:53.391618 28294 net.cpp:86] Creating Layer accuracy
I0428 19:55:53.391620 28294 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:55:53.391624 28294 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:53.391630 28294 net.cpp:382] accuracy -> accuracy
I0428 19:55:53.391638 28294 net.cpp:124] Setting up accuracy
I0428 19:55:53.391643 28294 net.cpp:131] Top shape: (1)
I0428 19:55:53.391644 28294 net.cpp:139] Memory required for data: 3274804
I0428 19:55:53.391647 28294 layer_factory.hpp:77] Creating layer loss
I0428 19:55:53.391654 28294 net.cpp:86] Creating Layer loss
I0428 19:55:53.391656 28294 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:55:53.391660 28294 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:53.391664 28294 net.cpp:382] loss -> loss
I0428 19:55:53.391670 28294 layer_factory.hpp:77] Creating layer loss
I0428 19:55:53.391960 28294 net.cpp:124] Setting up loss
I0428 19:55:53.391970 28294 net.cpp:131] Top shape: (1)
I0428 19:55:53.391973 28294 net.cpp:134]     with loss weight 1
I0428 19:55:53.391978 28294 net.cpp:139] Memory required for data: 3274808
I0428 19:55:53.391981 28294 net.cpp:200] loss needs backward computation.
I0428 19:55:53.391985 28294 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:53.391995 28294 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:55:53.391999 28294 net.cpp:200] relu1 needs backward computation.
I0428 19:55:53.392000 28294 net.cpp:200] ip1 needs backward computation.
I0428 19:55:53.392004 28294 net.cpp:200] pool1 needs backward computation.
I0428 19:55:53.392006 28294 net.cpp:200] conv1 needs backward computation.
I0428 19:55:53.392009 28294 net.cpp:200] pool0 needs backward computation.
I0428 19:55:53.392019 28294 net.cpp:200] conv0 needs backward computation.
I0428 19:55:53.392021 28294 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:53.392024 28294 net.cpp:202] mnist does not need backward computation.
I0428 19:55:53.392027 28294 net.cpp:244] This network produces output accuracy
I0428 19:55:53.392030 28294 net.cpp:244] This network produces output loss
I0428 19:55:53.392050 28294 net.cpp:257] Network initialization done.
I0428 19:55:53.392081 28294 solver.cpp:56] Solver scaffolding done.
I0428 19:55:53.392289 28294 caffe.cpp:248] Starting Optimization
I0428 19:55:53.392295 28294 solver.cpp:273] Solving LeNet
I0428 19:55:53.392298 28294 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:53.393074 28294 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:53.396422 28294 blocking_queue.cpp:49] Waiting for data
I0428 19:55:53.468453 28301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:53.468924 28294 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 19:55:53.468943 28294 solver.cpp:398]     Test net output #1: loss = 2.32913 (* 1 = 2.32913 loss)
I0428 19:55:53.471233 28294 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789094s/100 iters), loss = 2.32909
I0428 19:55:53.471273 28294 solver.cpp:238]     Train net output #0: loss = 2.32909 (* 1 = 2.32909 loss)
I0428 19:55:53.471287 28294 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:53.545127 28294 solver.cpp:219] Iteration 100 (1354.19 iter/s, 0.0738447s/100 iters), loss = 0.801523
I0428 19:55:53.545155 28294 solver.cpp:238]     Train net output #0: loss = 0.801523 (* 1 = 0.801523 loss)
I0428 19:55:53.545161 28294 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:53.616878 28294 solver.cpp:219] Iteration 200 (1394.41 iter/s, 0.071715s/100 iters), loss = 0.444771
I0428 19:55:53.616935 28294 solver.cpp:238]     Train net output #0: loss = 0.444771 (* 1 = 0.444771 loss)
I0428 19:55:53.616940 28294 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:53.682433 28294 solver.cpp:219] Iteration 300 (1526.93 iter/s, 0.0654911s/100 iters), loss = 0.30393
I0428 19:55:53.682456 28294 solver.cpp:238]     Train net output #0: loss = 0.30393 (* 1 = 0.30393 loss)
I0428 19:55:53.682463 28294 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:53.752862 28294 solver.cpp:219] Iteration 400 (1420.52 iter/s, 0.0703967s/100 iters), loss = 0.254961
I0428 19:55:53.752902 28294 solver.cpp:238]     Train net output #0: loss = 0.254961 (* 1 = 0.254961 loss)
I0428 19:55:53.752907 28294 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:53.815537 28294 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:53.891064 28301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:53.891544 28294 solver.cpp:398]     Test net output #0: accuracy = 0.9055
I0428 19:55:53.891562 28294 solver.cpp:398]     Test net output #1: loss = 0.325196 (* 1 = 0.325196 loss)
I0428 19:55:53.892307 28294 solver.cpp:219] Iteration 500 (717.391 iter/s, 0.139394s/100 iters), loss = 0.468719
I0428 19:55:53.892329 28294 solver.cpp:238]     Train net output #0: loss = 0.468719 (* 1 = 0.468719 loss)
I0428 19:55:53.892335 28294 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:53.964942 28294 solver.cpp:219] Iteration 600 (1377.36 iter/s, 0.0726026s/100 iters), loss = 0.267211
I0428 19:55:53.964967 28294 solver.cpp:238]     Train net output #0: loss = 0.267211 (* 1 = 0.267211 loss)
I0428 19:55:53.964973 28294 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:54.028254 28294 solver.cpp:219] Iteration 700 (1580.3 iter/s, 0.0632791s/100 iters), loss = 0.351132
I0428 19:55:54.028278 28294 solver.cpp:238]     Train net output #0: loss = 0.351132 (* 1 = 0.351132 loss)
I0428 19:55:54.028283 28294 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:54.086920 28294 solver.cpp:219] Iteration 800 (1705.52 iter/s, 0.0586333s/100 iters), loss = 0.361403
I0428 19:55:54.086942 28294 solver.cpp:238]     Train net output #0: loss = 0.361403 (* 1 = 0.361403 loss)
I0428 19:55:54.086963 28294 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:54.146585 28294 solver.cpp:219] Iteration 900 (1676.87 iter/s, 0.0596347s/100 iters), loss = 0.347174
I0428 19:55:54.146623 28294 solver.cpp:238]     Train net output #0: loss = 0.347174 (* 1 = 0.347174 loss)
I0428 19:55:54.146630 28294 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:54.166636 28300 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:54.206207 28294 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:54.206697 28294 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:54.207021 28294 solver.cpp:311] Iteration 1000, loss = 0.209751
I0428 19:55:54.207036 28294 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:54.282260 28301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:54.283015 28294 solver.cpp:398]     Test net output #0: accuracy = 0.9389
I0428 19:55:54.283054 28294 solver.cpp:398]     Test net output #1: loss = 0.205844 (* 1 = 0.205844 loss)
I0428 19:55:54.283071 28294 solver.cpp:316] Optimization Done.
I0428 19:55:54.283082 28294 caffe.cpp:259] Optimization Done.
