I0428 19:43:42.988060 25413 caffe.cpp:218] Using GPUs 0
I0428 19:43:43.025817 25413 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:43.537185 25413 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test429.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:43.537328 25413 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test429.prototxt
I0428 19:43:43.537678 25413 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:43.537693 25413 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:43.537775 25413 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:43:43.537845 25413 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:43.537947 25413 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:43.537972 25413 net.cpp:86] Creating Layer mnist
I0428 19:43:43.537981 25413 net.cpp:382] mnist -> data
I0428 19:43:43.538003 25413 net.cpp:382] mnist -> label
I0428 19:43:43.539096 25413 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:43.541568 25413 net.cpp:124] Setting up mnist
I0428 19:43:43.541587 25413 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:43.541594 25413 net.cpp:131] Top shape: 64 (64)
I0428 19:43:43.541596 25413 net.cpp:139] Memory required for data: 200960
I0428 19:43:43.541604 25413 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:43.541620 25413 net.cpp:86] Creating Layer conv0
I0428 19:43:43.541627 25413 net.cpp:408] conv0 <- data
I0428 19:43:43.541640 25413 net.cpp:382] conv0 -> conv0
I0428 19:43:43.826122 25413 net.cpp:124] Setting up conv0
I0428 19:43:43.826148 25413 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:43.826153 25413 net.cpp:139] Memory required for data: 495872
I0428 19:43:43.826167 25413 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:43.826180 25413 net.cpp:86] Creating Layer pool0
I0428 19:43:43.826184 25413 net.cpp:408] pool0 <- conv0
I0428 19:43:43.826206 25413 net.cpp:382] pool0 -> pool0
I0428 19:43:43.826256 25413 net.cpp:124] Setting up pool0
I0428 19:43:43.826262 25413 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:43.826280 25413 net.cpp:139] Memory required for data: 569600
I0428 19:43:43.826284 25413 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:43.826297 25413 net.cpp:86] Creating Layer conv1
I0428 19:43:43.826300 25413 net.cpp:408] conv1 <- pool0
I0428 19:43:43.826306 25413 net.cpp:382] conv1 -> conv1
I0428 19:43:43.829159 25413 net.cpp:124] Setting up conv1
I0428 19:43:43.829174 25413 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:43:43.829177 25413 net.cpp:139] Memory required for data: 1388800
I0428 19:43:43.829186 25413 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:43.829195 25413 net.cpp:86] Creating Layer pool1
I0428 19:43:43.829198 25413 net.cpp:408] pool1 <- conv1
I0428 19:43:43.829203 25413 net.cpp:382] pool1 -> pool1
I0428 19:43:43.829258 25413 net.cpp:124] Setting up pool1
I0428 19:43:43.829265 25413 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:43:43.829268 25413 net.cpp:139] Memory required for data: 1593600
I0428 19:43:43.829272 25413 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:43.829279 25413 net.cpp:86] Creating Layer ip1
I0428 19:43:43.829282 25413 net.cpp:408] ip1 <- pool1
I0428 19:43:43.829288 25413 net.cpp:382] ip1 -> ip1
I0428 19:43:43.830297 25413 net.cpp:124] Setting up ip1
I0428 19:43:43.830312 25413 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:43.830330 25413 net.cpp:139] Memory required for data: 1596160
I0428 19:43:43.830339 25413 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:43.830346 25413 net.cpp:86] Creating Layer relu1
I0428 19:43:43.830350 25413 net.cpp:408] relu1 <- ip1
I0428 19:43:43.830355 25413 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:43.830562 25413 net.cpp:124] Setting up relu1
I0428 19:43:43.830571 25413 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:43.830574 25413 net.cpp:139] Memory required for data: 1598720
I0428 19:43:43.830579 25413 layer_factory.hpp:77] Creating layer loss
I0428 19:43:43.830585 25413 net.cpp:86] Creating Layer loss
I0428 19:43:43.830587 25413 net.cpp:408] loss <- ip1
I0428 19:43:43.830592 25413 net.cpp:408] loss <- label
I0428 19:43:43.830597 25413 net.cpp:382] loss -> loss
I0428 19:43:43.830612 25413 layer_factory.hpp:77] Creating layer loss
I0428 19:43:43.831490 25413 net.cpp:124] Setting up loss
I0428 19:43:43.831501 25413 net.cpp:131] Top shape: (1)
I0428 19:43:43.831521 25413 net.cpp:134]     with loss weight 1
I0428 19:43:43.831535 25413 net.cpp:139] Memory required for data: 1598724
I0428 19:43:43.831538 25413 net.cpp:200] loss needs backward computation.
I0428 19:43:43.831542 25413 net.cpp:200] relu1 needs backward computation.
I0428 19:43:43.831547 25413 net.cpp:200] ip1 needs backward computation.
I0428 19:43:43.831549 25413 net.cpp:200] pool1 needs backward computation.
I0428 19:43:43.831552 25413 net.cpp:200] conv1 needs backward computation.
I0428 19:43:43.831555 25413 net.cpp:200] pool0 needs backward computation.
I0428 19:43:43.831558 25413 net.cpp:200] conv0 needs backward computation.
I0428 19:43:43.831562 25413 net.cpp:202] mnist does not need backward computation.
I0428 19:43:43.831565 25413 net.cpp:244] This network produces output loss
I0428 19:43:43.831573 25413 net.cpp:257] Network initialization done.
I0428 19:43:43.831885 25413 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test429.prototxt
I0428 19:43:43.831943 25413 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:43.832026 25413 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:43:43.832111 25413 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:43.832172 25413 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:43.832187 25413 net.cpp:86] Creating Layer mnist
I0428 19:43:43.832192 25413 net.cpp:382] mnist -> data
I0428 19:43:43.832201 25413 net.cpp:382] mnist -> label
I0428 19:43:43.832304 25413 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:43.834389 25413 net.cpp:124] Setting up mnist
I0428 19:43:43.834404 25413 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:43.834431 25413 net.cpp:131] Top shape: 100 (100)
I0428 19:43:43.834434 25413 net.cpp:139] Memory required for data: 314000
I0428 19:43:43.834439 25413 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:43.834445 25413 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:43.834450 25413 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:43.834456 25413 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:43.834463 25413 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:43.834564 25413 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:43.834573 25413 net.cpp:131] Top shape: 100 (100)
I0428 19:43:43.834578 25413 net.cpp:131] Top shape: 100 (100)
I0428 19:43:43.834580 25413 net.cpp:139] Memory required for data: 314800
I0428 19:43:43.834583 25413 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:43.834594 25413 net.cpp:86] Creating Layer conv0
I0428 19:43:43.834596 25413 net.cpp:408] conv0 <- data
I0428 19:43:43.834602 25413 net.cpp:382] conv0 -> conv0
I0428 19:43:43.835347 25413 net.cpp:124] Setting up conv0
I0428 19:43:43.835358 25413 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:43.835377 25413 net.cpp:139] Memory required for data: 775600
I0428 19:43:43.835387 25413 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:43.835407 25413 net.cpp:86] Creating Layer pool0
I0428 19:43:43.835412 25413 net.cpp:408] pool0 <- conv0
I0428 19:43:43.835415 25413 net.cpp:382] pool0 -> pool0
I0428 19:43:43.835449 25413 net.cpp:124] Setting up pool0
I0428 19:43:43.835455 25413 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:43.835458 25413 net.cpp:139] Memory required for data: 890800
I0428 19:43:43.835460 25413 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:43.835469 25413 net.cpp:86] Creating Layer conv1
I0428 19:43:43.835472 25413 net.cpp:408] conv1 <- pool0
I0428 19:43:43.835477 25413 net.cpp:382] conv1 -> conv1
I0428 19:43:43.837110 25413 net.cpp:124] Setting up conv1
I0428 19:43:43.837139 25413 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:43:43.837143 25413 net.cpp:139] Memory required for data: 2170800
I0428 19:43:43.837152 25413 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:43.837157 25413 net.cpp:86] Creating Layer pool1
I0428 19:43:43.837173 25413 net.cpp:408] pool1 <- conv1
I0428 19:43:43.837180 25413 net.cpp:382] pool1 -> pool1
I0428 19:43:43.837267 25413 net.cpp:124] Setting up pool1
I0428 19:43:43.837291 25413 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:43:43.837294 25413 net.cpp:139] Memory required for data: 2490800
I0428 19:43:43.837299 25413 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:43.837306 25413 net.cpp:86] Creating Layer ip1
I0428 19:43:43.837309 25413 net.cpp:408] ip1 <- pool1
I0428 19:43:43.837316 25413 net.cpp:382] ip1 -> ip1
I0428 19:43:43.837463 25413 net.cpp:124] Setting up ip1
I0428 19:43:43.837474 25413 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:43.837477 25413 net.cpp:139] Memory required for data: 2494800
I0428 19:43:43.837486 25413 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:43.837491 25413 net.cpp:86] Creating Layer relu1
I0428 19:43:43.837494 25413 net.cpp:408] relu1 <- ip1
I0428 19:43:43.837499 25413 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:43.838402 25413 net.cpp:124] Setting up relu1
I0428 19:43:43.838415 25413 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:43.838419 25413 net.cpp:139] Memory required for data: 2498800
I0428 19:43:43.838424 25413 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:43:43.838433 25413 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:43:43.838436 25413 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:43:43.838443 25413 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:43:43.838450 25413 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:43:43.838492 25413 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:43:43.838497 25413 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:43.838501 25413 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:43.838505 25413 net.cpp:139] Memory required for data: 2506800
I0428 19:43:43.838508 25413 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:43.838513 25413 net.cpp:86] Creating Layer accuracy
I0428 19:43:43.838517 25413 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:43:43.838521 25413 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:43.838526 25413 net.cpp:382] accuracy -> accuracy
I0428 19:43:43.838534 25413 net.cpp:124] Setting up accuracy
I0428 19:43:43.838538 25413 net.cpp:131] Top shape: (1)
I0428 19:43:43.838542 25413 net.cpp:139] Memory required for data: 2506804
I0428 19:43:43.838546 25413 layer_factory.hpp:77] Creating layer loss
I0428 19:43:43.838549 25413 net.cpp:86] Creating Layer loss
I0428 19:43:43.838553 25413 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:43:43.838557 25413 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:43.838562 25413 net.cpp:382] loss -> loss
I0428 19:43:43.838568 25413 layer_factory.hpp:77] Creating layer loss
I0428 19:43:43.838822 25413 net.cpp:124] Setting up loss
I0428 19:43:43.838832 25413 net.cpp:131] Top shape: (1)
I0428 19:43:43.838835 25413 net.cpp:134]     with loss weight 1
I0428 19:43:43.838842 25413 net.cpp:139] Memory required for data: 2506808
I0428 19:43:43.838846 25413 net.cpp:200] loss needs backward computation.
I0428 19:43:43.838850 25413 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:43.838853 25413 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:43:43.838856 25413 net.cpp:200] relu1 needs backward computation.
I0428 19:43:43.838860 25413 net.cpp:200] ip1 needs backward computation.
I0428 19:43:43.838862 25413 net.cpp:200] pool1 needs backward computation.
I0428 19:43:43.838866 25413 net.cpp:200] conv1 needs backward computation.
I0428 19:43:43.838871 25413 net.cpp:200] pool0 needs backward computation.
I0428 19:43:43.838873 25413 net.cpp:200] conv0 needs backward computation.
I0428 19:43:43.838877 25413 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:43.838881 25413 net.cpp:202] mnist does not need backward computation.
I0428 19:43:43.838883 25413 net.cpp:244] This network produces output accuracy
I0428 19:43:43.838887 25413 net.cpp:244] This network produces output loss
I0428 19:43:43.838922 25413 net.cpp:257] Network initialization done.
I0428 19:43:43.838960 25413 solver.cpp:56] Solver scaffolding done.
I0428 19:43:43.839193 25413 caffe.cpp:248] Starting Optimization
I0428 19:43:43.839200 25413 solver.cpp:273] Solving LeNet
I0428 19:43:43.839202 25413 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:43.839340 25413 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:43.844669 25413 blocking_queue.cpp:49] Waiting for data
I0428 19:43:43.886008 25420 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:43.886445 25413 solver.cpp:398]     Test net output #0: accuracy = 0.111
I0428 19:43:43.886464 25413 solver.cpp:398]     Test net output #1: loss = 2.31431 (* 1 = 2.31431 loss)
I0428 19:43:43.888445 25413 solver.cpp:219] Iteration 0 (0 iter/s, 0.049217s/100 iters), loss = 2.3148
I0428 19:43:43.888468 25413 solver.cpp:238]     Train net output #0: loss = 2.3148 (* 1 = 2.3148 loss)
I0428 19:43:43.888480 25413 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:43.980664 25413 solver.cpp:219] Iteration 100 (1084.8 iter/s, 0.0921826s/100 iters), loss = 0.885143
I0428 19:43:43.980708 25413 solver.cpp:238]     Train net output #0: loss = 0.885143 (* 1 = 0.885143 loss)
I0428 19:43:43.980717 25413 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:44.076941 25413 solver.cpp:219] Iteration 200 (1039.15 iter/s, 0.0962324s/100 iters), loss = 0.652824
I0428 19:43:44.076975 25413 solver.cpp:238]     Train net output #0: loss = 0.652824 (* 1 = 0.652824 loss)
I0428 19:43:44.076984 25413 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:44.175478 25413 solver.cpp:219] Iteration 300 (1015.31 iter/s, 0.0984924s/100 iters), loss = 0.217097
I0428 19:43:44.175524 25413 solver.cpp:238]     Train net output #0: loss = 0.217097 (* 1 = 0.217097 loss)
I0428 19:43:44.175534 25413 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:44.278914 25413 solver.cpp:219] Iteration 400 (967.229 iter/s, 0.103388s/100 iters), loss = 0.110019
I0428 19:43:44.278957 25413 solver.cpp:238]     Train net output #0: loss = 0.110018 (* 1 = 0.110018 loss)
I0428 19:43:44.278969 25413 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:44.380555 25413 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:44.425321 25420 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:44.425822 25413 solver.cpp:398]     Test net output #0: accuracy = 0.9608
I0428 19:43:44.425848 25413 solver.cpp:398]     Test net output #1: loss = 0.132949 (* 1 = 0.132949 loss)
I0428 19:43:44.426894 25413 solver.cpp:219] Iteration 500 (676.047 iter/s, 0.147919s/100 iters), loss = 0.0792074
I0428 19:43:44.426934 25413 solver.cpp:238]     Train net output #0: loss = 0.0792073 (* 1 = 0.0792073 loss)
I0428 19:43:44.426942 25413 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:44.525925 25413 solver.cpp:219] Iteration 600 (1010.23 iter/s, 0.0989872s/100 iters), loss = 0.173285
I0428 19:43:44.525966 25413 solver.cpp:238]     Train net output #0: loss = 0.173285 (* 1 = 0.173285 loss)
I0428 19:43:44.525975 25413 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:44.621176 25413 solver.cpp:219] Iteration 700 (1050.44 iter/s, 0.0951981s/100 iters), loss = 0.253218
I0428 19:43:44.621225 25413 solver.cpp:238]     Train net output #0: loss = 0.253218 (* 1 = 0.253218 loss)
I0428 19:43:44.621232 25413 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:44.708039 25413 solver.cpp:219] Iteration 800 (1152.26 iter/s, 0.086786s/100 iters), loss = 0.224062
I0428 19:43:44.708070 25413 solver.cpp:238]     Train net output #0: loss = 0.224062 (* 1 = 0.224062 loss)
I0428 19:43:44.708077 25413 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:44.794492 25413 solver.cpp:219] Iteration 900 (1157.24 iter/s, 0.0864123s/100 iters), loss = 0.153374
I0428 19:43:44.794534 25413 solver.cpp:238]     Train net output #0: loss = 0.153374 (* 1 = 0.153374 loss)
I0428 19:43:44.794540 25413 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:44.823539 25419 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:44.879544 25413 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:44.880403 25413 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:44.880937 25413 solver.cpp:311] Iteration 1000, loss = 0.151399
I0428 19:43:44.880954 25413 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:44.938453 25420 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:44.938948 25413 solver.cpp:398]     Test net output #0: accuracy = 0.9706
I0428 19:43:44.938985 25413 solver.cpp:398]     Test net output #1: loss = 0.096269 (* 1 = 0.096269 loss)
I0428 19:43:44.938992 25413 solver.cpp:316] Optimization Done.
I0428 19:43:44.938997 25413 caffe.cpp:259] Optimization Done.
