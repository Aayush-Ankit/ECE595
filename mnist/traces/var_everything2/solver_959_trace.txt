I0428 20:03:48.553520 30271 caffe.cpp:218] Using GPUs 0
I0428 20:03:48.589030 30271 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:49.100036 30271 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test959.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:49.100180 30271 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test959.prototxt
I0428 20:03:49.100599 30271 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:49.100618 30271 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:49.100720 30271 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:49.100802 30271 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:49.100914 30271 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:49.100939 30271 net.cpp:86] Creating Layer mnist
I0428 20:03:49.100947 30271 net.cpp:382] mnist -> data
I0428 20:03:49.100970 30271 net.cpp:382] mnist -> label
I0428 20:03:49.102056 30271 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:49.104495 30271 net.cpp:124] Setting up mnist
I0428 20:03:49.104512 30271 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:49.104518 30271 net.cpp:131] Top shape: 64 (64)
I0428 20:03:49.104522 30271 net.cpp:139] Memory required for data: 200960
I0428 20:03:49.104529 30271 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:49.104570 30271 net.cpp:86] Creating Layer conv0
I0428 20:03:49.104591 30271 net.cpp:408] conv0 <- data
I0428 20:03:49.104605 30271 net.cpp:382] conv0 -> conv0
I0428 20:03:49.367571 30271 net.cpp:124] Setting up conv0
I0428 20:03:49.367596 30271 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:49.367600 30271 net.cpp:139] Memory required for data: 1675520
I0428 20:03:49.367614 30271 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:49.367625 30271 net.cpp:86] Creating Layer pool0
I0428 20:03:49.367629 30271 net.cpp:408] pool0 <- conv0
I0428 20:03:49.367633 30271 net.cpp:382] pool0 -> pool0
I0428 20:03:49.367696 30271 net.cpp:124] Setting up pool0
I0428 20:03:49.367700 30271 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:49.367703 30271 net.cpp:139] Memory required for data: 2044160
I0428 20:03:49.367707 30271 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:49.367717 30271 net.cpp:86] Creating Layer conv1
I0428 20:03:49.367719 30271 net.cpp:408] conv1 <- pool0
I0428 20:03:49.367724 30271 net.cpp:382] conv1 -> conv1
I0428 20:03:49.369874 30271 net.cpp:124] Setting up conv1
I0428 20:03:49.369889 30271 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:49.369894 30271 net.cpp:139] Memory required for data: 3682560
I0428 20:03:49.369904 30271 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:49.369911 30271 net.cpp:86] Creating Layer pool1
I0428 20:03:49.369915 30271 net.cpp:408] pool1 <- conv1
I0428 20:03:49.369920 30271 net.cpp:382] pool1 -> pool1
I0428 20:03:49.369959 30271 net.cpp:124] Setting up pool1
I0428 20:03:49.369974 30271 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:49.369977 30271 net.cpp:139] Memory required for data: 4092160
I0428 20:03:49.369981 30271 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:49.370007 30271 net.cpp:86] Creating Layer ip1
I0428 20:03:49.370012 30271 net.cpp:408] ip1 <- pool1
I0428 20:03:49.370018 30271 net.cpp:382] ip1 -> ip1
I0428 20:03:49.370393 30271 net.cpp:124] Setting up ip1
I0428 20:03:49.370401 30271 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:49.370404 30271 net.cpp:139] Memory required for data: 4098560
I0428 20:03:49.370411 30271 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:49.370416 30271 net.cpp:86] Creating Layer relu1
I0428 20:03:49.370419 30271 net.cpp:408] relu1 <- ip1
I0428 20:03:49.370424 30271 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:49.370615 30271 net.cpp:124] Setting up relu1
I0428 20:03:49.370622 30271 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:49.370625 30271 net.cpp:139] Memory required for data: 4104960
I0428 20:03:49.370630 30271 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:49.370635 30271 net.cpp:86] Creating Layer ip2
I0428 20:03:49.370638 30271 net.cpp:408] ip2 <- ip1
I0428 20:03:49.370642 30271 net.cpp:382] ip2 -> ip2
I0428 20:03:49.370751 30271 net.cpp:124] Setting up ip2
I0428 20:03:49.370759 30271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:49.370761 30271 net.cpp:139] Memory required for data: 4107520
I0428 20:03:49.370782 30271 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:49.370789 30271 net.cpp:86] Creating Layer relu2
I0428 20:03:49.370791 30271 net.cpp:408] relu2 <- ip2
I0428 20:03:49.370795 30271 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:49.371597 30271 net.cpp:124] Setting up relu2
I0428 20:03:49.371608 30271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:49.371628 30271 net.cpp:139] Memory required for data: 4110080
I0428 20:03:49.371630 30271 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:49.371637 30271 net.cpp:86] Creating Layer ip3
I0428 20:03:49.371640 30271 net.cpp:408] ip3 <- ip2
I0428 20:03:49.371646 30271 net.cpp:382] ip3 -> ip3
I0428 20:03:49.371758 30271 net.cpp:124] Setting up ip3
I0428 20:03:49.371765 30271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:49.371783 30271 net.cpp:139] Memory required for data: 4112640
I0428 20:03:49.371791 30271 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:49.371796 30271 net.cpp:86] Creating Layer relu3
I0428 20:03:49.371799 30271 net.cpp:408] relu3 <- ip3
I0428 20:03:49.371803 30271 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:49.371968 30271 net.cpp:124] Setting up relu3
I0428 20:03:49.371976 30271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:49.371979 30271 net.cpp:139] Memory required for data: 4115200
I0428 20:03:49.371983 30271 layer_factory.hpp:77] Creating layer loss
I0428 20:03:49.371989 30271 net.cpp:86] Creating Layer loss
I0428 20:03:49.371991 30271 net.cpp:408] loss <- ip3
I0428 20:03:49.371995 30271 net.cpp:408] loss <- label
I0428 20:03:49.372000 30271 net.cpp:382] loss -> loss
I0428 20:03:49.372017 30271 layer_factory.hpp:77] Creating layer loss
I0428 20:03:49.372277 30271 net.cpp:124] Setting up loss
I0428 20:03:49.372285 30271 net.cpp:131] Top shape: (1)
I0428 20:03:49.372288 30271 net.cpp:134]     with loss weight 1
I0428 20:03:49.372303 30271 net.cpp:139] Memory required for data: 4115204
I0428 20:03:49.372305 30271 net.cpp:200] loss needs backward computation.
I0428 20:03:49.372309 30271 net.cpp:200] relu3 needs backward computation.
I0428 20:03:49.372313 30271 net.cpp:200] ip3 needs backward computation.
I0428 20:03:49.372315 30271 net.cpp:200] relu2 needs backward computation.
I0428 20:03:49.372318 30271 net.cpp:200] ip2 needs backward computation.
I0428 20:03:49.372321 30271 net.cpp:200] relu1 needs backward computation.
I0428 20:03:49.372323 30271 net.cpp:200] ip1 needs backward computation.
I0428 20:03:49.372326 30271 net.cpp:200] pool1 needs backward computation.
I0428 20:03:49.372344 30271 net.cpp:200] conv1 needs backward computation.
I0428 20:03:49.372347 30271 net.cpp:200] pool0 needs backward computation.
I0428 20:03:49.372349 30271 net.cpp:200] conv0 needs backward computation.
I0428 20:03:49.372354 30271 net.cpp:202] mnist does not need backward computation.
I0428 20:03:49.372372 30271 net.cpp:244] This network produces output loss
I0428 20:03:49.372382 30271 net.cpp:257] Network initialization done.
I0428 20:03:49.372746 30271 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test959.prototxt
I0428 20:03:49.372787 30271 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:49.372900 30271 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:49.372983 30271 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:49.373026 30271 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:49.373037 30271 net.cpp:86] Creating Layer mnist
I0428 20:03:49.373042 30271 net.cpp:382] mnist -> data
I0428 20:03:49.373050 30271 net.cpp:382] mnist -> label
I0428 20:03:49.373133 30271 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:49.375463 30271 net.cpp:124] Setting up mnist
I0428 20:03:49.375493 30271 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:49.375514 30271 net.cpp:131] Top shape: 100 (100)
I0428 20:03:49.375516 30271 net.cpp:139] Memory required for data: 314000
I0428 20:03:49.375520 30271 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:49.375548 30271 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:49.375552 30271 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:49.375557 30271 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:49.375573 30271 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:49.375634 30271 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:49.375658 30271 net.cpp:131] Top shape: 100 (100)
I0428 20:03:49.375661 30271 net.cpp:131] Top shape: 100 (100)
I0428 20:03:49.375664 30271 net.cpp:139] Memory required for data: 314800
I0428 20:03:49.375668 30271 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:49.375679 30271 net.cpp:86] Creating Layer conv0
I0428 20:03:49.375682 30271 net.cpp:408] conv0 <- data
I0428 20:03:49.375687 30271 net.cpp:382] conv0 -> conv0
I0428 20:03:49.377588 30271 net.cpp:124] Setting up conv0
I0428 20:03:49.377616 30271 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:49.377620 30271 net.cpp:139] Memory required for data: 2618800
I0428 20:03:49.377630 30271 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:49.377638 30271 net.cpp:86] Creating Layer pool0
I0428 20:03:49.377641 30271 net.cpp:408] pool0 <- conv0
I0428 20:03:49.377647 30271 net.cpp:382] pool0 -> pool0
I0428 20:03:49.377701 30271 net.cpp:124] Setting up pool0
I0428 20:03:49.377708 30271 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:49.377710 30271 net.cpp:139] Memory required for data: 3194800
I0428 20:03:49.377713 30271 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:49.377723 30271 net.cpp:86] Creating Layer conv1
I0428 20:03:49.377727 30271 net.cpp:408] conv1 <- pool0
I0428 20:03:49.377732 30271 net.cpp:382] conv1 -> conv1
I0428 20:03:49.379534 30271 net.cpp:124] Setting up conv1
I0428 20:03:49.379546 30271 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:49.379567 30271 net.cpp:139] Memory required for data: 5754800
I0428 20:03:49.379576 30271 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:49.379583 30271 net.cpp:86] Creating Layer pool1
I0428 20:03:49.379586 30271 net.cpp:408] pool1 <- conv1
I0428 20:03:49.379592 30271 net.cpp:382] pool1 -> pool1
I0428 20:03:49.379647 30271 net.cpp:124] Setting up pool1
I0428 20:03:49.379652 30271 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:49.379669 30271 net.cpp:139] Memory required for data: 6394800
I0428 20:03:49.379673 30271 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:49.379679 30271 net.cpp:86] Creating Layer ip1
I0428 20:03:49.379683 30271 net.cpp:408] ip1 <- pool1
I0428 20:03:49.379688 30271 net.cpp:382] ip1 -> ip1
I0428 20:03:49.380116 30271 net.cpp:124] Setting up ip1
I0428 20:03:49.380123 30271 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:49.380151 30271 net.cpp:139] Memory required for data: 6404800
I0428 20:03:49.380159 30271 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:49.380165 30271 net.cpp:86] Creating Layer relu1
I0428 20:03:49.380168 30271 net.cpp:408] relu1 <- ip1
I0428 20:03:49.380175 30271 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:49.380491 30271 net.cpp:124] Setting up relu1
I0428 20:03:49.380499 30271 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:49.380503 30271 net.cpp:139] Memory required for data: 6414800
I0428 20:03:49.380507 30271 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:49.380514 30271 net.cpp:86] Creating Layer ip2
I0428 20:03:49.380518 30271 net.cpp:408] ip2 <- ip1
I0428 20:03:49.380523 30271 net.cpp:382] ip2 -> ip2
I0428 20:03:49.380627 30271 net.cpp:124] Setting up ip2
I0428 20:03:49.380635 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.380637 30271 net.cpp:139] Memory required for data: 6418800
I0428 20:03:49.380642 30271 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:49.380648 30271 net.cpp:86] Creating Layer relu2
I0428 20:03:49.380651 30271 net.cpp:408] relu2 <- ip2
I0428 20:03:49.380656 30271 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:49.380830 30271 net.cpp:124] Setting up relu2
I0428 20:03:49.380839 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.380842 30271 net.cpp:139] Memory required for data: 6422800
I0428 20:03:49.380846 30271 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:49.380853 30271 net.cpp:86] Creating Layer ip3
I0428 20:03:49.380861 30271 net.cpp:408] ip3 <- ip2
I0428 20:03:49.380867 30271 net.cpp:382] ip3 -> ip3
I0428 20:03:49.380978 30271 net.cpp:124] Setting up ip3
I0428 20:03:49.380986 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.380990 30271 net.cpp:139] Memory required for data: 6426800
I0428 20:03:49.380997 30271 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:49.381003 30271 net.cpp:86] Creating Layer relu3
I0428 20:03:49.381006 30271 net.cpp:408] relu3 <- ip3
I0428 20:03:49.381009 30271 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:49.382010 30271 net.cpp:124] Setting up relu3
I0428 20:03:49.382024 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.382042 30271 net.cpp:139] Memory required for data: 6430800
I0428 20:03:49.382045 30271 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:49.382051 30271 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:49.382055 30271 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:49.382066 30271 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:49.382072 30271 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:49.382114 30271 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:49.382120 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.382124 30271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:49.382127 30271 net.cpp:139] Memory required for data: 6438800
I0428 20:03:49.382144 30271 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:49.382149 30271 net.cpp:86] Creating Layer accuracy
I0428 20:03:49.382153 30271 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:49.382158 30271 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:49.382163 30271 net.cpp:382] accuracy -> accuracy
I0428 20:03:49.382169 30271 net.cpp:124] Setting up accuracy
I0428 20:03:49.382174 30271 net.cpp:131] Top shape: (1)
I0428 20:03:49.382176 30271 net.cpp:139] Memory required for data: 6438804
I0428 20:03:49.382184 30271 layer_factory.hpp:77] Creating layer loss
I0428 20:03:49.382189 30271 net.cpp:86] Creating Layer loss
I0428 20:03:49.382194 30271 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:49.382197 30271 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:49.382201 30271 net.cpp:382] loss -> loss
I0428 20:03:49.382207 30271 layer_factory.hpp:77] Creating layer loss
I0428 20:03:49.382483 30271 net.cpp:124] Setting up loss
I0428 20:03:49.382491 30271 net.cpp:131] Top shape: (1)
I0428 20:03:49.382494 30271 net.cpp:134]     with loss weight 1
I0428 20:03:49.382522 30271 net.cpp:139] Memory required for data: 6438808
I0428 20:03:49.382526 30271 net.cpp:200] loss needs backward computation.
I0428 20:03:49.382530 30271 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:49.382534 30271 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:49.382553 30271 net.cpp:200] relu3 needs backward computation.
I0428 20:03:49.382556 30271 net.cpp:200] ip3 needs backward computation.
I0428 20:03:49.382560 30271 net.cpp:200] relu2 needs backward computation.
I0428 20:03:49.382562 30271 net.cpp:200] ip2 needs backward computation.
I0428 20:03:49.382565 30271 net.cpp:200] relu1 needs backward computation.
I0428 20:03:49.382567 30271 net.cpp:200] ip1 needs backward computation.
I0428 20:03:49.382576 30271 net.cpp:200] pool1 needs backward computation.
I0428 20:03:49.382580 30271 net.cpp:200] conv1 needs backward computation.
I0428 20:03:49.382583 30271 net.cpp:200] pool0 needs backward computation.
I0428 20:03:49.382586 30271 net.cpp:200] conv0 needs backward computation.
I0428 20:03:49.382591 30271 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:49.382594 30271 net.cpp:202] mnist does not need backward computation.
I0428 20:03:49.382597 30271 net.cpp:244] This network produces output accuracy
I0428 20:03:49.382601 30271 net.cpp:244] This network produces output loss
I0428 20:03:49.382614 30271 net.cpp:257] Network initialization done.
I0428 20:03:49.382657 30271 solver.cpp:56] Solver scaffolding done.
I0428 20:03:49.383033 30271 caffe.cpp:248] Starting Optimization
I0428 20:03:49.383038 30271 solver.cpp:273] Solving LeNet
I0428 20:03:49.383041 30271 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:49.383355 30271 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:49.389488 30271 blocking_queue.cpp:49] Waiting for data
I0428 20:03:49.456146 30278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:49.456765 30271 solver.cpp:398]     Test net output #0: accuracy = 0.1296
I0428 20:03:49.456799 30271 solver.cpp:398]     Test net output #1: loss = 2.29922 (* 1 = 2.29922 loss)
I0428 20:03:49.460512 30271 solver.cpp:219] Iteration 0 (0 iter/s, 0.0774298s/100 iters), loss = 2.31436
I0428 20:03:49.460549 30271 solver.cpp:238]     Train net output #0: loss = 2.31436 (* 1 = 2.31436 loss)
I0428 20:03:49.460561 30271 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:49.614181 30271 solver.cpp:219] Iteration 100 (650.976 iter/s, 0.153616s/100 iters), loss = 1.07949
I0428 20:03:49.614223 30271 solver.cpp:238]     Train net output #0: loss = 1.07949 (* 1 = 1.07949 loss)
I0428 20:03:49.614230 30271 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:49.767052 30271 solver.cpp:219] Iteration 200 (654.309 iter/s, 0.152833s/100 iters), loss = 0.778873
I0428 20:03:49.767091 30271 solver.cpp:238]     Train net output #0: loss = 0.778873 (* 1 = 0.778873 loss)
I0428 20:03:49.767101 30271 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:49.924479 30271 solver.cpp:219] Iteration 300 (635.369 iter/s, 0.157389s/100 iters), loss = 0.926171
I0428 20:03:49.924501 30271 solver.cpp:238]     Train net output #0: loss = 0.926171 (* 1 = 0.926171 loss)
I0428 20:03:49.924507 30271 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:50.078505 30271 solver.cpp:219] Iteration 400 (649.384 iter/s, 0.153992s/100 iters), loss = 0.648466
I0428 20:03:50.078528 30271 solver.cpp:238]     Train net output #0: loss = 0.648466 (* 1 = 0.648466 loss)
I0428 20:03:50.078533 30271 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:50.227560 30271 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:50.303395 30278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:50.304023 30271 solver.cpp:398]     Test net output #0: accuracy = 0.6956
I0428 20:03:50.304041 30271 solver.cpp:398]     Test net output #1: loss = 0.749349 (* 1 = 0.749349 loss)
I0428 20:03:50.305768 30271 solver.cpp:219] Iteration 500 (440.099 iter/s, 0.227222s/100 iters), loss = 0.798696
I0428 20:03:50.305833 30271 solver.cpp:238]     Train net output #0: loss = 0.798696 (* 1 = 0.798696 loss)
I0428 20:03:50.305841 30271 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:50.464548 30271 solver.cpp:219] Iteration 600 (630.105 iter/s, 0.158704s/100 iters), loss = 0.683376
I0428 20:03:50.464572 30271 solver.cpp:238]     Train net output #0: loss = 0.683376 (* 1 = 0.683376 loss)
I0428 20:03:50.464596 30271 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:50.622040 30271 solver.cpp:219] Iteration 700 (635.105 iter/s, 0.157454s/100 iters), loss = 0.819968
I0428 20:03:50.622066 30271 solver.cpp:238]     Train net output #0: loss = 0.819968 (* 1 = 0.819968 loss)
I0428 20:03:50.622092 30271 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:50.776585 30271 solver.cpp:219] Iteration 800 (647.223 iter/s, 0.154506s/100 iters), loss = 1.01089
I0428 20:03:50.776608 30271 solver.cpp:238]     Train net output #0: loss = 1.01089 (* 1 = 1.01089 loss)
I0428 20:03:50.776630 30271 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:50.934041 30271 solver.cpp:219] Iteration 900 (635.246 iter/s, 0.157419s/100 iters), loss = 0.782188
I0428 20:03:50.934082 30271 solver.cpp:238]     Train net output #0: loss = 0.782188 (* 1 = 0.782188 loss)
I0428 20:03:50.934104 30271 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:50.987491 30277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:51.088601 30271 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:51.090791 30271 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:51.091814 30271 solver.cpp:311] Iteration 1000, loss = 0.850613
I0428 20:03:51.091831 30271 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:51.153506 30278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:51.154278 30271 solver.cpp:398]     Test net output #0: accuracy = 0.7901
I0428 20:03:51.154296 30271 solver.cpp:398]     Test net output #1: loss = 0.657614 (* 1 = 0.657614 loss)
I0428 20:03:51.154301 30271 solver.cpp:316] Optimization Done.
I0428 20:03:51.154304 30271 caffe.cpp:259] Optimization Done.
