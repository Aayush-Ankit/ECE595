I0428 20:21:52.505264  1841 caffe.cpp:218] Using GPUs 0
I0428 20:21:52.539885  1841 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:53.045475  1841 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1393.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:53.045614  1841 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1393.prototxt
I0428 20:21:53.046037  1841 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:53.046057  1841 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:53.046160  1841 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:53.046241  1841 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:53.046339  1841 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:53.046362  1841 net.cpp:86] Creating Layer mnist
I0428 20:21:53.046370  1841 net.cpp:382] mnist -> data
I0428 20:21:53.046391  1841 net.cpp:382] mnist -> label
I0428 20:21:53.047480  1841 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:53.049933  1841 net.cpp:124] Setting up mnist
I0428 20:21:53.049952  1841 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:53.049958  1841 net.cpp:131] Top shape: 64 (64)
I0428 20:21:53.049962  1841 net.cpp:139] Memory required for data: 200960
I0428 20:21:53.049968  1841 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:53.050009  1841 net.cpp:86] Creating Layer conv0
I0428 20:21:53.050030  1841 net.cpp:408] conv0 <- data
I0428 20:21:53.050042  1841 net.cpp:382] conv0 -> conv0
I0428 20:21:53.307083  1841 net.cpp:124] Setting up conv0
I0428 20:21:53.307108  1841 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:53.307112  1841 net.cpp:139] Memory required for data: 7573760
I0428 20:21:53.307126  1841 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:53.307138  1841 net.cpp:86] Creating Layer pool0
I0428 20:21:53.307142  1841 net.cpp:408] pool0 <- conv0
I0428 20:21:53.307147  1841 net.cpp:382] pool0 -> pool0
I0428 20:21:53.307232  1841 net.cpp:124] Setting up pool0
I0428 20:21:53.307237  1841 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:53.307240  1841 net.cpp:139] Memory required for data: 9416960
I0428 20:21:53.307242  1841 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:53.307252  1841 net.cpp:86] Creating Layer conv1
I0428 20:21:53.307255  1841 net.cpp:408] conv1 <- pool0
I0428 20:21:53.307260  1841 net.cpp:382] conv1 -> conv1
I0428 20:21:53.309453  1841 net.cpp:124] Setting up conv1
I0428 20:21:53.309483  1841 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:53.309485  1841 net.cpp:139] Memory required for data: 10236160
I0428 20:21:53.309494  1841 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:53.309502  1841 net.cpp:86] Creating Layer pool1
I0428 20:21:53.309506  1841 net.cpp:408] pool1 <- conv1
I0428 20:21:53.309511  1841 net.cpp:382] pool1 -> pool1
I0428 20:21:53.309561  1841 net.cpp:124] Setting up pool1
I0428 20:21:53.309566  1841 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:53.309569  1841 net.cpp:139] Memory required for data: 10440960
I0428 20:21:53.309572  1841 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:53.309579  1841 net.cpp:86] Creating Layer ip1
I0428 20:21:53.309582  1841 net.cpp:408] ip1 <- pool1
I0428 20:21:53.309587  1841 net.cpp:382] ip1 -> ip1
I0428 20:21:53.309793  1841 net.cpp:124] Setting up ip1
I0428 20:21:53.309801  1841 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:53.309804  1841 net.cpp:139] Memory required for data: 10447360
I0428 20:21:53.309813  1841 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:53.309818  1841 net.cpp:86] Creating Layer relu1
I0428 20:21:53.309820  1841 net.cpp:408] relu1 <- ip1
I0428 20:21:53.309824  1841 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:53.309989  1841 net.cpp:124] Setting up relu1
I0428 20:21:53.309998  1841 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:53.310001  1841 net.cpp:139] Memory required for data: 10453760
I0428 20:21:53.310004  1841 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:53.310011  1841 net.cpp:86] Creating Layer ip2
I0428 20:21:53.310014  1841 net.cpp:408] ip2 <- ip1
I0428 20:21:53.310019  1841 net.cpp:382] ip2 -> ip2
I0428 20:21:53.310138  1841 net.cpp:124] Setting up ip2
I0428 20:21:53.310145  1841 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:53.310148  1841 net.cpp:139] Memory required for data: 10466560
I0428 20:21:53.310153  1841 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:53.310159  1841 net.cpp:86] Creating Layer relu2
I0428 20:21:53.310163  1841 net.cpp:408] relu2 <- ip2
I0428 20:21:53.310165  1841 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:53.310936  1841 net.cpp:124] Setting up relu2
I0428 20:21:53.310947  1841 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:53.310966  1841 net.cpp:139] Memory required for data: 10479360
I0428 20:21:53.310969  1841 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:53.310977  1841 net.cpp:86] Creating Layer ip3
I0428 20:21:53.310981  1841 net.cpp:408] ip3 <- ip2
I0428 20:21:53.310986  1841 net.cpp:382] ip3 -> ip3
I0428 20:21:53.311089  1841 net.cpp:124] Setting up ip3
I0428 20:21:53.311095  1841 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:53.311098  1841 net.cpp:139] Memory required for data: 10481920
I0428 20:21:53.311105  1841 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:53.311110  1841 net.cpp:86] Creating Layer relu3
I0428 20:21:53.311113  1841 net.cpp:408] relu3 <- ip3
I0428 20:21:53.311117  1841 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:53.311301  1841 net.cpp:124] Setting up relu3
I0428 20:21:53.311311  1841 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:53.311313  1841 net.cpp:139] Memory required for data: 10484480
I0428 20:21:53.311316  1841 layer_factory.hpp:77] Creating layer loss
I0428 20:21:53.311326  1841 net.cpp:86] Creating Layer loss
I0428 20:21:53.311328  1841 net.cpp:408] loss <- ip3
I0428 20:21:53.311332  1841 net.cpp:408] loss <- label
I0428 20:21:53.311339  1841 net.cpp:382] loss -> loss
I0428 20:21:53.311352  1841 layer_factory.hpp:77] Creating layer loss
I0428 20:21:53.311580  1841 net.cpp:124] Setting up loss
I0428 20:21:53.311589  1841 net.cpp:131] Top shape: (1)
I0428 20:21:53.311592  1841 net.cpp:134]     with loss weight 1
I0428 20:21:53.311605  1841 net.cpp:139] Memory required for data: 10484484
I0428 20:21:53.311609  1841 net.cpp:200] loss needs backward computation.
I0428 20:21:53.311612  1841 net.cpp:200] relu3 needs backward computation.
I0428 20:21:53.311615  1841 net.cpp:200] ip3 needs backward computation.
I0428 20:21:53.311619  1841 net.cpp:200] relu2 needs backward computation.
I0428 20:21:53.311621  1841 net.cpp:200] ip2 needs backward computation.
I0428 20:21:53.311624  1841 net.cpp:200] relu1 needs backward computation.
I0428 20:21:53.311626  1841 net.cpp:200] ip1 needs backward computation.
I0428 20:21:53.311630  1841 net.cpp:200] pool1 needs backward computation.
I0428 20:21:53.311631  1841 net.cpp:200] conv1 needs backward computation.
I0428 20:21:53.311635  1841 net.cpp:200] pool0 needs backward computation.
I0428 20:21:53.311637  1841 net.cpp:200] conv0 needs backward computation.
I0428 20:21:53.311640  1841 net.cpp:202] mnist does not need backward computation.
I0428 20:21:53.311643  1841 net.cpp:244] This network produces output loss
I0428 20:21:53.311655  1841 net.cpp:257] Network initialization done.
I0428 20:21:53.312008  1841 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1393.prototxt
I0428 20:21:53.312050  1841 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:53.312145  1841 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:53.312255  1841 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:53.312299  1841 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:53.312310  1841 net.cpp:86] Creating Layer mnist
I0428 20:21:53.312315  1841 net.cpp:382] mnist -> data
I0428 20:21:53.312322  1841 net.cpp:382] mnist -> label
I0428 20:21:53.312403  1841 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:53.314390  1841 net.cpp:124] Setting up mnist
I0428 20:21:53.314419  1841 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:53.314441  1841 net.cpp:131] Top shape: 100 (100)
I0428 20:21:53.314445  1841 net.cpp:139] Memory required for data: 314000
I0428 20:21:53.314448  1841 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:53.314455  1841 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:53.314457  1841 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:53.314462  1841 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:53.314468  1841 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:53.314556  1841 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:53.314564  1841 net.cpp:131] Top shape: 100 (100)
I0428 20:21:53.314568  1841 net.cpp:131] Top shape: 100 (100)
I0428 20:21:53.314570  1841 net.cpp:139] Memory required for data: 314800
I0428 20:21:53.314574  1841 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:53.314581  1841 net.cpp:86] Creating Layer conv0
I0428 20:21:53.314584  1841 net.cpp:408] conv0 <- data
I0428 20:21:53.314590  1841 net.cpp:382] conv0 -> conv0
I0428 20:21:53.316082  1841 net.cpp:124] Setting up conv0
I0428 20:21:53.316109  1841 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:53.316113  1841 net.cpp:139] Memory required for data: 11834800
I0428 20:21:53.316121  1841 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:53.316128  1841 net.cpp:86] Creating Layer pool0
I0428 20:21:53.316131  1841 net.cpp:408] pool0 <- conv0
I0428 20:21:53.316136  1841 net.cpp:382] pool0 -> pool0
I0428 20:21:53.316201  1841 net.cpp:124] Setting up pool0
I0428 20:21:53.316206  1841 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:53.316210  1841 net.cpp:139] Memory required for data: 14714800
I0428 20:21:53.316212  1841 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:53.316220  1841 net.cpp:86] Creating Layer conv1
I0428 20:21:53.316223  1841 net.cpp:408] conv1 <- pool0
I0428 20:21:53.316229  1841 net.cpp:382] conv1 -> conv1
I0428 20:21:53.318231  1841 net.cpp:124] Setting up conv1
I0428 20:21:53.318248  1841 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:53.318253  1841 net.cpp:139] Memory required for data: 15994800
I0428 20:21:53.318261  1841 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:53.318269  1841 net.cpp:86] Creating Layer pool1
I0428 20:21:53.318271  1841 net.cpp:408] pool1 <- conv1
I0428 20:21:53.318277  1841 net.cpp:382] pool1 -> pool1
I0428 20:21:53.318316  1841 net.cpp:124] Setting up pool1
I0428 20:21:53.318325  1841 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:53.318327  1841 net.cpp:139] Memory required for data: 16314800
I0428 20:21:53.318331  1841 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:53.318344  1841 net.cpp:86] Creating Layer ip1
I0428 20:21:53.318347  1841 net.cpp:408] ip1 <- pool1
I0428 20:21:53.318352  1841 net.cpp:382] ip1 -> ip1
I0428 20:21:53.318599  1841 net.cpp:124] Setting up ip1
I0428 20:21:53.318608  1841 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:53.318620  1841 net.cpp:139] Memory required for data: 16324800
I0428 20:21:53.318629  1841 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:53.318634  1841 net.cpp:86] Creating Layer relu1
I0428 20:21:53.318639  1841 net.cpp:408] relu1 <- ip1
I0428 20:21:53.318642  1841 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:53.318804  1841 net.cpp:124] Setting up relu1
I0428 20:21:53.318812  1841 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:53.318815  1841 net.cpp:139] Memory required for data: 16334800
I0428 20:21:53.318819  1841 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:53.318825  1841 net.cpp:86] Creating Layer ip2
I0428 20:21:53.318828  1841 net.cpp:408] ip2 <- ip1
I0428 20:21:53.318835  1841 net.cpp:382] ip2 -> ip2
I0428 20:21:53.318949  1841 net.cpp:124] Setting up ip2
I0428 20:21:53.318956  1841 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:53.318958  1841 net.cpp:139] Memory required for data: 16354800
I0428 20:21:53.318964  1841 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:53.318969  1841 net.cpp:86] Creating Layer relu2
I0428 20:21:53.318972  1841 net.cpp:408] relu2 <- ip2
I0428 20:21:53.318976  1841 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:53.319197  1841 net.cpp:124] Setting up relu2
I0428 20:21:53.319205  1841 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:53.319209  1841 net.cpp:139] Memory required for data: 16374800
I0428 20:21:53.319212  1841 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:53.319218  1841 net.cpp:86] Creating Layer ip3
I0428 20:21:53.319221  1841 net.cpp:408] ip3 <- ip2
I0428 20:21:53.319227  1841 net.cpp:382] ip3 -> ip3
I0428 20:21:53.319342  1841 net.cpp:124] Setting up ip3
I0428 20:21:53.319350  1841 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:53.319352  1841 net.cpp:139] Memory required for data: 16378800
I0428 20:21:53.319360  1841 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:53.319365  1841 net.cpp:86] Creating Layer relu3
I0428 20:21:53.319367  1841 net.cpp:408] relu3 <- ip3
I0428 20:21:53.319371  1841 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:53.320271  1841 net.cpp:124] Setting up relu3
I0428 20:21:53.320282  1841 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:53.320302  1841 net.cpp:139] Memory required for data: 16382800
I0428 20:21:53.320304  1841 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:53.320309  1841 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:53.320312  1841 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:53.320318  1841 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:53.320324  1841 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:53.320361  1841 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:53.320368  1841 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:53.320371  1841 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:53.320374  1841 net.cpp:139] Memory required for data: 16390800
I0428 20:21:53.320377  1841 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:53.320381  1841 net.cpp:86] Creating Layer accuracy
I0428 20:21:53.320384  1841 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:53.320389  1841 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:53.320392  1841 net.cpp:382] accuracy -> accuracy
I0428 20:21:53.320399  1841 net.cpp:124] Setting up accuracy
I0428 20:21:53.320403  1841 net.cpp:131] Top shape: (1)
I0428 20:21:53.320405  1841 net.cpp:139] Memory required for data: 16390804
I0428 20:21:53.320408  1841 layer_factory.hpp:77] Creating layer loss
I0428 20:21:53.320416  1841 net.cpp:86] Creating Layer loss
I0428 20:21:53.320420  1841 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:53.320422  1841 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:53.320427  1841 net.cpp:382] loss -> loss
I0428 20:21:53.320432  1841 layer_factory.hpp:77] Creating layer loss
I0428 20:21:53.320719  1841 net.cpp:124] Setting up loss
I0428 20:21:53.320727  1841 net.cpp:131] Top shape: (1)
I0428 20:21:53.320731  1841 net.cpp:134]     with loss weight 1
I0428 20:21:53.320746  1841 net.cpp:139] Memory required for data: 16390808
I0428 20:21:53.320750  1841 net.cpp:200] loss needs backward computation.
I0428 20:21:53.320755  1841 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:53.320758  1841 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:53.320762  1841 net.cpp:200] relu3 needs backward computation.
I0428 20:21:53.320765  1841 net.cpp:200] ip3 needs backward computation.
I0428 20:21:53.320768  1841 net.cpp:200] relu2 needs backward computation.
I0428 20:21:53.320771  1841 net.cpp:200] ip2 needs backward computation.
I0428 20:21:53.320775  1841 net.cpp:200] relu1 needs backward computation.
I0428 20:21:53.320782  1841 net.cpp:200] ip1 needs backward computation.
I0428 20:21:53.320786  1841 net.cpp:200] pool1 needs backward computation.
I0428 20:21:53.320789  1841 net.cpp:200] conv1 needs backward computation.
I0428 20:21:53.320793  1841 net.cpp:200] pool0 needs backward computation.
I0428 20:21:53.320796  1841 net.cpp:200] conv0 needs backward computation.
I0428 20:21:53.320801  1841 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:53.320804  1841 net.cpp:202] mnist does not need backward computation.
I0428 20:21:53.320807  1841 net.cpp:244] This network produces output accuracy
I0428 20:21:53.320834  1841 net.cpp:244] This network produces output loss
I0428 20:21:53.320847  1841 net.cpp:257] Network initialization done.
I0428 20:21:53.320904  1841 solver.cpp:56] Solver scaffolding done.
I0428 20:21:53.321279  1841 caffe.cpp:248] Starting Optimization
I0428 20:21:53.321283  1841 solver.cpp:273] Solving LeNet
I0428 20:21:53.321286  1841 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:53.322216  1841 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:53.329676  1841 blocking_queue.cpp:49] Waiting for data
I0428 20:21:53.398300  1849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:53.399425  1841 solver.cpp:398]     Test net output #0: accuracy = 0.1208
I0428 20:21:53.399474  1841 solver.cpp:398]     Test net output #1: loss = 2.30277 (* 1 = 2.30277 loss)
I0428 20:21:53.403707  1841 solver.cpp:219] Iteration 0 (0 iter/s, 0.0823736s/100 iters), loss = 2.27803
I0428 20:21:53.403745  1841 solver.cpp:238]     Train net output #0: loss = 2.27803 (* 1 = 2.27803 loss)
I0428 20:21:53.403756  1841 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:53.562659  1841 solver.cpp:219] Iteration 100 (629.273 iter/s, 0.158914s/100 iters), loss = 0.911749
I0428 20:21:53.562700  1841 solver.cpp:238]     Train net output #0: loss = 0.911749 (* 1 = 0.911749 loss)
I0428 20:21:53.562705  1841 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:53.720723  1841 solver.cpp:219] Iteration 200 (632.804 iter/s, 0.158027s/100 iters), loss = 0.454115
I0428 20:21:53.720767  1841 solver.cpp:238]     Train net output #0: loss = 0.454115 (* 1 = 0.454115 loss)
I0428 20:21:53.720788  1841 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:53.879725  1841 solver.cpp:219] Iteration 300 (629.139 iter/s, 0.158947s/100 iters), loss = 0.337822
I0428 20:21:53.879766  1841 solver.cpp:238]     Train net output #0: loss = 0.337822 (* 1 = 0.337822 loss)
I0428 20:21:53.879773  1841 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:54.035377  1841 solver.cpp:219] Iteration 400 (642.618 iter/s, 0.155613s/100 iters), loss = 0.325691
I0428 20:21:54.035403  1841 solver.cpp:238]     Train net output #0: loss = 0.325691 (* 1 = 0.325691 loss)
I0428 20:21:54.035409  1841 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:54.188374  1841 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:54.261374  1849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:54.263939  1841 solver.cpp:398]     Test net output #0: accuracy = 0.8704
I0428 20:21:54.263975  1841 solver.cpp:398]     Test net output #1: loss = 0.335834 (* 1 = 0.335834 loss)
I0428 20:21:54.265434  1841 solver.cpp:219] Iteration 500 (434.756 iter/s, 0.230014s/100 iters), loss = 0.366
I0428 20:21:54.265486  1841 solver.cpp:238]     Train net output #0: loss = 0.366 (* 1 = 0.366 loss)
I0428 20:21:54.265493  1841 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:54.425251  1841 solver.cpp:219] Iteration 600 (625.909 iter/s, 0.159768s/100 iters), loss = 0.442623
I0428 20:21:54.425292  1841 solver.cpp:238]     Train net output #0: loss = 0.442623 (* 1 = 0.442623 loss)
I0428 20:21:54.425299  1841 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:54.581435  1841 solver.cpp:219] Iteration 700 (640.432 iter/s, 0.156145s/100 iters), loss = 0.396354
I0428 20:21:54.581481  1841 solver.cpp:238]     Train net output #0: loss = 0.396354 (* 1 = 0.396354 loss)
I0428 20:21:54.581488  1841 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:54.738916  1841 solver.cpp:219] Iteration 800 (635.233 iter/s, 0.157423s/100 iters), loss = 0.504853
I0428 20:21:54.738960  1841 solver.cpp:238]     Train net output #0: loss = 0.504853 (* 1 = 0.504853 loss)
I0428 20:21:54.738966  1841 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:54.898679  1841 solver.cpp:219] Iteration 900 (626.09 iter/s, 0.159721s/100 iters), loss = 0.198347
I0428 20:21:54.898720  1841 solver.cpp:238]     Train net output #0: loss = 0.198347 (* 1 = 0.198347 loss)
I0428 20:21:54.898726  1841 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:54.949755  1848 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:55.054894  1841 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:55.057164  1841 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:55.058470  1841 solver.cpp:311] Iteration 1000, loss = 0.27318
I0428 20:21:55.058486  1841 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:55.130959  1849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:55.133599  1841 solver.cpp:398]     Test net output #0: accuracy = 0.8847
I0428 20:21:55.133635  1841 solver.cpp:398]     Test net output #1: loss = 0.292446 (* 1 = 0.292446 loss)
I0428 20:21:55.133640  1841 solver.cpp:316] Optimization Done.
I0428 20:21:55.133642  1841 caffe.cpp:259] Optimization Done.
