I0428 20:38:00.565604  5067 caffe.cpp:218] Using GPUs 0
I0428 20:38:00.606400  5067 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:01.120362  5067 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1659.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:01.120510  5067 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1659.prototxt
I0428 20:38:01.120925  5067 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:01.120944  5067 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:01.121042  5067 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:01.121117  5067 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:01.121219  5067 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:01.121242  5067 net.cpp:86] Creating Layer mnist
I0428 20:38:01.121249  5067 net.cpp:382] mnist -> data
I0428 20:38:01.121271  5067 net.cpp:382] mnist -> label
I0428 20:38:01.122356  5067 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:01.125012  5067 net.cpp:124] Setting up mnist
I0428 20:38:01.125030  5067 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:01.125037  5067 net.cpp:131] Top shape: 64 (64)
I0428 20:38:01.125041  5067 net.cpp:139] Memory required for data: 200960
I0428 20:38:01.125048  5067 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:01.125064  5067 net.cpp:86] Creating Layer conv0
I0428 20:38:01.125085  5067 net.cpp:408] conv0 <- data
I0428 20:38:01.125097  5067 net.cpp:382] conv0 -> conv0
I0428 20:38:01.410776  5067 net.cpp:124] Setting up conv0
I0428 20:38:01.410804  5067 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:01.410809  5067 net.cpp:139] Memory required for data: 14946560
I0428 20:38:01.410825  5067 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:01.410840  5067 net.cpp:86] Creating Layer pool0
I0428 20:38:01.410843  5067 net.cpp:408] pool0 <- conv0
I0428 20:38:01.410848  5067 net.cpp:382] pool0 -> pool0
I0428 20:38:01.410903  5067 net.cpp:124] Setting up pool0
I0428 20:38:01.410909  5067 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:01.410912  5067 net.cpp:139] Memory required for data: 18632960
I0428 20:38:01.410915  5067 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:01.410926  5067 net.cpp:86] Creating Layer conv1
I0428 20:38:01.410930  5067 net.cpp:408] conv1 <- pool0
I0428 20:38:01.410934  5067 net.cpp:382] conv1 -> conv1
I0428 20:38:01.415027  5067 net.cpp:124] Setting up conv1
I0428 20:38:01.415042  5067 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:01.415046  5067 net.cpp:139] Memory required for data: 20271360
I0428 20:38:01.415055  5067 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:01.415062  5067 net.cpp:86] Creating Layer pool1
I0428 20:38:01.415066  5067 net.cpp:408] pool1 <- conv1
I0428 20:38:01.415071  5067 net.cpp:382] pool1 -> pool1
I0428 20:38:01.415107  5067 net.cpp:124] Setting up pool1
I0428 20:38:01.415112  5067 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:01.415115  5067 net.cpp:139] Memory required for data: 20680960
I0428 20:38:01.415118  5067 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:01.415125  5067 net.cpp:86] Creating Layer ip1
I0428 20:38:01.415128  5067 net.cpp:408] ip1 <- pool1
I0428 20:38:01.415132  5067 net.cpp:382] ip1 -> ip1
I0428 20:38:01.415449  5067 net.cpp:124] Setting up ip1
I0428 20:38:01.415457  5067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:01.415460  5067 net.cpp:139] Memory required for data: 20687360
I0428 20:38:01.415467  5067 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:01.415473  5067 net.cpp:86] Creating Layer relu1
I0428 20:38:01.415477  5067 net.cpp:408] relu1 <- ip1
I0428 20:38:01.415480  5067 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:01.415657  5067 net.cpp:124] Setting up relu1
I0428 20:38:01.415666  5067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:01.415669  5067 net.cpp:139] Memory required for data: 20693760
I0428 20:38:01.415673  5067 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:01.415679  5067 net.cpp:86] Creating Layer ip2
I0428 20:38:01.415683  5067 net.cpp:408] ip2 <- ip1
I0428 20:38:01.415688  5067 net.cpp:382] ip2 -> ip2
I0428 20:38:01.415781  5067 net.cpp:124] Setting up ip2
I0428 20:38:01.415789  5067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:01.415792  5067 net.cpp:139] Memory required for data: 20696320
I0428 20:38:01.415798  5067 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:01.415803  5067 net.cpp:86] Creating Layer relu2
I0428 20:38:01.415807  5067 net.cpp:408] relu2 <- ip2
I0428 20:38:01.415812  5067 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:01.416575  5067 net.cpp:124] Setting up relu2
I0428 20:38:01.416589  5067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:01.416591  5067 net.cpp:139] Memory required for data: 20698880
I0428 20:38:01.416595  5067 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:01.416602  5067 net.cpp:86] Creating Layer ip3
I0428 20:38:01.416606  5067 net.cpp:408] ip3 <- ip2
I0428 20:38:01.416611  5067 net.cpp:382] ip3 -> ip3
I0428 20:38:01.416707  5067 net.cpp:124] Setting up ip3
I0428 20:38:01.416714  5067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:01.416718  5067 net.cpp:139] Memory required for data: 20701440
I0428 20:38:01.416725  5067 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:01.416730  5067 net.cpp:86] Creating Layer relu3
I0428 20:38:01.416733  5067 net.cpp:408] relu3 <- ip3
I0428 20:38:01.416751  5067 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:01.416904  5067 net.cpp:124] Setting up relu3
I0428 20:38:01.416914  5067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:01.416918  5067 net.cpp:139] Memory required for data: 20704000
I0428 20:38:01.416921  5067 layer_factory.hpp:77] Creating layer loss
I0428 20:38:01.416927  5067 net.cpp:86] Creating Layer loss
I0428 20:38:01.416930  5067 net.cpp:408] loss <- ip3
I0428 20:38:01.416934  5067 net.cpp:408] loss <- label
I0428 20:38:01.416942  5067 net.cpp:382] loss -> loss
I0428 20:38:01.416960  5067 layer_factory.hpp:77] Creating layer loss
I0428 20:38:01.417184  5067 net.cpp:124] Setting up loss
I0428 20:38:01.417193  5067 net.cpp:131] Top shape: (1)
I0428 20:38:01.417197  5067 net.cpp:134]     with loss weight 1
I0428 20:38:01.417212  5067 net.cpp:139] Memory required for data: 20704004
I0428 20:38:01.417217  5067 net.cpp:200] loss needs backward computation.
I0428 20:38:01.417220  5067 net.cpp:200] relu3 needs backward computation.
I0428 20:38:01.417223  5067 net.cpp:200] ip3 needs backward computation.
I0428 20:38:01.417227  5067 net.cpp:200] relu2 needs backward computation.
I0428 20:38:01.417228  5067 net.cpp:200] ip2 needs backward computation.
I0428 20:38:01.417232  5067 net.cpp:200] relu1 needs backward computation.
I0428 20:38:01.417234  5067 net.cpp:200] ip1 needs backward computation.
I0428 20:38:01.417237  5067 net.cpp:200] pool1 needs backward computation.
I0428 20:38:01.417240  5067 net.cpp:200] conv1 needs backward computation.
I0428 20:38:01.417243  5067 net.cpp:200] pool0 needs backward computation.
I0428 20:38:01.417246  5067 net.cpp:200] conv0 needs backward computation.
I0428 20:38:01.417249  5067 net.cpp:202] mnist does not need backward computation.
I0428 20:38:01.417251  5067 net.cpp:244] This network produces output loss
I0428 20:38:01.417263  5067 net.cpp:257] Network initialization done.
I0428 20:38:01.417610  5067 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1659.prototxt
I0428 20:38:01.417637  5067 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:01.417731  5067 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:01.417814  5067 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:01.417858  5067 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:01.417870  5067 net.cpp:86] Creating Layer mnist
I0428 20:38:01.417876  5067 net.cpp:382] mnist -> data
I0428 20:38:01.417883  5067 net.cpp:382] mnist -> label
I0428 20:38:01.417966  5067 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:01.419967  5067 net.cpp:124] Setting up mnist
I0428 20:38:01.419981  5067 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:01.419986  5067 net.cpp:131] Top shape: 100 (100)
I0428 20:38:01.419988  5067 net.cpp:139] Memory required for data: 314000
I0428 20:38:01.419991  5067 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:01.420003  5067 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:01.420006  5067 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:01.420011  5067 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:01.420017  5067 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:01.420120  5067 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:01.420127  5067 net.cpp:131] Top shape: 100 (100)
I0428 20:38:01.420131  5067 net.cpp:131] Top shape: 100 (100)
I0428 20:38:01.420133  5067 net.cpp:139] Memory required for data: 314800
I0428 20:38:01.420136  5067 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:01.420145  5067 net.cpp:86] Creating Layer conv0
I0428 20:38:01.420150  5067 net.cpp:408] conv0 <- data
I0428 20:38:01.420156  5067 net.cpp:382] conv0 -> conv0
I0428 20:38:01.421927  5067 net.cpp:124] Setting up conv0
I0428 20:38:01.421941  5067 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:01.421944  5067 net.cpp:139] Memory required for data: 23354800
I0428 20:38:01.421954  5067 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:01.421962  5067 net.cpp:86] Creating Layer pool0
I0428 20:38:01.421964  5067 net.cpp:408] pool0 <- conv0
I0428 20:38:01.421969  5067 net.cpp:382] pool0 -> pool0
I0428 20:38:01.422006  5067 net.cpp:124] Setting up pool0
I0428 20:38:01.422011  5067 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:01.422014  5067 net.cpp:139] Memory required for data: 29114800
I0428 20:38:01.422018  5067 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:01.422026  5067 net.cpp:86] Creating Layer conv1
I0428 20:38:01.422029  5067 net.cpp:408] conv1 <- pool0
I0428 20:38:01.422035  5067 net.cpp:382] conv1 -> conv1
I0428 20:38:01.424969  5067 net.cpp:124] Setting up conv1
I0428 20:38:01.424983  5067 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:01.424988  5067 net.cpp:139] Memory required for data: 31674800
I0428 20:38:01.424995  5067 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:01.425002  5067 net.cpp:86] Creating Layer pool1
I0428 20:38:01.425005  5067 net.cpp:408] pool1 <- conv1
I0428 20:38:01.425012  5067 net.cpp:382] pool1 -> pool1
I0428 20:38:01.425050  5067 net.cpp:124] Setting up pool1
I0428 20:38:01.425057  5067 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:01.425060  5067 net.cpp:139] Memory required for data: 32314800
I0428 20:38:01.425063  5067 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:01.425070  5067 net.cpp:86] Creating Layer ip1
I0428 20:38:01.425073  5067 net.cpp:408] ip1 <- pool1
I0428 20:38:01.425079  5067 net.cpp:382] ip1 -> ip1
I0428 20:38:01.425434  5067 net.cpp:124] Setting up ip1
I0428 20:38:01.425452  5067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:01.425456  5067 net.cpp:139] Memory required for data: 32324800
I0428 20:38:01.425462  5067 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:01.425469  5067 net.cpp:86] Creating Layer relu1
I0428 20:38:01.425473  5067 net.cpp:408] relu1 <- ip1
I0428 20:38:01.425478  5067 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:01.425635  5067 net.cpp:124] Setting up relu1
I0428 20:38:01.425643  5067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:01.425647  5067 net.cpp:139] Memory required for data: 32334800
I0428 20:38:01.425650  5067 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:01.425658  5067 net.cpp:86] Creating Layer ip2
I0428 20:38:01.425662  5067 net.cpp:408] ip2 <- ip1
I0428 20:38:01.425665  5067 net.cpp:382] ip2 -> ip2
I0428 20:38:01.425763  5067 net.cpp:124] Setting up ip2
I0428 20:38:01.425771  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.425775  5067 net.cpp:139] Memory required for data: 32338800
I0428 20:38:01.425779  5067 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:01.425784  5067 net.cpp:86] Creating Layer relu2
I0428 20:38:01.425787  5067 net.cpp:408] relu2 <- ip2
I0428 20:38:01.425793  5067 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:01.426008  5067 net.cpp:124] Setting up relu2
I0428 20:38:01.426017  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.426020  5067 net.cpp:139] Memory required for data: 32342800
I0428 20:38:01.426023  5067 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:01.426029  5067 net.cpp:86] Creating Layer ip3
I0428 20:38:01.426033  5067 net.cpp:408] ip3 <- ip2
I0428 20:38:01.426038  5067 net.cpp:382] ip3 -> ip3
I0428 20:38:01.426154  5067 net.cpp:124] Setting up ip3
I0428 20:38:01.426162  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.426165  5067 net.cpp:139] Memory required for data: 32346800
I0428 20:38:01.426172  5067 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:01.426178  5067 net.cpp:86] Creating Layer relu3
I0428 20:38:01.426182  5067 net.cpp:408] relu3 <- ip3
I0428 20:38:01.426185  5067 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:01.426990  5067 net.cpp:124] Setting up relu3
I0428 20:38:01.427004  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.427008  5067 net.cpp:139] Memory required for data: 32350800
I0428 20:38:01.427011  5067 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:01.427023  5067 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:01.427026  5067 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:01.427031  5067 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:01.427038  5067 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:01.427076  5067 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:01.427083  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.427088  5067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:01.427090  5067 net.cpp:139] Memory required for data: 32358800
I0428 20:38:01.427093  5067 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:01.427098  5067 net.cpp:86] Creating Layer accuracy
I0428 20:38:01.427101  5067 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:01.427105  5067 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:01.427117  5067 net.cpp:382] accuracy -> accuracy
I0428 20:38:01.427125  5067 net.cpp:124] Setting up accuracy
I0428 20:38:01.427130  5067 net.cpp:131] Top shape: (1)
I0428 20:38:01.427134  5067 net.cpp:139] Memory required for data: 32358804
I0428 20:38:01.427136  5067 layer_factory.hpp:77] Creating layer loss
I0428 20:38:01.427145  5067 net.cpp:86] Creating Layer loss
I0428 20:38:01.427148  5067 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:01.427152  5067 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:01.427157  5067 net.cpp:382] loss -> loss
I0428 20:38:01.427165  5067 layer_factory.hpp:77] Creating layer loss
I0428 20:38:01.427446  5067 net.cpp:124] Setting up loss
I0428 20:38:01.427456  5067 net.cpp:131] Top shape: (1)
I0428 20:38:01.427460  5067 net.cpp:134]     with loss weight 1
I0428 20:38:01.427475  5067 net.cpp:139] Memory required for data: 32358808
I0428 20:38:01.427480  5067 net.cpp:200] loss needs backward computation.
I0428 20:38:01.427484  5067 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:01.427489  5067 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:01.427507  5067 net.cpp:200] relu3 needs backward computation.
I0428 20:38:01.427510  5067 net.cpp:200] ip3 needs backward computation.
I0428 20:38:01.427515  5067 net.cpp:200] relu2 needs backward computation.
I0428 20:38:01.427517  5067 net.cpp:200] ip2 needs backward computation.
I0428 20:38:01.427520  5067 net.cpp:200] relu1 needs backward computation.
I0428 20:38:01.427523  5067 net.cpp:200] ip1 needs backward computation.
I0428 20:38:01.427526  5067 net.cpp:200] pool1 needs backward computation.
I0428 20:38:01.427536  5067 net.cpp:200] conv1 needs backward computation.
I0428 20:38:01.427539  5067 net.cpp:200] pool0 needs backward computation.
I0428 20:38:01.427542  5067 net.cpp:200] conv0 needs backward computation.
I0428 20:38:01.427546  5067 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:01.427551  5067 net.cpp:202] mnist does not need backward computation.
I0428 20:38:01.427553  5067 net.cpp:244] This network produces output accuracy
I0428 20:38:01.427557  5067 net.cpp:244] This network produces output loss
I0428 20:38:01.427569  5067 net.cpp:257] Network initialization done.
I0428 20:38:01.427613  5067 solver.cpp:56] Solver scaffolding done.
I0428 20:38:01.428035  5067 caffe.cpp:248] Starting Optimization
I0428 20:38:01.428042  5067 solver.cpp:273] Solving LeNet
I0428 20:38:01.428045  5067 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:01.428861  5067 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:01.560096  5074 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:01.563549  5067 solver.cpp:398]     Test net output #0: accuracy = 0.1538
I0428 20:38:01.563583  5067 solver.cpp:398]     Test net output #1: loss = 2.31654 (* 1 = 2.31654 loss)
I0428 20:38:01.568905  5067 solver.cpp:219] Iteration 0 (-7.32239e-35 iter/s, 0.140809s/100 iters), loss = 2.30735
I0428 20:38:01.568931  5067 solver.cpp:238]     Train net output #0: loss = 2.30735 (* 1 = 2.30735 loss)
I0428 20:38:01.568943  5067 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:01.844817  5067 solver.cpp:219] Iteration 100 (362.503 iter/s, 0.275859s/100 iters), loss = 0.79001
I0428 20:38:01.844859  5067 solver.cpp:238]     Train net output #0: loss = 0.79001 (* 1 = 0.79001 loss)
I0428 20:38:01.844867  5067 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:02.117316  5067 solver.cpp:219] Iteration 200 (367.054 iter/s, 0.272439s/100 iters), loss = 0.230335
I0428 20:38:02.117342  5067 solver.cpp:238]     Train net output #0: loss = 0.230335 (* 1 = 0.230335 loss)
I0428 20:38:02.117349  5067 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:02.389387  5067 solver.cpp:219] Iteration 300 (367.611 iter/s, 0.272027s/100 iters), loss = 0.242216
I0428 20:38:02.389446  5067 solver.cpp:238]     Train net output #0: loss = 0.242217 (* 1 = 0.242217 loss)
I0428 20:38:02.389453  5067 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:02.662009  5067 solver.cpp:219] Iteration 400 (366.912 iter/s, 0.272545s/100 iters), loss = 0.108583
I0428 20:38:02.662051  5067 solver.cpp:238]     Train net output #0: loss = 0.108583 (* 1 = 0.108583 loss)
I0428 20:38:02.662060  5067 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:02.933300  5067 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:03.061830  5074 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:03.066087  5067 solver.cpp:398]     Test net output #0: accuracy = 0.9675
I0428 20:38:03.066125  5067 solver.cpp:398]     Test net output #1: loss = 0.103288 (* 1 = 0.103288 loss)
I0428 20:38:03.068930  5067 solver.cpp:219] Iteration 500 (245.787 iter/s, 0.406856s/100 iters), loss = 0.118733
I0428 20:38:03.068970  5067 solver.cpp:238]     Train net output #0: loss = 0.118733 (* 1 = 0.118733 loss)
I0428 20:38:03.068994  5067 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:03.351186  5067 solver.cpp:219] Iteration 600 (354.364 iter/s, 0.282196s/100 iters), loss = 0.078935
I0428 20:38:03.351212  5067 solver.cpp:238]     Train net output #0: loss = 0.0789351 (* 1 = 0.0789351 loss)
I0428 20:38:03.351219  5067 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:03.634878  5067 solver.cpp:219] Iteration 700 (352.552 iter/s, 0.283646s/100 iters), loss = 0.132738
I0428 20:38:03.634927  5067 solver.cpp:238]     Train net output #0: loss = 0.132738 (* 1 = 0.132738 loss)
I0428 20:38:03.634935  5067 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:03.923439  5067 solver.cpp:219] Iteration 800 (346.629 iter/s, 0.288493s/100 iters), loss = 0.366822
I0428 20:38:03.923485  5067 solver.cpp:238]     Train net output #0: loss = 0.366822 (* 1 = 0.366822 loss)
I0428 20:38:03.923491  5067 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:04.215211  5067 solver.cpp:219] Iteration 900 (342.791 iter/s, 0.291723s/100 iters), loss = 0.146643
I0428 20:38:04.215243  5067 solver.cpp:238]     Train net output #0: loss = 0.146643 (* 1 = 0.146643 loss)
I0428 20:38:04.215251  5067 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:04.312844  5073 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:04.503167  5067 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:04.508374  5067 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:04.511603  5067 solver.cpp:311] Iteration 1000, loss = 0.108725
I0428 20:38:04.511620  5067 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:04.642024  5074 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:04.645397  5067 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0428 20:38:04.645432  5067 solver.cpp:398]     Test net output #1: loss = 0.0688581 (* 1 = 0.0688581 loss)
I0428 20:38:04.645437  5067 solver.cpp:316] Optimization Done.
I0428 20:38:04.645440  5067 caffe.cpp:259] Optimization Done.
