I0428 20:08:28.359109 31390 caffe.cpp:218] Using GPUs 0
I0428 20:08:28.388759 31390 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:28.826202 31390 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1084.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:28.826328 31390 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1084.prototxt
I0428 20:08:28.826673 31390 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:28.826689 31390 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:28.826771 31390 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:28.826848 31390 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:28.826926 31390 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:28.826946 31390 net.cpp:86] Creating Layer mnist
I0428 20:08:28.826953 31390 net.cpp:382] mnist -> data
I0428 20:08:28.826972 31390 net.cpp:382] mnist -> label
I0428 20:08:28.827953 31390 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:28.830204 31390 net.cpp:124] Setting up mnist
I0428 20:08:28.830219 31390 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:28.830224 31390 net.cpp:131] Top shape: 64 (64)
I0428 20:08:28.830227 31390 net.cpp:139] Memory required for data: 200960
I0428 20:08:28.830232 31390 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:28.830277 31390 net.cpp:86] Creating Layer conv0
I0428 20:08:28.830296 31390 net.cpp:408] conv0 <- data
I0428 20:08:28.830305 31390 net.cpp:382] conv0 -> conv0
I0428 20:08:29.142413 31390 net.cpp:124] Setting up conv0
I0428 20:08:29.142446 31390 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:29.142451 31390 net.cpp:139] Memory required for data: 3887360
I0428 20:08:29.142467 31390 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:29.142483 31390 net.cpp:86] Creating Layer pool0
I0428 20:08:29.142488 31390 net.cpp:408] pool0 <- conv0
I0428 20:08:29.142494 31390 net.cpp:382] pool0 -> pool0
I0428 20:08:29.142549 31390 net.cpp:124] Setting up pool0
I0428 20:08:29.142556 31390 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:29.142560 31390 net.cpp:139] Memory required for data: 4808960
I0428 20:08:29.142563 31390 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:29.142577 31390 net.cpp:86] Creating Layer conv1
I0428 20:08:29.142581 31390 net.cpp:408] conv1 <- pool0
I0428 20:08:29.142588 31390 net.cpp:382] conv1 -> conv1
I0428 20:08:29.145824 31390 net.cpp:124] Setting up conv1
I0428 20:08:29.145843 31390 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:29.145848 31390 net.cpp:139] Memory required for data: 4972800
I0428 20:08:29.145858 31390 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:29.145866 31390 net.cpp:86] Creating Layer pool1
I0428 20:08:29.145872 31390 net.cpp:408] pool1 <- conv1
I0428 20:08:29.145879 31390 net.cpp:382] pool1 -> pool1
I0428 20:08:29.145926 31390 net.cpp:124] Setting up pool1
I0428 20:08:29.145932 31390 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:29.145936 31390 net.cpp:139] Memory required for data: 5013760
I0428 20:08:29.145939 31390 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:29.145948 31390 net.cpp:86] Creating Layer ip1
I0428 20:08:29.145952 31390 net.cpp:408] ip1 <- pool1
I0428 20:08:29.145958 31390 net.cpp:382] ip1 -> ip1
I0428 20:08:29.146137 31390 net.cpp:124] Setting up ip1
I0428 20:08:29.146147 31390 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:29.146152 31390 net.cpp:139] Memory required for data: 5026560
I0428 20:08:29.146159 31390 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:29.146167 31390 net.cpp:86] Creating Layer relu1
I0428 20:08:29.146170 31390 net.cpp:408] relu1 <- ip1
I0428 20:08:29.146175 31390 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:29.146392 31390 net.cpp:124] Setting up relu1
I0428 20:08:29.146404 31390 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:29.146407 31390 net.cpp:139] Memory required for data: 5039360
I0428 20:08:29.146410 31390 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:29.146419 31390 net.cpp:86] Creating Layer ip2
I0428 20:08:29.146423 31390 net.cpp:408] ip2 <- ip1
I0428 20:08:29.146428 31390 net.cpp:382] ip2 -> ip2
I0428 20:08:29.146551 31390 net.cpp:124] Setting up ip2
I0428 20:08:29.146560 31390 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:29.146564 31390 net.cpp:139] Memory required for data: 5041920
I0428 20:08:29.146569 31390 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:29.146576 31390 net.cpp:86] Creating Layer relu2
I0428 20:08:29.146580 31390 net.cpp:408] relu2 <- ip2
I0428 20:08:29.146586 31390 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:29.147442 31390 net.cpp:124] Setting up relu2
I0428 20:08:29.147459 31390 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:29.147462 31390 net.cpp:139] Memory required for data: 5044480
I0428 20:08:29.147466 31390 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:29.147475 31390 net.cpp:86] Creating Layer ip3
I0428 20:08:29.147480 31390 net.cpp:408] ip3 <- ip2
I0428 20:08:29.147485 31390 net.cpp:382] ip3 -> ip3
I0428 20:08:29.147611 31390 net.cpp:124] Setting up ip3
I0428 20:08:29.147620 31390 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:29.147624 31390 net.cpp:139] Memory required for data: 5047040
I0428 20:08:29.147632 31390 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:29.147640 31390 net.cpp:86] Creating Layer relu3
I0428 20:08:29.147644 31390 net.cpp:408] relu3 <- ip3
I0428 20:08:29.147649 31390 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:29.147866 31390 net.cpp:124] Setting up relu3
I0428 20:08:29.147877 31390 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:29.147881 31390 net.cpp:139] Memory required for data: 5049600
I0428 20:08:29.147884 31390 layer_factory.hpp:77] Creating layer loss
I0428 20:08:29.147892 31390 net.cpp:86] Creating Layer loss
I0428 20:08:29.147897 31390 net.cpp:408] loss <- ip3
I0428 20:08:29.147902 31390 net.cpp:408] loss <- label
I0428 20:08:29.147907 31390 net.cpp:382] loss -> loss
I0428 20:08:29.147923 31390 layer_factory.hpp:77] Creating layer loss
I0428 20:08:29.148213 31390 net.cpp:124] Setting up loss
I0428 20:08:29.148224 31390 net.cpp:131] Top shape: (1)
I0428 20:08:29.148227 31390 net.cpp:134]     with loss weight 1
I0428 20:08:29.148243 31390 net.cpp:139] Memory required for data: 5049604
I0428 20:08:29.148247 31390 net.cpp:200] loss needs backward computation.
I0428 20:08:29.148252 31390 net.cpp:200] relu3 needs backward computation.
I0428 20:08:29.148257 31390 net.cpp:200] ip3 needs backward computation.
I0428 20:08:29.148259 31390 net.cpp:200] relu2 needs backward computation.
I0428 20:08:29.148262 31390 net.cpp:200] ip2 needs backward computation.
I0428 20:08:29.148267 31390 net.cpp:200] relu1 needs backward computation.
I0428 20:08:29.148269 31390 net.cpp:200] ip1 needs backward computation.
I0428 20:08:29.148272 31390 net.cpp:200] pool1 needs backward computation.
I0428 20:08:29.148277 31390 net.cpp:200] conv1 needs backward computation.
I0428 20:08:29.148279 31390 net.cpp:200] pool0 needs backward computation.
I0428 20:08:29.148284 31390 net.cpp:200] conv0 needs backward computation.
I0428 20:08:29.148288 31390 net.cpp:202] mnist does not need backward computation.
I0428 20:08:29.148291 31390 net.cpp:244] This network produces output loss
I0428 20:08:29.148301 31390 net.cpp:257] Network initialization done.
I0428 20:08:29.148682 31390 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1084.prototxt
I0428 20:08:29.148715 31390 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:29.148840 31390 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:29.148958 31390 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:29.149008 31390 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:29.149026 31390 net.cpp:86] Creating Layer mnist
I0428 20:08:29.149034 31390 net.cpp:382] mnist -> data
I0428 20:08:29.149044 31390 net.cpp:382] mnist -> label
I0428 20:08:29.149147 31390 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:29.151351 31390 net.cpp:124] Setting up mnist
I0428 20:08:29.151367 31390 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:29.151373 31390 net.cpp:131] Top shape: 100 (100)
I0428 20:08:29.151376 31390 net.cpp:139] Memory required for data: 314000
I0428 20:08:29.151381 31390 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:29.151389 31390 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:29.151393 31390 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:29.151413 31390 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:29.151422 31390 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:29.151479 31390 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:29.151485 31390 net.cpp:131] Top shape: 100 (100)
I0428 20:08:29.151490 31390 net.cpp:131] Top shape: 100 (100)
I0428 20:08:29.151494 31390 net.cpp:139] Memory required for data: 314800
I0428 20:08:29.151496 31390 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:29.151509 31390 net.cpp:86] Creating Layer conv0
I0428 20:08:29.151512 31390 net.cpp:408] conv0 <- data
I0428 20:08:29.151518 31390 net.cpp:382] conv0 -> conv0
I0428 20:08:29.153532 31390 net.cpp:124] Setting up conv0
I0428 20:08:29.153550 31390 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:29.153554 31390 net.cpp:139] Memory required for data: 6074800
I0428 20:08:29.153565 31390 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:29.153576 31390 net.cpp:86] Creating Layer pool0
I0428 20:08:29.153580 31390 net.cpp:408] pool0 <- conv0
I0428 20:08:29.153586 31390 net.cpp:382] pool0 -> pool0
I0428 20:08:29.153633 31390 net.cpp:124] Setting up pool0
I0428 20:08:29.153640 31390 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:29.153643 31390 net.cpp:139] Memory required for data: 7514800
I0428 20:08:29.153646 31390 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:29.153657 31390 net.cpp:86] Creating Layer conv1
I0428 20:08:29.153661 31390 net.cpp:408] conv1 <- pool0
I0428 20:08:29.153668 31390 net.cpp:382] conv1 -> conv1
I0428 20:08:29.156093 31390 net.cpp:124] Setting up conv1
I0428 20:08:29.156110 31390 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:29.156114 31390 net.cpp:139] Memory required for data: 7770800
I0428 20:08:29.156126 31390 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:29.156134 31390 net.cpp:86] Creating Layer pool1
I0428 20:08:29.156138 31390 net.cpp:408] pool1 <- conv1
I0428 20:08:29.156144 31390 net.cpp:382] pool1 -> pool1
I0428 20:08:29.156199 31390 net.cpp:124] Setting up pool1
I0428 20:08:29.156214 31390 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:29.156219 31390 net.cpp:139] Memory required for data: 7834800
I0428 20:08:29.156230 31390 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:29.156237 31390 net.cpp:86] Creating Layer ip1
I0428 20:08:29.156240 31390 net.cpp:408] ip1 <- pool1
I0428 20:08:29.156247 31390 net.cpp:382] ip1 -> ip1
I0428 20:08:29.156452 31390 net.cpp:124] Setting up ip1
I0428 20:08:29.156461 31390 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:29.156477 31390 net.cpp:139] Memory required for data: 7854800
I0428 20:08:29.156486 31390 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:29.156493 31390 net.cpp:86] Creating Layer relu1
I0428 20:08:29.156498 31390 net.cpp:408] relu1 <- ip1
I0428 20:08:29.156512 31390 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:29.156716 31390 net.cpp:124] Setting up relu1
I0428 20:08:29.156728 31390 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:29.156733 31390 net.cpp:139] Memory required for data: 7874800
I0428 20:08:29.156736 31390 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:29.156745 31390 net.cpp:86] Creating Layer ip2
I0428 20:08:29.156749 31390 net.cpp:408] ip2 <- ip1
I0428 20:08:29.156755 31390 net.cpp:382] ip2 -> ip2
I0428 20:08:29.156893 31390 net.cpp:124] Setting up ip2
I0428 20:08:29.156904 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.156908 31390 net.cpp:139] Memory required for data: 7878800
I0428 20:08:29.156913 31390 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:29.156920 31390 net.cpp:86] Creating Layer relu2
I0428 20:08:29.156924 31390 net.cpp:408] relu2 <- ip2
I0428 20:08:29.156930 31390 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:29.157124 31390 net.cpp:124] Setting up relu2
I0428 20:08:29.157135 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.157138 31390 net.cpp:139] Memory required for data: 7882800
I0428 20:08:29.157142 31390 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:29.157150 31390 net.cpp:86] Creating Layer ip3
I0428 20:08:29.157153 31390 net.cpp:408] ip3 <- ip2
I0428 20:08:29.157160 31390 net.cpp:382] ip3 -> ip3
I0428 20:08:29.157279 31390 net.cpp:124] Setting up ip3
I0428 20:08:29.157287 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.157291 31390 net.cpp:139] Memory required for data: 7886800
I0428 20:08:29.157300 31390 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:29.157305 31390 net.cpp:86] Creating Layer relu3
I0428 20:08:29.157308 31390 net.cpp:408] relu3 <- ip3
I0428 20:08:29.157313 31390 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:29.158263 31390 net.cpp:124] Setting up relu3
I0428 20:08:29.158278 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.158283 31390 net.cpp:139] Memory required for data: 7890800
I0428 20:08:29.158288 31390 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:29.158293 31390 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:29.158298 31390 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:29.158305 31390 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:29.158313 31390 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:29.158360 31390 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:29.158365 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.158370 31390 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:29.158372 31390 net.cpp:139] Memory required for data: 7898800
I0428 20:08:29.158376 31390 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:29.158383 31390 net.cpp:86] Creating Layer accuracy
I0428 20:08:29.158387 31390 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:29.158392 31390 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:29.158398 31390 net.cpp:382] accuracy -> accuracy
I0428 20:08:29.158406 31390 net.cpp:124] Setting up accuracy
I0428 20:08:29.158411 31390 net.cpp:131] Top shape: (1)
I0428 20:08:29.158414 31390 net.cpp:139] Memory required for data: 7898804
I0428 20:08:29.158418 31390 layer_factory.hpp:77] Creating layer loss
I0428 20:08:29.158426 31390 net.cpp:86] Creating Layer loss
I0428 20:08:29.158429 31390 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:29.158433 31390 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:29.158438 31390 net.cpp:382] loss -> loss
I0428 20:08:29.158444 31390 layer_factory.hpp:77] Creating layer loss
I0428 20:08:29.158731 31390 net.cpp:124] Setting up loss
I0428 20:08:29.158741 31390 net.cpp:131] Top shape: (1)
I0428 20:08:29.158746 31390 net.cpp:134]     with loss weight 1
I0428 20:08:29.158764 31390 net.cpp:139] Memory required for data: 7898808
I0428 20:08:29.158769 31390 net.cpp:200] loss needs backward computation.
I0428 20:08:29.158773 31390 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:29.158779 31390 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:29.158782 31390 net.cpp:200] relu3 needs backward computation.
I0428 20:08:29.158787 31390 net.cpp:200] ip3 needs backward computation.
I0428 20:08:29.158789 31390 net.cpp:200] relu2 needs backward computation.
I0428 20:08:29.158792 31390 net.cpp:200] ip2 needs backward computation.
I0428 20:08:29.158797 31390 net.cpp:200] relu1 needs backward computation.
I0428 20:08:29.158799 31390 net.cpp:200] ip1 needs backward computation.
I0428 20:08:29.158803 31390 net.cpp:200] pool1 needs backward computation.
I0428 20:08:29.158807 31390 net.cpp:200] conv1 needs backward computation.
I0428 20:08:29.158810 31390 net.cpp:200] pool0 needs backward computation.
I0428 20:08:29.158813 31390 net.cpp:200] conv0 needs backward computation.
I0428 20:08:29.158818 31390 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:29.158823 31390 net.cpp:202] mnist does not need backward computation.
I0428 20:08:29.158826 31390 net.cpp:244] This network produces output accuracy
I0428 20:08:29.158830 31390 net.cpp:244] This network produces output loss
I0428 20:08:29.158845 31390 net.cpp:257] Network initialization done.
I0428 20:08:29.158895 31390 solver.cpp:56] Solver scaffolding done.
I0428 20:08:29.159329 31390 caffe.cpp:248] Starting Optimization
I0428 20:08:29.159335 31390 solver.cpp:273] Solving LeNet
I0428 20:08:29.159340 31390 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:29.160301 31390 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:29.165814 31390 blocking_queue.cpp:49] Waiting for data
I0428 20:08:29.234817 31399 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:29.235457 31390 solver.cpp:398]     Test net output #0: accuracy = 0.0865
I0428 20:08:29.235481 31390 solver.cpp:398]     Test net output #1: loss = 2.32385 (* 1 = 2.32385 loss)
I0428 20:08:29.239588 31390 solver.cpp:219] Iteration 0 (-1.03136e-42 iter/s, 0.080214s/100 iters), loss = 2.31325
I0428 20:08:29.239620 31390 solver.cpp:238]     Train net output #0: loss = 2.31325 (* 1 = 2.31325 loss)
I0428 20:08:29.239634 31390 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:29.350021 31390 solver.cpp:219] Iteration 100 (905.927 iter/s, 0.110384s/100 iters), loss = 0.875549
I0428 20:08:29.350060 31390 solver.cpp:238]     Train net output #0: loss = 0.875549 (* 1 = 0.875549 loss)
I0428 20:08:29.350069 31390 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:29.447839 31390 solver.cpp:219] Iteration 200 (1022.81 iter/s, 0.0977695s/100 iters), loss = 0.212044
I0428 20:08:29.447865 31390 solver.cpp:238]     Train net output #0: loss = 0.212044 (* 1 = 0.212044 loss)
I0428 20:08:29.447872 31390 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:29.539820 31390 solver.cpp:219] Iteration 300 (1087.6 iter/s, 0.091946s/100 iters), loss = 0.35954
I0428 20:08:29.539861 31390 solver.cpp:238]     Train net output #0: loss = 0.35954 (* 1 = 0.35954 loss)
I0428 20:08:29.539868 31390 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:29.630647 31390 solver.cpp:219] Iteration 400 (1101.42 iter/s, 0.0907919s/100 iters), loss = 0.111376
I0428 20:08:29.630671 31390 solver.cpp:238]     Train net output #0: loss = 0.111376 (* 1 = 0.111376 loss)
I0428 20:08:29.630676 31390 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:29.719853 31390 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:29.774641 31399 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:29.775270 31390 solver.cpp:398]     Test net output #0: accuracy = 0.9579
I0428 20:08:29.775305 31390 solver.cpp:398]     Test net output #1: loss = 0.136111 (* 1 = 0.136111 loss)
I0428 20:08:29.776178 31390 solver.cpp:219] Iteration 500 (687.313 iter/s, 0.145494s/100 iters), loss = 0.139118
I0428 20:08:29.776242 31390 solver.cpp:238]     Train net output #0: loss = 0.139118 (* 1 = 0.139118 loss)
I0428 20:08:29.776249 31390 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:29.867036 31390 solver.cpp:219] Iteration 600 (1101.47 iter/s, 0.0907878s/100 iters), loss = 0.109531
I0428 20:08:29.867075 31390 solver.cpp:238]     Train net output #0: loss = 0.109531 (* 1 = 0.109531 loss)
I0428 20:08:29.867082 31390 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:29.957494 31390 solver.cpp:219] Iteration 700 (1105.9 iter/s, 0.0904243s/100 iters), loss = 0.179649
I0428 20:08:29.957531 31390 solver.cpp:238]     Train net output #0: loss = 0.179649 (* 1 = 0.179649 loss)
I0428 20:08:29.957537 31390 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:30.048013 31390 solver.cpp:219] Iteration 800 (1105.11 iter/s, 0.0904888s/100 iters), loss = 0.269144
I0428 20:08:30.048053 31390 solver.cpp:238]     Train net output #0: loss = 0.269144 (* 1 = 0.269144 loss)
I0428 20:08:30.048058 31390 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:30.138335 31390 solver.cpp:219] Iteration 900 (1107.55 iter/s, 0.0902892s/100 iters), loss = 0.174996
I0428 20:08:30.138358 31390 solver.cpp:238]     Train net output #0: loss = 0.174996 (* 1 = 0.174996 loss)
I0428 20:08:30.138365 31390 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:30.168300 31398 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:30.227222 31390 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:30.228329 31390 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:30.229053 31390 solver.cpp:311] Iteration 1000, loss = 0.157701
I0428 20:08:30.229068 31390 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:30.298832 31399 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:30.299542 31390 solver.cpp:398]     Test net output #0: accuracy = 0.9744
I0428 20:08:30.299582 31390 solver.cpp:398]     Test net output #1: loss = 0.0819319 (* 1 = 0.0819319 loss)
I0428 20:08:30.299603 31390 solver.cpp:316] Optimization Done.
I0428 20:08:30.299608 31390 caffe.cpp:259] Optimization Done.
