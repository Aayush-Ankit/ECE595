I0428 19:28:35.136781 21668 caffe.cpp:218] Using GPUs 0
I0428 19:28:35.177275 21668 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:35.623736 21668 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test30.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:35.623872 21668 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test30.prototxt
I0428 19:28:35.624135 21668 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:35.624150 21668 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:35.624213 21668 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:35.624301 21668 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:35.624408 21668 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:35.624433 21668 net.cpp:86] Creating Layer mnist
I0428 19:28:35.624444 21668 net.cpp:382] mnist -> data
I0428 19:28:35.624469 21668 net.cpp:382] mnist -> label
I0428 19:28:35.625574 21668 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:35.627774 21668 net.cpp:124] Setting up mnist
I0428 19:28:35.627806 21668 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:35.627815 21668 net.cpp:131] Top shape: 64 (64)
I0428 19:28:35.627820 21668 net.cpp:139] Memory required for data: 200960
I0428 19:28:35.627827 21668 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:35.627841 21668 net.cpp:86] Creating Layer ip1
I0428 19:28:35.627851 21668 net.cpp:408] ip1 <- data
I0428 19:28:35.627864 21668 net.cpp:382] ip1 -> ip1
I0428 19:28:35.628243 21668 net.cpp:124] Setting up ip1
I0428 19:28:35.628253 21668 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:35.628258 21668 net.cpp:139] Memory required for data: 213760
I0428 19:28:35.628275 21668 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:35.628286 21668 net.cpp:86] Creating Layer relu1
I0428 19:28:35.628311 21668 net.cpp:408] relu1 <- ip1
I0428 19:28:35.628335 21668 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:35.856570 21668 net.cpp:124] Setting up relu1
I0428 19:28:35.856598 21668 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:35.856604 21668 net.cpp:139] Memory required for data: 226560
I0428 19:28:35.856611 21668 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:35.856626 21668 net.cpp:86] Creating Layer ip2
I0428 19:28:35.856648 21668 net.cpp:408] ip2 <- ip1
I0428 19:28:35.856660 21668 net.cpp:382] ip2 -> ip2
I0428 19:28:35.857687 21668 net.cpp:124] Setting up ip2
I0428 19:28:35.857702 21668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:35.857708 21668 net.cpp:139] Memory required for data: 229120
I0428 19:28:35.857723 21668 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:35.857734 21668 net.cpp:86] Creating Layer relu2
I0428 19:28:35.857744 21668 net.cpp:408] relu2 <- ip2
I0428 19:28:35.857753 21668 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:35.858561 21668 net.cpp:124] Setting up relu2
I0428 19:28:35.858577 21668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:35.858582 21668 net.cpp:139] Memory required for data: 231680
I0428 19:28:35.858588 21668 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:35.858599 21668 net.cpp:86] Creating Layer ip3
I0428 19:28:35.858605 21668 net.cpp:408] ip3 <- ip2
I0428 19:28:35.858614 21668 net.cpp:382] ip3 -> ip3
I0428 19:28:35.858734 21668 net.cpp:124] Setting up ip3
I0428 19:28:35.858744 21668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:35.858763 21668 net.cpp:139] Memory required for data: 234240
I0428 19:28:35.858775 21668 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:35.858783 21668 net.cpp:86] Creating Layer relu3
I0428 19:28:35.858793 21668 net.cpp:408] relu3 <- ip3
I0428 19:28:35.858800 21668 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:35.858952 21668 net.cpp:124] Setting up relu3
I0428 19:28:35.858960 21668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:35.858965 21668 net.cpp:139] Memory required for data: 236800
I0428 19:28:35.858970 21668 layer_factory.hpp:77] Creating layer loss
I0428 19:28:35.858978 21668 net.cpp:86] Creating Layer loss
I0428 19:28:35.858984 21668 net.cpp:408] loss <- ip3
I0428 19:28:35.858990 21668 net.cpp:408] loss <- label
I0428 19:28:35.858999 21668 net.cpp:382] loss -> loss
I0428 19:28:35.859021 21668 layer_factory.hpp:77] Creating layer loss
I0428 19:28:35.859246 21668 net.cpp:124] Setting up loss
I0428 19:28:35.859254 21668 net.cpp:131] Top shape: (1)
I0428 19:28:35.859261 21668 net.cpp:134]     with loss weight 1
I0428 19:28:35.859280 21668 net.cpp:139] Memory required for data: 236804
I0428 19:28:35.859287 21668 net.cpp:200] loss needs backward computation.
I0428 19:28:35.859292 21668 net.cpp:200] relu3 needs backward computation.
I0428 19:28:35.859297 21668 net.cpp:200] ip3 needs backward computation.
I0428 19:28:35.859302 21668 net.cpp:200] relu2 needs backward computation.
I0428 19:28:35.859307 21668 net.cpp:200] ip2 needs backward computation.
I0428 19:28:35.859311 21668 net.cpp:200] relu1 needs backward computation.
I0428 19:28:35.859315 21668 net.cpp:200] ip1 needs backward computation.
I0428 19:28:35.859321 21668 net.cpp:202] mnist does not need backward computation.
I0428 19:28:35.859325 21668 net.cpp:244] This network produces output loss
I0428 19:28:35.859338 21668 net.cpp:257] Network initialization done.
I0428 19:28:35.859586 21668 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test30.prototxt
I0428 19:28:35.859616 21668 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:35.859688 21668 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:35.859796 21668 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:35.859850 21668 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:35.859866 21668 net.cpp:86] Creating Layer mnist
I0428 19:28:35.859874 21668 net.cpp:382] mnist -> data
I0428 19:28:35.859885 21668 net.cpp:382] mnist -> label
I0428 19:28:35.859997 21668 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:35.862082 21668 net.cpp:124] Setting up mnist
I0428 19:28:35.862128 21668 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:35.862135 21668 net.cpp:131] Top shape: 100 (100)
I0428 19:28:35.862139 21668 net.cpp:139] Memory required for data: 314000
I0428 19:28:35.862145 21668 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:35.862169 21668 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:35.862177 21668 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:35.862185 21668 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:35.862210 21668 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:35.862314 21668 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:35.862323 21668 net.cpp:131] Top shape: 100 (100)
I0428 19:28:35.862330 21668 net.cpp:131] Top shape: 100 (100)
I0428 19:28:35.862335 21668 net.cpp:139] Memory required for data: 314800
I0428 19:28:35.862340 21668 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:35.862350 21668 net.cpp:86] Creating Layer ip1
I0428 19:28:35.862356 21668 net.cpp:408] ip1 <- data
I0428 19:28:35.862365 21668 net.cpp:382] ip1 -> ip1
I0428 19:28:35.862733 21668 net.cpp:124] Setting up ip1
I0428 19:28:35.862743 21668 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:35.862747 21668 net.cpp:139] Memory required for data: 334800
I0428 19:28:35.862761 21668 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:35.862768 21668 net.cpp:86] Creating Layer relu1
I0428 19:28:35.862774 21668 net.cpp:408] relu1 <- ip1
I0428 19:28:35.862782 21668 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:35.863701 21668 net.cpp:124] Setting up relu1
I0428 19:28:35.863715 21668 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:35.863720 21668 net.cpp:139] Memory required for data: 354800
I0428 19:28:35.863740 21668 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:35.863751 21668 net.cpp:86] Creating Layer ip2
I0428 19:28:35.863757 21668 net.cpp:408] ip2 <- ip1
I0428 19:28:35.863765 21668 net.cpp:382] ip2 -> ip2
I0428 19:28:35.863881 21668 net.cpp:124] Setting up ip2
I0428 19:28:35.863890 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.863895 21668 net.cpp:139] Memory required for data: 358800
I0428 19:28:35.863919 21668 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:35.863926 21668 net.cpp:86] Creating Layer relu2
I0428 19:28:35.863932 21668 net.cpp:408] relu2 <- ip2
I0428 19:28:35.863940 21668 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:35.864091 21668 net.cpp:124] Setting up relu2
I0428 19:28:35.864100 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.864120 21668 net.cpp:139] Memory required for data: 362800
I0428 19:28:35.864125 21668 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:35.864132 21668 net.cpp:86] Creating Layer ip3
I0428 19:28:35.864137 21668 net.cpp:408] ip3 <- ip2
I0428 19:28:35.864145 21668 net.cpp:382] ip3 -> ip3
I0428 19:28:35.864248 21668 net.cpp:124] Setting up ip3
I0428 19:28:35.864258 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.864261 21668 net.cpp:139] Memory required for data: 366800
I0428 19:28:35.864272 21668 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:35.864280 21668 net.cpp:86] Creating Layer relu3
I0428 19:28:35.864286 21668 net.cpp:408] relu3 <- ip3
I0428 19:28:35.864295 21668 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:35.864557 21668 net.cpp:124] Setting up relu3
I0428 19:28:35.864567 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.864570 21668 net.cpp:139] Memory required for data: 370800
I0428 19:28:35.864575 21668 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:35.864584 21668 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:35.864589 21668 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:35.864598 21668 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:35.864608 21668 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:35.864701 21668 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:35.864708 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.864715 21668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:35.864719 21668 net.cpp:139] Memory required for data: 378800
I0428 19:28:35.864724 21668 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:35.864733 21668 net.cpp:86] Creating Layer accuracy
I0428 19:28:35.864738 21668 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:35.864745 21668 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:35.864754 21668 net.cpp:382] accuracy -> accuracy
I0428 19:28:35.864780 21668 net.cpp:124] Setting up accuracy
I0428 19:28:35.864789 21668 net.cpp:131] Top shape: (1)
I0428 19:28:35.864794 21668 net.cpp:139] Memory required for data: 378804
I0428 19:28:35.864799 21668 layer_factory.hpp:77] Creating layer loss
I0428 19:28:35.864809 21668 net.cpp:86] Creating Layer loss
I0428 19:28:35.864821 21668 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:35.864828 21668 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:35.864835 21668 net.cpp:382] loss -> loss
I0428 19:28:35.864846 21668 layer_factory.hpp:77] Creating layer loss
I0428 19:28:35.865142 21668 net.cpp:124] Setting up loss
I0428 19:28:35.865167 21668 net.cpp:131] Top shape: (1)
I0428 19:28:35.865172 21668 net.cpp:134]     with loss weight 1
I0428 19:28:35.865181 21668 net.cpp:139] Memory required for data: 378808
I0428 19:28:35.865186 21668 net.cpp:200] loss needs backward computation.
I0428 19:28:35.865211 21668 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:35.865216 21668 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:35.865221 21668 net.cpp:200] relu3 needs backward computation.
I0428 19:28:35.865226 21668 net.cpp:200] ip3 needs backward computation.
I0428 19:28:35.865231 21668 net.cpp:200] relu2 needs backward computation.
I0428 19:28:35.865236 21668 net.cpp:200] ip2 needs backward computation.
I0428 19:28:35.865242 21668 net.cpp:200] relu1 needs backward computation.
I0428 19:28:35.865245 21668 net.cpp:200] ip1 needs backward computation.
I0428 19:28:35.865252 21668 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:35.865257 21668 net.cpp:202] mnist does not need backward computation.
I0428 19:28:35.865262 21668 net.cpp:244] This network produces output accuracy
I0428 19:28:35.865267 21668 net.cpp:244] This network produces output loss
I0428 19:28:35.865281 21668 net.cpp:257] Network initialization done.
I0428 19:28:35.865315 21668 solver.cpp:56] Solver scaffolding done.
I0428 19:28:35.865542 21668 caffe.cpp:248] Starting Optimization
I0428 19:28:35.865550 21668 solver.cpp:273] Solving LeNet
I0428 19:28:35.865553 21668 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:35.866422 21668 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:35.867240 21668 blocking_queue.cpp:49] Waiting for data
I0428 19:28:35.944550 21676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:35.944975 21668 solver.cpp:398]     Test net output #0: accuracy = 0.1505
I0428 19:28:35.944998 21668 solver.cpp:398]     Test net output #1: loss = 2.29996 (* 1 = 2.29996 loss)
I0428 19:28:35.946259 21668 solver.cpp:219] Iteration 0 (-1.17529e-37 iter/s, 0.0806697s/100 iters), loss = 2.28879
I0428 19:28:35.946288 21668 solver.cpp:238]     Train net output #0: loss = 2.28879 (* 1 = 2.28879 loss)
I0428 19:28:35.946311 21668 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:36.005285 21668 solver.cpp:219] Iteration 100 (1695.19 iter/s, 0.0589906s/100 iters), loss = 1.15664
I0428 19:28:36.005314 21668 solver.cpp:238]     Train net output #0: loss = 1.15664 (* 1 = 1.15664 loss)
I0428 19:28:36.005338 21668 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:36.054625 21668 solver.cpp:219] Iteration 200 (2028.17 iter/s, 0.0493056s/100 iters), loss = 0.760473
I0428 19:28:36.054652 21668 solver.cpp:238]     Train net output #0: loss = 0.760473 (* 1 = 0.760473 loss)
I0428 19:28:36.054677 21668 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:36.119216 21668 solver.cpp:219] Iteration 300 (1549.07 iter/s, 0.064555s/100 iters), loss = 0.406321
I0428 19:28:36.119257 21668 solver.cpp:238]     Train net output #0: loss = 0.406321 (* 1 = 0.406321 loss)
I0428 19:28:36.119269 21668 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:36.182693 21668 solver.cpp:219] Iteration 400 (1576.63 iter/s, 0.0634265s/100 iters), loss = 0.450684
I0428 19:28:36.182739 21668 solver.cpp:238]     Train net output #0: loss = 0.450684 (* 1 = 0.450684 loss)
I0428 19:28:36.182749 21668 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:36.238191 21668 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:36.313761 21676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:36.314293 21668 solver.cpp:398]     Test net output #0: accuracy = 0.8407
I0428 19:28:36.314334 21668 solver.cpp:398]     Test net output #1: loss = 0.515288 (* 1 = 0.515288 loss)
I0428 19:28:36.314857 21668 solver.cpp:219] Iteration 500 (756.961 iter/s, 0.132107s/100 iters), loss = 0.705185
I0428 19:28:36.314893 21668 solver.cpp:238]     Train net output #0: loss = 0.705185 (* 1 = 0.705185 loss)
I0428 19:28:36.314908 21668 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:36.377624 21668 solver.cpp:219] Iteration 600 (1594.31 iter/s, 0.0627231s/100 iters), loss = 0.441259
I0428 19:28:36.377660 21668 solver.cpp:238]     Train net output #0: loss = 0.441259 (* 1 = 0.441259 loss)
I0428 19:28:36.377670 21668 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:36.431263 21668 solver.cpp:219] Iteration 700 (1865.77 iter/s, 0.0535973s/100 iters), loss = 0.768616
I0428 19:28:36.431294 21668 solver.cpp:238]     Train net output #0: loss = 0.768616 (* 1 = 0.768616 loss)
I0428 19:28:36.431301 21668 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:36.479678 21668 solver.cpp:219] Iteration 800 (2067.19 iter/s, 0.0483748s/100 iters), loss = 0.535722
I0428 19:28:36.479707 21668 solver.cpp:238]     Train net output #0: loss = 0.535722 (* 1 = 0.535722 loss)
I0428 19:28:36.479713 21668 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:36.528234 21668 solver.cpp:219] Iteration 900 (2061 iter/s, 0.04852s/100 iters), loss = 0.46394
I0428 19:28:36.528260 21668 solver.cpp:238]     Train net output #0: loss = 0.46394 (* 1 = 0.46394 loss)
I0428 19:28:36.528266 21668 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:36.545127 21675 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:36.576318 21668 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:36.577507 21668 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:36.578173 21668 solver.cpp:311] Iteration 1000, loss = 0.604785
I0428 19:28:36.578193 21668 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:36.656244 21676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:36.656829 21668 solver.cpp:398]     Test net output #0: accuracy = 0.856
I0428 19:28:36.656865 21668 solver.cpp:398]     Test net output #1: loss = 0.434187 (* 1 = 0.434187 loss)
I0428 19:28:36.656875 21668 solver.cpp:316] Optimization Done.
I0428 19:28:36.656882 21668 caffe.cpp:259] Optimization Done.
