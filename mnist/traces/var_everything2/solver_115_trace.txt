I0428 19:31:12.342712 22519 caffe.cpp:218] Using GPUs 0
I0428 19:31:12.380127 22519 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:12.897117 22519 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test115.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:12.897282 22519 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test115.prototxt
I0428 19:31:12.897650 22519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:12.897670 22519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:12.897763 22519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:12.897861 22519 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:12.897999 22519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:12.898032 22519 net.cpp:86] Creating Layer mnist
I0428 19:31:12.898044 22519 net.cpp:382] mnist -> data
I0428 19:31:12.898077 22519 net.cpp:382] mnist -> label
I0428 19:31:12.899305 22519 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:12.901787 22519 net.cpp:124] Setting up mnist
I0428 19:31:12.901808 22519 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:12.901818 22519 net.cpp:131] Top shape: 64 (64)
I0428 19:31:12.901825 22519 net.cpp:139] Memory required for data: 200960
I0428 19:31:12.901836 22519 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:12.901859 22519 net.cpp:86] Creating Layer conv0
I0428 19:31:12.901870 22519 net.cpp:408] conv0 <- data
I0428 19:31:12.901888 22519 net.cpp:382] conv0 -> conv0
I0428 19:31:13.173885 22519 net.cpp:124] Setting up conv0
I0428 19:31:13.173914 22519 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:13.173919 22519 net.cpp:139] Memory required for data: 938240
I0428 19:31:13.173940 22519 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:13.173956 22519 net.cpp:86] Creating Layer pool0
I0428 19:31:13.173979 22519 net.cpp:408] pool0 <- conv0
I0428 19:31:13.173985 22519 net.cpp:382] pool0 -> pool0
I0428 19:31:13.174033 22519 net.cpp:124] Setting up pool0
I0428 19:31:13.174038 22519 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:13.174041 22519 net.cpp:139] Memory required for data: 1122560
I0428 19:31:13.174044 22519 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:13.174052 22519 net.cpp:86] Creating Layer ip1
I0428 19:31:13.174054 22519 net.cpp:408] ip1 <- pool0
I0428 19:31:13.174058 22519 net.cpp:382] ip1 -> ip1
I0428 19:31:13.174358 22519 net.cpp:124] Setting up ip1
I0428 19:31:13.174365 22519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:13.174366 22519 net.cpp:139] Memory required for data: 1135360
I0428 19:31:13.174373 22519 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:13.174378 22519 net.cpp:86] Creating Layer relu1
I0428 19:31:13.174382 22519 net.cpp:408] relu1 <- ip1
I0428 19:31:13.174386 22519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:13.174562 22519 net.cpp:124] Setting up relu1
I0428 19:31:13.174572 22519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:13.174592 22519 net.cpp:139] Memory required for data: 1148160
I0428 19:31:13.174594 22519 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:13.174615 22519 net.cpp:86] Creating Layer ip2
I0428 19:31:13.174618 22519 net.cpp:408] ip2 <- ip1
I0428 19:31:13.174623 22519 net.cpp:382] ip2 -> ip2
I0428 19:31:13.175673 22519 net.cpp:124] Setting up ip2
I0428 19:31:13.175699 22519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:13.175719 22519 net.cpp:139] Memory required for data: 1160960
I0428 19:31:13.175727 22519 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:13.175734 22519 net.cpp:86] Creating Layer relu2
I0428 19:31:13.175737 22519 net.cpp:408] relu2 <- ip2
I0428 19:31:13.175742 22519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:13.176532 22519 net.cpp:124] Setting up relu2
I0428 19:31:13.176558 22519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:13.176578 22519 net.cpp:139] Memory required for data: 1173760
I0428 19:31:13.176581 22519 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:13.176589 22519 net.cpp:86] Creating Layer ip3
I0428 19:31:13.176591 22519 net.cpp:408] ip3 <- ip2
I0428 19:31:13.176614 22519 net.cpp:382] ip3 -> ip3
I0428 19:31:13.176733 22519 net.cpp:124] Setting up ip3
I0428 19:31:13.176739 22519 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:13.176743 22519 net.cpp:139] Memory required for data: 1176320
I0428 19:31:13.176748 22519 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:13.176755 22519 net.cpp:86] Creating Layer relu3
I0428 19:31:13.176761 22519 net.cpp:408] relu3 <- ip3
I0428 19:31:13.176782 22519 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:13.177021 22519 net.cpp:124] Setting up relu3
I0428 19:31:13.177031 22519 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:13.177036 22519 net.cpp:139] Memory required for data: 1178880
I0428 19:31:13.177038 22519 layer_factory.hpp:77] Creating layer loss
I0428 19:31:13.177044 22519 net.cpp:86] Creating Layer loss
I0428 19:31:13.177050 22519 net.cpp:408] loss <- ip3
I0428 19:31:13.177057 22519 net.cpp:408] loss <- label
I0428 19:31:13.177062 22519 net.cpp:382] loss -> loss
I0428 19:31:13.177081 22519 layer_factory.hpp:77] Creating layer loss
I0428 19:31:13.177382 22519 net.cpp:124] Setting up loss
I0428 19:31:13.177390 22519 net.cpp:131] Top shape: (1)
I0428 19:31:13.177409 22519 net.cpp:134]     with loss weight 1
I0428 19:31:13.177423 22519 net.cpp:139] Memory required for data: 1178884
I0428 19:31:13.177426 22519 net.cpp:200] loss needs backward computation.
I0428 19:31:13.177430 22519 net.cpp:200] relu3 needs backward computation.
I0428 19:31:13.177433 22519 net.cpp:200] ip3 needs backward computation.
I0428 19:31:13.177436 22519 net.cpp:200] relu2 needs backward computation.
I0428 19:31:13.177438 22519 net.cpp:200] ip2 needs backward computation.
I0428 19:31:13.177441 22519 net.cpp:200] relu1 needs backward computation.
I0428 19:31:13.177444 22519 net.cpp:200] ip1 needs backward computation.
I0428 19:31:13.177458 22519 net.cpp:200] pool0 needs backward computation.
I0428 19:31:13.177460 22519 net.cpp:200] conv0 needs backward computation.
I0428 19:31:13.177464 22519 net.cpp:202] mnist does not need backward computation.
I0428 19:31:13.177467 22519 net.cpp:244] This network produces output loss
I0428 19:31:13.177476 22519 net.cpp:257] Network initialization done.
I0428 19:31:13.177795 22519 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test115.prototxt
I0428 19:31:13.177822 22519 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:13.177933 22519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:13.178006 22519 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:13.178052 22519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:13.178066 22519 net.cpp:86] Creating Layer mnist
I0428 19:31:13.178074 22519 net.cpp:382] mnist -> data
I0428 19:31:13.178081 22519 net.cpp:382] mnist -> label
I0428 19:31:13.178189 22519 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:13.180474 22519 net.cpp:124] Setting up mnist
I0428 19:31:13.180488 22519 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:13.180493 22519 net.cpp:131] Top shape: 100 (100)
I0428 19:31:13.180496 22519 net.cpp:139] Memory required for data: 314000
I0428 19:31:13.180500 22519 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:13.180506 22519 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:13.180542 22519 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:13.180562 22519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:13.180569 22519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:13.180615 22519 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:13.180622 22519 net.cpp:131] Top shape: 100 (100)
I0428 19:31:13.180626 22519 net.cpp:131] Top shape: 100 (100)
I0428 19:31:13.180629 22519 net.cpp:139] Memory required for data: 314800
I0428 19:31:13.180641 22519 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:13.180652 22519 net.cpp:86] Creating Layer conv0
I0428 19:31:13.180658 22519 net.cpp:408] conv0 <- data
I0428 19:31:13.180680 22519 net.cpp:382] conv0 -> conv0
I0428 19:31:13.182322 22519 net.cpp:124] Setting up conv0
I0428 19:31:13.182350 22519 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:13.182353 22519 net.cpp:139] Memory required for data: 1466800
I0428 19:31:13.182363 22519 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:13.182369 22519 net.cpp:86] Creating Layer pool0
I0428 19:31:13.182374 22519 net.cpp:408] pool0 <- conv0
I0428 19:31:13.182379 22519 net.cpp:382] pool0 -> pool0
I0428 19:31:13.182416 22519 net.cpp:124] Setting up pool0
I0428 19:31:13.182421 22519 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:13.182425 22519 net.cpp:139] Memory required for data: 1754800
I0428 19:31:13.182426 22519 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:13.182435 22519 net.cpp:86] Creating Layer ip1
I0428 19:31:13.182437 22519 net.cpp:408] ip1 <- pool0
I0428 19:31:13.182442 22519 net.cpp:382] ip1 -> ip1
I0428 19:31:13.182744 22519 net.cpp:124] Setting up ip1
I0428 19:31:13.182763 22519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:13.182766 22519 net.cpp:139] Memory required for data: 1774800
I0428 19:31:13.182785 22519 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:13.182790 22519 net.cpp:86] Creating Layer relu1
I0428 19:31:13.182792 22519 net.cpp:408] relu1 <- ip1
I0428 19:31:13.182796 22519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:13.182958 22519 net.cpp:124] Setting up relu1
I0428 19:31:13.182966 22519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:13.182970 22519 net.cpp:139] Memory required for data: 1794800
I0428 19:31:13.182972 22519 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:13.182979 22519 net.cpp:86] Creating Layer ip2
I0428 19:31:13.182982 22519 net.cpp:408] ip2 <- ip1
I0428 19:31:13.182986 22519 net.cpp:382] ip2 -> ip2
I0428 19:31:13.183104 22519 net.cpp:124] Setting up ip2
I0428 19:31:13.183110 22519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:13.183113 22519 net.cpp:139] Memory required for data: 1814800
I0428 19:31:13.183120 22519 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:13.183126 22519 net.cpp:86] Creating Layer relu2
I0428 19:31:13.183130 22519 net.cpp:408] relu2 <- ip2
I0428 19:31:13.183133 22519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:13.184032 22519 net.cpp:124] Setting up relu2
I0428 19:31:13.184044 22519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:13.184062 22519 net.cpp:139] Memory required for data: 1834800
I0428 19:31:13.184067 22519 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:13.184074 22519 net.cpp:86] Creating Layer ip3
I0428 19:31:13.184078 22519 net.cpp:408] ip3 <- ip2
I0428 19:31:13.184085 22519 net.cpp:382] ip3 -> ip3
I0428 19:31:13.184262 22519 net.cpp:124] Setting up ip3
I0428 19:31:13.184272 22519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:13.184275 22519 net.cpp:139] Memory required for data: 1838800
I0428 19:31:13.184281 22519 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:13.184288 22519 net.cpp:86] Creating Layer relu3
I0428 19:31:13.184290 22519 net.cpp:408] relu3 <- ip3
I0428 19:31:13.184295 22519 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:13.184466 22519 net.cpp:124] Setting up relu3
I0428 19:31:13.184475 22519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:13.184479 22519 net.cpp:139] Memory required for data: 1842800
I0428 19:31:13.184483 22519 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:13.184487 22519 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:13.184490 22519 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:13.184496 22519 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:13.184504 22519 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:13.184556 22519 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:13.184562 22519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:13.184566 22519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:13.184579 22519 net.cpp:139] Memory required for data: 1850800
I0428 19:31:13.184582 22519 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:13.184588 22519 net.cpp:86] Creating Layer accuracy
I0428 19:31:13.184592 22519 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:13.184597 22519 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:13.184607 22519 net.cpp:382] accuracy -> accuracy
I0428 19:31:13.184615 22519 net.cpp:124] Setting up accuracy
I0428 19:31:13.184620 22519 net.cpp:131] Top shape: (1)
I0428 19:31:13.184623 22519 net.cpp:139] Memory required for data: 1850804
I0428 19:31:13.184626 22519 layer_factory.hpp:77] Creating layer loss
I0428 19:31:13.184633 22519 net.cpp:86] Creating Layer loss
I0428 19:31:13.184635 22519 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:13.184639 22519 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:13.184643 22519 net.cpp:382] loss -> loss
I0428 19:31:13.184649 22519 layer_factory.hpp:77] Creating layer loss
I0428 19:31:13.184947 22519 net.cpp:124] Setting up loss
I0428 19:31:13.184972 22519 net.cpp:131] Top shape: (1)
I0428 19:31:13.184975 22519 net.cpp:134]     with loss weight 1
I0428 19:31:13.184998 22519 net.cpp:139] Memory required for data: 1850808
I0428 19:31:13.185000 22519 net.cpp:200] loss needs backward computation.
I0428 19:31:13.185004 22519 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:13.185008 22519 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:13.185011 22519 net.cpp:200] relu3 needs backward computation.
I0428 19:31:13.185014 22519 net.cpp:200] ip3 needs backward computation.
I0428 19:31:13.185017 22519 net.cpp:200] relu2 needs backward computation.
I0428 19:31:13.185020 22519 net.cpp:200] ip2 needs backward computation.
I0428 19:31:13.185024 22519 net.cpp:200] relu1 needs backward computation.
I0428 19:31:13.185025 22519 net.cpp:200] ip1 needs backward computation.
I0428 19:31:13.185029 22519 net.cpp:200] pool0 needs backward computation.
I0428 19:31:13.185031 22519 net.cpp:200] conv0 needs backward computation.
I0428 19:31:13.185035 22519 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:13.185039 22519 net.cpp:202] mnist does not need backward computation.
I0428 19:31:13.185041 22519 net.cpp:244] This network produces output accuracy
I0428 19:31:13.185045 22519 net.cpp:244] This network produces output loss
I0428 19:31:13.185057 22519 net.cpp:257] Network initialization done.
I0428 19:31:13.185094 22519 solver.cpp:56] Solver scaffolding done.
I0428 19:31:13.185398 22519 caffe.cpp:248] Starting Optimization
I0428 19:31:13.185405 22519 solver.cpp:273] Solving LeNet
I0428 19:31:13.185407 22519 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:13.186784 22519 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:13.189672 22519 blocking_queue.cpp:49] Waiting for data
I0428 19:31:13.254786 22526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:13.255252 22519 solver.cpp:398]     Test net output #0: accuracy = 0.0828
I0428 19:31:13.255271 22519 solver.cpp:398]     Test net output #1: loss = 2.3101 (* 1 = 2.3101 loss)
I0428 19:31:13.256966 22519 solver.cpp:219] Iteration 0 (-3.52099e-33 iter/s, 0.0715283s/100 iters), loss = 2.30897
I0428 19:31:13.256992 22519 solver.cpp:238]     Train net output #0: loss = 2.30897 (* 1 = 2.30897 loss)
I0428 19:31:13.257005 22519 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:13.327323 22519 solver.cpp:219] Iteration 100 (1422.07 iter/s, 0.0703201s/100 iters), loss = 0.920265
I0428 19:31:13.327366 22519 solver.cpp:238]     Train net output #0: loss = 0.920265 (* 1 = 0.920265 loss)
I0428 19:31:13.327389 22519 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:13.389401 22519 solver.cpp:219] Iteration 200 (1612.19 iter/s, 0.0620276s/100 iters), loss = 0.485727
I0428 19:31:13.389441 22519 solver.cpp:238]     Train net output #0: loss = 0.485727 (* 1 = 0.485727 loss)
I0428 19:31:13.389446 22519 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:13.453523 22519 solver.cpp:219] Iteration 300 (1560.3 iter/s, 0.0640902s/100 iters), loss = 0.302595
I0428 19:31:13.453562 22519 solver.cpp:238]     Train net output #0: loss = 0.302595 (* 1 = 0.302595 loss)
I0428 19:31:13.453569 22519 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:13.520709 22519 solver.cpp:219] Iteration 400 (1489.13 iter/s, 0.0671531s/100 iters), loss = 0.141015
I0428 19:31:13.520733 22519 solver.cpp:238]     Train net output #0: loss = 0.141015 (* 1 = 0.141015 loss)
I0428 19:31:13.520740 22519 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:13.580435 22519 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:13.654575 22526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:13.655341 22519 solver.cpp:398]     Test net output #0: accuracy = 0.9429
I0428 19:31:13.655377 22519 solver.cpp:398]     Test net output #1: loss = 0.1919 (* 1 = 0.1919 loss)
I0428 19:31:13.656270 22519 solver.cpp:219] Iteration 500 (737.897 iter/s, 0.13552s/100 iters), loss = 0.244107
I0428 19:31:13.656330 22519 solver.cpp:238]     Train net output #0: loss = 0.244107 (* 1 = 0.244107 loss)
I0428 19:31:13.656347 22519 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:13.737720 22519 solver.cpp:219] Iteration 600 (1228.73 iter/s, 0.0813845s/100 iters), loss = 0.203654
I0428 19:31:13.737753 22519 solver.cpp:238]     Train net output #0: loss = 0.203654 (* 1 = 0.203654 loss)
I0428 19:31:13.737771 22519 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:13.802875 22519 solver.cpp:219] Iteration 700 (1535.81 iter/s, 0.0651121s/100 iters), loss = 0.262668
I0428 19:31:13.802902 22519 solver.cpp:238]     Train net output #0: loss = 0.262668 (* 1 = 0.262668 loss)
I0428 19:31:13.802922 22519 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:13.866564 22519 solver.cpp:219] Iteration 800 (1571.02 iter/s, 0.0636529s/100 iters), loss = 0.373951
I0428 19:31:13.866592 22519 solver.cpp:238]     Train net output #0: loss = 0.37395 (* 1 = 0.37395 loss)
I0428 19:31:13.866600 22519 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:13.933116 22519 solver.cpp:219] Iteration 900 (1503.42 iter/s, 0.0665149s/100 iters), loss = 0.21957
I0428 19:31:13.933145 22519 solver.cpp:238]     Train net output #0: loss = 0.21957 (* 1 = 0.21957 loss)
I0428 19:31:13.933153 22519 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:13.954542 22525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:13.995887 22519 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:13.997119 22519 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:13.997820 22519 solver.cpp:311] Iteration 1000, loss = 0.18976
I0428 19:31:13.997838 22519 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:14.072530 22526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:14.073019 22519 solver.cpp:398]     Test net output #0: accuracy = 0.9617
I0428 19:31:14.073052 22519 solver.cpp:398]     Test net output #1: loss = 0.123409 (* 1 = 0.123409 loss)
I0428 19:31:14.073058 22519 solver.cpp:316] Optimization Done.
I0428 19:31:14.073062 22519 caffe.cpp:259] Optimization Done.
