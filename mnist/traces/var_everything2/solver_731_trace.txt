I0428 19:55:23.033025 28171 caffe.cpp:218] Using GPUs 0
I0428 19:55:23.068495 28171 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:23.578303 28171 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test731.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:23.578464 28171 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test731.prototxt
I0428 19:55:23.578884 28171 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:23.578900 28171 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:23.579005 28171 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:23.579083 28171 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:23.579185 28171 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:23.579210 28171 net.cpp:86] Creating Layer mnist
I0428 19:55:23.579216 28171 net.cpp:382] mnist -> data
I0428 19:55:23.579241 28171 net.cpp:382] mnist -> label
I0428 19:55:23.580329 28171 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:23.582788 28171 net.cpp:124] Setting up mnist
I0428 19:55:23.582808 28171 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:23.582813 28171 net.cpp:131] Top shape: 64 (64)
I0428 19:55:23.582816 28171 net.cpp:139] Memory required for data: 200960
I0428 19:55:23.582824 28171 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:23.582844 28171 net.cpp:86] Creating Layer conv0
I0428 19:55:23.582864 28171 net.cpp:408] conv0 <- data
I0428 19:55:23.582876 28171 net.cpp:382] conv0 -> conv0
I0428 19:55:23.852620 28171 net.cpp:124] Setting up conv0
I0428 19:55:23.852646 28171 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:23.852650 28171 net.cpp:139] Memory required for data: 938240
I0428 19:55:23.852664 28171 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:23.852692 28171 net.cpp:86] Creating Layer pool0
I0428 19:55:23.852696 28171 net.cpp:408] pool0 <- conv0
I0428 19:55:23.852701 28171 net.cpp:382] pool0 -> pool0
I0428 19:55:23.852748 28171 net.cpp:124] Setting up pool0
I0428 19:55:23.852756 28171 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:23.852759 28171 net.cpp:139] Memory required for data: 1122560
I0428 19:55:23.852762 28171 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:23.852772 28171 net.cpp:86] Creating Layer conv1
I0428 19:55:23.852776 28171 net.cpp:408] conv1 <- pool0
I0428 19:55:23.852780 28171 net.cpp:382] conv1 -> conv1
I0428 19:55:23.855692 28171 net.cpp:124] Setting up conv1
I0428 19:55:23.855706 28171 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:23.855710 28171 net.cpp:139] Memory required for data: 2760960
I0428 19:55:23.855734 28171 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:23.855742 28171 net.cpp:86] Creating Layer pool1
I0428 19:55:23.855746 28171 net.cpp:408] pool1 <- conv1
I0428 19:55:23.855751 28171 net.cpp:382] pool1 -> pool1
I0428 19:55:23.855788 28171 net.cpp:124] Setting up pool1
I0428 19:55:23.855795 28171 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:23.855798 28171 net.cpp:139] Memory required for data: 3170560
I0428 19:55:23.855800 28171 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:23.855808 28171 net.cpp:86] Creating Layer ip1
I0428 19:55:23.855810 28171 net.cpp:408] ip1 <- pool1
I0428 19:55:23.855815 28171 net.cpp:382] ip1 -> ip1
I0428 19:55:23.856143 28171 net.cpp:124] Setting up ip1
I0428 19:55:23.856151 28171 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:23.856154 28171 net.cpp:139] Memory required for data: 3176960
I0428 19:55:23.856161 28171 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:23.856166 28171 net.cpp:86] Creating Layer relu1
I0428 19:55:23.856169 28171 net.cpp:408] relu1 <- ip1
I0428 19:55:23.856173 28171 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:23.856343 28171 net.cpp:124] Setting up relu1
I0428 19:55:23.856351 28171 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:23.856354 28171 net.cpp:139] Memory required for data: 3183360
I0428 19:55:23.856358 28171 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:23.856364 28171 net.cpp:86] Creating Layer ip2
I0428 19:55:23.856366 28171 net.cpp:408] ip2 <- ip1
I0428 19:55:23.856371 28171 net.cpp:382] ip2 -> ip2
I0428 19:55:23.857440 28171 net.cpp:124] Setting up ip2
I0428 19:55:23.857455 28171 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:23.857457 28171 net.cpp:139] Memory required for data: 3196160
I0428 19:55:23.857465 28171 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:23.857471 28171 net.cpp:86] Creating Layer relu2
I0428 19:55:23.857475 28171 net.cpp:408] relu2 <- ip2
I0428 19:55:23.857480 28171 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:23.858247 28171 net.cpp:124] Setting up relu2
I0428 19:55:23.858259 28171 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:23.858263 28171 net.cpp:139] Memory required for data: 3208960
I0428 19:55:23.858268 28171 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:23.858274 28171 net.cpp:86] Creating Layer ip3
I0428 19:55:23.858278 28171 net.cpp:408] ip3 <- ip2
I0428 19:55:23.858283 28171 net.cpp:382] ip3 -> ip3
I0428 19:55:23.858404 28171 net.cpp:124] Setting up ip3
I0428 19:55:23.858412 28171 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:23.858415 28171 net.cpp:139] Memory required for data: 3211520
I0428 19:55:23.858423 28171 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:23.858428 28171 net.cpp:86] Creating Layer relu3
I0428 19:55:23.858431 28171 net.cpp:408] relu3 <- ip3
I0428 19:55:23.858449 28171 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:23.858624 28171 net.cpp:124] Setting up relu3
I0428 19:55:23.858633 28171 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:23.858636 28171 net.cpp:139] Memory required for data: 3214080
I0428 19:55:23.858639 28171 layer_factory.hpp:77] Creating layer loss
I0428 19:55:23.858644 28171 net.cpp:86] Creating Layer loss
I0428 19:55:23.858649 28171 net.cpp:408] loss <- ip3
I0428 19:55:23.858651 28171 net.cpp:408] loss <- label
I0428 19:55:23.858657 28171 net.cpp:382] loss -> loss
I0428 19:55:23.858675 28171 layer_factory.hpp:77] Creating layer loss
I0428 19:55:23.858939 28171 net.cpp:124] Setting up loss
I0428 19:55:23.858948 28171 net.cpp:131] Top shape: (1)
I0428 19:55:23.858952 28171 net.cpp:134]     with loss weight 1
I0428 19:55:23.858968 28171 net.cpp:139] Memory required for data: 3214084
I0428 19:55:23.858970 28171 net.cpp:200] loss needs backward computation.
I0428 19:55:23.858974 28171 net.cpp:200] relu3 needs backward computation.
I0428 19:55:23.858978 28171 net.cpp:200] ip3 needs backward computation.
I0428 19:55:23.858980 28171 net.cpp:200] relu2 needs backward computation.
I0428 19:55:23.858983 28171 net.cpp:200] ip2 needs backward computation.
I0428 19:55:23.858986 28171 net.cpp:200] relu1 needs backward computation.
I0428 19:55:23.858989 28171 net.cpp:200] ip1 needs backward computation.
I0428 19:55:23.858992 28171 net.cpp:200] pool1 needs backward computation.
I0428 19:55:23.858995 28171 net.cpp:200] conv1 needs backward computation.
I0428 19:55:23.858999 28171 net.cpp:200] pool0 needs backward computation.
I0428 19:55:23.859002 28171 net.cpp:200] conv0 needs backward computation.
I0428 19:55:23.859005 28171 net.cpp:202] mnist does not need backward computation.
I0428 19:55:23.859009 28171 net.cpp:244] This network produces output loss
I0428 19:55:23.859017 28171 net.cpp:257] Network initialization done.
I0428 19:55:23.859354 28171 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test731.prototxt
I0428 19:55:23.859395 28171 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:23.859483 28171 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:23.859557 28171 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:23.859616 28171 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:23.859643 28171 net.cpp:86] Creating Layer mnist
I0428 19:55:23.859648 28171 net.cpp:382] mnist -> data
I0428 19:55:23.859655 28171 net.cpp:382] mnist -> label
I0428 19:55:23.859740 28171 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:23.861870 28171 net.cpp:124] Setting up mnist
I0428 19:55:23.861901 28171 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:23.861907 28171 net.cpp:131] Top shape: 100 (100)
I0428 19:55:23.861910 28171 net.cpp:139] Memory required for data: 314000
I0428 19:55:23.861914 28171 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:23.861925 28171 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:23.861929 28171 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:23.861934 28171 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:23.861943 28171 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:23.862016 28171 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:23.862025 28171 net.cpp:131] Top shape: 100 (100)
I0428 19:55:23.862043 28171 net.cpp:131] Top shape: 100 (100)
I0428 19:55:23.862046 28171 net.cpp:139] Memory required for data: 314800
I0428 19:55:23.862049 28171 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:23.862058 28171 net.cpp:86] Creating Layer conv0
I0428 19:55:23.862061 28171 net.cpp:408] conv0 <- data
I0428 19:55:23.862066 28171 net.cpp:382] conv0 -> conv0
I0428 19:55:23.863622 28171 net.cpp:124] Setting up conv0
I0428 19:55:23.863636 28171 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:23.863641 28171 net.cpp:139] Memory required for data: 1466800
I0428 19:55:23.863649 28171 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:23.863656 28171 net.cpp:86] Creating Layer pool0
I0428 19:55:23.863659 28171 net.cpp:408] pool0 <- conv0
I0428 19:55:23.863663 28171 net.cpp:382] pool0 -> pool0
I0428 19:55:23.863713 28171 net.cpp:124] Setting up pool0
I0428 19:55:23.863720 28171 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:23.863723 28171 net.cpp:139] Memory required for data: 1754800
I0428 19:55:23.863726 28171 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:23.863734 28171 net.cpp:86] Creating Layer conv1
I0428 19:55:23.863739 28171 net.cpp:408] conv1 <- pool0
I0428 19:55:23.863742 28171 net.cpp:382] conv1 -> conv1
I0428 19:55:23.865448 28171 net.cpp:124] Setting up conv1
I0428 19:55:23.865463 28171 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:23.865468 28171 net.cpp:139] Memory required for data: 4314800
I0428 19:55:23.865476 28171 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:23.865483 28171 net.cpp:86] Creating Layer pool1
I0428 19:55:23.865487 28171 net.cpp:408] pool1 <- conv1
I0428 19:55:23.865492 28171 net.cpp:382] pool1 -> pool1
I0428 19:55:23.865545 28171 net.cpp:124] Setting up pool1
I0428 19:55:23.865551 28171 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:23.865556 28171 net.cpp:139] Memory required for data: 4954800
I0428 19:55:23.865559 28171 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:23.865566 28171 net.cpp:86] Creating Layer ip1
I0428 19:55:23.865569 28171 net.cpp:408] ip1 <- pool1
I0428 19:55:23.865576 28171 net.cpp:382] ip1 -> ip1
I0428 19:55:23.865942 28171 net.cpp:124] Setting up ip1
I0428 19:55:23.865949 28171 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:23.865963 28171 net.cpp:139] Memory required for data: 4964800
I0428 19:55:23.865972 28171 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:23.865977 28171 net.cpp:86] Creating Layer relu1
I0428 19:55:23.865979 28171 net.cpp:408] relu1 <- ip1
I0428 19:55:23.865984 28171 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:23.866173 28171 net.cpp:124] Setting up relu1
I0428 19:55:23.866183 28171 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:23.866189 28171 net.cpp:139] Memory required for data: 4974800
I0428 19:55:23.866192 28171 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:23.866201 28171 net.cpp:86] Creating Layer ip2
I0428 19:55:23.866204 28171 net.cpp:408] ip2 <- ip1
I0428 19:55:23.866209 28171 net.cpp:382] ip2 -> ip2
I0428 19:55:23.866394 28171 net.cpp:124] Setting up ip2
I0428 19:55:23.866402 28171 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:23.866405 28171 net.cpp:139] Memory required for data: 4994800
I0428 19:55:23.866411 28171 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:23.866418 28171 net.cpp:86] Creating Layer relu2
I0428 19:55:23.866421 28171 net.cpp:408] relu2 <- ip2
I0428 19:55:23.866426 28171 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:23.866637 28171 net.cpp:124] Setting up relu2
I0428 19:55:23.866647 28171 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:23.866650 28171 net.cpp:139] Memory required for data: 5014800
I0428 19:55:23.866653 28171 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:23.866675 28171 net.cpp:86] Creating Layer ip3
I0428 19:55:23.866678 28171 net.cpp:408] ip3 <- ip2
I0428 19:55:23.866683 28171 net.cpp:382] ip3 -> ip3
I0428 19:55:23.866792 28171 net.cpp:124] Setting up ip3
I0428 19:55:23.866801 28171 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:23.866804 28171 net.cpp:139] Memory required for data: 5018800
I0428 19:55:23.866811 28171 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:23.866817 28171 net.cpp:86] Creating Layer relu3
I0428 19:55:23.866822 28171 net.cpp:408] relu3 <- ip3
I0428 19:55:23.866824 28171 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:23.867676 28171 net.cpp:124] Setting up relu3
I0428 19:55:23.867691 28171 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:23.867694 28171 net.cpp:139] Memory required for data: 5022800
I0428 19:55:23.867697 28171 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:23.867703 28171 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:23.867707 28171 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:23.867712 28171 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:23.867718 28171 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:23.867759 28171 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:23.867766 28171 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:23.867785 28171 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:23.867787 28171 net.cpp:139] Memory required for data: 5030800
I0428 19:55:23.867790 28171 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:23.867796 28171 net.cpp:86] Creating Layer accuracy
I0428 19:55:23.867799 28171 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:23.867804 28171 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:23.867807 28171 net.cpp:382] accuracy -> accuracy
I0428 19:55:23.867815 28171 net.cpp:124] Setting up accuracy
I0428 19:55:23.867818 28171 net.cpp:131] Top shape: (1)
I0428 19:55:23.867821 28171 net.cpp:139] Memory required for data: 5030804
I0428 19:55:23.867825 28171 layer_factory.hpp:77] Creating layer loss
I0428 19:55:23.867830 28171 net.cpp:86] Creating Layer loss
I0428 19:55:23.867833 28171 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:23.867836 28171 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:23.867841 28171 net.cpp:382] loss -> loss
I0428 19:55:23.867846 28171 layer_factory.hpp:77] Creating layer loss
I0428 19:55:23.868084 28171 net.cpp:124] Setting up loss
I0428 19:55:23.868093 28171 net.cpp:131] Top shape: (1)
I0428 19:55:23.868095 28171 net.cpp:134]     with loss weight 1
I0428 19:55:23.868111 28171 net.cpp:139] Memory required for data: 5030808
I0428 19:55:23.868115 28171 net.cpp:200] loss needs backward computation.
I0428 19:55:23.868119 28171 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:23.868124 28171 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:23.868126 28171 net.cpp:200] relu3 needs backward computation.
I0428 19:55:23.868129 28171 net.cpp:200] ip3 needs backward computation.
I0428 19:55:23.868132 28171 net.cpp:200] relu2 needs backward computation.
I0428 19:55:23.868135 28171 net.cpp:200] ip2 needs backward computation.
I0428 19:55:23.868139 28171 net.cpp:200] relu1 needs backward computation.
I0428 19:55:23.868141 28171 net.cpp:200] ip1 needs backward computation.
I0428 19:55:23.868144 28171 net.cpp:200] pool1 needs backward computation.
I0428 19:55:23.868147 28171 net.cpp:200] conv1 needs backward computation.
I0428 19:55:23.868150 28171 net.cpp:200] pool0 needs backward computation.
I0428 19:55:23.868154 28171 net.cpp:200] conv0 needs backward computation.
I0428 19:55:23.868157 28171 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:23.868161 28171 net.cpp:202] mnist does not need backward computation.
I0428 19:55:23.868163 28171 net.cpp:244] This network produces output accuracy
I0428 19:55:23.868166 28171 net.cpp:244] This network produces output loss
I0428 19:55:23.868178 28171 net.cpp:257] Network initialization done.
I0428 19:55:23.868221 28171 solver.cpp:56] Solver scaffolding done.
I0428 19:55:23.868593 28171 caffe.cpp:248] Starting Optimization
I0428 19:55:23.868605 28171 solver.cpp:273] Solving LeNet
I0428 19:55:23.868608 28171 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:23.869495 28171 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:23.874853 28171 blocking_queue.cpp:49] Waiting for data
I0428 19:55:23.952945 28178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:23.953577 28171 solver.cpp:398]     Test net output #0: accuracy = 0.0376
I0428 19:55:23.953598 28171 solver.cpp:398]     Test net output #1: loss = 2.33665 (* 1 = 2.33665 loss)
I0428 19:55:23.957438 28171 solver.cpp:219] Iteration 0 (-3.68035e-31 iter/s, 0.0887983s/100 iters), loss = 2.34114
I0428 19:55:23.957463 28171 solver.cpp:238]     Train net output #0: loss = 2.34114 (* 1 = 2.34114 loss)
I0428 19:55:23.957489 28171 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:24.106472 28171 solver.cpp:219] Iteration 100 (671.172 iter/s, 0.148993s/100 iters), loss = 1.0664
I0428 19:55:24.106499 28171 solver.cpp:238]     Train net output #0: loss = 1.0664 (* 1 = 1.0664 loss)
I0428 19:55:24.106523 28171 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:24.252897 28171 solver.cpp:219] Iteration 200 (683.136 iter/s, 0.146384s/100 iters), loss = 0.766219
I0428 19:55:24.252923 28171 solver.cpp:238]     Train net output #0: loss = 0.766219 (* 1 = 0.766219 loss)
I0428 19:55:24.252944 28171 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:24.400334 28171 solver.cpp:219] Iteration 300 (678.437 iter/s, 0.147398s/100 iters), loss = 0.404256
I0428 19:55:24.400367 28171 solver.cpp:238]     Train net output #0: loss = 0.404256 (* 1 = 0.404256 loss)
I0428 19:55:24.400373 28171 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:24.552243 28171 solver.cpp:219] Iteration 400 (658.478 iter/s, 0.151865s/100 iters), loss = 0.336488
I0428 19:55:24.552273 28171 solver.cpp:238]     Train net output #0: loss = 0.336488 (* 1 = 0.336488 loss)
I0428 19:55:24.552279 28171 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:24.701764 28171 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:24.755077 28178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:24.756872 28171 solver.cpp:398]     Test net output #0: accuracy = 0.8655
I0428 19:55:24.756894 28171 solver.cpp:398]     Test net output #1: loss = 0.356985 (* 1 = 0.356985 loss)
I0428 19:55:24.758291 28171 solver.cpp:219] Iteration 500 (485.425 iter/s, 0.206005s/100 iters), loss = 0.371294
I0428 19:55:24.758347 28171 solver.cpp:238]     Train net output #0: loss = 0.371294 (* 1 = 0.371294 loss)
I0428 19:55:24.758370 28171 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:24.915383 28171 solver.cpp:219] Iteration 600 (636.782 iter/s, 0.15704s/100 iters), loss = 0.38666
I0428 19:55:24.915408 28171 solver.cpp:238]     Train net output #0: loss = 0.38666 (* 1 = 0.38666 loss)
I0428 19:55:24.915432 28171 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:25.066766 28171 solver.cpp:219] Iteration 700 (660.741 iter/s, 0.151345s/100 iters), loss = 0.375653
I0428 19:55:25.066807 28171 solver.cpp:238]     Train net output #0: loss = 0.375653 (* 1 = 0.375653 loss)
I0428 19:55:25.066829 28171 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:25.217237 28171 solver.cpp:219] Iteration 800 (664.817 iter/s, 0.150417s/100 iters), loss = 0.329191
I0428 19:55:25.217268 28171 solver.cpp:238]     Train net output #0: loss = 0.329191 (* 1 = 0.329191 loss)
I0428 19:55:25.217290 28171 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:25.366227 28171 solver.cpp:219] Iteration 900 (671.384 iter/s, 0.148946s/100 iters), loss = 0.144397
I0428 19:55:25.366252 28171 solver.cpp:238]     Train net output #0: loss = 0.144397 (* 1 = 0.144397 loss)
I0428 19:55:25.366276 28171 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:25.416260 28177 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:25.514376 28171 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:25.516528 28171 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:25.517511 28171 solver.cpp:311] Iteration 1000, loss = 0.0662544
I0428 19:55:25.517526 28171 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:25.579927 28178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:25.580591 28171 solver.cpp:398]     Test net output #0: accuracy = 0.973
I0428 19:55:25.580612 28171 solver.cpp:398]     Test net output #1: loss = 0.082661 (* 1 = 0.082661 loss)
I0428 19:55:25.580617 28171 solver.cpp:316] Optimization Done.
I0428 19:55:25.580621 28171 caffe.cpp:259] Optimization Done.
