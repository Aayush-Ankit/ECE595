I0428 20:28:58.461766  3457 caffe.cpp:218] Using GPUs 0
I0428 20:28:58.503554  3457 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:59.023242  3457 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1514.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:59.023386  3457 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1514.prototxt
I0428 20:28:59.023808  3457 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:59.023828  3457 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:59.023931  3457 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:59.024010  3457 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:59.024108  3457 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:59.024135  3457 net.cpp:86] Creating Layer mnist
I0428 20:28:59.024143  3457 net.cpp:382] mnist -> data
I0428 20:28:59.024165  3457 net.cpp:382] mnist -> label
I0428 20:28:59.025296  3457 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:59.027763  3457 net.cpp:124] Setting up mnist
I0428 20:28:59.027781  3457 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:59.027789  3457 net.cpp:131] Top shape: 64 (64)
I0428 20:28:59.027792  3457 net.cpp:139] Memory required for data: 200960
I0428 20:28:59.027801  3457 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:59.027815  3457 net.cpp:86] Creating Layer conv0
I0428 20:28:59.027837  3457 net.cpp:408] conv0 <- data
I0428 20:28:59.027851  3457 net.cpp:382] conv0 -> conv0
I0428 20:28:59.315917  3457 net.cpp:124] Setting up conv0
I0428 20:28:59.315945  3457 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:59.315950  3457 net.cpp:139] Memory required for data: 14946560
I0428 20:28:59.315966  3457 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:59.315981  3457 net.cpp:86] Creating Layer pool0
I0428 20:28:59.315985  3457 net.cpp:408] pool0 <- conv0
I0428 20:28:59.315991  3457 net.cpp:382] pool0 -> pool0
I0428 20:28:59.316042  3457 net.cpp:124] Setting up pool0
I0428 20:28:59.316048  3457 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:59.316051  3457 net.cpp:139] Memory required for data: 18632960
I0428 20:28:59.316054  3457 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:59.316066  3457 net.cpp:86] Creating Layer conv1
I0428 20:28:59.316069  3457 net.cpp:408] conv1 <- pool0
I0428 20:28:59.316074  3457 net.cpp:382] conv1 -> conv1
I0428 20:28:59.318922  3457 net.cpp:124] Setting up conv1
I0428 20:28:59.318938  3457 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:59.318941  3457 net.cpp:139] Memory required for data: 18714880
I0428 20:28:59.318950  3457 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:59.318958  3457 net.cpp:86] Creating Layer pool1
I0428 20:28:59.318961  3457 net.cpp:408] pool1 <- conv1
I0428 20:28:59.318966  3457 net.cpp:382] pool1 -> pool1
I0428 20:28:59.319005  3457 net.cpp:124] Setting up pool1
I0428 20:28:59.319011  3457 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:59.319015  3457 net.cpp:139] Memory required for data: 18735360
I0428 20:28:59.319017  3457 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:59.319025  3457 net.cpp:86] Creating Layer ip1
I0428 20:28:59.319027  3457 net.cpp:408] ip1 <- pool1
I0428 20:28:59.319032  3457 net.cpp:382] ip1 -> ip1
I0428 20:28:59.319157  3457 net.cpp:124] Setting up ip1
I0428 20:28:59.319164  3457 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:59.319169  3457 net.cpp:139] Memory required for data: 18748160
I0428 20:28:59.319175  3457 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:59.319180  3457 net.cpp:86] Creating Layer relu1
I0428 20:28:59.319185  3457 net.cpp:408] relu1 <- ip1
I0428 20:28:59.319188  3457 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:59.319350  3457 net.cpp:124] Setting up relu1
I0428 20:28:59.319360  3457 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:59.319363  3457 net.cpp:139] Memory required for data: 18760960
I0428 20:28:59.319366  3457 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:59.319373  3457 net.cpp:86] Creating Layer ip2
I0428 20:28:59.319376  3457 net.cpp:408] ip2 <- ip1
I0428 20:28:59.319381  3457 net.cpp:382] ip2 -> ip2
I0428 20:28:59.319478  3457 net.cpp:124] Setting up ip2
I0428 20:28:59.319484  3457 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:59.319489  3457 net.cpp:139] Memory required for data: 18763520
I0428 20:28:59.319494  3457 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:59.319499  3457 net.cpp:86] Creating Layer relu2
I0428 20:28:59.319502  3457 net.cpp:408] relu2 <- ip2
I0428 20:28:59.319507  3457 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:59.320247  3457 net.cpp:124] Setting up relu2
I0428 20:28:59.320260  3457 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:59.320263  3457 net.cpp:139] Memory required for data: 18766080
I0428 20:28:59.320266  3457 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:59.320273  3457 net.cpp:86] Creating Layer ip3
I0428 20:28:59.320277  3457 net.cpp:408] ip3 <- ip2
I0428 20:28:59.320282  3457 net.cpp:382] ip3 -> ip3
I0428 20:28:59.320379  3457 net.cpp:124] Setting up ip3
I0428 20:28:59.320386  3457 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:59.320389  3457 net.cpp:139] Memory required for data: 18768640
I0428 20:28:59.320397  3457 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:59.320402  3457 net.cpp:86] Creating Layer relu3
I0428 20:28:59.320405  3457 net.cpp:408] relu3 <- ip3
I0428 20:28:59.320410  3457 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:59.320572  3457 net.cpp:124] Setting up relu3
I0428 20:28:59.320581  3457 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:59.320585  3457 net.cpp:139] Memory required for data: 18771200
I0428 20:28:59.320588  3457 layer_factory.hpp:77] Creating layer loss
I0428 20:28:59.320595  3457 net.cpp:86] Creating Layer loss
I0428 20:28:59.320597  3457 net.cpp:408] loss <- ip3
I0428 20:28:59.320601  3457 net.cpp:408] loss <- label
I0428 20:28:59.320606  3457 net.cpp:382] loss -> loss
I0428 20:28:59.320624  3457 layer_factory.hpp:77] Creating layer loss
I0428 20:28:59.320889  3457 net.cpp:124] Setting up loss
I0428 20:28:59.320900  3457 net.cpp:131] Top shape: (1)
I0428 20:28:59.320904  3457 net.cpp:134]     with loss weight 1
I0428 20:28:59.320919  3457 net.cpp:139] Memory required for data: 18771204
I0428 20:28:59.320924  3457 net.cpp:200] loss needs backward computation.
I0428 20:28:59.320927  3457 net.cpp:200] relu3 needs backward computation.
I0428 20:28:59.320930  3457 net.cpp:200] ip3 needs backward computation.
I0428 20:28:59.320935  3457 net.cpp:200] relu2 needs backward computation.
I0428 20:28:59.320937  3457 net.cpp:200] ip2 needs backward computation.
I0428 20:28:59.320940  3457 net.cpp:200] relu1 needs backward computation.
I0428 20:28:59.320943  3457 net.cpp:200] ip1 needs backward computation.
I0428 20:28:59.320947  3457 net.cpp:200] pool1 needs backward computation.
I0428 20:28:59.320950  3457 net.cpp:200] conv1 needs backward computation.
I0428 20:28:59.320955  3457 net.cpp:200] pool0 needs backward computation.
I0428 20:28:59.320957  3457 net.cpp:200] conv0 needs backward computation.
I0428 20:28:59.320961  3457 net.cpp:202] mnist does not need backward computation.
I0428 20:28:59.320964  3457 net.cpp:244] This network produces output loss
I0428 20:28:59.320991  3457 net.cpp:257] Network initialization done.
I0428 20:28:59.321362  3457 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1514.prototxt
I0428 20:28:59.321389  3457 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:59.321480  3457 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:59.321581  3457 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:59.321629  3457 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:59.321641  3457 net.cpp:86] Creating Layer mnist
I0428 20:28:59.321646  3457 net.cpp:382] mnist -> data
I0428 20:28:59.321655  3457 net.cpp:382] mnist -> label
I0428 20:28:59.321771  3457 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:59.323899  3457 net.cpp:124] Setting up mnist
I0428 20:28:59.323914  3457 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:59.323918  3457 net.cpp:131] Top shape: 100 (100)
I0428 20:28:59.323921  3457 net.cpp:139] Memory required for data: 314000
I0428 20:28:59.323925  3457 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:59.323933  3457 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:59.323936  3457 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:59.323941  3457 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:59.323964  3457 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:59.324017  3457 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:59.324021  3457 net.cpp:131] Top shape: 100 (100)
I0428 20:28:59.324025  3457 net.cpp:131] Top shape: 100 (100)
I0428 20:28:59.324029  3457 net.cpp:139] Memory required for data: 314800
I0428 20:28:59.324033  3457 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:59.324040  3457 net.cpp:86] Creating Layer conv0
I0428 20:28:59.324044  3457 net.cpp:408] conv0 <- data
I0428 20:28:59.324049  3457 net.cpp:382] conv0 -> conv0
I0428 20:28:59.325829  3457 net.cpp:124] Setting up conv0
I0428 20:28:59.325842  3457 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:59.325846  3457 net.cpp:139] Memory required for data: 23354800
I0428 20:28:59.325855  3457 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:59.325862  3457 net.cpp:86] Creating Layer pool0
I0428 20:28:59.325865  3457 net.cpp:408] pool0 <- conv0
I0428 20:28:59.325870  3457 net.cpp:382] pool0 -> pool0
I0428 20:28:59.325907  3457 net.cpp:124] Setting up pool0
I0428 20:28:59.325912  3457 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:59.325915  3457 net.cpp:139] Memory required for data: 29114800
I0428 20:28:59.325918  3457 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:59.325927  3457 net.cpp:86] Creating Layer conv1
I0428 20:28:59.325930  3457 net.cpp:408] conv1 <- pool0
I0428 20:28:59.325935  3457 net.cpp:382] conv1 -> conv1
I0428 20:28:59.327487  3457 net.cpp:124] Setting up conv1
I0428 20:28:59.327502  3457 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:59.327522  3457 net.cpp:139] Memory required for data: 29242800
I0428 20:28:59.327533  3457 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:59.327540  3457 net.cpp:86] Creating Layer pool1
I0428 20:28:59.327544  3457 net.cpp:408] pool1 <- conv1
I0428 20:28:59.327549  3457 net.cpp:382] pool1 -> pool1
I0428 20:28:59.327601  3457 net.cpp:124] Setting up pool1
I0428 20:28:59.327607  3457 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:59.327610  3457 net.cpp:139] Memory required for data: 29274800
I0428 20:28:59.327615  3457 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:59.327620  3457 net.cpp:86] Creating Layer ip1
I0428 20:28:59.327623  3457 net.cpp:408] ip1 <- pool1
I0428 20:28:59.327628  3457 net.cpp:382] ip1 -> ip1
I0428 20:28:59.327752  3457 net.cpp:124] Setting up ip1
I0428 20:28:59.327761  3457 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:59.327775  3457 net.cpp:139] Memory required for data: 29294800
I0428 20:28:59.327783  3457 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:59.327788  3457 net.cpp:86] Creating Layer relu1
I0428 20:28:59.327791  3457 net.cpp:408] relu1 <- ip1
I0428 20:28:59.327796  3457 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:59.327965  3457 net.cpp:124] Setting up relu1
I0428 20:28:59.327975  3457 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:59.327985  3457 net.cpp:139] Memory required for data: 29314800
I0428 20:28:59.327987  3457 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:59.327996  3457 net.cpp:86] Creating Layer ip2
I0428 20:28:59.327998  3457 net.cpp:408] ip2 <- ip1
I0428 20:28:59.328004  3457 net.cpp:382] ip2 -> ip2
I0428 20:28:59.328138  3457 net.cpp:124] Setting up ip2
I0428 20:28:59.328146  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.328150  3457 net.cpp:139] Memory required for data: 29318800
I0428 20:28:59.328156  3457 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:59.328161  3457 net.cpp:86] Creating Layer relu2
I0428 20:28:59.328164  3457 net.cpp:408] relu2 <- ip2
I0428 20:28:59.328168  3457 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:59.328361  3457 net.cpp:124] Setting up relu2
I0428 20:28:59.328369  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.328373  3457 net.cpp:139] Memory required for data: 29322800
I0428 20:28:59.328377  3457 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:59.328382  3457 net.cpp:86] Creating Layer ip3
I0428 20:28:59.328385  3457 net.cpp:408] ip3 <- ip2
I0428 20:28:59.328390  3457 net.cpp:382] ip3 -> ip3
I0428 20:28:59.328511  3457 net.cpp:124] Setting up ip3
I0428 20:28:59.328518  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.328521  3457 net.cpp:139] Memory required for data: 29326800
I0428 20:28:59.328529  3457 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:59.328534  3457 net.cpp:86] Creating Layer relu3
I0428 20:28:59.328536  3457 net.cpp:408] relu3 <- ip3
I0428 20:28:59.328541  3457 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:59.329355  3457 net.cpp:124] Setting up relu3
I0428 20:28:59.329370  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.329375  3457 net.cpp:139] Memory required for data: 29330800
I0428 20:28:59.329377  3457 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:59.329383  3457 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:59.329387  3457 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:59.329398  3457 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:59.329406  3457 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:59.329442  3457 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:59.329447  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.329452  3457 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:59.329455  3457 net.cpp:139] Memory required for data: 29338800
I0428 20:28:59.329458  3457 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:59.329468  3457 net.cpp:86] Creating Layer accuracy
I0428 20:28:59.329476  3457 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:59.329480  3457 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:59.329485  3457 net.cpp:382] accuracy -> accuracy
I0428 20:28:59.329493  3457 net.cpp:124] Setting up accuracy
I0428 20:28:59.329499  3457 net.cpp:131] Top shape: (1)
I0428 20:28:59.329501  3457 net.cpp:139] Memory required for data: 29338804
I0428 20:28:59.329509  3457 layer_factory.hpp:77] Creating layer loss
I0428 20:28:59.329514  3457 net.cpp:86] Creating Layer loss
I0428 20:28:59.329516  3457 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:59.329519  3457 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:59.329524  3457 net.cpp:382] loss -> loss
I0428 20:28:59.329530  3457 layer_factory.hpp:77] Creating layer loss
I0428 20:28:59.329807  3457 net.cpp:124] Setting up loss
I0428 20:28:59.329818  3457 net.cpp:131] Top shape: (1)
I0428 20:28:59.329821  3457 net.cpp:134]     with loss weight 1
I0428 20:28:59.329838  3457 net.cpp:139] Memory required for data: 29338808
I0428 20:28:59.329843  3457 net.cpp:200] loss needs backward computation.
I0428 20:28:59.329846  3457 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:59.329867  3457 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:59.329871  3457 net.cpp:200] relu3 needs backward computation.
I0428 20:28:59.329874  3457 net.cpp:200] ip3 needs backward computation.
I0428 20:28:59.329877  3457 net.cpp:200] relu2 needs backward computation.
I0428 20:28:59.329880  3457 net.cpp:200] ip2 needs backward computation.
I0428 20:28:59.329890  3457 net.cpp:200] relu1 needs backward computation.
I0428 20:28:59.329893  3457 net.cpp:200] ip1 needs backward computation.
I0428 20:28:59.329896  3457 net.cpp:200] pool1 needs backward computation.
I0428 20:28:59.329900  3457 net.cpp:200] conv1 needs backward computation.
I0428 20:28:59.329903  3457 net.cpp:200] pool0 needs backward computation.
I0428 20:28:59.329906  3457 net.cpp:200] conv0 needs backward computation.
I0428 20:28:59.329910  3457 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:59.329915  3457 net.cpp:202] mnist does not need backward computation.
I0428 20:28:59.329917  3457 net.cpp:244] This network produces output accuracy
I0428 20:28:59.329921  3457 net.cpp:244] This network produces output loss
I0428 20:28:59.329932  3457 net.cpp:257] Network initialization done.
I0428 20:28:59.329989  3457 solver.cpp:56] Solver scaffolding done.
I0428 20:28:59.330333  3457 caffe.cpp:248] Starting Optimization
I0428 20:28:59.330339  3457 solver.cpp:273] Solving LeNet
I0428 20:28:59.330343  3457 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:59.331178  3457 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:59.426703  3464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:59.429198  3457 solver.cpp:398]     Test net output #0: accuracy = 0.0973
I0428 20:28:59.429232  3457 solver.cpp:398]     Test net output #1: loss = 2.30302 (* 1 = 2.30302 loss)
I0428 20:28:59.433686  3457 solver.cpp:219] Iteration 0 (0 iter/s, 0.103315s/100 iters), loss = 2.30184
I0428 20:28:59.433738  3457 solver.cpp:238]     Train net output #0: loss = 2.30184 (* 1 = 2.30184 loss)
I0428 20:28:59.433749  3457 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:59.636466  3457 solver.cpp:219] Iteration 100 (493.311 iter/s, 0.202712s/100 iters), loss = 0.48381
I0428 20:28:59.636507  3457 solver.cpp:238]     Train net output #0: loss = 0.48381 (* 1 = 0.48381 loss)
I0428 20:28:59.636513  3457 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:59.838758  3457 solver.cpp:219] Iteration 200 (494.485 iter/s, 0.202231s/100 iters), loss = 0.232858
I0428 20:28:59.838809  3457 solver.cpp:238]     Train net output #0: loss = 0.232858 (* 1 = 0.232858 loss)
I0428 20:28:59.838820  3457 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:00.046622  3457 solver.cpp:219] Iteration 300 (481.224 iter/s, 0.207803s/100 iters), loss = 0.23449
I0428 20:29:00.046663  3457 solver.cpp:238]     Train net output #0: loss = 0.23449 (* 1 = 0.23449 loss)
I0428 20:29:00.046669  3457 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:00.263914  3457 solver.cpp:219] Iteration 400 (460.306 iter/s, 0.217247s/100 iters), loss = 0.166141
I0428 20:29:00.263962  3457 solver.cpp:238]     Train net output #0: loss = 0.166141 (* 1 = 0.166141 loss)
I0428 20:29:00.263975  3457 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:00.479284  3457 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:00.595537  3464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:00.597273  3457 solver.cpp:398]     Test net output #0: accuracy = 0.9566
I0428 20:29:00.597307  3457 solver.cpp:398]     Test net output #1: loss = 0.137334 (* 1 = 0.137334 loss)
I0428 20:29:00.599514  3457 solver.cpp:219] Iteration 500 (298.034 iter/s, 0.335532s/100 iters), loss = 0.146658
I0428 20:29:00.599541  3457 solver.cpp:238]     Train net output #0: loss = 0.146658 (* 1 = 0.146658 loss)
I0428 20:29:00.599568  3457 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:00.804181  3457 solver.cpp:219] Iteration 600 (488.699 iter/s, 0.204625s/100 iters), loss = 0.0951947
I0428 20:29:00.804210  3457 solver.cpp:238]     Train net output #0: loss = 0.0951946 (* 1 = 0.0951946 loss)
I0428 20:29:00.804220  3457 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:01.006161  3457 solver.cpp:219] Iteration 700 (495.205 iter/s, 0.201937s/100 iters), loss = 0.163077
I0428 20:29:01.006199  3457 solver.cpp:238]     Train net output #0: loss = 0.163077 (* 1 = 0.163077 loss)
I0428 20:29:01.006207  3457 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:01.207064  3457 solver.cpp:219] Iteration 800 (497.865 iter/s, 0.200858s/100 iters), loss = 0.20148
I0428 20:29:01.207094  3457 solver.cpp:238]     Train net output #0: loss = 0.20148 (* 1 = 0.20148 loss)
I0428 20:29:01.207103  3457 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:01.412721  3457 solver.cpp:219] Iteration 900 (486.355 iter/s, 0.205611s/100 iters), loss = 0.218449
I0428 20:29:01.412755  3457 solver.cpp:238]     Train net output #0: loss = 0.218449 (* 1 = 0.218449 loss)
I0428 20:29:01.412762  3457 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:01.484084  3463 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:01.626564  3457 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:01.628481  3457 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:01.629726  3457 solver.cpp:311] Iteration 1000, loss = 0.0869578
I0428 20:29:01.629763  3457 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:01.743191  3464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:01.744913  3457 solver.cpp:398]     Test net output #0: accuracy = 0.9701
I0428 20:29:01.744941  3457 solver.cpp:398]     Test net output #1: loss = 0.0903193 (* 1 = 0.0903193 loss)
I0428 20:29:01.744952  3457 solver.cpp:316] Optimization Done.
I0428 20:29:01.744964  3457 caffe.cpp:259] Optimization Done.
