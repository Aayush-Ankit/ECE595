I0428 20:25:46.764432  2674 caffe.cpp:218] Using GPUs 0
I0428 20:25:46.793128  2674 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:47.287916  2674 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1460.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:47.288058  2674 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1460.prototxt
I0428 20:25:47.288473  2674 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:47.288492  2674 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:47.288594  2674 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:47.288676  2674 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:47.288775  2674 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:47.288799  2674 net.cpp:86] Creating Layer mnist
I0428 20:25:47.288808  2674 net.cpp:382] mnist -> data
I0428 20:25:47.288838  2674 net.cpp:382] mnist -> label
I0428 20:25:47.289937  2674 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:47.292394  2674 net.cpp:124] Setting up mnist
I0428 20:25:47.292414  2674 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:47.292420  2674 net.cpp:131] Top shape: 64 (64)
I0428 20:25:47.292423  2674 net.cpp:139] Memory required for data: 200960
I0428 20:25:47.292430  2674 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:47.292448  2674 net.cpp:86] Creating Layer conv0
I0428 20:25:47.292469  2674 net.cpp:408] conv0 <- data
I0428 20:25:47.292480  2674 net.cpp:382] conv0 -> conv0
I0428 20:25:47.550721  2674 net.cpp:124] Setting up conv0
I0428 20:25:47.550762  2674 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:47.550766  2674 net.cpp:139] Memory required for data: 14946560
I0428 20:25:47.550781  2674 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:47.550792  2674 net.cpp:86] Creating Layer pool0
I0428 20:25:47.550796  2674 net.cpp:408] pool0 <- conv0
I0428 20:25:47.550801  2674 net.cpp:382] pool0 -> pool0
I0428 20:25:47.550846  2674 net.cpp:124] Setting up pool0
I0428 20:25:47.550853  2674 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:47.550856  2674 net.cpp:139] Memory required for data: 18632960
I0428 20:25:47.550859  2674 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:47.550868  2674 net.cpp:86] Creating Layer conv1
I0428 20:25:47.550873  2674 net.cpp:408] conv1 <- pool0
I0428 20:25:47.550894  2674 net.cpp:382] conv1 -> conv1
I0428 20:25:47.553733  2674 net.cpp:124] Setting up conv1
I0428 20:25:47.553747  2674 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:47.553750  2674 net.cpp:139] Memory required for data: 18665728
I0428 20:25:47.553773  2674 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:47.553795  2674 net.cpp:86] Creating Layer pool1
I0428 20:25:47.553798  2674 net.cpp:408] pool1 <- conv1
I0428 20:25:47.553802  2674 net.cpp:382] pool1 -> pool1
I0428 20:25:47.553853  2674 net.cpp:124] Setting up pool1
I0428 20:25:47.553858  2674 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:47.553860  2674 net.cpp:139] Memory required for data: 18673920
I0428 20:25:47.553863  2674 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:47.553869  2674 net.cpp:86] Creating Layer ip1
I0428 20:25:47.553872  2674 net.cpp:408] ip1 <- pool1
I0428 20:25:47.553876  2674 net.cpp:382] ip1 -> ip1
I0428 20:25:47.553964  2674 net.cpp:124] Setting up ip1
I0428 20:25:47.553972  2674 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:47.553973  2674 net.cpp:139] Memory required for data: 18676480
I0428 20:25:47.553980  2674 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:47.553985  2674 net.cpp:86] Creating Layer relu1
I0428 20:25:47.553988  2674 net.cpp:408] relu1 <- ip1
I0428 20:25:47.553992  2674 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:47.554148  2674 net.cpp:124] Setting up relu1
I0428 20:25:47.554157  2674 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:47.554160  2674 net.cpp:139] Memory required for data: 18679040
I0428 20:25:47.554163  2674 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:47.554169  2674 net.cpp:86] Creating Layer ip2
I0428 20:25:47.554172  2674 net.cpp:408] ip2 <- ip1
I0428 20:25:47.554191  2674 net.cpp:382] ip2 -> ip2
I0428 20:25:47.554275  2674 net.cpp:124] Setting up ip2
I0428 20:25:47.554281  2674 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:25:47.554283  2674 net.cpp:139] Memory required for data: 18685440
I0428 20:25:47.554288  2674 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:47.554293  2674 net.cpp:86] Creating Layer relu2
I0428 20:25:47.554296  2674 net.cpp:408] relu2 <- ip2
I0428 20:25:47.554301  2674 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:47.555028  2674 net.cpp:124] Setting up relu2
I0428 20:25:47.555040  2674 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:25:47.555058  2674 net.cpp:139] Memory required for data: 18691840
I0428 20:25:47.555061  2674 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:47.555068  2674 net.cpp:86] Creating Layer ip3
I0428 20:25:47.555071  2674 net.cpp:408] ip3 <- ip2
I0428 20:25:47.555076  2674 net.cpp:382] ip3 -> ip3
I0428 20:25:47.555167  2674 net.cpp:124] Setting up ip3
I0428 20:25:47.555173  2674 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:47.555176  2674 net.cpp:139] Memory required for data: 18694400
I0428 20:25:47.555183  2674 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:47.555188  2674 net.cpp:86] Creating Layer relu3
I0428 20:25:47.555191  2674 net.cpp:408] relu3 <- ip3
I0428 20:25:47.555196  2674 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:47.555351  2674 net.cpp:124] Setting up relu3
I0428 20:25:47.555361  2674 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:47.555363  2674 net.cpp:139] Memory required for data: 18696960
I0428 20:25:47.555366  2674 layer_factory.hpp:77] Creating layer loss
I0428 20:25:47.555371  2674 net.cpp:86] Creating Layer loss
I0428 20:25:47.555374  2674 net.cpp:408] loss <- ip3
I0428 20:25:47.555378  2674 net.cpp:408] loss <- label
I0428 20:25:47.555383  2674 net.cpp:382] loss -> loss
I0428 20:25:47.555399  2674 layer_factory.hpp:77] Creating layer loss
I0428 20:25:47.555613  2674 net.cpp:124] Setting up loss
I0428 20:25:47.555621  2674 net.cpp:131] Top shape: (1)
I0428 20:25:47.555624  2674 net.cpp:134]     with loss weight 1
I0428 20:25:47.555637  2674 net.cpp:139] Memory required for data: 18696964
I0428 20:25:47.555641  2674 net.cpp:200] loss needs backward computation.
I0428 20:25:47.555645  2674 net.cpp:200] relu3 needs backward computation.
I0428 20:25:47.555647  2674 net.cpp:200] ip3 needs backward computation.
I0428 20:25:47.555650  2674 net.cpp:200] relu2 needs backward computation.
I0428 20:25:47.555654  2674 net.cpp:200] ip2 needs backward computation.
I0428 20:25:47.555655  2674 net.cpp:200] relu1 needs backward computation.
I0428 20:25:47.555658  2674 net.cpp:200] ip1 needs backward computation.
I0428 20:25:47.555661  2674 net.cpp:200] pool1 needs backward computation.
I0428 20:25:47.555665  2674 net.cpp:200] conv1 needs backward computation.
I0428 20:25:47.555667  2674 net.cpp:200] pool0 needs backward computation.
I0428 20:25:47.555670  2674 net.cpp:200] conv0 needs backward computation.
I0428 20:25:47.555673  2674 net.cpp:202] mnist does not need backward computation.
I0428 20:25:47.555675  2674 net.cpp:244] This network produces output loss
I0428 20:25:47.555685  2674 net.cpp:257] Network initialization done.
I0428 20:25:47.555994  2674 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1460.prototxt
I0428 20:25:47.556018  2674 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:47.556103  2674 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:47.556176  2674 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:47.556216  2674 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:47.556228  2674 net.cpp:86] Creating Layer mnist
I0428 20:25:47.556232  2674 net.cpp:382] mnist -> data
I0428 20:25:47.556239  2674 net.cpp:382] mnist -> label
I0428 20:25:47.556316  2674 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:47.558365  2674 net.cpp:124] Setting up mnist
I0428 20:25:47.558378  2674 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:47.558383  2674 net.cpp:131] Top shape: 100 (100)
I0428 20:25:47.558387  2674 net.cpp:139] Memory required for data: 314000
I0428 20:25:47.558390  2674 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:47.558418  2674 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:47.558437  2674 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:47.558441  2674 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:47.558447  2674 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:47.558493  2674 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:47.558500  2674 net.cpp:131] Top shape: 100 (100)
I0428 20:25:47.558502  2674 net.cpp:131] Top shape: 100 (100)
I0428 20:25:47.558506  2674 net.cpp:139] Memory required for data: 314800
I0428 20:25:47.558508  2674 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:47.558516  2674 net.cpp:86] Creating Layer conv0
I0428 20:25:47.558519  2674 net.cpp:408] conv0 <- data
I0428 20:25:47.558523  2674 net.cpp:382] conv0 -> conv0
I0428 20:25:47.560096  2674 net.cpp:124] Setting up conv0
I0428 20:25:47.560111  2674 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:47.560113  2674 net.cpp:139] Memory required for data: 23354800
I0428 20:25:47.560137  2674 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:47.560158  2674 net.cpp:86] Creating Layer pool0
I0428 20:25:47.560161  2674 net.cpp:408] pool0 <- conv0
I0428 20:25:47.560168  2674 net.cpp:382] pool0 -> pool0
I0428 20:25:47.560202  2674 net.cpp:124] Setting up pool0
I0428 20:25:47.560207  2674 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:47.560209  2674 net.cpp:139] Memory required for data: 29114800
I0428 20:25:47.560212  2674 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:47.560222  2674 net.cpp:86] Creating Layer conv1
I0428 20:25:47.560225  2674 net.cpp:408] conv1 <- pool0
I0428 20:25:47.560230  2674 net.cpp:382] conv1 -> conv1
I0428 20:25:47.561887  2674 net.cpp:124] Setting up conv1
I0428 20:25:47.561900  2674 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:47.561904  2674 net.cpp:139] Memory required for data: 29166000
I0428 20:25:47.561913  2674 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:47.561920  2674 net.cpp:86] Creating Layer pool1
I0428 20:25:47.561923  2674 net.cpp:408] pool1 <- conv1
I0428 20:25:47.561934  2674 net.cpp:382] pool1 -> pool1
I0428 20:25:47.561970  2674 net.cpp:124] Setting up pool1
I0428 20:25:47.561975  2674 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:47.561978  2674 net.cpp:139] Memory required for data: 29178800
I0428 20:25:47.561980  2674 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:47.561986  2674 net.cpp:86] Creating Layer ip1
I0428 20:25:47.561990  2674 net.cpp:408] ip1 <- pool1
I0428 20:25:47.561995  2674 net.cpp:382] ip1 -> ip1
I0428 20:25:47.562099  2674 net.cpp:124] Setting up ip1
I0428 20:25:47.562106  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.562120  2674 net.cpp:139] Memory required for data: 29182800
I0428 20:25:47.562127  2674 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:47.562132  2674 net.cpp:86] Creating Layer relu1
I0428 20:25:47.562144  2674 net.cpp:408] relu1 <- ip1
I0428 20:25:47.562163  2674 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:47.562356  2674 net.cpp:124] Setting up relu1
I0428 20:25:47.562366  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.562369  2674 net.cpp:139] Memory required for data: 29186800
I0428 20:25:47.562372  2674 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:47.562381  2674 net.cpp:86] Creating Layer ip2
I0428 20:25:47.562383  2674 net.cpp:408] ip2 <- ip1
I0428 20:25:47.562389  2674 net.cpp:382] ip2 -> ip2
I0428 20:25:47.562490  2674 net.cpp:124] Setting up ip2
I0428 20:25:47.562499  2674 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:25:47.562507  2674 net.cpp:139] Memory required for data: 29196800
I0428 20:25:47.562513  2674 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:47.562518  2674 net.cpp:86] Creating Layer relu2
I0428 20:25:47.562527  2674 net.cpp:408] relu2 <- ip2
I0428 20:25:47.562532  2674 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:47.562721  2674 net.cpp:124] Setting up relu2
I0428 20:25:47.562728  2674 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:25:47.562731  2674 net.cpp:139] Memory required for data: 29206800
I0428 20:25:47.562734  2674 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:47.562741  2674 net.cpp:86] Creating Layer ip3
I0428 20:25:47.562744  2674 net.cpp:408] ip3 <- ip2
I0428 20:25:47.562749  2674 net.cpp:382] ip3 -> ip3
I0428 20:25:47.562841  2674 net.cpp:124] Setting up ip3
I0428 20:25:47.562849  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.562851  2674 net.cpp:139] Memory required for data: 29210800
I0428 20:25:47.562860  2674 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:47.562863  2674 net.cpp:86] Creating Layer relu3
I0428 20:25:47.562866  2674 net.cpp:408] relu3 <- ip3
I0428 20:25:47.562870  2674 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:47.563661  2674 net.cpp:124] Setting up relu3
I0428 20:25:47.563673  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.563678  2674 net.cpp:139] Memory required for data: 29214800
I0428 20:25:47.563680  2674 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:47.563688  2674 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:47.563690  2674 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:47.563696  2674 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:47.563704  2674 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:47.563772  2674 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:47.563777  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.563787  2674 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:47.563791  2674 net.cpp:139] Memory required for data: 29222800
I0428 20:25:47.563793  2674 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:47.563799  2674 net.cpp:86] Creating Layer accuracy
I0428 20:25:47.563802  2674 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:47.563807  2674 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:47.563810  2674 net.cpp:382] accuracy -> accuracy
I0428 20:25:47.563817  2674 net.cpp:124] Setting up accuracy
I0428 20:25:47.563822  2674 net.cpp:131] Top shape: (1)
I0428 20:25:47.563823  2674 net.cpp:139] Memory required for data: 29222804
I0428 20:25:47.563827  2674 layer_factory.hpp:77] Creating layer loss
I0428 20:25:47.563832  2674 net.cpp:86] Creating Layer loss
I0428 20:25:47.563835  2674 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:47.563838  2674 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:47.563843  2674 net.cpp:382] loss -> loss
I0428 20:25:47.563848  2674 layer_factory.hpp:77] Creating layer loss
I0428 20:25:47.564106  2674 net.cpp:124] Setting up loss
I0428 20:25:47.564116  2674 net.cpp:131] Top shape: (1)
I0428 20:25:47.564118  2674 net.cpp:134]     with loss weight 1
I0428 20:25:47.564133  2674 net.cpp:139] Memory required for data: 29222808
I0428 20:25:47.564136  2674 net.cpp:200] loss needs backward computation.
I0428 20:25:47.564141  2674 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:47.564146  2674 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:47.564148  2674 net.cpp:200] relu3 needs backward computation.
I0428 20:25:47.564151  2674 net.cpp:200] ip3 needs backward computation.
I0428 20:25:47.564153  2674 net.cpp:200] relu2 needs backward computation.
I0428 20:25:47.564157  2674 net.cpp:200] ip2 needs backward computation.
I0428 20:25:47.564159  2674 net.cpp:200] relu1 needs backward computation.
I0428 20:25:47.564162  2674 net.cpp:200] ip1 needs backward computation.
I0428 20:25:47.564165  2674 net.cpp:200] pool1 needs backward computation.
I0428 20:25:47.564168  2674 net.cpp:200] conv1 needs backward computation.
I0428 20:25:47.564172  2674 net.cpp:200] pool0 needs backward computation.
I0428 20:25:47.564180  2674 net.cpp:200] conv0 needs backward computation.
I0428 20:25:47.564183  2674 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:47.564188  2674 net.cpp:202] mnist does not need backward computation.
I0428 20:25:47.564189  2674 net.cpp:244] This network produces output accuracy
I0428 20:25:47.564193  2674 net.cpp:244] This network produces output loss
I0428 20:25:47.564204  2674 net.cpp:257] Network initialization done.
I0428 20:25:47.564254  2674 solver.cpp:56] Solver scaffolding done.
I0428 20:25:47.564555  2674 caffe.cpp:248] Starting Optimization
I0428 20:25:47.564561  2674 solver.cpp:273] Solving LeNet
I0428 20:25:47.564564  2674 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:47.565439  2674 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:47.661746  2689 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:47.664288  2674 solver.cpp:398]     Test net output #0: accuracy = 0.0979
I0428 20:25:47.664307  2674 solver.cpp:398]     Test net output #1: loss = 2.31536 (* 1 = 2.31536 loss)
I0428 20:25:47.668604  2674 solver.cpp:219] Iteration 0 (-1.21392e-31 iter/s, 0.104014s/100 iters), loss = 2.34001
I0428 20:25:47.668628  2674 solver.cpp:238]     Train net output #0: loss = 2.34001 (* 1 = 2.34001 loss)
I0428 20:25:47.668638  2674 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:47.877223  2674 solver.cpp:219] Iteration 100 (479.445 iter/s, 0.208574s/100 iters), loss = 1.46287
I0428 20:25:47.877257  2674 solver.cpp:238]     Train net output #0: loss = 1.46287 (* 1 = 1.46287 loss)
I0428 20:25:47.877265  2674 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:48.095224  2674 solver.cpp:219] Iteration 200 (458.823 iter/s, 0.217949s/100 iters), loss = 0.812766
I0428 20:25:48.095270  2674 solver.cpp:238]     Train net output #0: loss = 0.812766 (* 1 = 0.812766 loss)
I0428 20:25:48.095281  2674 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:48.306495  2674 solver.cpp:219] Iteration 300 (473.466 iter/s, 0.211208s/100 iters), loss = 0.578226
I0428 20:25:48.306550  2674 solver.cpp:238]     Train net output #0: loss = 0.578226 (* 1 = 0.578226 loss)
I0428 20:25:48.306565  2674 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:48.524297  2674 solver.cpp:219] Iteration 400 (459.286 iter/s, 0.217729s/100 iters), loss = 0.618857
I0428 20:25:48.524354  2674 solver.cpp:238]     Train net output #0: loss = 0.618857 (* 1 = 0.618857 loss)
I0428 20:25:48.524368  2674 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:48.736003  2674 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:48.835799  2689 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:48.838596  2674 solver.cpp:398]     Test net output #0: accuracy = 0.8225
I0428 20:25:48.838624  2674 solver.cpp:398]     Test net output #1: loss = 0.495167 (* 1 = 0.495167 loss)
I0428 20:25:48.840574  2674 solver.cpp:219] Iteration 500 (316.253 iter/s, 0.316203s/100 iters), loss = 0.394686
I0428 20:25:48.840601  2674 solver.cpp:238]     Train net output #0: loss = 0.394686 (* 1 = 0.394686 loss)
I0428 20:25:48.840626  2674 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:49.060298  2674 solver.cpp:219] Iteration 600 (455.215 iter/s, 0.219677s/100 iters), loss = 0.437313
I0428 20:25:49.060348  2674 solver.cpp:238]     Train net output #0: loss = 0.437313 (* 1 = 0.437313 loss)
I0428 20:25:49.060366  2674 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:49.273560  2674 solver.cpp:219] Iteration 700 (469.052 iter/s, 0.213196s/100 iters), loss = 0.572639
I0428 20:25:49.273600  2674 solver.cpp:238]     Train net output #0: loss = 0.572639 (* 1 = 0.572639 loss)
I0428 20:25:49.273610  2674 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:49.493582  2674 solver.cpp:219] Iteration 800 (454.625 iter/s, 0.219961s/100 iters), loss = 0.745505
I0428 20:25:49.493630  2674 solver.cpp:238]     Train net output #0: loss = 0.745505 (* 1 = 0.745505 loss)
I0428 20:25:49.493645  2674 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:49.708881  2674 solver.cpp:219] Iteration 900 (464.611 iter/s, 0.215234s/100 iters), loss = 0.560203
I0428 20:25:49.708920  2674 solver.cpp:238]     Train net output #0: loss = 0.560203 (* 1 = 0.560203 loss)
I0428 20:25:49.708935  2674 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:49.779093  2688 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:49.925838  2674 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:49.927585  2674 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:49.928710  2674 solver.cpp:311] Iteration 1000, loss = 0.599314
I0428 20:25:49.928737  2674 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:50.030508  2689 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:50.033301  2674 solver.cpp:398]     Test net output #0: accuracy = 0.8381
I0428 20:25:50.033327  2674 solver.cpp:398]     Test net output #1: loss = 0.446577 (* 1 = 0.446577 loss)
I0428 20:25:50.033334  2674 solver.cpp:316] Optimization Done.
I0428 20:25:50.033337  2674 caffe.cpp:259] Optimization Done.
