I0428 19:31:49.159926 22676 caffe.cpp:218] Using GPUs 0
I0428 19:31:49.196950 22676 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:49.701769 22676 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test134.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:49.701946 22676 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test134.prototxt
I0428 19:31:49.702324 22676 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:49.702348 22676 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:49.702446 22676 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:49.702554 22676 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:49.702687 22676 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:49.702718 22676 net.cpp:86] Creating Layer mnist
I0428 19:31:49.702733 22676 net.cpp:382] mnist -> data
I0428 19:31:49.702764 22676 net.cpp:382] mnist -> label
I0428 19:31:49.704000 22676 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:49.706609 22676 net.cpp:124] Setting up mnist
I0428 19:31:49.706629 22676 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:49.706640 22676 net.cpp:131] Top shape: 64 (64)
I0428 19:31:49.706645 22676 net.cpp:139] Memory required for data: 200960
I0428 19:31:49.706655 22676 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:49.706681 22676 net.cpp:86] Creating Layer conv0
I0428 19:31:49.706691 22676 net.cpp:408] conv0 <- data
I0428 19:31:49.706712 22676 net.cpp:382] conv0 -> conv0
I0428 19:31:49.993788 22676 net.cpp:124] Setting up conv0
I0428 19:31:49.993818 22676 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:49.993825 22676 net.cpp:139] Memory required for data: 1675520
I0428 19:31:49.993847 22676 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:49.993865 22676 net.cpp:86] Creating Layer pool0
I0428 19:31:49.993892 22676 net.cpp:408] pool0 <- conv0
I0428 19:31:49.993903 22676 net.cpp:382] pool0 -> pool0
I0428 19:31:49.993963 22676 net.cpp:124] Setting up pool0
I0428 19:31:49.993974 22676 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:49.993979 22676 net.cpp:139] Memory required for data: 2044160
I0428 19:31:49.993985 22676 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:49.993998 22676 net.cpp:86] Creating Layer ip1
I0428 19:31:49.994004 22676 net.cpp:408] ip1 <- pool0
I0428 19:31:49.994012 22676 net.cpp:382] ip1 -> ip1
I0428 19:31:49.995079 22676 net.cpp:124] Setting up ip1
I0428 19:31:49.995095 22676 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:49.995101 22676 net.cpp:139] Memory required for data: 2046720
I0428 19:31:49.995115 22676 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:49.995126 22676 net.cpp:86] Creating Layer relu1
I0428 19:31:49.995139 22676 net.cpp:408] relu1 <- ip1
I0428 19:31:49.995147 22676 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:49.995328 22676 net.cpp:124] Setting up relu1
I0428 19:31:49.995340 22676 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:49.995345 22676 net.cpp:139] Memory required for data: 2049280
I0428 19:31:49.995352 22676 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:49.995362 22676 net.cpp:86] Creating Layer ip2
I0428 19:31:49.995368 22676 net.cpp:408] ip2 <- ip1
I0428 19:31:49.995376 22676 net.cpp:382] ip2 -> ip2
I0428 19:31:49.995484 22676 net.cpp:124] Setting up ip2
I0428 19:31:49.995494 22676 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:49.995499 22676 net.cpp:139] Memory required for data: 2055680
I0428 19:31:49.995513 22676 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:49.995522 22676 net.cpp:86] Creating Layer relu2
I0428 19:31:49.995532 22676 net.cpp:408] relu2 <- ip2
I0428 19:31:49.995539 22676 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:49.996309 22676 net.cpp:124] Setting up relu2
I0428 19:31:49.996323 22676 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:49.996330 22676 net.cpp:139] Memory required for data: 2062080
I0428 19:31:49.996335 22676 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:49.996346 22676 net.cpp:86] Creating Layer ip3
I0428 19:31:49.996353 22676 net.cpp:408] ip3 <- ip2
I0428 19:31:49.996363 22676 net.cpp:382] ip3 -> ip3
I0428 19:31:49.996471 22676 net.cpp:124] Setting up ip3
I0428 19:31:49.996481 22676 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:49.996487 22676 net.cpp:139] Memory required for data: 2064640
I0428 19:31:49.996497 22676 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:49.996507 22676 net.cpp:86] Creating Layer relu3
I0428 19:31:49.996515 22676 net.cpp:408] relu3 <- ip3
I0428 19:31:49.996522 22676 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:49.996690 22676 net.cpp:124] Setting up relu3
I0428 19:31:49.996701 22676 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:49.996706 22676 net.cpp:139] Memory required for data: 2067200
I0428 19:31:49.996711 22676 layer_factory.hpp:77] Creating layer loss
I0428 19:31:49.996721 22676 net.cpp:86] Creating Layer loss
I0428 19:31:49.996726 22676 net.cpp:408] loss <- ip3
I0428 19:31:49.996733 22676 net.cpp:408] loss <- label
I0428 19:31:49.996742 22676 net.cpp:382] loss -> loss
I0428 19:31:49.996767 22676 layer_factory.hpp:77] Creating layer loss
I0428 19:31:49.997030 22676 net.cpp:124] Setting up loss
I0428 19:31:49.997040 22676 net.cpp:131] Top shape: (1)
I0428 19:31:49.997046 22676 net.cpp:134]     with loss weight 1
I0428 19:31:49.997067 22676 net.cpp:139] Memory required for data: 2067204
I0428 19:31:49.997074 22676 net.cpp:200] loss needs backward computation.
I0428 19:31:49.997081 22676 net.cpp:200] relu3 needs backward computation.
I0428 19:31:49.997087 22676 net.cpp:200] ip3 needs backward computation.
I0428 19:31:49.997092 22676 net.cpp:200] relu2 needs backward computation.
I0428 19:31:49.997097 22676 net.cpp:200] ip2 needs backward computation.
I0428 19:31:49.997117 22676 net.cpp:200] relu1 needs backward computation.
I0428 19:31:49.997123 22676 net.cpp:200] ip1 needs backward computation.
I0428 19:31:49.997153 22676 net.cpp:200] pool0 needs backward computation.
I0428 19:31:49.997159 22676 net.cpp:200] conv0 needs backward computation.
I0428 19:31:49.997165 22676 net.cpp:202] mnist does not need backward computation.
I0428 19:31:49.997171 22676 net.cpp:244] This network produces output loss
I0428 19:31:49.997184 22676 net.cpp:257] Network initialization done.
I0428 19:31:49.997478 22676 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test134.prototxt
I0428 19:31:49.997512 22676 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:49.997602 22676 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:49.997699 22676 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:49.997759 22676 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:49.997781 22676 net.cpp:86] Creating Layer mnist
I0428 19:31:49.997787 22676 net.cpp:382] mnist -> data
I0428 19:31:49.997799 22676 net.cpp:382] mnist -> label
I0428 19:31:49.997922 22676 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:50.000176 22676 net.cpp:124] Setting up mnist
I0428 19:31:50.000191 22676 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:50.000200 22676 net.cpp:131] Top shape: 100 (100)
I0428 19:31:50.000205 22676 net.cpp:139] Memory required for data: 314000
I0428 19:31:50.000211 22676 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:50.000226 22676 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:50.000232 22676 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:50.000239 22676 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:50.000250 22676 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:50.000315 22676 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:50.000325 22676 net.cpp:131] Top shape: 100 (100)
I0428 19:31:50.000331 22676 net.cpp:131] Top shape: 100 (100)
I0428 19:31:50.000337 22676 net.cpp:139] Memory required for data: 314800
I0428 19:31:50.000355 22676 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:50.000370 22676 net.cpp:86] Creating Layer conv0
I0428 19:31:50.000376 22676 net.cpp:408] conv0 <- data
I0428 19:31:50.000385 22676 net.cpp:382] conv0 -> conv0
I0428 19:31:50.001881 22676 net.cpp:124] Setting up conv0
I0428 19:31:50.001899 22676 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:50.001904 22676 net.cpp:139] Memory required for data: 2618800
I0428 19:31:50.001919 22676 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:50.001929 22676 net.cpp:86] Creating Layer pool0
I0428 19:31:50.001937 22676 net.cpp:408] pool0 <- conv0
I0428 19:31:50.001946 22676 net.cpp:382] pool0 -> pool0
I0428 19:31:50.001988 22676 net.cpp:124] Setting up pool0
I0428 19:31:50.001996 22676 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:50.002002 22676 net.cpp:139] Memory required for data: 3194800
I0428 19:31:50.002007 22676 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:50.002018 22676 net.cpp:86] Creating Layer ip1
I0428 19:31:50.002024 22676 net.cpp:408] ip1 <- pool0
I0428 19:31:50.002033 22676 net.cpp:382] ip1 -> ip1
I0428 19:31:50.002216 22676 net.cpp:124] Setting up ip1
I0428 19:31:50.002228 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.002233 22676 net.cpp:139] Memory required for data: 3198800
I0428 19:31:50.002245 22676 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:50.002255 22676 net.cpp:86] Creating Layer relu1
I0428 19:31:50.002262 22676 net.cpp:408] relu1 <- ip1
I0428 19:31:50.002269 22676 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:50.002501 22676 net.cpp:124] Setting up relu1
I0428 19:31:50.002511 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.002516 22676 net.cpp:139] Memory required for data: 3202800
I0428 19:31:50.002522 22676 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:50.002532 22676 net.cpp:86] Creating Layer ip2
I0428 19:31:50.002537 22676 net.cpp:408] ip2 <- ip1
I0428 19:31:50.002547 22676 net.cpp:382] ip2 -> ip2
I0428 19:31:50.002657 22676 net.cpp:124] Setting up ip2
I0428 19:31:50.002667 22676 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:50.002672 22676 net.cpp:139] Memory required for data: 3212800
I0428 19:31:50.002684 22676 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:50.002694 22676 net.cpp:86] Creating Layer relu2
I0428 19:31:50.002704 22676 net.cpp:408] relu2 <- ip2
I0428 19:31:50.002712 22676 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:50.003520 22676 net.cpp:124] Setting up relu2
I0428 19:31:50.003535 22676 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:50.003540 22676 net.cpp:139] Memory required for data: 3222800
I0428 19:31:50.003546 22676 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:50.003558 22676 net.cpp:86] Creating Layer ip3
I0428 19:31:50.003564 22676 net.cpp:408] ip3 <- ip2
I0428 19:31:50.003574 22676 net.cpp:382] ip3 -> ip3
I0428 19:31:50.003686 22676 net.cpp:124] Setting up ip3
I0428 19:31:50.003696 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.003701 22676 net.cpp:139] Memory required for data: 3226800
I0428 19:31:50.003711 22676 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:50.003720 22676 net.cpp:86] Creating Layer relu3
I0428 19:31:50.003726 22676 net.cpp:408] relu3 <- ip3
I0428 19:31:50.003733 22676 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:50.003906 22676 net.cpp:124] Setting up relu3
I0428 19:31:50.003916 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.003922 22676 net.cpp:139] Memory required for data: 3230800
I0428 19:31:50.003927 22676 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:50.003934 22676 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:50.003940 22676 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:50.003954 22676 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:50.003965 22676 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:50.004012 22676 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:50.004020 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.004027 22676 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:50.004045 22676 net.cpp:139] Memory required for data: 3238800
I0428 19:31:50.004050 22676 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:50.004060 22676 net.cpp:86] Creating Layer accuracy
I0428 19:31:50.004065 22676 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:50.004072 22676 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:50.004081 22676 net.cpp:382] accuracy -> accuracy
I0428 19:31:50.004093 22676 net.cpp:124] Setting up accuracy
I0428 19:31:50.004101 22676 net.cpp:131] Top shape: (1)
I0428 19:31:50.004106 22676 net.cpp:139] Memory required for data: 3238804
I0428 19:31:50.004112 22676 layer_factory.hpp:77] Creating layer loss
I0428 19:31:50.004120 22676 net.cpp:86] Creating Layer loss
I0428 19:31:50.004125 22676 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:50.004140 22676 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:50.004148 22676 net.cpp:382] loss -> loss
I0428 19:31:50.004158 22676 layer_factory.hpp:77] Creating layer loss
I0428 19:31:50.004428 22676 net.cpp:124] Setting up loss
I0428 19:31:50.004441 22676 net.cpp:131] Top shape: (1)
I0428 19:31:50.004446 22676 net.cpp:134]     with loss weight 1
I0428 19:31:50.004456 22676 net.cpp:139] Memory required for data: 3238808
I0428 19:31:50.004461 22676 net.cpp:200] loss needs backward computation.
I0428 19:31:50.004467 22676 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:50.004473 22676 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:50.004478 22676 net.cpp:200] relu3 needs backward computation.
I0428 19:31:50.004493 22676 net.cpp:200] ip3 needs backward computation.
I0428 19:31:50.004498 22676 net.cpp:200] relu2 needs backward computation.
I0428 19:31:50.004503 22676 net.cpp:200] ip2 needs backward computation.
I0428 19:31:50.004508 22676 net.cpp:200] relu1 needs backward computation.
I0428 19:31:50.004513 22676 net.cpp:200] ip1 needs backward computation.
I0428 19:31:50.004519 22676 net.cpp:200] pool0 needs backward computation.
I0428 19:31:50.004524 22676 net.cpp:200] conv0 needs backward computation.
I0428 19:31:50.004530 22676 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:50.004536 22676 net.cpp:202] mnist does not need backward computation.
I0428 19:31:50.004541 22676 net.cpp:244] This network produces output accuracy
I0428 19:31:50.004546 22676 net.cpp:244] This network produces output loss
I0428 19:31:50.004562 22676 net.cpp:257] Network initialization done.
I0428 19:31:50.004606 22676 solver.cpp:56] Solver scaffolding done.
I0428 19:31:50.004932 22676 caffe.cpp:248] Starting Optimization
I0428 19:31:50.004941 22676 solver.cpp:273] Solving LeNet
I0428 19:31:50.004946 22676 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:50.005094 22676 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:50.009902 22676 blocking_queue.cpp:49] Waiting for data
I0428 19:31:50.080065 22683 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:50.080584 22676 solver.cpp:398]     Test net output #0: accuracy = 0.0926
I0428 19:31:50.080603 22676 solver.cpp:398]     Test net output #1: loss = 2.30507 (* 1 = 2.30507 loss)
I0428 19:31:50.082815 22676 solver.cpp:219] Iteration 0 (0 iter/s, 0.0778381s/100 iters), loss = 2.30068
I0428 19:31:50.082870 22676 solver.cpp:238]     Train net output #0: loss = 2.30068 (* 1 = 2.30068 loss)
I0428 19:31:50.082890 22676 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:50.146121 22676 solver.cpp:219] Iteration 100 (1580.76 iter/s, 0.0632608s/100 iters), loss = 0.632535
I0428 19:31:50.146147 22676 solver.cpp:238]     Train net output #0: loss = 0.632535 (* 1 = 0.632535 loss)
I0428 19:31:50.146173 22676 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:50.210028 22676 solver.cpp:219] Iteration 200 (1565.56 iter/s, 0.0638751s/100 iters), loss = 0.459648
I0428 19:31:50.210054 22676 solver.cpp:238]     Train net output #0: loss = 0.459648 (* 1 = 0.459648 loss)
I0428 19:31:50.210078 22676 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:50.274261 22676 solver.cpp:219] Iteration 300 (1557.69 iter/s, 0.0641976s/100 iters), loss = 0.442547
I0428 19:31:50.274288 22676 solver.cpp:238]     Train net output #0: loss = 0.442547 (* 1 = 0.442547 loss)
I0428 19:31:50.274313 22676 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:50.337743 22676 solver.cpp:219] Iteration 400 (1576.09 iter/s, 0.0634481s/100 iters), loss = 0.701261
I0428 19:31:50.337769 22676 solver.cpp:238]     Train net output #0: loss = 0.701261 (* 1 = 0.701261 loss)
I0428 19:31:50.337793 22676 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:50.401053 22676 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:50.454298 22683 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:50.454805 22676 solver.cpp:398]     Test net output #0: accuracy = 0.8375
I0428 19:31:50.454825 22676 solver.cpp:398]     Test net output #1: loss = 0.462941 (* 1 = 0.462941 loss)
I0428 19:31:50.455552 22676 solver.cpp:219] Iteration 500 (849.074 iter/s, 0.117775s/100 iters), loss = 0.702017
I0428 19:31:50.455577 22676 solver.cpp:238]     Train net output #0: loss = 0.702017 (* 1 = 0.702017 loss)
I0428 19:31:50.455588 22676 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:50.519271 22676 solver.cpp:219] Iteration 600 (1570.16 iter/s, 0.0636877s/100 iters), loss = 0.251033
I0428 19:31:50.519296 22676 solver.cpp:238]     Train net output #0: loss = 0.251033 (* 1 = 0.251033 loss)
I0428 19:31:50.519321 22676 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:50.583415 22676 solver.cpp:219] Iteration 700 (1559.75 iter/s, 0.0641126s/100 iters), loss = 0.48158
I0428 19:31:50.583441 22676 solver.cpp:238]     Train net output #0: loss = 0.48158 (* 1 = 0.48158 loss)
I0428 19:31:50.583451 22676 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:50.647593 22676 solver.cpp:219] Iteration 800 (1558.98 iter/s, 0.0641444s/100 iters), loss = 0.54824
I0428 19:31:50.647620 22676 solver.cpp:238]     Train net output #0: loss = 0.54824 (* 1 = 0.54824 loss)
I0428 19:31:50.647630 22676 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:50.711470 22676 solver.cpp:219] Iteration 900 (1566.31 iter/s, 0.0638444s/100 iters), loss = 0.260951
I0428 19:31:50.711499 22676 solver.cpp:238]     Train net output #0: loss = 0.260951 (* 1 = 0.260951 loss)
I0428 19:31:50.711510 22676 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:50.733070 22682 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:50.775236 22676 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:50.775985 22676 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:50.776504 22676 solver.cpp:311] Iteration 1000, loss = 0.295608
I0428 19:31:50.776518 22676 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:50.824352 22683 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:50.824874 22676 solver.cpp:398]     Test net output #0: accuracy = 0.8598
I0428 19:31:50.824906 22676 solver.cpp:398]     Test net output #1: loss = 0.386621 (* 1 = 0.386621 loss)
I0428 19:31:50.824913 22676 solver.cpp:316] Optimization Done.
I0428 19:31:50.824918 22676 caffe.cpp:259] Optimization Done.
