I0428 19:44:41.912187 25659 caffe.cpp:218] Using GPUs 0
I0428 19:44:41.952172 25659 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:42.468946 25659 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test454.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:42.469086 25659 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test454.prototxt
I0428 19:44:42.469499 25659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:42.469518 25659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:42.469622 25659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:42.469704 25659 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:42.469805 25659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:42.469830 25659 net.cpp:86] Creating Layer mnist
I0428 19:44:42.469838 25659 net.cpp:382] mnist -> data
I0428 19:44:42.469861 25659 net.cpp:382] mnist -> label
I0428 19:44:42.470960 25659 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:42.473423 25659 net.cpp:124] Setting up mnist
I0428 19:44:42.473440 25659 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:42.473448 25659 net.cpp:131] Top shape: 64 (64)
I0428 19:44:42.473450 25659 net.cpp:139] Memory required for data: 200960
I0428 19:44:42.473457 25659 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:42.473474 25659 net.cpp:86] Creating Layer conv0
I0428 19:44:42.473495 25659 net.cpp:408] conv0 <- data
I0428 19:44:42.473508 25659 net.cpp:382] conv0 -> conv0
I0428 19:44:42.764771 25659 net.cpp:124] Setting up conv0
I0428 19:44:42.764802 25659 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:42.764807 25659 net.cpp:139] Memory required for data: 495872
I0428 19:44:42.764833 25659 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:42.764849 25659 net.cpp:86] Creating Layer pool0
I0428 19:44:42.764854 25659 net.cpp:408] pool0 <- conv0
I0428 19:44:42.764861 25659 net.cpp:382] pool0 -> pool0
I0428 19:44:42.764917 25659 net.cpp:124] Setting up pool0
I0428 19:44:42.764926 25659 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:42.764930 25659 net.cpp:139] Memory required for data: 569600
I0428 19:44:42.764935 25659 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:42.764947 25659 net.cpp:86] Creating Layer conv1
I0428 19:44:42.764951 25659 net.cpp:408] conv1 <- pool0
I0428 19:44:42.764957 25659 net.cpp:382] conv1 -> conv1
I0428 19:44:42.768090 25659 net.cpp:124] Setting up conv1
I0428 19:44:42.768107 25659 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:42.768112 25659 net.cpp:139] Memory required for data: 1388800
I0428 19:44:42.768122 25659 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:42.768131 25659 net.cpp:86] Creating Layer pool1
I0428 19:44:42.768137 25659 net.cpp:408] pool1 <- conv1
I0428 19:44:42.768144 25659 net.cpp:382] pool1 -> pool1
I0428 19:44:42.768188 25659 net.cpp:124] Setting up pool1
I0428 19:44:42.768195 25659 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:42.768198 25659 net.cpp:139] Memory required for data: 1593600
I0428 19:44:42.768203 25659 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:42.768210 25659 net.cpp:86] Creating Layer ip1
I0428 19:44:42.768214 25659 net.cpp:408] ip1 <- pool1
I0428 19:44:42.768220 25659 net.cpp:382] ip1 -> ip1
I0428 19:44:42.768465 25659 net.cpp:124] Setting up ip1
I0428 19:44:42.768474 25659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:42.768478 25659 net.cpp:139] Memory required for data: 1600000
I0428 19:44:42.768487 25659 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:42.768494 25659 net.cpp:86] Creating Layer relu1
I0428 19:44:42.768498 25659 net.cpp:408] relu1 <- ip1
I0428 19:44:42.768503 25659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:42.768694 25659 net.cpp:124] Setting up relu1
I0428 19:44:42.768705 25659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:42.768708 25659 net.cpp:139] Memory required for data: 1606400
I0428 19:44:42.768712 25659 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:42.768720 25659 net.cpp:86] Creating Layer ip2
I0428 19:44:42.768724 25659 net.cpp:408] ip2 <- ip1
I0428 19:44:42.768730 25659 net.cpp:382] ip2 -> ip2
I0428 19:44:42.768851 25659 net.cpp:124] Setting up ip2
I0428 19:44:42.768859 25659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:42.768863 25659 net.cpp:139] Memory required for data: 1612800
I0428 19:44:42.768869 25659 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:42.768878 25659 net.cpp:86] Creating Layer relu2
I0428 19:44:42.768882 25659 net.cpp:408] relu2 <- ip2
I0428 19:44:42.768887 25659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:42.769731 25659 net.cpp:124] Setting up relu2
I0428 19:44:42.769745 25659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:42.769749 25659 net.cpp:139] Memory required for data: 1619200
I0428 19:44:42.769754 25659 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:42.769762 25659 net.cpp:86] Creating Layer ip3
I0428 19:44:42.769767 25659 net.cpp:408] ip3 <- ip2
I0428 19:44:42.769773 25659 net.cpp:382] ip3 -> ip3
I0428 19:44:42.769891 25659 net.cpp:124] Setting up ip3
I0428 19:44:42.769901 25659 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:42.769903 25659 net.cpp:139] Memory required for data: 1621760
I0428 19:44:42.769913 25659 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:42.769919 25659 net.cpp:86] Creating Layer relu3
I0428 19:44:42.769923 25659 net.cpp:408] relu3 <- ip3
I0428 19:44:42.769928 25659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:42.770122 25659 net.cpp:124] Setting up relu3
I0428 19:44:42.770133 25659 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:42.770136 25659 net.cpp:139] Memory required for data: 1624320
I0428 19:44:42.770140 25659 layer_factory.hpp:77] Creating layer loss
I0428 19:44:42.770146 25659 net.cpp:86] Creating Layer loss
I0428 19:44:42.770150 25659 net.cpp:408] loss <- ip3
I0428 19:44:42.770155 25659 net.cpp:408] loss <- label
I0428 19:44:42.770161 25659 net.cpp:382] loss -> loss
I0428 19:44:42.770184 25659 layer_factory.hpp:77] Creating layer loss
I0428 19:44:42.770445 25659 net.cpp:124] Setting up loss
I0428 19:44:42.770454 25659 net.cpp:131] Top shape: (1)
I0428 19:44:42.770459 25659 net.cpp:134]     with loss weight 1
I0428 19:44:42.770475 25659 net.cpp:139] Memory required for data: 1624324
I0428 19:44:42.770479 25659 net.cpp:200] loss needs backward computation.
I0428 19:44:42.770484 25659 net.cpp:200] relu3 needs backward computation.
I0428 19:44:42.770488 25659 net.cpp:200] ip3 needs backward computation.
I0428 19:44:42.770493 25659 net.cpp:200] relu2 needs backward computation.
I0428 19:44:42.770495 25659 net.cpp:200] ip2 needs backward computation.
I0428 19:44:42.770498 25659 net.cpp:200] relu1 needs backward computation.
I0428 19:44:42.770503 25659 net.cpp:200] ip1 needs backward computation.
I0428 19:44:42.770506 25659 net.cpp:200] pool1 needs backward computation.
I0428 19:44:42.770509 25659 net.cpp:200] conv1 needs backward computation.
I0428 19:44:42.770514 25659 net.cpp:200] pool0 needs backward computation.
I0428 19:44:42.770517 25659 net.cpp:200] conv0 needs backward computation.
I0428 19:44:42.770521 25659 net.cpp:202] mnist does not need backward computation.
I0428 19:44:42.770525 25659 net.cpp:244] This network produces output loss
I0428 19:44:42.770535 25659 net.cpp:257] Network initialization done.
I0428 19:44:42.770922 25659 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test454.prototxt
I0428 19:44:42.770954 25659 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:42.771064 25659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:42.771158 25659 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:42.771211 25659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:42.771227 25659 net.cpp:86] Creating Layer mnist
I0428 19:44:42.771234 25659 net.cpp:382] mnist -> data
I0428 19:44:42.771242 25659 net.cpp:382] mnist -> label
I0428 19:44:42.771339 25659 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:42.773537 25659 net.cpp:124] Setting up mnist
I0428 19:44:42.773555 25659 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:42.773561 25659 net.cpp:131] Top shape: 100 (100)
I0428 19:44:42.773564 25659 net.cpp:139] Memory required for data: 314000
I0428 19:44:42.773568 25659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:42.773593 25659 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:42.773597 25659 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:42.773603 25659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:42.773612 25659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:42.773723 25659 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:42.773732 25659 net.cpp:131] Top shape: 100 (100)
I0428 19:44:42.773736 25659 net.cpp:131] Top shape: 100 (100)
I0428 19:44:42.773739 25659 net.cpp:139] Memory required for data: 314800
I0428 19:44:42.773743 25659 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:42.773753 25659 net.cpp:86] Creating Layer conv0
I0428 19:44:42.773757 25659 net.cpp:408] conv0 <- data
I0428 19:44:42.773763 25659 net.cpp:382] conv0 -> conv0
I0428 19:44:42.775576 25659 net.cpp:124] Setting up conv0
I0428 19:44:42.775593 25659 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:42.775598 25659 net.cpp:139] Memory required for data: 775600
I0428 19:44:42.775609 25659 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:42.775616 25659 net.cpp:86] Creating Layer pool0
I0428 19:44:42.775620 25659 net.cpp:408] pool0 <- conv0
I0428 19:44:42.775626 25659 net.cpp:382] pool0 -> pool0
I0428 19:44:42.775668 25659 net.cpp:124] Setting up pool0
I0428 19:44:42.775674 25659 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:42.775678 25659 net.cpp:139] Memory required for data: 890800
I0428 19:44:42.775681 25659 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:42.775691 25659 net.cpp:86] Creating Layer conv1
I0428 19:44:42.775696 25659 net.cpp:408] conv1 <- pool0
I0428 19:44:42.775701 25659 net.cpp:382] conv1 -> conv1
I0428 19:44:42.777447 25659 net.cpp:124] Setting up conv1
I0428 19:44:42.777463 25659 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:42.777469 25659 net.cpp:139] Memory required for data: 2170800
I0428 19:44:42.777479 25659 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:42.777487 25659 net.cpp:86] Creating Layer pool1
I0428 19:44:42.777492 25659 net.cpp:408] pool1 <- conv1
I0428 19:44:42.777498 25659 net.cpp:382] pool1 -> pool1
I0428 19:44:42.777539 25659 net.cpp:124] Setting up pool1
I0428 19:44:42.777545 25659 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:42.777549 25659 net.cpp:139] Memory required for data: 2490800
I0428 19:44:42.777554 25659 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:42.777568 25659 net.cpp:86] Creating Layer ip1
I0428 19:44:42.777572 25659 net.cpp:408] ip1 <- pool1
I0428 19:44:42.777585 25659 net.cpp:382] ip1 -> ip1
I0428 19:44:42.777838 25659 net.cpp:124] Setting up ip1
I0428 19:44:42.777848 25659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:42.777863 25659 net.cpp:139] Memory required for data: 2500800
I0428 19:44:42.777873 25659 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:42.777879 25659 net.cpp:86] Creating Layer relu1
I0428 19:44:42.777884 25659 net.cpp:408] relu1 <- ip1
I0428 19:44:42.777889 25659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:42.778076 25659 net.cpp:124] Setting up relu1
I0428 19:44:42.778086 25659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:42.778090 25659 net.cpp:139] Memory required for data: 2510800
I0428 19:44:42.778101 25659 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:42.778110 25659 net.cpp:86] Creating Layer ip2
I0428 19:44:42.778120 25659 net.cpp:408] ip2 <- ip1
I0428 19:44:42.778126 25659 net.cpp:382] ip2 -> ip2
I0428 19:44:42.778244 25659 net.cpp:124] Setting up ip2
I0428 19:44:42.778254 25659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:42.778257 25659 net.cpp:139] Memory required for data: 2520800
I0428 19:44:42.778264 25659 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:42.778268 25659 net.cpp:86] Creating Layer relu2
I0428 19:44:42.778272 25659 net.cpp:408] relu2 <- ip2
I0428 19:44:42.778277 25659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:42.778507 25659 net.cpp:124] Setting up relu2
I0428 19:44:42.778517 25659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:42.778520 25659 net.cpp:139] Memory required for data: 2530800
I0428 19:44:42.778524 25659 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:42.778530 25659 net.cpp:86] Creating Layer ip3
I0428 19:44:42.778534 25659 net.cpp:408] ip3 <- ip2
I0428 19:44:42.778539 25659 net.cpp:382] ip3 -> ip3
I0428 19:44:42.778684 25659 net.cpp:124] Setting up ip3
I0428 19:44:42.778693 25659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:42.778697 25659 net.cpp:139] Memory required for data: 2534800
I0428 19:44:42.778707 25659 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:42.778712 25659 net.cpp:86] Creating Layer relu3
I0428 19:44:42.778717 25659 net.cpp:408] relu3 <- ip3
I0428 19:44:42.778722 25659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:42.779613 25659 net.cpp:124] Setting up relu3
I0428 19:44:42.779628 25659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:42.779633 25659 net.cpp:139] Memory required for data: 2538800
I0428 19:44:42.779636 25659 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:42.779644 25659 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:42.779647 25659 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:42.779654 25659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:42.779661 25659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:42.779747 25659 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:42.779755 25659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:42.779760 25659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:42.779763 25659 net.cpp:139] Memory required for data: 2546800
I0428 19:44:42.779768 25659 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:42.779774 25659 net.cpp:86] Creating Layer accuracy
I0428 19:44:42.779778 25659 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:42.779783 25659 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:42.779788 25659 net.cpp:382] accuracy -> accuracy
I0428 19:44:42.779796 25659 net.cpp:124] Setting up accuracy
I0428 19:44:42.779801 25659 net.cpp:131] Top shape: (1)
I0428 19:44:42.779804 25659 net.cpp:139] Memory required for data: 2546804
I0428 19:44:42.779808 25659 layer_factory.hpp:77] Creating layer loss
I0428 19:44:42.779814 25659 net.cpp:86] Creating Layer loss
I0428 19:44:42.779816 25659 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:42.779821 25659 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:42.779826 25659 net.cpp:382] loss -> loss
I0428 19:44:42.779840 25659 layer_factory.hpp:77] Creating layer loss
I0428 19:44:42.780102 25659 net.cpp:124] Setting up loss
I0428 19:44:42.780113 25659 net.cpp:131] Top shape: (1)
I0428 19:44:42.780117 25659 net.cpp:134]     with loss weight 1
I0428 19:44:42.780125 25659 net.cpp:139] Memory required for data: 2546808
I0428 19:44:42.780141 25659 net.cpp:200] loss needs backward computation.
I0428 19:44:42.780146 25659 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:42.780164 25659 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:42.780169 25659 net.cpp:200] relu3 needs backward computation.
I0428 19:44:42.780172 25659 net.cpp:200] ip3 needs backward computation.
I0428 19:44:42.780176 25659 net.cpp:200] relu2 needs backward computation.
I0428 19:44:42.780180 25659 net.cpp:200] ip2 needs backward computation.
I0428 19:44:42.780184 25659 net.cpp:200] relu1 needs backward computation.
I0428 19:44:42.780187 25659 net.cpp:200] ip1 needs backward computation.
I0428 19:44:42.780202 25659 net.cpp:200] pool1 needs backward computation.
I0428 19:44:42.780206 25659 net.cpp:200] conv1 needs backward computation.
I0428 19:44:42.780210 25659 net.cpp:200] pool0 needs backward computation.
I0428 19:44:42.780213 25659 net.cpp:200] conv0 needs backward computation.
I0428 19:44:42.780218 25659 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:42.780223 25659 net.cpp:202] mnist does not need backward computation.
I0428 19:44:42.780227 25659 net.cpp:244] This network produces output accuracy
I0428 19:44:42.780236 25659 net.cpp:244] This network produces output loss
I0428 19:44:42.780249 25659 net.cpp:257] Network initialization done.
I0428 19:44:42.780299 25659 solver.cpp:56] Solver scaffolding done.
I0428 19:44:42.780674 25659 caffe.cpp:248] Starting Optimization
I0428 19:44:42.780683 25659 solver.cpp:273] Solving LeNet
I0428 19:44:42.780686 25659 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:42.781616 25659 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:42.785480 25659 blocking_queue.cpp:49] Waiting for data
I0428 19:44:42.858850 25666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:42.859359 25659 solver.cpp:398]     Test net output #0: accuracy = 0.1505
I0428 19:44:42.859380 25659 solver.cpp:398]     Test net output #1: loss = 2.31653 (* 1 = 2.31653 loss)
I0428 19:44:42.861526 25659 solver.cpp:219] Iteration 0 (2.81705 iter/s, 0.080811s/100 iters), loss = 2.34448
I0428 19:44:42.861554 25659 solver.cpp:238]     Train net output #0: loss = 2.34448 (* 1 = 2.34448 loss)
I0428 19:44:42.861567 25659 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:42.969251 25659 solver.cpp:219] Iteration 100 (928.627 iter/s, 0.107686s/100 iters), loss = 0.745038
I0428 19:44:42.969280 25659 solver.cpp:238]     Train net output #0: loss = 0.745038 (* 1 = 0.745038 loss)
I0428 19:44:42.969286 25659 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:43.073346 25659 solver.cpp:219] Iteration 200 (961.005 iter/s, 0.104058s/100 iters), loss = 0.521498
I0428 19:44:43.073374 25659 solver.cpp:238]     Train net output #0: loss = 0.521498 (* 1 = 0.521498 loss)
I0428 19:44:43.073380 25659 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:43.174687 25659 solver.cpp:219] Iteration 300 (987.133 iter/s, 0.101303s/100 iters), loss = 0.698518
I0428 19:44:43.174712 25659 solver.cpp:238]     Train net output #0: loss = 0.698518 (* 1 = 0.698518 loss)
I0428 19:44:43.174720 25659 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:43.285989 25659 solver.cpp:219] Iteration 400 (898.765 iter/s, 0.111264s/100 iters), loss = 0.89735
I0428 19:44:43.286028 25659 solver.cpp:238]     Train net output #0: loss = 0.89735 (* 1 = 0.89735 loss)
I0428 19:44:43.286044 25659 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:43.392807 25659 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:43.445340 25666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:43.445823 25659 solver.cpp:398]     Test net output #0: accuracy = 0.8386
I0428 19:44:43.445843 25659 solver.cpp:398]     Test net output #1: loss = 0.603456 (* 1 = 0.603456 loss)
I0428 19:44:43.446861 25659 solver.cpp:219] Iteration 500 (621.812 iter/s, 0.16082s/100 iters), loss = 0.795073
I0428 19:44:43.446923 25659 solver.cpp:238]     Train net output #0: loss = 0.795073 (* 1 = 0.795073 loss)
I0428 19:44:43.446945 25659 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:43.556177 25659 solver.cpp:219] Iteration 600 (915.362 iter/s, 0.109246s/100 iters), loss = 0.420978
I0428 19:44:43.556205 25659 solver.cpp:238]     Train net output #0: loss = 0.420978 (* 1 = 0.420978 loss)
I0428 19:44:43.556227 25659 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:43.663987 25659 solver.cpp:219] Iteration 700 (927.893 iter/s, 0.107771s/100 iters), loss = 0.526375
I0428 19:44:43.664028 25659 solver.cpp:238]     Train net output #0: loss = 0.526375 (* 1 = 0.526375 loss)
I0428 19:44:43.664053 25659 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:43.767977 25659 solver.cpp:219] Iteration 800 (962.104 iter/s, 0.103939s/100 iters), loss = 0.585936
I0428 19:44:43.768007 25659 solver.cpp:238]     Train net output #0: loss = 0.585936 (* 1 = 0.585936 loss)
I0428 19:44:43.768014 25659 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:43.871788 25659 solver.cpp:219] Iteration 900 (963.668 iter/s, 0.10377s/100 iters), loss = 0.422008
I0428 19:44:43.871817 25659 solver.cpp:238]     Train net output #0: loss = 0.422008 (* 1 = 0.422008 loss)
I0428 19:44:43.871824 25659 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:43.906859 25665 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:43.978042 25659 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:43.979648 25659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:43.980666 25659 solver.cpp:311] Iteration 1000, loss = 0.50597
I0428 19:44:43.980696 25659 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:44.068219 25666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:44.068948 25659 solver.cpp:398]     Test net output #0: accuracy = 0.8727
I0428 19:44:44.068987 25659 solver.cpp:398]     Test net output #1: loss = 0.553257 (* 1 = 0.553257 loss)
I0428 19:44:44.068998 25659 solver.cpp:316] Optimization Done.
I0428 19:44:44.069005 25659 caffe.cpp:259] Optimization Done.
