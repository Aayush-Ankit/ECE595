I0428 20:07:16.788174 31065 caffe.cpp:218] Using GPUs 0
I0428 20:07:16.824992 31065 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:17.332281 31065 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1051.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:17.332408 31065 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1051.prototxt
I0428 20:07:17.332808 31065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:17.332836 31065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:17.332954 31065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:17.333031 31065 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:17.333125 31065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:17.333148 31065 net.cpp:86] Creating Layer mnist
I0428 20:07:17.333154 31065 net.cpp:382] mnist -> data
I0428 20:07:17.333178 31065 net.cpp:382] mnist -> label
I0428 20:07:17.334296 31065 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:17.336738 31065 net.cpp:124] Setting up mnist
I0428 20:07:17.336756 31065 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:17.336762 31065 net.cpp:131] Top shape: 64 (64)
I0428 20:07:17.336766 31065 net.cpp:139] Memory required for data: 200960
I0428 20:07:17.336772 31065 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:17.336865 31065 net.cpp:86] Creating Layer conv0
I0428 20:07:17.336899 31065 net.cpp:408] conv0 <- data
I0428 20:07:17.336912 31065 net.cpp:382] conv0 -> conv0
I0428 20:07:17.612612 31065 net.cpp:124] Setting up conv0
I0428 20:07:17.612650 31065 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:17.612654 31065 net.cpp:139] Memory required for data: 3887360
I0428 20:07:17.612679 31065 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:17.612691 31065 net.cpp:86] Creating Layer pool0
I0428 20:07:17.612695 31065 net.cpp:408] pool0 <- conv0
I0428 20:07:17.612701 31065 net.cpp:382] pool0 -> pool0
I0428 20:07:17.612763 31065 net.cpp:124] Setting up pool0
I0428 20:07:17.612769 31065 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:17.612772 31065 net.cpp:139] Memory required for data: 4808960
I0428 20:07:17.612776 31065 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:17.612787 31065 net.cpp:86] Creating Layer conv1
I0428 20:07:17.612789 31065 net.cpp:408] conv1 <- pool0
I0428 20:07:17.612793 31065 net.cpp:382] conv1 -> conv1
I0428 20:07:17.615667 31065 net.cpp:124] Setting up conv1
I0428 20:07:17.615682 31065 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:17.615686 31065 net.cpp:139] Memory required for data: 4890880
I0428 20:07:17.615694 31065 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:17.615701 31065 net.cpp:86] Creating Layer pool1
I0428 20:07:17.615705 31065 net.cpp:408] pool1 <- conv1
I0428 20:07:17.615710 31065 net.cpp:382] pool1 -> pool1
I0428 20:07:17.615762 31065 net.cpp:124] Setting up pool1
I0428 20:07:17.615767 31065 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:17.615770 31065 net.cpp:139] Memory required for data: 4911360
I0428 20:07:17.615773 31065 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:17.615785 31065 net.cpp:86] Creating Layer ip1
I0428 20:07:17.615788 31065 net.cpp:408] ip1 <- pool1
I0428 20:07:17.615793 31065 net.cpp:382] ip1 -> ip1
I0428 20:07:17.615907 31065 net.cpp:124] Setting up ip1
I0428 20:07:17.615921 31065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:17.615923 31065 net.cpp:139] Memory required for data: 4924160
I0428 20:07:17.615931 31065 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:17.615936 31065 net.cpp:86] Creating Layer relu1
I0428 20:07:17.615939 31065 net.cpp:408] relu1 <- ip1
I0428 20:07:17.615943 31065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:17.616137 31065 net.cpp:124] Setting up relu1
I0428 20:07:17.616145 31065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:17.616149 31065 net.cpp:139] Memory required for data: 4936960
I0428 20:07:17.616154 31065 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:17.616160 31065 net.cpp:86] Creating Layer ip2
I0428 20:07:17.616163 31065 net.cpp:408] ip2 <- ip1
I0428 20:07:17.616168 31065 net.cpp:382] ip2 -> ip2
I0428 20:07:17.616288 31065 net.cpp:124] Setting up ip2
I0428 20:07:17.616295 31065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:17.616298 31065 net.cpp:139] Memory required for data: 4949760
I0428 20:07:17.616303 31065 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:17.616308 31065 net.cpp:86] Creating Layer relu2
I0428 20:07:17.616312 31065 net.cpp:408] relu2 <- ip2
I0428 20:07:17.616315 31065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:17.617033 31065 net.cpp:124] Setting up relu2
I0428 20:07:17.617061 31065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:17.617064 31065 net.cpp:139] Memory required for data: 4962560
I0428 20:07:17.617084 31065 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:17.617091 31065 net.cpp:86] Creating Layer ip3
I0428 20:07:17.617094 31065 net.cpp:408] ip3 <- ip2
I0428 20:07:17.617100 31065 net.cpp:382] ip3 -> ip3
I0428 20:07:17.617203 31065 net.cpp:124] Setting up ip3
I0428 20:07:17.617211 31065 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:17.617214 31065 net.cpp:139] Memory required for data: 4965120
I0428 20:07:17.617223 31065 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:17.617228 31065 net.cpp:86] Creating Layer relu3
I0428 20:07:17.617230 31065 net.cpp:408] relu3 <- ip3
I0428 20:07:17.617235 31065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:17.617419 31065 net.cpp:124] Setting up relu3
I0428 20:07:17.617426 31065 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:17.617430 31065 net.cpp:139] Memory required for data: 4967680
I0428 20:07:17.617434 31065 layer_factory.hpp:77] Creating layer loss
I0428 20:07:17.617439 31065 net.cpp:86] Creating Layer loss
I0428 20:07:17.617442 31065 net.cpp:408] loss <- ip3
I0428 20:07:17.617446 31065 net.cpp:408] loss <- label
I0428 20:07:17.617451 31065 net.cpp:382] loss -> loss
I0428 20:07:17.617470 31065 layer_factory.hpp:77] Creating layer loss
I0428 20:07:17.617697 31065 net.cpp:124] Setting up loss
I0428 20:07:17.617705 31065 net.cpp:131] Top shape: (1)
I0428 20:07:17.617709 31065 net.cpp:134]     with loss weight 1
I0428 20:07:17.617722 31065 net.cpp:139] Memory required for data: 4967684
I0428 20:07:17.617725 31065 net.cpp:200] loss needs backward computation.
I0428 20:07:17.617729 31065 net.cpp:200] relu3 needs backward computation.
I0428 20:07:17.617733 31065 net.cpp:200] ip3 needs backward computation.
I0428 20:07:17.617734 31065 net.cpp:200] relu2 needs backward computation.
I0428 20:07:17.617738 31065 net.cpp:200] ip2 needs backward computation.
I0428 20:07:17.617740 31065 net.cpp:200] relu1 needs backward computation.
I0428 20:07:17.617743 31065 net.cpp:200] ip1 needs backward computation.
I0428 20:07:17.617745 31065 net.cpp:200] pool1 needs backward computation.
I0428 20:07:17.617748 31065 net.cpp:200] conv1 needs backward computation.
I0428 20:07:17.617751 31065 net.cpp:200] pool0 needs backward computation.
I0428 20:07:17.617754 31065 net.cpp:200] conv0 needs backward computation.
I0428 20:07:17.617758 31065 net.cpp:202] mnist does not need backward computation.
I0428 20:07:17.617760 31065 net.cpp:244] This network produces output loss
I0428 20:07:17.617769 31065 net.cpp:257] Network initialization done.
I0428 20:07:17.618173 31065 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1051.prototxt
I0428 20:07:17.618221 31065 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:17.618320 31065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:17.618422 31065 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:17.618468 31065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:17.618495 31065 net.cpp:86] Creating Layer mnist
I0428 20:07:17.618499 31065 net.cpp:382] mnist -> data
I0428 20:07:17.618507 31065 net.cpp:382] mnist -> label
I0428 20:07:17.618598 31065 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:17.620481 31065 net.cpp:124] Setting up mnist
I0428 20:07:17.620510 31065 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:17.620515 31065 net.cpp:131] Top shape: 100 (100)
I0428 20:07:17.620519 31065 net.cpp:139] Memory required for data: 314000
I0428 20:07:17.620523 31065 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:17.620561 31065 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:17.620566 31065 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:17.620570 31065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:17.620578 31065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:17.620621 31065 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:17.620627 31065 net.cpp:131] Top shape: 100 (100)
I0428 20:07:17.620633 31065 net.cpp:131] Top shape: 100 (100)
I0428 20:07:17.620637 31065 net.cpp:139] Memory required for data: 314800
I0428 20:07:17.620642 31065 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:17.620656 31065 net.cpp:86] Creating Layer conv0
I0428 20:07:17.620661 31065 net.cpp:408] conv0 <- data
I0428 20:07:17.620682 31065 net.cpp:382] conv0 -> conv0
I0428 20:07:17.622511 31065 net.cpp:124] Setting up conv0
I0428 20:07:17.622525 31065 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:17.622529 31065 net.cpp:139] Memory required for data: 6074800
I0428 20:07:17.622537 31065 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:17.622544 31065 net.cpp:86] Creating Layer pool0
I0428 20:07:17.622546 31065 net.cpp:408] pool0 <- conv0
I0428 20:07:17.622552 31065 net.cpp:382] pool0 -> pool0
I0428 20:07:17.622588 31065 net.cpp:124] Setting up pool0
I0428 20:07:17.622593 31065 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:17.622596 31065 net.cpp:139] Memory required for data: 7514800
I0428 20:07:17.622599 31065 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:17.622608 31065 net.cpp:86] Creating Layer conv1
I0428 20:07:17.622611 31065 net.cpp:408] conv1 <- pool0
I0428 20:07:17.622617 31065 net.cpp:382] conv1 -> conv1
I0428 20:07:17.624687 31065 net.cpp:124] Setting up conv1
I0428 20:07:17.624701 31065 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:17.624706 31065 net.cpp:139] Memory required for data: 7642800
I0428 20:07:17.624714 31065 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:17.624735 31065 net.cpp:86] Creating Layer pool1
I0428 20:07:17.624738 31065 net.cpp:408] pool1 <- conv1
I0428 20:07:17.624758 31065 net.cpp:382] pool1 -> pool1
I0428 20:07:17.624799 31065 net.cpp:124] Setting up pool1
I0428 20:07:17.624804 31065 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:17.624807 31065 net.cpp:139] Memory required for data: 7674800
I0428 20:07:17.624817 31065 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:17.624825 31065 net.cpp:86] Creating Layer ip1
I0428 20:07:17.624827 31065 net.cpp:408] ip1 <- pool1
I0428 20:07:17.624832 31065 net.cpp:382] ip1 -> ip1
I0428 20:07:17.624963 31065 net.cpp:124] Setting up ip1
I0428 20:07:17.624970 31065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:17.624984 31065 net.cpp:139] Memory required for data: 7694800
I0428 20:07:17.624991 31065 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:17.624996 31065 net.cpp:86] Creating Layer relu1
I0428 20:07:17.625000 31065 net.cpp:408] relu1 <- ip1
I0428 20:07:17.625005 31065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:17.625260 31065 net.cpp:124] Setting up relu1
I0428 20:07:17.625268 31065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:17.625283 31065 net.cpp:139] Memory required for data: 7714800
I0428 20:07:17.625286 31065 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:17.625294 31065 net.cpp:86] Creating Layer ip2
I0428 20:07:17.625298 31065 net.cpp:408] ip2 <- ip1
I0428 20:07:17.625303 31065 net.cpp:382] ip2 -> ip2
I0428 20:07:17.625416 31065 net.cpp:124] Setting up ip2
I0428 20:07:17.625423 31065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:17.625427 31065 net.cpp:139] Memory required for data: 7734800
I0428 20:07:17.625432 31065 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:17.625442 31065 net.cpp:86] Creating Layer relu2
I0428 20:07:17.625445 31065 net.cpp:408] relu2 <- ip2
I0428 20:07:17.625449 31065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:17.625599 31065 net.cpp:124] Setting up relu2
I0428 20:07:17.625607 31065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:17.625610 31065 net.cpp:139] Memory required for data: 7754800
I0428 20:07:17.625613 31065 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:17.625619 31065 net.cpp:86] Creating Layer ip3
I0428 20:07:17.625622 31065 net.cpp:408] ip3 <- ip2
I0428 20:07:17.625632 31065 net.cpp:382] ip3 -> ip3
I0428 20:07:17.625774 31065 net.cpp:124] Setting up ip3
I0428 20:07:17.625785 31065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:17.625788 31065 net.cpp:139] Memory required for data: 7758800
I0428 20:07:17.625797 31065 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:17.625802 31065 net.cpp:86] Creating Layer relu3
I0428 20:07:17.625805 31065 net.cpp:408] relu3 <- ip3
I0428 20:07:17.625809 31065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:17.626615 31065 net.cpp:124] Setting up relu3
I0428 20:07:17.626628 31065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:17.626631 31065 net.cpp:139] Memory required for data: 7762800
I0428 20:07:17.626634 31065 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:17.626639 31065 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:17.626642 31065 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:17.626647 31065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:17.626652 31065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:17.626698 31065 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:17.626703 31065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:17.626705 31065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:17.626708 31065 net.cpp:139] Memory required for data: 7770800
I0428 20:07:17.626711 31065 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:17.626715 31065 net.cpp:86] Creating Layer accuracy
I0428 20:07:17.626718 31065 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:17.626724 31065 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:17.626729 31065 net.cpp:382] accuracy -> accuracy
I0428 20:07:17.626734 31065 net.cpp:124] Setting up accuracy
I0428 20:07:17.626737 31065 net.cpp:131] Top shape: (1)
I0428 20:07:17.626740 31065 net.cpp:139] Memory required for data: 7770804
I0428 20:07:17.626744 31065 layer_factory.hpp:77] Creating layer loss
I0428 20:07:17.626749 31065 net.cpp:86] Creating Layer loss
I0428 20:07:17.626751 31065 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:17.626754 31065 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:17.626758 31065 net.cpp:382] loss -> loss
I0428 20:07:17.626765 31065 layer_factory.hpp:77] Creating layer loss
I0428 20:07:17.627012 31065 net.cpp:124] Setting up loss
I0428 20:07:17.627027 31065 net.cpp:131] Top shape: (1)
I0428 20:07:17.627032 31065 net.cpp:134]     with loss weight 1
I0428 20:07:17.627063 31065 net.cpp:139] Memory required for data: 7770808
I0428 20:07:17.627089 31065 net.cpp:200] loss needs backward computation.
I0428 20:07:17.627095 31065 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:17.627104 31065 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:17.627106 31065 net.cpp:200] relu3 needs backward computation.
I0428 20:07:17.627110 31065 net.cpp:200] ip3 needs backward computation.
I0428 20:07:17.627122 31065 net.cpp:200] relu2 needs backward computation.
I0428 20:07:17.627125 31065 net.cpp:200] ip2 needs backward computation.
I0428 20:07:17.627127 31065 net.cpp:200] relu1 needs backward computation.
I0428 20:07:17.627135 31065 net.cpp:200] ip1 needs backward computation.
I0428 20:07:17.627137 31065 net.cpp:200] pool1 needs backward computation.
I0428 20:07:17.627140 31065 net.cpp:200] conv1 needs backward computation.
I0428 20:07:17.627143 31065 net.cpp:200] pool0 needs backward computation.
I0428 20:07:17.627146 31065 net.cpp:200] conv0 needs backward computation.
I0428 20:07:17.627151 31065 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:17.627154 31065 net.cpp:202] mnist does not need backward computation.
I0428 20:07:17.627156 31065 net.cpp:244] This network produces output accuracy
I0428 20:07:17.627159 31065 net.cpp:244] This network produces output loss
I0428 20:07:17.627171 31065 net.cpp:257] Network initialization done.
I0428 20:07:17.627213 31065 solver.cpp:56] Solver scaffolding done.
I0428 20:07:17.627540 31065 caffe.cpp:248] Starting Optimization
I0428 20:07:17.627547 31065 solver.cpp:273] Solving LeNet
I0428 20:07:17.627549 31065 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:17.628343 31065 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:17.633451 31065 blocking_queue.cpp:49] Waiting for data
I0428 20:07:17.703121 31072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:17.703724 31065 solver.cpp:398]     Test net output #0: accuracy = 0.1032
I0428 20:07:17.703743 31065 solver.cpp:398]     Test net output #1: loss = 2.34475 (* 1 = 2.34475 loss)
I0428 20:07:17.707331 31065 solver.cpp:219] Iteration 0 (-1.18193e-31 iter/s, 0.0797573s/100 iters), loss = 2.38498
I0428 20:07:17.707355 31065 solver.cpp:238]     Train net output #0: loss = 2.38498 (* 1 = 2.38498 loss)
I0428 20:07:17.707381 31065 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:17.796406 31065 solver.cpp:219] Iteration 100 (1123.12 iter/s, 0.0890378s/100 iters), loss = 1.27237
I0428 20:07:17.796429 31065 solver.cpp:238]     Train net output #0: loss = 1.27237 (* 1 = 1.27237 loss)
I0428 20:07:17.796435 31065 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:17.892952 31065 solver.cpp:219] Iteration 200 (1036.13 iter/s, 0.096513s/100 iters), loss = 0.848043
I0428 20:07:17.892992 31065 solver.cpp:238]     Train net output #0: loss = 0.848043 (* 1 = 0.848043 loss)
I0428 20:07:17.892998 31065 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:17.983263 31065 solver.cpp:219] Iteration 300 (1107.7 iter/s, 0.0902769s/100 iters), loss = 0.773085
I0428 20:07:17.983301 31065 solver.cpp:238]     Train net output #0: loss = 0.773085 (* 1 = 0.773085 loss)
I0428 20:07:17.983307 31065 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:18.071563 31065 solver.cpp:219] Iteration 400 (1132.94 iter/s, 0.0882657s/100 iters), loss = 0.796917
I0428 20:07:18.071600 31065 solver.cpp:238]     Train net output #0: loss = 0.796917 (* 1 = 0.796917 loss)
I0428 20:07:18.071606 31065 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:18.158293 31065 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:18.230711 31072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:18.231328 31065 solver.cpp:398]     Test net output #0: accuracy = 0.6568
I0428 20:07:18.231348 31065 solver.cpp:398]     Test net output #1: loss = 0.847177 (* 1 = 0.847177 loss)
I0428 20:07:18.232326 31065 solver.cpp:219] Iteration 500 (622.173 iter/s, 0.160727s/100 iters), loss = 0.873982
I0428 20:07:18.232398 31065 solver.cpp:238]     Train net output #0: loss = 0.873982 (* 1 = 0.873982 loss)
I0428 20:07:18.232408 31065 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:18.329337 31065 solver.cpp:219] Iteration 600 (1031.67 iter/s, 0.0969306s/100 iters), loss = 1.00844
I0428 20:07:18.329378 31065 solver.cpp:238]     Train net output #0: loss = 1.00844 (* 1 = 1.00844 loss)
I0428 20:07:18.329385 31065 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:18.419323 31065 solver.cpp:219] Iteration 700 (1111.71 iter/s, 0.0899512s/100 iters), loss = 0.918288
I0428 20:07:18.419363 31065 solver.cpp:238]     Train net output #0: loss = 0.918288 (* 1 = 0.918288 loss)
I0428 20:07:18.419369 31065 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:18.506824 31065 solver.cpp:219] Iteration 800 (1143.33 iter/s, 0.0874639s/100 iters), loss = 0.868475
I0428 20:07:18.506851 31065 solver.cpp:238]     Train net output #0: loss = 0.868475 (* 1 = 0.868475 loss)
I0428 20:07:18.506857 31065 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:18.594991 31065 solver.cpp:219] Iteration 900 (1134.67 iter/s, 0.0881314s/100 iters), loss = 0.747821
I0428 20:07:18.595031 31065 solver.cpp:238]     Train net output #0: loss = 0.747821 (* 1 = 0.747821 loss)
I0428 20:07:18.595037 31065 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:18.624311 31071 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:18.682639 31065 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:18.683593 31065 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:18.684165 31065 solver.cpp:311] Iteration 1000, loss = 0.490754
I0428 20:07:18.684196 31065 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:18.753247 31072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:18.753845 31065 solver.cpp:398]     Test net output #0: accuracy = 0.7759
I0428 20:07:18.753866 31065 solver.cpp:398]     Test net output #1: loss = 0.556384 (* 1 = 0.556384 loss)
I0428 20:07:18.753871 31065 solver.cpp:316] Optimization Done.
I0428 20:07:18.753875 31065 caffe.cpp:259] Optimization Done.
