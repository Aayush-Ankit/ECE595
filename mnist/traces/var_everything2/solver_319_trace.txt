I0428 19:39:55.326953 24423 caffe.cpp:218] Using GPUs 0
I0428 19:39:55.364183 24423 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:55.872903 24423 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test319.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:55.873050 24423 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test319.prototxt
I0428 19:39:55.873428 24423 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:55.873446 24423 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:55.873538 24423 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:39:55.873612 24423 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:55.873710 24423 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:55.873736 24423 net.cpp:86] Creating Layer mnist
I0428 19:39:55.873744 24423 net.cpp:382] mnist -> data
I0428 19:39:55.873769 24423 net.cpp:382] mnist -> label
I0428 19:39:55.874866 24423 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:55.877316 24423 net.cpp:124] Setting up mnist
I0428 19:39:55.877337 24423 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:55.877344 24423 net.cpp:131] Top shape: 64 (64)
I0428 19:39:55.877347 24423 net.cpp:139] Memory required for data: 200960
I0428 19:39:55.877354 24423 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:55.877372 24423 net.cpp:86] Creating Layer conv0
I0428 19:39:55.877377 24423 net.cpp:408] conv0 <- data
I0428 19:39:55.877389 24423 net.cpp:382] conv0 -> conv0
I0428 19:39:56.156568 24423 net.cpp:124] Setting up conv0
I0428 19:39:56.156594 24423 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:56.156597 24423 net.cpp:139] Memory required for data: 495872
I0428 19:39:56.156630 24423 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:56.156644 24423 net.cpp:86] Creating Layer pool0
I0428 19:39:56.156648 24423 net.cpp:408] pool0 <- conv0
I0428 19:39:56.156653 24423 net.cpp:382] pool0 -> pool0
I0428 19:39:56.156699 24423 net.cpp:124] Setting up pool0
I0428 19:39:56.156707 24423 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:56.156709 24423 net.cpp:139] Memory required for data: 569600
I0428 19:39:56.156713 24423 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:56.156723 24423 net.cpp:86] Creating Layer conv1
I0428 19:39:56.156726 24423 net.cpp:408] conv1 <- pool0
I0428 19:39:56.156731 24423 net.cpp:382] conv1 -> conv1
I0428 19:39:56.158768 24423 net.cpp:124] Setting up conv1
I0428 19:39:56.158783 24423 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:39:56.158787 24423 net.cpp:139] Memory required for data: 651520
I0428 19:39:56.158798 24423 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:56.158807 24423 net.cpp:86] Creating Layer pool1
I0428 19:39:56.158812 24423 net.cpp:408] pool1 <- conv1
I0428 19:39:56.158816 24423 net.cpp:382] pool1 -> pool1
I0428 19:39:56.158869 24423 net.cpp:124] Setting up pool1
I0428 19:39:56.158875 24423 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:39:56.158879 24423 net.cpp:139] Memory required for data: 672000
I0428 19:39:56.158881 24423 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:56.158888 24423 net.cpp:86] Creating Layer ip1
I0428 19:39:56.158891 24423 net.cpp:408] ip1 <- pool1
I0428 19:39:56.158897 24423 net.cpp:382] ip1 -> ip1
I0428 19:39:56.159922 24423 net.cpp:124] Setting up ip1
I0428 19:39:56.159934 24423 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:56.159939 24423 net.cpp:139] Memory required for data: 678400
I0428 19:39:56.159946 24423 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:56.159952 24423 net.cpp:86] Creating Layer relu1
I0428 19:39:56.159956 24423 net.cpp:408] relu1 <- ip1
I0428 19:39:56.159962 24423 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:56.160138 24423 net.cpp:124] Setting up relu1
I0428 19:39:56.160147 24423 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:56.160151 24423 net.cpp:139] Memory required for data: 684800
I0428 19:39:56.160153 24423 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:56.160161 24423 net.cpp:86] Creating Layer ip2
I0428 19:39:56.160164 24423 net.cpp:408] ip2 <- ip1
I0428 19:39:56.160169 24423 net.cpp:382] ip2 -> ip2
I0428 19:39:56.160269 24423 net.cpp:124] Setting up ip2
I0428 19:39:56.160275 24423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:56.160279 24423 net.cpp:139] Memory required for data: 687360
I0428 19:39:56.160284 24423 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:56.160305 24423 net.cpp:86] Creating Layer relu2
I0428 19:39:56.160308 24423 net.cpp:408] relu2 <- ip2
I0428 19:39:56.160312 24423 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:56.161181 24423 net.cpp:124] Setting up relu2
I0428 19:39:56.161193 24423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:56.161198 24423 net.cpp:139] Memory required for data: 689920
I0428 19:39:56.161201 24423 layer_factory.hpp:77] Creating layer loss
I0428 19:39:56.161208 24423 net.cpp:86] Creating Layer loss
I0428 19:39:56.161211 24423 net.cpp:408] loss <- ip2
I0428 19:39:56.161216 24423 net.cpp:408] loss <- label
I0428 19:39:56.161221 24423 net.cpp:382] loss -> loss
I0428 19:39:56.161240 24423 layer_factory.hpp:77] Creating layer loss
I0428 19:39:56.161523 24423 net.cpp:124] Setting up loss
I0428 19:39:56.161535 24423 net.cpp:131] Top shape: (1)
I0428 19:39:56.161538 24423 net.cpp:134]     with loss weight 1
I0428 19:39:56.161554 24423 net.cpp:139] Memory required for data: 689924
I0428 19:39:56.161558 24423 net.cpp:200] loss needs backward computation.
I0428 19:39:56.161562 24423 net.cpp:200] relu2 needs backward computation.
I0428 19:39:56.161566 24423 net.cpp:200] ip2 needs backward computation.
I0428 19:39:56.161568 24423 net.cpp:200] relu1 needs backward computation.
I0428 19:39:56.161584 24423 net.cpp:200] ip1 needs backward computation.
I0428 19:39:56.161588 24423 net.cpp:200] pool1 needs backward computation.
I0428 19:39:56.161602 24423 net.cpp:200] conv1 needs backward computation.
I0428 19:39:56.161604 24423 net.cpp:200] pool0 needs backward computation.
I0428 19:39:56.161608 24423 net.cpp:200] conv0 needs backward computation.
I0428 19:39:56.161612 24423 net.cpp:202] mnist does not need backward computation.
I0428 19:39:56.161614 24423 net.cpp:244] This network produces output loss
I0428 19:39:56.161623 24423 net.cpp:257] Network initialization done.
I0428 19:39:56.161907 24423 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test319.prototxt
I0428 19:39:56.161932 24423 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:56.162035 24423 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:39:56.162106 24423 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:56.162149 24423 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:56.162163 24423 net.cpp:86] Creating Layer mnist
I0428 19:39:56.162169 24423 net.cpp:382] mnist -> data
I0428 19:39:56.162187 24423 net.cpp:382] mnist -> label
I0428 19:39:56.162286 24423 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:56.164322 24423 net.cpp:124] Setting up mnist
I0428 19:39:56.164350 24423 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:56.164355 24423 net.cpp:131] Top shape: 100 (100)
I0428 19:39:56.164358 24423 net.cpp:139] Memory required for data: 314000
I0428 19:39:56.164362 24423 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:56.164371 24423 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:56.164376 24423 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:56.164381 24423 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:56.164388 24423 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:56.164474 24423 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:56.164491 24423 net.cpp:131] Top shape: 100 (100)
I0428 19:39:56.164506 24423 net.cpp:131] Top shape: 100 (100)
I0428 19:39:56.164510 24423 net.cpp:139] Memory required for data: 314800
I0428 19:39:56.164513 24423 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:56.164522 24423 net.cpp:86] Creating Layer conv0
I0428 19:39:56.164525 24423 net.cpp:408] conv0 <- data
I0428 19:39:56.164532 24423 net.cpp:382] conv0 -> conv0
I0428 19:39:56.166129 24423 net.cpp:124] Setting up conv0
I0428 19:39:56.166159 24423 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:56.166163 24423 net.cpp:139] Memory required for data: 775600
I0428 19:39:56.166188 24423 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:56.166196 24423 net.cpp:86] Creating Layer pool0
I0428 19:39:56.166200 24423 net.cpp:408] pool0 <- conv0
I0428 19:39:56.166205 24423 net.cpp:382] pool0 -> pool0
I0428 19:39:56.166260 24423 net.cpp:124] Setting up pool0
I0428 19:39:56.166265 24423 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:56.166268 24423 net.cpp:139] Memory required for data: 890800
I0428 19:39:56.166272 24423 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:56.166283 24423 net.cpp:86] Creating Layer conv1
I0428 19:39:56.166286 24423 net.cpp:408] conv1 <- pool0
I0428 19:39:56.166296 24423 net.cpp:382] conv1 -> conv1
I0428 19:39:56.167907 24423 net.cpp:124] Setting up conv1
I0428 19:39:56.167937 24423 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:39:56.167942 24423 net.cpp:139] Memory required for data: 1018800
I0428 19:39:56.167963 24423 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:56.167985 24423 net.cpp:86] Creating Layer pool1
I0428 19:39:56.167989 24423 net.cpp:408] pool1 <- conv1
I0428 19:39:56.167995 24423 net.cpp:382] pool1 -> pool1
I0428 19:39:56.168032 24423 net.cpp:124] Setting up pool1
I0428 19:39:56.168040 24423 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:39:56.168042 24423 net.cpp:139] Memory required for data: 1050800
I0428 19:39:56.168045 24423 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:56.168051 24423 net.cpp:86] Creating Layer ip1
I0428 19:39:56.168054 24423 net.cpp:408] ip1 <- pool1
I0428 19:39:56.168061 24423 net.cpp:382] ip1 -> ip1
I0428 19:39:56.168192 24423 net.cpp:124] Setting up ip1
I0428 19:39:56.168200 24423 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:56.168203 24423 net.cpp:139] Memory required for data: 1060800
I0428 19:39:56.168212 24423 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:56.168218 24423 net.cpp:86] Creating Layer relu1
I0428 19:39:56.168232 24423 net.cpp:408] relu1 <- ip1
I0428 19:39:56.168239 24423 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:56.168437 24423 net.cpp:124] Setting up relu1
I0428 19:39:56.168444 24423 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:56.168447 24423 net.cpp:139] Memory required for data: 1070800
I0428 19:39:56.168450 24423 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:56.168459 24423 net.cpp:86] Creating Layer ip2
I0428 19:39:56.168464 24423 net.cpp:408] ip2 <- ip1
I0428 19:39:56.168469 24423 net.cpp:382] ip2 -> ip2
I0428 19:39:56.168568 24423 net.cpp:124] Setting up ip2
I0428 19:39:56.168576 24423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:56.168579 24423 net.cpp:139] Memory required for data: 1074800
I0428 19:39:56.168584 24423 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:56.168589 24423 net.cpp:86] Creating Layer relu2
I0428 19:39:56.168592 24423 net.cpp:408] relu2 <- ip2
I0428 19:39:56.168597 24423 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:56.168769 24423 net.cpp:124] Setting up relu2
I0428 19:39:56.168777 24423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:56.168781 24423 net.cpp:139] Memory required for data: 1078800
I0428 19:39:56.168783 24423 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:39:56.168788 24423 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:39:56.168792 24423 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:39:56.168797 24423 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:39:56.168838 24423 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:39:56.168903 24423 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:39:56.168911 24423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:56.168915 24423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:56.168918 24423 net.cpp:139] Memory required for data: 1086800
I0428 19:39:56.168921 24423 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:56.168928 24423 net.cpp:86] Creating Layer accuracy
I0428 19:39:56.168932 24423 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:39:56.168936 24423 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:56.168942 24423 net.cpp:382] accuracy -> accuracy
I0428 19:39:56.168949 24423 net.cpp:124] Setting up accuracy
I0428 19:39:56.168954 24423 net.cpp:131] Top shape: (1)
I0428 19:39:56.168957 24423 net.cpp:139] Memory required for data: 1086804
I0428 19:39:56.168961 24423 layer_factory.hpp:77] Creating layer loss
I0428 19:39:56.168965 24423 net.cpp:86] Creating Layer loss
I0428 19:39:56.168968 24423 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:39:56.168973 24423 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:56.168977 24423 net.cpp:382] loss -> loss
I0428 19:39:56.168984 24423 layer_factory.hpp:77] Creating layer loss
I0428 19:39:56.169252 24423 net.cpp:124] Setting up loss
I0428 19:39:56.169262 24423 net.cpp:131] Top shape: (1)
I0428 19:39:56.169266 24423 net.cpp:134]     with loss weight 1
I0428 19:39:56.169273 24423 net.cpp:139] Memory required for data: 1086808
I0428 19:39:56.169276 24423 net.cpp:200] loss needs backward computation.
I0428 19:39:56.169281 24423 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:56.169284 24423 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:39:56.169288 24423 net.cpp:200] relu2 needs backward computation.
I0428 19:39:56.169291 24423 net.cpp:200] ip2 needs backward computation.
I0428 19:39:56.169294 24423 net.cpp:200] relu1 needs backward computation.
I0428 19:39:56.169297 24423 net.cpp:200] ip1 needs backward computation.
I0428 19:39:56.169301 24423 net.cpp:200] pool1 needs backward computation.
I0428 19:39:56.169304 24423 net.cpp:200] conv1 needs backward computation.
I0428 19:39:56.169318 24423 net.cpp:200] pool0 needs backward computation.
I0428 19:39:56.169322 24423 net.cpp:200] conv0 needs backward computation.
I0428 19:39:56.169348 24423 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:56.169353 24423 net.cpp:202] mnist does not need backward computation.
I0428 19:39:56.169355 24423 net.cpp:244] This network produces output accuracy
I0428 19:39:56.169358 24423 net.cpp:244] This network produces output loss
I0428 19:39:56.169369 24423 net.cpp:257] Network initialization done.
I0428 19:39:56.169407 24423 solver.cpp:56] Solver scaffolding done.
I0428 19:39:56.169735 24423 caffe.cpp:248] Starting Optimization
I0428 19:39:56.169741 24423 solver.cpp:273] Solving LeNet
I0428 19:39:56.169744 24423 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:56.169970 24423 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:56.173387 24423 blocking_queue.cpp:49] Waiting for data
I0428 19:39:56.246631 24430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:56.247086 24423 solver.cpp:398]     Test net output #0: accuracy = 0.0977
I0428 19:39:56.247122 24423 solver.cpp:398]     Test net output #1: loss = 2.30604 (* 1 = 2.30604 loss)
I0428 19:39:56.248945 24423 solver.cpp:219] Iteration 0 (2.87641 iter/s, 0.0791433s/100 iters), loss = 2.30362
I0428 19:39:56.248987 24423 solver.cpp:238]     Train net output #0: loss = 2.30362 (* 1 = 2.30362 loss)
I0428 19:39:56.249001 24423 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:56.322547 24423 solver.cpp:219] Iteration 100 (1359.63 iter/s, 0.0735493s/100 iters), loss = 1.37025
I0428 19:39:56.322584 24423 solver.cpp:238]     Train net output #0: loss = 1.37025 (* 1 = 1.37025 loss)
I0428 19:39:56.322592 24423 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:56.385573 24423 solver.cpp:219] Iteration 200 (1588.19 iter/s, 0.0629647s/100 iters), loss = 1.49349
I0428 19:39:56.385624 24423 solver.cpp:238]     Train net output #0: loss = 1.49349 (* 1 = 1.49349 loss)
I0428 19:39:56.385632 24423 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:56.450701 24423 solver.cpp:219] Iteration 300 (1536.54 iter/s, 0.0650813s/100 iters), loss = 0.929686
I0428 19:39:56.450742 24423 solver.cpp:238]     Train net output #0: loss = 0.929686 (* 1 = 0.929686 loss)
I0428 19:39:56.450749 24423 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:56.517637 24423 solver.cpp:219] Iteration 400 (1495.18 iter/s, 0.0668815s/100 iters), loss = 0.853363
I0428 19:39:56.517680 24423 solver.cpp:238]     Train net output #0: loss = 0.853363 (* 1 = 0.853363 loss)
I0428 19:39:56.517688 24423 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:56.588649 24423 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:56.663720 24430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:56.664124 24423 solver.cpp:398]     Test net output #0: accuracy = 0.7115
I0428 19:39:56.664142 24423 solver.cpp:398]     Test net output #1: loss = 0.943818 (* 1 = 0.943818 loss)
I0428 19:39:56.664888 24423 solver.cpp:219] Iteration 500 (679.362 iter/s, 0.147197s/100 iters), loss = 0.78377
I0428 19:39:56.664911 24423 solver.cpp:238]     Train net output #0: loss = 0.78377 (* 1 = 0.78377 loss)
I0428 19:39:56.664917 24423 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:56.733989 24423 solver.cpp:219] Iteration 600 (1447.87 iter/s, 0.0690667s/100 iters), loss = 0.878619
I0428 19:39:56.734015 24423 solver.cpp:238]     Train net output #0: loss = 0.878619 (* 1 = 0.878619 loss)
I0428 19:39:56.734022 24423 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:56.798015 24423 solver.cpp:219] Iteration 700 (1562.9 iter/s, 0.0639836s/100 iters), loss = 1.13301
I0428 19:39:56.798058 24423 solver.cpp:238]     Train net output #0: loss = 1.13301 (* 1 = 1.13301 loss)
I0428 19:39:56.798064 24423 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:56.866824 24423 solver.cpp:219] Iteration 800 (1454.41 iter/s, 0.0687564s/100 iters), loss = 0.80734
I0428 19:39:56.866873 24423 solver.cpp:238]     Train net output #0: loss = 0.80734 (* 1 = 0.80734 loss)
I0428 19:39:56.866881 24423 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:56.945466 24423 solver.cpp:219] Iteration 900 (1272.51 iter/s, 0.0785846s/100 iters), loss = 0.979941
I0428 19:39:56.945497 24423 solver.cpp:238]     Train net output #0: loss = 0.979941 (* 1 = 0.979941 loss)
I0428 19:39:56.945507 24423 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:56.971099 24429 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:57.021248 24423 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:57.022025 24423 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:57.022578 24423 solver.cpp:311] Iteration 1000, loss = 0.936195
I0428 19:39:57.022599 24423 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:57.122119 24430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:57.122746 24423 solver.cpp:398]     Test net output #0: accuracy = 0.7375
I0428 19:39:57.122776 24423 solver.cpp:398]     Test net output #1: loss = 0.87218 (* 1 = 0.87218 loss)
I0428 19:39:57.122784 24423 solver.cpp:316] Optimization Done.
I0428 19:39:57.122790 24423 caffe.cpp:259] Optimization Done.
