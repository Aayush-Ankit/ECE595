I0428 20:06:37.989866 30916 caffe.cpp:218] Using GPUs 0
I0428 20:06:38.025493 30916 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:38.537135 30916 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1033.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:38.537277 30916 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1033.prototxt
I0428 20:06:38.537681 30916 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:38.537699 30916 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:38.537796 30916 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:38.537869 30916 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:38.537971 30916 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:38.537993 30916 net.cpp:86] Creating Layer mnist
I0428 20:06:38.538002 30916 net.cpp:382] mnist -> data
I0428 20:06:38.538024 30916 net.cpp:382] mnist -> label
I0428 20:06:38.539105 30916 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:38.541664 30916 net.cpp:124] Setting up mnist
I0428 20:06:38.541683 30916 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:38.541692 30916 net.cpp:131] Top shape: 64 (64)
I0428 20:06:38.541697 30916 net.cpp:139] Memory required for data: 200960
I0428 20:06:38.541708 30916 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:38.541726 30916 net.cpp:86] Creating Layer conv0
I0428 20:06:38.541748 30916 net.cpp:408] conv0 <- data
I0428 20:06:38.541760 30916 net.cpp:382] conv0 -> conv0
I0428 20:06:38.821795 30916 net.cpp:124] Setting up conv0
I0428 20:06:38.821825 30916 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:38.821828 30916 net.cpp:139] Memory required for data: 3887360
I0428 20:06:38.821842 30916 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:38.821856 30916 net.cpp:86] Creating Layer pool0
I0428 20:06:38.821859 30916 net.cpp:408] pool0 <- conv0
I0428 20:06:38.821864 30916 net.cpp:382] pool0 -> pool0
I0428 20:06:38.821910 30916 net.cpp:124] Setting up pool0
I0428 20:06:38.821915 30916 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:38.821918 30916 net.cpp:139] Memory required for data: 4808960
I0428 20:06:38.821921 30916 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:38.821933 30916 net.cpp:86] Creating Layer conv1
I0428 20:06:38.821935 30916 net.cpp:408] conv1 <- pool0
I0428 20:06:38.821940 30916 net.cpp:382] conv1 -> conv1
I0428 20:06:38.824707 30916 net.cpp:124] Setting up conv1
I0428 20:06:38.824723 30916 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:38.824726 30916 net.cpp:139] Memory required for data: 4890880
I0428 20:06:38.824734 30916 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:38.824743 30916 net.cpp:86] Creating Layer pool1
I0428 20:06:38.824745 30916 net.cpp:408] pool1 <- conv1
I0428 20:06:38.824750 30916 net.cpp:382] pool1 -> pool1
I0428 20:06:38.824802 30916 net.cpp:124] Setting up pool1
I0428 20:06:38.824808 30916 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:38.824833 30916 net.cpp:139] Memory required for data: 4911360
I0428 20:06:38.824836 30916 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:38.824864 30916 net.cpp:86] Creating Layer ip1
I0428 20:06:38.824867 30916 net.cpp:408] ip1 <- pool1
I0428 20:06:38.824889 30916 net.cpp:382] ip1 -> ip1
I0428 20:06:38.825047 30916 net.cpp:124] Setting up ip1
I0428 20:06:38.825058 30916 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:38.825062 30916 net.cpp:139] Memory required for data: 4913920
I0428 20:06:38.825070 30916 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:38.825078 30916 net.cpp:86] Creating Layer relu1
I0428 20:06:38.825083 30916 net.cpp:408] relu1 <- ip1
I0428 20:06:38.825086 30916 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:38.825296 30916 net.cpp:124] Setting up relu1
I0428 20:06:38.825306 30916 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:38.825310 30916 net.cpp:139] Memory required for data: 4916480
I0428 20:06:38.825314 30916 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:38.825320 30916 net.cpp:86] Creating Layer ip2
I0428 20:06:38.825323 30916 net.cpp:408] ip2 <- ip1
I0428 20:06:38.825328 30916 net.cpp:382] ip2 -> ip2
I0428 20:06:38.825425 30916 net.cpp:124] Setting up ip2
I0428 20:06:38.825433 30916 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:38.825435 30916 net.cpp:139] Memory required for data: 4929280
I0428 20:06:38.825441 30916 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:38.825448 30916 net.cpp:86] Creating Layer relu2
I0428 20:06:38.825450 30916 net.cpp:408] relu2 <- ip2
I0428 20:06:38.825454 30916 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:38.826191 30916 net.cpp:124] Setting up relu2
I0428 20:06:38.826205 30916 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:38.826208 30916 net.cpp:139] Memory required for data: 4942080
I0428 20:06:38.826211 30916 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:38.826220 30916 net.cpp:86] Creating Layer ip3
I0428 20:06:38.826222 30916 net.cpp:408] ip3 <- ip2
I0428 20:06:38.826228 30916 net.cpp:382] ip3 -> ip3
I0428 20:06:38.826340 30916 net.cpp:124] Setting up ip3
I0428 20:06:38.826347 30916 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:38.826351 30916 net.cpp:139] Memory required for data: 4944640
I0428 20:06:38.826359 30916 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:38.826364 30916 net.cpp:86] Creating Layer relu3
I0428 20:06:38.826367 30916 net.cpp:408] relu3 <- ip3
I0428 20:06:38.826370 30916 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:38.826529 30916 net.cpp:124] Setting up relu3
I0428 20:06:38.826539 30916 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:38.826541 30916 net.cpp:139] Memory required for data: 4947200
I0428 20:06:38.826545 30916 layer_factory.hpp:77] Creating layer loss
I0428 20:06:38.826550 30916 net.cpp:86] Creating Layer loss
I0428 20:06:38.826553 30916 net.cpp:408] loss <- ip3
I0428 20:06:38.826557 30916 net.cpp:408] loss <- label
I0428 20:06:38.826562 30916 net.cpp:382] loss -> loss
I0428 20:06:38.826580 30916 layer_factory.hpp:77] Creating layer loss
I0428 20:06:38.826798 30916 net.cpp:124] Setting up loss
I0428 20:06:38.826807 30916 net.cpp:131] Top shape: (1)
I0428 20:06:38.826812 30916 net.cpp:134]     with loss weight 1
I0428 20:06:38.826824 30916 net.cpp:139] Memory required for data: 4947204
I0428 20:06:38.826828 30916 net.cpp:200] loss needs backward computation.
I0428 20:06:38.826831 30916 net.cpp:200] relu3 needs backward computation.
I0428 20:06:38.826834 30916 net.cpp:200] ip3 needs backward computation.
I0428 20:06:38.826838 30916 net.cpp:200] relu2 needs backward computation.
I0428 20:06:38.826840 30916 net.cpp:200] ip2 needs backward computation.
I0428 20:06:38.826843 30916 net.cpp:200] relu1 needs backward computation.
I0428 20:06:38.826845 30916 net.cpp:200] ip1 needs backward computation.
I0428 20:06:38.826848 30916 net.cpp:200] pool1 needs backward computation.
I0428 20:06:38.826851 30916 net.cpp:200] conv1 needs backward computation.
I0428 20:06:38.826854 30916 net.cpp:200] pool0 needs backward computation.
I0428 20:06:38.826858 30916 net.cpp:200] conv0 needs backward computation.
I0428 20:06:38.826860 30916 net.cpp:202] mnist does not need backward computation.
I0428 20:06:38.826864 30916 net.cpp:244] This network produces output loss
I0428 20:06:38.826871 30916 net.cpp:257] Network initialization done.
I0428 20:06:38.827208 30916 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1033.prototxt
I0428 20:06:38.827280 30916 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:38.827404 30916 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:38.827482 30916 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:38.827540 30916 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:38.827553 30916 net.cpp:86] Creating Layer mnist
I0428 20:06:38.827558 30916 net.cpp:382] mnist -> data
I0428 20:06:38.827564 30916 net.cpp:382] mnist -> label
I0428 20:06:38.827646 30916 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:38.830488 30916 net.cpp:124] Setting up mnist
I0428 20:06:38.830533 30916 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:38.830544 30916 net.cpp:131] Top shape: 100 (100)
I0428 20:06:38.830552 30916 net.cpp:139] Memory required for data: 314000
I0428 20:06:38.830560 30916 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:38.830582 30916 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:38.830593 30916 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:38.830620 30916 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:38.830634 30916 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:38.830783 30916 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:38.830801 30916 net.cpp:131] Top shape: 100 (100)
I0428 20:06:38.830808 30916 net.cpp:131] Top shape: 100 (100)
I0428 20:06:38.830816 30916 net.cpp:139] Memory required for data: 314800
I0428 20:06:38.830821 30916 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:38.830840 30916 net.cpp:86] Creating Layer conv0
I0428 20:06:38.830854 30916 net.cpp:408] conv0 <- data
I0428 20:06:38.830866 30916 net.cpp:382] conv0 -> conv0
I0428 20:06:38.833940 30916 net.cpp:124] Setting up conv0
I0428 20:06:38.833981 30916 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:38.833992 30916 net.cpp:139] Memory required for data: 6074800
I0428 20:06:38.834013 30916 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:38.834031 30916 net.cpp:86] Creating Layer pool0
I0428 20:06:38.834039 30916 net.cpp:408] pool0 <- conv0
I0428 20:06:38.834051 30916 net.cpp:382] pool0 -> pool0
I0428 20:06:38.834142 30916 net.cpp:124] Setting up pool0
I0428 20:06:38.834156 30916 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:38.834163 30916 net.cpp:139] Memory required for data: 7514800
I0428 20:06:38.834170 30916 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:38.834197 30916 net.cpp:86] Creating Layer conv1
I0428 20:06:38.834210 30916 net.cpp:408] conv1 <- pool0
I0428 20:06:38.834223 30916 net.cpp:382] conv1 -> conv1
I0428 20:06:38.838315 30916 net.cpp:124] Setting up conv1
I0428 20:06:38.838341 30916 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:38.838351 30916 net.cpp:139] Memory required for data: 7642800
I0428 20:06:38.838368 30916 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:38.838382 30916 net.cpp:86] Creating Layer pool1
I0428 20:06:38.838389 30916 net.cpp:408] pool1 <- conv1
I0428 20:06:38.838403 30916 net.cpp:382] pool1 -> pool1
I0428 20:06:38.838490 30916 net.cpp:124] Setting up pool1
I0428 20:06:38.838501 30916 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:38.838508 30916 net.cpp:139] Memory required for data: 7674800
I0428 20:06:38.838515 30916 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:38.838527 30916 net.cpp:86] Creating Layer ip1
I0428 20:06:38.838534 30916 net.cpp:408] ip1 <- pool1
I0428 20:06:38.838546 30916 net.cpp:382] ip1 -> ip1
I0428 20:06:38.838768 30916 net.cpp:124] Setting up ip1
I0428 20:06:38.838783 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.838814 30916 net.cpp:139] Memory required for data: 7678800
I0428 20:06:38.838829 30916 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:38.838843 30916 net.cpp:86] Creating Layer relu1
I0428 20:06:38.838851 30916 net.cpp:408] relu1 <- ip1
I0428 20:06:38.838878 30916 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:38.839267 30916 net.cpp:124] Setting up relu1
I0428 20:06:38.839285 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.839293 30916 net.cpp:139] Memory required for data: 7682800
I0428 20:06:38.839305 30916 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:38.839319 30916 net.cpp:86] Creating Layer ip2
I0428 20:06:38.839326 30916 net.cpp:408] ip2 <- ip1
I0428 20:06:38.839339 30916 net.cpp:382] ip2 -> ip2
I0428 20:06:38.839572 30916 net.cpp:124] Setting up ip2
I0428 20:06:38.839586 30916 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:38.839593 30916 net.cpp:139] Memory required for data: 7702800
I0428 20:06:38.839606 30916 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:38.839615 30916 net.cpp:86] Creating Layer relu2
I0428 20:06:38.839622 30916 net.cpp:408] relu2 <- ip2
I0428 20:06:38.839630 30916 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:38.839975 30916 net.cpp:124] Setting up relu2
I0428 20:06:38.839989 30916 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:38.839996 30916 net.cpp:139] Memory required for data: 7722800
I0428 20:06:38.840009 30916 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:38.840019 30916 net.cpp:86] Creating Layer ip3
I0428 20:06:38.840028 30916 net.cpp:408] ip3 <- ip2
I0428 20:06:38.840037 30916 net.cpp:382] ip3 -> ip3
I0428 20:06:38.840297 30916 net.cpp:124] Setting up ip3
I0428 20:06:38.840312 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.840319 30916 net.cpp:139] Memory required for data: 7726800
I0428 20:06:38.840337 30916 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:38.840348 30916 net.cpp:86] Creating Layer relu3
I0428 20:06:38.840354 30916 net.cpp:408] relu3 <- ip3
I0428 20:06:38.840363 30916 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:38.841861 30916 net.cpp:124] Setting up relu3
I0428 20:06:38.841894 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.841902 30916 net.cpp:139] Memory required for data: 7730800
I0428 20:06:38.841919 30916 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:38.841930 30916 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:38.841938 30916 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:38.841948 30916 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:38.841959 30916 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:38.842031 30916 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:38.842041 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.842049 30916 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:38.842054 30916 net.cpp:139] Memory required for data: 7738800
I0428 20:06:38.842061 30916 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:38.842070 30916 net.cpp:86] Creating Layer accuracy
I0428 20:06:38.842077 30916 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:38.842084 30916 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:38.842093 30916 net.cpp:382] accuracy -> accuracy
I0428 20:06:38.842105 30916 net.cpp:124] Setting up accuracy
I0428 20:06:38.842113 30916 net.cpp:131] Top shape: (1)
I0428 20:06:38.842118 30916 net.cpp:139] Memory required for data: 7738804
I0428 20:06:38.842124 30916 layer_factory.hpp:77] Creating layer loss
I0428 20:06:38.842133 30916 net.cpp:86] Creating Layer loss
I0428 20:06:38.842139 30916 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:38.842146 30916 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:38.842154 30916 net.cpp:382] loss -> loss
I0428 20:06:38.842165 30916 layer_factory.hpp:77] Creating layer loss
I0428 20:06:38.842628 30916 net.cpp:124] Setting up loss
I0428 20:06:38.842643 30916 net.cpp:131] Top shape: (1)
I0428 20:06:38.842660 30916 net.cpp:134]     with loss weight 1
I0428 20:06:38.842674 30916 net.cpp:139] Memory required for data: 7738808
I0428 20:06:38.842706 30916 net.cpp:200] loss needs backward computation.
I0428 20:06:38.842715 30916 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:38.842722 30916 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:38.842730 30916 net.cpp:200] relu3 needs backward computation.
I0428 20:06:38.842736 30916 net.cpp:200] ip3 needs backward computation.
I0428 20:06:38.842741 30916 net.cpp:200] relu2 needs backward computation.
I0428 20:06:38.842748 30916 net.cpp:200] ip2 needs backward computation.
I0428 20:06:38.842754 30916 net.cpp:200] relu1 needs backward computation.
I0428 20:06:38.842759 30916 net.cpp:200] ip1 needs backward computation.
I0428 20:06:38.842767 30916 net.cpp:200] pool1 needs backward computation.
I0428 20:06:38.842772 30916 net.cpp:200] conv1 needs backward computation.
I0428 20:06:38.842779 30916 net.cpp:200] pool0 needs backward computation.
I0428 20:06:38.842785 30916 net.cpp:200] conv0 needs backward computation.
I0428 20:06:38.842793 30916 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:38.842802 30916 net.cpp:202] mnist does not need backward computation.
I0428 20:06:38.842806 30916 net.cpp:244] This network produces output accuracy
I0428 20:06:38.842813 30916 net.cpp:244] This network produces output loss
I0428 20:06:38.842833 30916 net.cpp:257] Network initialization done.
I0428 20:06:38.842917 30916 solver.cpp:56] Solver scaffolding done.
I0428 20:06:38.843600 30916 caffe.cpp:248] Starting Optimization
I0428 20:06:38.843616 30916 solver.cpp:273] Solving LeNet
I0428 20:06:38.843621 30916 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:38.845017 30916 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:38.855505 30916 blocking_queue.cpp:49] Waiting for data
I0428 20:06:38.920584 30923 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:38.921236 30916 solver.cpp:398]     Test net output #0: accuracy = 0.0867
I0428 20:06:38.921272 30916 solver.cpp:398]     Test net output #1: loss = 2.31225 (* 1 = 2.31225 loss)
I0428 20:06:38.925652 30916 solver.cpp:219] Iteration 0 (0 iter/s, 0.0819876s/100 iters), loss = 2.29706
I0428 20:06:38.925694 30916 solver.cpp:238]     Train net output #0: loss = 2.29706 (* 1 = 2.29706 loss)
I0428 20:06:38.925709 30916 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:39.022676 30916 solver.cpp:219] Iteration 100 (1031.11 iter/s, 0.096983s/100 iters), loss = 1.1355
I0428 20:06:39.022711 30916 solver.cpp:238]     Train net output #0: loss = 1.1355 (* 1 = 1.1355 loss)
I0428 20:06:39.022725 30916 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:39.113930 30916 solver.cpp:219] Iteration 200 (1096.38 iter/s, 0.0912089s/100 iters), loss = 0.661405
I0428 20:06:39.113961 30916 solver.cpp:238]     Train net output #0: loss = 0.661405 (* 1 = 0.661405 loss)
I0428 20:06:39.113973 30916 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:39.205471 30916 solver.cpp:219] Iteration 300 (1092.89 iter/s, 0.0915005s/100 iters), loss = 0.545065
I0428 20:06:39.205512 30916 solver.cpp:238]     Train net output #0: loss = 0.545065 (* 1 = 0.545065 loss)
I0428 20:06:39.205519 30916 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:39.296442 30916 solver.cpp:219] Iteration 400 (1099.74 iter/s, 0.0909302s/100 iters), loss = 0.476902
I0428 20:06:39.296471 30916 solver.cpp:238]     Train net output #0: loss = 0.476902 (* 1 = 0.476902 loss)
I0428 20:06:39.296478 30916 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:39.385852 30916 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:39.461035 30923 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:39.461719 30916 solver.cpp:398]     Test net output #0: accuracy = 0.8438
I0428 20:06:39.461760 30916 solver.cpp:398]     Test net output #1: loss = 0.437083 (* 1 = 0.437083 loss)
I0428 20:06:39.462862 30916 solver.cpp:219] Iteration 500 (601.05 iter/s, 0.166375s/100 iters), loss = 0.363647
I0428 20:06:39.462944 30916 solver.cpp:238]     Train net output #0: loss = 0.363647 (* 1 = 0.363647 loss)
I0428 20:06:39.462975 30916 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:39.551084 30916 solver.cpp:219] Iteration 600 (1134.61 iter/s, 0.0881357s/100 iters), loss = 0.546577
I0428 20:06:39.551126 30916 solver.cpp:238]     Train net output #0: loss = 0.546577 (* 1 = 0.546577 loss)
I0428 20:06:39.551131 30916 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:39.640714 30916 solver.cpp:219] Iteration 700 (1116.14 iter/s, 0.0895949s/100 iters), loss = 0.52763
I0428 20:06:39.640741 30916 solver.cpp:238]     Train net output #0: loss = 0.52763 (* 1 = 0.52763 loss)
I0428 20:06:39.640748 30916 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:39.730885 30916 solver.cpp:219] Iteration 800 (1109.45 iter/s, 0.0901346s/100 iters), loss = 0.483639
I0428 20:06:39.730924 30916 solver.cpp:238]     Train net output #0: loss = 0.483638 (* 1 = 0.483638 loss)
I0428 20:06:39.730931 30916 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:39.830485 30916 solver.cpp:219] Iteration 900 (1004.36 iter/s, 0.0995656s/100 iters), loss = 0.257935
I0428 20:06:39.830518 30916 solver.cpp:238]     Train net output #0: loss = 0.257935 (* 1 = 0.257935 loss)
I0428 20:06:39.830525 30916 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:39.867324 30922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:39.938104 30916 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:39.938845 30916 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:39.939440 30916 solver.cpp:311] Iteration 1000, loss = 0.310988
I0428 20:06:39.939458 30916 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:39.991991 30923 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:39.993474 30916 solver.cpp:398]     Test net output #0: accuracy = 0.8677
I0428 20:06:39.993508 30916 solver.cpp:398]     Test net output #1: loss = 0.35699 (* 1 = 0.35699 loss)
I0428 20:06:39.993515 30916 solver.cpp:316] Optimization Done.
I0428 20:06:39.993517 30916 caffe.cpp:259] Optimization Done.
