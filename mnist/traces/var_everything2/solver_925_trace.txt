I0428 20:02:17.727615 29913 caffe.cpp:218] Using GPUs 0
I0428 20:02:17.768395 29913 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:18.291888 29913 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test925.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:18.292028 29913 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test925.prototxt
I0428 20:02:18.292433 29913 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:18.292451 29913 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:18.292549 29913 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:18.292623 29913 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:18.292722 29913 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:18.292744 29913 net.cpp:86] Creating Layer mnist
I0428 20:02:18.292752 29913 net.cpp:382] mnist -> data
I0428 20:02:18.292774 29913 net.cpp:382] mnist -> label
I0428 20:02:18.293889 29913 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:18.296361 29913 net.cpp:124] Setting up mnist
I0428 20:02:18.296380 29913 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:18.296386 29913 net.cpp:131] Top shape: 64 (64)
I0428 20:02:18.296389 29913 net.cpp:139] Memory required for data: 200960
I0428 20:02:18.296396 29913 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:18.296412 29913 net.cpp:86] Creating Layer conv0
I0428 20:02:18.296432 29913 net.cpp:408] conv0 <- data
I0428 20:02:18.296444 29913 net.cpp:382] conv0 -> conv0
I0428 20:02:18.589435 29913 net.cpp:124] Setting up conv0
I0428 20:02:18.589467 29913 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:18.589473 29913 net.cpp:139] Memory required for data: 1675520
I0428 20:02:18.589490 29913 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:18.589505 29913 net.cpp:86] Creating Layer pool0
I0428 20:02:18.589509 29913 net.cpp:408] pool0 <- conv0
I0428 20:02:18.589516 29913 net.cpp:382] pool0 -> pool0
I0428 20:02:18.589573 29913 net.cpp:124] Setting up pool0
I0428 20:02:18.589581 29913 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:18.589583 29913 net.cpp:139] Memory required for data: 2044160
I0428 20:02:18.589587 29913 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:18.589601 29913 net.cpp:86] Creating Layer conv1
I0428 20:02:18.589604 29913 net.cpp:408] conv1 <- pool0
I0428 20:02:18.589610 29913 net.cpp:382] conv1 -> conv1
I0428 20:02:18.592798 29913 net.cpp:124] Setting up conv1
I0428 20:02:18.592823 29913 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:18.592828 29913 net.cpp:139] Memory required for data: 2863360
I0428 20:02:18.592839 29913 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:18.592849 29913 net.cpp:86] Creating Layer pool1
I0428 20:02:18.592852 29913 net.cpp:408] pool1 <- conv1
I0428 20:02:18.592859 29913 net.cpp:382] pool1 -> pool1
I0428 20:02:18.592905 29913 net.cpp:124] Setting up pool1
I0428 20:02:18.592911 29913 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:18.592916 29913 net.cpp:139] Memory required for data: 3068160
I0428 20:02:18.592918 29913 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:18.592927 29913 net.cpp:86] Creating Layer ip1
I0428 20:02:18.592931 29913 net.cpp:408] ip1 <- pool1
I0428 20:02:18.592936 29913 net.cpp:382] ip1 -> ip1
I0428 20:02:18.593183 29913 net.cpp:124] Setting up ip1
I0428 20:02:18.593194 29913 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:18.593197 29913 net.cpp:139] Memory required for data: 3074560
I0428 20:02:18.593205 29913 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:18.593212 29913 net.cpp:86] Creating Layer relu1
I0428 20:02:18.593216 29913 net.cpp:408] relu1 <- ip1
I0428 20:02:18.593221 29913 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:18.593421 29913 net.cpp:124] Setting up relu1
I0428 20:02:18.593432 29913 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:18.593436 29913 net.cpp:139] Memory required for data: 3080960
I0428 20:02:18.593441 29913 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:18.593448 29913 net.cpp:86] Creating Layer ip2
I0428 20:02:18.593452 29913 net.cpp:408] ip2 <- ip1
I0428 20:02:18.593458 29913 net.cpp:382] ip2 -> ip2
I0428 20:02:18.594569 29913 net.cpp:124] Setting up ip2
I0428 20:02:18.594584 29913 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:18.594589 29913 net.cpp:139] Memory required for data: 3093760
I0428 20:02:18.594596 29913 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:18.594605 29913 net.cpp:86] Creating Layer relu2
I0428 20:02:18.594609 29913 net.cpp:408] relu2 <- ip2
I0428 20:02:18.594614 29913 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:18.595468 29913 net.cpp:124] Setting up relu2
I0428 20:02:18.595482 29913 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:18.595486 29913 net.cpp:139] Memory required for data: 3106560
I0428 20:02:18.595491 29913 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:18.595499 29913 net.cpp:86] Creating Layer ip3
I0428 20:02:18.595504 29913 net.cpp:408] ip3 <- ip2
I0428 20:02:18.595510 29913 net.cpp:382] ip3 -> ip3
I0428 20:02:18.595634 29913 net.cpp:124] Setting up ip3
I0428 20:02:18.595643 29913 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:18.595648 29913 net.cpp:139] Memory required for data: 3109120
I0428 20:02:18.595657 29913 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:18.595664 29913 net.cpp:86] Creating Layer relu3
I0428 20:02:18.595667 29913 net.cpp:408] relu3 <- ip3
I0428 20:02:18.595672 29913 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:18.595875 29913 net.cpp:124] Setting up relu3
I0428 20:02:18.595886 29913 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:18.595890 29913 net.cpp:139] Memory required for data: 3111680
I0428 20:02:18.595894 29913 layer_factory.hpp:77] Creating layer loss
I0428 20:02:18.595901 29913 net.cpp:86] Creating Layer loss
I0428 20:02:18.595906 29913 net.cpp:408] loss <- ip3
I0428 20:02:18.595911 29913 net.cpp:408] loss <- label
I0428 20:02:18.595916 29913 net.cpp:382] loss -> loss
I0428 20:02:18.595937 29913 layer_factory.hpp:77] Creating layer loss
I0428 20:02:18.596209 29913 net.cpp:124] Setting up loss
I0428 20:02:18.596220 29913 net.cpp:131] Top shape: (1)
I0428 20:02:18.596225 29913 net.cpp:134]     with loss weight 1
I0428 20:02:18.596240 29913 net.cpp:139] Memory required for data: 3111684
I0428 20:02:18.596246 29913 net.cpp:200] loss needs backward computation.
I0428 20:02:18.596249 29913 net.cpp:200] relu3 needs backward computation.
I0428 20:02:18.596253 29913 net.cpp:200] ip3 needs backward computation.
I0428 20:02:18.596256 29913 net.cpp:200] relu2 needs backward computation.
I0428 20:02:18.596261 29913 net.cpp:200] ip2 needs backward computation.
I0428 20:02:18.596263 29913 net.cpp:200] relu1 needs backward computation.
I0428 20:02:18.596266 29913 net.cpp:200] ip1 needs backward computation.
I0428 20:02:18.596271 29913 net.cpp:200] pool1 needs backward computation.
I0428 20:02:18.596273 29913 net.cpp:200] conv1 needs backward computation.
I0428 20:02:18.596277 29913 net.cpp:200] pool0 needs backward computation.
I0428 20:02:18.596282 29913 net.cpp:200] conv0 needs backward computation.
I0428 20:02:18.596285 29913 net.cpp:202] mnist does not need backward computation.
I0428 20:02:18.596288 29913 net.cpp:244] This network produces output loss
I0428 20:02:18.596299 29913 net.cpp:257] Network initialization done.
I0428 20:02:18.596684 29913 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test925.prototxt
I0428 20:02:18.596717 29913 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:18.596833 29913 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:18.596930 29913 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:18.596982 29913 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:18.596999 29913 net.cpp:86] Creating Layer mnist
I0428 20:02:18.597004 29913 net.cpp:382] mnist -> data
I0428 20:02:18.597014 29913 net.cpp:382] mnist -> label
I0428 20:02:18.597118 29913 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:18.599300 29913 net.cpp:124] Setting up mnist
I0428 20:02:18.599316 29913 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:18.599323 29913 net.cpp:131] Top shape: 100 (100)
I0428 20:02:18.599326 29913 net.cpp:139] Memory required for data: 314000
I0428 20:02:18.599331 29913 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:18.599344 29913 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:18.599349 29913 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:18.599354 29913 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:18.599362 29913 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:18.599488 29913 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:18.599498 29913 net.cpp:131] Top shape: 100 (100)
I0428 20:02:18.599503 29913 net.cpp:131] Top shape: 100 (100)
I0428 20:02:18.599506 29913 net.cpp:139] Memory required for data: 314800
I0428 20:02:18.599510 29913 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:18.599521 29913 net.cpp:86] Creating Layer conv0
I0428 20:02:18.599525 29913 net.cpp:408] conv0 <- data
I0428 20:02:18.599531 29913 net.cpp:382] conv0 -> conv0
I0428 20:02:18.601379 29913 net.cpp:124] Setting up conv0
I0428 20:02:18.601397 29913 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:18.601402 29913 net.cpp:139] Memory required for data: 2618800
I0428 20:02:18.601413 29913 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:18.601420 29913 net.cpp:86] Creating Layer pool0
I0428 20:02:18.601424 29913 net.cpp:408] pool0 <- conv0
I0428 20:02:18.601430 29913 net.cpp:382] pool0 -> pool0
I0428 20:02:18.601475 29913 net.cpp:124] Setting up pool0
I0428 20:02:18.601485 29913 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:18.601488 29913 net.cpp:139] Memory required for data: 3194800
I0428 20:02:18.601491 29913 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:18.601501 29913 net.cpp:86] Creating Layer conv1
I0428 20:02:18.601505 29913 net.cpp:408] conv1 <- pool0
I0428 20:02:18.601511 29913 net.cpp:382] conv1 -> conv1
I0428 20:02:18.603318 29913 net.cpp:124] Setting up conv1
I0428 20:02:18.603334 29913 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:18.603340 29913 net.cpp:139] Memory required for data: 4474800
I0428 20:02:18.603350 29913 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:18.603358 29913 net.cpp:86] Creating Layer pool1
I0428 20:02:18.603363 29913 net.cpp:408] pool1 <- conv1
I0428 20:02:18.603376 29913 net.cpp:382] pool1 -> pool1
I0428 20:02:18.603420 29913 net.cpp:124] Setting up pool1
I0428 20:02:18.603432 29913 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:18.603442 29913 net.cpp:139] Memory required for data: 4794800
I0428 20:02:18.603446 29913 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:18.603461 29913 net.cpp:86] Creating Layer ip1
I0428 20:02:18.603464 29913 net.cpp:408] ip1 <- pool1
I0428 20:02:18.603471 29913 net.cpp:382] ip1 -> ip1
I0428 20:02:18.603725 29913 net.cpp:124] Setting up ip1
I0428 20:02:18.603734 29913 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:18.603750 29913 net.cpp:139] Memory required for data: 4804800
I0428 20:02:18.603760 29913 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:18.603765 29913 net.cpp:86] Creating Layer relu1
I0428 20:02:18.603770 29913 net.cpp:408] relu1 <- ip1
I0428 20:02:18.603776 29913 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:18.603970 29913 net.cpp:124] Setting up relu1
I0428 20:02:18.603981 29913 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:18.603986 29913 net.cpp:139] Memory required for data: 4814800
I0428 20:02:18.603991 29913 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:18.603998 29913 net.cpp:86] Creating Layer ip2
I0428 20:02:18.604002 29913 net.cpp:408] ip2 <- ip1
I0428 20:02:18.604008 29913 net.cpp:382] ip2 -> ip2
I0428 20:02:18.604146 29913 net.cpp:124] Setting up ip2
I0428 20:02:18.604154 29913 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:18.604158 29913 net.cpp:139] Memory required for data: 4834800
I0428 20:02:18.604166 29913 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:18.604171 29913 net.cpp:86] Creating Layer relu2
I0428 20:02:18.604174 29913 net.cpp:408] relu2 <- ip2
I0428 20:02:18.604179 29913 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:18.604367 29913 net.cpp:124] Setting up relu2
I0428 20:02:18.604377 29913 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:18.604382 29913 net.cpp:139] Memory required for data: 4854800
I0428 20:02:18.604385 29913 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:18.604393 29913 net.cpp:86] Creating Layer ip3
I0428 20:02:18.604396 29913 net.cpp:408] ip3 <- ip2
I0428 20:02:18.604409 29913 net.cpp:382] ip3 -> ip3
I0428 20:02:18.604542 29913 net.cpp:124] Setting up ip3
I0428 20:02:18.604549 29913 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:18.604553 29913 net.cpp:139] Memory required for data: 4858800
I0428 20:02:18.604563 29913 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:18.604568 29913 net.cpp:86] Creating Layer relu3
I0428 20:02:18.604573 29913 net.cpp:408] relu3 <- ip3
I0428 20:02:18.604578 29913 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:18.605533 29913 net.cpp:124] Setting up relu3
I0428 20:02:18.605548 29913 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:18.605553 29913 net.cpp:139] Memory required for data: 4862800
I0428 20:02:18.605557 29913 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:18.605577 29913 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:18.605581 29913 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:18.605588 29913 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:18.605597 29913 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:18.605641 29913 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:18.605648 29913 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:18.605653 29913 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:18.605657 29913 net.cpp:139] Memory required for data: 4870800
I0428 20:02:18.605666 29913 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:18.605672 29913 net.cpp:86] Creating Layer accuracy
I0428 20:02:18.605682 29913 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:18.605687 29913 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:18.605693 29913 net.cpp:382] accuracy -> accuracy
I0428 20:02:18.605701 29913 net.cpp:124] Setting up accuracy
I0428 20:02:18.605707 29913 net.cpp:131] Top shape: (1)
I0428 20:02:18.605720 29913 net.cpp:139] Memory required for data: 4870804
I0428 20:02:18.605725 29913 layer_factory.hpp:77] Creating layer loss
I0428 20:02:18.605729 29913 net.cpp:86] Creating Layer loss
I0428 20:02:18.605733 29913 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:18.605738 29913 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:18.605743 29913 net.cpp:382] loss -> loss
I0428 20:02:18.605751 29913 layer_factory.hpp:77] Creating layer loss
I0428 20:02:18.606025 29913 net.cpp:124] Setting up loss
I0428 20:02:18.606036 29913 net.cpp:131] Top shape: (1)
I0428 20:02:18.606041 29913 net.cpp:134]     with loss weight 1
I0428 20:02:18.606060 29913 net.cpp:139] Memory required for data: 4870808
I0428 20:02:18.606065 29913 net.cpp:200] loss needs backward computation.
I0428 20:02:18.606070 29913 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:18.606075 29913 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:18.606078 29913 net.cpp:200] relu3 needs backward computation.
I0428 20:02:18.606081 29913 net.cpp:200] ip3 needs backward computation.
I0428 20:02:18.606086 29913 net.cpp:200] relu2 needs backward computation.
I0428 20:02:18.606088 29913 net.cpp:200] ip2 needs backward computation.
I0428 20:02:18.606091 29913 net.cpp:200] relu1 needs backward computation.
I0428 20:02:18.606096 29913 net.cpp:200] ip1 needs backward computation.
I0428 20:02:18.606098 29913 net.cpp:200] pool1 needs backward computation.
I0428 20:02:18.606102 29913 net.cpp:200] conv1 needs backward computation.
I0428 20:02:18.606106 29913 net.cpp:200] pool0 needs backward computation.
I0428 20:02:18.606112 29913 net.cpp:200] conv0 needs backward computation.
I0428 20:02:18.606115 29913 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:18.606127 29913 net.cpp:202] mnist does not need backward computation.
I0428 20:02:18.606130 29913 net.cpp:244] This network produces output accuracy
I0428 20:02:18.606134 29913 net.cpp:244] This network produces output loss
I0428 20:02:18.606148 29913 net.cpp:257] Network initialization done.
I0428 20:02:18.606197 29913 solver.cpp:56] Solver scaffolding done.
I0428 20:02:18.606595 29913 caffe.cpp:248] Starting Optimization
I0428 20:02:18.606609 29913 solver.cpp:273] Solving LeNet
I0428 20:02:18.606619 29913 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:18.607529 29913 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:18.611784 29913 blocking_queue.cpp:49] Waiting for data
I0428 20:02:18.714191 29921 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:18.714711 29913 solver.cpp:398]     Test net output #0: accuracy = 0.1169
I0428 20:02:18.714731 29913 solver.cpp:398]     Test net output #1: loss = 2.29694 (* 1 = 2.29694 loss)
I0428 20:02:18.718108 29913 solver.cpp:219] Iteration 0 (2.0424 iter/s, 0.111461s/100 iters), loss = 2.31073
I0428 20:02:18.718132 29913 solver.cpp:238]     Train net output #0: loss = 2.31073 (* 1 = 2.31073 loss)
I0428 20:02:18.718144 29913 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:18.832581 29913 solver.cpp:219] Iteration 100 (873.889 iter/s, 0.114431s/100 iters), loss = 0.5682
I0428 20:02:18.832636 29913 solver.cpp:238]     Train net output #0: loss = 0.5682 (* 1 = 0.5682 loss)
I0428 20:02:18.832643 29913 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:18.947127 29913 solver.cpp:219] Iteration 200 (873.406 iter/s, 0.114494s/100 iters), loss = 0.217237
I0428 20:02:18.947157 29913 solver.cpp:238]     Train net output #0: loss = 0.217237 (* 1 = 0.217237 loss)
I0428 20:02:18.947165 29913 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:19.061960 29913 solver.cpp:219] Iteration 300 (871.139 iter/s, 0.114792s/100 iters), loss = 0.255449
I0428 20:02:19.062003 29913 solver.cpp:238]     Train net output #0: loss = 0.255449 (* 1 = 0.255449 loss)
I0428 20:02:19.062011 29913 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:19.177435 29913 solver.cpp:219] Iteration 400 (866.392 iter/s, 0.115421s/100 iters), loss = 0.193932
I0428 20:02:19.177462 29913 solver.cpp:238]     Train net output #0: loss = 0.193932 (* 1 = 0.193932 loss)
I0428 20:02:19.177469 29913 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:19.290365 29913 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:19.368597 29921 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:19.369292 29913 solver.cpp:398]     Test net output #0: accuracy = 0.96
I0428 20:02:19.369331 29913 solver.cpp:398]     Test net output #1: loss = 0.127119 (* 1 = 0.127119 loss)
I0428 20:02:19.370654 29913 solver.cpp:219] Iteration 500 (517.669 iter/s, 0.193174s/100 iters), loss = 0.114877
I0428 20:02:19.370708 29913 solver.cpp:238]     Train net output #0: loss = 0.114877 (* 1 = 0.114877 loss)
I0428 20:02:19.370745 29913 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:19.488298 29913 solver.cpp:219] Iteration 600 (850.453 iter/s, 0.117584s/100 iters), loss = 0.0960491
I0428 20:02:19.488334 29913 solver.cpp:238]     Train net output #0: loss = 0.0960492 (* 1 = 0.0960492 loss)
I0428 20:02:19.488343 29913 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:19.595191 29913 solver.cpp:219] Iteration 700 (935.916 iter/s, 0.106847s/100 iters), loss = 0.134712
I0428 20:02:19.595232 29913 solver.cpp:238]     Train net output #0: loss = 0.134712 (* 1 = 0.134712 loss)
I0428 20:02:19.595238 29913 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:19.706562 29913 solver.cpp:219] Iteration 800 (898.187 iter/s, 0.111335s/100 iters), loss = 0.342787
I0428 20:02:19.706588 29913 solver.cpp:238]     Train net output #0: loss = 0.342787 (* 1 = 0.342787 loss)
I0428 20:02:19.706595 29913 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:19.828142 29913 solver.cpp:219] Iteration 900 (822.77 iter/s, 0.121541s/100 iters), loss = 0.195749
I0428 20:02:19.828181 29913 solver.cpp:238]     Train net output #0: loss = 0.195749 (* 1 = 0.195749 loss)
I0428 20:02:19.828192 29913 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:19.868365 29920 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:19.943601 29913 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:19.944964 29913 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:19.945691 29913 solver.cpp:311] Iteration 1000, loss = 0.123211
I0428 20:02:19.945708 29913 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:20.021255 29921 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:20.021800 29913 solver.cpp:398]     Test net output #0: accuracy = 0.9748
I0428 20:02:20.021836 29913 solver.cpp:398]     Test net output #1: loss = 0.0783404 (* 1 = 0.0783404 loss)
I0428 20:02:20.021841 29913 solver.cpp:316] Optimization Done.
I0428 20:02:20.021842 29913 caffe.cpp:259] Optimization Done.
