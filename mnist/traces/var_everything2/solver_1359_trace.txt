I0428 20:20:15.317558  1514 caffe.cpp:218] Using GPUs 0
I0428 20:20:15.347885  1514 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:15.798245  1514 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1359.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:15.798866  1514 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1359.prototxt
I0428 20:20:15.799672  1514 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:15.799705  1514 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:15.799890  1514 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:15.800017  1514 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:15.800184  1514 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:15.800220  1514 net.cpp:86] Creating Layer mnist
I0428 20:20:15.800233  1514 net.cpp:382] mnist -> data
I0428 20:20:15.800266  1514 net.cpp:382] mnist -> label
I0428 20:20:15.802101  1514 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:15.806123  1514 net.cpp:124] Setting up mnist
I0428 20:20:15.806166  1514 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:15.806192  1514 net.cpp:131] Top shape: 64 (64)
I0428 20:20:15.806200  1514 net.cpp:139] Memory required for data: 200960
I0428 20:20:15.806215  1514 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:15.806246  1514 net.cpp:86] Creating Layer conv0
I0428 20:20:15.806279  1514 net.cpp:408] conv0 <- data
I0428 20:20:15.806301  1514 net.cpp:382] conv0 -> conv0
I0428 20:20:16.121249  1514 net.cpp:124] Setting up conv0
I0428 20:20:16.121279  1514 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:16.121285  1514 net.cpp:139] Memory required for data: 7573760
I0428 20:20:16.121304  1514 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:16.121320  1514 net.cpp:86] Creating Layer pool0
I0428 20:20:16.121325  1514 net.cpp:408] pool0 <- conv0
I0428 20:20:16.121332  1514 net.cpp:382] pool0 -> pool0
I0428 20:20:16.121392  1514 net.cpp:124] Setting up pool0
I0428 20:20:16.121402  1514 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:16.121408  1514 net.cpp:139] Memory required for data: 9416960
I0428 20:20:16.121412  1514 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:16.121428  1514 net.cpp:86] Creating Layer conv1
I0428 20:20:16.121433  1514 net.cpp:408] conv1 <- pool0
I0428 20:20:16.121438  1514 net.cpp:382] conv1 -> conv1
I0428 20:20:16.123813  1514 net.cpp:124] Setting up conv1
I0428 20:20:16.123831  1514 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:16.123842  1514 net.cpp:139] Memory required for data: 9826560
I0428 20:20:16.123852  1514 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:16.123865  1514 net.cpp:86] Creating Layer pool1
I0428 20:20:16.123872  1514 net.cpp:408] pool1 <- conv1
I0428 20:20:16.123878  1514 net.cpp:382] pool1 -> pool1
I0428 20:20:16.123920  1514 net.cpp:124] Setting up pool1
I0428 20:20:16.123929  1514 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:16.123932  1514 net.cpp:139] Memory required for data: 9928960
I0428 20:20:16.123935  1514 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:16.123944  1514 net.cpp:86] Creating Layer ip1
I0428 20:20:16.123950  1514 net.cpp:408] ip1 <- pool1
I0428 20:20:16.123955  1514 net.cpp:382] ip1 -> ip1
I0428 20:20:16.124207  1514 net.cpp:124] Setting up ip1
I0428 20:20:16.124215  1514 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:16.124219  1514 net.cpp:139] Memory required for data: 9941760
I0428 20:20:16.124228  1514 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:16.124235  1514 net.cpp:86] Creating Layer relu1
I0428 20:20:16.124240  1514 net.cpp:408] relu1 <- ip1
I0428 20:20:16.124245  1514 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:16.124438  1514 net.cpp:124] Setting up relu1
I0428 20:20:16.124447  1514 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:16.124451  1514 net.cpp:139] Memory required for data: 9954560
I0428 20:20:16.124455  1514 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:16.124464  1514 net.cpp:86] Creating Layer ip2
I0428 20:20:16.124469  1514 net.cpp:408] ip2 <- ip1
I0428 20:20:16.124474  1514 net.cpp:382] ip2 -> ip2
I0428 20:20:16.124596  1514 net.cpp:124] Setting up ip2
I0428 20:20:16.124604  1514 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:16.124608  1514 net.cpp:139] Memory required for data: 9960960
I0428 20:20:16.124615  1514 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:16.124622  1514 net.cpp:86] Creating Layer relu2
I0428 20:20:16.124626  1514 net.cpp:408] relu2 <- ip2
I0428 20:20:16.124631  1514 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:16.125483  1514 net.cpp:124] Setting up relu2
I0428 20:20:16.125499  1514 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:16.125504  1514 net.cpp:139] Memory required for data: 9967360
I0428 20:20:16.125509  1514 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:16.125517  1514 net.cpp:86] Creating Layer ip3
I0428 20:20:16.125522  1514 net.cpp:408] ip3 <- ip2
I0428 20:20:16.125530  1514 net.cpp:382] ip3 -> ip3
I0428 20:20:16.125646  1514 net.cpp:124] Setting up ip3
I0428 20:20:16.125655  1514 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:16.125659  1514 net.cpp:139] Memory required for data: 9969920
I0428 20:20:16.125669  1514 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:16.125675  1514 net.cpp:86] Creating Layer relu3
I0428 20:20:16.125679  1514 net.cpp:408] relu3 <- ip3
I0428 20:20:16.125684  1514 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:16.125881  1514 net.cpp:124] Setting up relu3
I0428 20:20:16.125890  1514 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:16.125896  1514 net.cpp:139] Memory required for data: 9972480
I0428 20:20:16.125900  1514 layer_factory.hpp:77] Creating layer loss
I0428 20:20:16.125912  1514 net.cpp:86] Creating Layer loss
I0428 20:20:16.125917  1514 net.cpp:408] loss <- ip3
I0428 20:20:16.125922  1514 net.cpp:408] loss <- label
I0428 20:20:16.125928  1514 net.cpp:382] loss -> loss
I0428 20:20:16.125944  1514 layer_factory.hpp:77] Creating layer loss
I0428 20:20:16.126216  1514 net.cpp:124] Setting up loss
I0428 20:20:16.126226  1514 net.cpp:131] Top shape: (1)
I0428 20:20:16.126232  1514 net.cpp:134]     with loss weight 1
I0428 20:20:16.126250  1514 net.cpp:139] Memory required for data: 9972484
I0428 20:20:16.126253  1514 net.cpp:200] loss needs backward computation.
I0428 20:20:16.126257  1514 net.cpp:200] relu3 needs backward computation.
I0428 20:20:16.126261  1514 net.cpp:200] ip3 needs backward computation.
I0428 20:20:16.126265  1514 net.cpp:200] relu2 needs backward computation.
I0428 20:20:16.126268  1514 net.cpp:200] ip2 needs backward computation.
I0428 20:20:16.126271  1514 net.cpp:200] relu1 needs backward computation.
I0428 20:20:16.126284  1514 net.cpp:200] ip1 needs backward computation.
I0428 20:20:16.126288  1514 net.cpp:200] pool1 needs backward computation.
I0428 20:20:16.126292  1514 net.cpp:200] conv1 needs backward computation.
I0428 20:20:16.126296  1514 net.cpp:200] pool0 needs backward computation.
I0428 20:20:16.126301  1514 net.cpp:200] conv0 needs backward computation.
I0428 20:20:16.126304  1514 net.cpp:202] mnist does not need backward computation.
I0428 20:20:16.126307  1514 net.cpp:244] This network produces output loss
I0428 20:20:16.126318  1514 net.cpp:257] Network initialization done.
I0428 20:20:16.126723  1514 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1359.prototxt
I0428 20:20:16.126754  1514 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:16.126869  1514 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:16.126965  1514 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:16.127014  1514 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:16.127034  1514 net.cpp:86] Creating Layer mnist
I0428 20:20:16.127039  1514 net.cpp:382] mnist -> data
I0428 20:20:16.127048  1514 net.cpp:382] mnist -> label
I0428 20:20:16.127149  1514 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:16.129309  1514 net.cpp:124] Setting up mnist
I0428 20:20:16.129325  1514 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:16.129333  1514 net.cpp:131] Top shape: 100 (100)
I0428 20:20:16.129338  1514 net.cpp:139] Memory required for data: 314000
I0428 20:20:16.129343  1514 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:16.129350  1514 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:16.129355  1514 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:16.129361  1514 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:16.129369  1514 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:16.129420  1514 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:16.129428  1514 net.cpp:131] Top shape: 100 (100)
I0428 20:20:16.129433  1514 net.cpp:131] Top shape: 100 (100)
I0428 20:20:16.129437  1514 net.cpp:139] Memory required for data: 314800
I0428 20:20:16.129441  1514 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:16.129451  1514 net.cpp:86] Creating Layer conv0
I0428 20:20:16.129456  1514 net.cpp:408] conv0 <- data
I0428 20:20:16.129463  1514 net.cpp:382] conv0 -> conv0
I0428 20:20:16.131181  1514 net.cpp:124] Setting up conv0
I0428 20:20:16.131198  1514 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:16.131204  1514 net.cpp:139] Memory required for data: 11834800
I0428 20:20:16.131216  1514 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:16.131224  1514 net.cpp:86] Creating Layer pool0
I0428 20:20:16.131229  1514 net.cpp:408] pool0 <- conv0
I0428 20:20:16.131235  1514 net.cpp:382] pool0 -> pool0
I0428 20:20:16.131276  1514 net.cpp:124] Setting up pool0
I0428 20:20:16.131284  1514 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:16.131288  1514 net.cpp:139] Memory required for data: 14714800
I0428 20:20:16.131291  1514 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:16.131301  1514 net.cpp:86] Creating Layer conv1
I0428 20:20:16.131309  1514 net.cpp:408] conv1 <- pool0
I0428 20:20:16.131314  1514 net.cpp:382] conv1 -> conv1
I0428 20:20:16.133296  1514 net.cpp:124] Setting up conv1
I0428 20:20:16.133323  1514 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:16.133329  1514 net.cpp:139] Memory required for data: 15354800
I0428 20:20:16.133352  1514 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:16.133360  1514 net.cpp:86] Creating Layer pool1
I0428 20:20:16.133365  1514 net.cpp:408] pool1 <- conv1
I0428 20:20:16.133373  1514 net.cpp:382] pool1 -> pool1
I0428 20:20:16.133417  1514 net.cpp:124] Setting up pool1
I0428 20:20:16.133425  1514 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:16.133430  1514 net.cpp:139] Memory required for data: 15514800
I0428 20:20:16.133433  1514 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:16.133440  1514 net.cpp:86] Creating Layer ip1
I0428 20:20:16.133446  1514 net.cpp:408] ip1 <- pool1
I0428 20:20:16.133452  1514 net.cpp:382] ip1 -> ip1
I0428 20:20:16.133704  1514 net.cpp:124] Setting up ip1
I0428 20:20:16.133714  1514 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:16.133733  1514 net.cpp:139] Memory required for data: 15534800
I0428 20:20:16.133741  1514 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:16.133749  1514 net.cpp:86] Creating Layer relu1
I0428 20:20:16.133752  1514 net.cpp:408] relu1 <- ip1
I0428 20:20:16.133759  1514 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:16.133946  1514 net.cpp:124] Setting up relu1
I0428 20:20:16.133955  1514 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:16.133961  1514 net.cpp:139] Memory required for data: 15554800
I0428 20:20:16.133965  1514 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:16.133975  1514 net.cpp:86] Creating Layer ip2
I0428 20:20:16.133980  1514 net.cpp:408] ip2 <- ip1
I0428 20:20:16.133985  1514 net.cpp:382] ip2 -> ip2
I0428 20:20:16.134150  1514 net.cpp:124] Setting up ip2
I0428 20:20:16.134158  1514 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:16.134162  1514 net.cpp:139] Memory required for data: 15564800
I0428 20:20:16.134168  1514 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:16.134176  1514 net.cpp:86] Creating Layer relu2
I0428 20:20:16.134191  1514 net.cpp:408] relu2 <- ip2
I0428 20:20:16.134196  1514 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:16.134414  1514 net.cpp:124] Setting up relu2
I0428 20:20:16.134425  1514 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:16.134428  1514 net.cpp:139] Memory required for data: 15574800
I0428 20:20:16.134433  1514 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:16.134439  1514 net.cpp:86] Creating Layer ip3
I0428 20:20:16.134443  1514 net.cpp:408] ip3 <- ip2
I0428 20:20:16.134449  1514 net.cpp:382] ip3 -> ip3
I0428 20:20:16.134563  1514 net.cpp:124] Setting up ip3
I0428 20:20:16.134572  1514 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:16.134577  1514 net.cpp:139] Memory required for data: 15578800
I0428 20:20:16.134585  1514 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:16.134603  1514 net.cpp:86] Creating Layer relu3
I0428 20:20:16.134608  1514 net.cpp:408] relu3 <- ip3
I0428 20:20:16.134613  1514 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:16.135529  1514 net.cpp:124] Setting up relu3
I0428 20:20:16.135542  1514 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:16.135548  1514 net.cpp:139] Memory required for data: 15582800
I0428 20:20:16.135552  1514 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:16.135558  1514 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:16.135563  1514 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:16.135581  1514 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:16.135588  1514 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:16.135632  1514 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:16.135639  1514 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:16.135644  1514 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:16.135648  1514 net.cpp:139] Memory required for data: 15590800
I0428 20:20:16.135653  1514 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:16.135658  1514 net.cpp:86] Creating Layer accuracy
I0428 20:20:16.135663  1514 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:16.135666  1514 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:16.135674  1514 net.cpp:382] accuracy -> accuracy
I0428 20:20:16.135682  1514 net.cpp:124] Setting up accuracy
I0428 20:20:16.135689  1514 net.cpp:131] Top shape: (1)
I0428 20:20:16.135691  1514 net.cpp:139] Memory required for data: 15590804
I0428 20:20:16.135695  1514 layer_factory.hpp:77] Creating layer loss
I0428 20:20:16.135700  1514 net.cpp:86] Creating Layer loss
I0428 20:20:16.135704  1514 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:16.135710  1514 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:16.135715  1514 net.cpp:382] loss -> loss
I0428 20:20:16.135721  1514 layer_factory.hpp:77] Creating layer loss
I0428 20:20:16.135993  1514 net.cpp:124] Setting up loss
I0428 20:20:16.136003  1514 net.cpp:131] Top shape: (1)
I0428 20:20:16.136008  1514 net.cpp:134]     with loss weight 1
I0428 20:20:16.136026  1514 net.cpp:139] Memory required for data: 15590808
I0428 20:20:16.136032  1514 net.cpp:200] loss needs backward computation.
I0428 20:20:16.136036  1514 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:16.136041  1514 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:16.136045  1514 net.cpp:200] relu3 needs backward computation.
I0428 20:20:16.136049  1514 net.cpp:200] ip3 needs backward computation.
I0428 20:20:16.136054  1514 net.cpp:200] relu2 needs backward computation.
I0428 20:20:16.136056  1514 net.cpp:200] ip2 needs backward computation.
I0428 20:20:16.136067  1514 net.cpp:200] relu1 needs backward computation.
I0428 20:20:16.136071  1514 net.cpp:200] ip1 needs backward computation.
I0428 20:20:16.136075  1514 net.cpp:200] pool1 needs backward computation.
I0428 20:20:16.136080  1514 net.cpp:200] conv1 needs backward computation.
I0428 20:20:16.136082  1514 net.cpp:200] pool0 needs backward computation.
I0428 20:20:16.136086  1514 net.cpp:200] conv0 needs backward computation.
I0428 20:20:16.136091  1514 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:16.136096  1514 net.cpp:202] mnist does not need backward computation.
I0428 20:20:16.136101  1514 net.cpp:244] This network produces output accuracy
I0428 20:20:16.136104  1514 net.cpp:244] This network produces output loss
I0428 20:20:16.136117  1514 net.cpp:257] Network initialization done.
I0428 20:20:16.136168  1514 solver.cpp:56] Solver scaffolding done.
I0428 20:20:16.136612  1514 caffe.cpp:248] Starting Optimization
I0428 20:20:16.136620  1514 solver.cpp:273] Solving LeNet
I0428 20:20:16.136623  1514 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:16.136845  1514 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:16.145128  1514 blocking_queue.cpp:49] Waiting for data
I0428 20:20:16.214794  1521 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:16.215690  1514 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 20:20:16.215713  1514 solver.cpp:398]     Test net output #1: loss = 2.30232 (* 1 = 2.30232 loss)
I0428 20:20:16.220407  1514 solver.cpp:219] Iteration 0 (0 iter/s, 0.0837407s/100 iters), loss = 2.30472
I0428 20:20:16.220435  1514 solver.cpp:238]     Train net output #0: loss = 2.30472 (* 1 = 2.30472 loss)
I0428 20:20:16.220448  1514 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:16.370398  1514 solver.cpp:219] Iteration 100 (666.901 iter/s, 0.149947s/100 iters), loss = 0.852685
I0428 20:20:16.370441  1514 solver.cpp:238]     Train net output #0: loss = 0.852685 (* 1 = 0.852685 loss)
I0428 20:20:16.370452  1514 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:16.527586  1514 solver.cpp:219] Iteration 200 (636.409 iter/s, 0.157132s/100 iters), loss = 0.656104
I0428 20:20:16.527633  1514 solver.cpp:238]     Train net output #0: loss = 0.656104 (* 1 = 0.656104 loss)
I0428 20:20:16.527645  1514 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:16.683356  1514 solver.cpp:219] Iteration 300 (642.226 iter/s, 0.155708s/100 iters), loss = 0.634599
I0428 20:20:16.683403  1514 solver.cpp:238]     Train net output #0: loss = 0.634599 (* 1 = 0.634599 loss)
I0428 20:20:16.683414  1514 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:16.837062  1514 solver.cpp:219] Iteration 400 (650.838 iter/s, 0.153648s/100 iters), loss = 0.427006
I0428 20:20:16.837103  1514 solver.cpp:238]     Train net output #0: loss = 0.427006 (* 1 = 0.427006 loss)
I0428 20:20:16.837115  1514 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:16.984787  1514 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:17.060788  1521 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:17.063247  1514 solver.cpp:398]     Test net output #0: accuracy = 0.8726
I0428 20:20:17.063274  1514 solver.cpp:398]     Test net output #1: loss = 0.34159 (* 1 = 0.34159 loss)
I0428 20:20:17.064599  1514 solver.cpp:219] Iteration 500 (439.598 iter/s, 0.227481s/100 iters), loss = 0.299419
I0428 20:20:17.064648  1514 solver.cpp:238]     Train net output #0: loss = 0.299419 (* 1 = 0.299419 loss)
I0428 20:20:17.064657  1514 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:17.201969  1514 solver.cpp:219] Iteration 600 (728.295 iter/s, 0.137307s/100 iters), loss = 0.239431
I0428 20:20:17.202014  1514 solver.cpp:238]     Train net output #0: loss = 0.239431 (* 1 = 0.239431 loss)
I0428 20:20:17.202025  1514 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:17.347326  1514 solver.cpp:219] Iteration 700 (688.224 iter/s, 0.145301s/100 iters), loss = 0.233972
I0428 20:20:17.347365  1514 solver.cpp:238]     Train net output #0: loss = 0.233972 (* 1 = 0.233972 loss)
I0428 20:20:17.347374  1514 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:17.485026  1514 solver.cpp:219] Iteration 800 (726.469 iter/s, 0.137652s/100 iters), loss = 0.497832
I0428 20:20:17.485069  1514 solver.cpp:238]     Train net output #0: loss = 0.497832 (* 1 = 0.497832 loss)
I0428 20:20:17.485076  1514 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:17.625028  1514 solver.cpp:219] Iteration 900 (714.488 iter/s, 0.13996s/100 iters), loss = 0.387047
I0428 20:20:17.625068  1514 solver.cpp:238]     Train net output #0: loss = 0.387047 (* 1 = 0.387047 loss)
I0428 20:20:17.625078  1514 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:17.670918  1520 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:17.759315  1514 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:17.760803  1514 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:17.761970  1514 solver.cpp:311] Iteration 1000, loss = 0.244371
I0428 20:20:17.761986  1514 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:17.832271  1521 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:17.833200  1514 solver.cpp:398]     Test net output #0: accuracy = 0.8811
I0428 20:20:17.833237  1514 solver.cpp:398]     Test net output #1: loss = 0.305251 (* 1 = 0.305251 loss)
I0428 20:20:17.833242  1514 solver.cpp:316] Optimization Done.
I0428 20:20:17.833246  1514 caffe.cpp:259] Optimization Done.
