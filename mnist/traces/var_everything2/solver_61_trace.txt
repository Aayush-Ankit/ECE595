I0428 19:29:31.068415 22041 caffe.cpp:218] Using GPUs 0
I0428 19:29:31.104300 22041 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:31.554314 22041 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test61.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:31.554440 22041 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test61.prototxt
I0428 19:29:31.554752 22041 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:31.554780 22041 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:31.554847 22041 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:31.554903 22041 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:31.554981 22041 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:31.555002 22041 net.cpp:86] Creating Layer mnist
I0428 19:29:31.555009 22041 net.cpp:382] mnist -> data
I0428 19:29:31.555043 22041 net.cpp:382] mnist -> label
I0428 19:29:31.555938 22041 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:31.558118 22041 net.cpp:124] Setting up mnist
I0428 19:29:31.558148 22041 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:31.558153 22041 net.cpp:131] Top shape: 64 (64)
I0428 19:29:31.558156 22041 net.cpp:139] Memory required for data: 200960
I0428 19:29:31.558162 22041 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:31.558176 22041 net.cpp:86] Creating Layer conv0
I0428 19:29:31.558181 22041 net.cpp:408] conv0 <- data
I0428 19:29:31.558200 22041 net.cpp:382] conv0 -> conv0
I0428 19:29:31.790448 22041 net.cpp:124] Setting up conv0
I0428 19:29:31.790490 22041 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:31.790493 22041 net.cpp:139] Memory required for data: 495872
I0428 19:29:31.790508 22041 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:31.790534 22041 net.cpp:86] Creating Layer pool0
I0428 19:29:31.790555 22041 net.cpp:408] pool0 <- conv0
I0428 19:29:31.790561 22041 net.cpp:382] pool0 -> pool0
I0428 19:29:31.790619 22041 net.cpp:124] Setting up pool0
I0428 19:29:31.790627 22041 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:31.790629 22041 net.cpp:139] Memory required for data: 569600
I0428 19:29:31.790632 22041 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:31.790640 22041 net.cpp:86] Creating Layer ip1
I0428 19:29:31.790643 22041 net.cpp:408] ip1 <- pool0
I0428 19:29:31.790648 22041 net.cpp:382] ip1 -> ip1
I0428 19:29:31.791601 22041 net.cpp:124] Setting up ip1
I0428 19:29:31.791630 22041 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:31.791632 22041 net.cpp:139] Memory required for data: 576000
I0428 19:29:31.791641 22041 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:31.791647 22041 net.cpp:86] Creating Layer relu1
I0428 19:29:31.791651 22041 net.cpp:408] relu1 <- ip1
I0428 19:29:31.791656 22041 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:31.791832 22041 net.cpp:124] Setting up relu1
I0428 19:29:31.791841 22041 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:31.791844 22041 net.cpp:139] Memory required for data: 582400
I0428 19:29:31.791847 22041 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:31.791854 22041 net.cpp:86] Creating Layer ip2
I0428 19:29:31.791857 22041 net.cpp:408] ip2 <- ip1
I0428 19:29:31.791862 22041 net.cpp:382] ip2 -> ip2
I0428 19:29:31.791970 22041 net.cpp:124] Setting up ip2
I0428 19:29:31.791976 22041 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:31.791980 22041 net.cpp:139] Memory required for data: 584960
I0428 19:29:31.791986 22041 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:31.791991 22041 net.cpp:86] Creating Layer relu2
I0428 19:29:31.791995 22041 net.cpp:408] relu2 <- ip2
I0428 19:29:31.791998 22041 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:31.792805 22041 net.cpp:124] Setting up relu2
I0428 19:29:31.792824 22041 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:31.792843 22041 net.cpp:139] Memory required for data: 587520
I0428 19:29:31.792846 22041 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:31.792868 22041 net.cpp:86] Creating Layer ip3
I0428 19:29:31.792872 22041 net.cpp:408] ip3 <- ip2
I0428 19:29:31.792877 22041 net.cpp:382] ip3 -> ip3
I0428 19:29:31.792974 22041 net.cpp:124] Setting up ip3
I0428 19:29:31.792981 22041 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:31.792984 22041 net.cpp:139] Memory required for data: 590080
I0428 19:29:31.792990 22041 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:31.792996 22041 net.cpp:86] Creating Layer relu3
I0428 19:29:31.792999 22041 net.cpp:408] relu3 <- ip3
I0428 19:29:31.793004 22041 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:31.793150 22041 net.cpp:124] Setting up relu3
I0428 19:29:31.793159 22041 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:31.793162 22041 net.cpp:139] Memory required for data: 592640
I0428 19:29:31.793165 22041 layer_factory.hpp:77] Creating layer loss
I0428 19:29:31.793171 22041 net.cpp:86] Creating Layer loss
I0428 19:29:31.793190 22041 net.cpp:408] loss <- ip3
I0428 19:29:31.793193 22041 net.cpp:408] loss <- label
I0428 19:29:31.793198 22041 net.cpp:382] loss -> loss
I0428 19:29:31.793212 22041 layer_factory.hpp:77] Creating layer loss
I0428 19:29:31.793426 22041 net.cpp:124] Setting up loss
I0428 19:29:31.793434 22041 net.cpp:131] Top shape: (1)
I0428 19:29:31.793437 22041 net.cpp:134]     with loss weight 1
I0428 19:29:31.793452 22041 net.cpp:139] Memory required for data: 592644
I0428 19:29:31.793457 22041 net.cpp:200] loss needs backward computation.
I0428 19:29:31.793460 22041 net.cpp:200] relu3 needs backward computation.
I0428 19:29:31.793478 22041 net.cpp:200] ip3 needs backward computation.
I0428 19:29:31.793481 22041 net.cpp:200] relu2 needs backward computation.
I0428 19:29:31.793483 22041 net.cpp:200] ip2 needs backward computation.
I0428 19:29:31.793486 22041 net.cpp:200] relu1 needs backward computation.
I0428 19:29:31.793488 22041 net.cpp:200] ip1 needs backward computation.
I0428 19:29:31.793517 22041 net.cpp:200] pool0 needs backward computation.
I0428 19:29:31.793520 22041 net.cpp:200] conv0 needs backward computation.
I0428 19:29:31.793524 22041 net.cpp:202] mnist does not need backward computation.
I0428 19:29:31.793527 22041 net.cpp:244] This network produces output loss
I0428 19:29:31.793534 22041 net.cpp:257] Network initialization done.
I0428 19:29:31.793812 22041 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test61.prototxt
I0428 19:29:31.793838 22041 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:31.793932 22041 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:31.793990 22041 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:31.794031 22041 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:31.794044 22041 net.cpp:86] Creating Layer mnist
I0428 19:29:31.794047 22041 net.cpp:382] mnist -> data
I0428 19:29:31.794054 22041 net.cpp:382] mnist -> label
I0428 19:29:31.794131 22041 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:31.796399 22041 net.cpp:124] Setting up mnist
I0428 19:29:31.796428 22041 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:31.796444 22041 net.cpp:131] Top shape: 100 (100)
I0428 19:29:31.796449 22041 net.cpp:139] Memory required for data: 314000
I0428 19:29:31.796452 22041 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:31.796459 22041 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:31.796463 22041 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:31.796466 22041 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:31.796473 22041 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:31.796506 22041 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:31.796511 22041 net.cpp:131] Top shape: 100 (100)
I0428 19:29:31.796514 22041 net.cpp:131] Top shape: 100 (100)
I0428 19:29:31.796517 22041 net.cpp:139] Memory required for data: 314800
I0428 19:29:31.796528 22041 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:31.796537 22041 net.cpp:86] Creating Layer conv0
I0428 19:29:31.796540 22041 net.cpp:408] conv0 <- data
I0428 19:29:31.796545 22041 net.cpp:382] conv0 -> conv0
I0428 19:29:31.798146 22041 net.cpp:124] Setting up conv0
I0428 19:29:31.798159 22041 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:31.798163 22041 net.cpp:139] Memory required for data: 775600
I0428 19:29:31.798172 22041 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:31.798178 22041 net.cpp:86] Creating Layer pool0
I0428 19:29:31.798182 22041 net.cpp:408] pool0 <- conv0
I0428 19:29:31.798187 22041 net.cpp:382] pool0 -> pool0
I0428 19:29:31.798235 22041 net.cpp:124] Setting up pool0
I0428 19:29:31.798251 22041 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:31.798254 22041 net.cpp:139] Memory required for data: 890800
I0428 19:29:31.798256 22041 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:31.798262 22041 net.cpp:86] Creating Layer ip1
I0428 19:29:31.798265 22041 net.cpp:408] ip1 <- pool0
I0428 19:29:31.798269 22041 net.cpp:382] ip1 -> ip1
I0428 19:29:31.798388 22041 net.cpp:124] Setting up ip1
I0428 19:29:31.798394 22041 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:31.798398 22041 net.cpp:139] Memory required for data: 900800
I0428 19:29:31.798404 22041 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:31.798408 22041 net.cpp:86] Creating Layer relu1
I0428 19:29:31.798411 22041 net.cpp:408] relu1 <- ip1
I0428 19:29:31.798414 22041 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:31.798550 22041 net.cpp:124] Setting up relu1
I0428 19:29:31.798557 22041 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:31.798560 22041 net.cpp:139] Memory required for data: 910800
I0428 19:29:31.798563 22041 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:31.798568 22041 net.cpp:86] Creating Layer ip2
I0428 19:29:31.798570 22041 net.cpp:408] ip2 <- ip1
I0428 19:29:31.798575 22041 net.cpp:382] ip2 -> ip2
I0428 19:29:31.798657 22041 net.cpp:124] Setting up ip2
I0428 19:29:31.798665 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.798666 22041 net.cpp:139] Memory required for data: 914800
I0428 19:29:31.798673 22041 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:31.798677 22041 net.cpp:86] Creating Layer relu2
I0428 19:29:31.798681 22041 net.cpp:408] relu2 <- ip2
I0428 19:29:31.798683 22041 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:31.799594 22041 net.cpp:124] Setting up relu2
I0428 19:29:31.799607 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.799609 22041 net.cpp:139] Memory required for data: 918800
I0428 19:29:31.799613 22041 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:31.799620 22041 net.cpp:86] Creating Layer ip3
I0428 19:29:31.799623 22041 net.cpp:408] ip3 <- ip2
I0428 19:29:31.799629 22041 net.cpp:382] ip3 -> ip3
I0428 19:29:31.799796 22041 net.cpp:124] Setting up ip3
I0428 19:29:31.799804 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.799808 22041 net.cpp:139] Memory required for data: 922800
I0428 19:29:31.799813 22041 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:31.799818 22041 net.cpp:86] Creating Layer relu3
I0428 19:29:31.799821 22041 net.cpp:408] relu3 <- ip3
I0428 19:29:31.799825 22041 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:31.799962 22041 net.cpp:124] Setting up relu3
I0428 19:29:31.799970 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.799973 22041 net.cpp:139] Memory required for data: 926800
I0428 19:29:31.799976 22041 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:31.799988 22041 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:31.799990 22041 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:31.800000 22041 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:31.800005 22041 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:31.800037 22041 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:31.800042 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.800045 22041 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:31.800057 22041 net.cpp:139] Memory required for data: 934800
I0428 19:29:31.800066 22041 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:31.800071 22041 net.cpp:86] Creating Layer accuracy
I0428 19:29:31.800074 22041 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:31.800078 22041 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:31.800082 22041 net.cpp:382] accuracy -> accuracy
I0428 19:29:31.800106 22041 net.cpp:124] Setting up accuracy
I0428 19:29:31.800109 22041 net.cpp:131] Top shape: (1)
I0428 19:29:31.800112 22041 net.cpp:139] Memory required for data: 934804
I0428 19:29:31.800114 22041 layer_factory.hpp:77] Creating layer loss
I0428 19:29:31.800124 22041 net.cpp:86] Creating Layer loss
I0428 19:29:31.800127 22041 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:31.800132 22041 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:31.800135 22041 net.cpp:382] loss -> loss
I0428 19:29:31.800142 22041 layer_factory.hpp:77] Creating layer loss
I0428 19:29:31.800356 22041 net.cpp:124] Setting up loss
I0428 19:29:31.800365 22041 net.cpp:131] Top shape: (1)
I0428 19:29:31.800384 22041 net.cpp:134]     with loss weight 1
I0428 19:29:31.800390 22041 net.cpp:139] Memory required for data: 934808
I0428 19:29:31.800395 22041 net.cpp:200] loss needs backward computation.
I0428 19:29:31.800398 22041 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:31.800402 22041 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:31.800406 22041 net.cpp:200] relu3 needs backward computation.
I0428 19:29:31.800410 22041 net.cpp:200] ip3 needs backward computation.
I0428 19:29:31.800426 22041 net.cpp:200] relu2 needs backward computation.
I0428 19:29:31.800437 22041 net.cpp:200] ip2 needs backward computation.
I0428 19:29:31.800441 22041 net.cpp:200] relu1 needs backward computation.
I0428 19:29:31.800443 22041 net.cpp:200] ip1 needs backward computation.
I0428 19:29:31.800457 22041 net.cpp:200] pool0 needs backward computation.
I0428 19:29:31.800459 22041 net.cpp:200] conv0 needs backward computation.
I0428 19:29:31.800463 22041 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:31.800467 22041 net.cpp:202] mnist does not need backward computation.
I0428 19:29:31.800475 22041 net.cpp:244] This network produces output accuracy
I0428 19:29:31.800478 22041 net.cpp:244] This network produces output loss
I0428 19:29:31.800488 22041 net.cpp:257] Network initialization done.
I0428 19:29:31.800523 22041 solver.cpp:56] Solver scaffolding done.
I0428 19:29:31.800788 22041 caffe.cpp:248] Starting Optimization
I0428 19:29:31.800794 22041 solver.cpp:273] Solving LeNet
I0428 19:29:31.800797 22041 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:31.801008 22041 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:31.801182 22041 blocking_queue.cpp:49] Waiting for data
I0428 19:29:31.877354 22048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:31.877784 22041 solver.cpp:398]     Test net output #0: accuracy = 0.1246
I0428 19:29:31.877804 22041 solver.cpp:398]     Test net output #1: loss = 2.29577 (* 1 = 2.29577 loss)
I0428 19:29:31.879381 22041 solver.cpp:219] Iteration 0 (0 iter/s, 0.0785584s/100 iters), loss = 2.29598
I0428 19:29:31.879418 22041 solver.cpp:238]     Train net output #0: loss = 2.29598 (* 1 = 2.29598 loss)
I0428 19:29:31.879447 22041 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:31.936290 22041 solver.cpp:219] Iteration 100 (1758.71 iter/s, 0.0568599s/100 iters), loss = 1.1133
I0428 19:29:31.936334 22041 solver.cpp:238]     Train net output #0: loss = 1.1133 (* 1 = 1.1133 loss)
I0428 19:29:31.936343 22041 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:31.992998 22041 solver.cpp:219] Iteration 200 (1765 iter/s, 0.0566572s/100 iters), loss = 1.03749
I0428 19:29:31.993023 22041 solver.cpp:238]     Train net output #0: loss = 1.03749 (* 1 = 1.03749 loss)
I0428 19:29:31.993029 22041 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:32.046463 22041 solver.cpp:219] Iteration 300 (1871.67 iter/s, 0.0534282s/100 iters), loss = 0.5782
I0428 19:29:32.046497 22041 solver.cpp:238]     Train net output #0: loss = 0.5782 (* 1 = 0.5782 loss)
I0428 19:29:32.046521 22041 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:32.100700 22041 solver.cpp:219] Iteration 400 (1845.18 iter/s, 0.0541952s/100 iters), loss = 0.22014
I0428 19:29:32.100723 22041 solver.cpp:238]     Train net output #0: loss = 0.22014 (* 1 = 0.22014 loss)
I0428 19:29:32.100744 22041 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:32.155958 22041 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:32.217005 22048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:32.217425 22041 solver.cpp:398]     Test net output #0: accuracy = 0.9179
I0428 19:29:32.217447 22041 solver.cpp:398]     Test net output #1: loss = 0.272338 (* 1 = 0.272338 loss)
I0428 19:29:32.218086 22041 solver.cpp:219] Iteration 500 (852.135 iter/s, 0.117352s/100 iters), loss = 0.324174
I0428 19:29:32.218109 22041 solver.cpp:238]     Train net output #0: loss = 0.324174 (* 1 = 0.324174 loss)
I0428 19:29:32.218116 22041 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:32.274693 22041 solver.cpp:219] Iteration 600 (1767.79 iter/s, 0.0565678s/100 iters), loss = 0.192503
I0428 19:29:32.274750 22041 solver.cpp:238]     Train net output #0: loss = 0.192503 (* 1 = 0.192503 loss)
I0428 19:29:32.274758 22041 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:32.333003 22041 solver.cpp:219] Iteration 700 (1716.88 iter/s, 0.0582452s/100 iters), loss = 0.372127
I0428 19:29:32.333029 22041 solver.cpp:238]     Train net output #0: loss = 0.372127 (* 1 = 0.372127 loss)
I0428 19:29:32.333036 22041 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:32.388556 22041 solver.cpp:219] Iteration 800 (1801.15 iter/s, 0.0555201s/100 iters), loss = 0.332241
I0428 19:29:32.388581 22041 solver.cpp:238]     Train net output #0: loss = 0.332241 (* 1 = 0.332241 loss)
I0428 19:29:32.388603 22041 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:32.444994 22041 solver.cpp:219] Iteration 900 (1772.88 iter/s, 0.0564054s/100 iters), loss = 0.327534
I0428 19:29:32.445019 22041 solver.cpp:238]     Train net output #0: loss = 0.327534 (* 1 = 0.327534 loss)
I0428 19:29:32.445040 22041 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:32.463348 22047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:32.499254 22041 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:32.499879 22041 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:32.500311 22041 solver.cpp:311] Iteration 1000, loss = 0.191106
I0428 19:29:32.500326 22041 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:32.552577 22048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:32.553021 22041 solver.cpp:398]     Test net output #0: accuracy = 0.9368
I0428 19:29:32.553040 22041 solver.cpp:398]     Test net output #1: loss = 0.200422 (* 1 = 0.200422 loss)
I0428 19:29:32.553046 22041 solver.cpp:316] Optimization Done.
I0428 19:29:32.553050 22041 caffe.cpp:259] Optimization Done.
