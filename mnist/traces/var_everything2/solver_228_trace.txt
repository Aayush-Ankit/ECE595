I0428 19:35:35.593729 23534 caffe.cpp:218] Using GPUs 0
I0428 19:35:35.629019 23534 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:36.135491 23534 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test228.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:36.135630 23534 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test228.prototxt
I0428 19:35:36.135995 23534 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:36.136013 23534 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:36.136099 23534 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:36.136174 23534 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:36.136274 23534 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:36.136297 23534 net.cpp:86] Creating Layer mnist
I0428 19:35:36.136306 23534 net.cpp:382] mnist -> data
I0428 19:35:36.136328 23534 net.cpp:382] mnist -> label
I0428 19:35:36.137435 23534 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:36.139873 23534 net.cpp:124] Setting up mnist
I0428 19:35:36.139890 23534 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:36.139896 23534 net.cpp:131] Top shape: 64 (64)
I0428 19:35:36.139899 23534 net.cpp:139] Memory required for data: 200960
I0428 19:35:36.139909 23534 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:36.139963 23534 net.cpp:86] Creating Layer conv0
I0428 19:35:36.139969 23534 net.cpp:408] conv0 <- data
I0428 19:35:36.139981 23534 net.cpp:382] conv0 -> conv0
I0428 19:35:36.427104 23534 net.cpp:124] Setting up conv0
I0428 19:35:36.427134 23534 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:36.427137 23534 net.cpp:139] Memory required for data: 7573760
I0428 19:35:36.427152 23534 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:36.427166 23534 net.cpp:86] Creating Layer pool0
I0428 19:35:36.427186 23534 net.cpp:408] pool0 <- conv0
I0428 19:35:36.427192 23534 net.cpp:382] pool0 -> pool0
I0428 19:35:36.427242 23534 net.cpp:124] Setting up pool0
I0428 19:35:36.427250 23534 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:36.427254 23534 net.cpp:139] Memory required for data: 9416960
I0428 19:35:36.427258 23534 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:36.427265 23534 net.cpp:86] Creating Layer ip1
I0428 19:35:36.427268 23534 net.cpp:408] ip1 <- pool0
I0428 19:35:36.427273 23534 net.cpp:382] ip1 -> ip1
I0428 19:35:36.430274 23534 net.cpp:124] Setting up ip1
I0428 19:35:36.430287 23534 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:36.430291 23534 net.cpp:139] Memory required for data: 9429760
I0428 19:35:36.430315 23534 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:36.430322 23534 net.cpp:86] Creating Layer relu1
I0428 19:35:36.430326 23534 net.cpp:408] relu1 <- ip1
I0428 19:35:36.430330 23534 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:36.430517 23534 net.cpp:124] Setting up relu1
I0428 19:35:36.430526 23534 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:36.430529 23534 net.cpp:139] Memory required for data: 9442560
I0428 19:35:36.430532 23534 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:36.430539 23534 net.cpp:86] Creating Layer ip2
I0428 19:35:36.430542 23534 net.cpp:408] ip2 <- ip1
I0428 19:35:36.430547 23534 net.cpp:382] ip2 -> ip2
I0428 19:35:36.430651 23534 net.cpp:124] Setting up ip2
I0428 19:35:36.430658 23534 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:36.430661 23534 net.cpp:139] Memory required for data: 9448960
I0428 19:35:36.430668 23534 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:36.430673 23534 net.cpp:86] Creating Layer relu2
I0428 19:35:36.430676 23534 net.cpp:408] relu2 <- ip2
I0428 19:35:36.430680 23534 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:36.431439 23534 net.cpp:124] Setting up relu2
I0428 19:35:36.431452 23534 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:36.431457 23534 net.cpp:139] Memory required for data: 9455360
I0428 19:35:36.431460 23534 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:36.431468 23534 net.cpp:86] Creating Layer ip3
I0428 19:35:36.431470 23534 net.cpp:408] ip3 <- ip2
I0428 19:35:36.431478 23534 net.cpp:382] ip3 -> ip3
I0428 19:35:36.431609 23534 net.cpp:124] Setting up ip3
I0428 19:35:36.431617 23534 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:36.431619 23534 net.cpp:139] Memory required for data: 9457920
I0428 19:35:36.431624 23534 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:36.431632 23534 net.cpp:86] Creating Layer relu3
I0428 19:35:36.431635 23534 net.cpp:408] relu3 <- ip3
I0428 19:35:36.431639 23534 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:36.431792 23534 net.cpp:124] Setting up relu3
I0428 19:35:36.431799 23534 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:36.431802 23534 net.cpp:139] Memory required for data: 9460480
I0428 19:35:36.431805 23534 layer_factory.hpp:77] Creating layer loss
I0428 19:35:36.431816 23534 net.cpp:86] Creating Layer loss
I0428 19:35:36.431819 23534 net.cpp:408] loss <- ip3
I0428 19:35:36.431823 23534 net.cpp:408] loss <- label
I0428 19:35:36.431828 23534 net.cpp:382] loss -> loss
I0428 19:35:36.431841 23534 layer_factory.hpp:77] Creating layer loss
I0428 19:35:36.432072 23534 net.cpp:124] Setting up loss
I0428 19:35:36.432081 23534 net.cpp:131] Top shape: (1)
I0428 19:35:36.432085 23534 net.cpp:134]     with loss weight 1
I0428 19:35:36.432098 23534 net.cpp:139] Memory required for data: 9460484
I0428 19:35:36.432102 23534 net.cpp:200] loss needs backward computation.
I0428 19:35:36.432106 23534 net.cpp:200] relu3 needs backward computation.
I0428 19:35:36.432108 23534 net.cpp:200] ip3 needs backward computation.
I0428 19:35:36.432111 23534 net.cpp:200] relu2 needs backward computation.
I0428 19:35:36.432114 23534 net.cpp:200] ip2 needs backward computation.
I0428 19:35:36.432116 23534 net.cpp:200] relu1 needs backward computation.
I0428 19:35:36.432119 23534 net.cpp:200] ip1 needs backward computation.
I0428 19:35:36.432133 23534 net.cpp:200] pool0 needs backward computation.
I0428 19:35:36.432137 23534 net.cpp:200] conv0 needs backward computation.
I0428 19:35:36.432139 23534 net.cpp:202] mnist does not need backward computation.
I0428 19:35:36.432142 23534 net.cpp:244] This network produces output loss
I0428 19:35:36.432150 23534 net.cpp:257] Network initialization done.
I0428 19:35:36.432494 23534 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test228.prototxt
I0428 19:35:36.432523 23534 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:36.432631 23534 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:36.432741 23534 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:36.432783 23534 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:36.432799 23534 net.cpp:86] Creating Layer mnist
I0428 19:35:36.432806 23534 net.cpp:382] mnist -> data
I0428 19:35:36.432828 23534 net.cpp:382] mnist -> label
I0428 19:35:36.432934 23534 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:36.434921 23534 net.cpp:124] Setting up mnist
I0428 19:35:36.434936 23534 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:36.434940 23534 net.cpp:131] Top shape: 100 (100)
I0428 19:35:36.434942 23534 net.cpp:139] Memory required for data: 314000
I0428 19:35:36.434945 23534 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:36.434953 23534 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:36.434957 23534 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:36.434962 23534 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:36.434969 23534 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:36.435047 23534 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:36.435058 23534 net.cpp:131] Top shape: 100 (100)
I0428 19:35:36.435062 23534 net.cpp:131] Top shape: 100 (100)
I0428 19:35:36.435065 23534 net.cpp:139] Memory required for data: 314800
I0428 19:35:36.435077 23534 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:36.435087 23534 net.cpp:86] Creating Layer conv0
I0428 19:35:36.435091 23534 net.cpp:408] conv0 <- data
I0428 19:35:36.435097 23534 net.cpp:382] conv0 -> conv0
I0428 19:35:36.436767 23534 net.cpp:124] Setting up conv0
I0428 19:35:36.436781 23534 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:36.436785 23534 net.cpp:139] Memory required for data: 11834800
I0428 19:35:36.436794 23534 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:36.436800 23534 net.cpp:86] Creating Layer pool0
I0428 19:35:36.436803 23534 net.cpp:408] pool0 <- conv0
I0428 19:35:36.436815 23534 net.cpp:382] pool0 -> pool0
I0428 19:35:36.436888 23534 net.cpp:124] Setting up pool0
I0428 19:35:36.436894 23534 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:36.436897 23534 net.cpp:139] Memory required for data: 14714800
I0428 19:35:36.436899 23534 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:36.436908 23534 net.cpp:86] Creating Layer ip1
I0428 19:35:36.436910 23534 net.cpp:408] ip1 <- pool0
I0428 19:35:36.436915 23534 net.cpp:382] ip1 -> ip1
I0428 19:35:36.439131 23534 net.cpp:124] Setting up ip1
I0428 19:35:36.439139 23534 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:36.439142 23534 net.cpp:139] Memory required for data: 14734800
I0428 19:35:36.439149 23534 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:36.439153 23534 net.cpp:86] Creating Layer relu1
I0428 19:35:36.439157 23534 net.cpp:408] relu1 <- ip1
I0428 19:35:36.439160 23534 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:36.439381 23534 net.cpp:124] Setting up relu1
I0428 19:35:36.439390 23534 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:36.439393 23534 net.cpp:139] Memory required for data: 14754800
I0428 19:35:36.439396 23534 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:36.439417 23534 net.cpp:86] Creating Layer ip2
I0428 19:35:36.439421 23534 net.cpp:408] ip2 <- ip1
I0428 19:35:36.439429 23534 net.cpp:382] ip2 -> ip2
I0428 19:35:36.439554 23534 net.cpp:124] Setting up ip2
I0428 19:35:36.439563 23534 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:36.439565 23534 net.cpp:139] Memory required for data: 14764800
I0428 19:35:36.439574 23534 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:36.439579 23534 net.cpp:86] Creating Layer relu2
I0428 19:35:36.439584 23534 net.cpp:408] relu2 <- ip2
I0428 19:35:36.439589 23534 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:36.440412 23534 net.cpp:124] Setting up relu2
I0428 19:35:36.440424 23534 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:36.440428 23534 net.cpp:139] Memory required for data: 14774800
I0428 19:35:36.440431 23534 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:36.440440 23534 net.cpp:86] Creating Layer ip3
I0428 19:35:36.440444 23534 net.cpp:408] ip3 <- ip2
I0428 19:35:36.440449 23534 net.cpp:382] ip3 -> ip3
I0428 19:35:36.440596 23534 net.cpp:124] Setting up ip3
I0428 19:35:36.440604 23534 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:36.440608 23534 net.cpp:139] Memory required for data: 14778800
I0428 19:35:36.440613 23534 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:36.440620 23534 net.cpp:86] Creating Layer relu3
I0428 19:35:36.440623 23534 net.cpp:408] relu3 <- ip3
I0428 19:35:36.440627 23534 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:36.440781 23534 net.cpp:124] Setting up relu3
I0428 19:35:36.440789 23534 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:36.440793 23534 net.cpp:139] Memory required for data: 14782800
I0428 19:35:36.440796 23534 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:36.440803 23534 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:36.440805 23534 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:36.440815 23534 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:36.440838 23534 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:36.440892 23534 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:36.440915 23534 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:36.440932 23534 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:36.440935 23534 net.cpp:139] Memory required for data: 14790800
I0428 19:35:36.440939 23534 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:36.440945 23534 net.cpp:86] Creating Layer accuracy
I0428 19:35:36.440949 23534 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:36.440954 23534 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:36.440960 23534 net.cpp:382] accuracy -> accuracy
I0428 19:35:36.440968 23534 net.cpp:124] Setting up accuracy
I0428 19:35:36.440973 23534 net.cpp:131] Top shape: (1)
I0428 19:35:36.440981 23534 net.cpp:139] Memory required for data: 14790804
I0428 19:35:36.440984 23534 layer_factory.hpp:77] Creating layer loss
I0428 19:35:36.440989 23534 net.cpp:86] Creating Layer loss
I0428 19:35:36.440992 23534 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:36.440996 23534 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:36.441002 23534 net.cpp:382] loss -> loss
I0428 19:35:36.441009 23534 layer_factory.hpp:77] Creating layer loss
I0428 19:35:36.441293 23534 net.cpp:124] Setting up loss
I0428 19:35:36.441301 23534 net.cpp:131] Top shape: (1)
I0428 19:35:36.441304 23534 net.cpp:134]     with loss weight 1
I0428 19:35:36.441311 23534 net.cpp:139] Memory required for data: 14790808
I0428 19:35:36.441314 23534 net.cpp:200] loss needs backward computation.
I0428 19:35:36.441318 23534 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:36.441321 23534 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:36.441325 23534 net.cpp:200] relu3 needs backward computation.
I0428 19:35:36.441328 23534 net.cpp:200] ip3 needs backward computation.
I0428 19:35:36.441330 23534 net.cpp:200] relu2 needs backward computation.
I0428 19:35:36.441334 23534 net.cpp:200] ip2 needs backward computation.
I0428 19:35:36.441335 23534 net.cpp:200] relu1 needs backward computation.
I0428 19:35:36.441339 23534 net.cpp:200] ip1 needs backward computation.
I0428 19:35:36.441341 23534 net.cpp:200] pool0 needs backward computation.
I0428 19:35:36.441344 23534 net.cpp:200] conv0 needs backward computation.
I0428 19:35:36.441347 23534 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:36.441351 23534 net.cpp:202] mnist does not need backward computation.
I0428 19:35:36.441354 23534 net.cpp:244] This network produces output accuracy
I0428 19:35:36.441357 23534 net.cpp:244] This network produces output loss
I0428 19:35:36.441367 23534 net.cpp:257] Network initialization done.
I0428 19:35:36.441403 23534 solver.cpp:56] Solver scaffolding done.
I0428 19:35:36.441668 23534 caffe.cpp:248] Starting Optimization
I0428 19:35:36.441679 23534 solver.cpp:273] Solving LeNet
I0428 19:35:36.441681 23534 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:36.442998 23534 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:36.543279 23541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:36.545788 23534 solver.cpp:398]     Test net output #0: accuracy = 0.1072
I0428 19:35:36.545821 23534 solver.cpp:398]     Test net output #1: loss = 2.3045 (* 1 = 2.3045 loss)
I0428 19:35:36.550276 23534 solver.cpp:219] Iteration 0 (-8.95215e-32 iter/s, 0.108567s/100 iters), loss = 2.30957
I0428 19:35:36.550318 23534 solver.cpp:238]     Train net output #0: loss = 2.30957 (* 1 = 2.30957 loss)
I0428 19:35:36.550329 23534 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:36.698097 23534 solver.cpp:219] Iteration 100 (676.744 iter/s, 0.147766s/100 iters), loss = 0.961064
I0428 19:35:36.698137 23534 solver.cpp:238]     Train net output #0: loss = 0.961064 (* 1 = 0.961064 loss)
I0428 19:35:36.698143 23534 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:36.843770 23534 solver.cpp:219] Iteration 200 (686.729 iter/s, 0.145618s/100 iters), loss = 1.21235
I0428 19:35:36.843811 23534 solver.cpp:238]     Train net output #0: loss = 1.21235 (* 1 = 1.21235 loss)
I0428 19:35:36.843816 23534 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:36.988353 23534 solver.cpp:219] Iteration 300 (691.828 iter/s, 0.144545s/100 iters), loss = 0.847646
I0428 19:35:36.988390 23534 solver.cpp:238]     Train net output #0: loss = 0.847646 (* 1 = 0.847646 loss)
I0428 19:35:36.988396 23534 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:37.131134 23534 solver.cpp:219] Iteration 400 (700.612 iter/s, 0.142732s/100 iters), loss = 0.680582
I0428 19:35:37.131172 23534 solver.cpp:238]     Train net output #0: loss = 0.680582 (* 1 = 0.680582 loss)
I0428 19:35:37.131177 23534 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:37.273244 23534 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:37.372463 23541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:37.375257 23534 solver.cpp:398]     Test net output #0: accuracy = 0.647
I0428 19:35:37.375275 23534 solver.cpp:398]     Test net output #1: loss = 0.886765 (* 1 = 0.886765 loss)
I0428 19:35:37.376691 23534 solver.cpp:219] Iteration 500 (407.303 iter/s, 0.245517s/100 iters), loss = 0.881275
I0428 19:35:37.376729 23534 solver.cpp:238]     Train net output #0: loss = 0.881275 (* 1 = 0.881275 loss)
I0428 19:35:37.376736 23534 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:37.526706 23534 solver.cpp:219] Iteration 600 (666.759 iter/s, 0.149979s/100 iters), loss = 0.989191
I0428 19:35:37.526733 23534 solver.cpp:238]     Train net output #0: loss = 0.989191 (* 1 = 0.989191 loss)
I0428 19:35:37.526741 23534 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:37.671635 23534 solver.cpp:219] Iteration 700 (690.184 iter/s, 0.144889s/100 iters), loss = 0.873627
I0428 19:35:37.671663 23534 solver.cpp:238]     Train net output #0: loss = 0.873627 (* 1 = 0.873627 loss)
I0428 19:35:37.671669 23534 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:37.820166 23534 solver.cpp:219] Iteration 800 (673.515 iter/s, 0.148475s/100 iters), loss = 0.778586
I0428 19:35:37.820207 23534 solver.cpp:238]     Train net output #0: loss = 0.778586 (* 1 = 0.778586 loss)
I0428 19:35:37.820214 23534 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:37.966884 23534 solver.cpp:219] Iteration 900 (681.761 iter/s, 0.146679s/100 iters), loss = 1.22536
I0428 19:35:37.966924 23534 solver.cpp:238]     Train net output #0: loss = 1.22536 (* 1 = 1.22536 loss)
I0428 19:35:37.966930 23534 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:38.015905 23540 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:38.110532 23534 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:38.115748 23534 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:38.119137 23534 solver.cpp:311] Iteration 1000, loss = 0.834065
I0428 19:35:38.119153 23534 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:38.217785 23541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:38.220268 23534 solver.cpp:398]     Test net output #0: accuracy = 0.6614
I0428 19:35:38.220304 23534 solver.cpp:398]     Test net output #1: loss = 0.820792 (* 1 = 0.820792 loss)
I0428 19:35:38.220309 23534 solver.cpp:316] Optimization Done.
I0428 19:35:38.220311 23534 caffe.cpp:259] Optimization Done.
