I0428 19:40:37.403041 24595 caffe.cpp:218] Using GPUs 0
I0428 19:40:37.443437 24595 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:37.901365 24595 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test340.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:37.901497 24595 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test340.prototxt
I0428 19:40:37.901851 24595 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:37.901883 24595 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:37.901964 24595 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:37.902029 24595 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:37.902120 24595 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:37.902140 24595 net.cpp:86] Creating Layer mnist
I0428 19:40:37.902148 24595 net.cpp:382] mnist -> data
I0428 19:40:37.902165 24595 net.cpp:382] mnist -> label
I0428 19:40:37.903069 24595 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:37.905395 24595 net.cpp:124] Setting up mnist
I0428 19:40:37.905426 24595 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:37.905433 24595 net.cpp:131] Top shape: 64 (64)
I0428 19:40:37.905436 24595 net.cpp:139] Memory required for data: 200960
I0428 19:40:37.905442 24595 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:37.905455 24595 net.cpp:86] Creating Layer conv0
I0428 19:40:37.905488 24595 net.cpp:408] conv0 <- data
I0428 19:40:37.905503 24595 net.cpp:382] conv0 -> conv0
I0428 19:40:38.144845 24595 net.cpp:124] Setting up conv0
I0428 19:40:38.144892 24595 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:38.144896 24595 net.cpp:139] Memory required for data: 495872
I0428 19:40:38.144928 24595 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:38.144958 24595 net.cpp:86] Creating Layer pool0
I0428 19:40:38.144963 24595 net.cpp:408] pool0 <- conv0
I0428 19:40:38.144968 24595 net.cpp:382] pool0 -> pool0
I0428 19:40:38.145017 24595 net.cpp:124] Setting up pool0
I0428 19:40:38.145025 24595 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:38.145028 24595 net.cpp:139] Memory required for data: 569600
I0428 19:40:38.145032 24595 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:38.145043 24595 net.cpp:86] Creating Layer conv1
I0428 19:40:38.145046 24595 net.cpp:408] conv1 <- pool0
I0428 19:40:38.145051 24595 net.cpp:382] conv1 -> conv1
I0428 19:40:38.147097 24595 net.cpp:124] Setting up conv1
I0428 19:40:38.147111 24595 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:38.147115 24595 net.cpp:139] Memory required for data: 651520
I0428 19:40:38.147125 24595 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:38.147148 24595 net.cpp:86] Creating Layer pool1
I0428 19:40:38.147152 24595 net.cpp:408] pool1 <- conv1
I0428 19:40:38.147157 24595 net.cpp:382] pool1 -> pool1
I0428 19:40:38.147197 24595 net.cpp:124] Setting up pool1
I0428 19:40:38.147203 24595 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:38.147207 24595 net.cpp:139] Memory required for data: 672000
I0428 19:40:38.147209 24595 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:38.147217 24595 net.cpp:86] Creating Layer ip1
I0428 19:40:38.147219 24595 net.cpp:408] ip1 <- pool1
I0428 19:40:38.147224 24595 net.cpp:382] ip1 -> ip1
I0428 19:40:38.148248 24595 net.cpp:124] Setting up ip1
I0428 19:40:38.148273 24595 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:38.148277 24595 net.cpp:139] Memory required for data: 678400
I0428 19:40:38.148286 24595 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:38.148293 24595 net.cpp:86] Creating Layer relu1
I0428 19:40:38.148295 24595 net.cpp:408] relu1 <- ip1
I0428 19:40:38.148301 24595 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:38.148493 24595 net.cpp:124] Setting up relu1
I0428 19:40:38.148516 24595 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:38.148519 24595 net.cpp:139] Memory required for data: 684800
I0428 19:40:38.148522 24595 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:38.148530 24595 net.cpp:86] Creating Layer ip2
I0428 19:40:38.148532 24595 net.cpp:408] ip2 <- ip1
I0428 19:40:38.148537 24595 net.cpp:382] ip2 -> ip2
I0428 19:40:38.148643 24595 net.cpp:124] Setting up ip2
I0428 19:40:38.148649 24595 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:38.148653 24595 net.cpp:139] Memory required for data: 697600
I0428 19:40:38.148658 24595 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:38.148664 24595 net.cpp:86] Creating Layer relu2
I0428 19:40:38.148668 24595 net.cpp:408] relu2 <- ip2
I0428 19:40:38.148672 24595 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:38.149500 24595 net.cpp:124] Setting up relu2
I0428 19:40:38.149514 24595 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:38.149519 24595 net.cpp:139] Memory required for data: 710400
I0428 19:40:38.149523 24595 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:38.149530 24595 net.cpp:86] Creating Layer ip3
I0428 19:40:38.149534 24595 net.cpp:408] ip3 <- ip2
I0428 19:40:38.149540 24595 net.cpp:382] ip3 -> ip3
I0428 19:40:38.149688 24595 net.cpp:124] Setting up ip3
I0428 19:40:38.149694 24595 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:38.149698 24595 net.cpp:139] Memory required for data: 712960
I0428 19:40:38.149705 24595 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:38.149711 24595 net.cpp:86] Creating Layer relu3
I0428 19:40:38.149714 24595 net.cpp:408] relu3 <- ip3
I0428 19:40:38.149718 24595 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:38.149888 24595 net.cpp:124] Setting up relu3
I0428 19:40:38.149897 24595 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:38.149900 24595 net.cpp:139] Memory required for data: 715520
I0428 19:40:38.149904 24595 layer_factory.hpp:77] Creating layer loss
I0428 19:40:38.149911 24595 net.cpp:86] Creating Layer loss
I0428 19:40:38.149914 24595 net.cpp:408] loss <- ip3
I0428 19:40:38.149917 24595 net.cpp:408] loss <- label
I0428 19:40:38.149924 24595 net.cpp:382] loss -> loss
I0428 19:40:38.149952 24595 layer_factory.hpp:77] Creating layer loss
I0428 19:40:38.150225 24595 net.cpp:124] Setting up loss
I0428 19:40:38.150234 24595 net.cpp:131] Top shape: (1)
I0428 19:40:38.150238 24595 net.cpp:134]     with loss weight 1
I0428 19:40:38.150254 24595 net.cpp:139] Memory required for data: 715524
I0428 19:40:38.150259 24595 net.cpp:200] loss needs backward computation.
I0428 19:40:38.150262 24595 net.cpp:200] relu3 needs backward computation.
I0428 19:40:38.150265 24595 net.cpp:200] ip3 needs backward computation.
I0428 19:40:38.150269 24595 net.cpp:200] relu2 needs backward computation.
I0428 19:40:38.150271 24595 net.cpp:200] ip2 needs backward computation.
I0428 19:40:38.150274 24595 net.cpp:200] relu1 needs backward computation.
I0428 19:40:38.150277 24595 net.cpp:200] ip1 needs backward computation.
I0428 19:40:38.150280 24595 net.cpp:200] pool1 needs backward computation.
I0428 19:40:38.150285 24595 net.cpp:200] conv1 needs backward computation.
I0428 19:40:38.150288 24595 net.cpp:200] pool0 needs backward computation.
I0428 19:40:38.150291 24595 net.cpp:200] conv0 needs backward computation.
I0428 19:40:38.150310 24595 net.cpp:202] mnist does not need backward computation.
I0428 19:40:38.150312 24595 net.cpp:244] This network produces output loss
I0428 19:40:38.150321 24595 net.cpp:257] Network initialization done.
I0428 19:40:38.150671 24595 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test340.prototxt
I0428 19:40:38.150727 24595 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:38.150818 24595 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:38.150897 24595 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:38.150936 24595 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:38.150950 24595 net.cpp:86] Creating Layer mnist
I0428 19:40:38.150956 24595 net.cpp:382] mnist -> data
I0428 19:40:38.150964 24595 net.cpp:382] mnist -> label
I0428 19:40:38.151059 24595 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:38.153117 24595 net.cpp:124] Setting up mnist
I0428 19:40:38.153146 24595 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:38.153151 24595 net.cpp:131] Top shape: 100 (100)
I0428 19:40:38.153154 24595 net.cpp:139] Memory required for data: 314000
I0428 19:40:38.153173 24595 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:38.153180 24595 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:38.153183 24595 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:38.153190 24595 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:38.153197 24595 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:38.153241 24595 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:38.153246 24595 net.cpp:131] Top shape: 100 (100)
I0428 19:40:38.153250 24595 net.cpp:131] Top shape: 100 (100)
I0428 19:40:38.153254 24595 net.cpp:139] Memory required for data: 314800
I0428 19:40:38.153256 24595 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:38.153266 24595 net.cpp:86] Creating Layer conv0
I0428 19:40:38.153270 24595 net.cpp:408] conv0 <- data
I0428 19:40:38.153275 24595 net.cpp:382] conv0 -> conv0
I0428 19:40:38.154884 24595 net.cpp:124] Setting up conv0
I0428 19:40:38.154897 24595 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:38.154901 24595 net.cpp:139] Memory required for data: 775600
I0428 19:40:38.154911 24595 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:38.154918 24595 net.cpp:86] Creating Layer pool0
I0428 19:40:38.154922 24595 net.cpp:408] pool0 <- conv0
I0428 19:40:38.154927 24595 net.cpp:382] pool0 -> pool0
I0428 19:40:38.154978 24595 net.cpp:124] Setting up pool0
I0428 19:40:38.154986 24595 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:38.154989 24595 net.cpp:139] Memory required for data: 890800
I0428 19:40:38.154992 24595 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:38.155002 24595 net.cpp:86] Creating Layer conv1
I0428 19:40:38.155005 24595 net.cpp:408] conv1 <- pool0
I0428 19:40:38.155011 24595 net.cpp:382] conv1 -> conv1
I0428 19:40:38.156760 24595 net.cpp:124] Setting up conv1
I0428 19:40:38.156772 24595 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:38.156776 24595 net.cpp:139] Memory required for data: 1018800
I0428 19:40:38.156785 24595 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:38.156808 24595 net.cpp:86] Creating Layer pool1
I0428 19:40:38.156817 24595 net.cpp:408] pool1 <- conv1
I0428 19:40:38.156839 24595 net.cpp:382] pool1 -> pool1
I0428 19:40:38.156888 24595 net.cpp:124] Setting up pool1
I0428 19:40:38.156893 24595 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:38.156896 24595 net.cpp:139] Memory required for data: 1050800
I0428 19:40:38.156899 24595 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:38.156906 24595 net.cpp:86] Creating Layer ip1
I0428 19:40:38.156909 24595 net.cpp:408] ip1 <- pool1
I0428 19:40:38.156914 24595 net.cpp:382] ip1 -> ip1
I0428 19:40:38.157032 24595 net.cpp:124] Setting up ip1
I0428 19:40:38.157040 24595 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:38.157059 24595 net.cpp:139] Memory required for data: 1060800
I0428 19:40:38.157068 24595 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:38.157080 24595 net.cpp:86] Creating Layer relu1
I0428 19:40:38.157084 24595 net.cpp:408] relu1 <- ip1
I0428 19:40:38.157089 24595 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:38.157275 24595 net.cpp:124] Setting up relu1
I0428 19:40:38.157289 24595 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:38.157291 24595 net.cpp:139] Memory required for data: 1070800
I0428 19:40:38.157295 24595 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:38.157304 24595 net.cpp:86] Creating Layer ip2
I0428 19:40:38.157306 24595 net.cpp:408] ip2 <- ip1
I0428 19:40:38.157312 24595 net.cpp:382] ip2 -> ip2
I0428 19:40:38.157423 24595 net.cpp:124] Setting up ip2
I0428 19:40:38.157429 24595 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:38.157433 24595 net.cpp:139] Memory required for data: 1090800
I0428 19:40:38.157438 24595 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:38.157441 24595 net.cpp:86] Creating Layer relu2
I0428 19:40:38.157444 24595 net.cpp:408] relu2 <- ip2
I0428 19:40:38.157449 24595 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:38.157650 24595 net.cpp:124] Setting up relu2
I0428 19:40:38.157675 24595 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:38.157678 24595 net.cpp:139] Memory required for data: 1110800
I0428 19:40:38.157681 24595 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:38.157687 24595 net.cpp:86] Creating Layer ip3
I0428 19:40:38.157691 24595 net.cpp:408] ip3 <- ip2
I0428 19:40:38.157696 24595 net.cpp:382] ip3 -> ip3
I0428 19:40:38.157835 24595 net.cpp:124] Setting up ip3
I0428 19:40:38.157842 24595 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:38.157845 24595 net.cpp:139] Memory required for data: 1114800
I0428 19:40:38.157855 24595 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:38.157860 24595 net.cpp:86] Creating Layer relu3
I0428 19:40:38.157863 24595 net.cpp:408] relu3 <- ip3
I0428 19:40:38.157868 24595 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:38.158687 24595 net.cpp:124] Setting up relu3
I0428 19:40:38.158699 24595 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:38.158717 24595 net.cpp:139] Memory required for data: 1118800
I0428 19:40:38.158721 24595 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:38.158726 24595 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:38.158730 24595 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:38.158748 24595 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:38.158754 24595 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:38.158833 24595 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:38.158840 24595 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:38.158844 24595 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:38.158846 24595 net.cpp:139] Memory required for data: 1126800
I0428 19:40:38.158849 24595 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:38.158860 24595 net.cpp:86] Creating Layer accuracy
I0428 19:40:38.158879 24595 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:38.158885 24595 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:38.158890 24595 net.cpp:382] accuracy -> accuracy
I0428 19:40:38.158896 24595 net.cpp:124] Setting up accuracy
I0428 19:40:38.158900 24595 net.cpp:131] Top shape: (1)
I0428 19:40:38.158903 24595 net.cpp:139] Memory required for data: 1126804
I0428 19:40:38.158906 24595 layer_factory.hpp:77] Creating layer loss
I0428 19:40:38.158910 24595 net.cpp:86] Creating Layer loss
I0428 19:40:38.158915 24595 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:38.158933 24595 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:38.158937 24595 net.cpp:382] loss -> loss
I0428 19:40:38.158943 24595 layer_factory.hpp:77] Creating layer loss
I0428 19:40:38.159224 24595 net.cpp:124] Setting up loss
I0428 19:40:38.159247 24595 net.cpp:131] Top shape: (1)
I0428 19:40:38.159250 24595 net.cpp:134]     with loss weight 1
I0428 19:40:38.159257 24595 net.cpp:139] Memory required for data: 1126808
I0428 19:40:38.159271 24595 net.cpp:200] loss needs backward computation.
I0428 19:40:38.159274 24595 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:38.159278 24595 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:38.159282 24595 net.cpp:200] relu3 needs backward computation.
I0428 19:40:38.159286 24595 net.cpp:200] ip3 needs backward computation.
I0428 19:40:38.159288 24595 net.cpp:200] relu2 needs backward computation.
I0428 19:40:38.159291 24595 net.cpp:200] ip2 needs backward computation.
I0428 19:40:38.159294 24595 net.cpp:200] relu1 needs backward computation.
I0428 19:40:38.159297 24595 net.cpp:200] ip1 needs backward computation.
I0428 19:40:38.159315 24595 net.cpp:200] pool1 needs backward computation.
I0428 19:40:38.159318 24595 net.cpp:200] conv1 needs backward computation.
I0428 19:40:38.159322 24595 net.cpp:200] pool0 needs backward computation.
I0428 19:40:38.159324 24595 net.cpp:200] conv0 needs backward computation.
I0428 19:40:38.159328 24595 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:38.159332 24595 net.cpp:202] mnist does not need backward computation.
I0428 19:40:38.159335 24595 net.cpp:244] This network produces output accuracy
I0428 19:40:38.159339 24595 net.cpp:244] This network produces output loss
I0428 19:40:38.159350 24595 net.cpp:257] Network initialization done.
I0428 19:40:38.159394 24595 solver.cpp:56] Solver scaffolding done.
I0428 19:40:38.159766 24595 caffe.cpp:248] Starting Optimization
I0428 19:40:38.159772 24595 solver.cpp:273] Solving LeNet
I0428 19:40:38.159775 24595 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:38.160645 24595 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:38.163352 24595 blocking_queue.cpp:49] Waiting for data
I0428 19:40:38.234745 24602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:38.235316 24595 solver.cpp:398]     Test net output #0: accuracy = 0.0977
I0428 19:40:38.235353 24595 solver.cpp:398]     Test net output #1: loss = 2.30657 (* 1 = 2.30657 loss)
I0428 19:40:38.237330 24595 solver.cpp:219] Iteration 0 (-1.04817e-42 iter/s, 0.0775047s/100 iters), loss = 2.30959
I0428 19:40:38.237357 24595 solver.cpp:238]     Train net output #0: loss = 2.30959 (* 1 = 2.30959 loss)
I0428 19:40:38.237371 24595 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:38.305924 24595 solver.cpp:219] Iteration 100 (1458.67 iter/s, 0.0685556s/100 iters), loss = 1.43848
I0428 19:40:38.305964 24595 solver.cpp:238]     Train net output #0: loss = 1.43848 (* 1 = 1.43848 loss)
I0428 19:40:38.305970 24595 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:38.374956 24595 solver.cpp:219] Iteration 200 (1449.29 iter/s, 0.0689994s/100 iters), loss = 0.64776
I0428 19:40:38.374980 24595 solver.cpp:238]     Train net output #0: loss = 0.64776 (* 1 = 0.64776 loss)
I0428 19:40:38.374986 24595 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:38.443920 24595 solver.cpp:219] Iteration 300 (1450.73 iter/s, 0.0689306s/100 iters), loss = 0.735647
I0428 19:40:38.443959 24595 solver.cpp:238]     Train net output #0: loss = 0.735647 (* 1 = 0.735647 loss)
I0428 19:40:38.443965 24595 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:38.512929 24595 solver.cpp:219] Iteration 400 (1449.76 iter/s, 0.0689768s/100 iters), loss = 0.491926
I0428 19:40:38.512969 24595 solver.cpp:238]     Train net output #0: loss = 0.491926 (* 1 = 0.491926 loss)
I0428 19:40:38.512975 24595 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:38.580615 24595 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:38.633297 24602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:38.633780 24595 solver.cpp:398]     Test net output #0: accuracy = 0.7277
I0428 19:40:38.633813 24595 solver.cpp:398]     Test net output #1: loss = 0.695784 (* 1 = 0.695784 loss)
I0428 19:40:38.634552 24595 solver.cpp:219] Iteration 500 (822.458 iter/s, 0.121587s/100 iters), loss = 0.608611
I0428 19:40:38.634589 24595 solver.cpp:238]     Train net output #0: loss = 0.608611 (* 1 = 0.608611 loss)
I0428 19:40:38.634610 24595 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:38.703521 24595 solver.cpp:219] Iteration 600 (1450.56 iter/s, 0.0689388s/100 iters), loss = 0.907373
I0428 19:40:38.703560 24595 solver.cpp:238]     Train net output #0: loss = 0.907373 (* 1 = 0.907373 loss)
I0428 19:40:38.703582 24595 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:38.772545 24595 solver.cpp:219] Iteration 700 (1449.44 iter/s, 0.068992s/100 iters), loss = 0.670713
I0428 19:40:38.772584 24595 solver.cpp:238]     Train net output #0: loss = 0.670713 (* 1 = 0.670713 loss)
I0428 19:40:38.772589 24595 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:38.841069 24595 solver.cpp:219] Iteration 800 (1460.04 iter/s, 0.0684913s/100 iters), loss = 0.767262
I0428 19:40:38.841111 24595 solver.cpp:238]     Train net output #0: loss = 0.767262 (* 1 = 0.767262 loss)
I0428 19:40:38.841117 24595 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:38.908881 24595 solver.cpp:219] Iteration 900 (1475.42 iter/s, 0.0677775s/100 iters), loss = 0.775061
I0428 19:40:38.908937 24595 solver.cpp:238]     Train net output #0: loss = 0.775061 (* 1 = 0.775061 loss)
I0428 19:40:38.908944 24595 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:38.931818 24601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:38.976320 24595 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:38.977102 24595 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:38.977608 24595 solver.cpp:311] Iteration 1000, loss = 0.693167
I0428 19:40:38.977653 24595 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:39.023079 24602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:39.023527 24595 solver.cpp:398]     Test net output #0: accuracy = 0.7496
I0428 19:40:39.023561 24595 solver.cpp:398]     Test net output #1: loss = 0.616935 (* 1 = 0.616935 loss)
I0428 19:40:39.023568 24595 solver.cpp:316] Optimization Done.
I0428 19:40:39.023571 24595 caffe.cpp:259] Optimization Done.
