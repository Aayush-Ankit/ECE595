I0428 19:29:43.998425 22102 caffe.cpp:218] Using GPUs 0
I0428 19:29:44.038076 22102 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:44.548705 22102 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test68.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:44.548866 22102 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test68.prototxt
I0428 19:29:44.549222 22102 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:44.549238 22102 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:44.549324 22102 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:44.549398 22102 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:44.549497 22102 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:44.549521 22102 net.cpp:86] Creating Layer mnist
I0428 19:29:44.549530 22102 net.cpp:382] mnist -> data
I0428 19:29:44.549552 22102 net.cpp:382] mnist -> label
I0428 19:29:44.550645 22102 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:44.553316 22102 net.cpp:124] Setting up mnist
I0428 19:29:44.553334 22102 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:44.553341 22102 net.cpp:131] Top shape: 64 (64)
I0428 19:29:44.553345 22102 net.cpp:139] Memory required for data: 200960
I0428 19:29:44.553354 22102 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:44.553370 22102 net.cpp:86] Creating Layer conv0
I0428 19:29:44.553376 22102 net.cpp:408] conv0 <- data
I0428 19:29:44.553387 22102 net.cpp:382] conv0 -> conv0
I0428 19:29:44.826818 22102 net.cpp:124] Setting up conv0
I0428 19:29:44.826860 22102 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:44.826864 22102 net.cpp:139] Memory required for data: 495872
I0428 19:29:44.826879 22102 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:44.826892 22102 net.cpp:86] Creating Layer pool0
I0428 19:29:44.826942 22102 net.cpp:408] pool0 <- conv0
I0428 19:29:44.826948 22102 net.cpp:382] pool0 -> pool0
I0428 19:29:44.827008 22102 net.cpp:124] Setting up pool0
I0428 19:29:44.827015 22102 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:44.827018 22102 net.cpp:139] Memory required for data: 569600
I0428 19:29:44.827021 22102 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:44.827028 22102 net.cpp:86] Creating Layer ip1
I0428 19:29:44.827031 22102 net.cpp:408] ip1 <- pool0
I0428 19:29:44.827035 22102 net.cpp:382] ip1 -> ip1
I0428 19:29:44.828023 22102 net.cpp:124] Setting up ip1
I0428 19:29:44.828037 22102 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:44.828042 22102 net.cpp:139] Memory required for data: 576000
I0428 19:29:44.828050 22102 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:44.828058 22102 net.cpp:86] Creating Layer relu1
I0428 19:29:44.828060 22102 net.cpp:408] relu1 <- ip1
I0428 19:29:44.828065 22102 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:44.828239 22102 net.cpp:124] Setting up relu1
I0428 19:29:44.828248 22102 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:44.828251 22102 net.cpp:139] Memory required for data: 582400
I0428 19:29:44.828255 22102 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:44.828263 22102 net.cpp:86] Creating Layer ip2
I0428 19:29:44.828265 22102 net.cpp:408] ip2 <- ip1
I0428 19:29:44.828270 22102 net.cpp:382] ip2 -> ip2
I0428 19:29:44.829309 22102 net.cpp:124] Setting up ip2
I0428 19:29:44.829322 22102 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:44.829341 22102 net.cpp:139] Memory required for data: 595200
I0428 19:29:44.829349 22102 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:44.829355 22102 net.cpp:86] Creating Layer relu2
I0428 19:29:44.829360 22102 net.cpp:408] relu2 <- ip2
I0428 19:29:44.829363 22102 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:44.830099 22102 net.cpp:124] Setting up relu2
I0428 19:29:44.830126 22102 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:44.830144 22102 net.cpp:139] Memory required for data: 608000
I0428 19:29:44.830148 22102 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:44.830155 22102 net.cpp:86] Creating Layer ip3
I0428 19:29:44.830159 22102 net.cpp:408] ip3 <- ip2
I0428 19:29:44.830165 22102 net.cpp:382] ip3 -> ip3
I0428 19:29:44.830265 22102 net.cpp:124] Setting up ip3
I0428 19:29:44.830287 22102 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:44.830291 22102 net.cpp:139] Memory required for data: 610560
I0428 19:29:44.830296 22102 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:44.830302 22102 net.cpp:86] Creating Layer relu3
I0428 19:29:44.830305 22102 net.cpp:408] relu3 <- ip3
I0428 19:29:44.830309 22102 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:44.830454 22102 net.cpp:124] Setting up relu3
I0428 19:29:44.830462 22102 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:44.830466 22102 net.cpp:139] Memory required for data: 613120
I0428 19:29:44.830468 22102 layer_factory.hpp:77] Creating layer loss
I0428 19:29:44.830474 22102 net.cpp:86] Creating Layer loss
I0428 19:29:44.830477 22102 net.cpp:408] loss <- ip3
I0428 19:29:44.830482 22102 net.cpp:408] loss <- label
I0428 19:29:44.830487 22102 net.cpp:382] loss -> loss
I0428 19:29:44.830504 22102 layer_factory.hpp:77] Creating layer loss
I0428 19:29:44.830720 22102 net.cpp:124] Setting up loss
I0428 19:29:44.830729 22102 net.cpp:131] Top shape: (1)
I0428 19:29:44.830732 22102 net.cpp:134]     with loss weight 1
I0428 19:29:44.830745 22102 net.cpp:139] Memory required for data: 613124
I0428 19:29:44.830749 22102 net.cpp:200] loss needs backward computation.
I0428 19:29:44.830752 22102 net.cpp:200] relu3 needs backward computation.
I0428 19:29:44.830755 22102 net.cpp:200] ip3 needs backward computation.
I0428 19:29:44.830759 22102 net.cpp:200] relu2 needs backward computation.
I0428 19:29:44.830761 22102 net.cpp:200] ip2 needs backward computation.
I0428 19:29:44.830765 22102 net.cpp:200] relu1 needs backward computation.
I0428 19:29:44.830767 22102 net.cpp:200] ip1 needs backward computation.
I0428 19:29:44.830780 22102 net.cpp:200] pool0 needs backward computation.
I0428 19:29:44.830783 22102 net.cpp:200] conv0 needs backward computation.
I0428 19:29:44.830786 22102 net.cpp:202] mnist does not need backward computation.
I0428 19:29:44.830790 22102 net.cpp:244] This network produces output loss
I0428 19:29:44.830797 22102 net.cpp:257] Network initialization done.
I0428 19:29:44.831090 22102 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test68.prototxt
I0428 19:29:44.831115 22102 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:44.831197 22102 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:44.831259 22102 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:44.831306 22102 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:44.831318 22102 net.cpp:86] Creating Layer mnist
I0428 19:29:44.831323 22102 net.cpp:382] mnist -> data
I0428 19:29:44.831331 22102 net.cpp:382] mnist -> label
I0428 19:29:44.831424 22102 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:44.833389 22102 net.cpp:124] Setting up mnist
I0428 19:29:44.833417 22102 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:44.833423 22102 net.cpp:131] Top shape: 100 (100)
I0428 19:29:44.833426 22102 net.cpp:139] Memory required for data: 314000
I0428 19:29:44.833431 22102 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:44.833473 22102 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:44.833478 22102 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:44.833484 22102 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:44.833490 22102 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:44.833530 22102 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:44.833535 22102 net.cpp:131] Top shape: 100 (100)
I0428 19:29:44.833539 22102 net.cpp:131] Top shape: 100 (100)
I0428 19:29:44.833542 22102 net.cpp:139] Memory required for data: 314800
I0428 19:29:44.833570 22102 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:44.833578 22102 net.cpp:86] Creating Layer conv0
I0428 19:29:44.833581 22102 net.cpp:408] conv0 <- data
I0428 19:29:44.833586 22102 net.cpp:382] conv0 -> conv0
I0428 19:29:44.835180 22102 net.cpp:124] Setting up conv0
I0428 19:29:44.835193 22102 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:44.835196 22102 net.cpp:139] Memory required for data: 775600
I0428 19:29:44.835220 22102 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:44.835227 22102 net.cpp:86] Creating Layer pool0
I0428 19:29:44.835230 22102 net.cpp:408] pool0 <- conv0
I0428 19:29:44.835235 22102 net.cpp:382] pool0 -> pool0
I0428 19:29:44.835269 22102 net.cpp:124] Setting up pool0
I0428 19:29:44.835276 22102 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:44.835279 22102 net.cpp:139] Memory required for data: 890800
I0428 19:29:44.835283 22102 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:44.835289 22102 net.cpp:86] Creating Layer ip1
I0428 19:29:44.835292 22102 net.cpp:408] ip1 <- pool0
I0428 19:29:44.835296 22102 net.cpp:382] ip1 -> ip1
I0428 19:29:44.835427 22102 net.cpp:124] Setting up ip1
I0428 19:29:44.835449 22102 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:44.835453 22102 net.cpp:139] Memory required for data: 900800
I0428 19:29:44.835474 22102 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:44.835479 22102 net.cpp:86] Creating Layer relu1
I0428 19:29:44.835481 22102 net.cpp:408] relu1 <- ip1
I0428 19:29:44.835485 22102 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:44.835636 22102 net.cpp:124] Setting up relu1
I0428 19:29:44.835644 22102 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:44.835647 22102 net.cpp:139] Memory required for data: 910800
I0428 19:29:44.835650 22102 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:44.835655 22102 net.cpp:86] Creating Layer ip2
I0428 19:29:44.835659 22102 net.cpp:408] ip2 <- ip1
I0428 19:29:44.835664 22102 net.cpp:382] ip2 -> ip2
I0428 19:29:44.835777 22102 net.cpp:124] Setting up ip2
I0428 19:29:44.835784 22102 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:44.835788 22102 net.cpp:139] Memory required for data: 930800
I0428 19:29:44.835794 22102 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:44.835798 22102 net.cpp:86] Creating Layer relu2
I0428 19:29:44.835801 22102 net.cpp:408] relu2 <- ip2
I0428 19:29:44.835805 22102 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:44.836655 22102 net.cpp:124] Setting up relu2
I0428 19:29:44.836668 22102 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:44.836671 22102 net.cpp:139] Memory required for data: 950800
I0428 19:29:44.836674 22102 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:44.836683 22102 net.cpp:86] Creating Layer ip3
I0428 19:29:44.836688 22102 net.cpp:408] ip3 <- ip2
I0428 19:29:44.836693 22102 net.cpp:382] ip3 -> ip3
I0428 19:29:44.836848 22102 net.cpp:124] Setting up ip3
I0428 19:29:44.836870 22102 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:44.836874 22102 net.cpp:139] Memory required for data: 954800
I0428 19:29:44.836879 22102 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:44.836885 22102 net.cpp:86] Creating Layer relu3
I0428 19:29:44.836889 22102 net.cpp:408] relu3 <- ip3
I0428 19:29:44.836894 22102 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:44.837075 22102 net.cpp:124] Setting up relu3
I0428 19:29:44.837085 22102 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:44.837087 22102 net.cpp:139] Memory required for data: 958800
I0428 19:29:44.837091 22102 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:44.837097 22102 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:44.837101 22102 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:44.837106 22102 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:44.837112 22102 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:44.837152 22102 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:44.837173 22102 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:44.837177 22102 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:44.837190 22102 net.cpp:139] Memory required for data: 966800
I0428 19:29:44.837193 22102 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:44.837200 22102 net.cpp:86] Creating Layer accuracy
I0428 19:29:44.837203 22102 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:44.837208 22102 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:44.837213 22102 net.cpp:382] accuracy -> accuracy
I0428 19:29:44.837226 22102 net.cpp:124] Setting up accuracy
I0428 19:29:44.837230 22102 net.cpp:131] Top shape: (1)
I0428 19:29:44.837239 22102 net.cpp:139] Memory required for data: 966804
I0428 19:29:44.837241 22102 layer_factory.hpp:77] Creating layer loss
I0428 19:29:44.837247 22102 net.cpp:86] Creating Layer loss
I0428 19:29:44.837251 22102 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:44.837255 22102 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:44.837258 22102 net.cpp:382] loss -> loss
I0428 19:29:44.837265 22102 layer_factory.hpp:77] Creating layer loss
I0428 19:29:44.837517 22102 net.cpp:124] Setting up loss
I0428 19:29:44.837534 22102 net.cpp:131] Top shape: (1)
I0428 19:29:44.837538 22102 net.cpp:134]     with loss weight 1
I0428 19:29:44.837544 22102 net.cpp:139] Memory required for data: 966808
I0428 19:29:44.837548 22102 net.cpp:200] loss needs backward computation.
I0428 19:29:44.837553 22102 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:44.837555 22102 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:44.837559 22102 net.cpp:200] relu3 needs backward computation.
I0428 19:29:44.837563 22102 net.cpp:200] ip3 needs backward computation.
I0428 19:29:44.837565 22102 net.cpp:200] relu2 needs backward computation.
I0428 19:29:44.837568 22102 net.cpp:200] ip2 needs backward computation.
I0428 19:29:44.837571 22102 net.cpp:200] relu1 needs backward computation.
I0428 19:29:44.837574 22102 net.cpp:200] ip1 needs backward computation.
I0428 19:29:44.837577 22102 net.cpp:200] pool0 needs backward computation.
I0428 19:29:44.837580 22102 net.cpp:200] conv0 needs backward computation.
I0428 19:29:44.837584 22102 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:44.837587 22102 net.cpp:202] mnist does not need backward computation.
I0428 19:29:44.837589 22102 net.cpp:244] This network produces output accuracy
I0428 19:29:44.837594 22102 net.cpp:244] This network produces output loss
I0428 19:29:44.837604 22102 net.cpp:257] Network initialization done.
I0428 19:29:44.837656 22102 solver.cpp:56] Solver scaffolding done.
I0428 19:29:44.838004 22102 caffe.cpp:248] Starting Optimization
I0428 19:29:44.838011 22102 solver.cpp:273] Solving LeNet
I0428 19:29:44.838013 22102 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:44.839481 22102 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:44.841413 22102 blocking_queue.cpp:49] Waiting for data
I0428 19:29:44.915503 22109 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:44.915940 22102 solver.cpp:398]     Test net output #0: accuracy = 0.1159
I0428 19:29:44.915973 22102 solver.cpp:398]     Test net output #1: loss = 2.33799 (* 1 = 2.33799 loss)
I0428 19:29:44.917614 22102 solver.cpp:219] Iteration 0 (0 iter/s, 0.0795747s/100 iters), loss = 2.33497
I0428 19:29:44.917654 22102 solver.cpp:238]     Train net output #0: loss = 2.33497 (* 1 = 2.33497 loss)
I0428 19:29:44.917665 22102 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:44.975594 22102 solver.cpp:219] Iteration 100 (1726.19 iter/s, 0.0579309s/100 iters), loss = 1.18576
I0428 19:29:44.975627 22102 solver.cpp:238]     Train net output #0: loss = 1.18576 (* 1 = 1.18576 loss)
I0428 19:29:44.975649 22102 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:45.031296 22102 solver.cpp:219] Iteration 200 (1796.54 iter/s, 0.0556626s/100 iters), loss = 0.749668
I0428 19:29:45.031325 22102 solver.cpp:238]     Train net output #0: loss = 0.749668 (* 1 = 0.749668 loss)
I0428 19:29:45.031347 22102 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:45.086261 22102 solver.cpp:219] Iteration 300 (1820.52 iter/s, 0.0549293s/100 iters), loss = 0.968189
I0428 19:29:45.086297 22102 solver.cpp:238]     Train net output #0: loss = 0.968189 (* 1 = 0.968189 loss)
I0428 19:29:45.086303 22102 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:45.140878 22102 solver.cpp:219] Iteration 400 (1832.41 iter/s, 0.0545731s/100 iters), loss = 0.648474
I0428 19:29:45.140902 22102 solver.cpp:238]     Train net output #0: loss = 0.648474 (* 1 = 0.648474 loss)
I0428 19:29:45.140908 22102 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:45.195092 22102 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:45.270444 22109 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:45.270872 22102 solver.cpp:398]     Test net output #0: accuracy = 0.6371
I0428 19:29:45.270895 22102 solver.cpp:398]     Test net output #1: loss = 0.939728 (* 1 = 0.939728 loss)
I0428 19:29:45.271551 22102 solver.cpp:219] Iteration 500 (765.475 iter/s, 0.130638s/100 iters), loss = 0.967153
I0428 19:29:45.271574 22102 solver.cpp:238]     Train net output #0: loss = 0.967153 (* 1 = 0.967153 loss)
I0428 19:29:45.271582 22102 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:45.329308 22102 solver.cpp:219] Iteration 600 (1732.35 iter/s, 0.0577249s/100 iters), loss = 1.12288
I0428 19:29:45.329335 22102 solver.cpp:238]     Train net output #0: loss = 1.12288 (* 1 = 1.12288 loss)
I0428 19:29:45.329341 22102 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:45.383827 22102 solver.cpp:219] Iteration 700 (1835.4 iter/s, 0.0544839s/100 iters), loss = 0.81462
I0428 19:29:45.383849 22102 solver.cpp:238]     Train net output #0: loss = 0.81462 (* 1 = 0.81462 loss)
I0428 19:29:45.383855 22102 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:45.438228 22102 solver.cpp:219] Iteration 800 (1839.24 iter/s, 0.0543703s/100 iters), loss = 0.664424
I0428 19:29:45.438251 22102 solver.cpp:238]     Train net output #0: loss = 0.664424 (* 1 = 0.664424 loss)
I0428 19:29:45.438271 22102 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:45.505064 22102 solver.cpp:219] Iteration 900 (1496.97 iter/s, 0.0668017s/100 iters), loss = 0.609597
I0428 19:29:45.505105 22102 solver.cpp:238]     Train net output #0: loss = 0.609597 (* 1 = 0.609597 loss)
I0428 19:29:45.505115 22102 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:45.528187 22108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:45.569564 22102 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:45.570305 22102 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:45.570767 22102 solver.cpp:311] Iteration 1000, loss = 0.460868
I0428 19:29:45.570787 22102 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:45.645723 22109 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:45.646260 22102 solver.cpp:398]     Test net output #0: accuracy = 0.8239
I0428 19:29:45.646293 22102 solver.cpp:398]     Test net output #1: loss = 0.479188 (* 1 = 0.479188 loss)
I0428 19:29:45.646306 22102 solver.cpp:316] Optimization Done.
I0428 19:29:45.646312 22102 caffe.cpp:259] Optimization Done.
