I0428 20:03:22.847075 30171 caffe.cpp:218] Using GPUs 0
I0428 20:03:22.876258 30171 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:23.320106 30171 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test950.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:23.320252 30171 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test950.prototxt
I0428 20:03:23.320618 30171 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:23.320649 30171 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:23.320729 30171 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:23.320796 30171 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:23.320904 30171 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:23.320926 30171 net.cpp:86] Creating Layer mnist
I0428 20:03:23.320935 30171 net.cpp:382] mnist -> data
I0428 20:03:23.320972 30171 net.cpp:382] mnist -> label
I0428 20:03:23.322079 30171 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:23.324391 30171 net.cpp:124] Setting up mnist
I0428 20:03:23.324421 30171 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:23.324429 30171 net.cpp:131] Top shape: 64 (64)
I0428 20:03:23.324432 30171 net.cpp:139] Memory required for data: 200960
I0428 20:03:23.324440 30171 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:23.324455 30171 net.cpp:86] Creating Layer conv0
I0428 20:03:23.324472 30171 net.cpp:408] conv0 <- data
I0428 20:03:23.324483 30171 net.cpp:382] conv0 -> conv0
I0428 20:03:23.551530 30171 net.cpp:124] Setting up conv0
I0428 20:03:23.551571 30171 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:23.551575 30171 net.cpp:139] Memory required for data: 1675520
I0428 20:03:23.551590 30171 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:23.551617 30171 net.cpp:86] Creating Layer pool0
I0428 20:03:23.551622 30171 net.cpp:408] pool0 <- conv0
I0428 20:03:23.551643 30171 net.cpp:382] pool0 -> pool0
I0428 20:03:23.551692 30171 net.cpp:124] Setting up pool0
I0428 20:03:23.551704 30171 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:23.551708 30171 net.cpp:139] Memory required for data: 2044160
I0428 20:03:23.551712 30171 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:23.551723 30171 net.cpp:86] Creating Layer conv1
I0428 20:03:23.551725 30171 net.cpp:408] conv1 <- pool0
I0428 20:03:23.551730 30171 net.cpp:382] conv1 -> conv1
I0428 20:03:23.553794 30171 net.cpp:124] Setting up conv1
I0428 20:03:23.553839 30171 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:23.553843 30171 net.cpp:139] Memory required for data: 3682560
I0428 20:03:23.553866 30171 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:23.553874 30171 net.cpp:86] Creating Layer pool1
I0428 20:03:23.553877 30171 net.cpp:408] pool1 <- conv1
I0428 20:03:23.553882 30171 net.cpp:382] pool1 -> pool1
I0428 20:03:23.553935 30171 net.cpp:124] Setting up pool1
I0428 20:03:23.553941 30171 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:23.553942 30171 net.cpp:139] Memory required for data: 4092160
I0428 20:03:23.553946 30171 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:23.553952 30171 net.cpp:86] Creating Layer ip1
I0428 20:03:23.553956 30171 net.cpp:408] ip1 <- pool1
I0428 20:03:23.553961 30171 net.cpp:382] ip1 -> ip1
I0428 20:03:23.555049 30171 net.cpp:124] Setting up ip1
I0428 20:03:23.555063 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.555076 30171 net.cpp:139] Memory required for data: 4094720
I0428 20:03:23.555085 30171 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:23.555093 30171 net.cpp:86] Creating Layer relu1
I0428 20:03:23.555095 30171 net.cpp:408] relu1 <- ip1
I0428 20:03:23.555100 30171 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:23.555312 30171 net.cpp:124] Setting up relu1
I0428 20:03:23.555321 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.555325 30171 net.cpp:139] Memory required for data: 4097280
I0428 20:03:23.555327 30171 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:23.555333 30171 net.cpp:86] Creating Layer ip2
I0428 20:03:23.555336 30171 net.cpp:408] ip2 <- ip1
I0428 20:03:23.555341 30171 net.cpp:382] ip2 -> ip2
I0428 20:03:23.555428 30171 net.cpp:124] Setting up ip2
I0428 20:03:23.555434 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.555438 30171 net.cpp:139] Memory required for data: 4099840
I0428 20:03:23.555443 30171 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:23.555447 30171 net.cpp:86] Creating Layer relu2
I0428 20:03:23.555451 30171 net.cpp:408] relu2 <- ip2
I0428 20:03:23.555454 30171 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:23.556237 30171 net.cpp:124] Setting up relu2
I0428 20:03:23.556249 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.556268 30171 net.cpp:139] Memory required for data: 4102400
I0428 20:03:23.556272 30171 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:23.556279 30171 net.cpp:86] Creating Layer ip3
I0428 20:03:23.556283 30171 net.cpp:408] ip3 <- ip2
I0428 20:03:23.556288 30171 net.cpp:382] ip3 -> ip3
I0428 20:03:23.556401 30171 net.cpp:124] Setting up ip3
I0428 20:03:23.556409 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.556412 30171 net.cpp:139] Memory required for data: 4104960
I0428 20:03:23.556419 30171 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:23.556424 30171 net.cpp:86] Creating Layer relu3
I0428 20:03:23.556427 30171 net.cpp:408] relu3 <- ip3
I0428 20:03:23.556432 30171 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:23.556591 30171 net.cpp:124] Setting up relu3
I0428 20:03:23.556599 30171 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:23.556602 30171 net.cpp:139] Memory required for data: 4107520
I0428 20:03:23.556605 30171 layer_factory.hpp:77] Creating layer loss
I0428 20:03:23.556610 30171 net.cpp:86] Creating Layer loss
I0428 20:03:23.556614 30171 net.cpp:408] loss <- ip3
I0428 20:03:23.556617 30171 net.cpp:408] loss <- label
I0428 20:03:23.556622 30171 net.cpp:382] loss -> loss
I0428 20:03:23.556637 30171 layer_factory.hpp:77] Creating layer loss
I0428 20:03:23.556895 30171 net.cpp:124] Setting up loss
I0428 20:03:23.556905 30171 net.cpp:131] Top shape: (1)
I0428 20:03:23.556908 30171 net.cpp:134]     with loss weight 1
I0428 20:03:23.556922 30171 net.cpp:139] Memory required for data: 4107524
I0428 20:03:23.556926 30171 net.cpp:200] loss needs backward computation.
I0428 20:03:23.556931 30171 net.cpp:200] relu3 needs backward computation.
I0428 20:03:23.556933 30171 net.cpp:200] ip3 needs backward computation.
I0428 20:03:23.556936 30171 net.cpp:200] relu2 needs backward computation.
I0428 20:03:23.556939 30171 net.cpp:200] ip2 needs backward computation.
I0428 20:03:23.556943 30171 net.cpp:200] relu1 needs backward computation.
I0428 20:03:23.556946 30171 net.cpp:200] ip1 needs backward computation.
I0428 20:03:23.556949 30171 net.cpp:200] pool1 needs backward computation.
I0428 20:03:23.556952 30171 net.cpp:200] conv1 needs backward computation.
I0428 20:03:23.556955 30171 net.cpp:200] pool0 needs backward computation.
I0428 20:03:23.556959 30171 net.cpp:200] conv0 needs backward computation.
I0428 20:03:23.556962 30171 net.cpp:202] mnist does not need backward computation.
I0428 20:03:23.556965 30171 net.cpp:244] This network produces output loss
I0428 20:03:23.556975 30171 net.cpp:257] Network initialization done.
I0428 20:03:23.557358 30171 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test950.prototxt
I0428 20:03:23.557399 30171 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:23.557499 30171 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:23.557593 30171 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:23.557636 30171 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:23.557649 30171 net.cpp:86] Creating Layer mnist
I0428 20:03:23.557654 30171 net.cpp:382] mnist -> data
I0428 20:03:23.557662 30171 net.cpp:382] mnist -> label
I0428 20:03:23.557744 30171 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:23.559804 30171 net.cpp:124] Setting up mnist
I0428 20:03:23.559833 30171 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:23.559849 30171 net.cpp:131] Top shape: 100 (100)
I0428 20:03:23.559851 30171 net.cpp:139] Memory required for data: 314000
I0428 20:03:23.559872 30171 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:23.559880 30171 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:23.559882 30171 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:23.559887 30171 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:23.559895 30171 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:23.559990 30171 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:23.559998 30171 net.cpp:131] Top shape: 100 (100)
I0428 20:03:23.560003 30171 net.cpp:131] Top shape: 100 (100)
I0428 20:03:23.560005 30171 net.cpp:139] Memory required for data: 314800
I0428 20:03:23.560009 30171 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:23.560017 30171 net.cpp:86] Creating Layer conv0
I0428 20:03:23.560020 30171 net.cpp:408] conv0 <- data
I0428 20:03:23.560025 30171 net.cpp:382] conv0 -> conv0
I0428 20:03:23.561715 30171 net.cpp:124] Setting up conv0
I0428 20:03:23.561744 30171 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:23.561748 30171 net.cpp:139] Memory required for data: 2618800
I0428 20:03:23.561758 30171 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:23.561764 30171 net.cpp:86] Creating Layer pool0
I0428 20:03:23.561767 30171 net.cpp:408] pool0 <- conv0
I0428 20:03:23.561772 30171 net.cpp:382] pool0 -> pool0
I0428 20:03:23.561807 30171 net.cpp:124] Setting up pool0
I0428 20:03:23.561813 30171 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:23.561816 30171 net.cpp:139] Memory required for data: 3194800
I0428 20:03:23.561833 30171 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:23.561841 30171 net.cpp:86] Creating Layer conv1
I0428 20:03:23.561844 30171 net.cpp:408] conv1 <- pool0
I0428 20:03:23.561849 30171 net.cpp:382] conv1 -> conv1
I0428 20:03:23.563601 30171 net.cpp:124] Setting up conv1
I0428 20:03:23.563612 30171 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:23.563633 30171 net.cpp:139] Memory required for data: 5754800
I0428 20:03:23.563642 30171 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:23.563649 30171 net.cpp:86] Creating Layer pool1
I0428 20:03:23.563652 30171 net.cpp:408] pool1 <- conv1
I0428 20:03:23.563659 30171 net.cpp:382] pool1 -> pool1
I0428 20:03:23.563726 30171 net.cpp:124] Setting up pool1
I0428 20:03:23.563731 30171 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:23.563735 30171 net.cpp:139] Memory required for data: 6394800
I0428 20:03:23.563738 30171 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:23.563760 30171 net.cpp:86] Creating Layer ip1
I0428 20:03:23.563763 30171 net.cpp:408] ip1 <- pool1
I0428 20:03:23.563769 30171 net.cpp:382] ip1 -> ip1
I0428 20:03:23.563954 30171 net.cpp:124] Setting up ip1
I0428 20:03:23.563961 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.563974 30171 net.cpp:139] Memory required for data: 6398800
I0428 20:03:23.563982 30171 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:23.563988 30171 net.cpp:86] Creating Layer relu1
I0428 20:03:23.563992 30171 net.cpp:408] relu1 <- ip1
I0428 20:03:23.564013 30171 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:23.564196 30171 net.cpp:124] Setting up relu1
I0428 20:03:23.564204 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.564209 30171 net.cpp:139] Memory required for data: 6402800
I0428 20:03:23.564213 30171 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:23.564226 30171 net.cpp:86] Creating Layer ip2
I0428 20:03:23.564230 30171 net.cpp:408] ip2 <- ip1
I0428 20:03:23.564236 30171 net.cpp:382] ip2 -> ip2
I0428 20:03:23.564345 30171 net.cpp:124] Setting up ip2
I0428 20:03:23.564352 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.564355 30171 net.cpp:139] Memory required for data: 6406800
I0428 20:03:23.564360 30171 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:23.564366 30171 net.cpp:86] Creating Layer relu2
I0428 20:03:23.564369 30171 net.cpp:408] relu2 <- ip2
I0428 20:03:23.564373 30171 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:23.564617 30171 net.cpp:124] Setting up relu2
I0428 20:03:23.564642 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.564646 30171 net.cpp:139] Memory required for data: 6410800
I0428 20:03:23.564649 30171 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:23.564656 30171 net.cpp:86] Creating Layer ip3
I0428 20:03:23.564659 30171 net.cpp:408] ip3 <- ip2
I0428 20:03:23.564664 30171 net.cpp:382] ip3 -> ip3
I0428 20:03:23.564766 30171 net.cpp:124] Setting up ip3
I0428 20:03:23.564774 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.564776 30171 net.cpp:139] Memory required for data: 6414800
I0428 20:03:23.564784 30171 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:23.564788 30171 net.cpp:86] Creating Layer relu3
I0428 20:03:23.564791 30171 net.cpp:408] relu3 <- ip3
I0428 20:03:23.564818 30171 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:23.565699 30171 net.cpp:124] Setting up relu3
I0428 20:03:23.565711 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.565729 30171 net.cpp:139] Memory required for data: 6418800
I0428 20:03:23.565732 30171 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:23.565737 30171 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:23.565742 30171 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:23.565748 30171 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:23.565754 30171 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:23.565793 30171 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:23.565798 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.565804 30171 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:23.565806 30171 net.cpp:139] Memory required for data: 6426800
I0428 20:03:23.565809 30171 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:23.565814 30171 net.cpp:86] Creating Layer accuracy
I0428 20:03:23.565824 30171 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:23.565827 30171 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:23.565832 30171 net.cpp:382] accuracy -> accuracy
I0428 20:03:23.565840 30171 net.cpp:124] Setting up accuracy
I0428 20:03:23.565850 30171 net.cpp:131] Top shape: (1)
I0428 20:03:23.565852 30171 net.cpp:139] Memory required for data: 6426804
I0428 20:03:23.565855 30171 layer_factory.hpp:77] Creating layer loss
I0428 20:03:23.565863 30171 net.cpp:86] Creating Layer loss
I0428 20:03:23.565866 30171 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:23.565871 30171 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:23.565874 30171 net.cpp:382] loss -> loss
I0428 20:03:23.565896 30171 layer_factory.hpp:77] Creating layer loss
I0428 20:03:23.566174 30171 net.cpp:124] Setting up loss
I0428 20:03:23.566186 30171 net.cpp:131] Top shape: (1)
I0428 20:03:23.566190 30171 net.cpp:134]     with loss weight 1
I0428 20:03:23.566207 30171 net.cpp:139] Memory required for data: 6426808
I0428 20:03:23.566211 30171 net.cpp:200] loss needs backward computation.
I0428 20:03:23.566215 30171 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:23.566239 30171 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:23.566243 30171 net.cpp:200] relu3 needs backward computation.
I0428 20:03:23.566246 30171 net.cpp:200] ip3 needs backward computation.
I0428 20:03:23.566262 30171 net.cpp:200] relu2 needs backward computation.
I0428 20:03:23.566264 30171 net.cpp:200] ip2 needs backward computation.
I0428 20:03:23.566267 30171 net.cpp:200] relu1 needs backward computation.
I0428 20:03:23.566270 30171 net.cpp:200] ip1 needs backward computation.
I0428 20:03:23.566273 30171 net.cpp:200] pool1 needs backward computation.
I0428 20:03:23.566277 30171 net.cpp:200] conv1 needs backward computation.
I0428 20:03:23.566279 30171 net.cpp:200] pool0 needs backward computation.
I0428 20:03:23.566282 30171 net.cpp:200] conv0 needs backward computation.
I0428 20:03:23.566292 30171 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:23.566295 30171 net.cpp:202] mnist does not need backward computation.
I0428 20:03:23.566298 30171 net.cpp:244] This network produces output accuracy
I0428 20:03:23.566301 30171 net.cpp:244] This network produces output loss
I0428 20:03:23.566313 30171 net.cpp:257] Network initialization done.
I0428 20:03:23.566370 30171 solver.cpp:56] Solver scaffolding done.
I0428 20:03:23.566737 30171 caffe.cpp:248] Starting Optimization
I0428 20:03:23.566742 30171 solver.cpp:273] Solving LeNet
I0428 20:03:23.566745 30171 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:23.567049 30171 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:23.573050 30171 blocking_queue.cpp:49] Waiting for data
I0428 20:03:23.640260 30178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:23.640926 30171 solver.cpp:398]     Test net output #0: accuracy = 0.0857
I0428 20:03:23.640962 30171 solver.cpp:398]     Test net output #1: loss = 2.30782 (* 1 = 2.30782 loss)
I0428 20:03:23.644593 30171 solver.cpp:219] Iteration 0 (0 iter/s, 0.0778045s/100 iters), loss = 2.30674
I0428 20:03:23.644631 30171 solver.cpp:238]     Train net output #0: loss = 2.30674 (* 1 = 2.30674 loss)
I0428 20:03:23.644659 30171 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:23.788527 30171 solver.cpp:219] Iteration 100 (695.018 iter/s, 0.143881s/100 iters), loss = 1.36875
I0428 20:03:23.788568 30171 solver.cpp:238]     Train net output #0: loss = 1.36875 (* 1 = 1.36875 loss)
I0428 20:03:23.788574 30171 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:23.936852 30171 solver.cpp:219] Iteration 200 (674.439 iter/s, 0.148271s/100 iters), loss = 0.671101
I0428 20:03:23.936893 30171 solver.cpp:238]     Train net output #0: loss = 0.671101 (* 1 = 0.671101 loss)
I0428 20:03:23.936900 30171 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:24.083979 30171 solver.cpp:219] Iteration 300 (679.863 iter/s, 0.147088s/100 iters), loss = 0.575201
I0428 20:03:24.084020 30171 solver.cpp:238]     Train net output #0: loss = 0.575201 (* 1 = 0.575201 loss)
I0428 20:03:24.084028 30171 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:24.235590 30171 solver.cpp:219] Iteration 400 (659.813 iter/s, 0.151558s/100 iters), loss = 0.339036
I0428 20:03:24.235617 30171 solver.cpp:238]     Train net output #0: loss = 0.339036 (* 1 = 0.339036 loss)
I0428 20:03:24.235625 30171 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:24.378278 30171 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:24.432919 30178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:24.434803 30171 solver.cpp:398]     Test net output #0: accuracy = 0.9109
I0428 20:03:24.434839 30171 solver.cpp:398]     Test net output #1: loss = 0.2822 (* 1 = 0.2822 loss)
I0428 20:03:24.436287 30171 solver.cpp:219] Iteration 500 (498.366 iter/s, 0.200656s/100 iters), loss = 0.341391
I0428 20:03:24.436358 30171 solver.cpp:238]     Train net output #0: loss = 0.34139 (* 1 = 0.34139 loss)
I0428 20:03:24.436377 30171 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:24.596356 30171 solver.cpp:219] Iteration 600 (625 iter/s, 0.16s/100 iters), loss = 0.130033
I0428 20:03:24.596400 30171 solver.cpp:238]     Train net output #0: loss = 0.130033 (* 1 = 0.130033 loss)
I0428 20:03:24.596410 30171 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:24.746467 30171 solver.cpp:219] Iteration 700 (666.377 iter/s, 0.150065s/100 iters), loss = 0.334886
I0428 20:03:24.746505 30171 solver.cpp:238]     Train net output #0: loss = 0.334886 (* 1 = 0.334886 loss)
I0428 20:03:24.746511 30171 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:24.895275 30171 solver.cpp:219] Iteration 800 (672.179 iter/s, 0.14877s/100 iters), loss = 0.41467
I0428 20:03:24.895318 30171 solver.cpp:238]     Train net output #0: loss = 0.41467 (* 1 = 0.41467 loss)
I0428 20:03:24.895323 30171 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:25.046499 30171 solver.cpp:219] Iteration 900 (661.44 iter/s, 0.151185s/100 iters), loss = 0.23509
I0428 20:03:25.046540 30171 solver.cpp:238]     Train net output #0: loss = 0.23509 (* 1 = 0.23509 loss)
I0428 20:03:25.046547 30171 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:25.094135 30177 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:25.191211 30171 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:25.193148 30171 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:25.193990 30171 solver.cpp:311] Iteration 1000, loss = 0.117226
I0428 20:03:25.194005 30171 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:25.248654 30178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:25.250593 30171 solver.cpp:398]     Test net output #0: accuracy = 0.9588
I0428 20:03:25.250627 30171 solver.cpp:398]     Test net output #1: loss = 0.141894 (* 1 = 0.141894 loss)
I0428 20:03:25.250633 30171 solver.cpp:316] Optimization Done.
I0428 20:03:25.250635 30171 caffe.cpp:259] Optimization Done.
