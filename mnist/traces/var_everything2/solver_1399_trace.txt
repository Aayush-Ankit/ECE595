I0428 20:22:10.092458  1910 caffe.cpp:218] Using GPUs 0
I0428 20:22:10.131371  1910 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:10.643697  1910 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1399.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:10.643837  1910 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1399.prototxt
I0428 20:22:10.644246  1910 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:10.644268  1910 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:10.644371  1910 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:22:10.644450  1910 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:10.644549  1910 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:10.644572  1910 net.cpp:86] Creating Layer mnist
I0428 20:22:10.644582  1910 net.cpp:382] mnist -> data
I0428 20:22:10.644603  1910 net.cpp:382] mnist -> label
I0428 20:22:10.645763  1910 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:10.648342  1910 net.cpp:124] Setting up mnist
I0428 20:22:10.648360  1910 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:10.648366  1910 net.cpp:131] Top shape: 64 (64)
I0428 20:22:10.648370  1910 net.cpp:139] Memory required for data: 200960
I0428 20:22:10.648377  1910 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:10.648419  1910 net.cpp:86] Creating Layer conv0
I0428 20:22:10.648442  1910 net.cpp:408] conv0 <- data
I0428 20:22:10.648457  1910 net.cpp:382] conv0 -> conv0
I0428 20:22:10.936714  1910 net.cpp:124] Setting up conv0
I0428 20:22:10.936743  1910 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:10.936746  1910 net.cpp:139] Memory required for data: 7573760
I0428 20:22:10.936761  1910 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:10.936775  1910 net.cpp:86] Creating Layer pool0
I0428 20:22:10.936780  1910 net.cpp:408] pool0 <- conv0
I0428 20:22:10.936785  1910 net.cpp:382] pool0 -> pool0
I0428 20:22:10.936836  1910 net.cpp:124] Setting up pool0
I0428 20:22:10.936859  1910 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:10.936862  1910 net.cpp:139] Memory required for data: 9416960
I0428 20:22:10.936866  1910 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:10.936877  1910 net.cpp:86] Creating Layer conv1
I0428 20:22:10.936879  1910 net.cpp:408] conv1 <- pool0
I0428 20:22:10.936884  1910 net.cpp:382] conv1 -> conv1
I0428 20:22:10.939157  1910 net.cpp:124] Setting up conv1
I0428 20:22:10.939173  1910 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:22:10.939177  1910 net.cpp:139] Memory required for data: 10236160
I0428 20:22:10.939185  1910 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:10.939193  1910 net.cpp:86] Creating Layer pool1
I0428 20:22:10.939196  1910 net.cpp:408] pool1 <- conv1
I0428 20:22:10.939203  1910 net.cpp:382] pool1 -> pool1
I0428 20:22:10.939237  1910 net.cpp:124] Setting up pool1
I0428 20:22:10.939244  1910 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:22:10.939246  1910 net.cpp:139] Memory required for data: 10440960
I0428 20:22:10.939249  1910 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:10.939255  1910 net.cpp:86] Creating Layer ip1
I0428 20:22:10.939258  1910 net.cpp:408] ip1 <- pool1
I0428 20:22:10.939263  1910 net.cpp:382] ip1 -> ip1
I0428 20:22:10.939586  1910 net.cpp:124] Setting up ip1
I0428 20:22:10.939594  1910 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:22:10.939597  1910 net.cpp:139] Memory required for data: 10453760
I0428 20:22:10.939604  1910 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:10.939610  1910 net.cpp:86] Creating Layer relu1
I0428 20:22:10.939613  1910 net.cpp:408] relu1 <- ip1
I0428 20:22:10.939617  1910 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:10.939795  1910 net.cpp:124] Setting up relu1
I0428 20:22:10.939805  1910 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:22:10.939808  1910 net.cpp:139] Memory required for data: 10466560
I0428 20:22:10.939811  1910 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:10.939818  1910 net.cpp:86] Creating Layer ip2
I0428 20:22:10.939821  1910 net.cpp:408] ip2 <- ip1
I0428 20:22:10.939826  1910 net.cpp:382] ip2 -> ip2
I0428 20:22:10.939934  1910 net.cpp:124] Setting up ip2
I0428 20:22:10.939941  1910 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:10.939944  1910 net.cpp:139] Memory required for data: 10472960
I0428 20:22:10.939949  1910 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:10.939955  1910 net.cpp:86] Creating Layer relu2
I0428 20:22:10.939959  1910 net.cpp:408] relu2 <- ip2
I0428 20:22:10.939962  1910 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:10.940675  1910 net.cpp:124] Setting up relu2
I0428 20:22:10.940687  1910 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:10.940706  1910 net.cpp:139] Memory required for data: 10479360
I0428 20:22:10.940711  1910 layer_factory.hpp:77] Creating layer ip3
I0428 20:22:10.940718  1910 net.cpp:86] Creating Layer ip3
I0428 20:22:10.940723  1910 net.cpp:408] ip3 <- ip2
I0428 20:22:10.940732  1910 net.cpp:382] ip3 -> ip3
I0428 20:22:10.940874  1910 net.cpp:124] Setting up ip3
I0428 20:22:10.940886  1910 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:10.940888  1910 net.cpp:139] Memory required for data: 10481920
I0428 20:22:10.940896  1910 layer_factory.hpp:77] Creating layer relu3
I0428 20:22:10.940902  1910 net.cpp:86] Creating Layer relu3
I0428 20:22:10.940906  1910 net.cpp:408] relu3 <- ip3
I0428 20:22:10.940909  1910 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:22:10.941095  1910 net.cpp:124] Setting up relu3
I0428 20:22:10.941119  1910 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:10.941123  1910 net.cpp:139] Memory required for data: 10484480
I0428 20:22:10.941125  1910 layer_factory.hpp:77] Creating layer loss
I0428 20:22:10.941131  1910 net.cpp:86] Creating Layer loss
I0428 20:22:10.941134  1910 net.cpp:408] loss <- ip3
I0428 20:22:10.941138  1910 net.cpp:408] loss <- label
I0428 20:22:10.941143  1910 net.cpp:382] loss -> loss
I0428 20:22:10.941156  1910 layer_factory.hpp:77] Creating layer loss
I0428 20:22:10.941364  1910 net.cpp:124] Setting up loss
I0428 20:22:10.941372  1910 net.cpp:131] Top shape: (1)
I0428 20:22:10.941375  1910 net.cpp:134]     with loss weight 1
I0428 20:22:10.941390  1910 net.cpp:139] Memory required for data: 10484484
I0428 20:22:10.941392  1910 net.cpp:200] loss needs backward computation.
I0428 20:22:10.941396  1910 net.cpp:200] relu3 needs backward computation.
I0428 20:22:10.941398  1910 net.cpp:200] ip3 needs backward computation.
I0428 20:22:10.941401  1910 net.cpp:200] relu2 needs backward computation.
I0428 20:22:10.941404  1910 net.cpp:200] ip2 needs backward computation.
I0428 20:22:10.941407  1910 net.cpp:200] relu1 needs backward computation.
I0428 20:22:10.941409  1910 net.cpp:200] ip1 needs backward computation.
I0428 20:22:10.941412  1910 net.cpp:200] pool1 needs backward computation.
I0428 20:22:10.941416  1910 net.cpp:200] conv1 needs backward computation.
I0428 20:22:10.941418  1910 net.cpp:200] pool0 needs backward computation.
I0428 20:22:10.941421  1910 net.cpp:200] conv0 needs backward computation.
I0428 20:22:10.941426  1910 net.cpp:202] mnist does not need backward computation.
I0428 20:22:10.941427  1910 net.cpp:244] This network produces output loss
I0428 20:22:10.941437  1910 net.cpp:257] Network initialization done.
I0428 20:22:10.941787  1910 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1399.prototxt
I0428 20:22:10.941814  1910 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:10.941905  1910 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:22:10.941988  1910 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:10.942034  1910 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:10.942045  1910 net.cpp:86] Creating Layer mnist
I0428 20:22:10.942049  1910 net.cpp:382] mnist -> data
I0428 20:22:10.942056  1910 net.cpp:382] mnist -> label
I0428 20:22:10.942157  1910 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:10.944077  1910 net.cpp:124] Setting up mnist
I0428 20:22:10.944089  1910 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:10.944095  1910 net.cpp:131] Top shape: 100 (100)
I0428 20:22:10.944098  1910 net.cpp:139] Memory required for data: 314000
I0428 20:22:10.944102  1910 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:10.944108  1910 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:10.944111  1910 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:10.944116  1910 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:10.944123  1910 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:10.944159  1910 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:10.944164  1910 net.cpp:131] Top shape: 100 (100)
I0428 20:22:10.944166  1910 net.cpp:131] Top shape: 100 (100)
I0428 20:22:10.944169  1910 net.cpp:139] Memory required for data: 314800
I0428 20:22:10.944172  1910 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:10.944180  1910 net.cpp:86] Creating Layer conv0
I0428 20:22:10.944183  1910 net.cpp:408] conv0 <- data
I0428 20:22:10.944187  1910 net.cpp:382] conv0 -> conv0
I0428 20:22:10.945966  1910 net.cpp:124] Setting up conv0
I0428 20:22:10.945979  1910 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:10.945983  1910 net.cpp:139] Memory required for data: 11834800
I0428 20:22:10.945992  1910 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:10.945999  1910 net.cpp:86] Creating Layer pool0
I0428 20:22:10.946002  1910 net.cpp:408] pool0 <- conv0
I0428 20:22:10.946007  1910 net.cpp:382] pool0 -> pool0
I0428 20:22:10.946040  1910 net.cpp:124] Setting up pool0
I0428 20:22:10.946045  1910 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:10.946048  1910 net.cpp:139] Memory required for data: 14714800
I0428 20:22:10.946051  1910 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:10.946059  1910 net.cpp:86] Creating Layer conv1
I0428 20:22:10.946063  1910 net.cpp:408] conv1 <- pool0
I0428 20:22:10.946066  1910 net.cpp:382] conv1 -> conv1
I0428 20:22:10.947937  1910 net.cpp:124] Setting up conv1
I0428 20:22:10.947950  1910 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:22:10.947955  1910 net.cpp:139] Memory required for data: 15994800
I0428 20:22:10.947963  1910 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:10.947976  1910 net.cpp:86] Creating Layer pool1
I0428 20:22:10.947984  1910 net.cpp:408] pool1 <- conv1
I0428 20:22:10.947991  1910 net.cpp:382] pool1 -> pool1
I0428 20:22:10.948029  1910 net.cpp:124] Setting up pool1
I0428 20:22:10.948034  1910 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:22:10.948036  1910 net.cpp:139] Memory required for data: 16314800
I0428 20:22:10.948040  1910 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:10.948046  1910 net.cpp:86] Creating Layer ip1
I0428 20:22:10.948050  1910 net.cpp:408] ip1 <- pool1
I0428 20:22:10.948058  1910 net.cpp:382] ip1 -> ip1
I0428 20:22:10.948384  1910 net.cpp:124] Setting up ip1
I0428 20:22:10.948391  1910 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:22:10.948405  1910 net.cpp:139] Memory required for data: 16334800
I0428 20:22:10.948411  1910 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:10.948417  1910 net.cpp:86] Creating Layer relu1
I0428 20:22:10.948421  1910 net.cpp:408] relu1 <- ip1
I0428 20:22:10.948426  1910 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:10.948726  1910 net.cpp:124] Setting up relu1
I0428 20:22:10.948736  1910 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:22:10.948740  1910 net.cpp:139] Memory required for data: 16354800
I0428 20:22:10.948743  1910 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:10.948751  1910 net.cpp:86] Creating Layer ip2
I0428 20:22:10.948757  1910 net.cpp:408] ip2 <- ip1
I0428 20:22:10.948766  1910 net.cpp:382] ip2 -> ip2
I0428 20:22:10.948982  1910 net.cpp:124] Setting up ip2
I0428 20:22:10.949007  1910 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:10.949012  1910 net.cpp:139] Memory required for data: 16364800
I0428 20:22:10.949019  1910 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:10.949024  1910 net.cpp:86] Creating Layer relu2
I0428 20:22:10.949039  1910 net.cpp:408] relu2 <- ip2
I0428 20:22:10.949044  1910 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:10.949205  1910 net.cpp:124] Setting up relu2
I0428 20:22:10.949214  1910 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:10.949218  1910 net.cpp:139] Memory required for data: 16374800
I0428 20:22:10.949220  1910 layer_factory.hpp:77] Creating layer ip3
I0428 20:22:10.949226  1910 net.cpp:86] Creating Layer ip3
I0428 20:22:10.949229  1910 net.cpp:408] ip3 <- ip2
I0428 20:22:10.949235  1910 net.cpp:382] ip3 -> ip3
I0428 20:22:10.949333  1910 net.cpp:124] Setting up ip3
I0428 20:22:10.949340  1910 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:10.949343  1910 net.cpp:139] Memory required for data: 16378800
I0428 20:22:10.949352  1910 layer_factory.hpp:77] Creating layer relu3
I0428 20:22:10.949355  1910 net.cpp:86] Creating Layer relu3
I0428 20:22:10.949358  1910 net.cpp:408] relu3 <- ip3
I0428 20:22:10.949363  1910 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:22:10.950132  1910 net.cpp:124] Setting up relu3
I0428 20:22:10.950145  1910 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:10.950148  1910 net.cpp:139] Memory required for data: 16382800
I0428 20:22:10.950151  1910 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:22:10.950156  1910 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:22:10.950160  1910 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:22:10.950166  1910 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:22:10.950176  1910 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:22:10.950234  1910 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:22:10.950248  1910 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:10.950253  1910 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:10.950258  1910 net.cpp:139] Memory required for data: 16390800
I0428 20:22:10.950263  1910 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:10.950269  1910 net.cpp:86] Creating Layer accuracy
I0428 20:22:10.950273  1910 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:22:10.950276  1910 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:10.950281  1910 net.cpp:382] accuracy -> accuracy
I0428 20:22:10.950289  1910 net.cpp:124] Setting up accuracy
I0428 20:22:10.950292  1910 net.cpp:131] Top shape: (1)
I0428 20:22:10.950295  1910 net.cpp:139] Memory required for data: 16390804
I0428 20:22:10.950299  1910 layer_factory.hpp:77] Creating layer loss
I0428 20:22:10.950309  1910 net.cpp:86] Creating Layer loss
I0428 20:22:10.950312  1910 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:22:10.950315  1910 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:10.950320  1910 net.cpp:382] loss -> loss
I0428 20:22:10.950330  1910 layer_factory.hpp:77] Creating layer loss
I0428 20:22:10.950567  1910 net.cpp:124] Setting up loss
I0428 20:22:10.950577  1910 net.cpp:131] Top shape: (1)
I0428 20:22:10.950579  1910 net.cpp:134]     with loss weight 1
I0428 20:22:10.950595  1910 net.cpp:139] Memory required for data: 16390808
I0428 20:22:10.950599  1910 net.cpp:200] loss needs backward computation.
I0428 20:22:10.950609  1910 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:10.950613  1910 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:22:10.950626  1910 net.cpp:200] relu3 needs backward computation.
I0428 20:22:10.950628  1910 net.cpp:200] ip3 needs backward computation.
I0428 20:22:10.950631  1910 net.cpp:200] relu2 needs backward computation.
I0428 20:22:10.950639  1910 net.cpp:200] ip2 needs backward computation.
I0428 20:22:10.950641  1910 net.cpp:200] relu1 needs backward computation.
I0428 20:22:10.950644  1910 net.cpp:200] ip1 needs backward computation.
I0428 20:22:10.950647  1910 net.cpp:200] pool1 needs backward computation.
I0428 20:22:10.950650  1910 net.cpp:200] conv1 needs backward computation.
I0428 20:22:10.950652  1910 net.cpp:200] pool0 needs backward computation.
I0428 20:22:10.950655  1910 net.cpp:200] conv0 needs backward computation.
I0428 20:22:10.950659  1910 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:10.950662  1910 net.cpp:202] mnist does not need backward computation.
I0428 20:22:10.950665  1910 net.cpp:244] This network produces output accuracy
I0428 20:22:10.950669  1910 net.cpp:244] This network produces output loss
I0428 20:22:10.950680  1910 net.cpp:257] Network initialization done.
I0428 20:22:10.950721  1910 solver.cpp:56] Solver scaffolding done.
I0428 20:22:10.951050  1910 caffe.cpp:248] Starting Optimization
I0428 20:22:10.951056  1910 solver.cpp:273] Solving LeNet
I0428 20:22:10.951061  1910 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:10.951247  1910 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:10.960093  1910 blocking_queue.cpp:49] Waiting for data
I0428 20:22:11.029006  1922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:11.030007  1910 solver.cpp:398]     Test net output #0: accuracy = 0.0854
I0428 20:22:11.030030  1910 solver.cpp:398]     Test net output #1: loss = 2.32151 (* 1 = 2.32151 loss)
I0428 20:22:11.035001  1910 solver.cpp:219] Iteration 0 (-1.39381e-31 iter/s, 0.0839147s/100 iters), loss = 2.30218
I0428 20:22:11.035024  1910 solver.cpp:238]     Train net output #0: loss = 2.30218 (* 1 = 2.30218 loss)
I0428 20:22:11.035050  1910 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:11.195261  1910 solver.cpp:219] Iteration 100 (624.161 iter/s, 0.160215s/100 iters), loss = 0.761659
I0428 20:22:11.195286  1910 solver.cpp:238]     Train net output #0: loss = 0.761659 (* 1 = 0.761659 loss)
I0428 20:22:11.195291  1910 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:11.355486  1910 solver.cpp:219] Iteration 200 (624.265 iter/s, 0.160188s/100 iters), loss = 0.46895
I0428 20:22:11.355511  1910 solver.cpp:238]     Train net output #0: loss = 0.46895 (* 1 = 0.46895 loss)
I0428 20:22:11.355532  1910 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:11.514395  1910 solver.cpp:219] Iteration 300 (629.439 iter/s, 0.158872s/100 iters), loss = 0.351566
I0428 20:22:11.514418  1910 solver.cpp:238]     Train net output #0: loss = 0.351566 (* 1 = 0.351566 loss)
I0428 20:22:11.514439  1910 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:11.673326  1910 solver.cpp:219] Iteration 400 (629.35 iter/s, 0.158894s/100 iters), loss = 0.235447
I0428 20:22:11.673349  1910 solver.cpp:238]     Train net output #0: loss = 0.235447 (* 1 = 0.235447 loss)
I0428 20:22:11.673355  1910 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:11.830381  1910 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:11.903154  1922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:11.905789  1910 solver.cpp:398]     Test net output #0: accuracy = 0.8501
I0428 20:22:11.905808  1910 solver.cpp:398]     Test net output #1: loss = 0.383547 (* 1 = 0.383547 loss)
I0428 20:22:11.907232  1910 solver.cpp:219] Iteration 500 (427.595 iter/s, 0.233866s/100 iters), loss = 0.385707
I0428 20:22:11.907269  1910 solver.cpp:238]     Train net output #0: loss = 0.385707 (* 1 = 0.385707 loss)
I0428 20:22:11.907292  1910 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:12.067637  1910 solver.cpp:219] Iteration 600 (623.612 iter/s, 0.160356s/100 iters), loss = 0.48182
I0428 20:22:12.067662  1910 solver.cpp:238]     Train net output #0: loss = 0.48182 (* 1 = 0.48182 loss)
I0428 20:22:12.067682  1910 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:12.226980  1910 solver.cpp:219] Iteration 700 (627.728 iter/s, 0.159305s/100 iters), loss = 0.298692
I0428 20:22:12.227011  1910 solver.cpp:238]     Train net output #0: loss = 0.298692 (* 1 = 0.298692 loss)
I0428 20:22:12.227018  1910 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:12.394403  1910 solver.cpp:219] Iteration 800 (597.45 iter/s, 0.167378s/100 iters), loss = 0.254346
I0428 20:22:12.394436  1910 solver.cpp:238]     Train net output #0: loss = 0.254346 (* 1 = 0.254346 loss)
I0428 20:22:12.394455  1910 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:12.557395  1910 solver.cpp:219] Iteration 900 (613.704 iter/s, 0.162945s/100 iters), loss = 0.0700138
I0428 20:22:12.557430  1910 solver.cpp:238]     Train net output #0: loss = 0.0700138 (* 1 = 0.0700138 loss)
I0428 20:22:12.557438  1910 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:12.612192  1917 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:12.716305  1910 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:12.718816  1910 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:12.720211  1910 solver.cpp:311] Iteration 1000, loss = 0.120853
I0428 20:22:12.720227  1910 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:12.791153  1922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:12.793788  1910 solver.cpp:398]     Test net output #0: accuracy = 0.9755
I0428 20:22:12.793807  1910 solver.cpp:398]     Test net output #1: loss = 0.0787478 (* 1 = 0.0787478 loss)
I0428 20:22:12.793812  1910 solver.cpp:316] Optimization Done.
I0428 20:22:12.793829  1910 caffe.cpp:259] Optimization Done.
