I0428 19:49:53.099521 26879 caffe.cpp:218] Using GPUs 0
I0428 19:49:53.133209 26879 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:53.643182 26879 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test588.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:53.643333 26879 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test588.prototxt
I0428 19:49:53.643715 26879 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:53.643734 26879 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:53.643823 26879 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:53.643898 26879 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:53.643996 26879 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:53.644021 26879 net.cpp:86] Creating Layer mnist
I0428 19:49:53.644031 26879 net.cpp:382] mnist -> data
I0428 19:49:53.644052 26879 net.cpp:382] mnist -> label
I0428 19:49:53.645153 26879 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:53.647608 26879 net.cpp:124] Setting up mnist
I0428 19:49:53.647625 26879 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:53.647634 26879 net.cpp:131] Top shape: 64 (64)
I0428 19:49:53.647636 26879 net.cpp:139] Memory required for data: 200960
I0428 19:49:53.647644 26879 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:53.647658 26879 net.cpp:86] Creating Layer conv0
I0428 19:49:53.647663 26879 net.cpp:408] conv0 <- data
I0428 19:49:53.647676 26879 net.cpp:382] conv0 -> conv0
I0428 19:49:53.896111 26879 net.cpp:124] Setting up conv0
I0428 19:49:53.896152 26879 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:53.896157 26879 net.cpp:139] Memory required for data: 938240
I0428 19:49:53.896189 26879 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:53.896216 26879 net.cpp:86] Creating Layer pool0
I0428 19:49:53.896220 26879 net.cpp:408] pool0 <- conv0
I0428 19:49:53.896225 26879 net.cpp:382] pool0 -> pool0
I0428 19:49:53.896272 26879 net.cpp:124] Setting up pool0
I0428 19:49:53.896286 26879 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:53.896288 26879 net.cpp:139] Memory required for data: 1122560
I0428 19:49:53.896291 26879 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:53.896301 26879 net.cpp:86] Creating Layer conv1
I0428 19:49:53.896306 26879 net.cpp:408] conv1 <- pool0
I0428 19:49:53.896309 26879 net.cpp:382] conv1 -> conv1
I0428 19:49:53.899055 26879 net.cpp:124] Setting up conv1
I0428 19:49:53.899085 26879 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:49:53.899089 26879 net.cpp:139] Memory required for data: 1286400
I0428 19:49:53.899097 26879 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:53.899106 26879 net.cpp:86] Creating Layer pool1
I0428 19:49:53.899109 26879 net.cpp:408] pool1 <- conv1
I0428 19:49:53.899114 26879 net.cpp:382] pool1 -> pool1
I0428 19:49:53.899152 26879 net.cpp:124] Setting up pool1
I0428 19:49:53.899158 26879 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:49:53.899160 26879 net.cpp:139] Memory required for data: 1327360
I0428 19:49:53.899163 26879 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:53.899184 26879 net.cpp:86] Creating Layer ip1
I0428 19:49:53.899188 26879 net.cpp:408] ip1 <- pool1
I0428 19:49:53.899191 26879 net.cpp:382] ip1 -> ip1
I0428 19:49:53.899291 26879 net.cpp:124] Setting up ip1
I0428 19:49:53.899299 26879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:53.899302 26879 net.cpp:139] Memory required for data: 1329920
I0428 19:49:53.899308 26879 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:53.899313 26879 net.cpp:86] Creating Layer relu1
I0428 19:49:53.899317 26879 net.cpp:408] relu1 <- ip1
I0428 19:49:53.899320 26879 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:53.899476 26879 net.cpp:124] Setting up relu1
I0428 19:49:53.899484 26879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:53.899487 26879 net.cpp:139] Memory required for data: 1332480
I0428 19:49:53.899490 26879 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:53.899497 26879 net.cpp:86] Creating Layer ip2
I0428 19:49:53.899499 26879 net.cpp:408] ip2 <- ip1
I0428 19:49:53.899504 26879 net.cpp:382] ip2 -> ip2
I0428 19:49:53.899595 26879 net.cpp:124] Setting up ip2
I0428 19:49:53.899600 26879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:53.899603 26879 net.cpp:139] Memory required for data: 1335040
I0428 19:49:53.899610 26879 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:53.899615 26879 net.cpp:86] Creating Layer relu2
I0428 19:49:53.899617 26879 net.cpp:408] relu2 <- ip2
I0428 19:49:53.899621 26879 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:53.900440 26879 net.cpp:124] Setting up relu2
I0428 19:49:53.900451 26879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:53.900470 26879 net.cpp:139] Memory required for data: 1337600
I0428 19:49:53.900473 26879 layer_factory.hpp:77] Creating layer loss
I0428 19:49:53.900480 26879 net.cpp:86] Creating Layer loss
I0428 19:49:53.900483 26879 net.cpp:408] loss <- ip2
I0428 19:49:53.900488 26879 net.cpp:408] loss <- label
I0428 19:49:53.900493 26879 net.cpp:382] loss -> loss
I0428 19:49:53.900512 26879 layer_factory.hpp:77] Creating layer loss
I0428 19:49:53.900766 26879 net.cpp:124] Setting up loss
I0428 19:49:53.900776 26879 net.cpp:131] Top shape: (1)
I0428 19:49:53.900779 26879 net.cpp:134]     with loss weight 1
I0428 19:49:53.900792 26879 net.cpp:139] Memory required for data: 1337604
I0428 19:49:53.900795 26879 net.cpp:200] loss needs backward computation.
I0428 19:49:53.900799 26879 net.cpp:200] relu2 needs backward computation.
I0428 19:49:53.900802 26879 net.cpp:200] ip2 needs backward computation.
I0428 19:49:53.900804 26879 net.cpp:200] relu1 needs backward computation.
I0428 19:49:53.900807 26879 net.cpp:200] ip1 needs backward computation.
I0428 19:49:53.900841 26879 net.cpp:200] pool1 needs backward computation.
I0428 19:49:53.900845 26879 net.cpp:200] conv1 needs backward computation.
I0428 19:49:53.900847 26879 net.cpp:200] pool0 needs backward computation.
I0428 19:49:53.900851 26879 net.cpp:200] conv0 needs backward computation.
I0428 19:49:53.900853 26879 net.cpp:202] mnist does not need backward computation.
I0428 19:49:53.900856 26879 net.cpp:244] This network produces output loss
I0428 19:49:53.900887 26879 net.cpp:257] Network initialization done.
I0428 19:49:53.901239 26879 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test588.prototxt
I0428 19:49:53.901281 26879 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:53.901382 26879 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:53.901460 26879 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:53.901502 26879 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:53.901515 26879 net.cpp:86] Creating Layer mnist
I0428 19:49:53.901520 26879 net.cpp:382] mnist -> data
I0428 19:49:53.901528 26879 net.cpp:382] mnist -> label
I0428 19:49:53.901631 26879 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:53.903550 26879 net.cpp:124] Setting up mnist
I0428 19:49:53.903578 26879 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:53.903584 26879 net.cpp:131] Top shape: 100 (100)
I0428 19:49:53.903586 26879 net.cpp:139] Memory required for data: 314000
I0428 19:49:53.903604 26879 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:53.903632 26879 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:53.903636 26879 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:53.903640 26879 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:53.903659 26879 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:53.903766 26879 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:53.903784 26879 net.cpp:131] Top shape: 100 (100)
I0428 19:49:53.903789 26879 net.cpp:131] Top shape: 100 (100)
I0428 19:49:53.903791 26879 net.cpp:139] Memory required for data: 314800
I0428 19:49:53.903795 26879 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:53.903805 26879 net.cpp:86] Creating Layer conv0
I0428 19:49:53.903810 26879 net.cpp:408] conv0 <- data
I0428 19:49:53.903815 26879 net.cpp:382] conv0 -> conv0
I0428 19:49:53.905622 26879 net.cpp:124] Setting up conv0
I0428 19:49:53.905652 26879 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:53.905655 26879 net.cpp:139] Memory required for data: 1466800
I0428 19:49:53.905664 26879 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:53.905676 26879 net.cpp:86] Creating Layer pool0
I0428 19:49:53.905679 26879 net.cpp:408] pool0 <- conv0
I0428 19:49:53.905685 26879 net.cpp:382] pool0 -> pool0
I0428 19:49:53.905722 26879 net.cpp:124] Setting up pool0
I0428 19:49:53.905728 26879 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:53.905731 26879 net.cpp:139] Memory required for data: 1754800
I0428 19:49:53.905735 26879 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:53.905745 26879 net.cpp:86] Creating Layer conv1
I0428 19:49:53.905747 26879 net.cpp:408] conv1 <- pool0
I0428 19:49:53.905753 26879 net.cpp:382] conv1 -> conv1
I0428 19:49:53.907874 26879 net.cpp:124] Setting up conv1
I0428 19:49:53.907903 26879 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:49:53.907907 26879 net.cpp:139] Memory required for data: 2010800
I0428 19:49:53.907917 26879 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:53.907925 26879 net.cpp:86] Creating Layer pool1
I0428 19:49:53.907928 26879 net.cpp:408] pool1 <- conv1
I0428 19:49:53.907933 26879 net.cpp:382] pool1 -> pool1
I0428 19:49:53.907995 26879 net.cpp:124] Setting up pool1
I0428 19:49:53.908011 26879 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:49:53.908015 26879 net.cpp:139] Memory required for data: 2074800
I0428 19:49:53.908017 26879 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:53.908022 26879 net.cpp:86] Creating Layer ip1
I0428 19:49:53.908032 26879 net.cpp:408] ip1 <- pool1
I0428 19:49:53.908038 26879 net.cpp:382] ip1 -> ip1
I0428 19:49:53.908182 26879 net.cpp:124] Setting up ip1
I0428 19:49:53.908190 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.908193 26879 net.cpp:139] Memory required for data: 2078800
I0428 19:49:53.908200 26879 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:53.908206 26879 net.cpp:86] Creating Layer relu1
I0428 19:49:53.908210 26879 net.cpp:408] relu1 <- ip1
I0428 19:49:53.908216 26879 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:53.908450 26879 net.cpp:124] Setting up relu1
I0428 19:49:53.908459 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.908463 26879 net.cpp:139] Memory required for data: 2082800
I0428 19:49:53.908478 26879 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:53.908485 26879 net.cpp:86] Creating Layer ip2
I0428 19:49:53.908504 26879 net.cpp:408] ip2 <- ip1
I0428 19:49:53.908509 26879 net.cpp:382] ip2 -> ip2
I0428 19:49:53.908607 26879 net.cpp:124] Setting up ip2
I0428 19:49:53.908614 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.908617 26879 net.cpp:139] Memory required for data: 2086800
I0428 19:49:53.908623 26879 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:53.908628 26879 net.cpp:86] Creating Layer relu2
I0428 19:49:53.908632 26879 net.cpp:408] relu2 <- ip2
I0428 19:49:53.908638 26879 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:53.908890 26879 net.cpp:124] Setting up relu2
I0428 19:49:53.908902 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.908906 26879 net.cpp:139] Memory required for data: 2090800
I0428 19:49:53.908910 26879 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:49:53.908915 26879 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:49:53.908920 26879 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:49:53.908926 26879 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:49:53.908943 26879 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:49:53.908984 26879 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:49:53.908994 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.908998 26879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:53.909001 26879 net.cpp:139] Memory required for data: 2098800
I0428 19:49:53.909004 26879 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:53.909011 26879 net.cpp:86] Creating Layer accuracy
I0428 19:49:53.909014 26879 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:49:53.909019 26879 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:53.909024 26879 net.cpp:382] accuracy -> accuracy
I0428 19:49:53.909032 26879 net.cpp:124] Setting up accuracy
I0428 19:49:53.909037 26879 net.cpp:131] Top shape: (1)
I0428 19:49:53.909040 26879 net.cpp:139] Memory required for data: 2098804
I0428 19:49:53.909044 26879 layer_factory.hpp:77] Creating layer loss
I0428 19:49:53.909049 26879 net.cpp:86] Creating Layer loss
I0428 19:49:53.909052 26879 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:49:53.909056 26879 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:53.909060 26879 net.cpp:382] loss -> loss
I0428 19:49:53.909067 26879 layer_factory.hpp:77] Creating layer loss
I0428 19:49:53.909469 26879 net.cpp:124] Setting up loss
I0428 19:49:53.909477 26879 net.cpp:131] Top shape: (1)
I0428 19:49:53.909495 26879 net.cpp:134]     with loss weight 1
I0428 19:49:53.909500 26879 net.cpp:139] Memory required for data: 2098808
I0428 19:49:53.909503 26879 net.cpp:200] loss needs backward computation.
I0428 19:49:53.909507 26879 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:53.909512 26879 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:49:53.909515 26879 net.cpp:200] relu2 needs backward computation.
I0428 19:49:53.909518 26879 net.cpp:200] ip2 needs backward computation.
I0428 19:49:53.909520 26879 net.cpp:200] relu1 needs backward computation.
I0428 19:49:53.909523 26879 net.cpp:200] ip1 needs backward computation.
I0428 19:49:53.909525 26879 net.cpp:200] pool1 needs backward computation.
I0428 19:49:53.909528 26879 net.cpp:200] conv1 needs backward computation.
I0428 19:49:53.909531 26879 net.cpp:200] pool0 needs backward computation.
I0428 19:49:53.909549 26879 net.cpp:200] conv0 needs backward computation.
I0428 19:49:53.909554 26879 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:53.909556 26879 net.cpp:202] mnist does not need backward computation.
I0428 19:49:53.909559 26879 net.cpp:244] This network produces output accuracy
I0428 19:49:53.909562 26879 net.cpp:244] This network produces output loss
I0428 19:49:53.909574 26879 net.cpp:257] Network initialization done.
I0428 19:49:53.909610 26879 solver.cpp:56] Solver scaffolding done.
I0428 19:49:53.909894 26879 caffe.cpp:248] Starting Optimization
I0428 19:49:53.909901 26879 solver.cpp:273] Solving LeNet
I0428 19:49:53.909905 26879 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:53.910043 26879 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:53.913813 26879 blocking_queue.cpp:49] Waiting for data
I0428 19:49:53.967371 26886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:53.967927 26879 solver.cpp:398]     Test net output #0: accuracy = 0.1122
I0428 19:49:53.967960 26879 solver.cpp:398]     Test net output #1: loss = 2.3165 (* 1 = 2.3165 loss)
I0428 19:49:53.970243 26879 solver.cpp:219] Iteration 0 (-2.49953e-31 iter/s, 0.0603092s/100 iters), loss = 2.32716
I0428 19:49:53.970280 26879 solver.cpp:238]     Train net output #0: loss = 2.32716 (* 1 = 2.32716 loss)
I0428 19:49:53.970297 26879 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:54.045581 26879 solver.cpp:219] Iteration 100 (1328.19 iter/s, 0.0752905s/100 iters), loss = 1.23401
I0428 19:49:54.045613 26879 solver.cpp:238]     Train net output #0: loss = 1.23401 (* 1 = 1.23401 loss)
I0428 19:49:54.045620 26879 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:54.113895 26879 solver.cpp:219] Iteration 200 (1464.62 iter/s, 0.0682772s/100 iters), loss = 0.805505
I0428 19:49:54.113931 26879 solver.cpp:238]     Train net output #0: loss = 0.805505 (* 1 = 0.805505 loss)
I0428 19:49:54.113939 26879 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:54.180373 26879 solver.cpp:219] Iteration 300 (1505.25 iter/s, 0.066434s/100 iters), loss = 0.351815
I0428 19:49:54.180397 26879 solver.cpp:238]     Train net output #0: loss = 0.351815 (* 1 = 0.351815 loss)
I0428 19:49:54.180403 26879 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:54.246508 26879 solver.cpp:219] Iteration 400 (1512.79 iter/s, 0.0661031s/100 iters), loss = 0.428758
I0428 19:49:54.246546 26879 solver.cpp:238]     Train net output #0: loss = 0.428758 (* 1 = 0.428758 loss)
I0428 19:49:54.246553 26879 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:54.311360 26879 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:54.364558 26886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:54.365041 26879 solver.cpp:398]     Test net output #0: accuracy = 0.8532
I0428 19:49:54.365077 26879 solver.cpp:398]     Test net output #1: loss = 0.444174 (* 1 = 0.444174 loss)
I0428 19:49:54.365838 26879 solver.cpp:219] Iteration 500 (838.266 iter/s, 0.119294s/100 iters), loss = 0.569184
I0428 19:49:54.365880 26879 solver.cpp:238]     Train net output #0: loss = 0.569184 (* 1 = 0.569184 loss)
I0428 19:49:54.365888 26879 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:54.444368 26879 solver.cpp:219] Iteration 600 (1274.22 iter/s, 0.0784795s/100 iters), loss = 0.371978
I0428 19:49:54.444407 26879 solver.cpp:238]     Train net output #0: loss = 0.371978 (* 1 = 0.371978 loss)
I0428 19:49:54.444414 26879 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:54.510164 26879 solver.cpp:219] Iteration 700 (1520.6 iter/s, 0.0657633s/100 iters), loss = 0.688784
I0428 19:49:54.510203 26879 solver.cpp:238]     Train net output #0: loss = 0.688784 (* 1 = 0.688784 loss)
I0428 19:49:54.510213 26879 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:54.575892 26879 solver.cpp:219] Iteration 800 (1522.14 iter/s, 0.0656968s/100 iters), loss = 0.326823
I0428 19:49:54.575932 26879 solver.cpp:238]     Train net output #0: loss = 0.326823 (* 1 = 0.326823 loss)
I0428 19:49:54.575937 26879 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:54.641515 26879 solver.cpp:219] Iteration 900 (1524.62 iter/s, 0.0655901s/100 iters), loss = 0.248979
I0428 19:49:54.641553 26879 solver.cpp:238]     Train net output #0: loss = 0.248979 (* 1 = 0.248979 loss)
I0428 19:49:54.641559 26879 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:54.663342 26885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:54.705955 26879 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:54.706619 26879 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:54.707073 26879 solver.cpp:311] Iteration 1000, loss = 0.124262
I0428 19:49:54.707105 26879 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:54.781692 26886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:54.782255 26879 solver.cpp:398]     Test net output #0: accuracy = 0.9505
I0428 19:49:54.782285 26879 solver.cpp:398]     Test net output #1: loss = 0.164218 (* 1 = 0.164218 loss)
I0428 19:49:54.782294 26879 solver.cpp:316] Optimization Done.
I0428 19:49:54.782297 26879 caffe.cpp:259] Optimization Done.
