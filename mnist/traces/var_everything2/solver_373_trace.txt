I0428 19:41:43.560830 24897 caffe.cpp:218] Using GPUs 0
I0428 19:41:43.593971 24897 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:44.044142 24897 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test373.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:44.044276 24897 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test373.prototxt
I0428 19:41:44.044633 24897 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:44.044653 24897 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:44.044749 24897 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:44.044878 24897 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:44.045001 24897 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:44.045027 24897 net.cpp:86] Creating Layer mnist
I0428 19:41:44.045037 24897 net.cpp:382] mnist -> data
I0428 19:41:44.045060 24897 net.cpp:382] mnist -> label
I0428 19:41:44.046130 24897 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:44.048312 24897 net.cpp:124] Setting up mnist
I0428 19:41:44.048346 24897 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:44.048354 24897 net.cpp:131] Top shape: 64 (64)
I0428 19:41:44.048359 24897 net.cpp:139] Memory required for data: 200960
I0428 19:41:44.048368 24897 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:44.048390 24897 net.cpp:86] Creating Layer conv0
I0428 19:41:44.048409 24897 net.cpp:408] conv0 <- data
I0428 19:41:44.048425 24897 net.cpp:382] conv0 -> conv0
I0428 19:41:44.284157 24897 net.cpp:124] Setting up conv0
I0428 19:41:44.284188 24897 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:44.284193 24897 net.cpp:139] Memory required for data: 495872
I0428 19:41:44.284227 24897 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:44.284247 24897 net.cpp:86] Creating Layer pool0
I0428 19:41:44.284274 24897 net.cpp:408] pool0 <- conv0
I0428 19:41:44.284283 24897 net.cpp:382] pool0 -> pool0
I0428 19:41:44.284339 24897 net.cpp:124] Setting up pool0
I0428 19:41:44.284348 24897 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:44.284353 24897 net.cpp:139] Memory required for data: 569600
I0428 19:41:44.284358 24897 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:44.284375 24897 net.cpp:86] Creating Layer conv1
I0428 19:41:44.284381 24897 net.cpp:408] conv1 <- pool0
I0428 19:41:44.284390 24897 net.cpp:382] conv1 -> conv1
I0428 19:41:44.286298 24897 net.cpp:124] Setting up conv1
I0428 19:41:44.286317 24897 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:44.286324 24897 net.cpp:139] Memory required for data: 733440
I0428 19:41:44.286339 24897 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:44.286350 24897 net.cpp:86] Creating Layer pool1
I0428 19:41:44.286356 24897 net.cpp:408] pool1 <- conv1
I0428 19:41:44.286366 24897 net.cpp:382] pool1 -> pool1
I0428 19:41:44.286417 24897 net.cpp:124] Setting up pool1
I0428 19:41:44.286440 24897 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:44.286445 24897 net.cpp:139] Memory required for data: 774400
I0428 19:41:44.286450 24897 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:44.286463 24897 net.cpp:86] Creating Layer ip1
I0428 19:41:44.286470 24897 net.cpp:408] ip1 <- pool1
I0428 19:41:44.286479 24897 net.cpp:382] ip1 -> ip1
I0428 19:41:44.287518 24897 net.cpp:124] Setting up ip1
I0428 19:41:44.287533 24897 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:44.287539 24897 net.cpp:139] Memory required for data: 780800
I0428 19:41:44.287552 24897 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:44.287561 24897 net.cpp:86] Creating Layer relu1
I0428 19:41:44.287572 24897 net.cpp:408] relu1 <- ip1
I0428 19:41:44.287582 24897 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:44.287755 24897 net.cpp:124] Setting up relu1
I0428 19:41:44.287765 24897 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:44.287770 24897 net.cpp:139] Memory required for data: 787200
I0428 19:41:44.287775 24897 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:44.287786 24897 net.cpp:86] Creating Layer ip2
I0428 19:41:44.287791 24897 net.cpp:408] ip2 <- ip1
I0428 19:41:44.287801 24897 net.cpp:382] ip2 -> ip2
I0428 19:41:44.287899 24897 net.cpp:124] Setting up ip2
I0428 19:41:44.287909 24897 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:44.287914 24897 net.cpp:139] Memory required for data: 789760
I0428 19:41:44.287922 24897 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:44.287932 24897 net.cpp:86] Creating Layer relu2
I0428 19:41:44.287940 24897 net.cpp:408] relu2 <- ip2
I0428 19:41:44.287947 24897 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:44.288709 24897 net.cpp:124] Setting up relu2
I0428 19:41:44.288723 24897 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:44.288728 24897 net.cpp:139] Memory required for data: 792320
I0428 19:41:44.288734 24897 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:44.288744 24897 net.cpp:86] Creating Layer ip3
I0428 19:41:44.288749 24897 net.cpp:408] ip3 <- ip2
I0428 19:41:44.288758 24897 net.cpp:382] ip3 -> ip3
I0428 19:41:44.288902 24897 net.cpp:124] Setting up ip3
I0428 19:41:44.288913 24897 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:44.288918 24897 net.cpp:139] Memory required for data: 794880
I0428 19:41:44.288933 24897 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:44.288942 24897 net.cpp:86] Creating Layer relu3
I0428 19:41:44.288949 24897 net.cpp:408] relu3 <- ip3
I0428 19:41:44.288956 24897 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:44.289136 24897 net.cpp:124] Setting up relu3
I0428 19:41:44.289146 24897 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:44.289152 24897 net.cpp:139] Memory required for data: 797440
I0428 19:41:44.289172 24897 layer_factory.hpp:77] Creating layer loss
I0428 19:41:44.289196 24897 net.cpp:86] Creating Layer loss
I0428 19:41:44.289202 24897 net.cpp:408] loss <- ip3
I0428 19:41:44.289208 24897 net.cpp:408] loss <- label
I0428 19:41:44.289217 24897 net.cpp:382] loss -> loss
I0428 19:41:44.289237 24897 layer_factory.hpp:77] Creating layer loss
I0428 19:41:44.289484 24897 net.cpp:124] Setting up loss
I0428 19:41:44.289495 24897 net.cpp:131] Top shape: (1)
I0428 19:41:44.289501 24897 net.cpp:134]     with loss weight 1
I0428 19:41:44.289521 24897 net.cpp:139] Memory required for data: 797444
I0428 19:41:44.289527 24897 net.cpp:200] loss needs backward computation.
I0428 19:41:44.289535 24897 net.cpp:200] relu3 needs backward computation.
I0428 19:41:44.289539 24897 net.cpp:200] ip3 needs backward computation.
I0428 19:41:44.289546 24897 net.cpp:200] relu2 needs backward computation.
I0428 19:41:44.289551 24897 net.cpp:200] ip2 needs backward computation.
I0428 19:41:44.289556 24897 net.cpp:200] relu1 needs backward computation.
I0428 19:41:44.289561 24897 net.cpp:200] ip1 needs backward computation.
I0428 19:41:44.289566 24897 net.cpp:200] pool1 needs backward computation.
I0428 19:41:44.289572 24897 net.cpp:200] conv1 needs backward computation.
I0428 19:41:44.289577 24897 net.cpp:200] pool0 needs backward computation.
I0428 19:41:44.289582 24897 net.cpp:200] conv0 needs backward computation.
I0428 19:41:44.289588 24897 net.cpp:202] mnist does not need backward computation.
I0428 19:41:44.289594 24897 net.cpp:244] This network produces output loss
I0428 19:41:44.289623 24897 net.cpp:257] Network initialization done.
I0428 19:41:44.289949 24897 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test373.prototxt
I0428 19:41:44.289983 24897 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:44.290103 24897 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:44.290212 24897 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:44.290271 24897 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:44.290298 24897 net.cpp:86] Creating Layer mnist
I0428 19:41:44.290307 24897 net.cpp:382] mnist -> data
I0428 19:41:44.290318 24897 net.cpp:382] mnist -> label
I0428 19:41:44.290467 24897 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:44.292958 24897 net.cpp:124] Setting up mnist
I0428 19:41:44.293004 24897 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:44.293018 24897 net.cpp:131] Top shape: 100 (100)
I0428 19:41:44.293023 24897 net.cpp:139] Memory required for data: 314000
I0428 19:41:44.293030 24897 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:44.293040 24897 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:44.293045 24897 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:44.293053 24897 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:44.293063 24897 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:44.293117 24897 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:44.293139 24897 net.cpp:131] Top shape: 100 (100)
I0428 19:41:44.293145 24897 net.cpp:131] Top shape: 100 (100)
I0428 19:41:44.293150 24897 net.cpp:139] Memory required for data: 314800
I0428 19:41:44.293155 24897 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:44.293169 24897 net.cpp:86] Creating Layer conv0
I0428 19:41:44.293175 24897 net.cpp:408] conv0 <- data
I0428 19:41:44.293184 24897 net.cpp:382] conv0 -> conv0
I0428 19:41:44.294844 24897 net.cpp:124] Setting up conv0
I0428 19:41:44.294862 24897 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:44.294868 24897 net.cpp:139] Memory required for data: 775600
I0428 19:41:44.294885 24897 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:44.294896 24897 net.cpp:86] Creating Layer pool0
I0428 19:41:44.294904 24897 net.cpp:408] pool0 <- conv0
I0428 19:41:44.294914 24897 net.cpp:382] pool0 -> pool0
I0428 19:41:44.294958 24897 net.cpp:124] Setting up pool0
I0428 19:41:44.294967 24897 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:44.294973 24897 net.cpp:139] Memory required for data: 890800
I0428 19:41:44.294980 24897 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:44.294994 24897 net.cpp:86] Creating Layer conv1
I0428 19:41:44.295014 24897 net.cpp:408] conv1 <- pool0
I0428 19:41:44.295023 24897 net.cpp:382] conv1 -> conv1
I0428 19:41:44.296792 24897 net.cpp:124] Setting up conv1
I0428 19:41:44.296818 24897 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:44.296825 24897 net.cpp:139] Memory required for data: 1146800
I0428 19:41:44.296855 24897 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:44.296880 24897 net.cpp:86] Creating Layer pool1
I0428 19:41:44.296887 24897 net.cpp:408] pool1 <- conv1
I0428 19:41:44.296896 24897 net.cpp:382] pool1 -> pool1
I0428 19:41:44.296954 24897 net.cpp:124] Setting up pool1
I0428 19:41:44.296963 24897 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:44.296968 24897 net.cpp:139] Memory required for data: 1210800
I0428 19:41:44.296974 24897 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:44.296986 24897 net.cpp:86] Creating Layer ip1
I0428 19:41:44.296993 24897 net.cpp:408] ip1 <- pool1
I0428 19:41:44.297001 24897 net.cpp:382] ip1 -> ip1
I0428 19:41:44.297132 24897 net.cpp:124] Setting up ip1
I0428 19:41:44.297142 24897 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:44.297159 24897 net.cpp:139] Memory required for data: 1220800
I0428 19:41:44.297173 24897 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:44.297183 24897 net.cpp:86] Creating Layer relu1
I0428 19:41:44.297188 24897 net.cpp:408] relu1 <- ip1
I0428 19:41:44.297196 24897 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:44.297454 24897 net.cpp:124] Setting up relu1
I0428 19:41:44.297464 24897 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:44.297469 24897 net.cpp:139] Memory required for data: 1230800
I0428 19:41:44.297474 24897 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:44.297485 24897 net.cpp:86] Creating Layer ip2
I0428 19:41:44.297492 24897 net.cpp:408] ip2 <- ip1
I0428 19:41:44.297499 24897 net.cpp:382] ip2 -> ip2
I0428 19:41:44.297601 24897 net.cpp:124] Setting up ip2
I0428 19:41:44.297610 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.297616 24897 net.cpp:139] Memory required for data: 1234800
I0428 19:41:44.297626 24897 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:44.297633 24897 net.cpp:86] Creating Layer relu2
I0428 19:41:44.297639 24897 net.cpp:408] relu2 <- ip2
I0428 19:41:44.297646 24897 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:44.297842 24897 net.cpp:124] Setting up relu2
I0428 19:41:44.297852 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.297857 24897 net.cpp:139] Memory required for data: 1238800
I0428 19:41:44.297863 24897 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:44.297873 24897 net.cpp:86] Creating Layer ip3
I0428 19:41:44.297878 24897 net.cpp:408] ip3 <- ip2
I0428 19:41:44.297886 24897 net.cpp:382] ip3 -> ip3
I0428 19:41:44.298018 24897 net.cpp:124] Setting up ip3
I0428 19:41:44.298027 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.298032 24897 net.cpp:139] Memory required for data: 1242800
I0428 19:41:44.298045 24897 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:44.298054 24897 net.cpp:86] Creating Layer relu3
I0428 19:41:44.298060 24897 net.cpp:408] relu3 <- ip3
I0428 19:41:44.298068 24897 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:44.298914 24897 net.cpp:124] Setting up relu3
I0428 19:41:44.298928 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.298945 24897 net.cpp:139] Memory required for data: 1246800
I0428 19:41:44.298950 24897 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:44.298959 24897 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:44.298964 24897 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:44.298971 24897 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:44.298991 24897 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:44.299052 24897 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:44.299060 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.299067 24897 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:44.299072 24897 net.cpp:139] Memory required for data: 1254800
I0428 19:41:44.299088 24897 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:44.299096 24897 net.cpp:86] Creating Layer accuracy
I0428 19:41:44.299101 24897 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:44.299109 24897 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:44.299118 24897 net.cpp:382] accuracy -> accuracy
I0428 19:41:44.299129 24897 net.cpp:124] Setting up accuracy
I0428 19:41:44.299139 24897 net.cpp:131] Top shape: (1)
I0428 19:41:44.299144 24897 net.cpp:139] Memory required for data: 1254804
I0428 19:41:44.299149 24897 layer_factory.hpp:77] Creating layer loss
I0428 19:41:44.299159 24897 net.cpp:86] Creating Layer loss
I0428 19:41:44.299165 24897 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:44.299170 24897 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:44.299195 24897 net.cpp:382] loss -> loss
I0428 19:41:44.299204 24897 layer_factory.hpp:77] Creating layer loss
I0428 19:41:44.299476 24897 net.cpp:124] Setting up loss
I0428 19:41:44.299487 24897 net.cpp:131] Top shape: (1)
I0428 19:41:44.299507 24897 net.cpp:134]     with loss weight 1
I0428 19:41:44.299517 24897 net.cpp:139] Memory required for data: 1254808
I0428 19:41:44.299535 24897 net.cpp:200] loss needs backward computation.
I0428 19:41:44.299541 24897 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:44.299548 24897 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:44.299554 24897 net.cpp:200] relu3 needs backward computation.
I0428 19:41:44.299559 24897 net.cpp:200] ip3 needs backward computation.
I0428 19:41:44.299568 24897 net.cpp:200] relu2 needs backward computation.
I0428 19:41:44.299573 24897 net.cpp:200] ip2 needs backward computation.
I0428 19:41:44.299578 24897 net.cpp:200] relu1 needs backward computation.
I0428 19:41:44.299584 24897 net.cpp:200] ip1 needs backward computation.
I0428 19:41:44.299589 24897 net.cpp:200] pool1 needs backward computation.
I0428 19:41:44.299595 24897 net.cpp:200] conv1 needs backward computation.
I0428 19:41:44.299600 24897 net.cpp:200] pool0 needs backward computation.
I0428 19:41:44.299607 24897 net.cpp:200] conv0 needs backward computation.
I0428 19:41:44.299612 24897 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:44.299618 24897 net.cpp:202] mnist does not need backward computation.
I0428 19:41:44.299623 24897 net.cpp:244] This network produces output accuracy
I0428 19:41:44.299629 24897 net.cpp:244] This network produces output loss
I0428 19:41:44.299644 24897 net.cpp:257] Network initialization done.
I0428 19:41:44.299703 24897 solver.cpp:56] Solver scaffolding done.
I0428 19:41:44.300036 24897 caffe.cpp:248] Starting Optimization
I0428 19:41:44.300043 24897 solver.cpp:273] Solving LeNet
I0428 19:41:44.300048 24897 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:44.300858 24897 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:44.304149 24897 blocking_queue.cpp:49] Waiting for data
I0428 19:41:44.357007 24904 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:44.357494 24897 solver.cpp:398]     Test net output #0: accuracy = 0.0975
I0428 19:41:44.357514 24897 solver.cpp:398]     Test net output #1: loss = 2.38233 (* 1 = 2.38233 loss)
I0428 19:41:44.359472 24897 solver.cpp:219] Iteration 0 (-9.76928e-31 iter/s, 0.059399s/100 iters), loss = 2.41955
I0428 19:41:44.359500 24897 solver.cpp:238]     Train net output #0: loss = 2.41955 (* 1 = 2.41955 loss)
I0428 19:41:44.359549 24897 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:44.431699 24897 solver.cpp:219] Iteration 100 (1385.21 iter/s, 0.072191s/100 iters), loss = 1.10709
I0428 19:41:44.431728 24897 solver.cpp:238]     Train net output #0: loss = 1.10709 (* 1 = 1.10709 loss)
I0428 19:41:44.431753 24897 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:44.503392 24897 solver.cpp:219] Iteration 200 (1395.51 iter/s, 0.0716585s/100 iters), loss = 0.391154
I0428 19:41:44.503420 24897 solver.cpp:238]     Train net output #0: loss = 0.391154 (* 1 = 0.391154 loss)
I0428 19:41:44.503445 24897 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:44.575909 24897 solver.cpp:219] Iteration 300 (1379.64 iter/s, 0.0724828s/100 iters), loss = 0.3532
I0428 19:41:44.575937 24897 solver.cpp:238]     Train net output #0: loss = 0.3532 (* 1 = 0.3532 loss)
I0428 19:41:44.575961 24897 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:44.649382 24897 solver.cpp:219] Iteration 400 (1361.67 iter/s, 0.0734392s/100 iters), loss = 0.215847
I0428 19:41:44.649410 24897 solver.cpp:238]     Train net output #0: loss = 0.215847 (* 1 = 0.215847 loss)
I0428 19:41:44.649435 24897 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:44.720417 24897 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:44.773236 24904 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:44.773669 24897 solver.cpp:398]     Test net output #0: accuracy = 0.932
I0428 19:41:44.773689 24897 solver.cpp:398]     Test net output #1: loss = 0.220411 (* 1 = 0.220411 loss)
I0428 19:41:44.774478 24897 solver.cpp:219] Iteration 500 (799.616 iter/s, 0.12506s/100 iters), loss = 0.260835
I0428 19:41:44.774507 24897 solver.cpp:238]     Train net output #0: loss = 0.260835 (* 1 = 0.260835 loss)
I0428 19:41:44.774535 24897 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:44.853164 24897 solver.cpp:219] Iteration 600 (1271.75 iter/s, 0.0786319s/100 iters), loss = 0.199263
I0428 19:41:44.853225 24897 solver.cpp:238]     Train net output #0: loss = 0.199264 (* 1 = 0.199264 loss)
I0428 19:41:44.853251 24897 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:44.928010 24897 solver.cpp:219] Iteration 700 (1337.24 iter/s, 0.0747807s/100 iters), loss = 0.351977
I0428 19:41:44.928038 24897 solver.cpp:238]     Train net output #0: loss = 0.351978 (* 1 = 0.351978 loss)
I0428 19:41:44.928063 24897 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:45.000794 24897 solver.cpp:219] Iteration 800 (1374.59 iter/s, 0.0727491s/100 iters), loss = 0.351069
I0428 19:41:45.000841 24897 solver.cpp:238]     Train net output #0: loss = 0.351069 (* 1 = 0.351069 loss)
I0428 19:41:45.000857 24897 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:45.073628 24897 solver.cpp:219] Iteration 900 (1373.72 iter/s, 0.0727951s/100 iters), loss = 0.194835
I0428 19:41:45.073655 24897 solver.cpp:238]     Train net output #0: loss = 0.194836 (* 1 = 0.194836 loss)
I0428 19:41:45.073680 24897 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:45.098557 24903 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:45.148290 24897 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:45.148988 24897 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:45.149449 24897 solver.cpp:311] Iteration 1000, loss = 0.106086
I0428 19:41:45.149466 24897 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:45.224360 24904 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:45.224804 24897 solver.cpp:398]     Test net output #0: accuracy = 0.9603
I0428 19:41:45.224838 24897 solver.cpp:398]     Test net output #1: loss = 0.122873 (* 1 = 0.122873 loss)
I0428 19:41:45.224848 24897 solver.cpp:316] Optimization Done.
I0428 19:41:45.224855 24897 caffe.cpp:259] Optimization Done.
