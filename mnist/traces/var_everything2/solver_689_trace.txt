I0428 19:53:30.341764 27787 caffe.cpp:218] Using GPUs 0
I0428 19:53:30.380394 27787 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:30.889003 27787 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test689.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:30.889153 27787 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test689.prototxt
I0428 19:53:30.889580 27787 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:30.889600 27787 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:30.889704 27787 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:30.889788 27787 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:30.889889 27787 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:30.889914 27787 net.cpp:86] Creating Layer mnist
I0428 19:53:30.889921 27787 net.cpp:382] mnist -> data
I0428 19:53:30.889943 27787 net.cpp:382] mnist -> label
I0428 19:53:30.891054 27787 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:30.893745 27787 net.cpp:124] Setting up mnist
I0428 19:53:30.893781 27787 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:30.893790 27787 net.cpp:131] Top shape: 64 (64)
I0428 19:53:30.893793 27787 net.cpp:139] Memory required for data: 200960
I0428 19:53:30.893800 27787 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:30.893818 27787 net.cpp:86] Creating Layer conv0
I0428 19:53:30.893839 27787 net.cpp:408] conv0 <- data
I0428 19:53:30.893852 27787 net.cpp:382] conv0 -> conv0
I0428 19:53:31.183555 27787 net.cpp:124] Setting up conv0
I0428 19:53:31.183583 27787 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:31.183588 27787 net.cpp:139] Memory required for data: 938240
I0428 19:53:31.183604 27787 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:31.183617 27787 net.cpp:86] Creating Layer pool0
I0428 19:53:31.183622 27787 net.cpp:408] pool0 <- conv0
I0428 19:53:31.183629 27787 net.cpp:382] pool0 -> pool0
I0428 19:53:31.183681 27787 net.cpp:124] Setting up pool0
I0428 19:53:31.183686 27787 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:31.183689 27787 net.cpp:139] Memory required for data: 1122560
I0428 19:53:31.183693 27787 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:31.183706 27787 net.cpp:86] Creating Layer conv1
I0428 19:53:31.183709 27787 net.cpp:408] conv1 <- pool0
I0428 19:53:31.183714 27787 net.cpp:382] conv1 -> conv1
I0428 19:53:31.186663 27787 net.cpp:124] Setting up conv1
I0428 19:53:31.186681 27787 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:31.186684 27787 net.cpp:139] Memory required for data: 1941760
I0428 19:53:31.186693 27787 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:31.186702 27787 net.cpp:86] Creating Layer pool1
I0428 19:53:31.186704 27787 net.cpp:408] pool1 <- conv1
I0428 19:53:31.186712 27787 net.cpp:382] pool1 -> pool1
I0428 19:53:31.186753 27787 net.cpp:124] Setting up pool1
I0428 19:53:31.186758 27787 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:31.186760 27787 net.cpp:139] Memory required for data: 2146560
I0428 19:53:31.186764 27787 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:31.186771 27787 net.cpp:86] Creating Layer ip1
I0428 19:53:31.186775 27787 net.cpp:408] ip1 <- pool1
I0428 19:53:31.186781 27787 net.cpp:382] ip1 -> ip1
I0428 19:53:31.187005 27787 net.cpp:124] Setting up ip1
I0428 19:53:31.187013 27787 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:31.187016 27787 net.cpp:139] Memory required for data: 2152960
I0428 19:53:31.187024 27787 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:31.187031 27787 net.cpp:86] Creating Layer relu1
I0428 19:53:31.187034 27787 net.cpp:408] relu1 <- ip1
I0428 19:53:31.187039 27787 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:31.187227 27787 net.cpp:124] Setting up relu1
I0428 19:53:31.187237 27787 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:31.187240 27787 net.cpp:139] Memory required for data: 2159360
I0428 19:53:31.187243 27787 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:31.187250 27787 net.cpp:86] Creating Layer ip2
I0428 19:53:31.187253 27787 net.cpp:408] ip2 <- ip1
I0428 19:53:31.187259 27787 net.cpp:382] ip2 -> ip2
I0428 19:53:31.187366 27787 net.cpp:124] Setting up ip2
I0428 19:53:31.187374 27787 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:31.187377 27787 net.cpp:139] Memory required for data: 2165760
I0428 19:53:31.187383 27787 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:31.187389 27787 net.cpp:86] Creating Layer relu2
I0428 19:53:31.187393 27787 net.cpp:408] relu2 <- ip2
I0428 19:53:31.187397 27787 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:31.188158 27787 net.cpp:124] Setting up relu2
I0428 19:53:31.188170 27787 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:31.188174 27787 net.cpp:139] Memory required for data: 2172160
I0428 19:53:31.188177 27787 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:31.188185 27787 net.cpp:86] Creating Layer ip3
I0428 19:53:31.188189 27787 net.cpp:408] ip3 <- ip2
I0428 19:53:31.188195 27787 net.cpp:382] ip3 -> ip3
I0428 19:53:31.188303 27787 net.cpp:124] Setting up ip3
I0428 19:53:31.188311 27787 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:31.188314 27787 net.cpp:139] Memory required for data: 2174720
I0428 19:53:31.188323 27787 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:31.188328 27787 net.cpp:86] Creating Layer relu3
I0428 19:53:31.188330 27787 net.cpp:408] relu3 <- ip3
I0428 19:53:31.188335 27787 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:31.188520 27787 net.cpp:124] Setting up relu3
I0428 19:53:31.188529 27787 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:31.188534 27787 net.cpp:139] Memory required for data: 2177280
I0428 19:53:31.188536 27787 layer_factory.hpp:77] Creating layer loss
I0428 19:53:31.188542 27787 net.cpp:86] Creating Layer loss
I0428 19:53:31.188545 27787 net.cpp:408] loss <- ip3
I0428 19:53:31.188549 27787 net.cpp:408] loss <- label
I0428 19:53:31.188556 27787 net.cpp:382] loss -> loss
I0428 19:53:31.188570 27787 layer_factory.hpp:77] Creating layer loss
I0428 19:53:31.188827 27787 net.cpp:124] Setting up loss
I0428 19:53:31.188838 27787 net.cpp:131] Top shape: (1)
I0428 19:53:31.188840 27787 net.cpp:134]     with loss weight 1
I0428 19:53:31.188854 27787 net.cpp:139] Memory required for data: 2177284
I0428 19:53:31.188858 27787 net.cpp:200] loss needs backward computation.
I0428 19:53:31.188861 27787 net.cpp:200] relu3 needs backward computation.
I0428 19:53:31.188864 27787 net.cpp:200] ip3 needs backward computation.
I0428 19:53:31.188868 27787 net.cpp:200] relu2 needs backward computation.
I0428 19:53:31.188870 27787 net.cpp:200] ip2 needs backward computation.
I0428 19:53:31.188874 27787 net.cpp:200] relu1 needs backward computation.
I0428 19:53:31.188875 27787 net.cpp:200] ip1 needs backward computation.
I0428 19:53:31.188879 27787 net.cpp:200] pool1 needs backward computation.
I0428 19:53:31.188881 27787 net.cpp:200] conv1 needs backward computation.
I0428 19:53:31.188885 27787 net.cpp:200] pool0 needs backward computation.
I0428 19:53:31.188887 27787 net.cpp:200] conv0 needs backward computation.
I0428 19:53:31.188891 27787 net.cpp:202] mnist does not need backward computation.
I0428 19:53:31.188894 27787 net.cpp:244] This network produces output loss
I0428 19:53:31.188905 27787 net.cpp:257] Network initialization done.
I0428 19:53:31.189244 27787 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test689.prototxt
I0428 19:53:31.189273 27787 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:31.189373 27787 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:31.189460 27787 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:31.189508 27787 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:31.189522 27787 net.cpp:86] Creating Layer mnist
I0428 19:53:31.189527 27787 net.cpp:382] mnist -> data
I0428 19:53:31.189534 27787 net.cpp:382] mnist -> label
I0428 19:53:31.189626 27787 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:31.191584 27787 net.cpp:124] Setting up mnist
I0428 19:53:31.191599 27787 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:31.191606 27787 net.cpp:131] Top shape: 100 (100)
I0428 19:53:31.191608 27787 net.cpp:139] Memory required for data: 314000
I0428 19:53:31.191612 27787 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:31.191618 27787 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:31.191622 27787 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:31.191627 27787 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:31.191633 27787 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:31.191741 27787 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:31.191750 27787 net.cpp:131] Top shape: 100 (100)
I0428 19:53:31.191753 27787 net.cpp:131] Top shape: 100 (100)
I0428 19:53:31.191756 27787 net.cpp:139] Memory required for data: 314800
I0428 19:53:31.191759 27787 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:31.191771 27787 net.cpp:86] Creating Layer conv0
I0428 19:53:31.191773 27787 net.cpp:408] conv0 <- data
I0428 19:53:31.191779 27787 net.cpp:382] conv0 -> conv0
I0428 19:53:31.193302 27787 net.cpp:124] Setting up conv0
I0428 19:53:31.193317 27787 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:31.193321 27787 net.cpp:139] Memory required for data: 1466800
I0428 19:53:31.193331 27787 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:31.193339 27787 net.cpp:86] Creating Layer pool0
I0428 19:53:31.193342 27787 net.cpp:408] pool0 <- conv0
I0428 19:53:31.193347 27787 net.cpp:382] pool0 -> pool0
I0428 19:53:31.193416 27787 net.cpp:124] Setting up pool0
I0428 19:53:31.193424 27787 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:31.193428 27787 net.cpp:139] Memory required for data: 1754800
I0428 19:53:31.193431 27787 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:31.193441 27787 net.cpp:86] Creating Layer conv1
I0428 19:53:31.193444 27787 net.cpp:408] conv1 <- pool0
I0428 19:53:31.193451 27787 net.cpp:382] conv1 -> conv1
I0428 19:53:31.195102 27787 net.cpp:124] Setting up conv1
I0428 19:53:31.195116 27787 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:31.195121 27787 net.cpp:139] Memory required for data: 3034800
I0428 19:53:31.195129 27787 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:31.195135 27787 net.cpp:86] Creating Layer pool1
I0428 19:53:31.195139 27787 net.cpp:408] pool1 <- conv1
I0428 19:53:31.195145 27787 net.cpp:382] pool1 -> pool1
I0428 19:53:31.195184 27787 net.cpp:124] Setting up pool1
I0428 19:53:31.195190 27787 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:31.195194 27787 net.cpp:139] Memory required for data: 3354800
I0428 19:53:31.195195 27787 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:31.195204 27787 net.cpp:86] Creating Layer ip1
I0428 19:53:31.195206 27787 net.cpp:408] ip1 <- pool1
I0428 19:53:31.195212 27787 net.cpp:382] ip1 -> ip1
I0428 19:53:31.195441 27787 net.cpp:124] Setting up ip1
I0428 19:53:31.195447 27787 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:31.195461 27787 net.cpp:139] Memory required for data: 3364800
I0428 19:53:31.195469 27787 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:31.195474 27787 net.cpp:86] Creating Layer relu1
I0428 19:53:31.195477 27787 net.cpp:408] relu1 <- ip1
I0428 19:53:31.195484 27787 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:31.195658 27787 net.cpp:124] Setting up relu1
I0428 19:53:31.195667 27787 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:31.195672 27787 net.cpp:139] Memory required for data: 3374800
I0428 19:53:31.195674 27787 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:31.195683 27787 net.cpp:86] Creating Layer ip2
I0428 19:53:31.195685 27787 net.cpp:408] ip2 <- ip1
I0428 19:53:31.195691 27787 net.cpp:382] ip2 -> ip2
I0428 19:53:31.195801 27787 net.cpp:124] Setting up ip2
I0428 19:53:31.195811 27787 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:31.195813 27787 net.cpp:139] Memory required for data: 3384800
I0428 19:53:31.195818 27787 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:31.195830 27787 net.cpp:86] Creating Layer relu2
I0428 19:53:31.195834 27787 net.cpp:408] relu2 <- ip2
I0428 19:53:31.195840 27787 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:31.196120 27787 net.cpp:124] Setting up relu2
I0428 19:53:31.196128 27787 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:31.196131 27787 net.cpp:139] Memory required for data: 3394800
I0428 19:53:31.196140 27787 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:31.196151 27787 net.cpp:86] Creating Layer ip3
I0428 19:53:31.196154 27787 net.cpp:408] ip3 <- ip2
I0428 19:53:31.196159 27787 net.cpp:382] ip3 -> ip3
I0428 19:53:31.196267 27787 net.cpp:124] Setting up ip3
I0428 19:53:31.196274 27787 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:31.196279 27787 net.cpp:139] Memory required for data: 3398800
I0428 19:53:31.196286 27787 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:31.196293 27787 net.cpp:86] Creating Layer relu3
I0428 19:53:31.196296 27787 net.cpp:408] relu3 <- ip3
I0428 19:53:31.196300 27787 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:31.197152 27787 net.cpp:124] Setting up relu3
I0428 19:53:31.197170 27787 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:31.197175 27787 net.cpp:139] Memory required for data: 3402800
I0428 19:53:31.197178 27787 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:31.197183 27787 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:31.197186 27787 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:31.197191 27787 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:31.197197 27787 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:31.197249 27787 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:31.197257 27787 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:31.197262 27787 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:31.197264 27787 net.cpp:139] Memory required for data: 3410800
I0428 19:53:31.197268 27787 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:31.197273 27787 net.cpp:86] Creating Layer accuracy
I0428 19:53:31.197275 27787 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:31.197279 27787 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:31.197291 27787 net.cpp:382] accuracy -> accuracy
I0428 19:53:31.197299 27787 net.cpp:124] Setting up accuracy
I0428 19:53:31.197302 27787 net.cpp:131] Top shape: (1)
I0428 19:53:31.197305 27787 net.cpp:139] Memory required for data: 3410804
I0428 19:53:31.197309 27787 layer_factory.hpp:77] Creating layer loss
I0428 19:53:31.197315 27787 net.cpp:86] Creating Layer loss
I0428 19:53:31.197319 27787 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:31.197329 27787 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:31.197332 27787 net.cpp:382] loss -> loss
I0428 19:53:31.197338 27787 layer_factory.hpp:77] Creating layer loss
I0428 19:53:31.197583 27787 net.cpp:124] Setting up loss
I0428 19:53:31.197592 27787 net.cpp:131] Top shape: (1)
I0428 19:53:31.197595 27787 net.cpp:134]     with loss weight 1
I0428 19:53:31.197602 27787 net.cpp:139] Memory required for data: 3410808
I0428 19:53:31.197616 27787 net.cpp:200] loss needs backward computation.
I0428 19:53:31.197620 27787 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:31.197624 27787 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:31.197626 27787 net.cpp:200] relu3 needs backward computation.
I0428 19:53:31.197630 27787 net.cpp:200] ip3 needs backward computation.
I0428 19:53:31.197633 27787 net.cpp:200] relu2 needs backward computation.
I0428 19:53:31.197636 27787 net.cpp:200] ip2 needs backward computation.
I0428 19:53:31.197639 27787 net.cpp:200] relu1 needs backward computation.
I0428 19:53:31.197643 27787 net.cpp:200] ip1 needs backward computation.
I0428 19:53:31.197645 27787 net.cpp:200] pool1 needs backward computation.
I0428 19:53:31.197649 27787 net.cpp:200] conv1 needs backward computation.
I0428 19:53:31.197651 27787 net.cpp:200] pool0 needs backward computation.
I0428 19:53:31.197654 27787 net.cpp:200] conv0 needs backward computation.
I0428 19:53:31.197659 27787 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:31.197661 27787 net.cpp:202] mnist does not need backward computation.
I0428 19:53:31.197664 27787 net.cpp:244] This network produces output accuracy
I0428 19:53:31.197669 27787 net.cpp:244] This network produces output loss
I0428 19:53:31.197679 27787 net.cpp:257] Network initialization done.
I0428 19:53:31.197721 27787 solver.cpp:56] Solver scaffolding done.
I0428 19:53:31.198068 27787 caffe.cpp:248] Starting Optimization
I0428 19:53:31.198074 27787 solver.cpp:273] Solving LeNet
I0428 19:53:31.198077 27787 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:31.198843 27787 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:31.202919 27787 blocking_queue.cpp:49] Waiting for data
I0428 19:53:31.273124 27794 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:31.273623 27787 solver.cpp:398]     Test net output #0: accuracy = 0.0888
I0428 19:53:31.273656 27787 solver.cpp:398]     Test net output #1: loss = 2.32256 (* 1 = 2.32256 loss)
I0428 19:53:31.276841 27787 solver.cpp:219] Iteration 0 (-1.26329e-31 iter/s, 0.0787294s/100 iters), loss = 2.32584
I0428 19:53:31.276896 27787 solver.cpp:238]     Train net output #0: loss = 2.32584 (* 1 = 2.32584 loss)
I0428 19:53:31.276908 27787 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:31.392859 27787 solver.cpp:219] Iteration 100 (862.451 iter/s, 0.115949s/100 iters), loss = 1.11713
I0428 19:53:31.392904 27787 solver.cpp:238]     Train net output #0: loss = 1.11713 (* 1 = 1.11713 loss)
I0428 19:53:31.392912 27787 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:31.502688 27787 solver.cpp:219] Iteration 200 (910.837 iter/s, 0.109789s/100 iters), loss = 1.08182
I0428 19:53:31.502732 27787 solver.cpp:238]     Train net output #0: loss = 1.08182 (* 1 = 1.08182 loss)
I0428 19:53:31.502739 27787 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:31.612975 27787 solver.cpp:219] Iteration 300 (907.173 iter/s, 0.110233s/100 iters), loss = 0.883003
I0428 19:53:31.613020 27787 solver.cpp:238]     Train net output #0: loss = 0.883003 (* 1 = 0.883003 loss)
I0428 19:53:31.613029 27787 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:31.719025 27787 solver.cpp:219] Iteration 400 (943.438 iter/s, 0.105995s/100 iters), loss = 1.03581
I0428 19:53:31.719064 27787 solver.cpp:238]     Train net output #0: loss = 1.03581 (* 1 = 1.03581 loss)
I0428 19:53:31.719071 27787 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:31.827111 27787 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:31.903002 27794 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:31.903525 27787 solver.cpp:398]     Test net output #0: accuracy = 0.6479
I0428 19:53:31.903560 27787 solver.cpp:398]     Test net output #1: loss = 1.0181 (* 1 = 1.0181 loss)
I0428 19:53:31.904649 27787 solver.cpp:219] Iteration 500 (538.838 iter/s, 0.185585s/100 iters), loss = 1.09797
I0428 19:53:31.904690 27787 solver.cpp:238]     Train net output #0: loss = 1.09797 (* 1 = 1.09797 loss)
I0428 19:53:31.904711 27787 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:32.008626 27787 solver.cpp:219] Iteration 600 (962.206 iter/s, 0.103928s/100 iters), loss = 0.979602
I0428 19:53:32.008666 27787 solver.cpp:238]     Train net output #0: loss = 0.979602 (* 1 = 0.979602 loss)
I0428 19:53:32.008672 27787 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:32.115124 27787 solver.cpp:219] Iteration 700 (939.299 iter/s, 0.106462s/100 iters), loss = 1.27066
I0428 19:53:32.115165 27787 solver.cpp:238]     Train net output #0: loss = 1.27066 (* 1 = 1.27066 loss)
I0428 19:53:32.115171 27787 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:32.220607 27787 solver.cpp:219] Iteration 800 (948.34 iter/s, 0.105447s/100 iters), loss = 1.11565
I0428 19:53:32.220645 27787 solver.cpp:238]     Train net output #0: loss = 1.11565 (* 1 = 1.11565 loss)
I0428 19:53:32.220651 27787 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:32.336839 27787 solver.cpp:219] Iteration 900 (860.635 iter/s, 0.116193s/100 iters), loss = 0.825346
I0428 19:53:32.336882 27787 solver.cpp:238]     Train net output #0: loss = 0.825346 (* 1 = 0.825346 loss)
I0428 19:53:32.336892 27787 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:32.376327 27793 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:32.451516 27787 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:32.453061 27787 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:32.453856 27787 solver.cpp:311] Iteration 1000, loss = 1.16313
I0428 19:53:32.453878 27787 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:32.525769 27794 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:32.526288 27787 solver.cpp:398]     Test net output #0: accuracy = 0.6975
I0428 19:53:32.526312 27787 solver.cpp:398]     Test net output #1: loss = 0.955081 (* 1 = 0.955081 loss)
I0428 19:53:32.526319 27787 solver.cpp:316] Optimization Done.
I0428 19:53:32.526324 27787 caffe.cpp:259] Optimization Done.
