I0428 20:10:06.060729 31768 caffe.cpp:218] Using GPUs 0
I0428 20:10:06.090281 31768 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:06.602006 31768 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1126.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:06.602146 31768 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1126.prototxt
I0428 20:10:06.602562 31768 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:06.602581 31768 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:06.602684 31768 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:06.602766 31768 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:06.602864 31768 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:06.602886 31768 net.cpp:86] Creating Layer mnist
I0428 20:10:06.602895 31768 net.cpp:382] mnist -> data
I0428 20:10:06.602916 31768 net.cpp:382] mnist -> label
I0428 20:10:06.604012 31768 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:06.606485 31768 net.cpp:124] Setting up mnist
I0428 20:10:06.606503 31768 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:06.606509 31768 net.cpp:131] Top shape: 64 (64)
I0428 20:10:06.606513 31768 net.cpp:139] Memory required for data: 200960
I0428 20:10:06.606520 31768 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:06.606560 31768 net.cpp:86] Creating Layer conv0
I0428 20:10:06.606582 31768 net.cpp:408] conv0 <- data
I0428 20:10:06.606595 31768 net.cpp:382] conv0 -> conv0
I0428 20:10:06.899168 31768 net.cpp:124] Setting up conv0
I0428 20:10:06.899197 31768 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:06.899204 31768 net.cpp:139] Memory required for data: 3887360
I0428 20:10:06.899221 31768 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:06.899235 31768 net.cpp:86] Creating Layer pool0
I0428 20:10:06.899243 31768 net.cpp:408] pool0 <- conv0
I0428 20:10:06.899250 31768 net.cpp:382] pool0 -> pool0
I0428 20:10:06.899304 31768 net.cpp:124] Setting up pool0
I0428 20:10:06.899312 31768 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:06.899317 31768 net.cpp:139] Memory required for data: 4808960
I0428 20:10:06.899320 31768 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:06.899333 31768 net.cpp:86] Creating Layer conv1
I0428 20:10:06.899338 31768 net.cpp:408] conv1 <- pool0
I0428 20:10:06.899344 31768 net.cpp:382] conv1 -> conv1
I0428 20:10:06.902581 31768 net.cpp:124] Setting up conv1
I0428 20:10:06.902600 31768 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:10:06.902604 31768 net.cpp:139] Memory required for data: 5218560
I0428 20:10:06.902616 31768 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:06.902624 31768 net.cpp:86] Creating Layer pool1
I0428 20:10:06.902628 31768 net.cpp:408] pool1 <- conv1
I0428 20:10:06.902634 31768 net.cpp:382] pool1 -> pool1
I0428 20:10:06.902679 31768 net.cpp:124] Setting up pool1
I0428 20:10:06.902688 31768 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:10:06.902693 31768 net.cpp:139] Memory required for data: 5320960
I0428 20:10:06.902696 31768 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:06.902704 31768 net.cpp:86] Creating Layer ip1
I0428 20:10:06.902709 31768 net.cpp:408] ip1 <- pool1
I0428 20:10:06.902714 31768 net.cpp:382] ip1 -> ip1
I0428 20:10:06.902963 31768 net.cpp:124] Setting up ip1
I0428 20:10:06.902972 31768 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:06.902976 31768 net.cpp:139] Memory required for data: 5333760
I0428 20:10:06.902986 31768 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:06.902992 31768 net.cpp:86] Creating Layer relu1
I0428 20:10:06.902995 31768 net.cpp:408] relu1 <- ip1
I0428 20:10:06.903000 31768 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:06.903197 31768 net.cpp:124] Setting up relu1
I0428 20:10:06.903206 31768 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:06.903210 31768 net.cpp:139] Memory required for data: 5346560
I0428 20:10:06.903214 31768 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:06.903221 31768 net.cpp:86] Creating Layer ip2
I0428 20:10:06.903225 31768 net.cpp:408] ip2 <- ip1
I0428 20:10:06.903231 31768 net.cpp:382] ip2 -> ip2
I0428 20:10:06.904328 31768 net.cpp:124] Setting up ip2
I0428 20:10:06.904343 31768 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:06.904347 31768 net.cpp:139] Memory required for data: 5352960
I0428 20:10:06.904356 31768 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:06.904363 31768 net.cpp:86] Creating Layer relu2
I0428 20:10:06.904367 31768 net.cpp:408] relu2 <- ip2
I0428 20:10:06.904373 31768 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:06.905246 31768 net.cpp:124] Setting up relu2
I0428 20:10:06.905261 31768 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:06.905266 31768 net.cpp:139] Memory required for data: 5359360
I0428 20:10:06.905270 31768 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:06.905278 31768 net.cpp:86] Creating Layer ip3
I0428 20:10:06.905283 31768 net.cpp:408] ip3 <- ip2
I0428 20:10:06.905289 31768 net.cpp:382] ip3 -> ip3
I0428 20:10:06.905407 31768 net.cpp:124] Setting up ip3
I0428 20:10:06.905417 31768 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:06.905421 31768 net.cpp:139] Memory required for data: 5361920
I0428 20:10:06.905431 31768 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:06.905437 31768 net.cpp:86] Creating Layer relu3
I0428 20:10:06.905441 31768 net.cpp:408] relu3 <- ip3
I0428 20:10:06.905450 31768 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:06.905655 31768 net.cpp:124] Setting up relu3
I0428 20:10:06.905668 31768 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:06.905670 31768 net.cpp:139] Memory required for data: 5364480
I0428 20:10:06.905675 31768 layer_factory.hpp:77] Creating layer loss
I0428 20:10:06.905685 31768 net.cpp:86] Creating Layer loss
I0428 20:10:06.905690 31768 net.cpp:408] loss <- ip3
I0428 20:10:06.905695 31768 net.cpp:408] loss <- label
I0428 20:10:06.905701 31768 net.cpp:382] loss -> loss
I0428 20:10:06.905721 31768 layer_factory.hpp:77] Creating layer loss
I0428 20:10:06.906008 31768 net.cpp:124] Setting up loss
I0428 20:10:06.906018 31768 net.cpp:131] Top shape: (1)
I0428 20:10:06.906021 31768 net.cpp:134]     with loss weight 1
I0428 20:10:06.906036 31768 net.cpp:139] Memory required for data: 5364484
I0428 20:10:06.906041 31768 net.cpp:200] loss needs backward computation.
I0428 20:10:06.906045 31768 net.cpp:200] relu3 needs backward computation.
I0428 20:10:06.906049 31768 net.cpp:200] ip3 needs backward computation.
I0428 20:10:06.906052 31768 net.cpp:200] relu2 needs backward computation.
I0428 20:10:06.906055 31768 net.cpp:200] ip2 needs backward computation.
I0428 20:10:06.906059 31768 net.cpp:200] relu1 needs backward computation.
I0428 20:10:06.906062 31768 net.cpp:200] ip1 needs backward computation.
I0428 20:10:06.906066 31768 net.cpp:200] pool1 needs backward computation.
I0428 20:10:06.906069 31768 net.cpp:200] conv1 needs backward computation.
I0428 20:10:06.906074 31768 net.cpp:200] pool0 needs backward computation.
I0428 20:10:06.906076 31768 net.cpp:200] conv0 needs backward computation.
I0428 20:10:06.906080 31768 net.cpp:202] mnist does not need backward computation.
I0428 20:10:06.906085 31768 net.cpp:244] This network produces output loss
I0428 20:10:06.906096 31768 net.cpp:257] Network initialization done.
I0428 20:10:06.906505 31768 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1126.prototxt
I0428 20:10:06.906538 31768 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:06.906647 31768 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:06.906744 31768 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:06.906792 31768 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:06.906806 31768 net.cpp:86] Creating Layer mnist
I0428 20:10:06.906812 31768 net.cpp:382] mnist -> data
I0428 20:10:06.906822 31768 net.cpp:382] mnist -> label
I0428 20:10:06.906925 31768 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:06.909318 31768 net.cpp:124] Setting up mnist
I0428 20:10:06.909335 31768 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:06.909342 31768 net.cpp:131] Top shape: 100 (100)
I0428 20:10:06.909345 31768 net.cpp:139] Memory required for data: 314000
I0428 20:10:06.909349 31768 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:06.909365 31768 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:06.909370 31768 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:06.909376 31768 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:06.909385 31768 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:06.909438 31768 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:06.909446 31768 net.cpp:131] Top shape: 100 (100)
I0428 20:10:06.909451 31768 net.cpp:131] Top shape: 100 (100)
I0428 20:10:06.909454 31768 net.cpp:139] Memory required for data: 314800
I0428 20:10:06.909459 31768 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:06.909471 31768 net.cpp:86] Creating Layer conv0
I0428 20:10:06.909477 31768 net.cpp:408] conv0 <- data
I0428 20:10:06.909484 31768 net.cpp:382] conv0 -> conv0
I0428 20:10:06.911279 31768 net.cpp:124] Setting up conv0
I0428 20:10:06.911295 31768 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:06.911300 31768 net.cpp:139] Memory required for data: 6074800
I0428 20:10:06.911312 31768 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:06.911320 31768 net.cpp:86] Creating Layer pool0
I0428 20:10:06.911324 31768 net.cpp:408] pool0 <- conv0
I0428 20:10:06.911331 31768 net.cpp:382] pool0 -> pool0
I0428 20:10:06.911376 31768 net.cpp:124] Setting up pool0
I0428 20:10:06.911386 31768 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:06.911389 31768 net.cpp:139] Memory required for data: 7514800
I0428 20:10:06.911393 31768 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:06.911404 31768 net.cpp:86] Creating Layer conv1
I0428 20:10:06.911409 31768 net.cpp:408] conv1 <- pool0
I0428 20:10:06.911417 31768 net.cpp:382] conv1 -> conv1
I0428 20:10:06.913861 31768 net.cpp:124] Setting up conv1
I0428 20:10:06.913877 31768 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:10:06.913882 31768 net.cpp:139] Memory required for data: 8154800
I0428 20:10:06.913893 31768 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:06.913902 31768 net.cpp:86] Creating Layer pool1
I0428 20:10:06.913907 31768 net.cpp:408] pool1 <- conv1
I0428 20:10:06.913914 31768 net.cpp:382] pool1 -> pool1
I0428 20:10:06.914008 31768 net.cpp:124] Setting up pool1
I0428 20:10:06.914017 31768 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:10:06.914028 31768 net.cpp:139] Memory required for data: 8314800
I0428 20:10:06.914031 31768 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:06.914039 31768 net.cpp:86] Creating Layer ip1
I0428 20:10:06.914043 31768 net.cpp:408] ip1 <- pool1
I0428 20:10:06.914050 31768 net.cpp:382] ip1 -> ip1
I0428 20:10:06.914310 31768 net.cpp:124] Setting up ip1
I0428 20:10:06.914319 31768 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:06.914335 31768 net.cpp:139] Memory required for data: 8334800
I0428 20:10:06.914345 31768 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:06.914352 31768 net.cpp:86] Creating Layer relu1
I0428 20:10:06.914356 31768 net.cpp:408] relu1 <- ip1
I0428 20:10:06.914363 31768 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:06.914566 31768 net.cpp:124] Setting up relu1
I0428 20:10:06.914577 31768 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:06.914582 31768 net.cpp:139] Memory required for data: 8354800
I0428 20:10:06.914584 31768 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:06.914594 31768 net.cpp:86] Creating Layer ip2
I0428 20:10:06.914599 31768 net.cpp:408] ip2 <- ip1
I0428 20:10:06.914605 31768 net.cpp:382] ip2 -> ip2
I0428 20:10:06.914748 31768 net.cpp:124] Setting up ip2
I0428 20:10:06.914757 31768 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:06.914760 31768 net.cpp:139] Memory required for data: 8364800
I0428 20:10:06.914767 31768 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:06.914772 31768 net.cpp:86] Creating Layer relu2
I0428 20:10:06.914775 31768 net.cpp:408] relu2 <- ip2
I0428 20:10:06.914782 31768 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:06.915061 31768 net.cpp:124] Setting up relu2
I0428 20:10:06.915072 31768 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:06.915076 31768 net.cpp:139] Memory required for data: 8374800
I0428 20:10:06.915081 31768 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:06.915088 31768 net.cpp:86] Creating Layer ip3
I0428 20:10:06.915093 31768 net.cpp:408] ip3 <- ip2
I0428 20:10:06.915101 31768 net.cpp:382] ip3 -> ip3
I0428 20:10:06.915218 31768 net.cpp:124] Setting up ip3
I0428 20:10:06.915226 31768 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:06.915230 31768 net.cpp:139] Memory required for data: 8378800
I0428 20:10:06.915241 31768 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:06.915247 31768 net.cpp:86] Creating Layer relu3
I0428 20:10:06.915251 31768 net.cpp:408] relu3 <- ip3
I0428 20:10:06.915256 31768 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:06.916179 31768 net.cpp:124] Setting up relu3
I0428 20:10:06.916194 31768 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:06.916198 31768 net.cpp:139] Memory required for data: 8382800
I0428 20:10:06.916203 31768 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:06.916210 31768 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:06.916214 31768 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:06.916220 31768 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:06.916229 31768 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:06.916273 31768 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:06.916281 31768 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:06.916286 31768 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:06.916290 31768 net.cpp:139] Memory required for data: 8390800
I0428 20:10:06.916295 31768 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:06.916301 31768 net.cpp:86] Creating Layer accuracy
I0428 20:10:06.916306 31768 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:06.916317 31768 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:06.916322 31768 net.cpp:382] accuracy -> accuracy
I0428 20:10:06.916332 31768 net.cpp:124] Setting up accuracy
I0428 20:10:06.916338 31768 net.cpp:131] Top shape: (1)
I0428 20:10:06.916342 31768 net.cpp:139] Memory required for data: 8390804
I0428 20:10:06.916345 31768 layer_factory.hpp:77] Creating layer loss
I0428 20:10:06.916350 31768 net.cpp:86] Creating Layer loss
I0428 20:10:06.916355 31768 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:06.916359 31768 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:06.916366 31768 net.cpp:382] loss -> loss
I0428 20:10:06.916373 31768 layer_factory.hpp:77] Creating layer loss
I0428 20:10:06.916658 31768 net.cpp:124] Setting up loss
I0428 20:10:06.916669 31768 net.cpp:131] Top shape: (1)
I0428 20:10:06.916674 31768 net.cpp:134]     with loss weight 1
I0428 20:10:06.916693 31768 net.cpp:139] Memory required for data: 8390808
I0428 20:10:06.916698 31768 net.cpp:200] loss needs backward computation.
I0428 20:10:06.916702 31768 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:06.916707 31768 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:06.916712 31768 net.cpp:200] relu3 needs backward computation.
I0428 20:10:06.916715 31768 net.cpp:200] ip3 needs backward computation.
I0428 20:10:06.916719 31768 net.cpp:200] relu2 needs backward computation.
I0428 20:10:06.916723 31768 net.cpp:200] ip2 needs backward computation.
I0428 20:10:06.916726 31768 net.cpp:200] relu1 needs backward computation.
I0428 20:10:06.916729 31768 net.cpp:200] ip1 needs backward computation.
I0428 20:10:06.916733 31768 net.cpp:200] pool1 needs backward computation.
I0428 20:10:06.916736 31768 net.cpp:200] conv1 needs backward computation.
I0428 20:10:06.916740 31768 net.cpp:200] pool0 needs backward computation.
I0428 20:10:06.916744 31768 net.cpp:200] conv0 needs backward computation.
I0428 20:10:06.916749 31768 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:06.916754 31768 net.cpp:202] mnist does not need backward computation.
I0428 20:10:06.916757 31768 net.cpp:244] This network produces output accuracy
I0428 20:10:06.916761 31768 net.cpp:244] This network produces output loss
I0428 20:10:06.916785 31768 net.cpp:257] Network initialization done.
I0428 20:10:06.916844 31768 solver.cpp:56] Solver scaffolding done.
I0428 20:10:06.917286 31768 caffe.cpp:248] Starting Optimization
I0428 20:10:06.917294 31768 solver.cpp:273] Solving LeNet
I0428 20:10:06.917297 31768 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:06.918189 31768 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:06.925142 31768 blocking_queue.cpp:49] Waiting for data
I0428 20:10:06.984995 31775 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:06.985625 31768 solver.cpp:398]     Test net output #0: accuracy = 0.1035
I0428 20:10:06.985646 31768 solver.cpp:398]     Test net output #1: loss = 2.30431 (* 1 = 2.30431 loss)
I0428 20:10:06.989261 31768 solver.cpp:219] Iteration 0 (0 iter/s, 0.0719309s/100 iters), loss = 2.31101
I0428 20:10:06.989286 31768 solver.cpp:238]     Train net output #0: loss = 2.31101 (* 1 = 2.31101 loss)
I0428 20:10:06.989300 31768 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:07.091171 31768 solver.cpp:219] Iteration 100 (981.628 iter/s, 0.101872s/100 iters), loss = 0.694882
I0428 20:10:07.091197 31768 solver.cpp:238]     Train net output #0: loss = 0.694882 (* 1 = 0.694882 loss)
I0428 20:10:07.091202 31768 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:07.195343 31768 solver.cpp:219] Iteration 200 (960.286 iter/s, 0.104136s/100 iters), loss = 0.34034
I0428 20:10:07.195382 31768 solver.cpp:238]     Train net output #0: loss = 0.340339 (* 1 = 0.340339 loss)
I0428 20:10:07.195389 31768 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:07.302666 31768 solver.cpp:219] Iteration 300 (932.075 iter/s, 0.107288s/100 iters), loss = 0.498675
I0428 20:10:07.302700 31768 solver.cpp:238]     Train net output #0: loss = 0.498675 (* 1 = 0.498675 loss)
I0428 20:10:07.302708 31768 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:07.407534 31768 solver.cpp:219] Iteration 400 (953.963 iter/s, 0.104826s/100 iters), loss = 0.198527
I0428 20:10:07.407559 31768 solver.cpp:238]     Train net output #0: loss = 0.198527 (* 1 = 0.198527 loss)
I0428 20:10:07.407567 31768 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:07.514745 31768 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:07.576788 31775 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:07.578793 31768 solver.cpp:398]     Test net output #0: accuracy = 0.8683
I0428 20:10:07.578817 31768 solver.cpp:398]     Test net output #1: loss = 0.342432 (* 1 = 0.342432 loss)
I0428 20:10:07.579819 31768 solver.cpp:219] Iteration 500 (580.572 iter/s, 0.172244s/100 iters), loss = 0.285337
I0428 20:10:07.579866 31768 solver.cpp:238]     Train net output #0: loss = 0.285336 (* 1 = 0.285336 loss)
I0428 20:10:07.579875 31768 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:07.684144 31768 solver.cpp:219] Iteration 600 (959.06 iter/s, 0.104269s/100 iters), loss = 0.369206
I0428 20:10:07.684168 31768 solver.cpp:238]     Train net output #0: loss = 0.369206 (* 1 = 0.369206 loss)
I0428 20:10:07.684175 31768 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:07.792680 31768 solver.cpp:219] Iteration 700 (921.643 iter/s, 0.108502s/100 iters), loss = 0.431448
I0428 20:10:07.792719 31768 solver.cpp:238]     Train net output #0: loss = 0.431448 (* 1 = 0.431448 loss)
I0428 20:10:07.792726 31768 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:07.900421 31768 solver.cpp:219] Iteration 800 (928.433 iter/s, 0.107708s/100 iters), loss = 0.37803
I0428 20:10:07.900447 31768 solver.cpp:238]     Train net output #0: loss = 0.37803 (* 1 = 0.37803 loss)
I0428 20:10:07.900454 31768 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:08.002044 31768 solver.cpp:219] Iteration 900 (984.378 iter/s, 0.101587s/100 iters), loss = 0.488796
I0428 20:10:08.002084 31768 solver.cpp:238]     Train net output #0: loss = 0.488796 (* 1 = 0.488796 loss)
I0428 20:10:08.002091 31768 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:08.035594 31774 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:08.108404 31768 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:08.109731 31768 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:08.110560 31768 solver.cpp:311] Iteration 1000, loss = 0.415604
I0428 20:10:08.110575 31768 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:08.188143 31775 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:08.188825 31768 solver.cpp:398]     Test net output #0: accuracy = 0.8778
I0428 20:10:08.188858 31768 solver.cpp:398]     Test net output #1: loss = 0.306494 (* 1 = 0.306494 loss)
I0428 20:10:08.188880 31768 solver.cpp:316] Optimization Done.
I0428 20:10:08.188884 31768 caffe.cpp:259] Optimization Done.
