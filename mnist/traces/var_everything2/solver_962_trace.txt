I0428 20:03:57.484571 30296 caffe.cpp:218] Using GPUs 0
I0428 20:03:57.520637 30296 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:58.040176 30296 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test962.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:58.040318 30296 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test962.prototxt
I0428 20:03:58.040733 30296 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:58.040752 30296 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:58.040863 30296 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:58.040944 30296 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:58.041043 30296 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:58.041067 30296 net.cpp:86] Creating Layer mnist
I0428 20:03:58.041076 30296 net.cpp:382] mnist -> data
I0428 20:03:58.041098 30296 net.cpp:382] mnist -> label
I0428 20:03:58.042186 30296 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:58.044630 30296 net.cpp:124] Setting up mnist
I0428 20:03:58.044646 30296 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:58.044651 30296 net.cpp:131] Top shape: 64 (64)
I0428 20:03:58.044656 30296 net.cpp:139] Memory required for data: 200960
I0428 20:03:58.044662 30296 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:58.044679 30296 net.cpp:86] Creating Layer conv0
I0428 20:03:58.044700 30296 net.cpp:408] conv0 <- data
I0428 20:03:58.044714 30296 net.cpp:382] conv0 -> conv0
I0428 20:03:58.336130 30296 net.cpp:124] Setting up conv0
I0428 20:03:58.336160 30296 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:58.336164 30296 net.cpp:139] Memory required for data: 1675520
I0428 20:03:58.336181 30296 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:58.336197 30296 net.cpp:86] Creating Layer pool0
I0428 20:03:58.336202 30296 net.cpp:408] pool0 <- conv0
I0428 20:03:58.336208 30296 net.cpp:382] pool0 -> pool0
I0428 20:03:58.336261 30296 net.cpp:124] Setting up pool0
I0428 20:03:58.336266 30296 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:58.336269 30296 net.cpp:139] Memory required for data: 2044160
I0428 20:03:58.336273 30296 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:58.336285 30296 net.cpp:86] Creating Layer conv1
I0428 20:03:58.336289 30296 net.cpp:408] conv1 <- pool0
I0428 20:03:58.336294 30296 net.cpp:382] conv1 -> conv1
I0428 20:03:58.338503 30296 net.cpp:124] Setting up conv1
I0428 20:03:58.338521 30296 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:58.338524 30296 net.cpp:139] Memory required for data: 3682560
I0428 20:03:58.338534 30296 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:58.338542 30296 net.cpp:86] Creating Layer pool1
I0428 20:03:58.338547 30296 net.cpp:408] pool1 <- conv1
I0428 20:03:58.338553 30296 net.cpp:382] pool1 -> pool1
I0428 20:03:58.338594 30296 net.cpp:124] Setting up pool1
I0428 20:03:58.338600 30296 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:58.338603 30296 net.cpp:139] Memory required for data: 4092160
I0428 20:03:58.338608 30296 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:58.338614 30296 net.cpp:86] Creating Layer ip1
I0428 20:03:58.338618 30296 net.cpp:408] ip1 <- pool1
I0428 20:03:58.338624 30296 net.cpp:382] ip1 -> ip1
I0428 20:03:58.338994 30296 net.cpp:124] Setting up ip1
I0428 20:03:58.339001 30296 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:58.339005 30296 net.cpp:139] Memory required for data: 4098560
I0428 20:03:58.339012 30296 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:58.339020 30296 net.cpp:86] Creating Layer relu1
I0428 20:03:58.339022 30296 net.cpp:408] relu1 <- ip1
I0428 20:03:58.339027 30296 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:58.339208 30296 net.cpp:124] Setting up relu1
I0428 20:03:58.339218 30296 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:58.339222 30296 net.cpp:139] Memory required for data: 4104960
I0428 20:03:58.339226 30296 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:58.339232 30296 net.cpp:86] Creating Layer ip2
I0428 20:03:58.339236 30296 net.cpp:408] ip2 <- ip1
I0428 20:03:58.339241 30296 net.cpp:382] ip2 -> ip2
I0428 20:03:58.339349 30296 net.cpp:124] Setting up ip2
I0428 20:03:58.339356 30296 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:58.339359 30296 net.cpp:139] Memory required for data: 4111360
I0428 20:03:58.339366 30296 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:58.339372 30296 net.cpp:86] Creating Layer relu2
I0428 20:03:58.339375 30296 net.cpp:408] relu2 <- ip2
I0428 20:03:58.339380 30296 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:58.340199 30296 net.cpp:124] Setting up relu2
I0428 20:03:58.340214 30296 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:58.340217 30296 net.cpp:139] Memory required for data: 4117760
I0428 20:03:58.340221 30296 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:58.340229 30296 net.cpp:86] Creating Layer ip3
I0428 20:03:58.340232 30296 net.cpp:408] ip3 <- ip2
I0428 20:03:58.340239 30296 net.cpp:382] ip3 -> ip3
I0428 20:03:58.340347 30296 net.cpp:124] Setting up ip3
I0428 20:03:58.340355 30296 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:58.340358 30296 net.cpp:139] Memory required for data: 4120320
I0428 20:03:58.340368 30296 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:58.340373 30296 net.cpp:86] Creating Layer relu3
I0428 20:03:58.340378 30296 net.cpp:408] relu3 <- ip3
I0428 20:03:58.340381 30296 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:58.340567 30296 net.cpp:124] Setting up relu3
I0428 20:03:58.340577 30296 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:58.340580 30296 net.cpp:139] Memory required for data: 4122880
I0428 20:03:58.340584 30296 layer_factory.hpp:77] Creating layer loss
I0428 20:03:58.340592 30296 net.cpp:86] Creating Layer loss
I0428 20:03:58.340595 30296 net.cpp:408] loss <- ip3
I0428 20:03:58.340600 30296 net.cpp:408] loss <- label
I0428 20:03:58.340606 30296 net.cpp:382] loss -> loss
I0428 20:03:58.340626 30296 layer_factory.hpp:77] Creating layer loss
I0428 20:03:58.340883 30296 net.cpp:124] Setting up loss
I0428 20:03:58.340894 30296 net.cpp:131] Top shape: (1)
I0428 20:03:58.340898 30296 net.cpp:134]     with loss weight 1
I0428 20:03:58.340914 30296 net.cpp:139] Memory required for data: 4122884
I0428 20:03:58.340917 30296 net.cpp:200] loss needs backward computation.
I0428 20:03:58.340922 30296 net.cpp:200] relu3 needs backward computation.
I0428 20:03:58.340925 30296 net.cpp:200] ip3 needs backward computation.
I0428 20:03:58.340929 30296 net.cpp:200] relu2 needs backward computation.
I0428 20:03:58.340932 30296 net.cpp:200] ip2 needs backward computation.
I0428 20:03:58.340935 30296 net.cpp:200] relu1 needs backward computation.
I0428 20:03:58.340939 30296 net.cpp:200] ip1 needs backward computation.
I0428 20:03:58.340942 30296 net.cpp:200] pool1 needs backward computation.
I0428 20:03:58.340945 30296 net.cpp:200] conv1 needs backward computation.
I0428 20:03:58.340950 30296 net.cpp:200] pool0 needs backward computation.
I0428 20:03:58.340955 30296 net.cpp:200] conv0 needs backward computation.
I0428 20:03:58.340962 30296 net.cpp:202] mnist does not need backward computation.
I0428 20:03:58.340967 30296 net.cpp:244] This network produces output loss
I0428 20:03:58.340981 30296 net.cpp:257] Network initialization done.
I0428 20:03:58.341346 30296 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test962.prototxt
I0428 20:03:58.341377 30296 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:58.341475 30296 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:58.341562 30296 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:58.341611 30296 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:58.341624 30296 net.cpp:86] Creating Layer mnist
I0428 20:03:58.341629 30296 net.cpp:382] mnist -> data
I0428 20:03:58.341639 30296 net.cpp:382] mnist -> label
I0428 20:03:58.341728 30296 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:58.343945 30296 net.cpp:124] Setting up mnist
I0428 20:03:58.343960 30296 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:58.343966 30296 net.cpp:131] Top shape: 100 (100)
I0428 20:03:58.343968 30296 net.cpp:139] Memory required for data: 314000
I0428 20:03:58.343972 30296 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:58.343983 30296 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:58.343989 30296 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:58.343994 30296 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:58.344002 30296 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:58.344054 30296 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:58.344069 30296 net.cpp:131] Top shape: 100 (100)
I0428 20:03:58.344074 30296 net.cpp:131] Top shape: 100 (100)
I0428 20:03:58.344076 30296 net.cpp:139] Memory required for data: 314800
I0428 20:03:58.344079 30296 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:58.344089 30296 net.cpp:86] Creating Layer conv0
I0428 20:03:58.344092 30296 net.cpp:408] conv0 <- data
I0428 20:03:58.344097 30296 net.cpp:382] conv0 -> conv0
I0428 20:03:58.345859 30296 net.cpp:124] Setting up conv0
I0428 20:03:58.345873 30296 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:58.345877 30296 net.cpp:139] Memory required for data: 2618800
I0428 20:03:58.345887 30296 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:58.345896 30296 net.cpp:86] Creating Layer pool0
I0428 20:03:58.345901 30296 net.cpp:408] pool0 <- conv0
I0428 20:03:58.345906 30296 net.cpp:382] pool0 -> pool0
I0428 20:03:58.345944 30296 net.cpp:124] Setting up pool0
I0428 20:03:58.345950 30296 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:58.345953 30296 net.cpp:139] Memory required for data: 3194800
I0428 20:03:58.345957 30296 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:58.345966 30296 net.cpp:86] Creating Layer conv1
I0428 20:03:58.345969 30296 net.cpp:408] conv1 <- pool0
I0428 20:03:58.345976 30296 net.cpp:382] conv1 -> conv1
I0428 20:03:58.347757 30296 net.cpp:124] Setting up conv1
I0428 20:03:58.347771 30296 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:58.347775 30296 net.cpp:139] Memory required for data: 5754800
I0428 20:03:58.347785 30296 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:58.347793 30296 net.cpp:86] Creating Layer pool1
I0428 20:03:58.347798 30296 net.cpp:408] pool1 <- conv1
I0428 20:03:58.347805 30296 net.cpp:382] pool1 -> pool1
I0428 20:03:58.347846 30296 net.cpp:124] Setting up pool1
I0428 20:03:58.347851 30296 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:58.347854 30296 net.cpp:139] Memory required for data: 6394800
I0428 20:03:58.347857 30296 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:58.347865 30296 net.cpp:86] Creating Layer ip1
I0428 20:03:58.347868 30296 net.cpp:408] ip1 <- pool1
I0428 20:03:58.347874 30296 net.cpp:382] ip1 -> ip1
I0428 20:03:58.348237 30296 net.cpp:124] Setting up ip1
I0428 20:03:58.348244 30296 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:58.348258 30296 net.cpp:139] Memory required for data: 6404800
I0428 20:03:58.348266 30296 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:58.348271 30296 net.cpp:86] Creating Layer relu1
I0428 20:03:58.348275 30296 net.cpp:408] relu1 <- ip1
I0428 20:03:58.348281 30296 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:58.348472 30296 net.cpp:124] Setting up relu1
I0428 20:03:58.348481 30296 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:58.348485 30296 net.cpp:139] Memory required for data: 6414800
I0428 20:03:58.348489 30296 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:58.348496 30296 net.cpp:86] Creating Layer ip2
I0428 20:03:58.348500 30296 net.cpp:408] ip2 <- ip1
I0428 20:03:58.348506 30296 net.cpp:382] ip2 -> ip2
I0428 20:03:58.348637 30296 net.cpp:124] Setting up ip2
I0428 20:03:58.348651 30296 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:58.348655 30296 net.cpp:139] Memory required for data: 6424800
I0428 20:03:58.348661 30296 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:58.348666 30296 net.cpp:86] Creating Layer relu2
I0428 20:03:58.348670 30296 net.cpp:408] relu2 <- ip2
I0428 20:03:58.348673 30296 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:58.348891 30296 net.cpp:124] Setting up relu2
I0428 20:03:58.348903 30296 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:58.348906 30296 net.cpp:139] Memory required for data: 6434800
I0428 20:03:58.348911 30296 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:58.348917 30296 net.cpp:86] Creating Layer ip3
I0428 20:03:58.348920 30296 net.cpp:408] ip3 <- ip2
I0428 20:03:58.348927 30296 net.cpp:382] ip3 -> ip3
I0428 20:03:58.349035 30296 net.cpp:124] Setting up ip3
I0428 20:03:58.349042 30296 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:58.349046 30296 net.cpp:139] Memory required for data: 6438800
I0428 20:03:58.349056 30296 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:58.349061 30296 net.cpp:86] Creating Layer relu3
I0428 20:03:58.349063 30296 net.cpp:408] relu3 <- ip3
I0428 20:03:58.349069 30296 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:58.349913 30296 net.cpp:124] Setting up relu3
I0428 20:03:58.349926 30296 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:58.349931 30296 net.cpp:139] Memory required for data: 6442800
I0428 20:03:58.349933 30296 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:58.349939 30296 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:58.349942 30296 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:58.349947 30296 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:58.349956 30296 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:58.350009 30296 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:58.350015 30296 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:58.350019 30296 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:58.350023 30296 net.cpp:139] Memory required for data: 6450800
I0428 20:03:58.350025 30296 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:58.350033 30296 net.cpp:86] Creating Layer accuracy
I0428 20:03:58.350036 30296 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:58.350041 30296 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:58.350045 30296 net.cpp:382] accuracy -> accuracy
I0428 20:03:58.350054 30296 net.cpp:124] Setting up accuracy
I0428 20:03:58.350059 30296 net.cpp:131] Top shape: (1)
I0428 20:03:58.350061 30296 net.cpp:139] Memory required for data: 6450804
I0428 20:03:58.350064 30296 layer_factory.hpp:77] Creating layer loss
I0428 20:03:58.350070 30296 net.cpp:86] Creating Layer loss
I0428 20:03:58.350075 30296 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:58.350077 30296 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:58.350082 30296 net.cpp:382] loss -> loss
I0428 20:03:58.350088 30296 layer_factory.hpp:77] Creating layer loss
I0428 20:03:58.350363 30296 net.cpp:124] Setting up loss
I0428 20:03:58.350374 30296 net.cpp:131] Top shape: (1)
I0428 20:03:58.350378 30296 net.cpp:134]     with loss weight 1
I0428 20:03:58.350395 30296 net.cpp:139] Memory required for data: 6450808
I0428 20:03:58.350400 30296 net.cpp:200] loss needs backward computation.
I0428 20:03:58.350404 30296 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:58.350409 30296 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:58.350412 30296 net.cpp:200] relu3 needs backward computation.
I0428 20:03:58.350416 30296 net.cpp:200] ip3 needs backward computation.
I0428 20:03:58.350419 30296 net.cpp:200] relu2 needs backward computation.
I0428 20:03:58.350422 30296 net.cpp:200] ip2 needs backward computation.
I0428 20:03:58.350426 30296 net.cpp:200] relu1 needs backward computation.
I0428 20:03:58.350430 30296 net.cpp:200] ip1 needs backward computation.
I0428 20:03:58.350432 30296 net.cpp:200] pool1 needs backward computation.
I0428 20:03:58.350436 30296 net.cpp:200] conv1 needs backward computation.
I0428 20:03:58.350440 30296 net.cpp:200] pool0 needs backward computation.
I0428 20:03:58.350445 30296 net.cpp:200] conv0 needs backward computation.
I0428 20:03:58.350448 30296 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:58.350452 30296 net.cpp:202] mnist does not need backward computation.
I0428 20:03:58.350455 30296 net.cpp:244] This network produces output accuracy
I0428 20:03:58.350459 30296 net.cpp:244] This network produces output loss
I0428 20:03:58.350471 30296 net.cpp:257] Network initialization done.
I0428 20:03:58.350517 30296 solver.cpp:56] Solver scaffolding done.
I0428 20:03:58.350883 30296 caffe.cpp:248] Starting Optimization
I0428 20:03:58.350890 30296 solver.cpp:273] Solving LeNet
I0428 20:03:58.350893 30296 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:58.351821 30296 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:58.357231 30296 blocking_queue.cpp:49] Waiting for data
I0428 20:03:58.427145 30303 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:58.427784 30296 solver.cpp:398]     Test net output #0: accuracy = 0.095
I0428 20:03:58.427820 30296 solver.cpp:398]     Test net output #1: loss = 2.31148 (* 1 = 2.31148 loss)
I0428 20:03:58.431452 30296 solver.cpp:219] Iteration 0 (-1.71958e-31 iter/s, 0.0805263s/100 iters), loss = 2.30625
I0428 20:03:58.431476 30296 solver.cpp:238]     Train net output #0: loss = 2.30625 (* 1 = 2.30625 loss)
I0428 20:03:58.431488 30296 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:58.586349 30296 solver.cpp:219] Iteration 100 (645.756 iter/s, 0.154857s/100 iters), loss = 0.89958
I0428 20:03:58.586388 30296 solver.cpp:238]     Train net output #0: loss = 0.89958 (* 1 = 0.89958 loss)
I0428 20:03:58.586395 30296 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:58.741129 30296 solver.cpp:219] Iteration 200 (646.298 iter/s, 0.154727s/100 iters), loss = 0.572842
I0428 20:03:58.741155 30296 solver.cpp:238]     Train net output #0: loss = 0.572842 (* 1 = 0.572842 loss)
I0428 20:03:58.741161 30296 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:58.895429 30296 solver.cpp:219] Iteration 300 (648.254 iter/s, 0.15426s/100 iters), loss = 0.206018
I0428 20:03:58.895469 30296 solver.cpp:238]     Train net output #0: loss = 0.206018 (* 1 = 0.206018 loss)
I0428 20:03:58.895476 30296 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:59.053680 30296 solver.cpp:219] Iteration 400 (632.059 iter/s, 0.158213s/100 iters), loss = 0.165567
I0428 20:03:59.053720 30296 solver.cpp:238]     Train net output #0: loss = 0.165567 (* 1 = 0.165567 loss)
I0428 20:03:59.053726 30296 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:59.208577 30296 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:59.264434 30303 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:59.266425 30296 solver.cpp:398]     Test net output #0: accuracy = 0.9528
I0428 20:03:59.266448 30296 solver.cpp:398]     Test net output #1: loss = 0.145229 (* 1 = 0.145229 loss)
I0428 20:03:59.267968 30296 solver.cpp:219] Iteration 500 (466.755 iter/s, 0.214245s/100 iters), loss = 0.0910609
I0428 20:03:59.268016 30296 solver.cpp:238]     Train net output #0: loss = 0.0910609 (* 1 = 0.0910609 loss)
I0428 20:03:59.268023 30296 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:59.424612 30296 solver.cpp:219] Iteration 600 (638.593 iter/s, 0.156594s/100 iters), loss = 0.0997873
I0428 20:03:59.424654 30296 solver.cpp:238]     Train net output #0: loss = 0.0997873 (* 1 = 0.0997873 loss)
I0428 20:03:59.424660 30296 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:59.583443 30296 solver.cpp:219] Iteration 700 (629.752 iter/s, 0.158793s/100 iters), loss = 0.155121
I0428 20:03:59.583487 30296 solver.cpp:238]     Train net output #0: loss = 0.155121 (* 1 = 0.155121 loss)
I0428 20:03:59.583492 30296 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:59.742730 30296 solver.cpp:219] Iteration 800 (627.958 iter/s, 0.159246s/100 iters), loss = 0.18115
I0428 20:03:59.742758 30296 solver.cpp:238]     Train net output #0: loss = 0.18115 (* 1 = 0.18115 loss)
I0428 20:03:59.742763 30296 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:59.903332 30296 solver.cpp:219] Iteration 900 (622.808 iter/s, 0.160563s/100 iters), loss = 0.144496
I0428 20:03:59.903373 30296 solver.cpp:238]     Train net output #0: loss = 0.144496 (* 1 = 0.144496 loss)
I0428 20:03:59.903379 30296 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:59.956235 30302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:00.059135 30296 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:00.061484 30296 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:00.062613 30296 solver.cpp:311] Iteration 1000, loss = 0.0975102
I0428 20:04:00.062630 30296 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:00.138031 30303 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:00.138665 30296 solver.cpp:398]     Test net output #0: accuracy = 0.9728
I0428 20:04:00.138701 30296 solver.cpp:398]     Test net output #1: loss = 0.0854602 (* 1 = 0.0854602 loss)
I0428 20:04:00.138706 30296 solver.cpp:316] Optimization Done.
I0428 20:04:00.138710 30296 caffe.cpp:259] Optimization Done.
