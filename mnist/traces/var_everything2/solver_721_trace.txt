I0428 19:54:54.861922 28079 caffe.cpp:218] Using GPUs 0
I0428 19:54:54.900751 28079 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:55.411659 28079 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test721.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:55.411804 28079 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test721.prototxt
I0428 19:54:55.412214 28079 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:55.412230 28079 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:55.412325 28079 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:55.412397 28079 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:55.412495 28079 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:55.412518 28079 net.cpp:86] Creating Layer mnist
I0428 19:54:55.412526 28079 net.cpp:382] mnist -> data
I0428 19:54:55.412549 28079 net.cpp:382] mnist -> label
I0428 19:54:55.413647 28079 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:55.416332 28079 net.cpp:124] Setting up mnist
I0428 19:54:55.416358 28079 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:55.416365 28079 net.cpp:131] Top shape: 64 (64)
I0428 19:54:55.416369 28079 net.cpp:139] Memory required for data: 200960
I0428 19:54:55.416376 28079 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:55.416393 28079 net.cpp:86] Creating Layer conv0
I0428 19:54:55.416414 28079 net.cpp:408] conv0 <- data
I0428 19:54:55.416426 28079 net.cpp:382] conv0 -> conv0
I0428 19:54:55.705719 28079 net.cpp:124] Setting up conv0
I0428 19:54:55.705750 28079 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:55.705755 28079 net.cpp:139] Memory required for data: 938240
I0428 19:54:55.705772 28079 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:55.705788 28079 net.cpp:86] Creating Layer pool0
I0428 19:54:55.705792 28079 net.cpp:408] pool0 <- conv0
I0428 19:54:55.705798 28079 net.cpp:382] pool0 -> pool0
I0428 19:54:55.705854 28079 net.cpp:124] Setting up pool0
I0428 19:54:55.705862 28079 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:55.705864 28079 net.cpp:139] Memory required for data: 1122560
I0428 19:54:55.705868 28079 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:55.705881 28079 net.cpp:86] Creating Layer conv1
I0428 19:54:55.705885 28079 net.cpp:408] conv1 <- pool0
I0428 19:54:55.705890 28079 net.cpp:382] conv1 -> conv1
I0428 19:54:55.709102 28079 net.cpp:124] Setting up conv1
I0428 19:54:55.709120 28079 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:55.709125 28079 net.cpp:139] Memory required for data: 2760960
I0428 19:54:55.709136 28079 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:55.709144 28079 net.cpp:86] Creating Layer pool1
I0428 19:54:55.709148 28079 net.cpp:408] pool1 <- conv1
I0428 19:54:55.709158 28079 net.cpp:382] pool1 -> pool1
I0428 19:54:55.709203 28079 net.cpp:124] Setting up pool1
I0428 19:54:55.709209 28079 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:55.709213 28079 net.cpp:139] Memory required for data: 3170560
I0428 19:54:55.709216 28079 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:55.709224 28079 net.cpp:86] Creating Layer ip1
I0428 19:54:55.709228 28079 net.cpp:408] ip1 <- pool1
I0428 19:54:55.709233 28079 net.cpp:382] ip1 -> ip1
I0428 19:54:55.709455 28079 net.cpp:124] Setting up ip1
I0428 19:54:55.709463 28079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:55.709467 28079 net.cpp:139] Memory required for data: 3173120
I0428 19:54:55.709476 28079 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:55.709482 28079 net.cpp:86] Creating Layer relu1
I0428 19:54:55.709486 28079 net.cpp:408] relu1 <- ip1
I0428 19:54:55.709491 28079 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:55.709686 28079 net.cpp:124] Setting up relu1
I0428 19:54:55.709697 28079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:55.709702 28079 net.cpp:139] Memory required for data: 3175680
I0428 19:54:55.709704 28079 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:55.709712 28079 net.cpp:86] Creating Layer ip2
I0428 19:54:55.709717 28079 net.cpp:408] ip2 <- ip1
I0428 19:54:55.709722 28079 net.cpp:382] ip2 -> ip2
I0428 19:54:55.709836 28079 net.cpp:124] Setting up ip2
I0428 19:54:55.709844 28079 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:54:55.709847 28079 net.cpp:139] Memory required for data: 3188480
I0428 19:54:55.709854 28079 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:55.709861 28079 net.cpp:86] Creating Layer relu2
I0428 19:54:55.709864 28079 net.cpp:408] relu2 <- ip2
I0428 19:54:55.709869 28079 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:55.710711 28079 net.cpp:124] Setting up relu2
I0428 19:54:55.710726 28079 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:54:55.710729 28079 net.cpp:139] Memory required for data: 3201280
I0428 19:54:55.710733 28079 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:55.710741 28079 net.cpp:86] Creating Layer ip3
I0428 19:54:55.710746 28079 net.cpp:408] ip3 <- ip2
I0428 19:54:55.710752 28079 net.cpp:382] ip3 -> ip3
I0428 19:54:55.710872 28079 net.cpp:124] Setting up ip3
I0428 19:54:55.710880 28079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:55.710885 28079 net.cpp:139] Memory required for data: 3203840
I0428 19:54:55.710894 28079 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:55.710901 28079 net.cpp:86] Creating Layer relu3
I0428 19:54:55.710904 28079 net.cpp:408] relu3 <- ip3
I0428 19:54:55.710908 28079 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:55.711107 28079 net.cpp:124] Setting up relu3
I0428 19:54:55.711117 28079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:55.711122 28079 net.cpp:139] Memory required for data: 3206400
I0428 19:54:55.711125 28079 layer_factory.hpp:77] Creating layer loss
I0428 19:54:55.711133 28079 net.cpp:86] Creating Layer loss
I0428 19:54:55.711138 28079 net.cpp:408] loss <- ip3
I0428 19:54:55.711141 28079 net.cpp:408] loss <- label
I0428 19:54:55.711148 28079 net.cpp:382] loss -> loss
I0428 19:54:55.711169 28079 layer_factory.hpp:77] Creating layer loss
I0428 19:54:55.711437 28079 net.cpp:124] Setting up loss
I0428 19:54:55.711447 28079 net.cpp:131] Top shape: (1)
I0428 19:54:55.711452 28079 net.cpp:134]     with loss weight 1
I0428 19:54:55.711468 28079 net.cpp:139] Memory required for data: 3206404
I0428 19:54:55.711472 28079 net.cpp:200] loss needs backward computation.
I0428 19:54:55.711477 28079 net.cpp:200] relu3 needs backward computation.
I0428 19:54:55.711480 28079 net.cpp:200] ip3 needs backward computation.
I0428 19:54:55.711484 28079 net.cpp:200] relu2 needs backward computation.
I0428 19:54:55.711488 28079 net.cpp:200] ip2 needs backward computation.
I0428 19:54:55.711491 28079 net.cpp:200] relu1 needs backward computation.
I0428 19:54:55.711494 28079 net.cpp:200] ip1 needs backward computation.
I0428 19:54:55.711498 28079 net.cpp:200] pool1 needs backward computation.
I0428 19:54:55.711501 28079 net.cpp:200] conv1 needs backward computation.
I0428 19:54:55.711505 28079 net.cpp:200] pool0 needs backward computation.
I0428 19:54:55.711509 28079 net.cpp:200] conv0 needs backward computation.
I0428 19:54:55.711513 28079 net.cpp:202] mnist does not need backward computation.
I0428 19:54:55.711516 28079 net.cpp:244] This network produces output loss
I0428 19:54:55.711529 28079 net.cpp:257] Network initialization done.
I0428 19:54:55.711912 28079 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test721.prototxt
I0428 19:54:55.711944 28079 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:55.712051 28079 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:55.712146 28079 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:55.712200 28079 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:55.712216 28079 net.cpp:86] Creating Layer mnist
I0428 19:54:55.712221 28079 net.cpp:382] mnist -> data
I0428 19:54:55.712230 28079 net.cpp:382] mnist -> label
I0428 19:54:55.712333 28079 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:55.714536 28079 net.cpp:124] Setting up mnist
I0428 19:54:55.714552 28079 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:55.714558 28079 net.cpp:131] Top shape: 100 (100)
I0428 19:54:55.714562 28079 net.cpp:139] Memory required for data: 314000
I0428 19:54:55.714567 28079 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:55.714591 28079 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:55.714597 28079 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:55.714603 28079 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:55.714612 28079 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:55.714701 28079 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:55.714710 28079 net.cpp:131] Top shape: 100 (100)
I0428 19:54:55.714715 28079 net.cpp:131] Top shape: 100 (100)
I0428 19:54:55.714718 28079 net.cpp:139] Memory required for data: 314800
I0428 19:54:55.714722 28079 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:55.714732 28079 net.cpp:86] Creating Layer conv0
I0428 19:54:55.714735 28079 net.cpp:408] conv0 <- data
I0428 19:54:55.714741 28079 net.cpp:382] conv0 -> conv0
I0428 19:54:55.716483 28079 net.cpp:124] Setting up conv0
I0428 19:54:55.716506 28079 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:55.716509 28079 net.cpp:139] Memory required for data: 1466800
I0428 19:54:55.716521 28079 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:55.716528 28079 net.cpp:86] Creating Layer pool0
I0428 19:54:55.716532 28079 net.cpp:408] pool0 <- conv0
I0428 19:54:55.716538 28079 net.cpp:382] pool0 -> pool0
I0428 19:54:55.716588 28079 net.cpp:124] Setting up pool0
I0428 19:54:55.716595 28079 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:55.716599 28079 net.cpp:139] Memory required for data: 1754800
I0428 19:54:55.716603 28079 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:55.716614 28079 net.cpp:86] Creating Layer conv1
I0428 19:54:55.716617 28079 net.cpp:408] conv1 <- pool0
I0428 19:54:55.716624 28079 net.cpp:382] conv1 -> conv1
I0428 19:54:55.718384 28079 net.cpp:124] Setting up conv1
I0428 19:54:55.718402 28079 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:55.718406 28079 net.cpp:139] Memory required for data: 4314800
I0428 19:54:55.718417 28079 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:55.718425 28079 net.cpp:86] Creating Layer pool1
I0428 19:54:55.718430 28079 net.cpp:408] pool1 <- conv1
I0428 19:54:55.718436 28079 net.cpp:382] pool1 -> pool1
I0428 19:54:55.718477 28079 net.cpp:124] Setting up pool1
I0428 19:54:55.718483 28079 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:55.718487 28079 net.cpp:139] Memory required for data: 4954800
I0428 19:54:55.718498 28079 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:55.718510 28079 net.cpp:86] Creating Layer ip1
I0428 19:54:55.718514 28079 net.cpp:408] ip1 <- pool1
I0428 19:54:55.718520 28079 net.cpp:382] ip1 -> ip1
I0428 19:54:55.718744 28079 net.cpp:124] Setting up ip1
I0428 19:54:55.718753 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.718770 28079 net.cpp:139] Memory required for data: 4958800
I0428 19:54:55.718778 28079 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:55.718785 28079 net.cpp:86] Creating Layer relu1
I0428 19:54:55.718788 28079 net.cpp:408] relu1 <- ip1
I0428 19:54:55.718794 28079 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:55.718979 28079 net.cpp:124] Setting up relu1
I0428 19:54:55.718991 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.718996 28079 net.cpp:139] Memory required for data: 4962800
I0428 19:54:55.718999 28079 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:55.719007 28079 net.cpp:86] Creating Layer ip2
I0428 19:54:55.719012 28079 net.cpp:408] ip2 <- ip1
I0428 19:54:55.719018 28079 net.cpp:382] ip2 -> ip2
I0428 19:54:55.719149 28079 net.cpp:124] Setting up ip2
I0428 19:54:55.719157 28079 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:54:55.719161 28079 net.cpp:139] Memory required for data: 4982800
I0428 19:54:55.719167 28079 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:55.719173 28079 net.cpp:86] Creating Layer relu2
I0428 19:54:55.719177 28079 net.cpp:408] relu2 <- ip2
I0428 19:54:55.719182 28079 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:55.719449 28079 net.cpp:124] Setting up relu2
I0428 19:54:55.719461 28079 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:54:55.719465 28079 net.cpp:139] Memory required for data: 5002800
I0428 19:54:55.719470 28079 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:55.719478 28079 net.cpp:86] Creating Layer ip3
I0428 19:54:55.719482 28079 net.cpp:408] ip3 <- ip2
I0428 19:54:55.719488 28079 net.cpp:382] ip3 -> ip3
I0428 19:54:55.719614 28079 net.cpp:124] Setting up ip3
I0428 19:54:55.719621 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.719624 28079 net.cpp:139] Memory required for data: 5006800
I0428 19:54:55.719635 28079 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:55.719640 28079 net.cpp:86] Creating Layer relu3
I0428 19:54:55.719643 28079 net.cpp:408] relu3 <- ip3
I0428 19:54:55.719650 28079 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:55.720594 28079 net.cpp:124] Setting up relu3
I0428 19:54:55.720608 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.720613 28079 net.cpp:139] Memory required for data: 5010800
I0428 19:54:55.720618 28079 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:54:55.720624 28079 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:54:55.720628 28079 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:54:55.720633 28079 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:54:55.720640 28079 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:54:55.720687 28079 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:54:55.720695 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.720698 28079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:55.720702 28079 net.cpp:139] Memory required for data: 5018800
I0428 19:54:55.720706 28079 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:55.720711 28079 net.cpp:86] Creating Layer accuracy
I0428 19:54:55.720715 28079 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:54:55.720721 28079 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:55.720726 28079 net.cpp:382] accuracy -> accuracy
I0428 19:54:55.720734 28079 net.cpp:124] Setting up accuracy
I0428 19:54:55.720739 28079 net.cpp:131] Top shape: (1)
I0428 19:54:55.720742 28079 net.cpp:139] Memory required for data: 5018804
I0428 19:54:55.720746 28079 layer_factory.hpp:77] Creating layer loss
I0428 19:54:55.720752 28079 net.cpp:86] Creating Layer loss
I0428 19:54:55.720755 28079 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:54:55.720759 28079 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:55.720767 28079 net.cpp:382] loss -> loss
I0428 19:54:55.720773 28079 layer_factory.hpp:77] Creating layer loss
I0428 19:54:55.721071 28079 net.cpp:124] Setting up loss
I0428 19:54:55.721084 28079 net.cpp:131] Top shape: (1)
I0428 19:54:55.721087 28079 net.cpp:134]     with loss weight 1
I0428 19:54:55.721107 28079 net.cpp:139] Memory required for data: 5018808
I0428 19:54:55.721112 28079 net.cpp:200] loss needs backward computation.
I0428 19:54:55.721117 28079 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:55.721122 28079 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:54:55.721125 28079 net.cpp:200] relu3 needs backward computation.
I0428 19:54:55.721128 28079 net.cpp:200] ip3 needs backward computation.
I0428 19:54:55.721132 28079 net.cpp:200] relu2 needs backward computation.
I0428 19:54:55.721135 28079 net.cpp:200] ip2 needs backward computation.
I0428 19:54:55.721138 28079 net.cpp:200] relu1 needs backward computation.
I0428 19:54:55.721149 28079 net.cpp:200] ip1 needs backward computation.
I0428 19:54:55.721159 28079 net.cpp:200] pool1 needs backward computation.
I0428 19:54:55.721163 28079 net.cpp:200] conv1 needs backward computation.
I0428 19:54:55.721168 28079 net.cpp:200] pool0 needs backward computation.
I0428 19:54:55.721170 28079 net.cpp:200] conv0 needs backward computation.
I0428 19:54:55.721175 28079 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:55.721180 28079 net.cpp:202] mnist does not need backward computation.
I0428 19:54:55.721184 28079 net.cpp:244] This network produces output accuracy
I0428 19:54:55.721187 28079 net.cpp:244] This network produces output loss
I0428 19:54:55.721201 28079 net.cpp:257] Network initialization done.
I0428 19:54:55.721251 28079 solver.cpp:56] Solver scaffolding done.
I0428 19:54:55.721696 28079 caffe.cpp:248] Starting Optimization
I0428 19:54:55.721702 28079 solver.cpp:273] Solving LeNet
I0428 19:54:55.721706 28079 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:55.722579 28079 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:55.728163 28079 blocking_queue.cpp:49] Waiting for data
I0428 19:54:55.797147 28086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:55.797773 28079 solver.cpp:398]     Test net output #0: accuracy = 0.1489
I0428 19:54:55.797796 28079 solver.cpp:398]     Test net output #1: loss = 2.30454 (* 1 = 2.30454 loss)
I0428 19:54:55.801663 28079 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799232s/100 iters), loss = 2.30302
I0428 19:54:55.801692 28079 solver.cpp:238]     Train net output #0: loss = 2.30302 (* 1 = 2.30302 loss)
I0428 19:54:55.801705 28079 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:55.952162 28079 solver.cpp:219] Iteration 100 (664.672 iter/s, 0.15045s/100 iters), loss = 1.13853
I0428 19:54:55.952198 28079 solver.cpp:238]     Train net output #0: loss = 1.13853 (* 1 = 1.13853 loss)
I0428 19:54:55.952208 28079 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:56.119093 28079 solver.cpp:219] Iteration 200 (599.235 iter/s, 0.166879s/100 iters), loss = 0.923615
I0428 19:54:56.119134 28079 solver.cpp:238]     Train net output #0: loss = 0.923615 (* 1 = 0.923615 loss)
I0428 19:54:56.119145 28079 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:56.288347 28079 solver.cpp:219] Iteration 300 (591.022 iter/s, 0.169199s/100 iters), loss = 0.477151
I0428 19:54:56.288396 28079 solver.cpp:238]     Train net output #0: loss = 0.477151 (* 1 = 0.477151 loss)
I0428 19:54:56.288408 28079 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:56.459550 28079 solver.cpp:219] Iteration 400 (584.296 iter/s, 0.171146s/100 iters), loss = 0.570946
I0428 19:54:56.459602 28079 solver.cpp:238]     Train net output #0: loss = 0.570946 (* 1 = 0.570946 loss)
I0428 19:54:56.459614 28079 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:56.627625 28079 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:56.687115 28086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:56.689059 28079 solver.cpp:398]     Test net output #0: accuracy = 0.936
I0428 19:54:56.689100 28079 solver.cpp:398]     Test net output #1: loss = 0.374084 (* 1 = 0.374084 loss)
I0428 19:54:56.690562 28079 solver.cpp:219] Iteration 500 (432.987 iter/s, 0.230954s/100 iters), loss = 0.333678
I0428 19:54:56.690593 28079 solver.cpp:238]     Train net output #0: loss = 0.333678 (* 1 = 0.333678 loss)
I0428 19:54:56.690624 28079 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:56.855090 28079 solver.cpp:219] Iteration 600 (607.966 iter/s, 0.164483s/100 iters), loss = 0.293714
I0428 19:54:56.855137 28079 solver.cpp:238]     Train net output #0: loss = 0.293714 (* 1 = 0.293714 loss)
I0428 19:54:56.855149 28079 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:57.024191 28079 solver.cpp:219] Iteration 700 (591.552 iter/s, 0.169047s/100 iters), loss = 0.347195
I0428 19:54:57.024238 28079 solver.cpp:238]     Train net output #0: loss = 0.347195 (* 1 = 0.347195 loss)
I0428 19:54:57.024250 28079 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:57.193753 28079 solver.cpp:219] Iteration 800 (589.94 iter/s, 0.169509s/100 iters), loss = 0.406098
I0428 19:54:57.193795 28079 solver.cpp:238]     Train net output #0: loss = 0.406099 (* 1 = 0.406099 loss)
I0428 19:54:57.193806 28079 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:57.365763 28079 solver.cpp:219] Iteration 900 (581.557 iter/s, 0.171952s/100 iters), loss = 0.412535
I0428 19:54:57.365811 28079 solver.cpp:238]     Train net output #0: loss = 0.412535 (* 1 = 0.412535 loss)
I0428 19:54:57.365823 28079 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:57.421563 28085 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:57.532069 28079 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:57.534150 28079 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:57.535099 28079 solver.cpp:311] Iteration 1000, loss = 0.378684
I0428 19:54:57.535122 28079 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:57.593847 28086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:57.595793 28079 solver.cpp:398]     Test net output #0: accuracy = 0.9583
I0428 19:54:57.595818 28079 solver.cpp:398]     Test net output #1: loss = 0.313072 (* 1 = 0.313072 loss)
I0428 19:54:57.595824 28079 solver.cpp:316] Optimization Done.
I0428 19:54:57.595829 28079 caffe.cpp:259] Optimization Done.
