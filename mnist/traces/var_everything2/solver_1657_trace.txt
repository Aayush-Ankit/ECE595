I0428 20:37:52.040531  5050 caffe.cpp:218] Using GPUs 0
I0428 20:37:52.074384  5050 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:52.584661  5050 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1657.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:52.584801  5050 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1657.prototxt
I0428 20:37:52.585218  5050 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:52.585237  5050 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:52.585333  5050 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:52.585407  5050 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:52.585511  5050 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:52.585536  5050 net.cpp:86] Creating Layer mnist
I0428 20:37:52.585543  5050 net.cpp:382] mnist -> data
I0428 20:37:52.585566  5050 net.cpp:382] mnist -> label
I0428 20:37:52.586653  5050 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:52.589092  5050 net.cpp:124] Setting up mnist
I0428 20:37:52.589109  5050 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:52.589115  5050 net.cpp:131] Top shape: 64 (64)
I0428 20:37:52.589119  5050 net.cpp:139] Memory required for data: 200960
I0428 20:37:52.589128  5050 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:52.589144  5050 net.cpp:86] Creating Layer conv0
I0428 20:37:52.589164  5050 net.cpp:408] conv0 <- data
I0428 20:37:52.589177  5050 net.cpp:382] conv0 -> conv0
I0428 20:37:52.873832  5050 net.cpp:124] Setting up conv0
I0428 20:37:52.873859  5050 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:52.873864  5050 net.cpp:139] Memory required for data: 14946560
I0428 20:37:52.873879  5050 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:52.873891  5050 net.cpp:86] Creating Layer pool0
I0428 20:37:52.873895  5050 net.cpp:408] pool0 <- conv0
I0428 20:37:52.873901  5050 net.cpp:382] pool0 -> pool0
I0428 20:37:52.873947  5050 net.cpp:124] Setting up pool0
I0428 20:37:52.873952  5050 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:52.873955  5050 net.cpp:139] Memory required for data: 18632960
I0428 20:37:52.873958  5050 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:52.873970  5050 net.cpp:86] Creating Layer conv1
I0428 20:37:52.873972  5050 net.cpp:408] conv1 <- pool0
I0428 20:37:52.873976  5050 net.cpp:382] conv1 -> conv1
I0428 20:37:52.878125  5050 net.cpp:124] Setting up conv1
I0428 20:37:52.878140  5050 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:52.878144  5050 net.cpp:139] Memory required for data: 20271360
I0428 20:37:52.878152  5050 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:52.878159  5050 net.cpp:86] Creating Layer pool1
I0428 20:37:52.878162  5050 net.cpp:408] pool1 <- conv1
I0428 20:37:52.878167  5050 net.cpp:382] pool1 -> pool1
I0428 20:37:52.878202  5050 net.cpp:124] Setting up pool1
I0428 20:37:52.878207  5050 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:52.878211  5050 net.cpp:139] Memory required for data: 20680960
I0428 20:37:52.878213  5050 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:52.878221  5050 net.cpp:86] Creating Layer ip1
I0428 20:37:52.878223  5050 net.cpp:408] ip1 <- pool1
I0428 20:37:52.878228  5050 net.cpp:382] ip1 -> ip1
I0428 20:37:52.879209  5050 net.cpp:124] Setting up ip1
I0428 20:37:52.879221  5050 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:52.879225  5050 net.cpp:139] Memory required for data: 20683520
I0428 20:37:52.879233  5050 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:52.879240  5050 net.cpp:86] Creating Layer relu1
I0428 20:37:52.879242  5050 net.cpp:408] relu1 <- ip1
I0428 20:37:52.879246  5050 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:52.879407  5050 net.cpp:124] Setting up relu1
I0428 20:37:52.879416  5050 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:52.879420  5050 net.cpp:139] Memory required for data: 20686080
I0428 20:37:52.879422  5050 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:52.879429  5050 net.cpp:86] Creating Layer ip2
I0428 20:37:52.879432  5050 net.cpp:408] ip2 <- ip1
I0428 20:37:52.879436  5050 net.cpp:382] ip2 -> ip2
I0428 20:37:52.879530  5050 net.cpp:124] Setting up ip2
I0428 20:37:52.879537  5050 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:52.879540  5050 net.cpp:139] Memory required for data: 20698880
I0428 20:37:52.879545  5050 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:52.879551  5050 net.cpp:86] Creating Layer relu2
I0428 20:37:52.879554  5050 net.cpp:408] relu2 <- ip2
I0428 20:37:52.879559  5050 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:52.880267  5050 net.cpp:124] Setting up relu2
I0428 20:37:52.880280  5050 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:52.880283  5050 net.cpp:139] Memory required for data: 20711680
I0428 20:37:52.880286  5050 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:52.880293  5050 net.cpp:86] Creating Layer ip3
I0428 20:37:52.880296  5050 net.cpp:408] ip3 <- ip2
I0428 20:37:52.880302  5050 net.cpp:382] ip3 -> ip3
I0428 20:37:52.880399  5050 net.cpp:124] Setting up ip3
I0428 20:37:52.880406  5050 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:52.880409  5050 net.cpp:139] Memory required for data: 20714240
I0428 20:37:52.880417  5050 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:52.880421  5050 net.cpp:86] Creating Layer relu3
I0428 20:37:52.880424  5050 net.cpp:408] relu3 <- ip3
I0428 20:37:52.880444  5050 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:52.880584  5050 net.cpp:124] Setting up relu3
I0428 20:37:52.880592  5050 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:52.880595  5050 net.cpp:139] Memory required for data: 20716800
I0428 20:37:52.880599  5050 layer_factory.hpp:77] Creating layer loss
I0428 20:37:52.880609  5050 net.cpp:86] Creating Layer loss
I0428 20:37:52.880612  5050 net.cpp:408] loss <- ip3
I0428 20:37:52.880616  5050 net.cpp:408] loss <- label
I0428 20:37:52.880621  5050 net.cpp:382] loss -> loss
I0428 20:37:52.880635  5050 layer_factory.hpp:77] Creating layer loss
I0428 20:37:52.880870  5050 net.cpp:124] Setting up loss
I0428 20:37:52.880880  5050 net.cpp:131] Top shape: (1)
I0428 20:37:52.880883  5050 net.cpp:134]     with loss weight 1
I0428 20:37:52.880898  5050 net.cpp:139] Memory required for data: 20716804
I0428 20:37:52.880901  5050 net.cpp:200] loss needs backward computation.
I0428 20:37:52.880905  5050 net.cpp:200] relu3 needs backward computation.
I0428 20:37:52.880908  5050 net.cpp:200] ip3 needs backward computation.
I0428 20:37:52.880911  5050 net.cpp:200] relu2 needs backward computation.
I0428 20:37:52.880913  5050 net.cpp:200] ip2 needs backward computation.
I0428 20:37:52.880916  5050 net.cpp:200] relu1 needs backward computation.
I0428 20:37:52.880919  5050 net.cpp:200] ip1 needs backward computation.
I0428 20:37:52.880923  5050 net.cpp:200] pool1 needs backward computation.
I0428 20:37:52.880925  5050 net.cpp:200] conv1 needs backward computation.
I0428 20:37:52.880928  5050 net.cpp:200] pool0 needs backward computation.
I0428 20:37:52.880931  5050 net.cpp:200] conv0 needs backward computation.
I0428 20:37:52.880935  5050 net.cpp:202] mnist does not need backward computation.
I0428 20:37:52.880937  5050 net.cpp:244] This network produces output loss
I0428 20:37:52.880949  5050 net.cpp:257] Network initialization done.
I0428 20:37:52.881283  5050 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1657.prototxt
I0428 20:37:52.881310  5050 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:52.881400  5050 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:52.881479  5050 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:52.881525  5050 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:52.881536  5050 net.cpp:86] Creating Layer mnist
I0428 20:37:52.881541  5050 net.cpp:382] mnist -> data
I0428 20:37:52.881548  5050 net.cpp:382] mnist -> label
I0428 20:37:52.881630  5050 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:52.883466  5050 net.cpp:124] Setting up mnist
I0428 20:37:52.883479  5050 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:52.883484  5050 net.cpp:131] Top shape: 100 (100)
I0428 20:37:52.883487  5050 net.cpp:139] Memory required for data: 314000
I0428 20:37:52.883491  5050 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:52.883498  5050 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:52.883502  5050 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:52.883507  5050 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:52.883528  5050 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:52.883617  5050 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:52.883625  5050 net.cpp:131] Top shape: 100 (100)
I0428 20:37:52.883628  5050 net.cpp:131] Top shape: 100 (100)
I0428 20:37:52.883631  5050 net.cpp:139] Memory required for data: 314800
I0428 20:37:52.883635  5050 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:52.883643  5050 net.cpp:86] Creating Layer conv0
I0428 20:37:52.883648  5050 net.cpp:408] conv0 <- data
I0428 20:37:52.883653  5050 net.cpp:382] conv0 -> conv0
I0428 20:37:52.885347  5050 net.cpp:124] Setting up conv0
I0428 20:37:52.885361  5050 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:52.885365  5050 net.cpp:139] Memory required for data: 23354800
I0428 20:37:52.885373  5050 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:52.885380  5050 net.cpp:86] Creating Layer pool0
I0428 20:37:52.885383  5050 net.cpp:408] pool0 <- conv0
I0428 20:37:52.885387  5050 net.cpp:382] pool0 -> pool0
I0428 20:37:52.885422  5050 net.cpp:124] Setting up pool0
I0428 20:37:52.885427  5050 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:52.885445  5050 net.cpp:139] Memory required for data: 29114800
I0428 20:37:52.885448  5050 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:52.885457  5050 net.cpp:86] Creating Layer conv1
I0428 20:37:52.885459  5050 net.cpp:408] conv1 <- pool0
I0428 20:37:52.885464  5050 net.cpp:382] conv1 -> conv1
I0428 20:37:52.888250  5050 net.cpp:124] Setting up conv1
I0428 20:37:52.888263  5050 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:52.888267  5050 net.cpp:139] Memory required for data: 31674800
I0428 20:37:52.888275  5050 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:52.888281  5050 net.cpp:86] Creating Layer pool1
I0428 20:37:52.888284  5050 net.cpp:408] pool1 <- conv1
I0428 20:37:52.888290  5050 net.cpp:382] pool1 -> pool1
I0428 20:37:52.888341  5050 net.cpp:124] Setting up pool1
I0428 20:37:52.888346  5050 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:52.888350  5050 net.cpp:139] Memory required for data: 32314800
I0428 20:37:52.888355  5050 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:52.888360  5050 net.cpp:86] Creating Layer ip1
I0428 20:37:52.888370  5050 net.cpp:408] ip1 <- pool1
I0428 20:37:52.888375  5050 net.cpp:382] ip1 -> ip1
I0428 20:37:52.888556  5050 net.cpp:124] Setting up ip1
I0428 20:37:52.888576  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.888578  5050 net.cpp:139] Memory required for data: 32318800
I0428 20:37:52.888586  5050 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:52.888592  5050 net.cpp:86] Creating Layer relu1
I0428 20:37:52.888594  5050 net.cpp:408] relu1 <- ip1
I0428 20:37:52.888599  5050 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:52.888756  5050 net.cpp:124] Setting up relu1
I0428 20:37:52.888763  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.888767  5050 net.cpp:139] Memory required for data: 32322800
I0428 20:37:52.888770  5050 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:52.888777  5050 net.cpp:86] Creating Layer ip2
I0428 20:37:52.888780  5050 net.cpp:408] ip2 <- ip1
I0428 20:37:52.888785  5050 net.cpp:382] ip2 -> ip2
I0428 20:37:52.888960  5050 net.cpp:124] Setting up ip2
I0428 20:37:52.888969  5050 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:52.888972  5050 net.cpp:139] Memory required for data: 32342800
I0428 20:37:52.888978  5050 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:52.888983  5050 net.cpp:86] Creating Layer relu2
I0428 20:37:52.888986  5050 net.cpp:408] relu2 <- ip2
I0428 20:37:52.888990  5050 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:52.889231  5050 net.cpp:124] Setting up relu2
I0428 20:37:52.889241  5050 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:52.889245  5050 net.cpp:139] Memory required for data: 32362800
I0428 20:37:52.889248  5050 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:52.889253  5050 net.cpp:86] Creating Layer ip3
I0428 20:37:52.889257  5050 net.cpp:408] ip3 <- ip2
I0428 20:37:52.889262  5050 net.cpp:382] ip3 -> ip3
I0428 20:37:52.889396  5050 net.cpp:124] Setting up ip3
I0428 20:37:52.889403  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.889407  5050 net.cpp:139] Memory required for data: 32366800
I0428 20:37:52.889415  5050 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:52.889420  5050 net.cpp:86] Creating Layer relu3
I0428 20:37:52.889423  5050 net.cpp:408] relu3 <- ip3
I0428 20:37:52.889427  5050 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:52.890218  5050 net.cpp:124] Setting up relu3
I0428 20:37:52.890229  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.890233  5050 net.cpp:139] Memory required for data: 32370800
I0428 20:37:52.890236  5050 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:52.890244  5050 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:52.890246  5050 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:52.890251  5050 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:52.890257  5050 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:52.890300  5050 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:52.890305  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.890310  5050 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:52.890312  5050 net.cpp:139] Memory required for data: 32378800
I0428 20:37:52.890316  5050 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:52.890321  5050 net.cpp:86] Creating Layer accuracy
I0428 20:37:52.890323  5050 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:52.890327  5050 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:52.890332  5050 net.cpp:382] accuracy -> accuracy
I0428 20:37:52.890338  5050 net.cpp:124] Setting up accuracy
I0428 20:37:52.890342  5050 net.cpp:131] Top shape: (1)
I0428 20:37:52.890346  5050 net.cpp:139] Memory required for data: 32378804
I0428 20:37:52.890348  5050 layer_factory.hpp:77] Creating layer loss
I0428 20:37:52.890352  5050 net.cpp:86] Creating Layer loss
I0428 20:37:52.890357  5050 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:52.890360  5050 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:52.890365  5050 net.cpp:382] loss -> loss
I0428 20:37:52.890372  5050 layer_factory.hpp:77] Creating layer loss
I0428 20:37:52.890602  5050 net.cpp:124] Setting up loss
I0428 20:37:52.890611  5050 net.cpp:131] Top shape: (1)
I0428 20:37:52.890614  5050 net.cpp:134]     with loss weight 1
I0428 20:37:52.890631  5050 net.cpp:139] Memory required for data: 32378808
I0428 20:37:52.890635  5050 net.cpp:200] loss needs backward computation.
I0428 20:37:52.890640  5050 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:52.890642  5050 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:52.890645  5050 net.cpp:200] relu3 needs backward computation.
I0428 20:37:52.890650  5050 net.cpp:200] ip3 needs backward computation.
I0428 20:37:52.890652  5050 net.cpp:200] relu2 needs backward computation.
I0428 20:37:52.890655  5050 net.cpp:200] ip2 needs backward computation.
I0428 20:37:52.890658  5050 net.cpp:200] relu1 needs backward computation.
I0428 20:37:52.890661  5050 net.cpp:200] ip1 needs backward computation.
I0428 20:37:52.890663  5050 net.cpp:200] pool1 needs backward computation.
I0428 20:37:52.890667  5050 net.cpp:200] conv1 needs backward computation.
I0428 20:37:52.890671  5050 net.cpp:200] pool0 needs backward computation.
I0428 20:37:52.890673  5050 net.cpp:200] conv0 needs backward computation.
I0428 20:37:52.890677  5050 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:52.890681  5050 net.cpp:202] mnist does not need backward computation.
I0428 20:37:52.890691  5050 net.cpp:244] This network produces output accuracy
I0428 20:37:52.890693  5050 net.cpp:244] This network produces output loss
I0428 20:37:52.890705  5050 net.cpp:257] Network initialization done.
I0428 20:37:52.890748  5050 solver.cpp:56] Solver scaffolding done.
I0428 20:37:52.891080  5050 caffe.cpp:248] Starting Optimization
I0428 20:37:52.891086  5050 solver.cpp:273] Solving LeNet
I0428 20:37:52.891089  5050 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:52.892454  5050 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:53.013430  5057 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:53.016729  5050 solver.cpp:398]     Test net output #0: accuracy = 0.1178
I0428 20:37:53.016764  5050 solver.cpp:398]     Test net output #1: loss = 2.30548 (* 1 = 2.30548 loss)
I0428 20:37:53.021855  5050 solver.cpp:219] Iteration 0 (-4.82842e-31 iter/s, 0.130738s/100 iters), loss = 2.30312
I0428 20:37:53.021881  5050 solver.cpp:238]     Train net output #0: loss = 2.30312 (* 1 = 2.30312 loss)
I0428 20:37:53.021893  5050 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:53.280946  5050 solver.cpp:219] Iteration 100 (386.047 iter/s, 0.259036s/100 iters), loss = 0.957196
I0428 20:37:53.280998  5050 solver.cpp:238]     Train net output #0: loss = 0.957196 (* 1 = 0.957196 loss)
I0428 20:37:53.281011  5050 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:53.561329  5050 solver.cpp:219] Iteration 200 (356.744 iter/s, 0.280313s/100 iters), loss = 0.961126
I0428 20:37:53.561378  5050 solver.cpp:238]     Train net output #0: loss = 0.961126 (* 1 = 0.961126 loss)
I0428 20:37:53.561390  5050 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:53.839771  5050 solver.cpp:219] Iteration 300 (359.227 iter/s, 0.278375s/100 iters), loss = 0.722145
I0428 20:37:53.839815  5050 solver.cpp:238]     Train net output #0: loss = 0.722145 (* 1 = 0.722145 loss)
I0428 20:37:53.839828  5050 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:54.116600  5050 solver.cpp:219] Iteration 400 (361.316 iter/s, 0.276766s/100 iters), loss = 0.771197
I0428 20:37:54.116652  5050 solver.cpp:238]     Train net output #0: loss = 0.771197 (* 1 = 0.771197 loss)
I0428 20:37:54.116665  5050 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:54.390043  5050 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:54.521214  5057 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:54.525542  5050 solver.cpp:398]     Test net output #0: accuracy = 0.695
I0428 20:37:54.525569  5050 solver.cpp:398]     Test net output #1: loss = 0.76092 (* 1 = 0.76092 loss)
I0428 20:37:54.528100  5050 solver.cpp:219] Iteration 500 (243.056 iter/s, 0.411428s/100 iters), loss = 0.779032
I0428 20:37:54.528141  5050 solver.cpp:238]     Train net output #0: loss = 0.779032 (* 1 = 0.779032 loss)
I0428 20:37:54.528165  5050 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:54.799163  5050 solver.cpp:219] Iteration 600 (368.988 iter/s, 0.271012s/100 iters), loss = 0.847976
I0428 20:37:54.799211  5050 solver.cpp:238]     Train net output #0: loss = 0.847976 (* 1 = 0.847976 loss)
I0428 20:37:54.799221  5050 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:55.074550  5050 solver.cpp:219] Iteration 700 (363.213 iter/s, 0.275321s/100 iters), loss = 0.876944
I0428 20:37:55.074592  5050 solver.cpp:238]     Train net output #0: loss = 0.876944 (* 1 = 0.876944 loss)
I0428 20:37:55.074604  5050 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:55.353320  5050 solver.cpp:219] Iteration 800 (358.797 iter/s, 0.278709s/100 iters), loss = 0.960145
I0428 20:37:55.353358  5050 solver.cpp:238]     Train net output #0: loss = 0.960145 (* 1 = 0.960145 loss)
I0428 20:37:55.353366  5050 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:55.625460  5050 solver.cpp:219] Iteration 900 (367.534 iter/s, 0.272084s/100 iters), loss = 1.01715
I0428 20:37:55.625497  5050 solver.cpp:238]     Train net output #0: loss = 1.01715 (* 1 = 1.01715 loss)
I0428 20:37:55.625507  5050 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:55.717828  5056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:55.901446  5050 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:55.907934  5050 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:55.911569  5050 solver.cpp:311] Iteration 1000, loss = 0.813316
I0428 20:37:55.911592  5050 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:56.047045  5057 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:56.051761  5050 solver.cpp:398]     Test net output #0: accuracy = 0.6942
I0428 20:37:56.051792  5050 solver.cpp:398]     Test net output #1: loss = 0.745137 (* 1 = 0.745137 loss)
I0428 20:37:56.051800  5050 solver.cpp:316] Optimization Done.
I0428 20:37:56.051805  5050 caffe.cpp:259] Optimization Done.
