I0428 20:19:13.993047  1321 caffe.cpp:218] Using GPUs 0
I0428 20:19:14.036110  1321 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:14.565801  1321 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1337.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:14.565948  1321 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1337.prototxt
I0428 20:19:14.566332  1321 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:14.566354  1321 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:14.566444  1321 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:14.566519  1321 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:14.566619  1321 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:14.566644  1321 net.cpp:86] Creating Layer mnist
I0428 20:19:14.566653  1321 net.cpp:382] mnist -> data
I0428 20:19:14.566676  1321 net.cpp:382] mnist -> label
I0428 20:19:14.567765  1321 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:14.570253  1321 net.cpp:124] Setting up mnist
I0428 20:19:14.570276  1321 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:14.570281  1321 net.cpp:131] Top shape: 64 (64)
I0428 20:19:14.570286  1321 net.cpp:139] Memory required for data: 200960
I0428 20:19:14.570293  1321 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:14.570335  1321 net.cpp:86] Creating Layer conv0
I0428 20:19:14.570344  1321 net.cpp:408] conv0 <- data
I0428 20:19:14.570356  1321 net.cpp:382] conv0 -> conv0
I0428 20:19:14.845084  1321 net.cpp:124] Setting up conv0
I0428 20:19:14.845126  1321 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:14.845131  1321 net.cpp:139] Memory required for data: 7573760
I0428 20:19:14.845178  1321 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:14.845192  1321 net.cpp:86] Creating Layer pool0
I0428 20:19:14.845196  1321 net.cpp:408] pool0 <- conv0
I0428 20:19:14.845201  1321 net.cpp:382] pool0 -> pool0
I0428 20:19:14.845263  1321 net.cpp:124] Setting up pool0
I0428 20:19:14.845269  1321 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:14.845273  1321 net.cpp:139] Memory required for data: 9416960
I0428 20:19:14.845275  1321 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:14.845285  1321 net.cpp:86] Creating Layer conv1
I0428 20:19:14.845289  1321 net.cpp:408] conv1 <- pool0
I0428 20:19:14.845293  1321 net.cpp:382] conv1 -> conv1
I0428 20:19:14.847308  1321 net.cpp:124] Setting up conv1
I0428 20:19:14.847338  1321 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:14.847342  1321 net.cpp:139] Memory required for data: 9826560
I0428 20:19:14.847350  1321 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:14.847359  1321 net.cpp:86] Creating Layer pool1
I0428 20:19:14.847362  1321 net.cpp:408] pool1 <- conv1
I0428 20:19:14.847368  1321 net.cpp:382] pool1 -> pool1
I0428 20:19:14.847419  1321 net.cpp:124] Setting up pool1
I0428 20:19:14.847424  1321 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:14.847427  1321 net.cpp:139] Memory required for data: 9928960
I0428 20:19:14.847430  1321 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:14.847436  1321 net.cpp:86] Creating Layer ip1
I0428 20:19:14.847440  1321 net.cpp:408] ip1 <- pool1
I0428 20:19:14.847445  1321 net.cpp:382] ip1 -> ip1
I0428 20:19:14.847651  1321 net.cpp:124] Setting up ip1
I0428 20:19:14.847658  1321 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:14.847661  1321 net.cpp:139] Memory required for data: 9941760
I0428 20:19:14.847668  1321 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:14.847673  1321 net.cpp:86] Creating Layer relu1
I0428 20:19:14.847676  1321 net.cpp:408] relu1 <- ip1
I0428 20:19:14.847681  1321 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:14.847848  1321 net.cpp:124] Setting up relu1
I0428 20:19:14.847857  1321 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:14.847861  1321 net.cpp:139] Memory required for data: 9954560
I0428 20:19:14.847864  1321 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:14.847870  1321 net.cpp:86] Creating Layer ip2
I0428 20:19:14.847873  1321 net.cpp:408] ip2 <- ip1
I0428 20:19:14.847878  1321 net.cpp:382] ip2 -> ip2
I0428 20:19:14.847970  1321 net.cpp:124] Setting up ip2
I0428 20:19:14.847975  1321 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:14.847978  1321 net.cpp:139] Memory required for data: 9957120
I0428 20:19:14.847983  1321 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:14.847990  1321 net.cpp:86] Creating Layer relu2
I0428 20:19:14.847992  1321 net.cpp:408] relu2 <- ip2
I0428 20:19:14.847996  1321 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:14.848762  1321 net.cpp:124] Setting up relu2
I0428 20:19:14.848773  1321 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:14.848791  1321 net.cpp:139] Memory required for data: 9959680
I0428 20:19:14.848794  1321 layer_factory.hpp:77] Creating layer loss
I0428 20:19:14.848839  1321 net.cpp:86] Creating Layer loss
I0428 20:19:14.848845  1321 net.cpp:408] loss <- ip2
I0428 20:19:14.848850  1321 net.cpp:408] loss <- label
I0428 20:19:14.848855  1321 net.cpp:382] loss -> loss
I0428 20:19:14.848889  1321 layer_factory.hpp:77] Creating layer loss
I0428 20:19:14.849189  1321 net.cpp:124] Setting up loss
I0428 20:19:14.849198  1321 net.cpp:131] Top shape: (1)
I0428 20:19:14.849217  1321 net.cpp:134]     with loss weight 1
I0428 20:19:14.849247  1321 net.cpp:139] Memory required for data: 9959684
I0428 20:19:14.849251  1321 net.cpp:200] loss needs backward computation.
I0428 20:19:14.849254  1321 net.cpp:200] relu2 needs backward computation.
I0428 20:19:14.849257  1321 net.cpp:200] ip2 needs backward computation.
I0428 20:19:14.849261  1321 net.cpp:200] relu1 needs backward computation.
I0428 20:19:14.849263  1321 net.cpp:200] ip1 needs backward computation.
I0428 20:19:14.849277  1321 net.cpp:200] pool1 needs backward computation.
I0428 20:19:14.849279  1321 net.cpp:200] conv1 needs backward computation.
I0428 20:19:14.849282  1321 net.cpp:200] pool0 needs backward computation.
I0428 20:19:14.849285  1321 net.cpp:200] conv0 needs backward computation.
I0428 20:19:14.849289  1321 net.cpp:202] mnist does not need backward computation.
I0428 20:19:14.849292  1321 net.cpp:244] This network produces output loss
I0428 20:19:14.849300  1321 net.cpp:257] Network initialization done.
I0428 20:19:14.849591  1321 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1337.prototxt
I0428 20:19:14.849617  1321 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:14.849715  1321 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:14.849797  1321 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:14.849838  1321 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:14.849855  1321 net.cpp:86] Creating Layer mnist
I0428 20:19:14.849860  1321 net.cpp:382] mnist -> data
I0428 20:19:14.849867  1321 net.cpp:382] mnist -> label
I0428 20:19:14.849970  1321 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:14.851987  1321 net.cpp:124] Setting up mnist
I0428 20:19:14.852016  1321 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:14.852021  1321 net.cpp:131] Top shape: 100 (100)
I0428 20:19:14.852025  1321 net.cpp:139] Memory required for data: 314000
I0428 20:19:14.852028  1321 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:14.852035  1321 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:14.852038  1321 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:14.852043  1321 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:14.852049  1321 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:14.852111  1321 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:14.852118  1321 net.cpp:131] Top shape: 100 (100)
I0428 20:19:14.852120  1321 net.cpp:131] Top shape: 100 (100)
I0428 20:19:14.852123  1321 net.cpp:139] Memory required for data: 314800
I0428 20:19:14.852126  1321 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:14.852134  1321 net.cpp:86] Creating Layer conv0
I0428 20:19:14.852138  1321 net.cpp:408] conv0 <- data
I0428 20:19:14.852141  1321 net.cpp:382] conv0 -> conv0
I0428 20:19:14.853931  1321 net.cpp:124] Setting up conv0
I0428 20:19:14.853945  1321 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:14.853948  1321 net.cpp:139] Memory required for data: 11834800
I0428 20:19:14.853957  1321 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:14.853965  1321 net.cpp:86] Creating Layer pool0
I0428 20:19:14.853967  1321 net.cpp:408] pool0 <- conv0
I0428 20:19:14.853972  1321 net.cpp:382] pool0 -> pool0
I0428 20:19:14.854007  1321 net.cpp:124] Setting up pool0
I0428 20:19:14.854012  1321 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:14.854014  1321 net.cpp:139] Memory required for data: 14714800
I0428 20:19:14.854017  1321 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:14.854027  1321 net.cpp:86] Creating Layer conv1
I0428 20:19:14.854029  1321 net.cpp:408] conv1 <- pool0
I0428 20:19:14.854035  1321 net.cpp:382] conv1 -> conv1
I0428 20:19:14.855821  1321 net.cpp:124] Setting up conv1
I0428 20:19:14.855835  1321 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:14.855839  1321 net.cpp:139] Memory required for data: 15354800
I0428 20:19:14.855849  1321 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:14.855855  1321 net.cpp:86] Creating Layer pool1
I0428 20:19:14.855859  1321 net.cpp:408] pool1 <- conv1
I0428 20:19:14.855865  1321 net.cpp:382] pool1 -> pool1
I0428 20:19:14.855911  1321 net.cpp:124] Setting up pool1
I0428 20:19:14.855916  1321 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:14.855919  1321 net.cpp:139] Memory required for data: 15514800
I0428 20:19:14.855922  1321 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:14.855931  1321 net.cpp:86] Creating Layer ip1
I0428 20:19:14.855934  1321 net.cpp:408] ip1 <- pool1
I0428 20:19:14.855939  1321 net.cpp:382] ip1 -> ip1
I0428 20:19:14.856178  1321 net.cpp:124] Setting up ip1
I0428 20:19:14.856187  1321 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:14.856190  1321 net.cpp:139] Memory required for data: 15534800
I0428 20:19:14.856197  1321 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:14.856214  1321 net.cpp:86] Creating Layer relu1
I0428 20:19:14.856222  1321 net.cpp:408] relu1 <- ip1
I0428 20:19:14.856227  1321 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:14.856382  1321 net.cpp:124] Setting up relu1
I0428 20:19:14.856391  1321 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:14.856395  1321 net.cpp:139] Memory required for data: 15554800
I0428 20:19:14.856397  1321 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:14.856405  1321 net.cpp:86] Creating Layer ip2
I0428 20:19:14.856407  1321 net.cpp:408] ip2 <- ip1
I0428 20:19:14.856421  1321 net.cpp:382] ip2 -> ip2
I0428 20:19:14.856526  1321 net.cpp:124] Setting up ip2
I0428 20:19:14.856534  1321 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:14.856536  1321 net.cpp:139] Memory required for data: 15558800
I0428 20:19:14.856541  1321 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:14.856552  1321 net.cpp:86] Creating Layer relu2
I0428 20:19:14.856555  1321 net.cpp:408] relu2 <- ip2
I0428 20:19:14.856560  1321 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:14.856834  1321 net.cpp:124] Setting up relu2
I0428 20:19:14.856843  1321 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:14.856848  1321 net.cpp:139] Memory required for data: 15562800
I0428 20:19:14.856850  1321 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:19:14.856861  1321 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:19:14.856865  1321 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:19:14.856871  1321 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:19:14.856904  1321 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:19:14.856956  1321 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:19:14.856969  1321 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:14.856973  1321 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:14.856976  1321 net.cpp:139] Memory required for data: 15570800
I0428 20:19:14.856986  1321 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:14.856992  1321 net.cpp:86] Creating Layer accuracy
I0428 20:19:14.857000  1321 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:19:14.857019  1321 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:14.857023  1321 net.cpp:382] accuracy -> accuracy
I0428 20:19:14.857031  1321 net.cpp:124] Setting up accuracy
I0428 20:19:14.857036  1321 net.cpp:131] Top shape: (1)
I0428 20:19:14.857044  1321 net.cpp:139] Memory required for data: 15570804
I0428 20:19:14.857048  1321 layer_factory.hpp:77] Creating layer loss
I0428 20:19:14.857055  1321 net.cpp:86] Creating Layer loss
I0428 20:19:14.857059  1321 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:19:14.857062  1321 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:14.857071  1321 net.cpp:382] loss -> loss
I0428 20:19:14.857079  1321 layer_factory.hpp:77] Creating layer loss
I0428 20:19:14.857349  1321 net.cpp:124] Setting up loss
I0428 20:19:14.857369  1321 net.cpp:131] Top shape: (1)
I0428 20:19:14.857378  1321 net.cpp:134]     with loss weight 1
I0428 20:19:14.857384  1321 net.cpp:139] Memory required for data: 15570808
I0428 20:19:14.857388  1321 net.cpp:200] loss needs backward computation.
I0428 20:19:14.857393  1321 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:14.857396  1321 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:19:14.857399  1321 net.cpp:200] relu2 needs backward computation.
I0428 20:19:14.857401  1321 net.cpp:200] ip2 needs backward computation.
I0428 20:19:14.857410  1321 net.cpp:200] relu1 needs backward computation.
I0428 20:19:14.857412  1321 net.cpp:200] ip1 needs backward computation.
I0428 20:19:14.857415  1321 net.cpp:200] pool1 needs backward computation.
I0428 20:19:14.857419  1321 net.cpp:200] conv1 needs backward computation.
I0428 20:19:14.857421  1321 net.cpp:200] pool0 needs backward computation.
I0428 20:19:14.857425  1321 net.cpp:200] conv0 needs backward computation.
I0428 20:19:14.857429  1321 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:14.857434  1321 net.cpp:202] mnist does not need backward computation.
I0428 20:19:14.857435  1321 net.cpp:244] This network produces output accuracy
I0428 20:19:14.857439  1321 net.cpp:244] This network produces output loss
I0428 20:19:14.857450  1321 net.cpp:257] Network initialization done.
I0428 20:19:14.857486  1321 solver.cpp:56] Solver scaffolding done.
I0428 20:19:14.857751  1321 caffe.cpp:248] Starting Optimization
I0428 20:19:14.857758  1321 solver.cpp:273] Solving LeNet
I0428 20:19:14.857760  1321 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:14.858564  1321 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:14.864123  1321 blocking_queue.cpp:49] Waiting for data
I0428 20:19:14.932222  1328 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:14.932919  1321 solver.cpp:398]     Test net output #0: accuracy = 0.1021
I0428 20:19:14.932937  1321 solver.cpp:398]     Test net output #1: loss = 2.32351 (* 1 = 2.32351 loss)
I0428 20:19:14.937243  1321 solver.cpp:219] Iteration 0 (-3.71569e-31 iter/s, 0.0794603s/100 iters), loss = 2.27781
I0428 20:19:14.937268  1321 solver.cpp:238]     Train net output #0: loss = 2.27781 (* 1 = 2.27781 loss)
I0428 20:19:14.937278  1321 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:15.065508  1321 solver.cpp:219] Iteration 100 (779.865 iter/s, 0.128227s/100 iters), loss = 0.423526
I0428 20:19:15.065532  1321 solver.cpp:238]     Train net output #0: loss = 0.423526 (* 1 = 0.423526 loss)
I0428 20:19:15.065538  1321 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:15.191164  1321 solver.cpp:219] Iteration 200 (796.05 iter/s, 0.12562s/100 iters), loss = 0.197185
I0428 20:19:15.191185  1321 solver.cpp:238]     Train net output #0: loss = 0.197185 (* 1 = 0.197185 loss)
I0428 20:19:15.191191  1321 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:15.316985  1321 solver.cpp:219] Iteration 300 (794.994 iter/s, 0.125787s/100 iters), loss = 0.148898
I0428 20:19:15.317009  1321 solver.cpp:238]     Train net output #0: loss = 0.148898 (* 1 = 0.148898 loss)
I0428 20:19:15.317015  1321 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:15.443291  1321 solver.cpp:219] Iteration 400 (791.944 iter/s, 0.126271s/100 iters), loss = 0.103178
I0428 20:19:15.443313  1321 solver.cpp:238]     Train net output #0: loss = 0.103178 (* 1 = 0.103178 loss)
I0428 20:19:15.443320  1321 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:15.567643  1321 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:15.630103  1328 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:15.631646  1321 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0428 20:19:15.631666  1321 solver.cpp:398]     Test net output #1: loss = 0.101127 (* 1 = 0.101127 loss)
I0428 20:19:15.632908  1321 solver.cpp:219] Iteration 500 (527.481 iter/s, 0.18958s/100 iters), loss = 0.0528274
I0428 20:19:15.632931  1321 solver.cpp:238]     Train net output #0: loss = 0.0528274 (* 1 = 0.0528274 loss)
I0428 20:19:15.632937  1321 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:15.768151  1321 solver.cpp:219] Iteration 600 (739.602 iter/s, 0.135208s/100 iters), loss = 0.0924956
I0428 20:19:15.768175  1321 solver.cpp:238]     Train net output #0: loss = 0.0924957 (* 1 = 0.0924957 loss)
I0428 20:19:15.768182  1321 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:15.905154  1321 solver.cpp:219] Iteration 700 (730.102 iter/s, 0.136967s/100 iters), loss = 0.160329
I0428 20:19:15.905195  1321 solver.cpp:238]     Train net output #0: loss = 0.160329 (* 1 = 0.160329 loss)
I0428 20:19:15.905202  1321 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:16.042488  1321 solver.cpp:219] Iteration 800 (728.446 iter/s, 0.137278s/100 iters), loss = 0.200149
I0428 20:19:16.042524  1321 solver.cpp:238]     Train net output #0: loss = 0.200149 (* 1 = 0.200149 loss)
I0428 20:19:16.042534  1321 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:16.181810  1321 solver.cpp:219] Iteration 900 (718.018 iter/s, 0.139272s/100 iters), loss = 0.1142
I0428 20:19:16.181849  1321 solver.cpp:238]     Train net output #0: loss = 0.1142 (* 1 = 0.1142 loss)
I0428 20:19:16.181860  1321 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:16.228343  1327 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:16.322175  1321 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:16.324414  1321 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:16.325753  1321 solver.cpp:311] Iteration 1000, loss = 0.086092
I0428 20:19:16.325780  1321 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:16.400347  1328 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:16.401376  1321 solver.cpp:398]     Test net output #0: accuracy = 0.9776
I0428 20:19:16.401401  1321 solver.cpp:398]     Test net output #1: loss = 0.0691309 (* 1 = 0.0691309 loss)
I0428 20:19:16.401408  1321 solver.cpp:316] Optimization Done.
I0428 20:19:16.401412  1321 caffe.cpp:259] Optimization Done.
