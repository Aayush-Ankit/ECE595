I0428 20:26:40.349479  2859 caffe.cpp:218] Using GPUs 0
I0428 20:26:40.387444  2859 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:40.899968  2859 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1475.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:40.900113  2859 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1475.prototxt
I0428 20:26:40.900533  2859 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:40.900552  2859 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:40.900655  2859 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:40.900735  2859 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:40.900843  2859 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:40.900869  2859 net.cpp:86] Creating Layer mnist
I0428 20:26:40.900877  2859 net.cpp:382] mnist -> data
I0428 20:26:40.900899  2859 net.cpp:382] mnist -> label
I0428 20:26:40.901993  2859 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:40.904445  2859 net.cpp:124] Setting up mnist
I0428 20:26:40.904464  2859 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:40.904470  2859 net.cpp:131] Top shape: 64 (64)
I0428 20:26:40.904474  2859 net.cpp:139] Memory required for data: 200960
I0428 20:26:40.904481  2859 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:40.904497  2859 net.cpp:86] Creating Layer conv0
I0428 20:26:40.904517  2859 net.cpp:408] conv0 <- data
I0428 20:26:40.904532  2859 net.cpp:382] conv0 -> conv0
I0428 20:26:41.196763  2859 net.cpp:124] Setting up conv0
I0428 20:26:41.196792  2859 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:41.196797  2859 net.cpp:139] Memory required for data: 14946560
I0428 20:26:41.196820  2859 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:41.196835  2859 net.cpp:86] Creating Layer pool0
I0428 20:26:41.196841  2859 net.cpp:408] pool0 <- conv0
I0428 20:26:41.196846  2859 net.cpp:382] pool0 -> pool0
I0428 20:26:41.196900  2859 net.cpp:124] Setting up pool0
I0428 20:26:41.196908  2859 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:41.196912  2859 net.cpp:139] Memory required for data: 18632960
I0428 20:26:41.196915  2859 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:41.196928  2859 net.cpp:86] Creating Layer conv1
I0428 20:26:41.196931  2859 net.cpp:408] conv1 <- pool0
I0428 20:26:41.196938  2859 net.cpp:382] conv1 -> conv1
I0428 20:26:41.199905  2859 net.cpp:124] Setting up conv1
I0428 20:26:41.199923  2859 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:41.199926  2859 net.cpp:139] Memory required for data: 18665728
I0428 20:26:41.199936  2859 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:41.199945  2859 net.cpp:86] Creating Layer pool1
I0428 20:26:41.199949  2859 net.cpp:408] pool1 <- conv1
I0428 20:26:41.199955  2859 net.cpp:382] pool1 -> pool1
I0428 20:26:41.199996  2859 net.cpp:124] Setting up pool1
I0428 20:26:41.200002  2859 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:41.200006  2859 net.cpp:139] Memory required for data: 18673920
I0428 20:26:41.200009  2859 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:41.200016  2859 net.cpp:86] Creating Layer ip1
I0428 20:26:41.200021  2859 net.cpp:408] ip1 <- pool1
I0428 20:26:41.200026  2859 net.cpp:382] ip1 -> ip1
I0428 20:26:41.200146  2859 net.cpp:124] Setting up ip1
I0428 20:26:41.200155  2859 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:41.200158  2859 net.cpp:139] Memory required for data: 18686720
I0428 20:26:41.200166  2859 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:41.200171  2859 net.cpp:86] Creating Layer relu1
I0428 20:26:41.200176  2859 net.cpp:408] relu1 <- ip1
I0428 20:26:41.200179  2859 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:41.200359  2859 net.cpp:124] Setting up relu1
I0428 20:26:41.200369  2859 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:41.200373  2859 net.cpp:139] Memory required for data: 18699520
I0428 20:26:41.200376  2859 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:41.200383  2859 net.cpp:86] Creating Layer ip2
I0428 20:26:41.200387  2859 net.cpp:408] ip2 <- ip1
I0428 20:26:41.200392  2859 net.cpp:382] ip2 -> ip2
I0428 20:26:41.200497  2859 net.cpp:124] Setting up ip2
I0428 20:26:41.200505  2859 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:41.200508  2859 net.cpp:139] Memory required for data: 18702080
I0428 20:26:41.200515  2859 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:41.200520  2859 net.cpp:86] Creating Layer relu2
I0428 20:26:41.200523  2859 net.cpp:408] relu2 <- ip2
I0428 20:26:41.200528  2859 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:41.201324  2859 net.cpp:124] Setting up relu2
I0428 20:26:41.201339  2859 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:41.201342  2859 net.cpp:139] Memory required for data: 18704640
I0428 20:26:41.201345  2859 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:41.201354  2859 net.cpp:86] Creating Layer ip3
I0428 20:26:41.201357  2859 net.cpp:408] ip3 <- ip2
I0428 20:26:41.201364  2859 net.cpp:382] ip3 -> ip3
I0428 20:26:41.201479  2859 net.cpp:124] Setting up ip3
I0428 20:26:41.201488  2859 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:41.201490  2859 net.cpp:139] Memory required for data: 18707200
I0428 20:26:41.201499  2859 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:41.201504  2859 net.cpp:86] Creating Layer relu3
I0428 20:26:41.201508  2859 net.cpp:408] relu3 <- ip3
I0428 20:26:41.201511  2859 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:41.201689  2859 net.cpp:124] Setting up relu3
I0428 20:26:41.201699  2859 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:41.201704  2859 net.cpp:139] Memory required for data: 18709760
I0428 20:26:41.201706  2859 layer_factory.hpp:77] Creating layer loss
I0428 20:26:41.201712  2859 net.cpp:86] Creating Layer loss
I0428 20:26:41.201715  2859 net.cpp:408] loss <- ip3
I0428 20:26:41.201719  2859 net.cpp:408] loss <- label
I0428 20:26:41.201725  2859 net.cpp:382] loss -> loss
I0428 20:26:41.201743  2859 layer_factory.hpp:77] Creating layer loss
I0428 20:26:41.201980  2859 net.cpp:124] Setting up loss
I0428 20:26:41.201994  2859 net.cpp:131] Top shape: (1)
I0428 20:26:41.201998  2859 net.cpp:134]     with loss weight 1
I0428 20:26:41.202013  2859 net.cpp:139] Memory required for data: 18709764
I0428 20:26:41.202016  2859 net.cpp:200] loss needs backward computation.
I0428 20:26:41.202020  2859 net.cpp:200] relu3 needs backward computation.
I0428 20:26:41.202023  2859 net.cpp:200] ip3 needs backward computation.
I0428 20:26:41.202026  2859 net.cpp:200] relu2 needs backward computation.
I0428 20:26:41.202029  2859 net.cpp:200] ip2 needs backward computation.
I0428 20:26:41.202033  2859 net.cpp:200] relu1 needs backward computation.
I0428 20:26:41.202034  2859 net.cpp:200] ip1 needs backward computation.
I0428 20:26:41.202039  2859 net.cpp:200] pool1 needs backward computation.
I0428 20:26:41.202041  2859 net.cpp:200] conv1 needs backward computation.
I0428 20:26:41.202044  2859 net.cpp:200] pool0 needs backward computation.
I0428 20:26:41.202047  2859 net.cpp:200] conv0 needs backward computation.
I0428 20:26:41.202051  2859 net.cpp:202] mnist does not need backward computation.
I0428 20:26:41.202054  2859 net.cpp:244] This network produces output loss
I0428 20:26:41.202064  2859 net.cpp:257] Network initialization done.
I0428 20:26:41.202404  2859 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1475.prototxt
I0428 20:26:41.202433  2859 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:41.202527  2859 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:41.202610  2859 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:41.202656  2859 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:41.202668  2859 net.cpp:86] Creating Layer mnist
I0428 20:26:41.202673  2859 net.cpp:382] mnist -> data
I0428 20:26:41.202682  2859 net.cpp:382] mnist -> label
I0428 20:26:41.202770  2859 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:41.204776  2859 net.cpp:124] Setting up mnist
I0428 20:26:41.204790  2859 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:41.204797  2859 net.cpp:131] Top shape: 100 (100)
I0428 20:26:41.204799  2859 net.cpp:139] Memory required for data: 314000
I0428 20:26:41.204803  2859 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:41.204820  2859 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:41.204825  2859 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:41.204830  2859 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:41.204838  2859 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:41.204881  2859 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:41.204887  2859 net.cpp:131] Top shape: 100 (100)
I0428 20:26:41.204891  2859 net.cpp:131] Top shape: 100 (100)
I0428 20:26:41.204895  2859 net.cpp:139] Memory required for data: 314800
I0428 20:26:41.204897  2859 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:41.204906  2859 net.cpp:86] Creating Layer conv0
I0428 20:26:41.204910  2859 net.cpp:408] conv0 <- data
I0428 20:26:41.204915  2859 net.cpp:382] conv0 -> conv0
I0428 20:26:41.206701  2859 net.cpp:124] Setting up conv0
I0428 20:26:41.206717  2859 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:41.206720  2859 net.cpp:139] Memory required for data: 23354800
I0428 20:26:41.206730  2859 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:41.206737  2859 net.cpp:86] Creating Layer pool0
I0428 20:26:41.206740  2859 net.cpp:408] pool0 <- conv0
I0428 20:26:41.206745  2859 net.cpp:382] pool0 -> pool0
I0428 20:26:41.206784  2859 net.cpp:124] Setting up pool0
I0428 20:26:41.206789  2859 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:41.206792  2859 net.cpp:139] Memory required for data: 29114800
I0428 20:26:41.206795  2859 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:41.206804  2859 net.cpp:86] Creating Layer conv1
I0428 20:26:41.206809  2859 net.cpp:408] conv1 <- pool0
I0428 20:26:41.206814  2859 net.cpp:382] conv1 -> conv1
I0428 20:26:41.208380  2859 net.cpp:124] Setting up conv1
I0428 20:26:41.208395  2859 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:41.208400  2859 net.cpp:139] Memory required for data: 29166000
I0428 20:26:41.208408  2859 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:41.208415  2859 net.cpp:86] Creating Layer pool1
I0428 20:26:41.208418  2859 net.cpp:408] pool1 <- conv1
I0428 20:26:41.208425  2859 net.cpp:382] pool1 -> pool1
I0428 20:26:41.208462  2859 net.cpp:124] Setting up pool1
I0428 20:26:41.208467  2859 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:41.208470  2859 net.cpp:139] Memory required for data: 29178800
I0428 20:26:41.208474  2859 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:41.208480  2859 net.cpp:86] Creating Layer ip1
I0428 20:26:41.208484  2859 net.cpp:408] ip1 <- pool1
I0428 20:26:41.208489  2859 net.cpp:382] ip1 -> ip1
I0428 20:26:41.208600  2859 net.cpp:124] Setting up ip1
I0428 20:26:41.208607  2859 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:41.208622  2859 net.cpp:139] Memory required for data: 29198800
I0428 20:26:41.208631  2859 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:41.208636  2859 net.cpp:86] Creating Layer relu1
I0428 20:26:41.208640  2859 net.cpp:408] relu1 <- ip1
I0428 20:26:41.208644  2859 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:41.208844  2859 net.cpp:124] Setting up relu1
I0428 20:26:41.208854  2859 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:41.208858  2859 net.cpp:139] Memory required for data: 29218800
I0428 20:26:41.208863  2859 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:41.208869  2859 net.cpp:86] Creating Layer ip2
I0428 20:26:41.208873  2859 net.cpp:408] ip2 <- ip1
I0428 20:26:41.208878  2859 net.cpp:382] ip2 -> ip2
I0428 20:26:41.209002  2859 net.cpp:124] Setting up ip2
I0428 20:26:41.209009  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.209019  2859 net.cpp:139] Memory required for data: 29222800
I0428 20:26:41.209024  2859 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:41.209029  2859 net.cpp:86] Creating Layer relu2
I0428 20:26:41.209033  2859 net.cpp:408] relu2 <- ip2
I0428 20:26:41.209038  2859 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:41.209245  2859 net.cpp:124] Setting up relu2
I0428 20:26:41.209255  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.209259  2859 net.cpp:139] Memory required for data: 29226800
I0428 20:26:41.209261  2859 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:41.209267  2859 net.cpp:86] Creating Layer ip3
I0428 20:26:41.209271  2859 net.cpp:408] ip3 <- ip2
I0428 20:26:41.209276  2859 net.cpp:382] ip3 -> ip3
I0428 20:26:41.209424  2859 net.cpp:124] Setting up ip3
I0428 20:26:41.209431  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.209435  2859 net.cpp:139] Memory required for data: 29230800
I0428 20:26:41.209444  2859 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:41.209448  2859 net.cpp:86] Creating Layer relu3
I0428 20:26:41.209451  2859 net.cpp:408] relu3 <- ip3
I0428 20:26:41.209456  2859 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:41.210304  2859 net.cpp:124] Setting up relu3
I0428 20:26:41.210317  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.210320  2859 net.cpp:139] Memory required for data: 29234800
I0428 20:26:41.210325  2859 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:41.210330  2859 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:41.210333  2859 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:41.210340  2859 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:41.210345  2859 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:41.210388  2859 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:41.210396  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.210399  2859 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:41.210402  2859 net.cpp:139] Memory required for data: 29242800
I0428 20:26:41.210405  2859 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:41.210412  2859 net.cpp:86] Creating Layer accuracy
I0428 20:26:41.210414  2859 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:41.210418  2859 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:41.210423  2859 net.cpp:382] accuracy -> accuracy
I0428 20:26:41.210430  2859 net.cpp:124] Setting up accuracy
I0428 20:26:41.210434  2859 net.cpp:131] Top shape: (1)
I0428 20:26:41.210438  2859 net.cpp:139] Memory required for data: 29242804
I0428 20:26:41.210441  2859 layer_factory.hpp:77] Creating layer loss
I0428 20:26:41.210445  2859 net.cpp:86] Creating Layer loss
I0428 20:26:41.210449  2859 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:41.210453  2859 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:41.210458  2859 net.cpp:382] loss -> loss
I0428 20:26:41.210464  2859 layer_factory.hpp:77] Creating layer loss
I0428 20:26:41.210703  2859 net.cpp:124] Setting up loss
I0428 20:26:41.210713  2859 net.cpp:131] Top shape: (1)
I0428 20:26:41.210717  2859 net.cpp:134]     with loss weight 1
I0428 20:26:41.210734  2859 net.cpp:139] Memory required for data: 29242808
I0428 20:26:41.210738  2859 net.cpp:200] loss needs backward computation.
I0428 20:26:41.210743  2859 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:41.210747  2859 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:41.210750  2859 net.cpp:200] relu3 needs backward computation.
I0428 20:26:41.210753  2859 net.cpp:200] ip3 needs backward computation.
I0428 20:26:41.210757  2859 net.cpp:200] relu2 needs backward computation.
I0428 20:26:41.210760  2859 net.cpp:200] ip2 needs backward computation.
I0428 20:26:41.210763  2859 net.cpp:200] relu1 needs backward computation.
I0428 20:26:41.210767  2859 net.cpp:200] ip1 needs backward computation.
I0428 20:26:41.210769  2859 net.cpp:200] pool1 needs backward computation.
I0428 20:26:41.210773  2859 net.cpp:200] conv1 needs backward computation.
I0428 20:26:41.210777  2859 net.cpp:200] pool0 needs backward computation.
I0428 20:26:41.210780  2859 net.cpp:200] conv0 needs backward computation.
I0428 20:26:41.210784  2859 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:41.210789  2859 net.cpp:202] mnist does not need backward computation.
I0428 20:26:41.210791  2859 net.cpp:244] This network produces output accuracy
I0428 20:26:41.210795  2859 net.cpp:244] This network produces output loss
I0428 20:26:41.210806  2859 net.cpp:257] Network initialization done.
I0428 20:26:41.210850  2859 solver.cpp:56] Solver scaffolding done.
I0428 20:26:41.211247  2859 caffe.cpp:248] Starting Optimization
I0428 20:26:41.211253  2859 solver.cpp:273] Solving LeNet
I0428 20:26:41.211272  2859 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:41.212136  2859 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:41.308848  2867 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:41.310907  2859 solver.cpp:398]     Test net output #0: accuracy = 0.0807
I0428 20:26:41.310926  2859 solver.cpp:398]     Test net output #1: loss = 2.30398 (* 1 = 2.30398 loss)
I0428 20:26:41.319195  2859 solver.cpp:219] Iteration 0 (0 iter/s, 0.10789s/100 iters), loss = 2.31141
I0428 20:26:41.319219  2859 solver.cpp:238]     Train net output #0: loss = 2.31141 (* 1 = 2.31141 loss)
I0428 20:26:41.319247  2859 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:41.518000  2859 solver.cpp:219] Iteration 100 (503.118 iter/s, 0.198761s/100 iters), loss = 0.935421
I0428 20:26:41.518046  2859 solver.cpp:238]     Train net output #0: loss = 0.935421 (* 1 = 0.935421 loss)
I0428 20:26:41.518057  2859 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:41.729816  2859 solver.cpp:219] Iteration 200 (472.242 iter/s, 0.211756s/100 iters), loss = 0.728547
I0428 20:26:41.729858  2859 solver.cpp:238]     Train net output #0: loss = 0.728547 (* 1 = 0.728547 loss)
I0428 20:26:41.729868  2859 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:41.948277  2859 solver.cpp:219] Iteration 300 (457.87 iter/s, 0.218403s/100 iters), loss = 0.692646
I0428 20:26:41.948323  2859 solver.cpp:238]     Train net output #0: loss = 0.692646 (* 1 = 0.692646 loss)
I0428 20:26:41.948333  2859 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:42.161065  2859 solver.cpp:219] Iteration 400 (470.093 iter/s, 0.212724s/100 iters), loss = 0.974734
I0428 20:26:42.161118  2859 solver.cpp:238]     Train net output #0: loss = 0.974734 (* 1 = 0.974734 loss)
I0428 20:26:42.161137  2859 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:42.371256  2859 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:42.469065  2867 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:42.472685  2859 solver.cpp:398]     Test net output #0: accuracy = 0.7543
I0428 20:26:42.472723  2859 solver.cpp:398]     Test net output #1: loss = 0.633864 (* 1 = 0.633864 loss)
I0428 20:26:42.474680  2859 solver.cpp:219] Iteration 500 (318.932 iter/s, 0.313547s/100 iters), loss = 0.804164
I0428 20:26:42.474707  2859 solver.cpp:238]     Train net output #0: loss = 0.804164 (* 1 = 0.804164 loss)
I0428 20:26:42.474745  2859 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:42.685673  2859 solver.cpp:219] Iteration 600 (474.057 iter/s, 0.210945s/100 iters), loss = 0.501891
I0428 20:26:42.685724  2859 solver.cpp:238]     Train net output #0: loss = 0.501891 (* 1 = 0.501891 loss)
I0428 20:26:42.685737  2859 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:42.899883  2859 solver.cpp:219] Iteration 700 (466.982 iter/s, 0.214141s/100 iters), loss = 0.710962
I0428 20:26:42.899940  2859 solver.cpp:238]     Train net output #0: loss = 0.710962 (* 1 = 0.710962 loss)
I0428 20:26:42.899955  2859 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:43.118177  2859 solver.cpp:219] Iteration 800 (458.242 iter/s, 0.218225s/100 iters), loss = 0.65056
I0428 20:26:43.118216  2859 solver.cpp:238]     Train net output #0: loss = 0.65056 (* 1 = 0.65056 loss)
I0428 20:26:43.118226  2859 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:43.328127  2859 solver.cpp:219] Iteration 900 (476.428 iter/s, 0.209895s/100 iters), loss = 0.398103
I0428 20:26:43.328164  2859 solver.cpp:238]     Train net output #0: loss = 0.398103 (* 1 = 0.398103 loss)
I0428 20:26:43.328173  2859 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:43.397723  2866 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:43.532701  2859 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:43.534708  2859 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:43.535957  2859 solver.cpp:311] Iteration 1000, loss = 0.471413
I0428 20:26:43.535991  2859 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:43.557556  2859 blocking_queue.cpp:49] Waiting for data
I0428 20:26:43.646304  2867 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:43.648082  2859 solver.cpp:398]     Test net output #0: accuracy = 0.7718
I0428 20:26:43.648106  2859 solver.cpp:398]     Test net output #1: loss = 0.572849 (* 1 = 0.572849 loss)
I0428 20:26:43.648118  2859 solver.cpp:316] Optimization Done.
I0428 20:26:43.648121  2859 caffe.cpp:259] Optimization Done.
