I0428 19:45:30.307862 25816 caffe.cpp:218] Using GPUs 0
I0428 19:45:30.347328 25816 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:30.873471 25816 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test473.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:30.873656 25816 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test473.prototxt
I0428 19:45:30.874214 25816 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:30.874243 25816 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:30.874379 25816 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:30.874490 25816 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:30.874634 25816 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:30.874670 25816 net.cpp:86] Creating Layer mnist
I0428 19:45:30.874680 25816 net.cpp:382] mnist -> data
I0428 19:45:30.874712 25816 net.cpp:382] mnist -> label
I0428 19:45:30.876250 25816 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:30.879645 25816 net.cpp:124] Setting up mnist
I0428 19:45:30.879673 25816 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:30.879684 25816 net.cpp:131] Top shape: 64 (64)
I0428 19:45:30.879689 25816 net.cpp:139] Memory required for data: 200960
I0428 19:45:30.879698 25816 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:30.879722 25816 net.cpp:86] Creating Layer conv0
I0428 19:45:30.879730 25816 net.cpp:408] conv0 <- data
I0428 19:45:30.879746 25816 net.cpp:382] conv0 -> conv0
I0428 19:45:31.185266 25816 net.cpp:124] Setting up conv0
I0428 19:45:31.185297 25816 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:31.185302 25816 net.cpp:139] Memory required for data: 495872
I0428 19:45:31.185340 25816 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:31.185355 25816 net.cpp:86] Creating Layer pool0
I0428 19:45:31.185360 25816 net.cpp:408] pool0 <- conv0
I0428 19:45:31.185366 25816 net.cpp:382] pool0 -> pool0
I0428 19:45:31.185423 25816 net.cpp:124] Setting up pool0
I0428 19:45:31.185436 25816 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:31.185439 25816 net.cpp:139] Memory required for data: 569600
I0428 19:45:31.185443 25816 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:31.185456 25816 net.cpp:86] Creating Layer conv1
I0428 19:45:31.185459 25816 net.cpp:408] conv1 <- pool0
I0428 19:45:31.185466 25816 net.cpp:382] conv1 -> conv1
I0428 19:45:31.188608 25816 net.cpp:124] Setting up conv1
I0428 19:45:31.188627 25816 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:31.188632 25816 net.cpp:139] Memory required for data: 2208000
I0428 19:45:31.188642 25816 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:31.188650 25816 net.cpp:86] Creating Layer pool1
I0428 19:45:31.188657 25816 net.cpp:408] pool1 <- conv1
I0428 19:45:31.188663 25816 net.cpp:382] pool1 -> pool1
I0428 19:45:31.188707 25816 net.cpp:124] Setting up pool1
I0428 19:45:31.188714 25816 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:31.188717 25816 net.cpp:139] Memory required for data: 2617600
I0428 19:45:31.188720 25816 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:31.188730 25816 net.cpp:86] Creating Layer ip1
I0428 19:45:31.188733 25816 net.cpp:408] ip1 <- pool1
I0428 19:45:31.188738 25816 net.cpp:382] ip1 -> ip1
I0428 19:45:31.188974 25816 net.cpp:124] Setting up ip1
I0428 19:45:31.188984 25816 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:31.188989 25816 net.cpp:139] Memory required for data: 2620160
I0428 19:45:31.188997 25816 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:31.189004 25816 net.cpp:86] Creating Layer relu1
I0428 19:45:31.189008 25816 net.cpp:408] relu1 <- ip1
I0428 19:45:31.189014 25816 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:31.189211 25816 net.cpp:124] Setting up relu1
I0428 19:45:31.189223 25816 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:31.189226 25816 net.cpp:139] Memory required for data: 2622720
I0428 19:45:31.189230 25816 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:31.189237 25816 net.cpp:86] Creating Layer ip2
I0428 19:45:31.189241 25816 net.cpp:408] ip2 <- ip1
I0428 19:45:31.189246 25816 net.cpp:382] ip2 -> ip2
I0428 19:45:31.189358 25816 net.cpp:124] Setting up ip2
I0428 19:45:31.189366 25816 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:31.189370 25816 net.cpp:139] Memory required for data: 2625280
I0428 19:45:31.189376 25816 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:31.189383 25816 net.cpp:86] Creating Layer relu2
I0428 19:45:31.189388 25816 net.cpp:408] relu2 <- ip2
I0428 19:45:31.189393 25816 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:31.190235 25816 net.cpp:124] Setting up relu2
I0428 19:45:31.190250 25816 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:31.190255 25816 net.cpp:139] Memory required for data: 2627840
I0428 19:45:31.190259 25816 layer_factory.hpp:77] Creating layer loss
I0428 19:45:31.190266 25816 net.cpp:86] Creating Layer loss
I0428 19:45:31.190270 25816 net.cpp:408] loss <- ip2
I0428 19:45:31.190276 25816 net.cpp:408] loss <- label
I0428 19:45:31.190284 25816 net.cpp:382] loss -> loss
I0428 19:45:31.190302 25816 layer_factory.hpp:77] Creating layer loss
I0428 19:45:31.190582 25816 net.cpp:124] Setting up loss
I0428 19:45:31.190593 25816 net.cpp:131] Top shape: (1)
I0428 19:45:31.190598 25816 net.cpp:134]     with loss weight 1
I0428 19:45:31.190614 25816 net.cpp:139] Memory required for data: 2627844
I0428 19:45:31.190618 25816 net.cpp:200] loss needs backward computation.
I0428 19:45:31.190623 25816 net.cpp:200] relu2 needs backward computation.
I0428 19:45:31.190626 25816 net.cpp:200] ip2 needs backward computation.
I0428 19:45:31.190630 25816 net.cpp:200] relu1 needs backward computation.
I0428 19:45:31.190634 25816 net.cpp:200] ip1 needs backward computation.
I0428 19:45:31.190649 25816 net.cpp:200] pool1 needs backward computation.
I0428 19:45:31.190654 25816 net.cpp:200] conv1 needs backward computation.
I0428 19:45:31.190657 25816 net.cpp:200] pool0 needs backward computation.
I0428 19:45:31.190661 25816 net.cpp:200] conv0 needs backward computation.
I0428 19:45:31.190665 25816 net.cpp:202] mnist does not need backward computation.
I0428 19:45:31.190670 25816 net.cpp:244] This network produces output loss
I0428 19:45:31.190680 25816 net.cpp:257] Network initialization done.
I0428 19:45:31.191021 25816 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test473.prototxt
I0428 19:45:31.191053 25816 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:31.191153 25816 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:31.191227 25816 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:31.191280 25816 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:31.191294 25816 net.cpp:86] Creating Layer mnist
I0428 19:45:31.191300 25816 net.cpp:382] mnist -> data
I0428 19:45:31.191309 25816 net.cpp:382] mnist -> label
I0428 19:45:31.191409 25816 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:31.193819 25816 net.cpp:124] Setting up mnist
I0428 19:45:31.193835 25816 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:31.193841 25816 net.cpp:131] Top shape: 100 (100)
I0428 19:45:31.193845 25816 net.cpp:139] Memory required for data: 314000
I0428 19:45:31.193850 25816 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:31.193857 25816 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:31.193862 25816 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:31.193868 25816 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:31.193876 25816 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:31.193992 25816 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:31.194015 25816 net.cpp:131] Top shape: 100 (100)
I0428 19:45:31.194020 25816 net.cpp:131] Top shape: 100 (100)
I0428 19:45:31.194023 25816 net.cpp:139] Memory required for data: 314800
I0428 19:45:31.194027 25816 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:31.194037 25816 net.cpp:86] Creating Layer conv0
I0428 19:45:31.194041 25816 net.cpp:408] conv0 <- data
I0428 19:45:31.194048 25816 net.cpp:382] conv0 -> conv0
I0428 19:45:31.195888 25816 net.cpp:124] Setting up conv0
I0428 19:45:31.195904 25816 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:31.195909 25816 net.cpp:139] Memory required for data: 775600
I0428 19:45:31.195920 25816 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:31.195927 25816 net.cpp:86] Creating Layer pool0
I0428 19:45:31.195931 25816 net.cpp:408] pool0 <- conv0
I0428 19:45:31.195940 25816 net.cpp:382] pool0 -> pool0
I0428 19:45:31.195982 25816 net.cpp:124] Setting up pool0
I0428 19:45:31.195989 25816 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:31.195992 25816 net.cpp:139] Memory required for data: 890800
I0428 19:45:31.195996 25816 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:31.196009 25816 net.cpp:86] Creating Layer conv1
I0428 19:45:31.196014 25816 net.cpp:408] conv1 <- pool0
I0428 19:45:31.196022 25816 net.cpp:382] conv1 -> conv1
I0428 19:45:31.197762 25816 net.cpp:124] Setting up conv1
I0428 19:45:31.197779 25816 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:31.197788 25816 net.cpp:139] Memory required for data: 3450800
I0428 19:45:31.197798 25816 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:31.197808 25816 net.cpp:86] Creating Layer pool1
I0428 19:45:31.197811 25816 net.cpp:408] pool1 <- conv1
I0428 19:45:31.197818 25816 net.cpp:382] pool1 -> pool1
I0428 19:45:31.197865 25816 net.cpp:124] Setting up pool1
I0428 19:45:31.197872 25816 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:31.197875 25816 net.cpp:139] Memory required for data: 4090800
I0428 19:45:31.197880 25816 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:31.197886 25816 net.cpp:86] Creating Layer ip1
I0428 19:45:31.197890 25816 net.cpp:408] ip1 <- pool1
I0428 19:45:31.197902 25816 net.cpp:382] ip1 -> ip1
I0428 19:45:31.198133 25816 net.cpp:124] Setting up ip1
I0428 19:45:31.198143 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198148 25816 net.cpp:139] Memory required for data: 4094800
I0428 19:45:31.198156 25816 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:31.198163 25816 net.cpp:86] Creating Layer relu1
I0428 19:45:31.198168 25816 net.cpp:408] relu1 <- ip1
I0428 19:45:31.198173 25816 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:31.198371 25816 net.cpp:124] Setting up relu1
I0428 19:45:31.198385 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198390 25816 net.cpp:139] Memory required for data: 4098800
I0428 19:45:31.198393 25816 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:31.198403 25816 net.cpp:86] Creating Layer ip2
I0428 19:45:31.198407 25816 net.cpp:408] ip2 <- ip1
I0428 19:45:31.198413 25816 net.cpp:382] ip2 -> ip2
I0428 19:45:31.198565 25816 net.cpp:124] Setting up ip2
I0428 19:45:31.198575 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198577 25816 net.cpp:139] Memory required for data: 4102800
I0428 19:45:31.198585 25816 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:31.198590 25816 net.cpp:86] Creating Layer relu2
I0428 19:45:31.198593 25816 net.cpp:408] relu2 <- ip2
I0428 19:45:31.198601 25816 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:31.198807 25816 net.cpp:124] Setting up relu2
I0428 19:45:31.198817 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198822 25816 net.cpp:139] Memory required for data: 4106800
I0428 19:45:31.198824 25816 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:45:31.198832 25816 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:45:31.198835 25816 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:45:31.198842 25816 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:45:31.198859 25816 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:45:31.198906 25816 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:45:31.198915 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198920 25816 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:31.198923 25816 net.cpp:139] Memory required for data: 4114800
I0428 19:45:31.198927 25816 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:31.198933 25816 net.cpp:86] Creating Layer accuracy
I0428 19:45:31.198937 25816 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:45:31.198943 25816 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:31.198949 25816 net.cpp:382] accuracy -> accuracy
I0428 19:45:31.198957 25816 net.cpp:124] Setting up accuracy
I0428 19:45:31.198963 25816 net.cpp:131] Top shape: (1)
I0428 19:45:31.198966 25816 net.cpp:139] Memory required for data: 4114804
I0428 19:45:31.198971 25816 layer_factory.hpp:77] Creating layer loss
I0428 19:45:31.198976 25816 net.cpp:86] Creating Layer loss
I0428 19:45:31.198979 25816 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:45:31.198983 25816 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:31.198988 25816 net.cpp:382] loss -> loss
I0428 19:45:31.198997 25816 layer_factory.hpp:77] Creating layer loss
I0428 19:45:31.199287 25816 net.cpp:124] Setting up loss
I0428 19:45:31.199301 25816 net.cpp:131] Top shape: (1)
I0428 19:45:31.199306 25816 net.cpp:134]     with loss weight 1
I0428 19:45:31.199313 25816 net.cpp:139] Memory required for data: 4114808
I0428 19:45:31.199317 25816 net.cpp:200] loss needs backward computation.
I0428 19:45:31.199321 25816 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:31.199326 25816 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:45:31.199329 25816 net.cpp:200] relu2 needs backward computation.
I0428 19:45:31.199332 25816 net.cpp:200] ip2 needs backward computation.
I0428 19:45:31.199337 25816 net.cpp:200] relu1 needs backward computation.
I0428 19:45:31.199339 25816 net.cpp:200] ip1 needs backward computation.
I0428 19:45:31.199344 25816 net.cpp:200] pool1 needs backward computation.
I0428 19:45:31.199347 25816 net.cpp:200] conv1 needs backward computation.
I0428 19:45:31.199352 25816 net.cpp:200] pool0 needs backward computation.
I0428 19:45:31.199354 25816 net.cpp:200] conv0 needs backward computation.
I0428 19:45:31.199358 25816 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:31.199363 25816 net.cpp:202] mnist does not need backward computation.
I0428 19:45:31.199367 25816 net.cpp:244] This network produces output accuracy
I0428 19:45:31.199370 25816 net.cpp:244] This network produces output loss
I0428 19:45:31.199384 25816 net.cpp:257] Network initialization done.
I0428 19:45:31.199429 25816 solver.cpp:56] Solver scaffolding done.
I0428 19:45:31.199841 25816 caffe.cpp:248] Starting Optimization
I0428 19:45:31.199848 25816 solver.cpp:273] Solving LeNet
I0428 19:45:31.199851 25816 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:31.200009 25816 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:31.205238 25816 blocking_queue.cpp:49] Waiting for data
I0428 19:45:31.274322 25823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:31.274914 25816 solver.cpp:398]     Test net output #0: accuracy = 0.1108
I0428 19:45:31.274941 25816 solver.cpp:398]     Test net output #1: loss = 2.30519 (* 1 = 2.30519 loss)
I0428 19:45:31.278808 25816 solver.cpp:219] Iteration 0 (-9.75389e-31 iter/s, 0.0789265s/100 iters), loss = 2.34654
I0428 19:45:31.278841 25816 solver.cpp:238]     Train net output #0: loss = 2.34654 (* 1 = 2.34654 loss)
I0428 19:45:31.278856 25816 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:31.420400 25816 solver.cpp:219] Iteration 100 (706.502 iter/s, 0.141542s/100 iters), loss = 0.808729
I0428 19:45:31.420435 25816 solver.cpp:238]     Train net output #0: loss = 0.808729 (* 1 = 0.808729 loss)
I0428 19:45:31.420444 25816 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:31.567667 25816 solver.cpp:219] Iteration 200 (679.268 iter/s, 0.147217s/100 iters), loss = 0.9573
I0428 19:45:31.567723 25816 solver.cpp:238]     Train net output #0: loss = 0.9573 (* 1 = 0.9573 loss)
I0428 19:45:31.567733 25816 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:31.720990 25816 solver.cpp:219] Iteration 300 (652.512 iter/s, 0.153254s/100 iters), loss = 0.723295
I0428 19:45:31.721030 25816 solver.cpp:238]     Train net output #0: loss = 0.723295 (* 1 = 0.723295 loss)
I0428 19:45:31.721040 25816 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:31.878410 25816 solver.cpp:219] Iteration 400 (635.464 iter/s, 0.157365s/100 iters), loss = 0.858312
I0428 19:45:31.878459 25816 solver.cpp:238]     Train net output #0: loss = 0.858312 (* 1 = 0.858312 loss)
I0428 19:45:31.878471 25816 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:32.040238 25816 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:32.126687 25823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:32.127409 25816 solver.cpp:398]     Test net output #0: accuracy = 0.7676
I0428 19:45:32.127441 25816 solver.cpp:398]     Test net output #1: loss = 0.798161 (* 1 = 0.798161 loss)
I0428 19:45:32.129076 25816 solver.cpp:219] Iteration 500 (399.045 iter/s, 0.250598s/100 iters), loss = 0.871163
I0428 19:45:32.129132 25816 solver.cpp:238]     Train net output #0: loss = 0.871163 (* 1 = 0.871163 loss)
I0428 19:45:32.129146 25816 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:32.272795 25816 solver.cpp:219] Iteration 600 (696.106 iter/s, 0.143656s/100 iters), loss = 0.734666
I0428 19:45:32.272838 25816 solver.cpp:238]     Train net output #0: loss = 0.734666 (* 1 = 0.734666 loss)
I0428 19:45:32.272847 25816 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:32.414204 25816 solver.cpp:219] Iteration 700 (707.444 iter/s, 0.141354s/100 iters), loss = 1.06949
I0428 19:45:32.414239 25816 solver.cpp:238]     Train net output #0: loss = 1.06949 (* 1 = 1.06949 loss)
I0428 19:45:32.414248 25816 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:32.555655 25816 solver.cpp:219] Iteration 800 (707.193 iter/s, 0.141404s/100 iters), loss = 0.919723
I0428 19:45:32.555688 25816 solver.cpp:238]     Train net output #0: loss = 0.919723 (* 1 = 0.919723 loss)
I0428 19:45:32.555697 25816 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:32.697033 25816 solver.cpp:219] Iteration 900 (707.562 iter/s, 0.14133s/100 iters), loss = 0.82547
I0428 19:45:32.697067 25816 solver.cpp:238]     Train net output #0: loss = 0.82547 (* 1 = 0.82547 loss)
I0428 19:45:32.697075 25816 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:32.743903 25822 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:32.836307 25816 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:32.837921 25816 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:32.838786 25816 solver.cpp:311] Iteration 1000, loss = 0.937145
I0428 19:45:32.838822 25816 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:32.903403 25823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:32.905346 25816 solver.cpp:398]     Test net output #0: accuracy = 0.7858
I0428 19:45:32.905377 25816 solver.cpp:398]     Test net output #1: loss = 0.752245 (* 1 = 0.752245 loss)
I0428 19:45:32.905388 25816 solver.cpp:316] Optimization Done.
I0428 19:45:32.905393 25816 caffe.cpp:259] Optimization Done.
