I0428 19:43:51.962090 25470 caffe.cpp:218] Using GPUs 0
I0428 19:43:51.999521 25470 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:52.516154 25470 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test433.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:52.516321 25470 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test433.prototxt
I0428 19:43:52.516707 25470 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:52.516724 25470 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:52.516820 25470 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:52.516918 25470 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:52.517026 25470 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:52.517055 25470 net.cpp:86] Creating Layer mnist
I0428 19:43:52.517066 25470 net.cpp:382] mnist -> data
I0428 19:43:52.517089 25470 net.cpp:382] mnist -> label
I0428 19:43:52.518184 25470 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:52.520648 25470 net.cpp:124] Setting up mnist
I0428 19:43:52.520665 25470 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:52.520671 25470 net.cpp:131] Top shape: 64 (64)
I0428 19:43:52.520674 25470 net.cpp:139] Memory required for data: 200960
I0428 19:43:52.520681 25470 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:52.520699 25470 net.cpp:86] Creating Layer conv0
I0428 19:43:52.520707 25470 net.cpp:408] conv0 <- data
I0428 19:43:52.520731 25470 net.cpp:382] conv0 -> conv0
I0428 19:43:52.811554 25470 net.cpp:124] Setting up conv0
I0428 19:43:52.811589 25470 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:52.811594 25470 net.cpp:139] Memory required for data: 495872
I0428 19:43:52.811635 25470 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:52.811650 25470 net.cpp:86] Creating Layer pool0
I0428 19:43:52.811655 25470 net.cpp:408] pool0 <- conv0
I0428 19:43:52.811662 25470 net.cpp:382] pool0 -> pool0
I0428 19:43:52.811719 25470 net.cpp:124] Setting up pool0
I0428 19:43:52.811728 25470 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:52.811733 25470 net.cpp:139] Memory required for data: 569600
I0428 19:43:52.811735 25470 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:52.811749 25470 net.cpp:86] Creating Layer conv1
I0428 19:43:52.811753 25470 net.cpp:408] conv1 <- pool0
I0428 19:43:52.811759 25470 net.cpp:382] conv1 -> conv1
I0428 19:43:52.814898 25470 net.cpp:124] Setting up conv1
I0428 19:43:52.814915 25470 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:43:52.814920 25470 net.cpp:139] Memory required for data: 1388800
I0428 19:43:52.814930 25470 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:52.814940 25470 net.cpp:86] Creating Layer pool1
I0428 19:43:52.814944 25470 net.cpp:408] pool1 <- conv1
I0428 19:43:52.814950 25470 net.cpp:382] pool1 -> pool1
I0428 19:43:52.814995 25470 net.cpp:124] Setting up pool1
I0428 19:43:52.815001 25470 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:43:52.815004 25470 net.cpp:139] Memory required for data: 1593600
I0428 19:43:52.815008 25470 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:52.815016 25470 net.cpp:86] Creating Layer ip1
I0428 19:43:52.815021 25470 net.cpp:408] ip1 <- pool1
I0428 19:43:52.815026 25470 net.cpp:382] ip1 -> ip1
I0428 19:43:52.816162 25470 net.cpp:124] Setting up ip1
I0428 19:43:52.816176 25470 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:52.816180 25470 net.cpp:139] Memory required for data: 1596160
I0428 19:43:52.816192 25470 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:52.816200 25470 net.cpp:86] Creating Layer relu1
I0428 19:43:52.816202 25470 net.cpp:408] relu1 <- ip1
I0428 19:43:52.816210 25470 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:52.816428 25470 net.cpp:124] Setting up relu1
I0428 19:43:52.816440 25470 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:52.816443 25470 net.cpp:139] Memory required for data: 1598720
I0428 19:43:52.816447 25470 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:52.816455 25470 net.cpp:86] Creating Layer ip2
I0428 19:43:52.816458 25470 net.cpp:408] ip2 <- ip1
I0428 19:43:52.816465 25470 net.cpp:382] ip2 -> ip2
I0428 19:43:52.816587 25470 net.cpp:124] Setting up ip2
I0428 19:43:52.816596 25470 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:52.816599 25470 net.cpp:139] Memory required for data: 1601280
I0428 19:43:52.816606 25470 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:52.816613 25470 net.cpp:86] Creating Layer relu2
I0428 19:43:52.816617 25470 net.cpp:408] relu2 <- ip2
I0428 19:43:52.816623 25470 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:52.817487 25470 net.cpp:124] Setting up relu2
I0428 19:43:52.817502 25470 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:52.817507 25470 net.cpp:139] Memory required for data: 1603840
I0428 19:43:52.817510 25470 layer_factory.hpp:77] Creating layer loss
I0428 19:43:52.817517 25470 net.cpp:86] Creating Layer loss
I0428 19:43:52.817522 25470 net.cpp:408] loss <- ip2
I0428 19:43:52.817526 25470 net.cpp:408] loss <- label
I0428 19:43:52.817535 25470 net.cpp:382] loss -> loss
I0428 19:43:52.817553 25470 layer_factory.hpp:77] Creating layer loss
I0428 19:43:52.817848 25470 net.cpp:124] Setting up loss
I0428 19:43:52.817859 25470 net.cpp:131] Top shape: (1)
I0428 19:43:52.817862 25470 net.cpp:134]     with loss weight 1
I0428 19:43:52.817879 25470 net.cpp:139] Memory required for data: 1603844
I0428 19:43:52.817883 25470 net.cpp:200] loss needs backward computation.
I0428 19:43:52.817888 25470 net.cpp:200] relu2 needs backward computation.
I0428 19:43:52.817891 25470 net.cpp:200] ip2 needs backward computation.
I0428 19:43:52.817894 25470 net.cpp:200] relu1 needs backward computation.
I0428 19:43:52.817898 25470 net.cpp:200] ip1 needs backward computation.
I0428 19:43:52.817914 25470 net.cpp:200] pool1 needs backward computation.
I0428 19:43:52.817917 25470 net.cpp:200] conv1 needs backward computation.
I0428 19:43:52.817921 25470 net.cpp:200] pool0 needs backward computation.
I0428 19:43:52.817924 25470 net.cpp:200] conv0 needs backward computation.
I0428 19:43:52.817929 25470 net.cpp:202] mnist does not need backward computation.
I0428 19:43:52.817931 25470 net.cpp:244] This network produces output loss
I0428 19:43:52.817944 25470 net.cpp:257] Network initialization done.
I0428 19:43:52.818291 25470 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test433.prototxt
I0428 19:43:52.818323 25470 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:52.818428 25470 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:52.818508 25470 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:52.818562 25470 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:52.818578 25470 net.cpp:86] Creating Layer mnist
I0428 19:43:52.818584 25470 net.cpp:382] mnist -> data
I0428 19:43:52.818593 25470 net.cpp:382] mnist -> label
I0428 19:43:52.818698 25470 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:52.820889 25470 net.cpp:124] Setting up mnist
I0428 19:43:52.820905 25470 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:52.820911 25470 net.cpp:131] Top shape: 100 (100)
I0428 19:43:52.820915 25470 net.cpp:139] Memory required for data: 314000
I0428 19:43:52.820919 25470 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:52.820927 25470 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:52.820931 25470 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:52.820960 25470 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:52.820968 25470 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:52.821023 25470 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:52.821045 25470 net.cpp:131] Top shape: 100 (100)
I0428 19:43:52.821050 25470 net.cpp:131] Top shape: 100 (100)
I0428 19:43:52.821054 25470 net.cpp:139] Memory required for data: 314800
I0428 19:43:52.821058 25470 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:52.821069 25470 net.cpp:86] Creating Layer conv0
I0428 19:43:52.821074 25470 net.cpp:408] conv0 <- data
I0428 19:43:52.821080 25470 net.cpp:382] conv0 -> conv0
I0428 19:43:52.822918 25470 net.cpp:124] Setting up conv0
I0428 19:43:52.822935 25470 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:52.822939 25470 net.cpp:139] Memory required for data: 775600
I0428 19:43:52.822950 25470 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:52.822958 25470 net.cpp:86] Creating Layer pool0
I0428 19:43:52.822962 25470 net.cpp:408] pool0 <- conv0
I0428 19:43:52.822969 25470 net.cpp:382] pool0 -> pool0
I0428 19:43:52.823012 25470 net.cpp:124] Setting up pool0
I0428 19:43:52.823019 25470 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:52.823021 25470 net.cpp:139] Memory required for data: 890800
I0428 19:43:52.823025 25470 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:52.823038 25470 net.cpp:86] Creating Layer conv1
I0428 19:43:52.823042 25470 net.cpp:408] conv1 <- pool0
I0428 19:43:52.823048 25470 net.cpp:382] conv1 -> conv1
I0428 19:43:52.824918 25470 net.cpp:124] Setting up conv1
I0428 19:43:52.824935 25470 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:43:52.824940 25470 net.cpp:139] Memory required for data: 2170800
I0428 19:43:52.824951 25470 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:52.824959 25470 net.cpp:86] Creating Layer pool1
I0428 19:43:52.824965 25470 net.cpp:408] pool1 <- conv1
I0428 19:43:52.824970 25470 net.cpp:382] pool1 -> pool1
I0428 19:43:52.825017 25470 net.cpp:124] Setting up pool1
I0428 19:43:52.825023 25470 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:43:52.825028 25470 net.cpp:139] Memory required for data: 2490800
I0428 19:43:52.825031 25470 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:52.825040 25470 net.cpp:86] Creating Layer ip1
I0428 19:43:52.825044 25470 net.cpp:408] ip1 <- pool1
I0428 19:43:52.825050 25470 net.cpp:382] ip1 -> ip1
I0428 19:43:52.825222 25470 net.cpp:124] Setting up ip1
I0428 19:43:52.825232 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.825237 25470 net.cpp:139] Memory required for data: 2494800
I0428 19:43:52.825244 25470 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:52.825251 25470 net.cpp:86] Creating Layer relu1
I0428 19:43:52.825255 25470 net.cpp:408] relu1 <- ip1
I0428 19:43:52.825263 25470 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:52.825465 25470 net.cpp:124] Setting up relu1
I0428 19:43:52.825477 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.825482 25470 net.cpp:139] Memory required for data: 2498800
I0428 19:43:52.825485 25470 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:52.825494 25470 net.cpp:86] Creating Layer ip2
I0428 19:43:52.825497 25470 net.cpp:408] ip2 <- ip1
I0428 19:43:52.825505 25470 net.cpp:382] ip2 -> ip2
I0428 19:43:52.825626 25470 net.cpp:124] Setting up ip2
I0428 19:43:52.825635 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.825639 25470 net.cpp:139] Memory required for data: 2502800
I0428 19:43:52.825645 25470 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:52.825652 25470 net.cpp:86] Creating Layer relu2
I0428 19:43:52.825656 25470 net.cpp:408] relu2 <- ip2
I0428 19:43:52.825660 25470 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:52.825919 25470 net.cpp:124] Setting up relu2
I0428 19:43:52.825930 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.825934 25470 net.cpp:139] Memory required for data: 2506800
I0428 19:43:52.825937 25470 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:43:52.825945 25470 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:43:52.825949 25470 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:43:52.825955 25470 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:43:52.825973 25470 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:43:52.826016 25470 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:43:52.826025 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.826028 25470 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:52.826032 25470 net.cpp:139] Memory required for data: 2514800
I0428 19:43:52.826036 25470 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:52.826043 25470 net.cpp:86] Creating Layer accuracy
I0428 19:43:52.826047 25470 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:43:52.826052 25470 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:52.826058 25470 net.cpp:382] accuracy -> accuracy
I0428 19:43:52.826066 25470 net.cpp:124] Setting up accuracy
I0428 19:43:52.826071 25470 net.cpp:131] Top shape: (1)
I0428 19:43:52.826074 25470 net.cpp:139] Memory required for data: 2514804
I0428 19:43:52.826078 25470 layer_factory.hpp:77] Creating layer loss
I0428 19:43:52.826086 25470 net.cpp:86] Creating Layer loss
I0428 19:43:52.826091 25470 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:43:52.826095 25470 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:52.826099 25470 net.cpp:382] loss -> loss
I0428 19:43:52.826107 25470 layer_factory.hpp:77] Creating layer loss
I0428 19:43:52.826393 25470 net.cpp:124] Setting up loss
I0428 19:43:52.826407 25470 net.cpp:131] Top shape: (1)
I0428 19:43:52.826411 25470 net.cpp:134]     with loss weight 1
I0428 19:43:52.826419 25470 net.cpp:139] Memory required for data: 2514808
I0428 19:43:52.826423 25470 net.cpp:200] loss needs backward computation.
I0428 19:43:52.826428 25470 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:52.826433 25470 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:43:52.826436 25470 net.cpp:200] relu2 needs backward computation.
I0428 19:43:52.826439 25470 net.cpp:200] ip2 needs backward computation.
I0428 19:43:52.826443 25470 net.cpp:200] relu1 needs backward computation.
I0428 19:43:52.826447 25470 net.cpp:200] ip1 needs backward computation.
I0428 19:43:52.826450 25470 net.cpp:200] pool1 needs backward computation.
I0428 19:43:52.826453 25470 net.cpp:200] conv1 needs backward computation.
I0428 19:43:52.826457 25470 net.cpp:200] pool0 needs backward computation.
I0428 19:43:52.826462 25470 net.cpp:200] conv0 needs backward computation.
I0428 19:43:52.826467 25470 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:52.826470 25470 net.cpp:202] mnist does not need backward computation.
I0428 19:43:52.826473 25470 net.cpp:244] This network produces output accuracy
I0428 19:43:52.826478 25470 net.cpp:244] This network produces output loss
I0428 19:43:52.826490 25470 net.cpp:257] Network initialization done.
I0428 19:43:52.826535 25470 solver.cpp:56] Solver scaffolding done.
I0428 19:43:52.826879 25470 caffe.cpp:248] Starting Optimization
I0428 19:43:52.826884 25470 solver.cpp:273] Solving LeNet
I0428 19:43:52.826889 25470 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:52.827132 25470 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:52.831382 25470 blocking_queue.cpp:49] Waiting for data
I0428 19:43:52.905290 25477 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:52.905777 25470 solver.cpp:398]     Test net output #0: accuracy = 0.067
I0428 19:43:52.905800 25470 solver.cpp:398]     Test net output #1: loss = 2.32147 (* 1 = 2.32147 loss)
I0428 19:43:52.907974 25470 solver.cpp:219] Iteration 0 (-3.04458e-31 iter/s, 0.0810527s/100 iters), loss = 2.32108
I0428 19:43:52.908004 25470 solver.cpp:238]     Train net output #0: loss = 2.32108 (* 1 = 2.32108 loss)
I0428 19:43:52.908018 25470 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:53.010334 25470 solver.cpp:219] Iteration 100 (977.374 iter/s, 0.102315s/100 iters), loss = 0.812419
I0428 19:43:53.010363 25470 solver.cpp:238]     Train net output #0: loss = 0.812419 (* 1 = 0.812419 loss)
I0428 19:43:53.010371 25470 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:53.115358 25470 solver.cpp:219] Iteration 200 (952.622 iter/s, 0.104973s/100 iters), loss = 0.527869
I0428 19:43:53.115425 25470 solver.cpp:238]     Train net output #0: loss = 0.527869 (* 1 = 0.527869 loss)
I0428 19:43:53.115437 25470 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:53.221979 25470 solver.cpp:219] Iteration 300 (938.658 iter/s, 0.106535s/100 iters), loss = 0.259855
I0428 19:43:53.222014 25470 solver.cpp:238]     Train net output #0: loss = 0.259855 (* 1 = 0.259855 loss)
I0428 19:43:53.222023 25470 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:53.326129 25470 solver.cpp:219] Iteration 400 (960.73 iter/s, 0.104088s/100 iters), loss = 0.254558
I0428 19:43:53.326159 25470 solver.cpp:238]     Train net output #0: loss = 0.254558 (* 1 = 0.254558 loss)
I0428 19:43:53.326181 25470 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:53.416471 25470 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:53.492800 25477 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:53.493259 25470 solver.cpp:398]     Test net output #0: accuracy = 0.9391
I0428 19:43:53.493279 25470 solver.cpp:398]     Test net output #1: loss = 0.212585 (* 1 = 0.212585 loss)
I0428 19:43:53.494244 25470 solver.cpp:219] Iteration 500 (594.983 iter/s, 0.168072s/100 iters), loss = 0.251905
I0428 19:43:53.494271 25470 solver.cpp:238]     Train net output #0: loss = 0.251905 (* 1 = 0.251905 loss)
I0428 19:43:53.494277 25470 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:53.606971 25470 solver.cpp:219] Iteration 600 (887.437 iter/s, 0.112684s/100 iters), loss = 0.116823
I0428 19:43:53.607005 25470 solver.cpp:238]     Train net output #0: loss = 0.116823 (* 1 = 0.116823 loss)
I0428 19:43:53.607012 25470 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:53.709619 25470 solver.cpp:219] Iteration 700 (974.584 iter/s, 0.102608s/100 iters), loss = 0.193034
I0428 19:43:53.709655 25470 solver.cpp:238]     Train net output #0: loss = 0.193034 (* 1 = 0.193034 loss)
I0428 19:43:53.709662 25470 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:53.813297 25470 solver.cpp:219] Iteration 800 (965.01 iter/s, 0.103626s/100 iters), loss = 0.409185
I0428 19:43:53.813331 25470 solver.cpp:238]     Train net output #0: loss = 0.409185 (* 1 = 0.409185 loss)
I0428 19:43:53.813340 25470 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:53.919955 25470 solver.cpp:219] Iteration 900 (938.063 iter/s, 0.106603s/100 iters), loss = 0.176233
I0428 19:43:53.919988 25470 solver.cpp:238]     Train net output #0: loss = 0.176233 (* 1 = 0.176233 loss)
I0428 19:43:53.919996 25470 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:53.954893 25476 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:54.022439 25470 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:54.023496 25470 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:54.024039 25470 solver.cpp:311] Iteration 1000, loss = 0.223145
I0428 19:43:54.024061 25470 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:54.099308 25477 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:54.099800 25470 solver.cpp:398]     Test net output #0: accuracy = 0.958
I0428 19:43:54.099829 25470 solver.cpp:398]     Test net output #1: loss = 0.13859 (* 1 = 0.13859 loss)
I0428 19:43:54.099835 25470 solver.cpp:316] Optimization Done.
I0428 19:43:54.099839 25470 caffe.cpp:259] Optimization Done.
