I0428 19:39:40.063267 24355 caffe.cpp:218] Using GPUs 0
I0428 19:39:40.098027 24355 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:40.540881 24355 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test311.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:40.541030 24355 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test311.prototxt
I0428 19:39:40.541359 24355 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:40.541375 24355 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:40.541456 24355 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:40.541535 24355 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:40.541636 24355 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:40.541661 24355 net.cpp:86] Creating Layer mnist
I0428 19:39:40.541671 24355 net.cpp:382] mnist -> data
I0428 19:39:40.541694 24355 net.cpp:382] mnist -> label
I0428 19:39:40.542815 24355 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:40.545024 24355 net.cpp:124] Setting up mnist
I0428 19:39:40.545056 24355 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:40.545064 24355 net.cpp:131] Top shape: 64 (64)
I0428 19:39:40.545069 24355 net.cpp:139] Memory required for data: 200960
I0428 19:39:40.545079 24355 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:40.545097 24355 net.cpp:86] Creating Layer conv0
I0428 19:39:40.545131 24355 net.cpp:408] conv0 <- data
I0428 19:39:40.545146 24355 net.cpp:382] conv0 -> conv0
I0428 19:39:40.768378 24355 net.cpp:124] Setting up conv0
I0428 19:39:40.768404 24355 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:40.768409 24355 net.cpp:139] Memory required for data: 495872
I0428 19:39:40.768427 24355 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:40.768445 24355 net.cpp:86] Creating Layer pool0
I0428 19:39:40.768456 24355 net.cpp:408] pool0 <- conv0
I0428 19:39:40.768466 24355 net.cpp:382] pool0 -> pool0
I0428 19:39:40.768514 24355 net.cpp:124] Setting up pool0
I0428 19:39:40.768522 24355 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:40.768527 24355 net.cpp:139] Memory required for data: 569600
I0428 19:39:40.768530 24355 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:40.768544 24355 net.cpp:86] Creating Layer conv1
I0428 19:39:40.768550 24355 net.cpp:408] conv1 <- pool0
I0428 19:39:40.768558 24355 net.cpp:382] conv1 -> conv1
I0428 19:39:40.770483 24355 net.cpp:124] Setting up conv1
I0428 19:39:40.770499 24355 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:40.770505 24355 net.cpp:139] Memory required for data: 602368
I0428 19:39:40.770519 24355 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:40.770529 24355 net.cpp:86] Creating Layer pool1
I0428 19:39:40.770535 24355 net.cpp:408] pool1 <- conv1
I0428 19:39:40.770545 24355 net.cpp:382] pool1 -> pool1
I0428 19:39:40.770592 24355 net.cpp:124] Setting up pool1
I0428 19:39:40.770601 24355 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:40.770606 24355 net.cpp:139] Memory required for data: 610560
I0428 19:39:40.770611 24355 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:40.770622 24355 net.cpp:86] Creating Layer ip1
I0428 19:39:40.770630 24355 net.cpp:408] ip1 <- pool1
I0428 19:39:40.770639 24355 net.cpp:382] ip1 -> ip1
I0428 19:39:40.771615 24355 net.cpp:124] Setting up ip1
I0428 19:39:40.771643 24355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:40.771649 24355 net.cpp:139] Memory required for data: 623360
I0428 19:39:40.771661 24355 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:40.771672 24355 net.cpp:86] Creating Layer relu1
I0428 19:39:40.771682 24355 net.cpp:408] relu1 <- ip1
I0428 19:39:40.771690 24355 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:40.771879 24355 net.cpp:124] Setting up relu1
I0428 19:39:40.771889 24355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:40.771893 24355 net.cpp:139] Memory required for data: 636160
I0428 19:39:40.771898 24355 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:40.771908 24355 net.cpp:86] Creating Layer ip2
I0428 19:39:40.771914 24355 net.cpp:408] ip2 <- ip1
I0428 19:39:40.771921 24355 net.cpp:382] ip2 -> ip2
I0428 19:39:40.772027 24355 net.cpp:124] Setting up ip2
I0428 19:39:40.772035 24355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:40.772039 24355 net.cpp:139] Memory required for data: 648960
I0428 19:39:40.772047 24355 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:40.772068 24355 net.cpp:86] Creating Layer relu2
I0428 19:39:40.772073 24355 net.cpp:408] relu2 <- ip2
I0428 19:39:40.772080 24355 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:40.772858 24355 net.cpp:124] Setting up relu2
I0428 19:39:40.772872 24355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:40.772877 24355 net.cpp:139] Memory required for data: 661760
I0428 19:39:40.772882 24355 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:40.772892 24355 net.cpp:86] Creating Layer ip3
I0428 19:39:40.772898 24355 net.cpp:408] ip3 <- ip2
I0428 19:39:40.772907 24355 net.cpp:382] ip3 -> ip3
I0428 19:39:40.773038 24355 net.cpp:124] Setting up ip3
I0428 19:39:40.773048 24355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:40.773053 24355 net.cpp:139] Memory required for data: 664320
I0428 19:39:40.773066 24355 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:40.773075 24355 net.cpp:86] Creating Layer relu3
I0428 19:39:40.773082 24355 net.cpp:408] relu3 <- ip3
I0428 19:39:40.773089 24355 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:40.773254 24355 net.cpp:124] Setting up relu3
I0428 19:39:40.773264 24355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:40.773269 24355 net.cpp:139] Memory required for data: 666880
I0428 19:39:40.773274 24355 layer_factory.hpp:77] Creating layer loss
I0428 19:39:40.773283 24355 net.cpp:86] Creating Layer loss
I0428 19:39:40.773288 24355 net.cpp:408] loss <- ip3
I0428 19:39:40.773295 24355 net.cpp:408] loss <- label
I0428 19:39:40.773317 24355 net.cpp:382] loss -> loss
I0428 19:39:40.773336 24355 layer_factory.hpp:77] Creating layer loss
I0428 19:39:40.773582 24355 net.cpp:124] Setting up loss
I0428 19:39:40.773592 24355 net.cpp:131] Top shape: (1)
I0428 19:39:40.773597 24355 net.cpp:134]     with loss weight 1
I0428 19:39:40.773615 24355 net.cpp:139] Memory required for data: 666884
I0428 19:39:40.773622 24355 net.cpp:200] loss needs backward computation.
I0428 19:39:40.773627 24355 net.cpp:200] relu3 needs backward computation.
I0428 19:39:40.773633 24355 net.cpp:200] ip3 needs backward computation.
I0428 19:39:40.773638 24355 net.cpp:200] relu2 needs backward computation.
I0428 19:39:40.773643 24355 net.cpp:200] ip2 needs backward computation.
I0428 19:39:40.773648 24355 net.cpp:200] relu1 needs backward computation.
I0428 19:39:40.773651 24355 net.cpp:200] ip1 needs backward computation.
I0428 19:39:40.773656 24355 net.cpp:200] pool1 needs backward computation.
I0428 19:39:40.773661 24355 net.cpp:200] conv1 needs backward computation.
I0428 19:39:40.773666 24355 net.cpp:200] pool0 needs backward computation.
I0428 19:39:40.773671 24355 net.cpp:200] conv0 needs backward computation.
I0428 19:39:40.773677 24355 net.cpp:202] mnist does not need backward computation.
I0428 19:39:40.773682 24355 net.cpp:244] This network produces output loss
I0428 19:39:40.773695 24355 net.cpp:257] Network initialization done.
I0428 19:39:40.774056 24355 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test311.prototxt
I0428 19:39:40.774091 24355 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:40.774188 24355 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:40.774335 24355 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:40.774394 24355 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:40.774410 24355 net.cpp:86] Creating Layer mnist
I0428 19:39:40.774417 24355 net.cpp:382] mnist -> data
I0428 19:39:40.774430 24355 net.cpp:382] mnist -> label
I0428 19:39:40.774552 24355 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:40.776751 24355 net.cpp:124] Setting up mnist
I0428 19:39:40.776782 24355 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:40.776790 24355 net.cpp:131] Top shape: 100 (100)
I0428 19:39:40.776795 24355 net.cpp:139] Memory required for data: 314000
I0428 19:39:40.776839 24355 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:40.776849 24355 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:40.776854 24355 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:40.776862 24355 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:40.776873 24355 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:40.776988 24355 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:40.776998 24355 net.cpp:131] Top shape: 100 (100)
I0428 19:39:40.777004 24355 net.cpp:131] Top shape: 100 (100)
I0428 19:39:40.777009 24355 net.cpp:139] Memory required for data: 314800
I0428 19:39:40.777015 24355 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:40.777029 24355 net.cpp:86] Creating Layer conv0
I0428 19:39:40.777035 24355 net.cpp:408] conv0 <- data
I0428 19:39:40.777045 24355 net.cpp:382] conv0 -> conv0
I0428 19:39:40.778630 24355 net.cpp:124] Setting up conv0
I0428 19:39:40.778645 24355 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:40.778650 24355 net.cpp:139] Memory required for data: 775600
I0428 19:39:40.778663 24355 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:40.778672 24355 net.cpp:86] Creating Layer pool0
I0428 19:39:40.778678 24355 net.cpp:408] pool0 <- conv0
I0428 19:39:40.778702 24355 net.cpp:382] pool0 -> pool0
I0428 19:39:40.778759 24355 net.cpp:124] Setting up pool0
I0428 19:39:40.778766 24355 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:40.778771 24355 net.cpp:139] Memory required for data: 890800
I0428 19:39:40.778777 24355 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:40.778790 24355 net.cpp:86] Creating Layer conv1
I0428 19:39:40.778796 24355 net.cpp:408] conv1 <- pool0
I0428 19:39:40.778805 24355 net.cpp:382] conv1 -> conv1
I0428 19:39:40.780520 24355 net.cpp:124] Setting up conv1
I0428 19:39:40.780537 24355 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:40.780542 24355 net.cpp:139] Memory required for data: 942000
I0428 19:39:40.780570 24355 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:40.780593 24355 net.cpp:86] Creating Layer pool1
I0428 19:39:40.780599 24355 net.cpp:408] pool1 <- conv1
I0428 19:39:40.780607 24355 net.cpp:382] pool1 -> pool1
I0428 19:39:40.780649 24355 net.cpp:124] Setting up pool1
I0428 19:39:40.780659 24355 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:40.780664 24355 net.cpp:139] Memory required for data: 954800
I0428 19:39:40.780669 24355 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:40.780679 24355 net.cpp:86] Creating Layer ip1
I0428 19:39:40.780685 24355 net.cpp:408] ip1 <- pool1
I0428 19:39:40.780694 24355 net.cpp:382] ip1 -> ip1
I0428 19:39:40.780833 24355 net.cpp:124] Setting up ip1
I0428 19:39:40.780844 24355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:40.780861 24355 net.cpp:139] Memory required for data: 974800
I0428 19:39:40.780874 24355 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:40.780900 24355 net.cpp:86] Creating Layer relu1
I0428 19:39:40.780906 24355 net.cpp:408] relu1 <- ip1
I0428 19:39:40.780915 24355 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:40.781107 24355 net.cpp:124] Setting up relu1
I0428 19:39:40.781133 24355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:40.781146 24355 net.cpp:139] Memory required for data: 994800
I0428 19:39:40.781150 24355 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:40.781162 24355 net.cpp:86] Creating Layer ip2
I0428 19:39:40.781167 24355 net.cpp:408] ip2 <- ip1
I0428 19:39:40.781178 24355 net.cpp:382] ip2 -> ip2
I0428 19:39:40.781335 24355 net.cpp:124] Setting up ip2
I0428 19:39:40.781344 24355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:40.781348 24355 net.cpp:139] Memory required for data: 1014800
I0428 19:39:40.781358 24355 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:40.781364 24355 net.cpp:86] Creating Layer relu2
I0428 19:39:40.781369 24355 net.cpp:408] relu2 <- ip2
I0428 19:39:40.781378 24355 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:40.781594 24355 net.cpp:124] Setting up relu2
I0428 19:39:40.781618 24355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:40.781623 24355 net.cpp:139] Memory required for data: 1034800
I0428 19:39:40.781628 24355 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:40.781636 24355 net.cpp:86] Creating Layer ip3
I0428 19:39:40.781641 24355 net.cpp:408] ip3 <- ip2
I0428 19:39:40.781651 24355 net.cpp:382] ip3 -> ip3
I0428 19:39:40.781780 24355 net.cpp:124] Setting up ip3
I0428 19:39:40.781790 24355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:40.781795 24355 net.cpp:139] Memory required for data: 1038800
I0428 19:39:40.781808 24355 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:40.781821 24355 net.cpp:86] Creating Layer relu3
I0428 19:39:40.781827 24355 net.cpp:408] relu3 <- ip3
I0428 19:39:40.781836 24355 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:40.782753 24355 net.cpp:124] Setting up relu3
I0428 19:39:40.782766 24355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:40.782775 24355 net.cpp:139] Memory required for data: 1042800
I0428 19:39:40.782780 24355 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:40.782791 24355 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:40.782796 24355 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:40.782805 24355 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:40.782814 24355 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:40.782860 24355 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:40.782882 24355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:40.782888 24355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:40.782894 24355 net.cpp:139] Memory required for data: 1050800
I0428 19:39:40.782899 24355 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:40.782907 24355 net.cpp:86] Creating Layer accuracy
I0428 19:39:40.782912 24355 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:40.782920 24355 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:40.782929 24355 net.cpp:382] accuracy -> accuracy
I0428 19:39:40.782941 24355 net.cpp:124] Setting up accuracy
I0428 19:39:40.782963 24355 net.cpp:131] Top shape: (1)
I0428 19:39:40.782968 24355 net.cpp:139] Memory required for data: 1050804
I0428 19:39:40.782974 24355 layer_factory.hpp:77] Creating layer loss
I0428 19:39:40.782981 24355 net.cpp:86] Creating Layer loss
I0428 19:39:40.782989 24355 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:40.782995 24355 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:40.783004 24355 net.cpp:382] loss -> loss
I0428 19:39:40.783015 24355 layer_factory.hpp:77] Creating layer loss
I0428 19:39:40.783310 24355 net.cpp:124] Setting up loss
I0428 19:39:40.783320 24355 net.cpp:131] Top shape: (1)
I0428 19:39:40.783325 24355 net.cpp:134]     with loss weight 1
I0428 19:39:40.783334 24355 net.cpp:139] Memory required for data: 1050808
I0428 19:39:40.783349 24355 net.cpp:200] loss needs backward computation.
I0428 19:39:40.783356 24355 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:40.783363 24355 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:40.783370 24355 net.cpp:200] relu3 needs backward computation.
I0428 19:39:40.783375 24355 net.cpp:200] ip3 needs backward computation.
I0428 19:39:40.783380 24355 net.cpp:200] relu2 needs backward computation.
I0428 19:39:40.783383 24355 net.cpp:200] ip2 needs backward computation.
I0428 19:39:40.783390 24355 net.cpp:200] relu1 needs backward computation.
I0428 19:39:40.783394 24355 net.cpp:200] ip1 needs backward computation.
I0428 19:39:40.783399 24355 net.cpp:200] pool1 needs backward computation.
I0428 19:39:40.783419 24355 net.cpp:200] conv1 needs backward computation.
I0428 19:39:40.783424 24355 net.cpp:200] pool0 needs backward computation.
I0428 19:39:40.783428 24355 net.cpp:200] conv0 needs backward computation.
I0428 19:39:40.783434 24355 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:40.783440 24355 net.cpp:202] mnist does not need backward computation.
I0428 19:39:40.783444 24355 net.cpp:244] This network produces output accuracy
I0428 19:39:40.783450 24355 net.cpp:244] This network produces output loss
I0428 19:39:40.783468 24355 net.cpp:257] Network initialization done.
I0428 19:39:40.783514 24355 solver.cpp:56] Solver scaffolding done.
I0428 19:39:40.783888 24355 caffe.cpp:248] Starting Optimization
I0428 19:39:40.783895 24355 solver.cpp:273] Solving LeNet
I0428 19:39:40.783900 24355 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:40.784878 24355 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:40.787636 24355 blocking_queue.cpp:49] Waiting for data
I0428 19:39:40.859884 24362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:40.860325 24355 solver.cpp:398]     Test net output #0: accuracy = 0.1365
I0428 19:39:40.860347 24355 solver.cpp:398]     Test net output #1: loss = 2.30007 (* 1 = 2.30007 loss)
I0428 19:39:40.862200 24355 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782643s/100 iters), loss = 2.3183
I0428 19:39:40.862242 24355 solver.cpp:238]     Train net output #0: loss = 2.3183 (* 1 = 2.3183 loss)
I0428 19:39:40.862274 24355 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:40.932534 24355 solver.cpp:219] Iteration 100 (1422.78 iter/s, 0.0702848s/100 iters), loss = 1.1061
I0428 19:39:40.932561 24355 solver.cpp:238]     Train net output #0: loss = 1.1061 (* 1 = 1.1061 loss)
I0428 19:39:40.932586 24355 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:41.000383 24355 solver.cpp:219] Iteration 200 (1474.61 iter/s, 0.0678144s/100 iters), loss = 0.473029
I0428 19:39:41.000409 24355 solver.cpp:238]     Train net output #0: loss = 0.473029 (* 1 = 0.473029 loss)
I0428 19:39:41.000434 24355 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:41.068015 24355 solver.cpp:219] Iteration 300 (1479.3 iter/s, 0.0675994s/100 iters), loss = 0.404021
I0428 19:39:41.068042 24355 solver.cpp:238]     Train net output #0: loss = 0.404021 (* 1 = 0.404021 loss)
I0428 19:39:41.068066 24355 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:41.134336 24355 solver.cpp:219] Iteration 400 (1508.58 iter/s, 0.0662876s/100 iters), loss = 0.260561
I0428 19:39:41.134363 24355 solver.cpp:238]     Train net output #0: loss = 0.260561 (* 1 = 0.260561 loss)
I0428 19:39:41.134389 24355 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:41.201642 24355 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:41.276448 24362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:41.276870 24355 solver.cpp:398]     Test net output #0: accuracy = 0.8923
I0428 19:39:41.276890 24355 solver.cpp:398]     Test net output #1: loss = 0.314824 (* 1 = 0.314824 loss)
I0428 19:39:41.277636 24355 solver.cpp:219] Iteration 500 (698.027 iter/s, 0.143261s/100 iters), loss = 0.394853
I0428 19:39:41.277663 24355 solver.cpp:238]     Train net output #0: loss = 0.394853 (* 1 = 0.394853 loss)
I0428 19:39:41.277689 24355 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:41.346107 24355 solver.cpp:219] Iteration 600 (1461.16 iter/s, 0.0684389s/100 iters), loss = 0.230738
I0428 19:39:41.346135 24355 solver.cpp:238]     Train net output #0: loss = 0.230738 (* 1 = 0.230738 loss)
I0428 19:39:41.346145 24355 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:41.415009 24355 solver.cpp:219] Iteration 700 (1452.05 iter/s, 0.068868s/100 iters), loss = 0.363097
I0428 19:39:41.415037 24355 solver.cpp:238]     Train net output #0: loss = 0.363097 (* 1 = 0.363097 loss)
I0428 19:39:41.415061 24355 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:41.482219 24355 solver.cpp:219] Iteration 800 (1488.64 iter/s, 0.0671754s/100 iters), loss = 0.269645
I0428 19:39:41.482247 24355 solver.cpp:238]     Train net output #0: loss = 0.269645 (* 1 = 0.269645 loss)
I0428 19:39:41.482256 24355 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:41.552546 24355 solver.cpp:219] Iteration 900 (1422.65 iter/s, 0.0702915s/100 iters), loss = 0.157442
I0428 19:39:41.552572 24355 solver.cpp:238]     Train net output #0: loss = 0.157442 (* 1 = 0.157442 loss)
I0428 19:39:41.552582 24355 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:41.576077 24361 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:41.621343 24355 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:41.622030 24355 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:41.622514 24355 solver.cpp:311] Iteration 1000, loss = 0.212344
I0428 19:39:41.622530 24355 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:41.698300 24362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:41.698879 24355 solver.cpp:398]     Test net output #0: accuracy = 0.9451
I0428 19:39:41.698914 24355 solver.cpp:398]     Test net output #1: loss = 0.180573 (* 1 = 0.180573 loss)
I0428 19:39:41.698922 24355 solver.cpp:316] Optimization Done.
I0428 19:39:41.698927 24355 caffe.cpp:259] Optimization Done.
