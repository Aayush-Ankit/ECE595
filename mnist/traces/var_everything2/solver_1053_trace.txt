I0428 20:07:21.234329 31084 caffe.cpp:218] Using GPUs 0
I0428 20:07:21.271278 31084 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:21.787461 31084 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1053.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:21.787597 31084 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1053.prototxt
I0428 20:07:21.787937 31084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:21.787953 31084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:21.788035 31084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:21.788105 31084 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:21.788200 31084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:21.788225 31084 net.cpp:86] Creating Layer mnist
I0428 20:07:21.788233 31084 net.cpp:382] mnist -> data
I0428 20:07:21.788255 31084 net.cpp:382] mnist -> label
I0428 20:07:21.789348 31084 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:21.791815 31084 net.cpp:124] Setting up mnist
I0428 20:07:21.791834 31084 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:21.791841 31084 net.cpp:131] Top shape: 64 (64)
I0428 20:07:21.791843 31084 net.cpp:139] Memory required for data: 200960
I0428 20:07:21.791851 31084 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:21.791869 31084 net.cpp:86] Creating Layer conv0
I0428 20:07:21.791874 31084 net.cpp:408] conv0 <- data
I0428 20:07:21.791885 31084 net.cpp:382] conv0 -> conv0
I0428 20:07:22.079867 31084 net.cpp:124] Setting up conv0
I0428 20:07:22.079893 31084 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:22.079898 31084 net.cpp:139] Memory required for data: 3887360
I0428 20:07:22.079913 31084 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:22.079926 31084 net.cpp:86] Creating Layer pool0
I0428 20:07:22.079931 31084 net.cpp:408] pool0 <- conv0
I0428 20:07:22.079936 31084 net.cpp:382] pool0 -> pool0
I0428 20:07:22.079980 31084 net.cpp:124] Setting up pool0
I0428 20:07:22.079985 31084 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:22.080004 31084 net.cpp:139] Memory required for data: 4808960
I0428 20:07:22.080008 31084 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:22.080019 31084 net.cpp:86] Creating Layer conv1
I0428 20:07:22.080023 31084 net.cpp:408] conv1 <- pool0
I0428 20:07:22.080027 31084 net.cpp:382] conv1 -> conv1
I0428 20:07:22.082824 31084 net.cpp:124] Setting up conv1
I0428 20:07:22.082839 31084 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:22.082842 31084 net.cpp:139] Memory required for data: 4972800
I0428 20:07:22.082851 31084 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:22.082859 31084 net.cpp:86] Creating Layer pool1
I0428 20:07:22.082862 31084 net.cpp:408] pool1 <- conv1
I0428 20:07:22.082867 31084 net.cpp:382] pool1 -> pool1
I0428 20:07:22.082903 31084 net.cpp:124] Setting up pool1
I0428 20:07:22.082908 31084 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:22.082911 31084 net.cpp:139] Memory required for data: 5013760
I0428 20:07:22.082914 31084 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:22.082921 31084 net.cpp:86] Creating Layer ip1
I0428 20:07:22.082923 31084 net.cpp:408] ip1 <- pool1
I0428 20:07:22.082928 31084 net.cpp:382] ip1 -> ip1
I0428 20:07:22.083881 31084 net.cpp:124] Setting up ip1
I0428 20:07:22.083894 31084 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:22.083897 31084 net.cpp:139] Memory required for data: 5016320
I0428 20:07:22.083905 31084 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:22.083911 31084 net.cpp:86] Creating Layer relu1
I0428 20:07:22.083915 31084 net.cpp:408] relu1 <- ip1
I0428 20:07:22.083920 31084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:22.084085 31084 net.cpp:124] Setting up relu1
I0428 20:07:22.084095 31084 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:22.084097 31084 net.cpp:139] Memory required for data: 5018880
I0428 20:07:22.084100 31084 layer_factory.hpp:77] Creating layer loss
I0428 20:07:22.084106 31084 net.cpp:86] Creating Layer loss
I0428 20:07:22.084110 31084 net.cpp:408] loss <- ip1
I0428 20:07:22.084113 31084 net.cpp:408] loss <- label
I0428 20:07:22.084118 31084 net.cpp:382] loss -> loss
I0428 20:07:22.084136 31084 layer_factory.hpp:77] Creating layer loss
I0428 20:07:22.085024 31084 net.cpp:124] Setting up loss
I0428 20:07:22.085038 31084 net.cpp:131] Top shape: (1)
I0428 20:07:22.085042 31084 net.cpp:134]     with loss weight 1
I0428 20:07:22.085057 31084 net.cpp:139] Memory required for data: 5018884
I0428 20:07:22.085062 31084 net.cpp:200] loss needs backward computation.
I0428 20:07:22.085065 31084 net.cpp:200] relu1 needs backward computation.
I0428 20:07:22.085069 31084 net.cpp:200] ip1 needs backward computation.
I0428 20:07:22.085072 31084 net.cpp:200] pool1 needs backward computation.
I0428 20:07:22.085075 31084 net.cpp:200] conv1 needs backward computation.
I0428 20:07:22.085079 31084 net.cpp:200] pool0 needs backward computation.
I0428 20:07:22.085083 31084 net.cpp:200] conv0 needs backward computation.
I0428 20:07:22.085086 31084 net.cpp:202] mnist does not need backward computation.
I0428 20:07:22.085089 31084 net.cpp:244] This network produces output loss
I0428 20:07:22.085098 31084 net.cpp:257] Network initialization done.
I0428 20:07:22.085392 31084 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1053.prototxt
I0428 20:07:22.085417 31084 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:22.085494 31084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:22.085582 31084 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:22.085626 31084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:22.085638 31084 net.cpp:86] Creating Layer mnist
I0428 20:07:22.085642 31084 net.cpp:382] mnist -> data
I0428 20:07:22.085650 31084 net.cpp:382] mnist -> label
I0428 20:07:22.085731 31084 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:22.087661 31084 net.cpp:124] Setting up mnist
I0428 20:07:22.087689 31084 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:22.087695 31084 net.cpp:131] Top shape: 100 (100)
I0428 20:07:22.087698 31084 net.cpp:139] Memory required for data: 314000
I0428 20:07:22.087702 31084 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:22.087710 31084 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:22.087713 31084 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:22.087718 31084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:22.087726 31084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:22.087776 31084 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:22.087803 31084 net.cpp:131] Top shape: 100 (100)
I0428 20:07:22.087807 31084 net.cpp:131] Top shape: 100 (100)
I0428 20:07:22.087811 31084 net.cpp:139] Memory required for data: 314800
I0428 20:07:22.087815 31084 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:22.087822 31084 net.cpp:86] Creating Layer conv0
I0428 20:07:22.087826 31084 net.cpp:408] conv0 <- data
I0428 20:07:22.087831 31084 net.cpp:382] conv0 -> conv0
I0428 20:07:22.088716 31084 net.cpp:124] Setting up conv0
I0428 20:07:22.088727 31084 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:22.088732 31084 net.cpp:139] Memory required for data: 6074800
I0428 20:07:22.088742 31084 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:22.088747 31084 net.cpp:86] Creating Layer pool0
I0428 20:07:22.088750 31084 net.cpp:408] pool0 <- conv0
I0428 20:07:22.088755 31084 net.cpp:382] pool0 -> pool0
I0428 20:07:22.088793 31084 net.cpp:124] Setting up pool0
I0428 20:07:22.088798 31084 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:22.088801 31084 net.cpp:139] Memory required for data: 7514800
I0428 20:07:22.088804 31084 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:22.088820 31084 net.cpp:86] Creating Layer conv1
I0428 20:07:22.088824 31084 net.cpp:408] conv1 <- pool0
I0428 20:07:22.088830 31084 net.cpp:382] conv1 -> conv1
I0428 20:07:22.091033 31084 net.cpp:124] Setting up conv1
I0428 20:07:22.091065 31084 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:22.091069 31084 net.cpp:139] Memory required for data: 7770800
I0428 20:07:22.091092 31084 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:22.091099 31084 net.cpp:86] Creating Layer pool1
I0428 20:07:22.091127 31084 net.cpp:408] pool1 <- conv1
I0428 20:07:22.091135 31084 net.cpp:382] pool1 -> pool1
I0428 20:07:22.091176 31084 net.cpp:124] Setting up pool1
I0428 20:07:22.091192 31084 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:22.091195 31084 net.cpp:139] Memory required for data: 7834800
I0428 20:07:22.091198 31084 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:22.091205 31084 net.cpp:86] Creating Layer ip1
I0428 20:07:22.091208 31084 net.cpp:408] ip1 <- pool1
I0428 20:07:22.091214 31084 net.cpp:382] ip1 -> ip1
I0428 20:07:22.091330 31084 net.cpp:124] Setting up ip1
I0428 20:07:22.091338 31084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:22.091342 31084 net.cpp:139] Memory required for data: 7838800
I0428 20:07:22.091349 31084 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:22.091354 31084 net.cpp:86] Creating Layer relu1
I0428 20:07:22.091357 31084 net.cpp:408] relu1 <- ip1
I0428 20:07:22.091362 31084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:22.092243 31084 net.cpp:124] Setting up relu1
I0428 20:07:22.092254 31084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:22.092258 31084 net.cpp:139] Memory required for data: 7842800
I0428 20:07:22.092262 31084 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:07:22.092269 31084 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:07:22.092273 31084 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:07:22.092278 31084 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:07:22.092285 31084 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:07:22.092350 31084 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:07:22.092358 31084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:22.092362 31084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:22.092365 31084 net.cpp:139] Memory required for data: 7850800
I0428 20:07:22.092367 31084 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:22.092375 31084 net.cpp:86] Creating Layer accuracy
I0428 20:07:22.092378 31084 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:07:22.092383 31084 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:22.092387 31084 net.cpp:382] accuracy -> accuracy
I0428 20:07:22.092396 31084 net.cpp:124] Setting up accuracy
I0428 20:07:22.092399 31084 net.cpp:131] Top shape: (1)
I0428 20:07:22.092401 31084 net.cpp:139] Memory required for data: 7850804
I0428 20:07:22.092406 31084 layer_factory.hpp:77] Creating layer loss
I0428 20:07:22.092411 31084 net.cpp:86] Creating Layer loss
I0428 20:07:22.092414 31084 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:07:22.092418 31084 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:22.092423 31084 net.cpp:382] loss -> loss
I0428 20:07:22.092429 31084 layer_factory.hpp:77] Creating layer loss
I0428 20:07:22.092691 31084 net.cpp:124] Setting up loss
I0428 20:07:22.092700 31084 net.cpp:131] Top shape: (1)
I0428 20:07:22.092703 31084 net.cpp:134]     with loss weight 1
I0428 20:07:22.092710 31084 net.cpp:139] Memory required for data: 7850808
I0428 20:07:22.092713 31084 net.cpp:200] loss needs backward computation.
I0428 20:07:22.092717 31084 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:22.092720 31084 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:07:22.092725 31084 net.cpp:200] relu1 needs backward computation.
I0428 20:07:22.092727 31084 net.cpp:200] ip1 needs backward computation.
I0428 20:07:22.092730 31084 net.cpp:200] pool1 needs backward computation.
I0428 20:07:22.092734 31084 net.cpp:200] conv1 needs backward computation.
I0428 20:07:22.092737 31084 net.cpp:200] pool0 needs backward computation.
I0428 20:07:22.092741 31084 net.cpp:200] conv0 needs backward computation.
I0428 20:07:22.092744 31084 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:22.092747 31084 net.cpp:202] mnist does not need backward computation.
I0428 20:07:22.092751 31084 net.cpp:244] This network produces output accuracy
I0428 20:07:22.092754 31084 net.cpp:244] This network produces output loss
I0428 20:07:22.092773 31084 net.cpp:257] Network initialization done.
I0428 20:07:22.092806 31084 solver.cpp:56] Solver scaffolding done.
I0428 20:07:22.093036 31084 caffe.cpp:248] Starting Optimization
I0428 20:07:22.093044 31084 solver.cpp:273] Solving LeNet
I0428 20:07:22.093046 31084 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:22.093812 31084 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:22.098053 31084 blocking_queue.cpp:49] Waiting for data
I0428 20:07:22.169106 31091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:22.169689 31084 solver.cpp:398]     Test net output #0: accuracy = 0.1211
I0428 20:07:22.169739 31084 solver.cpp:398]     Test net output #1: loss = 2.26861 (* 1 = 2.26861 loss)
I0428 20:07:22.173070 31084 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799985s/100 iters), loss = 2.20551
I0428 20:07:22.173108 31084 solver.cpp:238]     Train net output #0: loss = 2.20551 (* 1 = 2.20551 loss)
I0428 20:07:22.173120 31084 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:22.263429 31084 solver.cpp:219] Iteration 100 (1107.12 iter/s, 0.0903246s/100 iters), loss = 0.292617
I0428 20:07:22.263454 31084 solver.cpp:238]     Train net output #0: loss = 0.292617 (* 1 = 0.292617 loss)
I0428 20:07:22.263461 31084 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:22.345151 31084 solver.cpp:219] Iteration 200 (1224.18 iter/s, 0.0816876s/100 iters), loss = 0.215106
I0428 20:07:22.345175 31084 solver.cpp:238]     Train net output #0: loss = 0.215106 (* 1 = 0.215106 loss)
I0428 20:07:22.345181 31084 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:22.422353 31084 solver.cpp:219] Iteration 300 (1295.88 iter/s, 0.0771676s/100 iters), loss = 0.211162
I0428 20:07:22.422375 31084 solver.cpp:238]     Train net output #0: loss = 0.211162 (* 1 = 0.211162 loss)
I0428 20:07:22.422382 31084 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:22.499099 31084 solver.cpp:219] Iteration 400 (1303.53 iter/s, 0.076715s/100 iters), loss = 0.137021
I0428 20:07:22.499136 31084 solver.cpp:238]     Train net output #0: loss = 0.137021 (* 1 = 0.137021 loss)
I0428 20:07:22.499142 31084 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:22.575383 31084 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:22.650765 31091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:22.651320 31084 solver.cpp:398]     Test net output #0: accuracy = 0.9589
I0428 20:07:22.651341 31084 solver.cpp:398]     Test net output #1: loss = 0.138782 (* 1 = 0.138782 loss)
I0428 20:07:22.652209 31084 solver.cpp:219] Iteration 500 (653.271 iter/s, 0.153076s/100 iters), loss = 0.222224
I0428 20:07:22.652232 31084 solver.cpp:238]     Train net output #0: loss = 0.222224 (* 1 = 0.222224 loss)
I0428 20:07:22.652240 31084 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:22.740128 31084 solver.cpp:219] Iteration 600 (1137.84 iter/s, 0.0878858s/100 iters), loss = 0.177615
I0428 20:07:22.740155 31084 solver.cpp:238]     Train net output #0: loss = 0.177615 (* 1 = 0.177615 loss)
I0428 20:07:22.740161 31084 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:22.824601 31084 solver.cpp:219] Iteration 700 (1184.34 iter/s, 0.0844352s/100 iters), loss = 0.142804
I0428 20:07:22.824626 31084 solver.cpp:238]     Train net output #0: loss = 0.142804 (* 1 = 0.142804 loss)
I0428 20:07:22.824647 31084 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:22.901765 31084 solver.cpp:219] Iteration 800 (1296.52 iter/s, 0.0771297s/100 iters), loss = 0.160637
I0428 20:07:22.901788 31084 solver.cpp:238]     Train net output #0: loss = 0.160637 (* 1 = 0.160637 loss)
I0428 20:07:22.901810 31084 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:22.978756 31084 solver.cpp:219] Iteration 900 (1299.4 iter/s, 0.0769586s/100 iters), loss = 0.25234
I0428 20:07:22.978778 31084 solver.cpp:238]     Train net output #0: loss = 0.25234 (* 1 = 0.25234 loss)
I0428 20:07:22.978801 31084 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:23.004539 31090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:23.054955 31084 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:23.055650 31084 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:23.056154 31084 solver.cpp:311] Iteration 1000, loss = 0.153942
I0428 20:07:23.056170 31084 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:23.133074 31091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:23.133646 31084 solver.cpp:398]     Test net output #0: accuracy = 0.973
I0428 20:07:23.133667 31084 solver.cpp:398]     Test net output #1: loss = 0.0876818 (* 1 = 0.0876818 loss)
I0428 20:07:23.133672 31084 solver.cpp:316] Optimization Done.
I0428 20:07:23.133675 31084 caffe.cpp:259] Optimization Done.
