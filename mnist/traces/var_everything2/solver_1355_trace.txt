I0428 20:20:04.642107  1480 caffe.cpp:218] Using GPUs 0
I0428 20:20:04.673754  1480 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:05.125793  1480 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1355.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:05.125932  1480 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1355.prototxt
I0428 20:20:05.126302  1480 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:05.126346  1480 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:05.126441  1480 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:05.126502  1480 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:05.126605  1480 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:05.126623  1480 net.cpp:86] Creating Layer mnist
I0428 20:20:05.126631  1480 net.cpp:382] mnist -> data
I0428 20:20:05.126649  1480 net.cpp:382] mnist -> label
I0428 20:20:05.127706  1480 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:05.130007  1480 net.cpp:124] Setting up mnist
I0428 20:20:05.130038  1480 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:05.130043  1480 net.cpp:131] Top shape: 64 (64)
I0428 20:20:05.130048  1480 net.cpp:139] Memory required for data: 200960
I0428 20:20:05.130053  1480 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:05.130066  1480 net.cpp:86] Creating Layer conv0
I0428 20:20:05.130084  1480 net.cpp:408] conv0 <- data
I0428 20:20:05.130095  1480 net.cpp:382] conv0 -> conv0
I0428 20:20:05.361510  1480 net.cpp:124] Setting up conv0
I0428 20:20:05.361536  1480 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:05.361539  1480 net.cpp:139] Memory required for data: 7573760
I0428 20:20:05.361553  1480 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:05.361567  1480 net.cpp:86] Creating Layer pool0
I0428 20:20:05.361569  1480 net.cpp:408] pool0 <- conv0
I0428 20:20:05.361574  1480 net.cpp:382] pool0 -> pool0
I0428 20:20:05.361635  1480 net.cpp:124] Setting up pool0
I0428 20:20:05.361642  1480 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:05.361645  1480 net.cpp:139] Memory required for data: 9416960
I0428 20:20:05.361649  1480 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:05.361659  1480 net.cpp:86] Creating Layer conv1
I0428 20:20:05.361662  1480 net.cpp:408] conv1 <- pool0
I0428 20:20:05.361667  1480 net.cpp:382] conv1 -> conv1
I0428 20:20:05.363637  1480 net.cpp:124] Setting up conv1
I0428 20:20:05.363652  1480 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:05.363672  1480 net.cpp:139] Memory required for data: 9826560
I0428 20:20:05.363682  1480 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:05.363688  1480 net.cpp:86] Creating Layer pool1
I0428 20:20:05.363692  1480 net.cpp:408] pool1 <- conv1
I0428 20:20:05.363698  1480 net.cpp:382] pool1 -> pool1
I0428 20:20:05.363734  1480 net.cpp:124] Setting up pool1
I0428 20:20:05.363740  1480 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:05.363744  1480 net.cpp:139] Memory required for data: 9928960
I0428 20:20:05.363746  1480 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:05.363754  1480 net.cpp:86] Creating Layer ip1
I0428 20:20:05.363756  1480 net.cpp:408] ip1 <- pool1
I0428 20:20:05.363761  1480 net.cpp:382] ip1 -> ip1
I0428 20:20:05.364838  1480 net.cpp:124] Setting up ip1
I0428 20:20:05.364850  1480 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:05.364871  1480 net.cpp:139] Memory required for data: 9935360
I0428 20:20:05.364893  1480 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:05.364915  1480 net.cpp:86] Creating Layer relu1
I0428 20:20:05.364918  1480 net.cpp:408] relu1 <- ip1
I0428 20:20:05.364923  1480 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:05.365103  1480 net.cpp:124] Setting up relu1
I0428 20:20:05.365113  1480 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:05.365116  1480 net.cpp:139] Memory required for data: 9941760
I0428 20:20:05.365119  1480 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:05.365128  1480 net.cpp:86] Creating Layer ip2
I0428 20:20:05.365130  1480 net.cpp:408] ip2 <- ip1
I0428 20:20:05.365136  1480 net.cpp:382] ip2 -> ip2
I0428 20:20:05.365275  1480 net.cpp:124] Setting up ip2
I0428 20:20:05.365283  1480 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:05.365285  1480 net.cpp:139] Memory required for data: 9954560
I0428 20:20:05.365291  1480 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:05.365298  1480 net.cpp:86] Creating Layer relu2
I0428 20:20:05.365300  1480 net.cpp:408] relu2 <- ip2
I0428 20:20:05.365304  1480 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:05.366051  1480 net.cpp:124] Setting up relu2
I0428 20:20:05.366063  1480 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:05.366084  1480 net.cpp:139] Memory required for data: 9967360
I0428 20:20:05.366087  1480 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:05.366094  1480 net.cpp:86] Creating Layer ip3
I0428 20:20:05.366097  1480 net.cpp:408] ip3 <- ip2
I0428 20:20:05.366102  1480 net.cpp:382] ip3 -> ip3
I0428 20:20:05.366201  1480 net.cpp:124] Setting up ip3
I0428 20:20:05.366209  1480 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:05.366212  1480 net.cpp:139] Memory required for data: 9969920
I0428 20:20:05.366220  1480 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:05.366227  1480 net.cpp:86] Creating Layer relu3
I0428 20:20:05.366230  1480 net.cpp:408] relu3 <- ip3
I0428 20:20:05.366235  1480 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:05.366395  1480 net.cpp:124] Setting up relu3
I0428 20:20:05.366403  1480 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:05.366406  1480 net.cpp:139] Memory required for data: 9972480
I0428 20:20:05.366410  1480 layer_factory.hpp:77] Creating layer loss
I0428 20:20:05.366415  1480 net.cpp:86] Creating Layer loss
I0428 20:20:05.366418  1480 net.cpp:408] loss <- ip3
I0428 20:20:05.366422  1480 net.cpp:408] loss <- label
I0428 20:20:05.366427  1480 net.cpp:382] loss -> loss
I0428 20:20:05.366441  1480 layer_factory.hpp:77] Creating layer loss
I0428 20:20:05.366693  1480 net.cpp:124] Setting up loss
I0428 20:20:05.366703  1480 net.cpp:131] Top shape: (1)
I0428 20:20:05.366705  1480 net.cpp:134]     with loss weight 1
I0428 20:20:05.366719  1480 net.cpp:139] Memory required for data: 9972484
I0428 20:20:05.366722  1480 net.cpp:200] loss needs backward computation.
I0428 20:20:05.366726  1480 net.cpp:200] relu3 needs backward computation.
I0428 20:20:05.366729  1480 net.cpp:200] ip3 needs backward computation.
I0428 20:20:05.366732  1480 net.cpp:200] relu2 needs backward computation.
I0428 20:20:05.366735  1480 net.cpp:200] ip2 needs backward computation.
I0428 20:20:05.366739  1480 net.cpp:200] relu1 needs backward computation.
I0428 20:20:05.366741  1480 net.cpp:200] ip1 needs backward computation.
I0428 20:20:05.366744  1480 net.cpp:200] pool1 needs backward computation.
I0428 20:20:05.366747  1480 net.cpp:200] conv1 needs backward computation.
I0428 20:20:05.366750  1480 net.cpp:200] pool0 needs backward computation.
I0428 20:20:05.366753  1480 net.cpp:200] conv0 needs backward computation.
I0428 20:20:05.366756  1480 net.cpp:202] mnist does not need backward computation.
I0428 20:20:05.366760  1480 net.cpp:244] This network produces output loss
I0428 20:20:05.366768  1480 net.cpp:257] Network initialization done.
I0428 20:20:05.367127  1480 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1355.prototxt
I0428 20:20:05.367169  1480 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:05.367259  1480 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:05.367341  1480 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:05.367383  1480 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:05.367394  1480 net.cpp:86] Creating Layer mnist
I0428 20:20:05.367399  1480 net.cpp:382] mnist -> data
I0428 20:20:05.367406  1480 net.cpp:382] mnist -> label
I0428 20:20:05.367491  1480 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:05.369534  1480 net.cpp:124] Setting up mnist
I0428 20:20:05.369565  1480 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:05.369570  1480 net.cpp:131] Top shape: 100 (100)
I0428 20:20:05.369571  1480 net.cpp:139] Memory required for data: 314000
I0428 20:20:05.369575  1480 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:05.369580  1480 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:05.369585  1480 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:05.369590  1480 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:05.369596  1480 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:05.369918  1480 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:05.369926  1480 net.cpp:131] Top shape: 100 (100)
I0428 20:20:05.369930  1480 net.cpp:131] Top shape: 100 (100)
I0428 20:20:05.369933  1480 net.cpp:139] Memory required for data: 314800
I0428 20:20:05.369936  1480 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:05.369947  1480 net.cpp:86] Creating Layer conv0
I0428 20:20:05.369951  1480 net.cpp:408] conv0 <- data
I0428 20:20:05.369957  1480 net.cpp:382] conv0 -> conv0
I0428 20:20:05.371507  1480 net.cpp:124] Setting up conv0
I0428 20:20:05.371522  1480 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:05.371526  1480 net.cpp:139] Memory required for data: 11834800
I0428 20:20:05.371536  1480 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:05.371541  1480 net.cpp:86] Creating Layer pool0
I0428 20:20:05.371544  1480 net.cpp:408] pool0 <- conv0
I0428 20:20:05.371549  1480 net.cpp:382] pool0 -> pool0
I0428 20:20:05.371587  1480 net.cpp:124] Setting up pool0
I0428 20:20:05.371594  1480 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:05.371598  1480 net.cpp:139] Memory required for data: 14714800
I0428 20:20:05.371599  1480 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:05.371608  1480 net.cpp:86] Creating Layer conv1
I0428 20:20:05.371611  1480 net.cpp:408] conv1 <- pool0
I0428 20:20:05.371615  1480 net.cpp:382] conv1 -> conv1
I0428 20:20:05.373616  1480 net.cpp:124] Setting up conv1
I0428 20:20:05.373631  1480 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:05.373633  1480 net.cpp:139] Memory required for data: 15354800
I0428 20:20:05.373657  1480 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:05.373664  1480 net.cpp:86] Creating Layer pool1
I0428 20:20:05.373667  1480 net.cpp:408] pool1 <- conv1
I0428 20:20:05.373672  1480 net.cpp:382] pool1 -> pool1
I0428 20:20:05.373708  1480 net.cpp:124] Setting up pool1
I0428 20:20:05.373714  1480 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:05.373718  1480 net.cpp:139] Memory required for data: 15514800
I0428 20:20:05.373720  1480 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:05.373729  1480 net.cpp:86] Creating Layer ip1
I0428 20:20:05.373733  1480 net.cpp:408] ip1 <- pool1
I0428 20:20:05.373738  1480 net.cpp:382] ip1 -> ip1
I0428 20:20:05.373883  1480 net.cpp:124] Setting up ip1
I0428 20:20:05.373890  1480 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:05.373903  1480 net.cpp:139] Memory required for data: 15524800
I0428 20:20:05.373920  1480 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:05.373927  1480 net.cpp:86] Creating Layer relu1
I0428 20:20:05.373931  1480 net.cpp:408] relu1 <- ip1
I0428 20:20:05.373935  1480 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:05.374173  1480 net.cpp:124] Setting up relu1
I0428 20:20:05.374182  1480 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:05.374186  1480 net.cpp:139] Memory required for data: 15534800
I0428 20:20:05.374189  1480 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:05.374197  1480 net.cpp:86] Creating Layer ip2
I0428 20:20:05.374200  1480 net.cpp:408] ip2 <- ip1
I0428 20:20:05.374207  1480 net.cpp:382] ip2 -> ip2
I0428 20:20:05.374328  1480 net.cpp:124] Setting up ip2
I0428 20:20:05.374336  1480 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:05.374339  1480 net.cpp:139] Memory required for data: 15554800
I0428 20:20:05.374344  1480 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:05.374348  1480 net.cpp:86] Creating Layer relu2
I0428 20:20:05.374351  1480 net.cpp:408] relu2 <- ip2
I0428 20:20:05.374356  1480 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:05.374523  1480 net.cpp:124] Setting up relu2
I0428 20:20:05.374531  1480 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:05.374536  1480 net.cpp:139] Memory required for data: 15574800
I0428 20:20:05.374538  1480 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:05.374543  1480 net.cpp:86] Creating Layer ip3
I0428 20:20:05.374547  1480 net.cpp:408] ip3 <- ip2
I0428 20:20:05.374552  1480 net.cpp:382] ip3 -> ip3
I0428 20:20:05.374668  1480 net.cpp:124] Setting up ip3
I0428 20:20:05.374675  1480 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:05.374678  1480 net.cpp:139] Memory required for data: 15578800
I0428 20:20:05.374686  1480 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:05.374701  1480 net.cpp:86] Creating Layer relu3
I0428 20:20:05.374703  1480 net.cpp:408] relu3 <- ip3
I0428 20:20:05.374711  1480 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:05.375478  1480 net.cpp:124] Setting up relu3
I0428 20:20:05.375491  1480 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:05.375494  1480 net.cpp:139] Memory required for data: 15582800
I0428 20:20:05.375499  1480 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:05.375504  1480 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:05.375506  1480 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:05.375512  1480 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:05.375519  1480 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:05.375571  1480 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:05.375576  1480 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:05.375581  1480 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:05.375583  1480 net.cpp:139] Memory required for data: 15590800
I0428 20:20:05.375586  1480 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:05.375591  1480 net.cpp:86] Creating Layer accuracy
I0428 20:20:05.375594  1480 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:05.375598  1480 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:05.375603  1480 net.cpp:382] accuracy -> accuracy
I0428 20:20:05.375610  1480 net.cpp:124] Setting up accuracy
I0428 20:20:05.375614  1480 net.cpp:131] Top shape: (1)
I0428 20:20:05.375617  1480 net.cpp:139] Memory required for data: 15590804
I0428 20:20:05.375620  1480 layer_factory.hpp:77] Creating layer loss
I0428 20:20:05.375624  1480 net.cpp:86] Creating Layer loss
I0428 20:20:05.375627  1480 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:05.375630  1480 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:05.375634  1480 net.cpp:382] loss -> loss
I0428 20:20:05.375639  1480 layer_factory.hpp:77] Creating layer loss
I0428 20:20:05.375864  1480 net.cpp:124] Setting up loss
I0428 20:20:05.375874  1480 net.cpp:131] Top shape: (1)
I0428 20:20:05.375879  1480 net.cpp:134]     with loss weight 1
I0428 20:20:05.375895  1480 net.cpp:139] Memory required for data: 15590808
I0428 20:20:05.375898  1480 net.cpp:200] loss needs backward computation.
I0428 20:20:05.375901  1480 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:05.375905  1480 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:05.375908  1480 net.cpp:200] relu3 needs backward computation.
I0428 20:20:05.375910  1480 net.cpp:200] ip3 needs backward computation.
I0428 20:20:05.375913  1480 net.cpp:200] relu2 needs backward computation.
I0428 20:20:05.375916  1480 net.cpp:200] ip2 needs backward computation.
I0428 20:20:05.375918  1480 net.cpp:200] relu1 needs backward computation.
I0428 20:20:05.375921  1480 net.cpp:200] ip1 needs backward computation.
I0428 20:20:05.375923  1480 net.cpp:200] pool1 needs backward computation.
I0428 20:20:05.375926  1480 net.cpp:200] conv1 needs backward computation.
I0428 20:20:05.375929  1480 net.cpp:200] pool0 needs backward computation.
I0428 20:20:05.375931  1480 net.cpp:200] conv0 needs backward computation.
I0428 20:20:05.375936  1480 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:05.375938  1480 net.cpp:202] mnist does not need backward computation.
I0428 20:20:05.375957  1480 net.cpp:244] This network produces output accuracy
I0428 20:20:05.375960  1480 net.cpp:244] This network produces output loss
I0428 20:20:05.375972  1480 net.cpp:257] Network initialization done.
I0428 20:20:05.376013  1480 solver.cpp:56] Solver scaffolding done.
I0428 20:20:05.376370  1480 caffe.cpp:248] Starting Optimization
I0428 20:20:05.376376  1480 solver.cpp:273] Solving LeNet
I0428 20:20:05.376379  1480 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:05.377126  1480 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:05.446190  1488 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:05.448531  1480 solver.cpp:398]     Test net output #0: accuracy = 0.1274
I0428 20:20:05.448549  1480 solver.cpp:398]     Test net output #1: loss = 2.29915 (* 1 = 2.29915 loss)
I0428 20:20:05.452728  1480 solver.cpp:219] Iteration 0 (0 iter/s, 0.0763239s/100 iters), loss = 2.29486
I0428 20:20:05.452751  1480 solver.cpp:238]     Train net output #0: loss = 2.29486 (* 1 = 2.29486 loss)
I0428 20:20:05.452776  1480 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:05.598975  1480 solver.cpp:219] Iteration 100 (683.992 iter/s, 0.146201s/100 iters), loss = 0.656049
I0428 20:20:05.599035  1480 solver.cpp:238]     Train net output #0: loss = 0.656049 (* 1 = 0.656049 loss)
I0428 20:20:05.599051  1480 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:05.752192  1480 solver.cpp:219] Iteration 200 (652.948 iter/s, 0.153152s/100 iters), loss = 0.951886
I0428 20:20:05.752233  1480 solver.cpp:238]     Train net output #0: loss = 0.951886 (* 1 = 0.951886 loss)
I0428 20:20:05.752254  1480 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:05.897299  1480 solver.cpp:219] Iteration 300 (689.405 iter/s, 0.145053s/100 iters), loss = 0.844477
I0428 20:20:05.897330  1480 solver.cpp:238]     Train net output #0: loss = 0.844477 (* 1 = 0.844477 loss)
I0428 20:20:05.897337  1480 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:06.042029  1480 solver.cpp:219] Iteration 400 (691.147 iter/s, 0.144687s/100 iters), loss = 0.86721
I0428 20:20:06.042059  1480 solver.cpp:238]     Train net output #0: loss = 0.86721 (* 1 = 0.86721 loss)
I0428 20:20:06.042084  1480 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:06.174878  1480 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:06.178864  1480 blocking_queue.cpp:49] Waiting for data
I0428 20:20:06.252717  1488 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:06.253636  1480 solver.cpp:398]     Test net output #0: accuracy = 0.7473
I0428 20:20:06.253660  1480 solver.cpp:398]     Test net output #1: loss = 0.793555 (* 1 = 0.793555 loss)
I0428 20:20:06.255060  1480 solver.cpp:219] Iteration 500 (469.513 iter/s, 0.212987s/100 iters), loss = 0.765535
I0428 20:20:06.255117  1480 solver.cpp:238]     Train net output #0: loss = 0.765535 (* 1 = 0.765535 loss)
I0428 20:20:06.255157  1480 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:06.393545  1480 solver.cpp:219] Iteration 600 (722.443 iter/s, 0.138419s/100 iters), loss = 0.870932
I0428 20:20:06.393575  1480 solver.cpp:238]     Train net output #0: loss = 0.870932 (* 1 = 0.870932 loss)
I0428 20:20:06.393600  1480 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:06.529151  1480 solver.cpp:219] Iteration 700 (737.657 iter/s, 0.135564s/100 iters), loss = 0.696461
I0428 20:20:06.529188  1480 solver.cpp:238]     Train net output #0: loss = 0.696461 (* 1 = 0.696461 loss)
I0428 20:20:06.529212  1480 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:06.670578  1480 solver.cpp:219] Iteration 800 (707.311 iter/s, 0.141381s/100 iters), loss = 1.00494
I0428 20:20:06.670605  1480 solver.cpp:238]     Train net output #0: loss = 1.00494 (* 1 = 1.00494 loss)
I0428 20:20:06.670615  1480 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:06.809907  1480 solver.cpp:219] Iteration 900 (717.945 iter/s, 0.139287s/100 iters), loss = 1.07175
I0428 20:20:06.809960  1480 solver.cpp:238]     Train net output #0: loss = 1.07175 (* 1 = 1.07175 loss)
I0428 20:20:06.809979  1480 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:06.861589  1487 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:06.961089  1480 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:06.963032  1480 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:06.964272  1480 solver.cpp:311] Iteration 1000, loss = 0.795377
I0428 20:20:06.964298  1480 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:07.047179  1488 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:07.048441  1480 solver.cpp:398]     Test net output #0: accuracy = 0.7745
I0428 20:20:07.048470  1480 solver.cpp:398]     Test net output #1: loss = 0.767982 (* 1 = 0.767982 loss)
I0428 20:20:07.048478  1480 solver.cpp:316] Optimization Done.
I0428 20:20:07.048486  1480 caffe.cpp:259] Optimization Done.
