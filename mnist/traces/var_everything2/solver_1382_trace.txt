I0428 20:21:20.588560  1741 caffe.cpp:218] Using GPUs 0
I0428 20:21:20.616649  1741 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:21.068497  1741 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1382.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:21.068653  1741 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1382.prototxt
I0428 20:21:21.069020  1741 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:21.069049  1741 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:21.069131  1741 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:21.069196  1741 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:21.069296  1741 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:21.069317  1741 net.cpp:86] Creating Layer mnist
I0428 20:21:21.069324  1741 net.cpp:382] mnist -> data
I0428 20:21:21.069342  1741 net.cpp:382] mnist -> label
I0428 20:21:21.070276  1741 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:21.072558  1741 net.cpp:124] Setting up mnist
I0428 20:21:21.072588  1741 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:21.072607  1741 net.cpp:131] Top shape: 64 (64)
I0428 20:21:21.072610  1741 net.cpp:139] Memory required for data: 200960
I0428 20:21:21.072616  1741 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:21.072629  1741 net.cpp:86] Creating Layer conv0
I0428 20:21:21.072648  1741 net.cpp:408] conv0 <- data
I0428 20:21:21.072659  1741 net.cpp:382] conv0 -> conv0
I0428 20:21:21.300240  1741 net.cpp:124] Setting up conv0
I0428 20:21:21.300264  1741 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:21.300267  1741 net.cpp:139] Memory required for data: 7573760
I0428 20:21:21.300282  1741 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:21.300293  1741 net.cpp:86] Creating Layer pool0
I0428 20:21:21.300297  1741 net.cpp:408] pool0 <- conv0
I0428 20:21:21.300302  1741 net.cpp:382] pool0 -> pool0
I0428 20:21:21.300362  1741 net.cpp:124] Setting up pool0
I0428 20:21:21.300369  1741 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:21.300371  1741 net.cpp:139] Memory required for data: 9416960
I0428 20:21:21.300374  1741 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:21.300384  1741 net.cpp:86] Creating Layer conv1
I0428 20:21:21.300389  1741 net.cpp:408] conv1 <- pool0
I0428 20:21:21.300393  1741 net.cpp:382] conv1 -> conv1
I0428 20:21:21.302767  1741 net.cpp:124] Setting up conv1
I0428 20:21:21.302780  1741 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:21.302784  1741 net.cpp:139] Memory required for data: 10236160
I0428 20:21:21.302791  1741 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:21.302814  1741 net.cpp:86] Creating Layer pool1
I0428 20:21:21.302832  1741 net.cpp:408] pool1 <- conv1
I0428 20:21:21.302837  1741 net.cpp:382] pool1 -> pool1
I0428 20:21:21.302871  1741 net.cpp:124] Setting up pool1
I0428 20:21:21.302878  1741 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:21.302881  1741 net.cpp:139] Memory required for data: 10440960
I0428 20:21:21.302884  1741 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:21.302891  1741 net.cpp:86] Creating Layer ip1
I0428 20:21:21.302894  1741 net.cpp:408] ip1 <- pool1
I0428 20:21:21.302898  1741 net.cpp:382] ip1 -> ip1
I0428 20:21:21.303901  1741 net.cpp:124] Setting up ip1
I0428 20:21:21.303915  1741 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:21.303917  1741 net.cpp:139] Memory required for data: 10443520
I0428 20:21:21.303925  1741 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:21.303931  1741 net.cpp:86] Creating Layer relu1
I0428 20:21:21.303936  1741 net.cpp:408] relu1 <- ip1
I0428 20:21:21.303941  1741 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:21.304119  1741 net.cpp:124] Setting up relu1
I0428 20:21:21.304128  1741 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:21.304131  1741 net.cpp:139] Memory required for data: 10446080
I0428 20:21:21.304134  1741 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:21.304141  1741 net.cpp:86] Creating Layer ip2
I0428 20:21:21.304144  1741 net.cpp:408] ip2 <- ip1
I0428 20:21:21.304149  1741 net.cpp:382] ip2 -> ip2
I0428 20:21:21.304239  1741 net.cpp:124] Setting up ip2
I0428 20:21:21.304260  1741 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:21.304263  1741 net.cpp:139] Memory required for data: 10452480
I0428 20:21:21.304268  1741 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:21.304275  1741 net.cpp:86] Creating Layer relu2
I0428 20:21:21.304278  1741 net.cpp:408] relu2 <- ip2
I0428 20:21:21.304282  1741 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:21.305083  1741 net.cpp:124] Setting up relu2
I0428 20:21:21.305095  1741 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:21.305099  1741 net.cpp:139] Memory required for data: 10458880
I0428 20:21:21.305102  1741 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:21.305109  1741 net.cpp:86] Creating Layer ip3
I0428 20:21:21.305112  1741 net.cpp:408] ip3 <- ip2
I0428 20:21:21.305117  1741 net.cpp:382] ip3 -> ip3
I0428 20:21:21.305207  1741 net.cpp:124] Setting up ip3
I0428 20:21:21.305215  1741 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:21.305218  1741 net.cpp:139] Memory required for data: 10461440
I0428 20:21:21.305225  1741 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:21.305232  1741 net.cpp:86] Creating Layer relu3
I0428 20:21:21.305234  1741 net.cpp:408] relu3 <- ip3
I0428 20:21:21.305238  1741 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:21.305424  1741 net.cpp:124] Setting up relu3
I0428 20:21:21.305433  1741 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:21.305435  1741 net.cpp:139] Memory required for data: 10464000
I0428 20:21:21.305438  1741 layer_factory.hpp:77] Creating layer loss
I0428 20:21:21.305444  1741 net.cpp:86] Creating Layer loss
I0428 20:21:21.305447  1741 net.cpp:408] loss <- ip3
I0428 20:21:21.305450  1741 net.cpp:408] loss <- label
I0428 20:21:21.305456  1741 net.cpp:382] loss -> loss
I0428 20:21:21.305474  1741 layer_factory.hpp:77] Creating layer loss
I0428 20:21:21.305716  1741 net.cpp:124] Setting up loss
I0428 20:21:21.305724  1741 net.cpp:131] Top shape: (1)
I0428 20:21:21.305727  1741 net.cpp:134]     with loss weight 1
I0428 20:21:21.305742  1741 net.cpp:139] Memory required for data: 10464004
I0428 20:21:21.305745  1741 net.cpp:200] loss needs backward computation.
I0428 20:21:21.305749  1741 net.cpp:200] relu3 needs backward computation.
I0428 20:21:21.305752  1741 net.cpp:200] ip3 needs backward computation.
I0428 20:21:21.305755  1741 net.cpp:200] relu2 needs backward computation.
I0428 20:21:21.305758  1741 net.cpp:200] ip2 needs backward computation.
I0428 20:21:21.305761  1741 net.cpp:200] relu1 needs backward computation.
I0428 20:21:21.305763  1741 net.cpp:200] ip1 needs backward computation.
I0428 20:21:21.305766  1741 net.cpp:200] pool1 needs backward computation.
I0428 20:21:21.305769  1741 net.cpp:200] conv1 needs backward computation.
I0428 20:21:21.305773  1741 net.cpp:200] pool0 needs backward computation.
I0428 20:21:21.305775  1741 net.cpp:200] conv0 needs backward computation.
I0428 20:21:21.305779  1741 net.cpp:202] mnist does not need backward computation.
I0428 20:21:21.305781  1741 net.cpp:244] This network produces output loss
I0428 20:21:21.305790  1741 net.cpp:257] Network initialization done.
I0428 20:21:21.306118  1741 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1382.prototxt
I0428 20:21:21.306143  1741 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:21.306234  1741 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:21.306326  1741 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:21.306370  1741 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:21.306401  1741 net.cpp:86] Creating Layer mnist
I0428 20:21:21.306406  1741 net.cpp:382] mnist -> data
I0428 20:21:21.306413  1741 net.cpp:382] mnist -> label
I0428 20:21:21.306514  1741 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:21.308555  1741 net.cpp:124] Setting up mnist
I0428 20:21:21.308568  1741 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:21.308588  1741 net.cpp:131] Top shape: 100 (100)
I0428 20:21:21.308591  1741 net.cpp:139] Memory required for data: 314000
I0428 20:21:21.308594  1741 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:21.308604  1741 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:21.308609  1741 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:21.308612  1741 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:21.308619  1741 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:21.308739  1741 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:21.308748  1741 net.cpp:131] Top shape: 100 (100)
I0428 20:21:21.308751  1741 net.cpp:131] Top shape: 100 (100)
I0428 20:21:21.308754  1741 net.cpp:139] Memory required for data: 314800
I0428 20:21:21.308758  1741 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:21.308766  1741 net.cpp:86] Creating Layer conv0
I0428 20:21:21.308773  1741 net.cpp:408] conv0 <- data
I0428 20:21:21.308778  1741 net.cpp:382] conv0 -> conv0
I0428 20:21:21.310293  1741 net.cpp:124] Setting up conv0
I0428 20:21:21.310322  1741 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:21.310325  1741 net.cpp:139] Memory required for data: 11834800
I0428 20:21:21.310333  1741 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:21.310339  1741 net.cpp:86] Creating Layer pool0
I0428 20:21:21.310343  1741 net.cpp:408] pool0 <- conv0
I0428 20:21:21.310348  1741 net.cpp:382] pool0 -> pool0
I0428 20:21:21.310380  1741 net.cpp:124] Setting up pool0
I0428 20:21:21.310405  1741 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:21.310408  1741 net.cpp:139] Memory required for data: 14714800
I0428 20:21:21.310411  1741 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:21.310420  1741 net.cpp:86] Creating Layer conv1
I0428 20:21:21.310426  1741 net.cpp:408] conv1 <- pool0
I0428 20:21:21.310446  1741 net.cpp:382] conv1 -> conv1
I0428 20:21:21.312379  1741 net.cpp:124] Setting up conv1
I0428 20:21:21.312392  1741 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:21.312397  1741 net.cpp:139] Memory required for data: 15994800
I0428 20:21:21.312407  1741 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:21.312413  1741 net.cpp:86] Creating Layer pool1
I0428 20:21:21.312422  1741 net.cpp:408] pool1 <- conv1
I0428 20:21:21.312444  1741 net.cpp:382] pool1 -> pool1
I0428 20:21:21.312499  1741 net.cpp:124] Setting up pool1
I0428 20:21:21.312506  1741 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:21.312510  1741 net.cpp:139] Memory required for data: 16314800
I0428 20:21:21.312513  1741 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:21.312521  1741 net.cpp:86] Creating Layer ip1
I0428 20:21:21.312525  1741 net.cpp:408] ip1 <- pool1
I0428 20:21:21.312530  1741 net.cpp:382] ip1 -> ip1
I0428 20:21:21.312681  1741 net.cpp:124] Setting up ip1
I0428 20:21:21.312690  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.312703  1741 net.cpp:139] Memory required for data: 16318800
I0428 20:21:21.312726  1741 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:21.312734  1741 net.cpp:86] Creating Layer relu1
I0428 20:21:21.312753  1741 net.cpp:408] relu1 <- ip1
I0428 20:21:21.312760  1741 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:21.312973  1741 net.cpp:124] Setting up relu1
I0428 20:21:21.312983  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.312986  1741 net.cpp:139] Memory required for data: 16322800
I0428 20:21:21.312989  1741 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:21.313014  1741 net.cpp:86] Creating Layer ip2
I0428 20:21:21.313036  1741 net.cpp:408] ip2 <- ip1
I0428 20:21:21.313060  1741 net.cpp:382] ip2 -> ip2
I0428 20:21:21.313169  1741 net.cpp:124] Setting up ip2
I0428 20:21:21.313176  1741 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:21.313180  1741 net.cpp:139] Memory required for data: 16332800
I0428 20:21:21.313185  1741 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:21.313191  1741 net.cpp:86] Creating Layer relu2
I0428 20:21:21.313194  1741 net.cpp:408] relu2 <- ip2
I0428 20:21:21.313199  1741 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:21.313398  1741 net.cpp:124] Setting up relu2
I0428 20:21:21.313407  1741 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:21.313410  1741 net.cpp:139] Memory required for data: 16342800
I0428 20:21:21.313428  1741 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:21.313436  1741 net.cpp:86] Creating Layer ip3
I0428 20:21:21.313438  1741 net.cpp:408] ip3 <- ip2
I0428 20:21:21.313442  1741 net.cpp:382] ip3 -> ip3
I0428 20:21:21.313542  1741 net.cpp:124] Setting up ip3
I0428 20:21:21.313549  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.313552  1741 net.cpp:139] Memory required for data: 16346800
I0428 20:21:21.313560  1741 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:21.313565  1741 net.cpp:86] Creating Layer relu3
I0428 20:21:21.313571  1741 net.cpp:408] relu3 <- ip3
I0428 20:21:21.313575  1741 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:21.314393  1741 net.cpp:124] Setting up relu3
I0428 20:21:21.314420  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.314440  1741 net.cpp:139] Memory required for data: 16350800
I0428 20:21:21.314443  1741 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:21.314448  1741 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:21.314451  1741 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:21.314457  1741 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:21.314463  1741 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:21.314502  1741 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:21.314508  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.314512  1741 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:21.314532  1741 net.cpp:139] Memory required for data: 16358800
I0428 20:21:21.314534  1741 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:21.314539  1741 net.cpp:86] Creating Layer accuracy
I0428 20:21:21.314543  1741 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:21.314546  1741 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:21.314551  1741 net.cpp:382] accuracy -> accuracy
I0428 20:21:21.314559  1741 net.cpp:124] Setting up accuracy
I0428 20:21:21.314563  1741 net.cpp:131] Top shape: (1)
I0428 20:21:21.314565  1741 net.cpp:139] Memory required for data: 16358804
I0428 20:21:21.314568  1741 layer_factory.hpp:77] Creating layer loss
I0428 20:21:21.314575  1741 net.cpp:86] Creating Layer loss
I0428 20:21:21.314579  1741 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:21.314582  1741 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:21.314586  1741 net.cpp:382] loss -> loss
I0428 20:21:21.314592  1741 layer_factory.hpp:77] Creating layer loss
I0428 20:21:21.314869  1741 net.cpp:124] Setting up loss
I0428 20:21:21.314878  1741 net.cpp:131] Top shape: (1)
I0428 20:21:21.314882  1741 net.cpp:134]     with loss weight 1
I0428 20:21:21.314898  1741 net.cpp:139] Memory required for data: 16358808
I0428 20:21:21.314901  1741 net.cpp:200] loss needs backward computation.
I0428 20:21:21.314905  1741 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:21.314908  1741 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:21.314913  1741 net.cpp:200] relu3 needs backward computation.
I0428 20:21:21.314915  1741 net.cpp:200] ip3 needs backward computation.
I0428 20:21:21.314918  1741 net.cpp:200] relu2 needs backward computation.
I0428 20:21:21.314921  1741 net.cpp:200] ip2 needs backward computation.
I0428 20:21:21.314924  1741 net.cpp:200] relu1 needs backward computation.
I0428 20:21:21.314927  1741 net.cpp:200] ip1 needs backward computation.
I0428 20:21:21.314930  1741 net.cpp:200] pool1 needs backward computation.
I0428 20:21:21.314934  1741 net.cpp:200] conv1 needs backward computation.
I0428 20:21:21.314936  1741 net.cpp:200] pool0 needs backward computation.
I0428 20:21:21.314939  1741 net.cpp:200] conv0 needs backward computation.
I0428 20:21:21.314944  1741 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:21.314947  1741 net.cpp:202] mnist does not need backward computation.
I0428 20:21:21.314950  1741 net.cpp:244] This network produces output accuracy
I0428 20:21:21.314954  1741 net.cpp:244] This network produces output loss
I0428 20:21:21.314980  1741 net.cpp:257] Network initialization done.
I0428 20:21:21.315039  1741 solver.cpp:56] Solver scaffolding done.
I0428 20:21:21.315434  1741 caffe.cpp:248] Starting Optimization
I0428 20:21:21.315440  1741 solver.cpp:273] Solving LeNet
I0428 20:21:21.315443  1741 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:21.315640  1741 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:21.389940  1748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:21.392592  1741 solver.cpp:398]     Test net output #0: accuracy = 0.0906
I0428 20:21:21.392611  1741 solver.cpp:398]     Test net output #1: loss = 2.29932 (* 1 = 2.29932 loss)
I0428 20:21:21.396625  1741 solver.cpp:219] Iteration 0 (0 iter/s, 0.0811398s/100 iters), loss = 2.29657
I0428 20:21:21.396646  1741 solver.cpp:238]     Train net output #0: loss = 2.29657 (* 1 = 2.29657 loss)
I0428 20:21:21.396657  1741 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:21.558941  1741 solver.cpp:219] Iteration 100 (616.229 iter/s, 0.162277s/100 iters), loss = 1.188
I0428 20:21:21.558969  1741 solver.cpp:238]     Train net output #0: loss = 1.188 (* 1 = 1.188 loss)
I0428 20:21:21.558975  1741 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:21.713702  1741 solver.cpp:219] Iteration 200 (646.332 iter/s, 0.154719s/100 iters), loss = 0.635602
I0428 20:21:21.713743  1741 solver.cpp:238]     Train net output #0: loss = 0.635602 (* 1 = 0.635602 loss)
I0428 20:21:21.713749  1741 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:21.867915  1741 solver.cpp:219] Iteration 300 (648.607 iter/s, 0.154177s/100 iters), loss = 0.564497
I0428 20:21:21.867955  1741 solver.cpp:238]     Train net output #0: loss = 0.564497 (* 1 = 0.564497 loss)
I0428 20:21:21.867961  1741 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:22.029675  1741 solver.cpp:219] Iteration 400 (618.344 iter/s, 0.161722s/100 iters), loss = 0.423235
I0428 20:21:22.029716  1741 solver.cpp:238]     Train net output #0: loss = 0.423235 (* 1 = 0.423235 loss)
I0428 20:21:22.029721  1741 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:22.189617  1741 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:22.262997  1748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:22.265616  1741 solver.cpp:398]     Test net output #0: accuracy = 0.8225
I0428 20:21:22.265653  1741 solver.cpp:398]     Test net output #1: loss = 0.570425 (* 1 = 0.570425 loss)
I0428 20:21:22.267139  1741 solver.cpp:219] Iteration 500 (421.19 iter/s, 0.237423s/100 iters), loss = 0.482082
I0428 20:21:22.267177  1741 solver.cpp:238]     Train net output #0: loss = 0.482082 (* 1 = 0.482082 loss)
I0428 20:21:22.267199  1741 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:22.423336  1741 solver.cpp:219] Iteration 600 (640.369 iter/s, 0.15616s/100 iters), loss = 0.478309
I0428 20:21:22.423373  1741 solver.cpp:238]     Train net output #0: loss = 0.478309 (* 1 = 0.478309 loss)
I0428 20:21:22.423380  1741 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:22.579751  1741 solver.cpp:219] Iteration 700 (639.492 iter/s, 0.156374s/100 iters), loss = 0.368438
I0428 20:21:22.579793  1741 solver.cpp:238]     Train net output #0: loss = 0.368438 (* 1 = 0.368438 loss)
I0428 20:21:22.579799  1741 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:22.736021  1741 solver.cpp:219] Iteration 800 (640.125 iter/s, 0.156219s/100 iters), loss = 0.41823
I0428 20:21:22.736059  1741 solver.cpp:238]     Train net output #0: loss = 0.41823 (* 1 = 0.41823 loss)
I0428 20:21:22.736065  1741 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:22.892212  1741 solver.cpp:219] Iteration 900 (640.386 iter/s, 0.156156s/100 iters), loss = 0.223184
I0428 20:21:22.892252  1741 solver.cpp:238]     Train net output #0: loss = 0.223184 (* 1 = 0.223184 loss)
I0428 20:21:22.892258  1741 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:22.944675  1747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:23.047430  1741 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:23.049587  1741 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:23.050933  1741 solver.cpp:311] Iteration 1000, loss = 0.298475
I0428 20:21:23.050950  1741 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:23.123316  1748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:23.125942  1741 solver.cpp:398]     Test net output #0: accuracy = 0.8836
I0428 20:21:23.125977  1741 solver.cpp:398]     Test net output #1: loss = 0.299874 (* 1 = 0.299874 loss)
I0428 20:21:23.125982  1741 solver.cpp:316] Optimization Done.
I0428 20:21:23.125985  1741 caffe.cpp:259] Optimization Done.
