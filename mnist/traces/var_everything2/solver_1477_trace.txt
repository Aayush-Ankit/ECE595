I0428 20:26:47.410279  2878 caffe.cpp:218] Using GPUs 0
I0428 20:26:47.439862  2878 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:47.941164  2878 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1477.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:47.941339  2878 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1477.prototxt
I0428 20:26:47.941769  2878 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:47.941795  2878 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:47.941912  2878 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:47.942028  2878 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:47.942163  2878 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:47.942196  2878 net.cpp:86] Creating Layer mnist
I0428 20:26:47.942209  2878 net.cpp:382] mnist -> data
I0428 20:26:47.942239  2878 net.cpp:382] mnist -> label
I0428 20:26:47.943519  2878 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:47.946002  2878 net.cpp:124] Setting up mnist
I0428 20:26:47.946023  2878 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:47.946033  2878 net.cpp:131] Top shape: 64 (64)
I0428 20:26:47.946039  2878 net.cpp:139] Memory required for data: 200960
I0428 20:26:47.946049  2878 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:47.946074  2878 net.cpp:86] Creating Layer conv0
I0428 20:26:47.946100  2878 net.cpp:408] conv0 <- data
I0428 20:26:47.946122  2878 net.cpp:382] conv0 -> conv0
I0428 20:26:48.240504  2878 net.cpp:124] Setting up conv0
I0428 20:26:48.240538  2878 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:48.240545  2878 net.cpp:139] Memory required for data: 14946560
I0428 20:26:48.240571  2878 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:48.240592  2878 net.cpp:86] Creating Layer pool0
I0428 20:26:48.240609  2878 net.cpp:408] pool0 <- conv0
I0428 20:26:48.240620  2878 net.cpp:382] pool0 -> pool0
I0428 20:26:48.240685  2878 net.cpp:124] Setting up pool0
I0428 20:26:48.240696  2878 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:48.240702  2878 net.cpp:139] Memory required for data: 18632960
I0428 20:26:48.240710  2878 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:48.240728  2878 net.cpp:86] Creating Layer conv1
I0428 20:26:48.240736  2878 net.cpp:408] conv1 <- pool0
I0428 20:26:48.240747  2878 net.cpp:382] conv1 -> conv1
I0428 20:26:48.243922  2878 net.cpp:124] Setting up conv1
I0428 20:26:48.243942  2878 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:48.243950  2878 net.cpp:139] Memory required for data: 18665728
I0428 20:26:48.243966  2878 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:48.243981  2878 net.cpp:86] Creating Layer pool1
I0428 20:26:48.243988  2878 net.cpp:408] pool1 <- conv1
I0428 20:26:48.243999  2878 net.cpp:382] pool1 -> pool1
I0428 20:26:48.244052  2878 net.cpp:124] Setting up pool1
I0428 20:26:48.244063  2878 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:48.244069  2878 net.cpp:139] Memory required for data: 18673920
I0428 20:26:48.244076  2878 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:48.244089  2878 net.cpp:86] Creating Layer ip1
I0428 20:26:48.244102  2878 net.cpp:408] ip1 <- pool1
I0428 20:26:48.244112  2878 net.cpp:382] ip1 -> ip1
I0428 20:26:48.244253  2878 net.cpp:124] Setting up ip1
I0428 20:26:48.244264  2878 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:48.244271  2878 net.cpp:139] Memory required for data: 18686720
I0428 20:26:48.244285  2878 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:48.244307  2878 net.cpp:86] Creating Layer relu1
I0428 20:26:48.244318  2878 net.cpp:408] relu1 <- ip1
I0428 20:26:48.244326  2878 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:48.244534  2878 net.cpp:124] Setting up relu1
I0428 20:26:48.244546  2878 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:48.244552  2878 net.cpp:139] Memory required for data: 18699520
I0428 20:26:48.244559  2878 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:48.244570  2878 net.cpp:86] Creating Layer ip2
I0428 20:26:48.244577  2878 net.cpp:408] ip2 <- ip1
I0428 20:26:48.244588  2878 net.cpp:382] ip2 -> ip2
I0428 20:26:48.244720  2878 net.cpp:124] Setting up ip2
I0428 20:26:48.244730  2878 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:48.244737  2878 net.cpp:139] Memory required for data: 18705920
I0428 20:26:48.244748  2878 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:48.244760  2878 net.cpp:86] Creating Layer relu2
I0428 20:26:48.244767  2878 net.cpp:408] relu2 <- ip2
I0428 20:26:48.244776  2878 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:48.245640  2878 net.cpp:124] Setting up relu2
I0428 20:26:48.245657  2878 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:48.245663  2878 net.cpp:139] Memory required for data: 18712320
I0428 20:26:48.245671  2878 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:48.245683  2878 net.cpp:86] Creating Layer ip3
I0428 20:26:48.245690  2878 net.cpp:408] ip3 <- ip2
I0428 20:26:48.245702  2878 net.cpp:382] ip3 -> ip3
I0428 20:26:48.245827  2878 net.cpp:124] Setting up ip3
I0428 20:26:48.245839  2878 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:48.245846  2878 net.cpp:139] Memory required for data: 18714880
I0428 20:26:48.245862  2878 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:48.245872  2878 net.cpp:86] Creating Layer relu3
I0428 20:26:48.245882  2878 net.cpp:408] relu3 <- ip3
I0428 20:26:48.245890  2878 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:48.246096  2878 net.cpp:124] Setting up relu3
I0428 20:26:48.246109  2878 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:48.246115  2878 net.cpp:139] Memory required for data: 18717440
I0428 20:26:48.246121  2878 layer_factory.hpp:77] Creating layer loss
I0428 20:26:48.246132  2878 net.cpp:86] Creating Layer loss
I0428 20:26:48.246140  2878 net.cpp:408] loss <- ip3
I0428 20:26:48.246147  2878 net.cpp:408] loss <- label
I0428 20:26:48.246157  2878 net.cpp:382] loss -> loss
I0428 20:26:48.246186  2878 layer_factory.hpp:77] Creating layer loss
I0428 20:26:48.246462  2878 net.cpp:124] Setting up loss
I0428 20:26:48.246474  2878 net.cpp:131] Top shape: (1)
I0428 20:26:48.246481  2878 net.cpp:134]     with loss weight 1
I0428 20:26:48.246505  2878 net.cpp:139] Memory required for data: 18717444
I0428 20:26:48.246512  2878 net.cpp:200] loss needs backward computation.
I0428 20:26:48.246520  2878 net.cpp:200] relu3 needs backward computation.
I0428 20:26:48.246526  2878 net.cpp:200] ip3 needs backward computation.
I0428 20:26:48.246532  2878 net.cpp:200] relu2 needs backward computation.
I0428 20:26:48.246538  2878 net.cpp:200] ip2 needs backward computation.
I0428 20:26:48.246546  2878 net.cpp:200] relu1 needs backward computation.
I0428 20:26:48.246551  2878 net.cpp:200] ip1 needs backward computation.
I0428 20:26:48.246557  2878 net.cpp:200] pool1 needs backward computation.
I0428 20:26:48.246564  2878 net.cpp:200] conv1 needs backward computation.
I0428 20:26:48.246572  2878 net.cpp:200] pool0 needs backward computation.
I0428 20:26:48.246577  2878 net.cpp:200] conv0 needs backward computation.
I0428 20:26:48.246584  2878 net.cpp:202] mnist does not need backward computation.
I0428 20:26:48.246592  2878 net.cpp:244] This network produces output loss
I0428 20:26:48.246608  2878 net.cpp:257] Network initialization done.
I0428 20:26:48.247000  2878 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1477.prototxt
I0428 20:26:48.247041  2878 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:48.247160  2878 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:48.247298  2878 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:48.247371  2878 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:48.247393  2878 net.cpp:86] Creating Layer mnist
I0428 20:26:48.247403  2878 net.cpp:382] mnist -> data
I0428 20:26:48.247418  2878 net.cpp:382] mnist -> label
I0428 20:26:48.247561  2878 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:48.250167  2878 net.cpp:124] Setting up mnist
I0428 20:26:48.250186  2878 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:48.250196  2878 net.cpp:131] Top shape: 100 (100)
I0428 20:26:48.250203  2878 net.cpp:139] Memory required for data: 314000
I0428 20:26:48.250211  2878 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:48.250244  2878 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:48.250252  2878 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:48.250262  2878 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:48.250275  2878 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:48.250370  2878 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:48.250381  2878 net.cpp:131] Top shape: 100 (100)
I0428 20:26:48.250389  2878 net.cpp:131] Top shape: 100 (100)
I0428 20:26:48.250396  2878 net.cpp:139] Memory required for data: 314800
I0428 20:26:48.250402  2878 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:48.250417  2878 net.cpp:86] Creating Layer conv0
I0428 20:26:48.250425  2878 net.cpp:408] conv0 <- data
I0428 20:26:48.250437  2878 net.cpp:382] conv0 -> conv0
I0428 20:26:48.252226  2878 net.cpp:124] Setting up conv0
I0428 20:26:48.252245  2878 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:48.252252  2878 net.cpp:139] Memory required for data: 23354800
I0428 20:26:48.252270  2878 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:48.252282  2878 net.cpp:86] Creating Layer pool0
I0428 20:26:48.252290  2878 net.cpp:408] pool0 <- conv0
I0428 20:26:48.252300  2878 net.cpp:382] pool0 -> pool0
I0428 20:26:48.252351  2878 net.cpp:124] Setting up pool0
I0428 20:26:48.252362  2878 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:48.252367  2878 net.cpp:139] Memory required for data: 29114800
I0428 20:26:48.252373  2878 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:48.252389  2878 net.cpp:86] Creating Layer conv1
I0428 20:26:48.252398  2878 net.cpp:408] conv1 <- pool0
I0428 20:26:48.252408  2878 net.cpp:382] conv1 -> conv1
I0428 20:26:48.254361  2878 net.cpp:124] Setting up conv1
I0428 20:26:48.254381  2878 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:48.254389  2878 net.cpp:139] Memory required for data: 29166000
I0428 20:26:48.254407  2878 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:48.254420  2878 net.cpp:86] Creating Layer pool1
I0428 20:26:48.254427  2878 net.cpp:408] pool1 <- conv1
I0428 20:26:48.254437  2878 net.cpp:382] pool1 -> pool1
I0428 20:26:48.254492  2878 net.cpp:124] Setting up pool1
I0428 20:26:48.254503  2878 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:48.254509  2878 net.cpp:139] Memory required for data: 29178800
I0428 20:26:48.254515  2878 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:48.254528  2878 net.cpp:86] Creating Layer ip1
I0428 20:26:48.254535  2878 net.cpp:408] ip1 <- pool1
I0428 20:26:48.254549  2878 net.cpp:382] ip1 -> ip1
I0428 20:26:48.254693  2878 net.cpp:124] Setting up ip1
I0428 20:26:48.254705  2878 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:48.254725  2878 net.cpp:139] Memory required for data: 29198800
I0428 20:26:48.254740  2878 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:48.254755  2878 net.cpp:86] Creating Layer relu1
I0428 20:26:48.254763  2878 net.cpp:408] relu1 <- ip1
I0428 20:26:48.254773  2878 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:48.254987  2878 net.cpp:124] Setting up relu1
I0428 20:26:48.255000  2878 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:48.255007  2878 net.cpp:139] Memory required for data: 29218800
I0428 20:26:48.255012  2878 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:48.255028  2878 net.cpp:86] Creating Layer ip2
I0428 20:26:48.255038  2878 net.cpp:408] ip2 <- ip1
I0428 20:26:48.255048  2878 net.cpp:382] ip2 -> ip2
I0428 20:26:48.255219  2878 net.cpp:124] Setting up ip2
I0428 20:26:48.255231  2878 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:48.255236  2878 net.cpp:139] Memory required for data: 29228800
I0428 20:26:48.255249  2878 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:48.255257  2878 net.cpp:86] Creating Layer relu2
I0428 20:26:48.255265  2878 net.cpp:408] relu2 <- ip2
I0428 20:26:48.255275  2878 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:48.255486  2878 net.cpp:124] Setting up relu2
I0428 20:26:48.255497  2878 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:48.255504  2878 net.cpp:139] Memory required for data: 29238800
I0428 20:26:48.255511  2878 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:48.255524  2878 net.cpp:86] Creating Layer ip3
I0428 20:26:48.255530  2878 net.cpp:408] ip3 <- ip2
I0428 20:26:48.255544  2878 net.cpp:382] ip3 -> ip3
I0428 20:26:48.255673  2878 net.cpp:124] Setting up ip3
I0428 20:26:48.255686  2878 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:48.255692  2878 net.cpp:139] Memory required for data: 29242800
I0428 20:26:48.255708  2878 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:48.255718  2878 net.cpp:86] Creating Layer relu3
I0428 20:26:48.255725  2878 net.cpp:408] relu3 <- ip3
I0428 20:26:48.255734  2878 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:48.256669  2878 net.cpp:124] Setting up relu3
I0428 20:26:48.256686  2878 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:48.256693  2878 net.cpp:139] Memory required for data: 29246800
I0428 20:26:48.256700  2878 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:48.256711  2878 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:48.256718  2878 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:48.256731  2878 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:48.256742  2878 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:48.256798  2878 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:48.256808  2878 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:48.256825  2878 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:48.256830  2878 net.cpp:139] Memory required for data: 29254800
I0428 20:26:48.256836  2878 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:48.256849  2878 net.cpp:86] Creating Layer accuracy
I0428 20:26:48.256855  2878 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:48.256865  2878 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:48.256873  2878 net.cpp:382] accuracy -> accuracy
I0428 20:26:48.256887  2878 net.cpp:124] Setting up accuracy
I0428 20:26:48.256896  2878 net.cpp:131] Top shape: (1)
I0428 20:26:48.256903  2878 net.cpp:139] Memory required for data: 29254804
I0428 20:26:48.256909  2878 layer_factory.hpp:77] Creating layer loss
I0428 20:26:48.256922  2878 net.cpp:86] Creating Layer loss
I0428 20:26:48.256927  2878 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:48.256935  2878 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:48.256944  2878 net.cpp:382] loss -> loss
I0428 20:26:48.256956  2878 layer_factory.hpp:77] Creating layer loss
I0428 20:26:48.257262  2878 net.cpp:124] Setting up loss
I0428 20:26:48.257275  2878 net.cpp:131] Top shape: (1)
I0428 20:26:48.257282  2878 net.cpp:134]     with loss weight 1
I0428 20:26:48.257308  2878 net.cpp:139] Memory required for data: 29254808
I0428 20:26:48.257314  2878 net.cpp:200] loss needs backward computation.
I0428 20:26:48.257323  2878 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:48.257329  2878 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:48.257335  2878 net.cpp:200] relu3 needs backward computation.
I0428 20:26:48.257341  2878 net.cpp:200] ip3 needs backward computation.
I0428 20:26:48.257349  2878 net.cpp:200] relu2 needs backward computation.
I0428 20:26:48.257354  2878 net.cpp:200] ip2 needs backward computation.
I0428 20:26:48.257359  2878 net.cpp:200] relu1 needs backward computation.
I0428 20:26:48.257365  2878 net.cpp:200] ip1 needs backward computation.
I0428 20:26:48.257371  2878 net.cpp:200] pool1 needs backward computation.
I0428 20:26:48.257377  2878 net.cpp:200] conv1 needs backward computation.
I0428 20:26:48.257385  2878 net.cpp:200] pool0 needs backward computation.
I0428 20:26:48.257395  2878 net.cpp:200] conv0 needs backward computation.
I0428 20:26:48.257402  2878 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:48.257410  2878 net.cpp:202] mnist does not need backward computation.
I0428 20:26:48.257416  2878 net.cpp:244] This network produces output accuracy
I0428 20:26:48.257423  2878 net.cpp:244] This network produces output loss
I0428 20:26:48.257449  2878 net.cpp:257] Network initialization done.
I0428 20:26:48.257508  2878 solver.cpp:56] Solver scaffolding done.
I0428 20:26:48.257980  2878 caffe.cpp:248] Starting Optimization
I0428 20:26:48.257988  2878 solver.cpp:273] Solving LeNet
I0428 20:26:48.257993  2878 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:48.258201  2878 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:48.358011  2885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:48.360823  2878 solver.cpp:398]     Test net output #0: accuracy = 0.0883
I0428 20:26:48.360851  2878 solver.cpp:398]     Test net output #1: loss = 2.31308 (* 1 = 2.31308 loss)
I0428 20:26:48.366224  2878 solver.cpp:219] Iteration 0 (0 iter/s, 0.108185s/100 iters), loss = 2.31375
I0428 20:26:48.366259  2878 solver.cpp:238]     Train net output #0: loss = 2.31375 (* 1 = 2.31375 loss)
I0428 20:26:48.366276  2878 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:48.575103  2878 solver.cpp:219] Iteration 100 (478.864 iter/s, 0.208827s/100 iters), loss = 1.58458
I0428 20:26:48.575139  2878 solver.cpp:238]     Train net output #0: loss = 1.58458 (* 1 = 1.58458 loss)
I0428 20:26:48.575146  2878 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:48.783319  2878 solver.cpp:219] Iteration 200 (480.384 iter/s, 0.208167s/100 iters), loss = 1.08639
I0428 20:26:48.783350  2878 solver.cpp:238]     Train net output #0: loss = 1.08639 (* 1 = 1.08639 loss)
I0428 20:26:48.783359  2878 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:48.991767  2878 solver.cpp:219] Iteration 300 (479.843 iter/s, 0.208401s/100 iters), loss = 0.764166
I0428 20:26:48.991798  2878 solver.cpp:238]     Train net output #0: loss = 0.764166 (* 1 = 0.764166 loss)
I0428 20:26:48.991806  2878 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:49.203101  2878 solver.cpp:219] Iteration 400 (473.295 iter/s, 0.211285s/100 iters), loss = 0.549274
I0428 20:26:49.203142  2878 solver.cpp:238]     Train net output #0: loss = 0.549274 (* 1 = 0.549274 loss)
I0428 20:26:49.203152  2878 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:49.410274  2878 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:49.522755  2885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:49.525712  2878 solver.cpp:398]     Test net output #0: accuracy = 0.8432
I0428 20:26:49.525746  2878 solver.cpp:398]     Test net output #1: loss = 0.453226 (* 1 = 0.453226 loss)
I0428 20:26:49.527791  2878 solver.cpp:219] Iteration 500 (308.044 iter/s, 0.324628s/100 iters), loss = 0.385391
I0428 20:26:49.527823  2878 solver.cpp:238]     Train net output #0: loss = 0.385391 (* 1 = 0.385391 loss)
I0428 20:26:49.527854  2878 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:49.739272  2878 solver.cpp:219] Iteration 600 (472.969 iter/s, 0.21143s/100 iters), loss = 0.319438
I0428 20:26:49.739321  2878 solver.cpp:238]     Train net output #0: loss = 0.319438 (* 1 = 0.319438 loss)
I0428 20:26:49.739334  2878 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:49.953789  2878 solver.cpp:219] Iteration 700 (466.304 iter/s, 0.214452s/100 iters), loss = 0.479941
I0428 20:26:49.953836  2878 solver.cpp:238]     Train net output #0: loss = 0.479941 (* 1 = 0.479941 loss)
I0428 20:26:49.953848  2878 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:50.175457  2878 solver.cpp:219] Iteration 800 (451.256 iter/s, 0.221604s/100 iters), loss = 0.522401
I0428 20:26:50.175504  2878 solver.cpp:238]     Train net output #0: loss = 0.522401 (* 1 = 0.522401 loss)
I0428 20:26:50.175516  2878 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:50.396380  2878 solver.cpp:219] Iteration 900 (452.777 iter/s, 0.220859s/100 iters), loss = 0.413567
I0428 20:26:50.396425  2878 solver.cpp:238]     Train net output #0: loss = 0.413567 (* 1 = 0.413567 loss)
I0428 20:26:50.396436  2878 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:50.469620  2884 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:50.611004  2878 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:50.612855  2878 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:50.614012  2878 solver.cpp:311] Iteration 1000, loss = 0.430272
I0428 20:26:50.614035  2878 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:50.714534  2885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:50.717350  2878 solver.cpp:398]     Test net output #0: accuracy = 0.8649
I0428 20:26:50.717372  2878 solver.cpp:398]     Test net output #1: loss = 0.370464 (* 1 = 0.370464 loss)
I0428 20:26:50.717381  2878 solver.cpp:316] Optimization Done.
I0428 20:26:50.717396  2878 caffe.cpp:259] Optimization Done.
