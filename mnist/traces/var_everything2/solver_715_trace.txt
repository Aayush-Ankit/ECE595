I0428 19:54:37.838757 28031 caffe.cpp:218] Using GPUs 0
I0428 19:54:37.867700 28031 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:38.318084 28031 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test715.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:38.318205 28031 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test715.prototxt
I0428 19:54:38.318728 28031 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:38.318752 28031 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:38.318874 28031 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:38.318961 28031 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:38.319061 28031 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:38.319087 28031 net.cpp:86] Creating Layer mnist
I0428 19:54:38.319098 28031 net.cpp:382] mnist -> data
I0428 19:54:38.319121 28031 net.cpp:382] mnist -> label
I0428 19:54:38.320356 28031 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:38.322892 28031 net.cpp:124] Setting up mnist
I0428 19:54:38.322923 28031 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:38.322929 28031 net.cpp:131] Top shape: 64 (64)
I0428 19:54:38.322932 28031 net.cpp:139] Memory required for data: 200960
I0428 19:54:38.322938 28031 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:38.322968 28031 net.cpp:86] Creating Layer conv0
I0428 19:54:38.322990 28031 net.cpp:408] conv0 <- data
I0428 19:54:38.323007 28031 net.cpp:382] conv0 -> conv0
I0428 19:54:38.554781 28031 net.cpp:124] Setting up conv0
I0428 19:54:38.554821 28031 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:38.554826 28031 net.cpp:139] Memory required for data: 938240
I0428 19:54:38.554841 28031 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:38.554852 28031 net.cpp:86] Creating Layer pool0
I0428 19:54:38.554855 28031 net.cpp:408] pool0 <- conv0
I0428 19:54:38.554862 28031 net.cpp:382] pool0 -> pool0
I0428 19:54:38.554931 28031 net.cpp:124] Setting up pool0
I0428 19:54:38.554953 28031 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:38.554958 28031 net.cpp:139] Memory required for data: 1122560
I0428 19:54:38.554963 28031 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:38.554977 28031 net.cpp:86] Creating Layer conv1
I0428 19:54:38.554982 28031 net.cpp:408] conv1 <- pool0
I0428 19:54:38.554991 28031 net.cpp:382] conv1 -> conv1
I0428 19:54:38.558156 28031 net.cpp:124] Setting up conv1
I0428 19:54:38.558185 28031 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:38.558188 28031 net.cpp:139] Memory required for data: 2760960
I0428 19:54:38.558197 28031 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:38.558204 28031 net.cpp:86] Creating Layer pool1
I0428 19:54:38.558223 28031 net.cpp:408] pool1 <- conv1
I0428 19:54:38.558228 28031 net.cpp:382] pool1 -> pool1
I0428 19:54:38.558274 28031 net.cpp:124] Setting up pool1
I0428 19:54:38.558284 28031 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:38.558287 28031 net.cpp:139] Memory required for data: 3170560
I0428 19:54:38.558292 28031 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:38.558302 28031 net.cpp:86] Creating Layer ip1
I0428 19:54:38.558307 28031 net.cpp:408] ip1 <- pool1
I0428 19:54:38.558315 28031 net.cpp:382] ip1 -> ip1
I0428 19:54:38.558583 28031 net.cpp:124] Setting up ip1
I0428 19:54:38.558594 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.558599 28031 net.cpp:139] Memory required for data: 3173120
I0428 19:54:38.558610 28031 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:38.558619 28031 net.cpp:86] Creating Layer relu1
I0428 19:54:38.558624 28031 net.cpp:408] relu1 <- ip1
I0428 19:54:38.558630 28031 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:38.558845 28031 net.cpp:124] Setting up relu1
I0428 19:54:38.558856 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.558861 28031 net.cpp:139] Memory required for data: 3175680
I0428 19:54:38.558866 28031 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:38.558876 28031 net.cpp:86] Creating Layer ip2
I0428 19:54:38.558881 28031 net.cpp:408] ip2 <- ip1
I0428 19:54:38.558887 28031 net.cpp:382] ip2 -> ip2
I0428 19:54:38.559065 28031 net.cpp:124] Setting up ip2
I0428 19:54:38.559077 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.559083 28031 net.cpp:139] Memory required for data: 3178240
I0428 19:54:38.559092 28031 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:38.559103 28031 net.cpp:86] Creating Layer relu2
I0428 19:54:38.559108 28031 net.cpp:408] relu2 <- ip2
I0428 19:54:38.559115 28031 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:38.560237 28031 net.cpp:124] Setting up relu2
I0428 19:54:38.560255 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.560276 28031 net.cpp:139] Memory required for data: 3180800
I0428 19:54:38.560281 28031 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:38.560292 28031 net.cpp:86] Creating Layer ip3
I0428 19:54:38.560298 28031 net.cpp:408] ip3 <- ip2
I0428 19:54:38.560307 28031 net.cpp:382] ip3 -> ip3
I0428 19:54:38.560470 28031 net.cpp:124] Setting up ip3
I0428 19:54:38.560482 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.560487 28031 net.cpp:139] Memory required for data: 3183360
I0428 19:54:38.560499 28031 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:38.560508 28031 net.cpp:86] Creating Layer relu3
I0428 19:54:38.560513 28031 net.cpp:408] relu3 <- ip3
I0428 19:54:38.560518 28031 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:38.560740 28031 net.cpp:124] Setting up relu3
I0428 19:54:38.560752 28031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:38.560757 28031 net.cpp:139] Memory required for data: 3185920
I0428 19:54:38.560762 28031 layer_factory.hpp:77] Creating layer loss
I0428 19:54:38.560783 28031 net.cpp:86] Creating Layer loss
I0428 19:54:38.560788 28031 net.cpp:408] loss <- ip3
I0428 19:54:38.560796 28031 net.cpp:408] loss <- label
I0428 19:54:38.560803 28031 net.cpp:382] loss -> loss
I0428 19:54:38.560858 28031 layer_factory.hpp:77] Creating layer loss
I0428 19:54:38.561225 28031 net.cpp:124] Setting up loss
I0428 19:54:38.561240 28031 net.cpp:131] Top shape: (1)
I0428 19:54:38.561261 28031 net.cpp:134]     with loss weight 1
I0428 19:54:38.561280 28031 net.cpp:139] Memory required for data: 3185924
I0428 19:54:38.561286 28031 net.cpp:200] loss needs backward computation.
I0428 19:54:38.561295 28031 net.cpp:200] relu3 needs backward computation.
I0428 19:54:38.561300 28031 net.cpp:200] ip3 needs backward computation.
I0428 19:54:38.561305 28031 net.cpp:200] relu2 needs backward computation.
I0428 19:54:38.561311 28031 net.cpp:200] ip2 needs backward computation.
I0428 19:54:38.561316 28031 net.cpp:200] relu1 needs backward computation.
I0428 19:54:38.561321 28031 net.cpp:200] ip1 needs backward computation.
I0428 19:54:38.561326 28031 net.cpp:200] pool1 needs backward computation.
I0428 19:54:38.561331 28031 net.cpp:200] conv1 needs backward computation.
I0428 19:54:38.561336 28031 net.cpp:200] pool0 needs backward computation.
I0428 19:54:38.561342 28031 net.cpp:200] conv0 needs backward computation.
I0428 19:54:38.561348 28031 net.cpp:202] mnist does not need backward computation.
I0428 19:54:38.561353 28031 net.cpp:244] This network produces output loss
I0428 19:54:38.561368 28031 net.cpp:257] Network initialization done.
I0428 19:54:38.561923 28031 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test715.prototxt
I0428 19:54:38.561990 28031 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:38.562129 28031 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:38.562244 28031 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:38.562333 28031 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:38.562351 28031 net.cpp:86] Creating Layer mnist
I0428 19:54:38.562361 28031 net.cpp:382] mnist -> data
I0428 19:54:38.562373 28031 net.cpp:382] mnist -> label
I0428 19:54:38.562510 28031 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:38.564919 28031 net.cpp:124] Setting up mnist
I0428 19:54:38.564962 28031 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:38.564967 28031 net.cpp:131] Top shape: 100 (100)
I0428 19:54:38.564970 28031 net.cpp:139] Memory required for data: 314000
I0428 19:54:38.564973 28031 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:38.564980 28031 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:38.564983 28031 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:38.565008 28031 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:38.565021 28031 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:38.565078 28031 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:38.565089 28031 net.cpp:131] Top shape: 100 (100)
I0428 19:54:38.565096 28031 net.cpp:131] Top shape: 100 (100)
I0428 19:54:38.565100 28031 net.cpp:139] Memory required for data: 314800
I0428 19:54:38.565105 28031 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:38.565120 28031 net.cpp:86] Creating Layer conv0
I0428 19:54:38.565126 28031 net.cpp:408] conv0 <- data
I0428 19:54:38.565148 28031 net.cpp:382] conv0 -> conv0
I0428 19:54:38.567250 28031 net.cpp:124] Setting up conv0
I0428 19:54:38.567278 28031 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:38.567297 28031 net.cpp:139] Memory required for data: 1466800
I0428 19:54:38.567306 28031 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:38.567314 28031 net.cpp:86] Creating Layer pool0
I0428 19:54:38.567317 28031 net.cpp:408] pool0 <- conv0
I0428 19:54:38.567322 28031 net.cpp:382] pool0 -> pool0
I0428 19:54:38.567373 28031 net.cpp:124] Setting up pool0
I0428 19:54:38.567384 28031 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:38.567389 28031 net.cpp:139] Memory required for data: 1754800
I0428 19:54:38.567394 28031 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:38.567417 28031 net.cpp:86] Creating Layer conv1
I0428 19:54:38.567435 28031 net.cpp:408] conv1 <- pool0
I0428 19:54:38.567445 28031 net.cpp:382] conv1 -> conv1
I0428 19:54:38.569635 28031 net.cpp:124] Setting up conv1
I0428 19:54:38.569664 28031 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:38.569669 28031 net.cpp:139] Memory required for data: 4314800
I0428 19:54:38.569677 28031 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:38.569686 28031 net.cpp:86] Creating Layer pool1
I0428 19:54:38.569689 28031 net.cpp:408] pool1 <- conv1
I0428 19:54:38.569694 28031 net.cpp:382] pool1 -> pool1
I0428 19:54:38.569744 28031 net.cpp:124] Setting up pool1
I0428 19:54:38.569764 28031 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:38.569769 28031 net.cpp:139] Memory required for data: 4954800
I0428 19:54:38.569774 28031 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:38.569785 28031 net.cpp:86] Creating Layer ip1
I0428 19:54:38.569790 28031 net.cpp:408] ip1 <- pool1
I0428 19:54:38.569798 28031 net.cpp:382] ip1 -> ip1
I0428 19:54:38.570098 28031 net.cpp:124] Setting up ip1
I0428 19:54:38.570142 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.570159 28031 net.cpp:139] Memory required for data: 4958800
I0428 19:54:38.570170 28031 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:38.570179 28031 net.cpp:86] Creating Layer relu1
I0428 19:54:38.570185 28031 net.cpp:408] relu1 <- ip1
I0428 19:54:38.570192 28031 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:38.570541 28031 net.cpp:124] Setting up relu1
I0428 19:54:38.570559 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.570575 28031 net.cpp:139] Memory required for data: 4962800
I0428 19:54:38.570580 28031 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:38.570593 28031 net.cpp:86] Creating Layer ip2
I0428 19:54:38.570600 28031 net.cpp:408] ip2 <- ip1
I0428 19:54:38.570611 28031 net.cpp:382] ip2 -> ip2
I0428 19:54:38.570760 28031 net.cpp:124] Setting up ip2
I0428 19:54:38.570772 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.570778 28031 net.cpp:139] Memory required for data: 4966800
I0428 19:54:38.570788 28031 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:38.570797 28031 net.cpp:86] Creating Layer relu2
I0428 19:54:38.570816 28031 net.cpp:408] relu2 <- ip2
I0428 19:54:38.570823 28031 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:38.571051 28031 net.cpp:124] Setting up relu2
I0428 19:54:38.571065 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.571070 28031 net.cpp:139] Memory required for data: 4970800
I0428 19:54:38.571091 28031 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:38.571099 28031 net.cpp:86] Creating Layer ip3
I0428 19:54:38.571105 28031 net.cpp:408] ip3 <- ip2
I0428 19:54:38.571113 28031 net.cpp:382] ip3 -> ip3
I0428 19:54:38.571262 28031 net.cpp:124] Setting up ip3
I0428 19:54:38.571274 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.571279 28031 net.cpp:139] Memory required for data: 4974800
I0428 19:54:38.571293 28031 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:38.571301 28031 net.cpp:86] Creating Layer relu3
I0428 19:54:38.571307 28031 net.cpp:408] relu3 <- ip3
I0428 19:54:38.571316 28031 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:38.572505 28031 net.cpp:124] Setting up relu3
I0428 19:54:38.572535 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.572540 28031 net.cpp:139] Memory required for data: 4978800
I0428 19:54:38.572546 28031 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:54:38.572554 28031 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:54:38.572559 28031 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:54:38.572568 28031 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:54:38.572577 28031 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:54:38.572626 28031 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:54:38.572639 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.572645 28031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:38.572650 28031 net.cpp:139] Memory required for data: 4986800
I0428 19:54:38.572654 28031 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:38.572664 28031 net.cpp:86] Creating Layer accuracy
I0428 19:54:38.572669 28031 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:54:38.572675 28031 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:38.572685 28031 net.cpp:382] accuracy -> accuracy
I0428 19:54:38.572711 28031 net.cpp:124] Setting up accuracy
I0428 19:54:38.572720 28031 net.cpp:131] Top shape: (1)
I0428 19:54:38.572726 28031 net.cpp:139] Memory required for data: 4986804
I0428 19:54:38.572731 28031 layer_factory.hpp:77] Creating layer loss
I0428 19:54:38.572737 28031 net.cpp:86] Creating Layer loss
I0428 19:54:38.572742 28031 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:54:38.572751 28031 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:38.572758 28031 net.cpp:382] loss -> loss
I0428 19:54:38.572782 28031 layer_factory.hpp:77] Creating layer loss
I0428 19:54:38.573209 28031 net.cpp:124] Setting up loss
I0428 19:54:38.573238 28031 net.cpp:131] Top shape: (1)
I0428 19:54:38.573243 28031 net.cpp:134]     with loss weight 1
I0428 19:54:38.573264 28031 net.cpp:139] Memory required for data: 4986808
I0428 19:54:38.573269 28031 net.cpp:200] loss needs backward computation.
I0428 19:54:38.573276 28031 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:38.573282 28031 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:54:38.573287 28031 net.cpp:200] relu3 needs backward computation.
I0428 19:54:38.573293 28031 net.cpp:200] ip3 needs backward computation.
I0428 19:54:38.573298 28031 net.cpp:200] relu2 needs backward computation.
I0428 19:54:38.573303 28031 net.cpp:200] ip2 needs backward computation.
I0428 19:54:38.573308 28031 net.cpp:200] relu1 needs backward computation.
I0428 19:54:38.573313 28031 net.cpp:200] ip1 needs backward computation.
I0428 19:54:38.573318 28031 net.cpp:200] pool1 needs backward computation.
I0428 19:54:38.573324 28031 net.cpp:200] conv1 needs backward computation.
I0428 19:54:38.573343 28031 net.cpp:200] pool0 needs backward computation.
I0428 19:54:38.573359 28031 net.cpp:200] conv0 needs backward computation.
I0428 19:54:38.573364 28031 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:38.573371 28031 net.cpp:202] mnist does not need backward computation.
I0428 19:54:38.573376 28031 net.cpp:244] This network produces output accuracy
I0428 19:54:38.573381 28031 net.cpp:244] This network produces output loss
I0428 19:54:38.573400 28031 net.cpp:257] Network initialization done.
I0428 19:54:38.573458 28031 solver.cpp:56] Solver scaffolding done.
I0428 19:54:38.573961 28031 caffe.cpp:248] Starting Optimization
I0428 19:54:38.573984 28031 solver.cpp:273] Solving LeNet
I0428 19:54:38.574004 28031 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:38.574251 28031 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:38.579963 28031 blocking_queue.cpp:49] Waiting for data
I0428 19:54:38.652606 28038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:38.653301 28031 solver.cpp:398]     Test net output #0: accuracy = 0.0966
I0428 19:54:38.653340 28031 solver.cpp:398]     Test net output #1: loss = 2.32148 (* 1 = 2.32148 loss)
I0428 19:54:38.657215 28031 solver.cpp:219] Iteration 0 (-9.76705e-43 iter/s, 0.0831806s/100 iters), loss = 2.32362
I0428 19:54:38.657254 28031 solver.cpp:238]     Train net output #0: loss = 2.32362 (* 1 = 2.32362 loss)
I0428 19:54:38.657265 28031 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:38.806350 28031 solver.cpp:219] Iteration 100 (670.776 iter/s, 0.149081s/100 iters), loss = 1.41913
I0428 19:54:38.806390 28031 solver.cpp:238]     Train net output #0: loss = 1.41913 (* 1 = 1.41913 loss)
I0428 19:54:38.806396 28031 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:38.954857 28031 solver.cpp:219] Iteration 200 (673.538 iter/s, 0.14847s/100 iters), loss = 0.852656
I0428 19:54:38.954883 28031 solver.cpp:238]     Train net output #0: loss = 0.852656 (* 1 = 0.852656 loss)
I0428 19:54:38.954890 28031 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:39.104534 28031 solver.cpp:219] Iteration 300 (668.274 iter/s, 0.149639s/100 iters), loss = 0.267417
I0428 19:54:39.104573 28031 solver.cpp:238]     Train net output #0: loss = 0.267417 (* 1 = 0.267417 loss)
I0428 19:54:39.104579 28031 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:39.255882 28031 solver.cpp:219] Iteration 400 (660.884 iter/s, 0.151312s/100 iters), loss = 0.148182
I0428 19:54:39.255921 28031 solver.cpp:238]     Train net output #0: loss = 0.148182 (* 1 = 0.148182 loss)
I0428 19:54:39.255928 28031 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:39.406857 28031 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:39.480434 28038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:39.481139 28031 solver.cpp:398]     Test net output #0: accuracy = 0.9416
I0428 19:54:39.481189 28031 solver.cpp:398]     Test net output #1: loss = 0.195318 (* 1 = 0.195318 loss)
I0428 19:54:39.482868 28031 solver.cpp:219] Iteration 500 (440.635 iter/s, 0.226945s/100 iters), loss = 0.137438
I0428 19:54:39.482939 28031 solver.cpp:238]     Train net output #0: loss = 0.137438 (* 1 = 0.137438 loss)
I0428 19:54:39.482964 28031 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:39.633312 28031 solver.cpp:219] Iteration 600 (665.065 iter/s, 0.150361s/100 iters), loss = 0.0903821
I0428 19:54:39.633353 28031 solver.cpp:238]     Train net output #0: loss = 0.0903821 (* 1 = 0.0903821 loss)
I0428 19:54:39.633360 28031 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:39.782713 28031 solver.cpp:219] Iteration 700 (669.576 iter/s, 0.149348s/100 iters), loss = 0.212849
I0428 19:54:39.782754 28031 solver.cpp:238]     Train net output #0: loss = 0.212849 (* 1 = 0.212849 loss)
I0428 19:54:39.782760 28031 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:39.932868 28031 solver.cpp:219] Iteration 800 (666.223 iter/s, 0.1501s/100 iters), loss = 0.272163
I0428 19:54:39.932906 28031 solver.cpp:238]     Train net output #0: loss = 0.272163 (* 1 = 0.272163 loss)
I0428 19:54:39.932912 28031 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:40.082765 28031 solver.cpp:219] Iteration 900 (667.344 iter/s, 0.149848s/100 iters), loss = 0.253841
I0428 19:54:40.082805 28031 solver.cpp:238]     Train net output #0: loss = 0.253841 (* 1 = 0.253841 loss)
I0428 19:54:40.082811 28031 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:40.132535 28037 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:40.229636 28031 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:40.231339 28031 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:40.232273 28031 solver.cpp:311] Iteration 1000, loss = 0.0687644
I0428 19:54:40.232295 28031 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:40.315852 28038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:40.316529 28031 solver.cpp:398]     Test net output #0: accuracy = 0.9665
I0428 19:54:40.316570 28031 solver.cpp:398]     Test net output #1: loss = 0.10817 (* 1 = 0.10817 loss)
I0428 19:54:40.316578 28031 solver.cpp:316] Optimization Done.
I0428 19:54:40.316582 28031 caffe.cpp:259] Optimization Done.
