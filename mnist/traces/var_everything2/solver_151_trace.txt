I0428 19:32:22.705147 22825 caffe.cpp:218] Using GPUs 0
I0428 19:32:22.740612 22825 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:23.254706 22825 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test151.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:23.254844 22825 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test151.prototxt
I0428 19:32:23.255204 22825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:23.255220 22825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:23.255306 22825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:23.255373 22825 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:23.255478 22825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:23.255502 22825 net.cpp:86] Creating Layer mnist
I0428 19:32:23.255509 22825 net.cpp:382] mnist -> data
I0428 19:32:23.255533 22825 net.cpp:382] mnist -> label
I0428 19:32:23.256618 22825 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:23.259063 22825 net.cpp:124] Setting up mnist
I0428 19:32:23.259081 22825 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:23.259088 22825 net.cpp:131] Top shape: 64 (64)
I0428 19:32:23.259091 22825 net.cpp:139] Memory required for data: 200960
I0428 19:32:23.259099 22825 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:23.259114 22825 net.cpp:86] Creating Layer conv0
I0428 19:32:23.259119 22825 net.cpp:408] conv0 <- data
I0428 19:32:23.259130 22825 net.cpp:382] conv0 -> conv0
I0428 19:32:23.535795 22825 net.cpp:124] Setting up conv0
I0428 19:32:23.535823 22825 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:23.535826 22825 net.cpp:139] Memory required for data: 1675520
I0428 19:32:23.535841 22825 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:23.535853 22825 net.cpp:86] Creating Layer pool0
I0428 19:32:23.535876 22825 net.cpp:408] pool0 <- conv0
I0428 19:32:23.535881 22825 net.cpp:382] pool0 -> pool0
I0428 19:32:23.535925 22825 net.cpp:124] Setting up pool0
I0428 19:32:23.535931 22825 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:23.535933 22825 net.cpp:139] Memory required for data: 2044160
I0428 19:32:23.535938 22825 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:23.535944 22825 net.cpp:86] Creating Layer ip1
I0428 19:32:23.535948 22825 net.cpp:408] ip1 <- pool0
I0428 19:32:23.535951 22825 net.cpp:382] ip1 -> ip1
I0428 19:32:23.537366 22825 net.cpp:124] Setting up ip1
I0428 19:32:23.537379 22825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:23.537398 22825 net.cpp:139] Memory required for data: 2056960
I0428 19:32:23.537406 22825 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:23.537412 22825 net.cpp:86] Creating Layer relu1
I0428 19:32:23.537416 22825 net.cpp:408] relu1 <- ip1
I0428 19:32:23.537420 22825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:23.537591 22825 net.cpp:124] Setting up relu1
I0428 19:32:23.537601 22825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:23.537605 22825 net.cpp:139] Memory required for data: 2069760
I0428 19:32:23.537607 22825 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:23.537613 22825 net.cpp:86] Creating Layer ip2
I0428 19:32:23.537616 22825 net.cpp:408] ip2 <- ip1
I0428 19:32:23.537621 22825 net.cpp:382] ip2 -> ip2
I0428 19:32:23.538635 22825 net.cpp:124] Setting up ip2
I0428 19:32:23.538648 22825 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:23.538666 22825 net.cpp:139] Memory required for data: 2076160
I0428 19:32:23.538676 22825 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:23.538681 22825 net.cpp:86] Creating Layer relu2
I0428 19:32:23.538683 22825 net.cpp:408] relu2 <- ip2
I0428 19:32:23.538687 22825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:23.539551 22825 net.cpp:124] Setting up relu2
I0428 19:32:23.539580 22825 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:23.539584 22825 net.cpp:139] Memory required for data: 2082560
I0428 19:32:23.539587 22825 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:23.539597 22825 net.cpp:86] Creating Layer ip3
I0428 19:32:23.539599 22825 net.cpp:408] ip3 <- ip2
I0428 19:32:23.539605 22825 net.cpp:382] ip3 -> ip3
I0428 19:32:23.539743 22825 net.cpp:124] Setting up ip3
I0428 19:32:23.539750 22825 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:23.539753 22825 net.cpp:139] Memory required for data: 2085120
I0428 19:32:23.539758 22825 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:23.539767 22825 net.cpp:86] Creating Layer relu3
I0428 19:32:23.539769 22825 net.cpp:408] relu3 <- ip3
I0428 19:32:23.539773 22825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:23.539947 22825 net.cpp:124] Setting up relu3
I0428 19:32:23.539957 22825 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:23.539960 22825 net.cpp:139] Memory required for data: 2087680
I0428 19:32:23.539963 22825 layer_factory.hpp:77] Creating layer loss
I0428 19:32:23.539969 22825 net.cpp:86] Creating Layer loss
I0428 19:32:23.539973 22825 net.cpp:408] loss <- ip3
I0428 19:32:23.539976 22825 net.cpp:408] loss <- label
I0428 19:32:23.539981 22825 net.cpp:382] loss -> loss
I0428 19:32:23.539995 22825 layer_factory.hpp:77] Creating layer loss
I0428 19:32:23.540261 22825 net.cpp:124] Setting up loss
I0428 19:32:23.540269 22825 net.cpp:131] Top shape: (1)
I0428 19:32:23.540272 22825 net.cpp:134]     with loss weight 1
I0428 19:32:23.540287 22825 net.cpp:139] Memory required for data: 2087684
I0428 19:32:23.540290 22825 net.cpp:200] loss needs backward computation.
I0428 19:32:23.540293 22825 net.cpp:200] relu3 needs backward computation.
I0428 19:32:23.540297 22825 net.cpp:200] ip3 needs backward computation.
I0428 19:32:23.540299 22825 net.cpp:200] relu2 needs backward computation.
I0428 19:32:23.540302 22825 net.cpp:200] ip2 needs backward computation.
I0428 19:32:23.540304 22825 net.cpp:200] relu1 needs backward computation.
I0428 19:32:23.540307 22825 net.cpp:200] ip1 needs backward computation.
I0428 19:32:23.540318 22825 net.cpp:200] pool0 needs backward computation.
I0428 19:32:23.540321 22825 net.cpp:200] conv0 needs backward computation.
I0428 19:32:23.540324 22825 net.cpp:202] mnist does not need backward computation.
I0428 19:32:23.540328 22825 net.cpp:244] This network produces output loss
I0428 19:32:23.540336 22825 net.cpp:257] Network initialization done.
I0428 19:32:23.540647 22825 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test151.prototxt
I0428 19:32:23.540673 22825 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:23.540755 22825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:23.540896 22825 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:23.540947 22825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:23.540961 22825 net.cpp:86] Creating Layer mnist
I0428 19:32:23.540966 22825 net.cpp:382] mnist -> data
I0428 19:32:23.540974 22825 net.cpp:382] mnist -> label
I0428 19:32:23.541067 22825 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:23.542212 22825 net.cpp:124] Setting up mnist
I0428 19:32:23.542224 22825 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:23.542228 22825 net.cpp:131] Top shape: 100 (100)
I0428 19:32:23.542230 22825 net.cpp:139] Memory required for data: 314000
I0428 19:32:23.542234 22825 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:23.542239 22825 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:23.542243 22825 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:23.542248 22825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:23.542254 22825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:23.542348 22825 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:23.542354 22825 net.cpp:131] Top shape: 100 (100)
I0428 19:32:23.542358 22825 net.cpp:131] Top shape: 100 (100)
I0428 19:32:23.542361 22825 net.cpp:139] Memory required for data: 314800
I0428 19:32:23.542373 22825 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:23.542384 22825 net.cpp:86] Creating Layer conv0
I0428 19:32:23.542387 22825 net.cpp:408] conv0 <- data
I0428 19:32:23.542392 22825 net.cpp:382] conv0 -> conv0
I0428 19:32:23.544087 22825 net.cpp:124] Setting up conv0
I0428 19:32:23.544101 22825 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:23.544106 22825 net.cpp:139] Memory required for data: 2618800
I0428 19:32:23.544114 22825 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:23.544122 22825 net.cpp:86] Creating Layer pool0
I0428 19:32:23.544126 22825 net.cpp:408] pool0 <- conv0
I0428 19:32:23.544129 22825 net.cpp:382] pool0 -> pool0
I0428 19:32:23.544165 22825 net.cpp:124] Setting up pool0
I0428 19:32:23.544170 22825 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:23.544173 22825 net.cpp:139] Memory required for data: 3194800
I0428 19:32:23.544175 22825 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:23.544183 22825 net.cpp:86] Creating Layer ip1
I0428 19:32:23.544184 22825 net.cpp:408] ip1 <- pool0
I0428 19:32:23.544190 22825 net.cpp:382] ip1 -> ip1
I0428 19:32:23.544744 22825 net.cpp:124] Setting up ip1
I0428 19:32:23.544751 22825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:23.544754 22825 net.cpp:139] Memory required for data: 3214800
I0428 19:32:23.544778 22825 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:23.544782 22825 net.cpp:86] Creating Layer relu1
I0428 19:32:23.544801 22825 net.cpp:408] relu1 <- ip1
I0428 19:32:23.544808 22825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:23.545117 22825 net.cpp:124] Setting up relu1
I0428 19:32:23.545126 22825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:23.545145 22825 net.cpp:139] Memory required for data: 3234800
I0428 19:32:23.545147 22825 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:23.545155 22825 net.cpp:86] Creating Layer ip2
I0428 19:32:23.545156 22825 net.cpp:408] ip2 <- ip1
I0428 19:32:23.545161 22825 net.cpp:382] ip2 -> ip2
I0428 19:32:23.545305 22825 net.cpp:124] Setting up ip2
I0428 19:32:23.545312 22825 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:23.545315 22825 net.cpp:139] Memory required for data: 3244800
I0428 19:32:23.545322 22825 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:23.545328 22825 net.cpp:86] Creating Layer relu2
I0428 19:32:23.545331 22825 net.cpp:408] relu2 <- ip2
I0428 19:32:23.545336 22825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:23.546075 22825 net.cpp:124] Setting up relu2
I0428 19:32:23.546093 22825 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:23.546125 22825 net.cpp:139] Memory required for data: 3254800
I0428 19:32:23.546129 22825 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:23.546138 22825 net.cpp:86] Creating Layer ip3
I0428 19:32:23.546141 22825 net.cpp:408] ip3 <- ip2
I0428 19:32:23.546147 22825 net.cpp:382] ip3 -> ip3
I0428 19:32:23.546291 22825 net.cpp:124] Setting up ip3
I0428 19:32:23.546298 22825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:23.546301 22825 net.cpp:139] Memory required for data: 3258800
I0428 19:32:23.546321 22825 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:23.546327 22825 net.cpp:86] Creating Layer relu3
I0428 19:32:23.546330 22825 net.cpp:408] relu3 <- ip3
I0428 19:32:23.546334 22825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:23.546564 22825 net.cpp:124] Setting up relu3
I0428 19:32:23.546574 22825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:23.546577 22825 net.cpp:139] Memory required for data: 3262800
I0428 19:32:23.546581 22825 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:23.546592 22825 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:23.546597 22825 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:23.546602 22825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:23.546609 22825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:23.546654 22825 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:23.546659 22825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:23.546669 22825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:23.546680 22825 net.cpp:139] Memory required for data: 3270800
I0428 19:32:23.546684 22825 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:23.546689 22825 net.cpp:86] Creating Layer accuracy
I0428 19:32:23.546691 22825 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:23.546695 22825 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:23.546700 22825 net.cpp:382] accuracy -> accuracy
I0428 19:32:23.546707 22825 net.cpp:124] Setting up accuracy
I0428 19:32:23.546710 22825 net.cpp:131] Top shape: (1)
I0428 19:32:23.546713 22825 net.cpp:139] Memory required for data: 3270804
I0428 19:32:23.546716 22825 layer_factory.hpp:77] Creating layer loss
I0428 19:32:23.546721 22825 net.cpp:86] Creating Layer loss
I0428 19:32:23.546725 22825 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:23.546728 22825 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:23.546732 22825 net.cpp:382] loss -> loss
I0428 19:32:23.546737 22825 layer_factory.hpp:77] Creating layer loss
I0428 19:32:23.546962 22825 net.cpp:124] Setting up loss
I0428 19:32:23.546972 22825 net.cpp:131] Top shape: (1)
I0428 19:32:23.546974 22825 net.cpp:134]     with loss weight 1
I0428 19:32:23.547008 22825 net.cpp:139] Memory required for data: 3270808
I0428 19:32:23.547013 22825 net.cpp:200] loss needs backward computation.
I0428 19:32:23.547016 22825 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:23.547019 22825 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:23.547022 22825 net.cpp:200] relu3 needs backward computation.
I0428 19:32:23.547031 22825 net.cpp:200] ip3 needs backward computation.
I0428 19:32:23.547034 22825 net.cpp:200] relu2 needs backward computation.
I0428 19:32:23.547036 22825 net.cpp:200] ip2 needs backward computation.
I0428 19:32:23.547039 22825 net.cpp:200] relu1 needs backward computation.
I0428 19:32:23.547041 22825 net.cpp:200] ip1 needs backward computation.
I0428 19:32:23.547045 22825 net.cpp:200] pool0 needs backward computation.
I0428 19:32:23.547049 22825 net.cpp:200] conv0 needs backward computation.
I0428 19:32:23.547052 22825 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:23.547056 22825 net.cpp:202] mnist does not need backward computation.
I0428 19:32:23.547058 22825 net.cpp:244] This network produces output accuracy
I0428 19:32:23.547080 22825 net.cpp:244] This network produces output loss
I0428 19:32:23.547091 22825 net.cpp:257] Network initialization done.
I0428 19:32:23.547127 22825 solver.cpp:56] Solver scaffolding done.
I0428 19:32:23.547422 22825 caffe.cpp:248] Starting Optimization
I0428 19:32:23.547430 22825 solver.cpp:273] Solving LeNet
I0428 19:32:23.547431 22825 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:23.548182 22825 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:23.552086 22825 blocking_queue.cpp:49] Waiting for data
I0428 19:32:23.625380 22832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:23.625934 22825 solver.cpp:398]     Test net output #0: accuracy = 0.0833
I0428 19:32:23.625953 22825 solver.cpp:398]     Test net output #1: loss = 2.30619 (* 1 = 2.30619 loss)
I0428 19:32:23.628430 22825 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809707s/100 iters), loss = 2.31533
I0428 19:32:23.628453 22825 solver.cpp:238]     Train net output #0: loss = 2.31533 (* 1 = 2.31533 loss)
I0428 19:32:23.628479 22825 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:23.712107 22825 solver.cpp:219] Iteration 100 (1195.64 iter/s, 0.0836371s/100 iters), loss = 0.926914
I0428 19:32:23.712147 22825 solver.cpp:238]     Train net output #0: loss = 0.926914 (* 1 = 0.926914 loss)
I0428 19:32:23.712157 22825 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:23.791435 22825 solver.cpp:219] Iteration 200 (1261.35 iter/s, 0.0792801s/100 iters), loss = 0.648599
I0428 19:32:23.791468 22825 solver.cpp:238]     Train net output #0: loss = 0.648599 (* 1 = 0.648599 loss)
I0428 19:32:23.791477 22825 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:23.868356 22825 solver.cpp:219] Iteration 300 (1300.73 iter/s, 0.0768799s/100 iters), loss = 0.539759
I0428 19:32:23.868388 22825 solver.cpp:238]     Train net output #0: loss = 0.539759 (* 1 = 0.539759 loss)
I0428 19:32:23.868396 22825 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:23.945183 22825 solver.cpp:219] Iteration 400 (1302.34 iter/s, 0.0767846s/100 iters), loss = 0.238789
I0428 19:32:23.945214 22825 solver.cpp:238]     Train net output #0: loss = 0.238789 (* 1 = 0.238789 loss)
I0428 19:32:23.945222 22825 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:24.021078 22825 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:24.074295 22832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:24.074841 22825 solver.cpp:398]     Test net output #0: accuracy = 0.8547
I0428 19:32:24.074865 22825 solver.cpp:398]     Test net output #1: loss = 0.390785 (* 1 = 0.390785 loss)
I0428 19:32:24.075659 22825 solver.cpp:219] Iteration 500 (766.671 iter/s, 0.130434s/100 iters), loss = 0.373512
I0428 19:32:24.075709 22825 solver.cpp:238]     Train net output #0: loss = 0.373512 (* 1 = 0.373512 loss)
I0428 19:32:24.075721 22825 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:24.154103 22825 solver.cpp:219] Iteration 600 (1275.56 iter/s, 0.0783968s/100 iters), loss = 0.415677
I0428 19:32:24.154135 22825 solver.cpp:238]     Train net output #0: loss = 0.415677 (* 1 = 0.415677 loss)
I0428 19:32:24.154148 22825 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:24.231022 22825 solver.cpp:219] Iteration 700 (1300.75 iter/s, 0.0768788s/100 iters), loss = 0.593704
I0428 19:32:24.231055 22825 solver.cpp:238]     Train net output #0: loss = 0.593704 (* 1 = 0.593704 loss)
I0428 19:32:24.231062 22825 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:24.307759 22825 solver.cpp:219] Iteration 800 (1303.89 iter/s, 0.0766935s/100 iters), loss = 0.517473
I0428 19:32:24.307791 22825 solver.cpp:238]     Train net output #0: loss = 0.517473 (* 1 = 0.517473 loss)
I0428 19:32:24.307799 22825 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:24.394891 22825 solver.cpp:219] Iteration 900 (1148.27 iter/s, 0.0870872s/100 iters), loss = 0.45553
I0428 19:32:24.394933 22825 solver.cpp:238]     Train net output #0: loss = 0.45553 (* 1 = 0.45553 loss)
I0428 19:32:24.394943 22825 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:24.421946 22831 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:24.474387 22825 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:24.476250 22825 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:24.477344 22825 solver.cpp:311] Iteration 1000, loss = 0.392229
I0428 19:32:24.477365 22825 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:24.538256 22832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:24.538800 22825 solver.cpp:398]     Test net output #0: accuracy = 0.8734
I0428 19:32:24.538825 22825 solver.cpp:398]     Test net output #1: loss = 0.329176 (* 1 = 0.329176 loss)
I0428 19:32:24.538830 22825 solver.cpp:316] Optimization Done.
I0428 19:32:24.538837 22825 caffe.cpp:259] Optimization Done.
