I0428 19:58:53.991765 29109 caffe.cpp:218] Using GPUs 0
I0428 19:58:54.029158 29109 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:54.487121 29109 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test832.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:54.487267 29109 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test832.prototxt
I0428 19:58:54.487632 29109 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:54.487663 29109 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:54.487754 29109 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:54.487813 29109 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:54.487895 29109 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:54.487915 29109 net.cpp:86] Creating Layer mnist
I0428 19:58:54.487921 29109 net.cpp:382] mnist -> data
I0428 19:58:54.487939 29109 net.cpp:382] mnist -> label
I0428 19:58:54.488955 29109 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:54.491207 29109 net.cpp:124] Setting up mnist
I0428 19:58:54.491237 29109 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:54.491250 29109 net.cpp:131] Top shape: 64 (64)
I0428 19:58:54.491252 29109 net.cpp:139] Memory required for data: 200960
I0428 19:58:54.491258 29109 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:54.491271 29109 net.cpp:86] Creating Layer conv0
I0428 19:58:54.491288 29109 net.cpp:408] conv0 <- data
I0428 19:58:54.491297 29109 net.cpp:382] conv0 -> conv0
I0428 19:58:54.723201 29109 net.cpp:124] Setting up conv0
I0428 19:58:54.723240 29109 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:54.723244 29109 net.cpp:139] Memory required for data: 1675520
I0428 19:58:54.723259 29109 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:54.723271 29109 net.cpp:86] Creating Layer pool0
I0428 19:58:54.723275 29109 net.cpp:408] pool0 <- conv0
I0428 19:58:54.723280 29109 net.cpp:382] pool0 -> pool0
I0428 19:58:54.723341 29109 net.cpp:124] Setting up pool0
I0428 19:58:54.723347 29109 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:54.723351 29109 net.cpp:139] Memory required for data: 2044160
I0428 19:58:54.723354 29109 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:54.723364 29109 net.cpp:86] Creating Layer conv1
I0428 19:58:54.723367 29109 net.cpp:408] conv1 <- pool0
I0428 19:58:54.723372 29109 net.cpp:382] conv1 -> conv1
I0428 19:58:54.726294 29109 net.cpp:124] Setting up conv1
I0428 19:58:54.726325 29109 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:54.726328 29109 net.cpp:139] Memory required for data: 2208000
I0428 19:58:54.726352 29109 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:54.726375 29109 net.cpp:86] Creating Layer pool1
I0428 19:58:54.726378 29109 net.cpp:408] pool1 <- conv1
I0428 19:58:54.726385 29109 net.cpp:382] pool1 -> pool1
I0428 19:58:54.726425 29109 net.cpp:124] Setting up pool1
I0428 19:58:54.726433 29109 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:54.726436 29109 net.cpp:139] Memory required for data: 2248960
I0428 19:58:54.726438 29109 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:54.726447 29109 net.cpp:86] Creating Layer ip1
I0428 19:58:54.726450 29109 net.cpp:408] ip1 <- pool1
I0428 19:58:54.726456 29109 net.cpp:382] ip1 -> ip1
I0428 19:58:54.726568 29109 net.cpp:124] Setting up ip1
I0428 19:58:54.726577 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.726579 29109 net.cpp:139] Memory required for data: 2251520
I0428 19:58:54.726588 29109 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:54.726603 29109 net.cpp:86] Creating Layer relu1
I0428 19:58:54.726606 29109 net.cpp:408] relu1 <- ip1
I0428 19:58:54.726613 29109 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:54.726811 29109 net.cpp:124] Setting up relu1
I0428 19:58:54.726821 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.726824 29109 net.cpp:139] Memory required for data: 2254080
I0428 19:58:54.726827 29109 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:54.726836 29109 net.cpp:86] Creating Layer ip2
I0428 19:58:54.726840 29109 net.cpp:408] ip2 <- ip1
I0428 19:58:54.726845 29109 net.cpp:382] ip2 -> ip2
I0428 19:58:54.726949 29109 net.cpp:124] Setting up ip2
I0428 19:58:54.726956 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.726959 29109 net.cpp:139] Memory required for data: 2256640
I0428 19:58:54.726965 29109 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:54.726971 29109 net.cpp:86] Creating Layer relu2
I0428 19:58:54.726974 29109 net.cpp:408] relu2 <- ip2
I0428 19:58:54.726980 29109 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:54.727854 29109 net.cpp:124] Setting up relu2
I0428 19:58:54.727866 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.727885 29109 net.cpp:139] Memory required for data: 2259200
I0428 19:58:54.727888 29109 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:54.727896 29109 net.cpp:86] Creating Layer ip3
I0428 19:58:54.727900 29109 net.cpp:408] ip3 <- ip2
I0428 19:58:54.727905 29109 net.cpp:382] ip3 -> ip3
I0428 19:58:54.728006 29109 net.cpp:124] Setting up ip3
I0428 19:58:54.728013 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.728016 29109 net.cpp:139] Memory required for data: 2261760
I0428 19:58:54.728024 29109 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:54.728030 29109 net.cpp:86] Creating Layer relu3
I0428 19:58:54.728034 29109 net.cpp:408] relu3 <- ip3
I0428 19:58:54.728037 29109 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:54.728210 29109 net.cpp:124] Setting up relu3
I0428 19:58:54.728219 29109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:54.728222 29109 net.cpp:139] Memory required for data: 2264320
I0428 19:58:54.728225 29109 layer_factory.hpp:77] Creating layer loss
I0428 19:58:54.728248 29109 net.cpp:86] Creating Layer loss
I0428 19:58:54.728267 29109 net.cpp:408] loss <- ip3
I0428 19:58:54.728271 29109 net.cpp:408] loss <- label
I0428 19:58:54.728276 29109 net.cpp:382] loss -> loss
I0428 19:58:54.728291 29109 layer_factory.hpp:77] Creating layer loss
I0428 19:58:54.728552 29109 net.cpp:124] Setting up loss
I0428 19:58:54.728576 29109 net.cpp:131] Top shape: (1)
I0428 19:58:54.728579 29109 net.cpp:134]     with loss weight 1
I0428 19:58:54.728622 29109 net.cpp:139] Memory required for data: 2264324
I0428 19:58:54.728626 29109 net.cpp:200] loss needs backward computation.
I0428 19:58:54.728628 29109 net.cpp:200] relu3 needs backward computation.
I0428 19:58:54.728631 29109 net.cpp:200] ip3 needs backward computation.
I0428 19:58:54.728636 29109 net.cpp:200] relu2 needs backward computation.
I0428 19:58:54.728638 29109 net.cpp:200] ip2 needs backward computation.
I0428 19:58:54.728641 29109 net.cpp:200] relu1 needs backward computation.
I0428 19:58:54.728643 29109 net.cpp:200] ip1 needs backward computation.
I0428 19:58:54.728646 29109 net.cpp:200] pool1 needs backward computation.
I0428 19:58:54.728651 29109 net.cpp:200] conv1 needs backward computation.
I0428 19:58:54.728653 29109 net.cpp:200] pool0 needs backward computation.
I0428 19:58:54.728657 29109 net.cpp:200] conv0 needs backward computation.
I0428 19:58:54.728659 29109 net.cpp:202] mnist does not need backward computation.
I0428 19:58:54.728662 29109 net.cpp:244] This network produces output loss
I0428 19:58:54.728670 29109 net.cpp:257] Network initialization done.
I0428 19:58:54.729080 29109 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test832.prototxt
I0428 19:58:54.729125 29109 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:54.729245 29109 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:54.729328 29109 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:54.729404 29109 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:54.729418 29109 net.cpp:86] Creating Layer mnist
I0428 19:58:54.729423 29109 net.cpp:382] mnist -> data
I0428 19:58:54.729431 29109 net.cpp:382] mnist -> label
I0428 19:58:54.729539 29109 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:54.731794 29109 net.cpp:124] Setting up mnist
I0428 19:58:54.731808 29109 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:54.731814 29109 net.cpp:131] Top shape: 100 (100)
I0428 19:58:54.731817 29109 net.cpp:139] Memory required for data: 314000
I0428 19:58:54.731822 29109 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:54.731828 29109 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:54.731835 29109 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:54.731842 29109 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:54.731849 29109 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:54.731981 29109 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:54.731990 29109 net.cpp:131] Top shape: 100 (100)
I0428 19:58:54.731994 29109 net.cpp:131] Top shape: 100 (100)
I0428 19:58:54.731997 29109 net.cpp:139] Memory required for data: 314800
I0428 19:58:54.732000 29109 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:54.732012 29109 net.cpp:86] Creating Layer conv0
I0428 19:58:54.732015 29109 net.cpp:408] conv0 <- data
I0428 19:58:54.732022 29109 net.cpp:382] conv0 -> conv0
I0428 19:58:54.733773 29109 net.cpp:124] Setting up conv0
I0428 19:58:54.733804 29109 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:54.733808 29109 net.cpp:139] Memory required for data: 2618800
I0428 19:58:54.733819 29109 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:54.733827 29109 net.cpp:86] Creating Layer pool0
I0428 19:58:54.733831 29109 net.cpp:408] pool0 <- conv0
I0428 19:58:54.733836 29109 net.cpp:382] pool0 -> pool0
I0428 19:58:54.733877 29109 net.cpp:124] Setting up pool0
I0428 19:58:54.733883 29109 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:54.733886 29109 net.cpp:139] Memory required for data: 3194800
I0428 19:58:54.733891 29109 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:54.733899 29109 net.cpp:86] Creating Layer conv1
I0428 19:58:54.733903 29109 net.cpp:408] conv1 <- pool0
I0428 19:58:54.733909 29109 net.cpp:382] conv1 -> conv1
I0428 19:58:54.736172 29109 net.cpp:124] Setting up conv1
I0428 19:58:54.736187 29109 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:54.736191 29109 net.cpp:139] Memory required for data: 3450800
I0428 19:58:54.736203 29109 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:54.736210 29109 net.cpp:86] Creating Layer pool1
I0428 19:58:54.736214 29109 net.cpp:408] pool1 <- conv1
I0428 19:58:54.736219 29109 net.cpp:382] pool1 -> pool1
I0428 19:58:54.736264 29109 net.cpp:124] Setting up pool1
I0428 19:58:54.736279 29109 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:54.736282 29109 net.cpp:139] Memory required for data: 3514800
I0428 19:58:54.736285 29109 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:54.736294 29109 net.cpp:86] Creating Layer ip1
I0428 19:58:54.736296 29109 net.cpp:408] ip1 <- pool1
I0428 19:58:54.736302 29109 net.cpp:382] ip1 -> ip1
I0428 19:58:54.736512 29109 net.cpp:124] Setting up ip1
I0428 19:58:54.736521 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.736536 29109 net.cpp:139] Memory required for data: 3518800
I0428 19:58:54.736544 29109 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:54.736552 29109 net.cpp:86] Creating Layer relu1
I0428 19:58:54.736555 29109 net.cpp:408] relu1 <- ip1
I0428 19:58:54.736562 29109 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:54.736752 29109 net.cpp:124] Setting up relu1
I0428 19:58:54.736763 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.736766 29109 net.cpp:139] Memory required for data: 3522800
I0428 19:58:54.736770 29109 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:54.736778 29109 net.cpp:86] Creating Layer ip2
I0428 19:58:54.736783 29109 net.cpp:408] ip2 <- ip1
I0428 19:58:54.736788 29109 net.cpp:382] ip2 -> ip2
I0428 19:58:54.736913 29109 net.cpp:124] Setting up ip2
I0428 19:58:54.736922 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.736925 29109 net.cpp:139] Memory required for data: 3526800
I0428 19:58:54.736932 29109 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:54.736938 29109 net.cpp:86] Creating Layer relu2
I0428 19:58:54.736943 29109 net.cpp:408] relu2 <- ip2
I0428 19:58:54.736946 29109 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:54.737120 29109 net.cpp:124] Setting up relu2
I0428 19:58:54.737130 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.737133 29109 net.cpp:139] Memory required for data: 3530800
I0428 19:58:54.737138 29109 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:54.737144 29109 net.cpp:86] Creating Layer ip3
I0428 19:58:54.737148 29109 net.cpp:408] ip3 <- ip2
I0428 19:58:54.737154 29109 net.cpp:382] ip3 -> ip3
I0428 19:58:54.737260 29109 net.cpp:124] Setting up ip3
I0428 19:58:54.737269 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.737273 29109 net.cpp:139] Memory required for data: 3534800
I0428 19:58:54.737282 29109 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:54.737288 29109 net.cpp:86] Creating Layer relu3
I0428 19:58:54.737293 29109 net.cpp:408] relu3 <- ip3
I0428 19:58:54.737296 29109 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:54.738235 29109 net.cpp:124] Setting up relu3
I0428 19:58:54.738248 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.738252 29109 net.cpp:139] Memory required for data: 3538800
I0428 19:58:54.738256 29109 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:54.738261 29109 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:54.738266 29109 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:54.738273 29109 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:54.738281 29109 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:54.738322 29109 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:54.738329 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.738333 29109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:54.738337 29109 net.cpp:139] Memory required for data: 3546800
I0428 19:58:54.738339 29109 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:54.738346 29109 net.cpp:86] Creating Layer accuracy
I0428 19:58:54.738350 29109 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:54.738355 29109 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:54.738371 29109 net.cpp:382] accuracy -> accuracy
I0428 19:58:54.738392 29109 net.cpp:124] Setting up accuracy
I0428 19:58:54.738396 29109 net.cpp:131] Top shape: (1)
I0428 19:58:54.738405 29109 net.cpp:139] Memory required for data: 3546804
I0428 19:58:54.738409 29109 layer_factory.hpp:77] Creating layer loss
I0428 19:58:54.738416 29109 net.cpp:86] Creating Layer loss
I0428 19:58:54.738420 29109 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:54.738423 29109 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:54.738428 29109 net.cpp:382] loss -> loss
I0428 19:58:54.738435 29109 layer_factory.hpp:77] Creating layer loss
I0428 19:58:54.738710 29109 net.cpp:124] Setting up loss
I0428 19:58:54.738720 29109 net.cpp:131] Top shape: (1)
I0428 19:58:54.738724 29109 net.cpp:134]     with loss weight 1
I0428 19:58:54.738731 29109 net.cpp:139] Memory required for data: 3546808
I0428 19:58:54.738759 29109 net.cpp:200] loss needs backward computation.
I0428 19:58:54.738762 29109 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:54.738767 29109 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:54.738770 29109 net.cpp:200] relu3 needs backward computation.
I0428 19:58:54.738772 29109 net.cpp:200] ip3 needs backward computation.
I0428 19:58:54.738781 29109 net.cpp:200] relu2 needs backward computation.
I0428 19:58:54.738785 29109 net.cpp:200] ip2 needs backward computation.
I0428 19:58:54.738787 29109 net.cpp:200] relu1 needs backward computation.
I0428 19:58:54.738790 29109 net.cpp:200] ip1 needs backward computation.
I0428 19:58:54.738793 29109 net.cpp:200] pool1 needs backward computation.
I0428 19:58:54.738797 29109 net.cpp:200] conv1 needs backward computation.
I0428 19:58:54.738801 29109 net.cpp:200] pool0 needs backward computation.
I0428 19:58:54.738803 29109 net.cpp:200] conv0 needs backward computation.
I0428 19:58:54.738806 29109 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:54.738816 29109 net.cpp:202] mnist does not need backward computation.
I0428 19:58:54.738818 29109 net.cpp:244] This network produces output accuracy
I0428 19:58:54.738821 29109 net.cpp:244] This network produces output loss
I0428 19:58:54.738834 29109 net.cpp:257] Network initialization done.
I0428 19:58:54.738878 29109 solver.cpp:56] Solver scaffolding done.
I0428 19:58:54.739303 29109 caffe.cpp:248] Starting Optimization
I0428 19:58:54.739311 29109 solver.cpp:273] Solving LeNet
I0428 19:58:54.739315 29109 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:54.739614 29109 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:54.743799 29109 blocking_queue.cpp:49] Waiting for data
I0428 19:58:54.814784 29116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:54.815279 29109 solver.cpp:398]     Test net output #0: accuracy = 0.082
I0428 19:58:54.815300 29109 solver.cpp:398]     Test net output #1: loss = 2.31782 (* 1 = 2.31782 loss)
I0428 19:58:54.817827 29109 solver.cpp:219] Iteration 0 (-1.03556e-42 iter/s, 0.0784835s/100 iters), loss = 2.31797
I0428 19:58:54.817860 29109 solver.cpp:238]     Train net output #0: loss = 2.31797 (* 1 = 2.31797 loss)
I0428 19:58:54.817872 29109 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:54.914714 29109 solver.cpp:219] Iteration 100 (1032.62 iter/s, 0.0968407s/100 iters), loss = 1.21574
I0428 19:58:54.914754 29109 solver.cpp:238]     Train net output #0: loss = 1.21574 (* 1 = 1.21574 loss)
I0428 19:58:54.914760 29109 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:54.996333 29109 solver.cpp:219] Iteration 200 (1225.73 iter/s, 0.0815842s/100 iters), loss = 0.872685
I0428 19:58:54.996371 29109 solver.cpp:238]     Train net output #0: loss = 0.872685 (* 1 = 0.872685 loss)
I0428 19:58:54.996376 29109 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:55.072947 29109 solver.cpp:219] Iteration 300 (1305.78 iter/s, 0.0765827s/100 iters), loss = 0.614374
I0428 19:58:55.072985 29109 solver.cpp:238]     Train net output #0: loss = 0.614374 (* 1 = 0.614374 loss)
I0428 19:58:55.072991 29109 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:55.148911 29109 solver.cpp:219] Iteration 400 (1316.97 iter/s, 0.0759316s/100 iters), loss = 0.370324
I0428 19:58:55.148949 29109 solver.cpp:238]     Train net output #0: loss = 0.370324 (* 1 = 0.370324 loss)
I0428 19:58:55.148955 29109 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:55.225340 29109 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:55.302184 29116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:55.302706 29109 solver.cpp:398]     Test net output #0: accuracy = 0.9335
I0428 19:58:55.302741 29109 solver.cpp:398]     Test net output #1: loss = 0.219844 (* 1 = 0.219844 loss)
I0428 19:58:55.303586 29109 solver.cpp:219] Iteration 500 (646.671 iter/s, 0.154638s/100 iters), loss = 0.261859
I0428 19:58:55.303654 29109 solver.cpp:238]     Train net output #0: loss = 0.261859 (* 1 = 0.261859 loss)
I0428 19:58:55.303661 29109 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:55.390353 29109 solver.cpp:219] Iteration 600 (1153.57 iter/s, 0.0866877s/100 iters), loss = 0.13607
I0428 19:58:55.390377 29109 solver.cpp:238]     Train net output #0: loss = 0.13607 (* 1 = 0.13607 loss)
I0428 19:58:55.390383 29109 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:55.469564 29109 solver.cpp:219] Iteration 700 (1262.97 iter/s, 0.0791788s/100 iters), loss = 0.264988
I0428 19:58:55.469602 29109 solver.cpp:238]     Train net output #0: loss = 0.264988 (* 1 = 0.264988 loss)
I0428 19:58:55.469609 29109 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:55.547387 29109 solver.cpp:219] Iteration 800 (1285.75 iter/s, 0.0777759s/100 iters), loss = 0.278151
I0428 19:58:55.547425 29109 solver.cpp:238]     Train net output #0: loss = 0.278151 (* 1 = 0.278151 loss)
I0428 19:58:55.547431 29109 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:55.624364 29109 solver.cpp:219] Iteration 900 (1299.64 iter/s, 0.0769444s/100 iters), loss = 0.281943
I0428 19:58:55.624388 29109 solver.cpp:238]     Train net output #0: loss = 0.281943 (* 1 = 0.281943 loss)
I0428 19:58:55.624394 29109 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:55.649812 29115 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:55.700187 29109 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:55.701017 29109 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:55.701578 29109 solver.cpp:311] Iteration 1000, loss = 0.0803519
I0428 19:58:55.701592 29109 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:55.776525 29116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:55.777076 29109 solver.cpp:398]     Test net output #0: accuracy = 0.9522
I0428 19:58:55.777112 29109 solver.cpp:398]     Test net output #1: loss = 0.152888 (* 1 = 0.152888 loss)
I0428 19:58:55.777117 29109 solver.cpp:316] Optimization Done.
I0428 19:58:55.777120 29109 caffe.cpp:259] Optimization Done.
