I0428 20:06:22.572023 30858 caffe.cpp:218] Using GPUs 0
I0428 20:06:22.609253 30858 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:23.122066 30858 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1026.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:23.122210 30858 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1026.prototxt
I0428 20:06:23.122632 30858 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:23.122651 30858 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:23.122755 30858 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:23.122834 30858 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:23.122947 30858 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:23.122975 30858 net.cpp:86] Creating Layer mnist
I0428 20:06:23.122983 30858 net.cpp:382] mnist -> data
I0428 20:06:23.123010 30858 net.cpp:382] mnist -> label
I0428 20:06:23.124114 30858 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:23.126600 30858 net.cpp:124] Setting up mnist
I0428 20:06:23.126618 30858 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:23.126626 30858 net.cpp:131] Top shape: 64 (64)
I0428 20:06:23.126629 30858 net.cpp:139] Memory required for data: 200960
I0428 20:06:23.126636 30858 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:23.126652 30858 net.cpp:86] Creating Layer conv0
I0428 20:06:23.126672 30858 net.cpp:408] conv0 <- data
I0428 20:06:23.126687 30858 net.cpp:382] conv0 -> conv0
I0428 20:06:23.413552 30858 net.cpp:124] Setting up conv0
I0428 20:06:23.413580 30858 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:23.413584 30858 net.cpp:139] Memory required for data: 3887360
I0428 20:06:23.413600 30858 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:23.413614 30858 net.cpp:86] Creating Layer pool0
I0428 20:06:23.413617 30858 net.cpp:408] pool0 <- conv0
I0428 20:06:23.413624 30858 net.cpp:382] pool0 -> pool0
I0428 20:06:23.413668 30858 net.cpp:124] Setting up pool0
I0428 20:06:23.413674 30858 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:23.413677 30858 net.cpp:139] Memory required for data: 4808960
I0428 20:06:23.413681 30858 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:23.413691 30858 net.cpp:86] Creating Layer conv1
I0428 20:06:23.413694 30858 net.cpp:408] conv1 <- pool0
I0428 20:06:23.413699 30858 net.cpp:382] conv1 -> conv1
I0428 20:06:23.416456 30858 net.cpp:124] Setting up conv1
I0428 20:06:23.416471 30858 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:23.416476 30858 net.cpp:139] Memory required for data: 4890880
I0428 20:06:23.416484 30858 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:23.416492 30858 net.cpp:86] Creating Layer pool1
I0428 20:06:23.416496 30858 net.cpp:408] pool1 <- conv1
I0428 20:06:23.416501 30858 net.cpp:382] pool1 -> pool1
I0428 20:06:23.416538 30858 net.cpp:124] Setting up pool1
I0428 20:06:23.416544 30858 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:23.416548 30858 net.cpp:139] Memory required for data: 4911360
I0428 20:06:23.416550 30858 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:23.416558 30858 net.cpp:86] Creating Layer ip1
I0428 20:06:23.416560 30858 net.cpp:408] ip1 <- pool1
I0428 20:06:23.416565 30858 net.cpp:382] ip1 -> ip1
I0428 20:06:23.416664 30858 net.cpp:124] Setting up ip1
I0428 20:06:23.416671 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.416676 30858 net.cpp:139] Memory required for data: 4913920
I0428 20:06:23.416682 30858 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:23.416688 30858 net.cpp:86] Creating Layer relu1
I0428 20:06:23.416692 30858 net.cpp:408] relu1 <- ip1
I0428 20:06:23.416695 30858 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:23.416887 30858 net.cpp:124] Setting up relu1
I0428 20:06:23.416898 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.416900 30858 net.cpp:139] Memory required for data: 4916480
I0428 20:06:23.416904 30858 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:23.416910 30858 net.cpp:86] Creating Layer ip2
I0428 20:06:23.416914 30858 net.cpp:408] ip2 <- ip1
I0428 20:06:23.416919 30858 net.cpp:382] ip2 -> ip2
I0428 20:06:23.417032 30858 net.cpp:124] Setting up ip2
I0428 20:06:23.417039 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.417042 30858 net.cpp:139] Memory required for data: 4919040
I0428 20:06:23.417048 30858 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:23.417054 30858 net.cpp:86] Creating Layer relu2
I0428 20:06:23.417057 30858 net.cpp:408] relu2 <- ip2
I0428 20:06:23.417062 30858 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:23.417793 30858 net.cpp:124] Setting up relu2
I0428 20:06:23.417805 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.417809 30858 net.cpp:139] Memory required for data: 4921600
I0428 20:06:23.417812 30858 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:23.417821 30858 net.cpp:86] Creating Layer ip3
I0428 20:06:23.417829 30858 net.cpp:408] ip3 <- ip2
I0428 20:06:23.417835 30858 net.cpp:382] ip3 -> ip3
I0428 20:06:23.417934 30858 net.cpp:124] Setting up ip3
I0428 20:06:23.417943 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.417945 30858 net.cpp:139] Memory required for data: 4924160
I0428 20:06:23.417954 30858 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:23.417959 30858 net.cpp:86] Creating Layer relu3
I0428 20:06:23.417963 30858 net.cpp:408] relu3 <- ip3
I0428 20:06:23.417966 30858 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:23.418140 30858 net.cpp:124] Setting up relu3
I0428 20:06:23.418150 30858 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:23.418154 30858 net.cpp:139] Memory required for data: 4926720
I0428 20:06:23.418156 30858 layer_factory.hpp:77] Creating layer loss
I0428 20:06:23.418162 30858 net.cpp:86] Creating Layer loss
I0428 20:06:23.418166 30858 net.cpp:408] loss <- ip3
I0428 20:06:23.418170 30858 net.cpp:408] loss <- label
I0428 20:06:23.418175 30858 net.cpp:382] loss -> loss
I0428 20:06:23.418195 30858 layer_factory.hpp:77] Creating layer loss
I0428 20:06:23.418428 30858 net.cpp:124] Setting up loss
I0428 20:06:23.418438 30858 net.cpp:131] Top shape: (1)
I0428 20:06:23.418442 30858 net.cpp:134]     with loss weight 1
I0428 20:06:23.418455 30858 net.cpp:139] Memory required for data: 4926724
I0428 20:06:23.418459 30858 net.cpp:200] loss needs backward computation.
I0428 20:06:23.418463 30858 net.cpp:200] relu3 needs backward computation.
I0428 20:06:23.418467 30858 net.cpp:200] ip3 needs backward computation.
I0428 20:06:23.418469 30858 net.cpp:200] relu2 needs backward computation.
I0428 20:06:23.418473 30858 net.cpp:200] ip2 needs backward computation.
I0428 20:06:23.418475 30858 net.cpp:200] relu1 needs backward computation.
I0428 20:06:23.418478 30858 net.cpp:200] ip1 needs backward computation.
I0428 20:06:23.418481 30858 net.cpp:200] pool1 needs backward computation.
I0428 20:06:23.418484 30858 net.cpp:200] conv1 needs backward computation.
I0428 20:06:23.418488 30858 net.cpp:200] pool0 needs backward computation.
I0428 20:06:23.418490 30858 net.cpp:200] conv0 needs backward computation.
I0428 20:06:23.418494 30858 net.cpp:202] mnist does not need backward computation.
I0428 20:06:23.418496 30858 net.cpp:244] This network produces output loss
I0428 20:06:23.418506 30858 net.cpp:257] Network initialization done.
I0428 20:06:23.418841 30858 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1026.prototxt
I0428 20:06:23.418869 30858 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:23.418979 30858 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:23.419083 30858 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:23.419131 30858 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:23.419148 30858 net.cpp:86] Creating Layer mnist
I0428 20:06:23.419153 30858 net.cpp:382] mnist -> data
I0428 20:06:23.419162 30858 net.cpp:382] mnist -> label
I0428 20:06:23.419250 30858 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:23.421193 30858 net.cpp:124] Setting up mnist
I0428 20:06:23.421210 30858 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:23.421214 30858 net.cpp:131] Top shape: 100 (100)
I0428 20:06:23.421217 30858 net.cpp:139] Memory required for data: 314000
I0428 20:06:23.421221 30858 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:23.421231 30858 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:23.421234 30858 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:23.421239 30858 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:23.421245 30858 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:23.421353 30858 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:23.421360 30858 net.cpp:131] Top shape: 100 (100)
I0428 20:06:23.421365 30858 net.cpp:131] Top shape: 100 (100)
I0428 20:06:23.421367 30858 net.cpp:139] Memory required for data: 314800
I0428 20:06:23.421370 30858 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:23.421380 30858 net.cpp:86] Creating Layer conv0
I0428 20:06:23.421383 30858 net.cpp:408] conv0 <- data
I0428 20:06:23.421391 30858 net.cpp:382] conv0 -> conv0
I0428 20:06:23.423069 30858 net.cpp:124] Setting up conv0
I0428 20:06:23.423081 30858 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:23.423085 30858 net.cpp:139] Memory required for data: 6074800
I0428 20:06:23.423094 30858 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:23.423102 30858 net.cpp:86] Creating Layer pool0
I0428 20:06:23.423105 30858 net.cpp:408] pool0 <- conv0
I0428 20:06:23.423110 30858 net.cpp:382] pool0 -> pool0
I0428 20:06:23.423146 30858 net.cpp:124] Setting up pool0
I0428 20:06:23.423151 30858 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:23.423154 30858 net.cpp:139] Memory required for data: 7514800
I0428 20:06:23.423157 30858 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:23.423166 30858 net.cpp:86] Creating Layer conv1
I0428 20:06:23.423169 30858 net.cpp:408] conv1 <- pool0
I0428 20:06:23.423176 30858 net.cpp:382] conv1 -> conv1
I0428 20:06:23.425249 30858 net.cpp:124] Setting up conv1
I0428 20:06:23.425264 30858 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:23.425268 30858 net.cpp:139] Memory required for data: 7642800
I0428 20:06:23.425287 30858 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:23.425297 30858 net.cpp:86] Creating Layer pool1
I0428 20:06:23.425300 30858 net.cpp:408] pool1 <- conv1
I0428 20:06:23.425307 30858 net.cpp:382] pool1 -> pool1
I0428 20:06:23.425346 30858 net.cpp:124] Setting up pool1
I0428 20:06:23.425356 30858 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:23.425359 30858 net.cpp:139] Memory required for data: 7674800
I0428 20:06:23.425361 30858 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:23.425369 30858 net.cpp:86] Creating Layer ip1
I0428 20:06:23.425372 30858 net.cpp:408] ip1 <- pool1
I0428 20:06:23.425376 30858 net.cpp:382] ip1 -> ip1
I0428 20:06:23.425524 30858 net.cpp:124] Setting up ip1
I0428 20:06:23.425532 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.425546 30858 net.cpp:139] Memory required for data: 7678800
I0428 20:06:23.425554 30858 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:23.425561 30858 net.cpp:86] Creating Layer relu1
I0428 20:06:23.425565 30858 net.cpp:408] relu1 <- ip1
I0428 20:06:23.425570 30858 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:23.425796 30858 net.cpp:124] Setting up relu1
I0428 20:06:23.425806 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.425809 30858 net.cpp:139] Memory required for data: 7682800
I0428 20:06:23.425817 30858 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:23.425827 30858 net.cpp:86] Creating Layer ip2
I0428 20:06:23.425829 30858 net.cpp:408] ip2 <- ip1
I0428 20:06:23.425843 30858 net.cpp:382] ip2 -> ip2
I0428 20:06:23.425946 30858 net.cpp:124] Setting up ip2
I0428 20:06:23.425953 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.425956 30858 net.cpp:139] Memory required for data: 7686800
I0428 20:06:23.425961 30858 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:23.425966 30858 net.cpp:86] Creating Layer relu2
I0428 20:06:23.425969 30858 net.cpp:408] relu2 <- ip2
I0428 20:06:23.425973 30858 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:23.426129 30858 net.cpp:124] Setting up relu2
I0428 20:06:23.426137 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.426141 30858 net.cpp:139] Memory required for data: 7690800
I0428 20:06:23.426143 30858 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:23.426148 30858 net.cpp:86] Creating Layer ip3
I0428 20:06:23.426151 30858 net.cpp:408] ip3 <- ip2
I0428 20:06:23.426157 30858 net.cpp:382] ip3 -> ip3
I0428 20:06:23.426251 30858 net.cpp:124] Setting up ip3
I0428 20:06:23.426259 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.426261 30858 net.cpp:139] Memory required for data: 7694800
I0428 20:06:23.426270 30858 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:23.426275 30858 net.cpp:86] Creating Layer relu3
I0428 20:06:23.426278 30858 net.cpp:408] relu3 <- ip3
I0428 20:06:23.426282 30858 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:23.427088 30858 net.cpp:124] Setting up relu3
I0428 20:06:23.427100 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.427103 30858 net.cpp:139] Memory required for data: 7698800
I0428 20:06:23.427106 30858 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:23.427111 30858 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:23.427115 30858 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:23.427121 30858 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:23.427126 30858 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:23.427175 30858 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:23.427181 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.427186 30858 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:23.427188 30858 net.cpp:139] Memory required for data: 7706800
I0428 20:06:23.427191 30858 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:23.427196 30858 net.cpp:86] Creating Layer accuracy
I0428 20:06:23.427199 30858 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:23.427203 30858 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:23.427209 30858 net.cpp:382] accuracy -> accuracy
I0428 20:06:23.427217 30858 net.cpp:124] Setting up accuracy
I0428 20:06:23.427220 30858 net.cpp:131] Top shape: (1)
I0428 20:06:23.427224 30858 net.cpp:139] Memory required for data: 7706804
I0428 20:06:23.427227 30858 layer_factory.hpp:77] Creating layer loss
I0428 20:06:23.427232 30858 net.cpp:86] Creating Layer loss
I0428 20:06:23.427234 30858 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:23.427237 30858 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:23.427242 30858 net.cpp:382] loss -> loss
I0428 20:06:23.427248 30858 layer_factory.hpp:77] Creating layer loss
I0428 20:06:23.427487 30858 net.cpp:124] Setting up loss
I0428 20:06:23.427496 30858 net.cpp:131] Top shape: (1)
I0428 20:06:23.427500 30858 net.cpp:134]     with loss weight 1
I0428 20:06:23.427506 30858 net.cpp:139] Memory required for data: 7706808
I0428 20:06:23.427520 30858 net.cpp:200] loss needs backward computation.
I0428 20:06:23.427523 30858 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:23.427527 30858 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:23.427531 30858 net.cpp:200] relu3 needs backward computation.
I0428 20:06:23.427533 30858 net.cpp:200] ip3 needs backward computation.
I0428 20:06:23.427537 30858 net.cpp:200] relu2 needs backward computation.
I0428 20:06:23.427541 30858 net.cpp:200] ip2 needs backward computation.
I0428 20:06:23.427542 30858 net.cpp:200] relu1 needs backward computation.
I0428 20:06:23.427552 30858 net.cpp:200] ip1 needs backward computation.
I0428 20:06:23.427556 30858 net.cpp:200] pool1 needs backward computation.
I0428 20:06:23.427558 30858 net.cpp:200] conv1 needs backward computation.
I0428 20:06:23.427561 30858 net.cpp:200] pool0 needs backward computation.
I0428 20:06:23.427564 30858 net.cpp:200] conv0 needs backward computation.
I0428 20:06:23.427568 30858 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:23.427592 30858 net.cpp:202] mnist does not need backward computation.
I0428 20:06:23.427594 30858 net.cpp:244] This network produces output accuracy
I0428 20:06:23.427597 30858 net.cpp:244] This network produces output loss
I0428 20:06:23.427625 30858 net.cpp:257] Network initialization done.
I0428 20:06:23.427670 30858 solver.cpp:56] Solver scaffolding done.
I0428 20:06:23.428058 30858 caffe.cpp:248] Starting Optimization
I0428 20:06:23.428066 30858 solver.cpp:273] Solving LeNet
I0428 20:06:23.428068 30858 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:23.428915 30858 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:23.433856 30858 blocking_queue.cpp:49] Waiting for data
I0428 20:06:23.504292 30865 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:23.504910 30858 solver.cpp:398]     Test net output #0: accuracy = 0.0995
I0428 20:06:23.504948 30858 solver.cpp:398]     Test net output #1: loss = 2.3043 (* 1 = 2.3043 loss)
I0428 20:06:23.508314 30858 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802146s/100 iters), loss = 2.30044
I0428 20:06:23.508337 30858 solver.cpp:238]     Train net output #0: loss = 2.30044 (* 1 = 2.30044 loss)
I0428 20:06:23.508350 30858 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:23.595789 30858 solver.cpp:219] Iteration 100 (1143.64 iter/s, 0.0874403s/100 iters), loss = 0.931267
I0428 20:06:23.595829 30858 solver.cpp:238]     Train net output #0: loss = 0.931267 (* 1 = 0.931267 loss)
I0428 20:06:23.595834 30858 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:23.683658 30858 solver.cpp:219] Iteration 200 (1138.49 iter/s, 0.0878356s/100 iters), loss = 0.754458
I0428 20:06:23.683696 30858 solver.cpp:238]     Train net output #0: loss = 0.754458 (* 1 = 0.754458 loss)
I0428 20:06:23.683702 30858 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:23.771993 30858 solver.cpp:219] Iteration 300 (1132.48 iter/s, 0.0883016s/100 iters), loss = 0.761357
I0428 20:06:23.772017 30858 solver.cpp:238]     Train net output #0: loss = 0.761357 (* 1 = 0.761357 loss)
I0428 20:06:23.772022 30858 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:23.858604 30858 solver.cpp:219] Iteration 400 (1155.03 iter/s, 0.0865782s/100 iters), loss = 0.778318
I0428 20:06:23.858642 30858 solver.cpp:238]     Train net output #0: loss = 0.778318 (* 1 = 0.778318 loss)
I0428 20:06:23.858649 30858 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:23.944274 30858 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:23.997166 30865 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:23.998464 30858 solver.cpp:398]     Test net output #0: accuracy = 0.8433
I0428 20:06:23.998486 30858 solver.cpp:398]     Test net output #1: loss = 0.471254 (* 1 = 0.471254 loss)
I0428 20:06:23.999337 30858 solver.cpp:219] Iteration 500 (710.744 iter/s, 0.140698s/100 iters), loss = 0.598786
I0428 20:06:23.999358 30858 solver.cpp:238]     Train net output #0: loss = 0.598786 (* 1 = 0.598786 loss)
I0428 20:06:23.999379 30858 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:24.084916 30858 solver.cpp:219] Iteration 600 (1168.94 iter/s, 0.0855478s/100 iters), loss = 0.256505
I0428 20:06:24.084955 30858 solver.cpp:238]     Train net output #0: loss = 0.256505 (* 1 = 0.256505 loss)
I0428 20:06:24.084961 30858 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:24.170177 30858 solver.cpp:219] Iteration 700 (1173.32 iter/s, 0.0852285s/100 iters), loss = 0.435957
I0428 20:06:24.170217 30858 solver.cpp:238]     Train net output #0: loss = 0.435957 (* 1 = 0.435957 loss)
I0428 20:06:24.170222 30858 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:24.255007 30858 solver.cpp:219] Iteration 800 (1179.3 iter/s, 0.0847964s/100 iters), loss = 0.411081
I0428 20:06:24.255046 30858 solver.cpp:238]     Train net output #0: loss = 0.411081 (* 1 = 0.411081 loss)
I0428 20:06:24.255051 30858 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:24.339061 30858 solver.cpp:219] Iteration 900 (1190.18 iter/s, 0.0840212s/100 iters), loss = 0.365531
I0428 20:06:24.339099 30858 solver.cpp:238]     Train net output #0: loss = 0.365531 (* 1 = 0.365531 loss)
I0428 20:06:24.339105 30858 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:24.367132 30864 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:24.423001 30858 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:24.423848 30858 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:24.424465 30858 solver.cpp:311] Iteration 1000, loss = 0.293892
I0428 20:06:24.424480 30858 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:24.477157 30865 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:24.478608 30858 solver.cpp:398]     Test net output #0: accuracy = 0.8606
I0428 20:06:24.478642 30858 solver.cpp:398]     Test net output #1: loss = 0.415809 (* 1 = 0.415809 loss)
I0428 20:06:24.478649 30858 solver.cpp:316] Optimization Done.
I0428 20:06:24.478652 30858 caffe.cpp:259] Optimization Done.
