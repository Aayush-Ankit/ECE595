I0428 20:17:27.628979   874 caffe.cpp:218] Using GPUs 0
I0428 20:17:27.665809   874 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:28.176746   874 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1295.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:28.177348   874 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1295.prototxt
I0428 20:17:28.177775   874 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:28.177794   874 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:28.177884   874 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:17:28.177961   874 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:28.178058   874 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:28.178081   874 net.cpp:86] Creating Layer mnist
I0428 20:17:28.178091   874 net.cpp:382] mnist -> data
I0428 20:17:28.178112   874 net.cpp:382] mnist -> label
I0428 20:17:28.179204   874 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:28.181706   874 net.cpp:124] Setting up mnist
I0428 20:17:28.181726   874 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:28.181732   874 net.cpp:131] Top shape: 64 (64)
I0428 20:17:28.181736   874 net.cpp:139] Memory required for data: 200960
I0428 20:17:28.181743   874 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:28.181774   874 net.cpp:86] Creating Layer conv0
I0428 20:17:28.181780   874 net.cpp:408] conv0 <- data
I0428 20:17:28.181792   874 net.cpp:382] conv0 -> conv0
I0428 20:17:28.473158   874 net.cpp:124] Setting up conv0
I0428 20:17:28.473191   874 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:28.473196   874 net.cpp:139] Memory required for data: 7573760
I0428 20:17:28.473238   874 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:28.473254   874 net.cpp:86] Creating Layer pool0
I0428 20:17:28.473259   874 net.cpp:408] pool0 <- conv0
I0428 20:17:28.473266   874 net.cpp:382] pool0 -> pool0
I0428 20:17:28.473325   874 net.cpp:124] Setting up pool0
I0428 20:17:28.473335   874 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:28.473338   874 net.cpp:139] Memory required for data: 9416960
I0428 20:17:28.473341   874 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:28.473354   874 net.cpp:86] Creating Layer conv1
I0428 20:17:28.473358   874 net.cpp:408] conv1 <- pool0
I0428 20:17:28.473364   874 net.cpp:382] conv1 -> conv1
I0428 20:17:28.476603   874 net.cpp:124] Setting up conv1
I0428 20:17:28.476621   874 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:28.476626   874 net.cpp:139] Memory required for data: 9580800
I0428 20:17:28.476637   874 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:28.476646   874 net.cpp:86] Creating Layer pool1
I0428 20:17:28.476651   874 net.cpp:408] pool1 <- conv1
I0428 20:17:28.476658   874 net.cpp:382] pool1 -> pool1
I0428 20:17:28.476704   874 net.cpp:124] Setting up pool1
I0428 20:17:28.476711   874 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:28.476713   874 net.cpp:139] Memory required for data: 9621760
I0428 20:17:28.476717   874 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:28.476727   874 net.cpp:86] Creating Layer ip1
I0428 20:17:28.476730   874 net.cpp:408] ip1 <- pool1
I0428 20:17:28.476737   874 net.cpp:382] ip1 -> ip1
I0428 20:17:28.476899   874 net.cpp:124] Setting up ip1
I0428 20:17:28.476910   874 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:17:28.476914   874 net.cpp:139] Memory required for data: 9628160
I0428 20:17:28.476922   874 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:28.476930   874 net.cpp:86] Creating Layer relu1
I0428 20:17:28.476933   874 net.cpp:408] relu1 <- ip1
I0428 20:17:28.476939   874 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:28.477151   874 net.cpp:124] Setting up relu1
I0428 20:17:28.477161   874 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:17:28.477165   874 net.cpp:139] Memory required for data: 9634560
I0428 20:17:28.477169   874 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:28.477179   874 net.cpp:86] Creating Layer ip2
I0428 20:17:28.477182   874 net.cpp:408] ip2 <- ip1
I0428 20:17:28.477190   874 net.cpp:382] ip2 -> ip2
I0428 20:17:28.477308   874 net.cpp:124] Setting up ip2
I0428 20:17:28.477318   874 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:28.477320   874 net.cpp:139] Memory required for data: 9637120
I0428 20:17:28.477327   874 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:28.477334   874 net.cpp:86] Creating Layer relu2
I0428 20:17:28.477339   874 net.cpp:408] relu2 <- ip2
I0428 20:17:28.477344   874 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:28.478198   874 net.cpp:124] Setting up relu2
I0428 20:17:28.478212   874 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:28.478216   874 net.cpp:139] Memory required for data: 9639680
I0428 20:17:28.478220   874 layer_factory.hpp:77] Creating layer loss
I0428 20:17:28.478227   874 net.cpp:86] Creating Layer loss
I0428 20:17:28.478231   874 net.cpp:408] loss <- ip2
I0428 20:17:28.478236   874 net.cpp:408] loss <- label
I0428 20:17:28.478245   874 net.cpp:382] loss -> loss
I0428 20:17:28.478267   874 layer_factory.hpp:77] Creating layer loss
I0428 20:17:28.478561   874 net.cpp:124] Setting up loss
I0428 20:17:28.478572   874 net.cpp:131] Top shape: (1)
I0428 20:17:28.478576   874 net.cpp:134]     with loss weight 1
I0428 20:17:28.478592   874 net.cpp:139] Memory required for data: 9639684
I0428 20:17:28.478596   874 net.cpp:200] loss needs backward computation.
I0428 20:17:28.478600   874 net.cpp:200] relu2 needs backward computation.
I0428 20:17:28.478605   874 net.cpp:200] ip2 needs backward computation.
I0428 20:17:28.478607   874 net.cpp:200] relu1 needs backward computation.
I0428 20:17:28.478610   874 net.cpp:200] ip1 needs backward computation.
I0428 20:17:28.478626   874 net.cpp:200] pool1 needs backward computation.
I0428 20:17:28.478631   874 net.cpp:200] conv1 needs backward computation.
I0428 20:17:28.478633   874 net.cpp:200] pool0 needs backward computation.
I0428 20:17:28.478636   874 net.cpp:200] conv0 needs backward computation.
I0428 20:17:28.478641   874 net.cpp:202] mnist does not need backward computation.
I0428 20:17:28.478643   874 net.cpp:244] This network produces output loss
I0428 20:17:28.478655   874 net.cpp:257] Network initialization done.
I0428 20:17:28.479001   874 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1295.prototxt
I0428 20:17:28.479030   874 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:28.479133   874 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:17:28.479212   874 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:28.479264   874 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:28.479279   874 net.cpp:86] Creating Layer mnist
I0428 20:17:28.479285   874 net.cpp:382] mnist -> data
I0428 20:17:28.479292   874 net.cpp:382] mnist -> label
I0428 20:17:28.479398   874 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:28.481586   874 net.cpp:124] Setting up mnist
I0428 20:17:28.481602   874 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:28.481608   874 net.cpp:131] Top shape: 100 (100)
I0428 20:17:28.481611   874 net.cpp:139] Memory required for data: 314000
I0428 20:17:28.481616   874 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:28.481623   874 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:28.481627   874 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:28.481633   874 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:28.481642   874 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:28.481742   874 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:28.481752   874 net.cpp:131] Top shape: 100 (100)
I0428 20:17:28.481757   874 net.cpp:131] Top shape: 100 (100)
I0428 20:17:28.481760   874 net.cpp:139] Memory required for data: 314800
I0428 20:17:28.481765   874 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:28.481776   874 net.cpp:86] Creating Layer conv0
I0428 20:17:28.481781   874 net.cpp:408] conv0 <- data
I0428 20:17:28.481787   874 net.cpp:382] conv0 -> conv0
I0428 20:17:28.483604   874 net.cpp:124] Setting up conv0
I0428 20:17:28.483620   874 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:28.483625   874 net.cpp:139] Memory required for data: 11834800
I0428 20:17:28.483636   874 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:28.483645   874 net.cpp:86] Creating Layer pool0
I0428 20:17:28.483650   874 net.cpp:408] pool0 <- conv0
I0428 20:17:28.483657   874 net.cpp:382] pool0 -> pool0
I0428 20:17:28.483703   874 net.cpp:124] Setting up pool0
I0428 20:17:28.483711   874 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:28.483714   874 net.cpp:139] Memory required for data: 14714800
I0428 20:17:28.483718   874 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:28.483731   874 net.cpp:86] Creating Layer conv1
I0428 20:17:28.483736   874 net.cpp:408] conv1 <- pool0
I0428 20:17:28.483743   874 net.cpp:382] conv1 -> conv1
I0428 20:17:28.485558   874 net.cpp:124] Setting up conv1
I0428 20:17:28.485575   874 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:28.485580   874 net.cpp:139] Memory required for data: 14970800
I0428 20:17:28.485591   874 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:28.485600   874 net.cpp:86] Creating Layer pool1
I0428 20:17:28.485605   874 net.cpp:408] pool1 <- conv1
I0428 20:17:28.485611   874 net.cpp:382] pool1 -> pool1
I0428 20:17:28.485656   874 net.cpp:124] Setting up pool1
I0428 20:17:28.485662   874 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:28.485666   874 net.cpp:139] Memory required for data: 15034800
I0428 20:17:28.485671   874 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:28.485677   874 net.cpp:86] Creating Layer ip1
I0428 20:17:28.485682   874 net.cpp:408] ip1 <- pool1
I0428 20:17:28.485687   874 net.cpp:382] ip1 -> ip1
I0428 20:17:28.485836   874 net.cpp:124] Setting up ip1
I0428 20:17:28.485846   874 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:17:28.485851   874 net.cpp:139] Memory required for data: 15044800
I0428 20:17:28.485858   874 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:28.485865   874 net.cpp:86] Creating Layer relu1
I0428 20:17:28.485869   874 net.cpp:408] relu1 <- ip1
I0428 20:17:28.485877   874 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:28.486099   874 net.cpp:124] Setting up relu1
I0428 20:17:28.486111   874 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:17:28.486115   874 net.cpp:139] Memory required for data: 15054800
I0428 20:17:28.486119   874 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:28.486129   874 net.cpp:86] Creating Layer ip2
I0428 20:17:28.486133   874 net.cpp:408] ip2 <- ip1
I0428 20:17:28.486140   874 net.cpp:382] ip2 -> ip2
I0428 20:17:28.486289   874 net.cpp:124] Setting up ip2
I0428 20:17:28.486299   874 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:28.486301   874 net.cpp:139] Memory required for data: 15058800
I0428 20:17:28.486309   874 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:28.486315   874 net.cpp:86] Creating Layer relu2
I0428 20:17:28.486320   874 net.cpp:408] relu2 <- ip2
I0428 20:17:28.486323   874 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:28.486513   874 net.cpp:124] Setting up relu2
I0428 20:17:28.486524   874 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:28.486527   874 net.cpp:139] Memory required for data: 15062800
I0428 20:17:28.486531   874 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:17:28.486538   874 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:17:28.486542   874 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:17:28.486547   874 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:17:28.486567   874 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:17:28.486613   874 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:17:28.486621   874 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:28.486626   874 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:28.486630   874 net.cpp:139] Memory required for data: 15070800
I0428 20:17:28.486634   874 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:28.486644   874 net.cpp:86] Creating Layer accuracy
I0428 20:17:28.486649   874 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:17:28.486654   874 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:28.486660   874 net.cpp:382] accuracy -> accuracy
I0428 20:17:28.486670   874 net.cpp:124] Setting up accuracy
I0428 20:17:28.486675   874 net.cpp:131] Top shape: (1)
I0428 20:17:28.486678   874 net.cpp:139] Memory required for data: 15070804
I0428 20:17:28.486681   874 layer_factory.hpp:77] Creating layer loss
I0428 20:17:28.486686   874 net.cpp:86] Creating Layer loss
I0428 20:17:28.486691   874 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:17:28.486696   874 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:28.486701   874 net.cpp:382] loss -> loss
I0428 20:17:28.486708   874 layer_factory.hpp:77] Creating layer loss
I0428 20:17:28.487108   874 net.cpp:124] Setting up loss
I0428 20:17:28.487119   874 net.cpp:131] Top shape: (1)
I0428 20:17:28.487123   874 net.cpp:134]     with loss weight 1
I0428 20:17:28.487131   874 net.cpp:139] Memory required for data: 15070808
I0428 20:17:28.487134   874 net.cpp:200] loss needs backward computation.
I0428 20:17:28.487139   874 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:28.487144   874 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:17:28.487148   874 net.cpp:200] relu2 needs backward computation.
I0428 20:17:28.487151   874 net.cpp:200] ip2 needs backward computation.
I0428 20:17:28.487155   874 net.cpp:200] relu1 needs backward computation.
I0428 20:17:28.487159   874 net.cpp:200] ip1 needs backward computation.
I0428 20:17:28.487162   874 net.cpp:200] pool1 needs backward computation.
I0428 20:17:28.487166   874 net.cpp:200] conv1 needs backward computation.
I0428 20:17:28.487169   874 net.cpp:200] pool0 needs backward computation.
I0428 20:17:28.487174   874 net.cpp:200] conv0 needs backward computation.
I0428 20:17:28.487177   874 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:28.487184   874 net.cpp:202] mnist does not need backward computation.
I0428 20:17:28.487186   874 net.cpp:244] This network produces output accuracy
I0428 20:17:28.487190   874 net.cpp:244] This network produces output loss
I0428 20:17:28.487203   874 net.cpp:257] Network initialization done.
I0428 20:17:28.487248   874 solver.cpp:56] Solver scaffolding done.
I0428 20:17:28.487565   874 caffe.cpp:248] Starting Optimization
I0428 20:17:28.487572   874 solver.cpp:273] Solving LeNet
I0428 20:17:28.487576   874 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:28.487779   874 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:28.495631   874 blocking_queue.cpp:49] Waiting for data
I0428 20:17:28.567684   883 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:28.568523   874 solver.cpp:398]     Test net output #0: accuracy = 0.1029
I0428 20:17:28.568552   874 solver.cpp:398]     Test net output #1: loss = 2.37118 (* 1 = 2.37118 loss)
I0428 20:17:28.573220   874 solver.cpp:219] Iteration 0 (-1.43888e-30 iter/s, 0.085614s/100 iters), loss = 2.40395
I0428 20:17:28.573251   874 solver.cpp:238]     Train net output #0: loss = 2.40395 (* 1 = 2.40395 loss)
I0428 20:17:28.573264   874 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:28.688519   874 solver.cpp:219] Iteration 100 (867.631 iter/s, 0.115256s/100 iters), loss = 0.684322
I0428 20:17:28.688544   874 solver.cpp:238]     Train net output #0: loss = 0.684322 (* 1 = 0.684322 loss)
I0428 20:17:28.688550   874 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:28.803719   874 solver.cpp:219] Iteration 200 (868.318 iter/s, 0.115165s/100 iters), loss = 0.231343
I0428 20:17:28.803758   874 solver.cpp:238]     Train net output #0: loss = 0.231343 (* 1 = 0.231343 loss)
I0428 20:17:28.803764   874 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:28.919137   874 solver.cpp:219] Iteration 300 (866.669 iter/s, 0.115384s/100 iters), loss = 0.548055
I0428 20:17:28.919178   874 solver.cpp:238]     Train net output #0: loss = 0.548055 (* 1 = 0.548055 loss)
I0428 20:17:28.919183   874 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:29.031095   874 solver.cpp:219] Iteration 400 (893.486 iter/s, 0.111921s/100 iters), loss = 0.138207
I0428 20:17:29.031136   874 solver.cpp:238]     Train net output #0: loss = 0.138207 (* 1 = 0.138207 loss)
I0428 20:17:29.031141   874 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:29.140575   874 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:29.203366   883 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:29.205641   874 solver.cpp:398]     Test net output #0: accuracy = 0.9612
I0428 20:17:29.205677   874 solver.cpp:398]     Test net output #1: loss = 0.122212 (* 1 = 0.122212 loss)
I0428 20:17:29.206780   874 solver.cpp:219] Iteration 500 (569.324 iter/s, 0.175647s/100 iters), loss = 0.196397
I0428 20:17:29.206817   874 solver.cpp:238]     Train net output #0: loss = 0.196397 (* 1 = 0.196397 loss)
I0428 20:17:29.206823   874 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:29.317940   874 solver.cpp:219] Iteration 600 (899.859 iter/s, 0.111129s/100 iters), loss = 0.14242
I0428 20:17:29.317980   874 solver.cpp:238]     Train net output #0: loss = 0.14242 (* 1 = 0.14242 loss)
I0428 20:17:29.317986   874 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:29.429471   874 solver.cpp:219] Iteration 700 (896.899 iter/s, 0.111495s/100 iters), loss = 0.147256
I0428 20:17:29.429509   874 solver.cpp:238]     Train net output #0: loss = 0.147256 (* 1 = 0.147256 loss)
I0428 20:17:29.429515   874 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:29.540331   874 solver.cpp:219] Iteration 800 (902.304 iter/s, 0.110827s/100 iters), loss = 0.300296
I0428 20:17:29.540370   874 solver.cpp:238]     Train net output #0: loss = 0.300296 (* 1 = 0.300296 loss)
I0428 20:17:29.540376   874 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:29.651777   874 solver.cpp:219] Iteration 900 (897.576 iter/s, 0.111411s/100 iters), loss = 0.175919
I0428 20:17:29.651816   874 solver.cpp:238]     Train net output #0: loss = 0.175919 (* 1 = 0.175919 loss)
I0428 20:17:29.651823   874 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:29.689062   882 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:29.762231   874 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:29.763350   874 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:29.764101   874 solver.cpp:311] Iteration 1000, loss = 0.190585
I0428 20:17:29.764117   874 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:29.826951   883 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:29.829169   874 solver.cpp:398]     Test net output #0: accuracy = 0.9684
I0428 20:17:29.829202   874 solver.cpp:398]     Test net output #1: loss = 0.0985032 (* 1 = 0.0985032 loss)
I0428 20:17:29.829207   874 solver.cpp:316] Optimization Done.
I0428 20:17:29.829210   874 caffe.cpp:259] Optimization Done.
