I0428 19:55:11.811936 28136 caffe.cpp:218] Using GPUs 0
I0428 19:55:11.841575 28136 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:12.286732 28136 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test727.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:12.286881 28136 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test727.prototxt
I0428 19:55:12.287221 28136 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:12.287250 28136 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:12.287346 28136 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:12.287410 28136 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:12.287488 28136 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:12.287508 28136 net.cpp:86] Creating Layer mnist
I0428 19:55:12.287514 28136 net.cpp:382] mnist -> data
I0428 19:55:12.287533 28136 net.cpp:382] mnist -> label
I0428 19:55:12.288601 28136 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:12.290947 28136 net.cpp:124] Setting up mnist
I0428 19:55:12.290993 28136 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:12.290998 28136 net.cpp:131] Top shape: 64 (64)
I0428 19:55:12.291002 28136 net.cpp:139] Memory required for data: 200960
I0428 19:55:12.291024 28136 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:12.291049 28136 net.cpp:86] Creating Layer conv0
I0428 19:55:12.291066 28136 net.cpp:408] conv0 <- data
I0428 19:55:12.291077 28136 net.cpp:382] conv0 -> conv0
I0428 19:55:12.526945 28136 net.cpp:124] Setting up conv0
I0428 19:55:12.526988 28136 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:12.526990 28136 net.cpp:139] Memory required for data: 938240
I0428 19:55:12.527005 28136 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:12.527016 28136 net.cpp:86] Creating Layer pool0
I0428 19:55:12.527020 28136 net.cpp:408] pool0 <- conv0
I0428 19:55:12.527040 28136 net.cpp:382] pool0 -> pool0
I0428 19:55:12.527086 28136 net.cpp:124] Setting up pool0
I0428 19:55:12.527091 28136 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:12.527094 28136 net.cpp:139] Memory required for data: 1122560
I0428 19:55:12.527097 28136 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:12.527107 28136 net.cpp:86] Creating Layer conv1
I0428 19:55:12.527110 28136 net.cpp:408] conv1 <- pool0
I0428 19:55:12.527115 28136 net.cpp:382] conv1 -> conv1
I0428 19:55:12.529947 28136 net.cpp:124] Setting up conv1
I0428 19:55:12.529976 28136 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:12.529979 28136 net.cpp:139] Memory required for data: 2760960
I0428 19:55:12.530004 28136 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:12.530011 28136 net.cpp:86] Creating Layer pool1
I0428 19:55:12.530014 28136 net.cpp:408] pool1 <- conv1
I0428 19:55:12.530019 28136 net.cpp:382] pool1 -> pool1
I0428 19:55:12.530071 28136 net.cpp:124] Setting up pool1
I0428 19:55:12.530076 28136 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:12.530078 28136 net.cpp:139] Memory required for data: 3170560
I0428 19:55:12.530081 28136 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:12.530087 28136 net.cpp:86] Creating Layer ip1
I0428 19:55:12.530091 28136 net.cpp:408] ip1 <- pool1
I0428 19:55:12.530095 28136 net.cpp:382] ip1 -> ip1
I0428 19:55:12.530431 28136 net.cpp:124] Setting up ip1
I0428 19:55:12.530438 28136 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:12.530457 28136 net.cpp:139] Memory required for data: 3176960
I0428 19:55:12.530463 28136 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:12.530469 28136 net.cpp:86] Creating Layer relu1
I0428 19:55:12.530472 28136 net.cpp:408] relu1 <- ip1
I0428 19:55:12.530477 28136 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:12.530648 28136 net.cpp:124] Setting up relu1
I0428 19:55:12.530658 28136 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:12.530660 28136 net.cpp:139] Memory required for data: 3183360
I0428 19:55:12.530663 28136 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:12.530669 28136 net.cpp:86] Creating Layer ip2
I0428 19:55:12.530673 28136 net.cpp:408] ip2 <- ip1
I0428 19:55:12.530678 28136 net.cpp:382] ip2 -> ip2
I0428 19:55:12.530783 28136 net.cpp:124] Setting up ip2
I0428 19:55:12.530791 28136 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:12.530793 28136 net.cpp:139] Memory required for data: 3189760
I0428 19:55:12.530798 28136 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:12.530804 28136 net.cpp:86] Creating Layer relu2
I0428 19:55:12.530807 28136 net.cpp:408] relu2 <- ip2
I0428 19:55:12.530812 28136 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:12.531507 28136 net.cpp:124] Setting up relu2
I0428 19:55:12.531518 28136 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:12.531538 28136 net.cpp:139] Memory required for data: 3196160
I0428 19:55:12.531541 28136 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:12.531548 28136 net.cpp:86] Creating Layer ip3
I0428 19:55:12.531553 28136 net.cpp:408] ip3 <- ip2
I0428 19:55:12.531558 28136 net.cpp:382] ip3 -> ip3
I0428 19:55:12.531648 28136 net.cpp:124] Setting up ip3
I0428 19:55:12.531656 28136 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:12.531658 28136 net.cpp:139] Memory required for data: 3198720
I0428 19:55:12.531666 28136 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:12.531671 28136 net.cpp:86] Creating Layer relu3
I0428 19:55:12.531673 28136 net.cpp:408] relu3 <- ip3
I0428 19:55:12.531677 28136 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:12.531847 28136 net.cpp:124] Setting up relu3
I0428 19:55:12.531857 28136 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:12.531859 28136 net.cpp:139] Memory required for data: 3201280
I0428 19:55:12.531862 28136 layer_factory.hpp:77] Creating layer loss
I0428 19:55:12.531868 28136 net.cpp:86] Creating Layer loss
I0428 19:55:12.531872 28136 net.cpp:408] loss <- ip3
I0428 19:55:12.531875 28136 net.cpp:408] loss <- label
I0428 19:55:12.531880 28136 net.cpp:382] loss -> loss
I0428 19:55:12.531893 28136 layer_factory.hpp:77] Creating layer loss
I0428 19:55:12.532119 28136 net.cpp:124] Setting up loss
I0428 19:55:12.532126 28136 net.cpp:131] Top shape: (1)
I0428 19:55:12.532130 28136 net.cpp:134]     with loss weight 1
I0428 19:55:12.532145 28136 net.cpp:139] Memory required for data: 3201284
I0428 19:55:12.532147 28136 net.cpp:200] loss needs backward computation.
I0428 19:55:12.532151 28136 net.cpp:200] relu3 needs backward computation.
I0428 19:55:12.532153 28136 net.cpp:200] ip3 needs backward computation.
I0428 19:55:12.532156 28136 net.cpp:200] relu2 needs backward computation.
I0428 19:55:12.532160 28136 net.cpp:200] ip2 needs backward computation.
I0428 19:55:12.532161 28136 net.cpp:200] relu1 needs backward computation.
I0428 19:55:12.532165 28136 net.cpp:200] ip1 needs backward computation.
I0428 19:55:12.532167 28136 net.cpp:200] pool1 needs backward computation.
I0428 19:55:12.532171 28136 net.cpp:200] conv1 needs backward computation.
I0428 19:55:12.532173 28136 net.cpp:200] pool0 needs backward computation.
I0428 19:55:12.532176 28136 net.cpp:200] conv0 needs backward computation.
I0428 19:55:12.532179 28136 net.cpp:202] mnist does not need backward computation.
I0428 19:55:12.532182 28136 net.cpp:244] This network produces output loss
I0428 19:55:12.532191 28136 net.cpp:257] Network initialization done.
I0428 19:55:12.532497 28136 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test727.prototxt
I0428 19:55:12.532544 28136 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:12.532629 28136 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:12.532706 28136 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:12.532747 28136 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:12.532758 28136 net.cpp:86] Creating Layer mnist
I0428 19:55:12.532763 28136 net.cpp:382] mnist -> data
I0428 19:55:12.532770 28136 net.cpp:382] mnist -> label
I0428 19:55:12.532910 28136 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:12.534831 28136 net.cpp:124] Setting up mnist
I0428 19:55:12.534842 28136 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:12.534863 28136 net.cpp:131] Top shape: 100 (100)
I0428 19:55:12.534867 28136 net.cpp:139] Memory required for data: 314000
I0428 19:55:12.534870 28136 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:12.534876 28136 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:12.534879 28136 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:12.534884 28136 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:12.534890 28136 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:12.534935 28136 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:12.534941 28136 net.cpp:131] Top shape: 100 (100)
I0428 19:55:12.534945 28136 net.cpp:131] Top shape: 100 (100)
I0428 19:55:12.534947 28136 net.cpp:139] Memory required for data: 314800
I0428 19:55:12.534950 28136 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:12.534957 28136 net.cpp:86] Creating Layer conv0
I0428 19:55:12.534961 28136 net.cpp:408] conv0 <- data
I0428 19:55:12.534965 28136 net.cpp:382] conv0 -> conv0
I0428 19:55:12.536501 28136 net.cpp:124] Setting up conv0
I0428 19:55:12.536531 28136 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:12.536536 28136 net.cpp:139] Memory required for data: 1466800
I0428 19:55:12.536546 28136 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:12.536552 28136 net.cpp:86] Creating Layer pool0
I0428 19:55:12.536556 28136 net.cpp:408] pool0 <- conv0
I0428 19:55:12.536561 28136 net.cpp:382] pool0 -> pool0
I0428 19:55:12.536614 28136 net.cpp:124] Setting up pool0
I0428 19:55:12.536619 28136 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:12.536623 28136 net.cpp:139] Memory required for data: 1754800
I0428 19:55:12.536643 28136 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:12.536653 28136 net.cpp:86] Creating Layer conv1
I0428 19:55:12.536658 28136 net.cpp:408] conv1 <- pool0
I0428 19:55:12.536679 28136 net.cpp:382] conv1 -> conv1
I0428 19:55:12.538275 28136 net.cpp:124] Setting up conv1
I0428 19:55:12.538305 28136 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:12.538308 28136 net.cpp:139] Memory required for data: 4314800
I0428 19:55:12.538333 28136 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:12.538341 28136 net.cpp:86] Creating Layer pool1
I0428 19:55:12.538343 28136 net.cpp:408] pool1 <- conv1
I0428 19:55:12.538350 28136 net.cpp:382] pool1 -> pool1
I0428 19:55:12.538388 28136 net.cpp:124] Setting up pool1
I0428 19:55:12.538393 28136 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:12.538396 28136 net.cpp:139] Memory required for data: 4954800
I0428 19:55:12.538400 28136 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:12.538408 28136 net.cpp:86] Creating Layer ip1
I0428 19:55:12.538410 28136 net.cpp:408] ip1 <- pool1
I0428 19:55:12.538416 28136 net.cpp:382] ip1 -> ip1
I0428 19:55:12.538805 28136 net.cpp:124] Setting up ip1
I0428 19:55:12.538813 28136 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:12.538841 28136 net.cpp:139] Memory required for data: 4964800
I0428 19:55:12.538848 28136 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:12.538854 28136 net.cpp:86] Creating Layer relu1
I0428 19:55:12.538857 28136 net.cpp:408] relu1 <- ip1
I0428 19:55:12.538862 28136 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:12.539026 28136 net.cpp:124] Setting up relu1
I0428 19:55:12.539034 28136 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:12.539037 28136 net.cpp:139] Memory required for data: 4974800
I0428 19:55:12.539041 28136 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:12.539048 28136 net.cpp:86] Creating Layer ip2
I0428 19:55:12.539052 28136 net.cpp:408] ip2 <- ip1
I0428 19:55:12.539058 28136 net.cpp:382] ip2 -> ip2
I0428 19:55:12.539165 28136 net.cpp:124] Setting up ip2
I0428 19:55:12.539173 28136 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:12.539176 28136 net.cpp:139] Memory required for data: 4984800
I0428 19:55:12.539182 28136 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:12.539186 28136 net.cpp:86] Creating Layer relu2
I0428 19:55:12.539189 28136 net.cpp:408] relu2 <- ip2
I0428 19:55:12.539196 28136 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:12.539438 28136 net.cpp:124] Setting up relu2
I0428 19:55:12.539448 28136 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:12.539450 28136 net.cpp:139] Memory required for data: 4994800
I0428 19:55:12.539453 28136 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:12.539461 28136 net.cpp:86] Creating Layer ip3
I0428 19:55:12.539464 28136 net.cpp:408] ip3 <- ip2
I0428 19:55:12.539469 28136 net.cpp:382] ip3 -> ip3
I0428 19:55:12.539572 28136 net.cpp:124] Setting up ip3
I0428 19:55:12.539579 28136 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:12.539583 28136 net.cpp:139] Memory required for data: 4998800
I0428 19:55:12.539592 28136 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:12.539597 28136 net.cpp:86] Creating Layer relu3
I0428 19:55:12.539600 28136 net.cpp:408] relu3 <- ip3
I0428 19:55:12.539605 28136 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:12.540392 28136 net.cpp:124] Setting up relu3
I0428 19:55:12.540403 28136 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:12.540423 28136 net.cpp:139] Memory required for data: 5002800
I0428 19:55:12.540426 28136 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:12.540433 28136 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:12.540436 28136 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:12.540441 28136 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:12.540447 28136 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:12.540488 28136 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:12.540493 28136 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:12.540496 28136 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:12.540499 28136 net.cpp:139] Memory required for data: 5010800
I0428 19:55:12.540503 28136 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:12.540524 28136 net.cpp:86] Creating Layer accuracy
I0428 19:55:12.540526 28136 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:12.540530 28136 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:12.540536 28136 net.cpp:382] accuracy -> accuracy
I0428 19:55:12.540544 28136 net.cpp:124] Setting up accuracy
I0428 19:55:12.540547 28136 net.cpp:131] Top shape: (1)
I0428 19:55:12.540550 28136 net.cpp:139] Memory required for data: 5010804
I0428 19:55:12.540552 28136 layer_factory.hpp:77] Creating layer loss
I0428 19:55:12.540557 28136 net.cpp:86] Creating Layer loss
I0428 19:55:12.540560 28136 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:12.540565 28136 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:12.540570 28136 net.cpp:382] loss -> loss
I0428 19:55:12.540575 28136 layer_factory.hpp:77] Creating layer loss
I0428 19:55:12.540858 28136 net.cpp:124] Setting up loss
I0428 19:55:12.540868 28136 net.cpp:131] Top shape: (1)
I0428 19:55:12.540871 28136 net.cpp:134]     with loss weight 1
I0428 19:55:12.540905 28136 net.cpp:139] Memory required for data: 5010808
I0428 19:55:12.540910 28136 net.cpp:200] loss needs backward computation.
I0428 19:55:12.540913 28136 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:12.540917 28136 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:12.540920 28136 net.cpp:200] relu3 needs backward computation.
I0428 19:55:12.540923 28136 net.cpp:200] ip3 needs backward computation.
I0428 19:55:12.540926 28136 net.cpp:200] relu2 needs backward computation.
I0428 19:55:12.540930 28136 net.cpp:200] ip2 needs backward computation.
I0428 19:55:12.540932 28136 net.cpp:200] relu1 needs backward computation.
I0428 19:55:12.540935 28136 net.cpp:200] ip1 needs backward computation.
I0428 19:55:12.540938 28136 net.cpp:200] pool1 needs backward computation.
I0428 19:55:12.540941 28136 net.cpp:200] conv1 needs backward computation.
I0428 19:55:12.540944 28136 net.cpp:200] pool0 needs backward computation.
I0428 19:55:12.540947 28136 net.cpp:200] conv0 needs backward computation.
I0428 19:55:12.540951 28136 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:12.540956 28136 net.cpp:202] mnist does not need backward computation.
I0428 19:55:12.540958 28136 net.cpp:244] This network produces output accuracy
I0428 19:55:12.540962 28136 net.cpp:244] This network produces output loss
I0428 19:55:12.540974 28136 net.cpp:257] Network initialization done.
I0428 19:55:12.541019 28136 solver.cpp:56] Solver scaffolding done.
I0428 19:55:12.541395 28136 caffe.cpp:248] Starting Optimization
I0428 19:55:12.541400 28136 solver.cpp:273] Solving LeNet
I0428 19:55:12.541404 28136 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:12.542230 28136 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:12.547410 28136 blocking_queue.cpp:49] Waiting for data
I0428 19:55:12.619853 28143 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:12.620477 28136 solver.cpp:398]     Test net output #0: accuracy = 0.0967
I0428 19:55:12.620514 28136 solver.cpp:398]     Test net output #1: loss = 2.31622 (* 1 = 2.31622 loss)
I0428 19:55:12.624235 28136 solver.cpp:219] Iteration 0 (0 iter/s, 0.0827906s/100 iters), loss = 2.28793
I0428 19:55:12.624258 28136 solver.cpp:238]     Train net output #0: loss = 2.28793 (* 1 = 2.28793 loss)
I0428 19:55:12.624270 28136 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:12.778319 28136 solver.cpp:219] Iteration 100 (649.18 iter/s, 0.15404s/100 iters), loss = 0.441745
I0428 19:55:12.778357 28136 solver.cpp:238]     Train net output #0: loss = 0.441745 (* 1 = 0.441745 loss)
I0428 19:55:12.778367 28136 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:12.936599 28136 solver.cpp:219] Iteration 200 (631.993 iter/s, 0.15823s/100 iters), loss = 0.676687
I0428 19:55:12.936628 28136 solver.cpp:238]     Train net output #0: loss = 0.676687 (* 1 = 0.676687 loss)
I0428 19:55:12.936635 28136 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:13.081830 28136 solver.cpp:219] Iteration 300 (688.753 iter/s, 0.14519s/100 iters), loss = 0.483954
I0428 19:55:13.081887 28136 solver.cpp:238]     Train net output #0: loss = 0.483954 (* 1 = 0.483954 loss)
I0428 19:55:13.081893 28136 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:13.234371 28136 solver.cpp:219] Iteration 400 (655.794 iter/s, 0.152487s/100 iters), loss = 0.377905
I0428 19:55:13.234397 28136 solver.cpp:238]     Train net output #0: loss = 0.377905 (* 1 = 0.377905 loss)
I0428 19:55:13.234405 28136 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:13.383383 28136 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:13.436730 28143 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:13.438503 28136 solver.cpp:398]     Test net output #0: accuracy = 0.8652
I0428 19:55:13.438542 28136 solver.cpp:398]     Test net output #1: loss = 0.350666 (* 1 = 0.350666 loss)
I0428 19:55:13.439884 28136 solver.cpp:219] Iteration 500 (486.685 iter/s, 0.205472s/100 iters), loss = 0.249899
I0428 19:55:13.439924 28136 solver.cpp:238]     Train net output #0: loss = 0.249899 (* 1 = 0.249899 loss)
I0428 19:55:13.439946 28136 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:13.594246 28136 solver.cpp:219] Iteration 600 (647.983 iter/s, 0.154325s/100 iters), loss = 0.439462
I0428 19:55:13.594285 28136 solver.cpp:238]     Train net output #0: loss = 0.439462 (* 1 = 0.439462 loss)
I0428 19:55:13.594290 28136 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:13.747617 28136 solver.cpp:219] Iteration 700 (652.19 iter/s, 0.15333s/100 iters), loss = 0.289
I0428 19:55:13.747659 28136 solver.cpp:238]     Train net output #0: loss = 0.289 (* 1 = 0.289 loss)
I0428 19:55:13.747666 28136 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:13.901295 28136 solver.cpp:219] Iteration 800 (650.946 iter/s, 0.153623s/100 iters), loss = 0.409096
I0428 19:55:13.901340 28136 solver.cpp:238]     Train net output #0: loss = 0.409096 (* 1 = 0.409096 loss)
I0428 19:55:13.901346 28136 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:14.054816 28136 solver.cpp:219] Iteration 900 (651.611 iter/s, 0.153466s/100 iters), loss = 0.600363
I0428 19:55:14.054860 28136 solver.cpp:238]     Train net output #0: loss = 0.600363 (* 1 = 0.600363 loss)
I0428 19:55:14.054867 28136 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:14.104540 28142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:14.204857 28136 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:14.206908 28136 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:14.207826 28136 solver.cpp:311] Iteration 1000, loss = 0.307107
I0428 19:55:14.207842 28136 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:14.259882 28143 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:14.261729 28136 solver.cpp:398]     Test net output #0: accuracy = 0.8752
I0428 19:55:14.261749 28136 solver.cpp:398]     Test net output #1: loss = 0.319341 (* 1 = 0.319341 loss)
I0428 19:55:14.261755 28136 solver.cpp:316] Optimization Done.
I0428 19:55:14.261759 28136 caffe.cpp:259] Optimization Done.
