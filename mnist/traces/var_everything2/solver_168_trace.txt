I0428 19:32:59.869272 23006 caffe.cpp:218] Using GPUs 0
I0428 19:32:59.909997 23006 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:00.377491 23006 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test168.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:00.377630 23006 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test168.prototxt
I0428 19:33:00.377950 23006 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:00.377964 23006 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:00.378031 23006 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:00.378090 23006 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:00.378170 23006 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:00.378188 23006 net.cpp:86] Creating Layer mnist
I0428 19:33:00.378196 23006 net.cpp:382] mnist -> data
I0428 19:33:00.378214 23006 net.cpp:382] mnist -> label
I0428 19:33:00.379159 23006 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:00.381633 23006 net.cpp:124] Setting up mnist
I0428 19:33:00.381677 23006 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:00.381682 23006 net.cpp:131] Top shape: 64 (64)
I0428 19:33:00.381685 23006 net.cpp:139] Memory required for data: 200960
I0428 19:33:00.381691 23006 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:00.381741 23006 net.cpp:86] Creating Layer conv0
I0428 19:33:00.381745 23006 net.cpp:408] conv0 <- data
I0428 19:33:00.381757 23006 net.cpp:382] conv0 -> conv0
I0428 19:33:00.609746 23006 net.cpp:124] Setting up conv0
I0428 19:33:00.609789 23006 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:00.609793 23006 net.cpp:139] Memory required for data: 3887360
I0428 19:33:00.609807 23006 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:00.609819 23006 net.cpp:86] Creating Layer pool0
I0428 19:33:00.609863 23006 net.cpp:408] pool0 <- conv0
I0428 19:33:00.609868 23006 net.cpp:382] pool0 -> pool0
I0428 19:33:00.609915 23006 net.cpp:124] Setting up pool0
I0428 19:33:00.609927 23006 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:00.609930 23006 net.cpp:139] Memory required for data: 4808960
I0428 19:33:00.609933 23006 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:00.609944 23006 net.cpp:86] Creating Layer ip1
I0428 19:33:00.609947 23006 net.cpp:408] ip1 <- pool0
I0428 19:33:00.609951 23006 net.cpp:382] ip1 -> ip1
I0428 19:33:00.610244 23006 net.cpp:124] Setting up ip1
I0428 19:33:00.610251 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.610255 23006 net.cpp:139] Memory required for data: 4811520
I0428 19:33:00.610260 23006 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:00.610266 23006 net.cpp:86] Creating Layer relu1
I0428 19:33:00.610270 23006 net.cpp:408] relu1 <- ip1
I0428 19:33:00.610272 23006 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:00.610422 23006 net.cpp:124] Setting up relu1
I0428 19:33:00.610430 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.610433 23006 net.cpp:139] Memory required for data: 4814080
I0428 19:33:00.610436 23006 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:00.610442 23006 net.cpp:86] Creating Layer ip2
I0428 19:33:00.610445 23006 net.cpp:408] ip2 <- ip1
I0428 19:33:00.610450 23006 net.cpp:382] ip2 -> ip2
I0428 19:33:00.610530 23006 net.cpp:124] Setting up ip2
I0428 19:33:00.610536 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.610539 23006 net.cpp:139] Memory required for data: 4816640
I0428 19:33:00.610546 23006 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:00.610550 23006 net.cpp:86] Creating Layer relu2
I0428 19:33:00.610553 23006 net.cpp:408] relu2 <- ip2
I0428 19:33:00.610558 23006 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:00.611269 23006 net.cpp:124] Setting up relu2
I0428 19:33:00.611280 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.611299 23006 net.cpp:139] Memory required for data: 4819200
I0428 19:33:00.611304 23006 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:00.611310 23006 net.cpp:86] Creating Layer ip3
I0428 19:33:00.611312 23006 net.cpp:408] ip3 <- ip2
I0428 19:33:00.611317 23006 net.cpp:382] ip3 -> ip3
I0428 19:33:00.611402 23006 net.cpp:124] Setting up ip3
I0428 19:33:00.611409 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.611413 23006 net.cpp:139] Memory required for data: 4821760
I0428 19:33:00.611418 23006 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:00.611423 23006 net.cpp:86] Creating Layer relu3
I0428 19:33:00.611426 23006 net.cpp:408] relu3 <- ip3
I0428 19:33:00.611430 23006 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:00.611564 23006 net.cpp:124] Setting up relu3
I0428 19:33:00.611572 23006 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:00.611575 23006 net.cpp:139] Memory required for data: 4824320
I0428 19:33:00.611578 23006 layer_factory.hpp:77] Creating layer loss
I0428 19:33:00.611583 23006 net.cpp:86] Creating Layer loss
I0428 19:33:00.611587 23006 net.cpp:408] loss <- ip3
I0428 19:33:00.611590 23006 net.cpp:408] loss <- label
I0428 19:33:00.611595 23006 net.cpp:382] loss -> loss
I0428 19:33:00.611613 23006 layer_factory.hpp:77] Creating layer loss
I0428 19:33:00.611817 23006 net.cpp:124] Setting up loss
I0428 19:33:00.611825 23006 net.cpp:131] Top shape: (1)
I0428 19:33:00.611829 23006 net.cpp:134]     with loss weight 1
I0428 19:33:00.611841 23006 net.cpp:139] Memory required for data: 4824324
I0428 19:33:00.611845 23006 net.cpp:200] loss needs backward computation.
I0428 19:33:00.611848 23006 net.cpp:200] relu3 needs backward computation.
I0428 19:33:00.611851 23006 net.cpp:200] ip3 needs backward computation.
I0428 19:33:00.611853 23006 net.cpp:200] relu2 needs backward computation.
I0428 19:33:00.611856 23006 net.cpp:200] ip2 needs backward computation.
I0428 19:33:00.611860 23006 net.cpp:200] relu1 needs backward computation.
I0428 19:33:00.611861 23006 net.cpp:200] ip1 needs backward computation.
I0428 19:33:00.611873 23006 net.cpp:200] pool0 needs backward computation.
I0428 19:33:00.611876 23006 net.cpp:200] conv0 needs backward computation.
I0428 19:33:00.611896 23006 net.cpp:202] mnist does not need backward computation.
I0428 19:33:00.611898 23006 net.cpp:244] This network produces output loss
I0428 19:33:00.611907 23006 net.cpp:257] Network initialization done.
I0428 19:33:00.612174 23006 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test168.prototxt
I0428 19:33:00.612213 23006 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:00.612287 23006 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:00.612345 23006 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:00.612387 23006 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:00.612399 23006 net.cpp:86] Creating Layer mnist
I0428 19:33:00.612404 23006 net.cpp:382] mnist -> data
I0428 19:33:00.612411 23006 net.cpp:382] mnist -> label
I0428 19:33:00.612486 23006 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:00.614600 23006 net.cpp:124] Setting up mnist
I0428 19:33:00.614629 23006 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:00.614634 23006 net.cpp:131] Top shape: 100 (100)
I0428 19:33:00.614637 23006 net.cpp:139] Memory required for data: 314000
I0428 19:33:00.614641 23006 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:00.614677 23006 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:00.614681 23006 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:00.614686 23006 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:00.614691 23006 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:00.614725 23006 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:00.614730 23006 net.cpp:131] Top shape: 100 (100)
I0428 19:33:00.614733 23006 net.cpp:131] Top shape: 100 (100)
I0428 19:33:00.614737 23006 net.cpp:139] Memory required for data: 314800
I0428 19:33:00.614751 23006 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:00.614759 23006 net.cpp:86] Creating Layer conv0
I0428 19:33:00.614763 23006 net.cpp:408] conv0 <- data
I0428 19:33:00.614766 23006 net.cpp:382] conv0 -> conv0
I0428 19:33:00.616511 23006 net.cpp:124] Setting up conv0
I0428 19:33:00.616525 23006 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:00.616529 23006 net.cpp:139] Memory required for data: 6074800
I0428 19:33:00.616539 23006 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:00.616555 23006 net.cpp:86] Creating Layer pool0
I0428 19:33:00.616559 23006 net.cpp:408] pool0 <- conv0
I0428 19:33:00.616578 23006 net.cpp:382] pool0 -> pool0
I0428 19:33:00.616613 23006 net.cpp:124] Setting up pool0
I0428 19:33:00.616618 23006 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:00.616621 23006 net.cpp:139] Memory required for data: 7514800
I0428 19:33:00.616624 23006 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:00.616631 23006 net.cpp:86] Creating Layer ip1
I0428 19:33:00.616633 23006 net.cpp:408] ip1 <- pool0
I0428 19:33:00.616637 23006 net.cpp:382] ip1 -> ip1
I0428 19:33:00.616994 23006 net.cpp:124] Setting up ip1
I0428 19:33:00.617004 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.617008 23006 net.cpp:139] Memory required for data: 7518800
I0428 19:33:00.617015 23006 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:00.617020 23006 net.cpp:86] Creating Layer relu1
I0428 19:33:00.617024 23006 net.cpp:408] relu1 <- ip1
I0428 19:33:00.617029 23006 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:00.617240 23006 net.cpp:124] Setting up relu1
I0428 19:33:00.617249 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.617252 23006 net.cpp:139] Memory required for data: 7522800
I0428 19:33:00.617255 23006 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:00.617260 23006 net.cpp:86] Creating Layer ip2
I0428 19:33:00.617264 23006 net.cpp:408] ip2 <- ip1
I0428 19:33:00.617269 23006 net.cpp:382] ip2 -> ip2
I0428 19:33:00.617393 23006 net.cpp:124] Setting up ip2
I0428 19:33:00.617400 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.617403 23006 net.cpp:139] Memory required for data: 7526800
I0428 19:33:00.617411 23006 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:00.617416 23006 net.cpp:86] Creating Layer relu2
I0428 19:33:00.617419 23006 net.cpp:408] relu2 <- ip2
I0428 19:33:00.617424 23006 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:00.618268 23006 net.cpp:124] Setting up relu2
I0428 19:33:00.618279 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.618283 23006 net.cpp:139] Memory required for data: 7530800
I0428 19:33:00.618286 23006 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:00.618294 23006 net.cpp:86] Creating Layer ip3
I0428 19:33:00.618296 23006 net.cpp:408] ip3 <- ip2
I0428 19:33:00.618302 23006 net.cpp:382] ip3 -> ip3
I0428 19:33:00.618433 23006 net.cpp:124] Setting up ip3
I0428 19:33:00.618458 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.618460 23006 net.cpp:139] Memory required for data: 7534800
I0428 19:33:00.618466 23006 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:00.618470 23006 net.cpp:86] Creating Layer relu3
I0428 19:33:00.618474 23006 net.cpp:408] relu3 <- ip3
I0428 19:33:00.618479 23006 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:00.618644 23006 net.cpp:124] Setting up relu3
I0428 19:33:00.618654 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.618657 23006 net.cpp:139] Memory required for data: 7538800
I0428 19:33:00.618662 23006 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:00.618667 23006 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:00.618670 23006 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:00.618674 23006 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:00.618690 23006 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:00.618723 23006 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:00.618728 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.618732 23006 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:00.618752 23006 net.cpp:139] Memory required for data: 7546800
I0428 19:33:00.618755 23006 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:00.618760 23006 net.cpp:86] Creating Layer accuracy
I0428 19:33:00.618780 23006 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:00.618784 23006 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:00.618789 23006 net.cpp:382] accuracy -> accuracy
I0428 19:33:00.618796 23006 net.cpp:124] Setting up accuracy
I0428 19:33:00.618800 23006 net.cpp:131] Top shape: (1)
I0428 19:33:00.618803 23006 net.cpp:139] Memory required for data: 7546804
I0428 19:33:00.618805 23006 layer_factory.hpp:77] Creating layer loss
I0428 19:33:00.618809 23006 net.cpp:86] Creating Layer loss
I0428 19:33:00.618813 23006 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:00.618816 23006 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:00.618819 23006 net.cpp:382] loss -> loss
I0428 19:33:00.618825 23006 layer_factory.hpp:77] Creating layer loss
I0428 19:33:00.619060 23006 net.cpp:124] Setting up loss
I0428 19:33:00.619071 23006 net.cpp:131] Top shape: (1)
I0428 19:33:00.619073 23006 net.cpp:134]     with loss weight 1
I0428 19:33:00.619081 23006 net.cpp:139] Memory required for data: 7546808
I0428 19:33:00.619083 23006 net.cpp:200] loss needs backward computation.
I0428 19:33:00.619087 23006 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:00.619097 23006 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:00.619101 23006 net.cpp:200] relu3 needs backward computation.
I0428 19:33:00.619103 23006 net.cpp:200] ip3 needs backward computation.
I0428 19:33:00.619107 23006 net.cpp:200] relu2 needs backward computation.
I0428 19:33:00.619108 23006 net.cpp:200] ip2 needs backward computation.
I0428 19:33:00.619112 23006 net.cpp:200] relu1 needs backward computation.
I0428 19:33:00.619114 23006 net.cpp:200] ip1 needs backward computation.
I0428 19:33:00.619117 23006 net.cpp:200] pool0 needs backward computation.
I0428 19:33:00.619120 23006 net.cpp:200] conv0 needs backward computation.
I0428 19:33:00.619124 23006 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:00.619127 23006 net.cpp:202] mnist does not need backward computation.
I0428 19:33:00.619137 23006 net.cpp:244] This network produces output accuracy
I0428 19:33:00.619139 23006 net.cpp:244] This network produces output loss
I0428 19:33:00.619150 23006 net.cpp:257] Network initialization done.
I0428 19:33:00.619185 23006 solver.cpp:56] Solver scaffolding done.
I0428 19:33:00.619451 23006 caffe.cpp:248] Starting Optimization
I0428 19:33:00.619458 23006 solver.cpp:273] Solving LeNet
I0428 19:33:00.619462 23006 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:00.620275 23006 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:00.624992 23006 blocking_queue.cpp:49] Waiting for data
I0428 19:33:00.698010 23014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:00.698770 23006 solver.cpp:398]     Test net output #0: accuracy = 0.1111
I0428 19:33:00.698788 23006 solver.cpp:398]     Test net output #1: loss = 2.31156 (* 1 = 2.31156 loss)
I0428 19:33:00.702380 23006 solver.cpp:219] Iteration 0 (-1.17411e-30 iter/s, 0.0828959s/100 iters), loss = 2.32562
I0428 19:33:00.702402 23006 solver.cpp:238]     Train net output #0: loss = 2.32562 (* 1 = 2.32562 loss)
I0428 19:33:00.702430 23006 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:00.801558 23006 solver.cpp:219] Iteration 100 (1008.66 iter/s, 0.0991414s/100 iters), loss = 1.06542
I0428 19:33:00.801581 23006 solver.cpp:238]     Train net output #0: loss = 1.06542 (* 1 = 1.06542 loss)
I0428 19:33:00.801587 23006 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:00.901873 23006 solver.cpp:219] Iteration 200 (997.194 iter/s, 0.100281s/100 iters), loss = 0.625399
I0428 19:33:00.901896 23006 solver.cpp:238]     Train net output #0: loss = 0.625399 (* 1 = 0.625399 loss)
I0428 19:33:00.901902 23006 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:01.001709 23006 solver.cpp:219] Iteration 300 (1002.1 iter/s, 0.0997908s/100 iters), loss = 0.456731
I0428 19:33:01.001732 23006 solver.cpp:238]     Train net output #0: loss = 0.456731 (* 1 = 0.456731 loss)
I0428 19:33:01.001739 23006 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:01.101135 23006 solver.cpp:219] Iteration 400 (1006.12 iter/s, 0.0993915s/100 iters), loss = 0.376218
I0428 19:33:01.101161 23006 solver.cpp:238]     Train net output #0: loss = 0.376218 (* 1 = 0.376218 loss)
I0428 19:33:01.101168 23006 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:01.193713 23006 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:01.256791 23014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:01.258378 23006 solver.cpp:398]     Test net output #0: accuracy = 0.9342
I0428 19:33:01.258395 23006 solver.cpp:398]     Test net output #1: loss = 0.244725 (* 1 = 0.244725 loss)
I0428 19:33:01.259382 23006 solver.cpp:219] Iteration 500 (632.083 iter/s, 0.158207s/100 iters), loss = 0.379179
I0428 19:33:01.259402 23006 solver.cpp:238]     Train net output #0: loss = 0.379179 (* 1 = 0.379179 loss)
I0428 19:33:01.259413 23006 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:01.358911 23006 solver.cpp:219] Iteration 600 (1005.04 iter/s, 0.0994988s/100 iters), loss = 0.169745
I0428 19:33:01.358935 23006 solver.cpp:238]     Train net output #0: loss = 0.169745 (* 1 = 0.169745 loss)
I0428 19:33:01.358956 23006 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:01.458134 23006 solver.cpp:219] Iteration 700 (1008.18 iter/s, 0.0991889s/100 iters), loss = 0.230875
I0428 19:33:01.458158 23006 solver.cpp:238]     Train net output #0: loss = 0.230875 (* 1 = 0.230875 loss)
I0428 19:33:01.458164 23006 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:01.558866 23006 solver.cpp:219] Iteration 800 (993.069 iter/s, 0.100698s/100 iters), loss = 0.324506
I0428 19:33:01.558889 23006 solver.cpp:238]     Train net output #0: loss = 0.324506 (* 1 = 0.324506 loss)
I0428 19:33:01.558897 23006 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:01.661605 23006 solver.cpp:219] Iteration 900 (973.671 iter/s, 0.102704s/100 iters), loss = 0.245265
I0428 19:33:01.661636 23006 solver.cpp:238]     Train net output #0: loss = 0.245265 (* 1 = 0.245265 loss)
I0428 19:33:01.661645 23006 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:01.694330 23013 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:01.767215 23006 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:01.768919 23006 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:01.770208 23006 solver.cpp:311] Iteration 1000, loss = 0.104429
I0428 19:33:01.770233 23006 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:01.847878 23014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:01.849125 23006 solver.cpp:398]     Test net output #0: accuracy = 0.9586
I0428 19:33:01.849156 23006 solver.cpp:398]     Test net output #1: loss = 0.132575 (* 1 = 0.132575 loss)
I0428 19:33:01.849164 23006 solver.cpp:316] Optimization Done.
I0428 19:33:01.849169 23006 caffe.cpp:259] Optimization Done.
