I0428 19:37:05.998983 23772 caffe.cpp:218] Using GPUs 0
I0428 19:37:06.035676 23772 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:06.551975 23772 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test253.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:06.552109 23772 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test253.prototxt
I0428 19:37:06.552466 23772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:06.552481 23772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:06.552567 23772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:06.552634 23772 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:06.552732 23772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:06.552755 23772 net.cpp:86] Creating Layer mnist
I0428 19:37:06.552763 23772 net.cpp:382] mnist -> data
I0428 19:37:06.552785 23772 net.cpp:382] mnist -> label
I0428 19:37:06.553916 23772 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:06.556363 23772 net.cpp:124] Setting up mnist
I0428 19:37:06.556391 23772 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:06.556398 23772 net.cpp:131] Top shape: 64 (64)
I0428 19:37:06.556402 23772 net.cpp:139] Memory required for data: 200960
I0428 19:37:06.556411 23772 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:06.556427 23772 net.cpp:86] Creating Layer conv0
I0428 19:37:06.556432 23772 net.cpp:408] conv0 <- data
I0428 19:37:06.556442 23772 net.cpp:382] conv0 -> conv0
I0428 19:37:06.849654 23772 net.cpp:124] Setting up conv0
I0428 19:37:06.849684 23772 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:06.849689 23772 net.cpp:139] Memory required for data: 14946560
I0428 19:37:06.849705 23772 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:06.849720 23772 net.cpp:86] Creating Layer pool0
I0428 19:37:06.849745 23772 net.cpp:408] pool0 <- conv0
I0428 19:37:06.849752 23772 net.cpp:382] pool0 -> pool0
I0428 19:37:06.849809 23772 net.cpp:124] Setting up pool0
I0428 19:37:06.849817 23772 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:06.849822 23772 net.cpp:139] Memory required for data: 18632960
I0428 19:37:06.849825 23772 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:06.849833 23772 net.cpp:86] Creating Layer ip1
I0428 19:37:06.849838 23772 net.cpp:408] ip1 <- pool0
I0428 19:37:06.849843 23772 net.cpp:382] ip1 -> ip1
I0428 19:37:06.851819 23772 net.cpp:124] Setting up ip1
I0428 19:37:06.851835 23772 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:06.851838 23772 net.cpp:139] Memory required for data: 18635520
I0428 19:37:06.851847 23772 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:06.851856 23772 net.cpp:86] Creating Layer relu1
I0428 19:37:06.851861 23772 net.cpp:408] relu1 <- ip1
I0428 19:37:06.851866 23772 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:06.852058 23772 net.cpp:124] Setting up relu1
I0428 19:37:06.852068 23772 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:06.852072 23772 net.cpp:139] Memory required for data: 18638080
I0428 19:37:06.852077 23772 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:06.852084 23772 net.cpp:86] Creating Layer ip2
I0428 19:37:06.852087 23772 net.cpp:408] ip2 <- ip1
I0428 19:37:06.852093 23772 net.cpp:382] ip2 -> ip2
I0428 19:37:06.852205 23772 net.cpp:124] Setting up ip2
I0428 19:37:06.852213 23772 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:06.852217 23772 net.cpp:139] Memory required for data: 18650880
I0428 19:37:06.852226 23772 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:06.852231 23772 net.cpp:86] Creating Layer relu2
I0428 19:37:06.852234 23772 net.cpp:408] relu2 <- ip2
I0428 19:37:06.852239 23772 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:06.853094 23772 net.cpp:124] Setting up relu2
I0428 19:37:06.853109 23772 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:06.853113 23772 net.cpp:139] Memory required for data: 18663680
I0428 19:37:06.853117 23772 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:06.853126 23772 net.cpp:86] Creating Layer ip3
I0428 19:37:06.853128 23772 net.cpp:408] ip3 <- ip2
I0428 19:37:06.853135 23772 net.cpp:382] ip3 -> ip3
I0428 19:37:06.853248 23772 net.cpp:124] Setting up ip3
I0428 19:37:06.853256 23772 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:06.853260 23772 net.cpp:139] Memory required for data: 18666240
I0428 19:37:06.853266 23772 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:06.853273 23772 net.cpp:86] Creating Layer relu3
I0428 19:37:06.853277 23772 net.cpp:408] relu3 <- ip3
I0428 19:37:06.853282 23772 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:06.853451 23772 net.cpp:124] Setting up relu3
I0428 19:37:06.853461 23772 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:06.853463 23772 net.cpp:139] Memory required for data: 18668800
I0428 19:37:06.853467 23772 layer_factory.hpp:77] Creating layer loss
I0428 19:37:06.853473 23772 net.cpp:86] Creating Layer loss
I0428 19:37:06.853477 23772 net.cpp:408] loss <- ip3
I0428 19:37:06.853482 23772 net.cpp:408] loss <- label
I0428 19:37:06.853487 23772 net.cpp:382] loss -> loss
I0428 19:37:06.853507 23772 layer_factory.hpp:77] Creating layer loss
I0428 19:37:06.853767 23772 net.cpp:124] Setting up loss
I0428 19:37:06.853777 23772 net.cpp:131] Top shape: (1)
I0428 19:37:06.853781 23772 net.cpp:134]     with loss weight 1
I0428 19:37:06.853796 23772 net.cpp:139] Memory required for data: 18668804
I0428 19:37:06.853801 23772 net.cpp:200] loss needs backward computation.
I0428 19:37:06.853804 23772 net.cpp:200] relu3 needs backward computation.
I0428 19:37:06.853808 23772 net.cpp:200] ip3 needs backward computation.
I0428 19:37:06.853811 23772 net.cpp:200] relu2 needs backward computation.
I0428 19:37:06.853814 23772 net.cpp:200] ip2 needs backward computation.
I0428 19:37:06.853818 23772 net.cpp:200] relu1 needs backward computation.
I0428 19:37:06.853821 23772 net.cpp:200] ip1 needs backward computation.
I0428 19:37:06.853837 23772 net.cpp:200] pool0 needs backward computation.
I0428 19:37:06.853839 23772 net.cpp:200] conv0 needs backward computation.
I0428 19:37:06.853843 23772 net.cpp:202] mnist does not need backward computation.
I0428 19:37:06.853847 23772 net.cpp:244] This network produces output loss
I0428 19:37:06.853855 23772 net.cpp:257] Network initialization done.
I0428 19:37:06.854174 23772 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test253.prototxt
I0428 19:37:06.854203 23772 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:06.854295 23772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:06.854367 23772 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:06.854415 23772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:06.854431 23772 net.cpp:86] Creating Layer mnist
I0428 19:37:06.854436 23772 net.cpp:382] mnist -> data
I0428 19:37:06.854445 23772 net.cpp:382] mnist -> label
I0428 19:37:06.854543 23772 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:06.855726 23772 net.cpp:124] Setting up mnist
I0428 19:37:06.855741 23772 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:06.855747 23772 net.cpp:131] Top shape: 100 (100)
I0428 19:37:06.855751 23772 net.cpp:139] Memory required for data: 314000
I0428 19:37:06.855756 23772 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:06.855763 23772 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:06.855767 23772 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:06.855773 23772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:06.855780 23772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:06.855901 23772 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:06.855911 23772 net.cpp:131] Top shape: 100 (100)
I0428 19:37:06.855914 23772 net.cpp:131] Top shape: 100 (100)
I0428 19:37:06.855918 23772 net.cpp:139] Memory required for data: 314800
I0428 19:37:06.855932 23772 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:06.855942 23772 net.cpp:86] Creating Layer conv0
I0428 19:37:06.855947 23772 net.cpp:408] conv0 <- data
I0428 19:37:06.855952 23772 net.cpp:382] conv0 -> conv0
I0428 19:37:06.857805 23772 net.cpp:124] Setting up conv0
I0428 19:37:06.857821 23772 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:06.857825 23772 net.cpp:139] Memory required for data: 23354800
I0428 19:37:06.857837 23772 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:06.857844 23772 net.cpp:86] Creating Layer pool0
I0428 19:37:06.857848 23772 net.cpp:408] pool0 <- conv0
I0428 19:37:06.857856 23772 net.cpp:382] pool0 -> pool0
I0428 19:37:06.857898 23772 net.cpp:124] Setting up pool0
I0428 19:37:06.857905 23772 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:06.857909 23772 net.cpp:139] Memory required for data: 29114800
I0428 19:37:06.857913 23772 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:06.857920 23772 net.cpp:86] Creating Layer ip1
I0428 19:37:06.857923 23772 net.cpp:408] ip1 <- pool0
I0428 19:37:06.857929 23772 net.cpp:382] ip1 -> ip1
I0428 19:37:06.859932 23772 net.cpp:124] Setting up ip1
I0428 19:37:06.859947 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.859951 23772 net.cpp:139] Memory required for data: 29118800
I0428 19:37:06.859961 23772 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:06.859968 23772 net.cpp:86] Creating Layer relu1
I0428 19:37:06.859972 23772 net.cpp:408] relu1 <- ip1
I0428 19:37:06.859977 23772 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:06.860177 23772 net.cpp:124] Setting up relu1
I0428 19:37:06.860188 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.860191 23772 net.cpp:139] Memory required for data: 29122800
I0428 19:37:06.860194 23772 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:06.860201 23772 net.cpp:86] Creating Layer ip2
I0428 19:37:06.860204 23772 net.cpp:408] ip2 <- ip1
I0428 19:37:06.860213 23772 net.cpp:382] ip2 -> ip2
I0428 19:37:06.860333 23772 net.cpp:124] Setting up ip2
I0428 19:37:06.860342 23772 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:06.860347 23772 net.cpp:139] Memory required for data: 29142800
I0428 19:37:06.860354 23772 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:06.860361 23772 net.cpp:86] Creating Layer relu2
I0428 19:37:06.860365 23772 net.cpp:408] relu2 <- ip2
I0428 19:37:06.860369 23772 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:06.861237 23772 net.cpp:124] Setting up relu2
I0428 19:37:06.861250 23772 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:06.861255 23772 net.cpp:139] Memory required for data: 29162800
I0428 19:37:06.861259 23772 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:06.861269 23772 net.cpp:86] Creating Layer ip3
I0428 19:37:06.861274 23772 net.cpp:408] ip3 <- ip2
I0428 19:37:06.861280 23772 net.cpp:382] ip3 -> ip3
I0428 19:37:06.861438 23772 net.cpp:124] Setting up ip3
I0428 19:37:06.861449 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.861452 23772 net.cpp:139] Memory required for data: 29166800
I0428 19:37:06.861459 23772 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:06.861464 23772 net.cpp:86] Creating Layer relu3
I0428 19:37:06.861469 23772 net.cpp:408] relu3 <- ip3
I0428 19:37:06.861474 23772 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:06.861690 23772 net.cpp:124] Setting up relu3
I0428 19:37:06.861701 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.861706 23772 net.cpp:139] Memory required for data: 29170800
I0428 19:37:06.861708 23772 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:06.861713 23772 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:06.861717 23772 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:06.861722 23772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:06.861728 23772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:06.861771 23772 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:06.861778 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.861793 23772 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:06.861796 23772 net.cpp:139] Memory required for data: 29178800
I0428 19:37:06.861800 23772 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:06.861810 23772 net.cpp:86] Creating Layer accuracy
I0428 19:37:06.861815 23772 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:06.861819 23772 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:06.861826 23772 net.cpp:382] accuracy -> accuracy
I0428 19:37:06.861835 23772 net.cpp:124] Setting up accuracy
I0428 19:37:06.861840 23772 net.cpp:131] Top shape: (1)
I0428 19:37:06.861842 23772 net.cpp:139] Memory required for data: 29178804
I0428 19:37:06.861845 23772 layer_factory.hpp:77] Creating layer loss
I0428 19:37:06.861850 23772 net.cpp:86] Creating Layer loss
I0428 19:37:06.861856 23772 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:06.861860 23772 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:06.861865 23772 net.cpp:382] loss -> loss
I0428 19:37:06.861872 23772 layer_factory.hpp:77] Creating layer loss
I0428 19:37:06.862151 23772 net.cpp:124] Setting up loss
I0428 19:37:06.862161 23772 net.cpp:131] Top shape: (1)
I0428 19:37:06.862165 23772 net.cpp:134]     with loss weight 1
I0428 19:37:06.862172 23772 net.cpp:139] Memory required for data: 29178808
I0428 19:37:06.862176 23772 net.cpp:200] loss needs backward computation.
I0428 19:37:06.862181 23772 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:06.862185 23772 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:06.862190 23772 net.cpp:200] relu3 needs backward computation.
I0428 19:37:06.862192 23772 net.cpp:200] ip3 needs backward computation.
I0428 19:37:06.862195 23772 net.cpp:200] relu2 needs backward computation.
I0428 19:37:06.862198 23772 net.cpp:200] ip2 needs backward computation.
I0428 19:37:06.862202 23772 net.cpp:200] relu1 needs backward computation.
I0428 19:37:06.862205 23772 net.cpp:200] ip1 needs backward computation.
I0428 19:37:06.862208 23772 net.cpp:200] pool0 needs backward computation.
I0428 19:37:06.862211 23772 net.cpp:200] conv0 needs backward computation.
I0428 19:37:06.862215 23772 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:06.862220 23772 net.cpp:202] mnist does not need backward computation.
I0428 19:37:06.862223 23772 net.cpp:244] This network produces output accuracy
I0428 19:37:06.862227 23772 net.cpp:244] This network produces output loss
I0428 19:37:06.862239 23772 net.cpp:257] Network initialization done.
I0428 19:37:06.862280 23772 solver.cpp:56] Solver scaffolding done.
I0428 19:37:06.862597 23772 caffe.cpp:248] Starting Optimization
I0428 19:37:06.862604 23772 solver.cpp:273] Solving LeNet
I0428 19:37:06.862607 23772 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:06.864190 23772 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:07.025902 23779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:07.031935 23772 solver.cpp:398]     Test net output #0: accuracy = 0.1166
I0428 19:37:07.031955 23772 solver.cpp:398]     Test net output #1: loss = 2.30863 (* 1 = 2.30863 loss)
I0428 19:37:07.036763 23772 solver.cpp:219] Iteration 0 (0 iter/s, 0.174119s/100 iters), loss = 2.32754
I0428 19:37:07.036788 23772 solver.cpp:238]     Train net output #0: loss = 2.32754 (* 1 = 2.32754 loss)
I0428 19:37:07.036836 23772 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:07.260068 23772 solver.cpp:219] Iteration 100 (447.905 iter/s, 0.223262s/100 iters), loss = 1.00837
I0428 19:37:07.260095 23772 solver.cpp:238]     Train net output #0: loss = 1.00837 (* 1 = 1.00837 loss)
I0428 19:37:07.260102 23772 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:07.483762 23772 solver.cpp:219] Iteration 200 (447.128 iter/s, 0.22365s/100 iters), loss = 0.395843
I0428 19:37:07.483788 23772 solver.cpp:238]     Train net output #0: loss = 0.395843 (* 1 = 0.395843 loss)
I0428 19:37:07.483794 23772 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:07.708456 23772 solver.cpp:219] Iteration 300 (445.134 iter/s, 0.224651s/100 iters), loss = 0.358125
I0428 19:37:07.708497 23772 solver.cpp:238]     Train net output #0: loss = 0.358125 (* 1 = 0.358125 loss)
I0428 19:37:07.708503 23772 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:07.935326 23772 solver.cpp:219] Iteration 400 (440.89 iter/s, 0.226814s/100 iters), loss = 0.204214
I0428 19:37:07.935354 23772 solver.cpp:238]     Train net output #0: loss = 0.204214 (* 1 = 0.204214 loss)
I0428 19:37:07.935361 23772 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:08.157302 23772 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:08.315711 23779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:08.320116 23772 solver.cpp:398]     Test net output #0: accuracy = 0.9376
I0428 19:37:08.320135 23772 solver.cpp:398]     Test net output #1: loss = 0.215434 (* 1 = 0.215434 loss)
I0428 19:37:08.322363 23772 solver.cpp:219] Iteration 500 (258.408 iter/s, 0.386985s/100 iters), loss = 0.341219
I0428 19:37:08.322386 23772 solver.cpp:238]     Train net output #0: loss = 0.341219 (* 1 = 0.341219 loss)
I0428 19:37:08.322407 23772 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:08.555512 23772 solver.cpp:219] Iteration 600 (428.983 iter/s, 0.233109s/100 iters), loss = 0.101545
I0428 19:37:08.555539 23772 solver.cpp:238]     Train net output #0: loss = 0.101545 (* 1 = 0.101545 loss)
I0428 19:37:08.555546 23772 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:08.784531 23772 solver.cpp:219] Iteration 700 (436.73 iter/s, 0.228975s/100 iters), loss = 0.323981
I0428 19:37:08.784559 23772 solver.cpp:238]     Train net output #0: loss = 0.323981 (* 1 = 0.323981 loss)
I0428 19:37:08.784565 23772 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:09.014806 23772 solver.cpp:219] Iteration 800 (434.348 iter/s, 0.23023s/100 iters), loss = 0.281532
I0428 19:37:09.014834 23772 solver.cpp:238]     Train net output #0: loss = 0.281532 (* 1 = 0.281532 loss)
I0428 19:37:09.014842 23772 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:09.243434 23772 solver.cpp:219] Iteration 900 (437.479 iter/s, 0.228582s/100 iters), loss = 0.239467
I0428 19:37:09.243463 23772 solver.cpp:238]     Train net output #0: loss = 0.239467 (* 1 = 0.239467 loss)
I0428 19:37:09.243469 23772 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:09.318755 23778 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:09.468083 23772 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:09.472278 23772 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:09.474833 23772 solver.cpp:311] Iteration 1000, loss = 0.22597
I0428 19:37:09.474851 23772 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:09.633666 23779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:09.638288 23772 solver.cpp:398]     Test net output #0: accuracy = 0.9641
I0428 19:37:09.638309 23772 solver.cpp:398]     Test net output #1: loss = 0.123971 (* 1 = 0.123971 loss)
I0428 19:37:09.638314 23772 solver.cpp:316] Optimization Done.
I0428 19:37:09.638317 23772 caffe.cpp:259] Optimization Done.
