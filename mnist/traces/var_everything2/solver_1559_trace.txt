I0428 20:31:40.364085  3988 caffe.cpp:218] Using GPUs 0
I0428 20:31:40.405988  3988 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:40.929101  3988 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1559.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:40.929275  3988 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1559.prototxt
I0428 20:31:40.929697  3988 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:40.929724  3988 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:40.929838  3988 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:40.929955  3988 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:40.930085  3988 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:40.930119  3988 net.cpp:86] Creating Layer mnist
I0428 20:31:40.930135  3988 net.cpp:382] mnist -> data
I0428 20:31:40.930166  3988 net.cpp:382] mnist -> label
I0428 20:31:40.931452  3988 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:40.933943  3988 net.cpp:124] Setting up mnist
I0428 20:31:40.933964  3988 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:40.933974  3988 net.cpp:131] Top shape: 64 (64)
I0428 20:31:40.933980  3988 net.cpp:139] Memory required for data: 200960
I0428 20:31:40.933991  3988 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:40.934016  3988 net.cpp:86] Creating Layer conv0
I0428 20:31:40.934041  3988 net.cpp:408] conv0 <- data
I0428 20:31:40.934063  3988 net.cpp:382] conv0 -> conv0
I0428 20:31:41.228003  3988 net.cpp:124] Setting up conv0
I0428 20:31:41.228036  3988 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:41.228044  3988 net.cpp:139] Memory required for data: 14946560
I0428 20:31:41.228067  3988 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:41.228087  3988 net.cpp:86] Creating Layer pool0
I0428 20:31:41.228096  3988 net.cpp:408] pool0 <- conv0
I0428 20:31:41.228108  3988 net.cpp:382] pool0 -> pool0
I0428 20:31:41.228181  3988 net.cpp:124] Setting up pool0
I0428 20:31:41.228193  3988 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:41.228199  3988 net.cpp:139] Memory required for data: 18632960
I0428 20:31:41.228205  3988 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:41.228224  3988 net.cpp:86] Creating Layer conv1
I0428 20:31:41.228232  3988 net.cpp:408] conv1 <- pool0
I0428 20:31:41.228243  3988 net.cpp:382] conv1 -> conv1
I0428 20:31:41.230569  3988 net.cpp:124] Setting up conv1
I0428 20:31:41.230589  3988 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:41.230597  3988 net.cpp:139] Memory required for data: 18796800
I0428 20:31:41.230613  3988 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:41.230628  3988 net.cpp:86] Creating Layer pool1
I0428 20:31:41.230635  3988 net.cpp:408] pool1 <- conv1
I0428 20:31:41.230645  3988 net.cpp:382] pool1 -> pool1
I0428 20:31:41.230697  3988 net.cpp:124] Setting up pool1
I0428 20:31:41.230710  3988 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:41.230715  3988 net.cpp:139] Memory required for data: 18837760
I0428 20:31:41.230721  3988 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:41.230736  3988 net.cpp:86] Creating Layer ip1
I0428 20:31:41.230742  3988 net.cpp:408] ip1 <- pool1
I0428 20:31:41.230752  3988 net.cpp:382] ip1 -> ip1
I0428 20:31:41.231915  3988 net.cpp:124] Setting up ip1
I0428 20:31:41.231932  3988 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:41.231940  3988 net.cpp:139] Memory required for data: 18850560
I0428 20:31:41.231956  3988 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:41.231967  3988 net.cpp:86] Creating Layer relu1
I0428 20:31:41.231981  3988 net.cpp:408] relu1 <- ip1
I0428 20:31:41.231992  3988 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:41.232201  3988 net.cpp:124] Setting up relu1
I0428 20:31:41.232213  3988 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:41.232220  3988 net.cpp:139] Memory required for data: 18863360
I0428 20:31:41.232228  3988 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:41.232239  3988 net.cpp:86] Creating Layer ip2
I0428 20:31:41.232246  3988 net.cpp:408] ip2 <- ip1
I0428 20:31:41.232257  3988 net.cpp:382] ip2 -> ip2
I0428 20:31:41.232403  3988 net.cpp:124] Setting up ip2
I0428 20:31:41.232414  3988 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:41.232421  3988 net.cpp:139] Memory required for data: 18876160
I0428 20:31:41.232432  3988 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:41.232445  3988 net.cpp:86] Creating Layer relu2
I0428 20:31:41.232455  3988 net.cpp:408] relu2 <- ip2
I0428 20:31:41.232465  3988 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:41.233341  3988 net.cpp:124] Setting up relu2
I0428 20:31:41.233359  3988 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:41.233366  3988 net.cpp:139] Memory required for data: 18888960
I0428 20:31:41.233373  3988 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:41.233386  3988 net.cpp:86] Creating Layer ip3
I0428 20:31:41.233393  3988 net.cpp:408] ip3 <- ip2
I0428 20:31:41.233405  3988 net.cpp:382] ip3 -> ip3
I0428 20:31:41.233535  3988 net.cpp:124] Setting up ip3
I0428 20:31:41.233546  3988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:41.233552  3988 net.cpp:139] Memory required for data: 18891520
I0428 20:31:41.233567  3988 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:41.233578  3988 net.cpp:86] Creating Layer relu3
I0428 20:31:41.233585  3988 net.cpp:408] relu3 <- ip3
I0428 20:31:41.233594  3988 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:41.233796  3988 net.cpp:124] Setting up relu3
I0428 20:31:41.233809  3988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:41.233815  3988 net.cpp:139] Memory required for data: 18894080
I0428 20:31:41.233822  3988 layer_factory.hpp:77] Creating layer loss
I0428 20:31:41.233834  3988 net.cpp:86] Creating Layer loss
I0428 20:31:41.233839  3988 net.cpp:408] loss <- ip3
I0428 20:31:41.233849  3988 net.cpp:408] loss <- label
I0428 20:31:41.233858  3988 net.cpp:382] loss -> loss
I0428 20:31:41.233886  3988 layer_factory.hpp:77] Creating layer loss
I0428 20:31:41.234165  3988 net.cpp:124] Setting up loss
I0428 20:31:41.234179  3988 net.cpp:131] Top shape: (1)
I0428 20:31:41.234185  3988 net.cpp:134]     with loss weight 1
I0428 20:31:41.234210  3988 net.cpp:139] Memory required for data: 18894084
I0428 20:31:41.234216  3988 net.cpp:200] loss needs backward computation.
I0428 20:31:41.234225  3988 net.cpp:200] relu3 needs backward computation.
I0428 20:31:41.234230  3988 net.cpp:200] ip3 needs backward computation.
I0428 20:31:41.234236  3988 net.cpp:200] relu2 needs backward computation.
I0428 20:31:41.234243  3988 net.cpp:200] ip2 needs backward computation.
I0428 20:31:41.234249  3988 net.cpp:200] relu1 needs backward computation.
I0428 20:31:41.234256  3988 net.cpp:200] ip1 needs backward computation.
I0428 20:31:41.234261  3988 net.cpp:200] pool1 needs backward computation.
I0428 20:31:41.234268  3988 net.cpp:200] conv1 needs backward computation.
I0428 20:31:41.234274  3988 net.cpp:200] pool0 needs backward computation.
I0428 20:31:41.234282  3988 net.cpp:200] conv0 needs backward computation.
I0428 20:31:41.234288  3988 net.cpp:202] mnist does not need backward computation.
I0428 20:31:41.234294  3988 net.cpp:244] This network produces output loss
I0428 20:31:41.234313  3988 net.cpp:257] Network initialization done.
I0428 20:31:41.234709  3988 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1559.prototxt
I0428 20:31:41.234750  3988 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:41.234869  3988 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:41.235004  3988 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:41.235075  3988 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:41.235096  3988 net.cpp:86] Creating Layer mnist
I0428 20:31:41.235105  3988 net.cpp:382] mnist -> data
I0428 20:31:41.235121  3988 net.cpp:382] mnist -> label
I0428 20:31:41.235262  3988 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:41.237875  3988 net.cpp:124] Setting up mnist
I0428 20:31:41.237893  3988 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:41.237908  3988 net.cpp:131] Top shape: 100 (100)
I0428 20:31:41.237915  3988 net.cpp:139] Memory required for data: 314000
I0428 20:31:41.237922  3988 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:41.237960  3988 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:41.237968  3988 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:41.237978  3988 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:41.237992  3988 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:41.238085  3988 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:41.238096  3988 net.cpp:131] Top shape: 100 (100)
I0428 20:31:41.238104  3988 net.cpp:131] Top shape: 100 (100)
I0428 20:31:41.238111  3988 net.cpp:139] Memory required for data: 314800
I0428 20:31:41.238117  3988 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:41.238133  3988 net.cpp:86] Creating Layer conv0
I0428 20:31:41.238142  3988 net.cpp:408] conv0 <- data
I0428 20:31:41.238153  3988 net.cpp:382] conv0 -> conv0
I0428 20:31:41.239900  3988 net.cpp:124] Setting up conv0
I0428 20:31:41.239919  3988 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:41.239928  3988 net.cpp:139] Memory required for data: 23354800
I0428 20:31:41.239944  3988 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:41.239956  3988 net.cpp:86] Creating Layer pool0
I0428 20:31:41.239965  3988 net.cpp:408] pool0 <- conv0
I0428 20:31:41.239975  3988 net.cpp:382] pool0 -> pool0
I0428 20:31:41.240026  3988 net.cpp:124] Setting up pool0
I0428 20:31:41.240036  3988 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:41.240042  3988 net.cpp:139] Memory required for data: 29114800
I0428 20:31:41.240049  3988 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:41.240066  3988 net.cpp:86] Creating Layer conv1
I0428 20:31:41.240073  3988 net.cpp:408] conv1 <- pool0
I0428 20:31:41.240085  3988 net.cpp:382] conv1 -> conv1
I0428 20:31:41.241919  3988 net.cpp:124] Setting up conv1
I0428 20:31:41.241938  3988 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:41.241947  3988 net.cpp:139] Memory required for data: 29370800
I0428 20:31:41.241963  3988 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:41.241979  3988 net.cpp:86] Creating Layer pool1
I0428 20:31:41.241993  3988 net.cpp:408] pool1 <- conv1
I0428 20:31:41.242003  3988 net.cpp:382] pool1 -> pool1
I0428 20:31:41.242053  3988 net.cpp:124] Setting up pool1
I0428 20:31:41.242064  3988 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:41.242070  3988 net.cpp:139] Memory required for data: 29434800
I0428 20:31:41.242076  3988 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:41.242087  3988 net.cpp:86] Creating Layer ip1
I0428 20:31:41.242095  3988 net.cpp:408] ip1 <- pool1
I0428 20:31:41.242105  3988 net.cpp:382] ip1 -> ip1
I0428 20:31:41.242285  3988 net.cpp:124] Setting up ip1
I0428 20:31:41.242308  3988 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:41.242316  3988 net.cpp:139] Memory required for data: 29454800
I0428 20:31:41.242331  3988 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:41.242347  3988 net.cpp:86] Creating Layer relu1
I0428 20:31:41.242357  3988 net.cpp:408] relu1 <- ip1
I0428 20:31:41.242367  3988 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:41.242561  3988 net.cpp:124] Setting up relu1
I0428 20:31:41.242573  3988 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:41.242580  3988 net.cpp:139] Memory required for data: 29474800
I0428 20:31:41.242588  3988 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:41.242602  3988 net.cpp:86] Creating Layer ip2
I0428 20:31:41.242610  3988 net.cpp:408] ip2 <- ip1
I0428 20:31:41.242621  3988 net.cpp:382] ip2 -> ip2
I0428 20:31:41.242786  3988 net.cpp:124] Setting up ip2
I0428 20:31:41.242796  3988 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:41.242804  3988 net.cpp:139] Memory required for data: 29494800
I0428 20:31:41.242815  3988 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:41.242825  3988 net.cpp:86] Creating Layer relu2
I0428 20:31:41.242830  3988 net.cpp:408] relu2 <- ip2
I0428 20:31:41.242839  3988 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:41.243026  3988 net.cpp:124] Setting up relu2
I0428 20:31:41.243038  3988 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:41.243044  3988 net.cpp:139] Memory required for data: 29514800
I0428 20:31:41.243052  3988 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:41.243062  3988 net.cpp:86] Creating Layer ip3
I0428 20:31:41.243069  3988 net.cpp:408] ip3 <- ip2
I0428 20:31:41.243080  3988 net.cpp:382] ip3 -> ip3
I0428 20:31:41.243208  3988 net.cpp:124] Setting up ip3
I0428 20:31:41.243218  3988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:41.243227  3988 net.cpp:139] Memory required for data: 29518800
I0428 20:31:41.243242  3988 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:41.243252  3988 net.cpp:86] Creating Layer relu3
I0428 20:31:41.243260  3988 net.cpp:408] relu3 <- ip3
I0428 20:31:41.243269  3988 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:41.244210  3988 net.cpp:124] Setting up relu3
I0428 20:31:41.244226  3988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:41.244233  3988 net.cpp:139] Memory required for data: 29522800
I0428 20:31:41.244240  3988 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:41.244251  3988 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:41.244257  3988 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:41.244269  3988 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:41.244282  3988 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:41.244335  3988 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:41.244345  3988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:41.244354  3988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:41.244360  3988 net.cpp:139] Memory required for data: 29530800
I0428 20:31:41.244367  3988 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:41.244377  3988 net.cpp:86] Creating Layer accuracy
I0428 20:31:41.244385  3988 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:41.244392  3988 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:41.244402  3988 net.cpp:382] accuracy -> accuracy
I0428 20:31:41.244415  3988 net.cpp:124] Setting up accuracy
I0428 20:31:41.244426  3988 net.cpp:131] Top shape: (1)
I0428 20:31:41.244432  3988 net.cpp:139] Memory required for data: 29530804
I0428 20:31:41.244438  3988 layer_factory.hpp:77] Creating layer loss
I0428 20:31:41.244447  3988 net.cpp:86] Creating Layer loss
I0428 20:31:41.244454  3988 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:41.244462  3988 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:41.244472  3988 net.cpp:382] loss -> loss
I0428 20:31:41.244483  3988 layer_factory.hpp:77] Creating layer loss
I0428 20:31:41.244761  3988 net.cpp:124] Setting up loss
I0428 20:31:41.244774  3988 net.cpp:131] Top shape: (1)
I0428 20:31:41.244781  3988 net.cpp:134]     with loss weight 1
I0428 20:31:41.244804  3988 net.cpp:139] Memory required for data: 29530808
I0428 20:31:41.244820  3988 net.cpp:200] loss needs backward computation.
I0428 20:31:41.244828  3988 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:41.244837  3988 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:41.244843  3988 net.cpp:200] relu3 needs backward computation.
I0428 20:31:41.244848  3988 net.cpp:200] ip3 needs backward computation.
I0428 20:31:41.244854  3988 net.cpp:200] relu2 needs backward computation.
I0428 20:31:41.244860  3988 net.cpp:200] ip2 needs backward computation.
I0428 20:31:41.244868  3988 net.cpp:200] relu1 needs backward computation.
I0428 20:31:41.244874  3988 net.cpp:200] ip1 needs backward computation.
I0428 20:31:41.244880  3988 net.cpp:200] pool1 needs backward computation.
I0428 20:31:41.244887  3988 net.cpp:200] conv1 needs backward computation.
I0428 20:31:41.244894  3988 net.cpp:200] pool0 needs backward computation.
I0428 20:31:41.244900  3988 net.cpp:200] conv0 needs backward computation.
I0428 20:31:41.244912  3988 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:41.244920  3988 net.cpp:202] mnist does not need backward computation.
I0428 20:31:41.244926  3988 net.cpp:244] This network produces output accuracy
I0428 20:31:41.244933  3988 net.cpp:244] This network produces output loss
I0428 20:31:41.244953  3988 net.cpp:257] Network initialization done.
I0428 20:31:41.245019  3988 solver.cpp:56] Solver scaffolding done.
I0428 20:31:41.245468  3988 caffe.cpp:248] Starting Optimization
I0428 20:31:41.245477  3988 solver.cpp:273] Solving LeNet
I0428 20:31:41.245482  3988 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:41.246378  3988 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:41.344322  3988 blocking_queue.cpp:49] Waiting for data
I0428 20:31:41.346290  3995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:41.347446  3988 solver.cpp:398]     Test net output #0: accuracy = 0.1015
I0428 20:31:41.347466  3988 solver.cpp:398]     Test net output #1: loss = 2.32039 (* 1 = 2.32039 loss)
I0428 20:31:41.352296  3988 solver.cpp:219] Iteration 0 (-7.60905e-43 iter/s, 0.106774s/100 iters), loss = 2.31857
I0428 20:31:41.352324  3988 solver.cpp:238]     Train net output #0: loss = 2.31857 (* 1 = 2.31857 loss)
I0428 20:31:41.352341  3988 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:41.578241  3988 solver.cpp:219] Iteration 100 (442.681 iter/s, 0.225896s/100 iters), loss = 0.723695
I0428 20:31:41.578302  3988 solver.cpp:238]     Train net output #0: loss = 0.723695 (* 1 = 0.723695 loss)
I0428 20:31:41.578323  3988 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:41.809849  3988 solver.cpp:219] Iteration 200 (431.899 iter/s, 0.231536s/100 iters), loss = 0.50083
I0428 20:31:41.809916  3988 solver.cpp:238]     Train net output #0: loss = 0.50083 (* 1 = 0.50083 loss)
I0428 20:31:41.809937  3988 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:42.039744  3988 solver.cpp:219] Iteration 300 (435.128 iter/s, 0.229817s/100 iters), loss = 0.475985
I0428 20:31:42.039805  3988 solver.cpp:238]     Train net output #0: loss = 0.475985 (* 1 = 0.475985 loss)
I0428 20:31:42.039826  3988 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:42.269315  3988 solver.cpp:219] Iteration 400 (435.736 iter/s, 0.229497s/100 iters), loss = 0.476886
I0428 20:31:42.269374  3988 solver.cpp:238]     Train net output #0: loss = 0.476886 (* 1 = 0.476886 loss)
I0428 20:31:42.269397  3988 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:42.488400  3988 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:42.592480  3995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:42.595023  3988 solver.cpp:398]     Test net output #0: accuracy = 0.9342
I0428 20:31:42.595052  3988 solver.cpp:398]     Test net output #1: loss = 0.375426 (* 1 = 0.375426 loss)
I0428 20:31:42.597049  3988 solver.cpp:219] Iteration 500 (305.193 iter/s, 0.327662s/100 iters), loss = 0.322523
I0428 20:31:42.597098  3988 solver.cpp:238]     Train net output #0: loss = 0.322523 (* 1 = 0.322523 loss)
I0428 20:31:42.597108  3988 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:42.812834  3988 solver.cpp:219] Iteration 600 (463.577 iter/s, 0.215714s/100 iters), loss = 0.267328
I0428 20:31:42.812888  3988 solver.cpp:238]     Train net output #0: loss = 0.267328 (* 1 = 0.267328 loss)
I0428 20:31:42.812902  3988 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:43.046214  3988 solver.cpp:219] Iteration 700 (428.618 iter/s, 0.233308s/100 iters), loss = 0.405328
I0428 20:31:43.046270  3988 solver.cpp:238]     Train net output #0: loss = 0.405329 (* 1 = 0.405329 loss)
I0428 20:31:43.046285  3988 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:43.275688  3988 solver.cpp:219] Iteration 800 (435.919 iter/s, 0.229401s/100 iters), loss = 0.483885
I0428 20:31:43.275743  3988 solver.cpp:238]     Train net output #0: loss = 0.483885 (* 1 = 0.483885 loss)
I0428 20:31:43.275758  3988 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:43.506858  3988 solver.cpp:219] Iteration 900 (432.716 iter/s, 0.231098s/100 iters), loss = 0.371304
I0428 20:31:43.506914  3988 solver.cpp:238]     Train net output #0: loss = 0.371304 (* 1 = 0.371304 loss)
I0428 20:31:43.506929  3988 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:43.583372  3994 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:43.733021  3988 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:43.735395  3988 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:43.737001  3988 solver.cpp:311] Iteration 1000, loss = 0.382633
I0428 20:31:43.737031  3988 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:43.839586  3995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:43.843145  3988 solver.cpp:398]     Test net output #0: accuracy = 0.9575
I0428 20:31:43.843169  3988 solver.cpp:398]     Test net output #1: loss = 0.323914 (* 1 = 0.323914 loss)
I0428 20:31:43.843175  3988 solver.cpp:316] Optimization Done.
I0428 20:31:43.843179  3988 caffe.cpp:259] Optimization Done.
