I0428 20:26:11.802778  2754 caffe.cpp:218] Using GPUs 0
I0428 20:26:11.841298  2754 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:12.354872  2754 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1467.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:12.355027  2754 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1467.prototxt
I0428 20:26:12.355448  2754 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:12.355466  2754 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:12.355569  2754 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:12.355648  2754 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:12.355747  2754 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:12.355772  2754 net.cpp:86] Creating Layer mnist
I0428 20:26:12.355782  2754 net.cpp:382] mnist -> data
I0428 20:26:12.355804  2754 net.cpp:382] mnist -> label
I0428 20:26:12.356904  2754 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:12.359365  2754 net.cpp:124] Setting up mnist
I0428 20:26:12.359383  2754 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:12.359390  2754 net.cpp:131] Top shape: 64 (64)
I0428 20:26:12.359392  2754 net.cpp:139] Memory required for data: 200960
I0428 20:26:12.359400  2754 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:12.359426  2754 net.cpp:86] Creating Layer conv0
I0428 20:26:12.359447  2754 net.cpp:408] conv0 <- data
I0428 20:26:12.359460  2754 net.cpp:382] conv0 -> conv0
I0428 20:26:12.650343  2754 net.cpp:124] Setting up conv0
I0428 20:26:12.650374  2754 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:12.650379  2754 net.cpp:139] Memory required for data: 14946560
I0428 20:26:12.650398  2754 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:12.650413  2754 net.cpp:86] Creating Layer pool0
I0428 20:26:12.650418  2754 net.cpp:408] pool0 <- conv0
I0428 20:26:12.650424  2754 net.cpp:382] pool0 -> pool0
I0428 20:26:12.650480  2754 net.cpp:124] Setting up pool0
I0428 20:26:12.650486  2754 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:12.650490  2754 net.cpp:139] Memory required for data: 18632960
I0428 20:26:12.650494  2754 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:12.650507  2754 net.cpp:86] Creating Layer conv1
I0428 20:26:12.650511  2754 net.cpp:408] conv1 <- pool0
I0428 20:26:12.650517  2754 net.cpp:382] conv1 -> conv1
I0428 20:26:12.653726  2754 net.cpp:124] Setting up conv1
I0428 20:26:12.653744  2754 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:12.653748  2754 net.cpp:139] Memory required for data: 18665728
I0428 20:26:12.653759  2754 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:12.653769  2754 net.cpp:86] Creating Layer pool1
I0428 20:26:12.653774  2754 net.cpp:408] pool1 <- conv1
I0428 20:26:12.653780  2754 net.cpp:382] pool1 -> pool1
I0428 20:26:12.653827  2754 net.cpp:124] Setting up pool1
I0428 20:26:12.653834  2754 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:12.653837  2754 net.cpp:139] Memory required for data: 18673920
I0428 20:26:12.653841  2754 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:12.653849  2754 net.cpp:86] Creating Layer ip1
I0428 20:26:12.653853  2754 net.cpp:408] ip1 <- pool1
I0428 20:26:12.653859  2754 net.cpp:382] ip1 -> ip1
I0428 20:26:12.653986  2754 net.cpp:124] Setting up ip1
I0428 20:26:12.653995  2754 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:12.654000  2754 net.cpp:139] Memory required for data: 18680320
I0428 20:26:12.654008  2754 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:12.654016  2754 net.cpp:86] Creating Layer relu1
I0428 20:26:12.654019  2754 net.cpp:408] relu1 <- ip1
I0428 20:26:12.654026  2754 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:12.654230  2754 net.cpp:124] Setting up relu1
I0428 20:26:12.654240  2754 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:12.654244  2754 net.cpp:139] Memory required for data: 18686720
I0428 20:26:12.654248  2754 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:12.654256  2754 net.cpp:86] Creating Layer ip2
I0428 20:26:12.654259  2754 net.cpp:408] ip2 <- ip1
I0428 20:26:12.654268  2754 net.cpp:382] ip2 -> ip2
I0428 20:26:12.654392  2754 net.cpp:124] Setting up ip2
I0428 20:26:12.654399  2754 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:12.654402  2754 net.cpp:139] Memory required for data: 18693120
I0428 20:26:12.654409  2754 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:12.654417  2754 net.cpp:86] Creating Layer relu2
I0428 20:26:12.654419  2754 net.cpp:408] relu2 <- ip2
I0428 20:26:12.654427  2754 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:12.655280  2754 net.cpp:124] Setting up relu2
I0428 20:26:12.655295  2754 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:12.655300  2754 net.cpp:139] Memory required for data: 18699520
I0428 20:26:12.655304  2754 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:12.655313  2754 net.cpp:86] Creating Layer ip3
I0428 20:26:12.655318  2754 net.cpp:408] ip3 <- ip2
I0428 20:26:12.655324  2754 net.cpp:382] ip3 -> ip3
I0428 20:26:12.655449  2754 net.cpp:124] Setting up ip3
I0428 20:26:12.655458  2754 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:12.655462  2754 net.cpp:139] Memory required for data: 18702080
I0428 20:26:12.655472  2754 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:12.655479  2754 net.cpp:86] Creating Layer relu3
I0428 20:26:12.655483  2754 net.cpp:408] relu3 <- ip3
I0428 20:26:12.655488  2754 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:12.655699  2754 net.cpp:124] Setting up relu3
I0428 20:26:12.655710  2754 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:12.655714  2754 net.cpp:139] Memory required for data: 18704640
I0428 20:26:12.655717  2754 layer_factory.hpp:77] Creating layer loss
I0428 20:26:12.655725  2754 net.cpp:86] Creating Layer loss
I0428 20:26:12.655728  2754 net.cpp:408] loss <- ip3
I0428 20:26:12.655732  2754 net.cpp:408] loss <- label
I0428 20:26:12.655740  2754 net.cpp:382] loss -> loss
I0428 20:26:12.655760  2754 layer_factory.hpp:77] Creating layer loss
I0428 20:26:12.656052  2754 net.cpp:124] Setting up loss
I0428 20:26:12.656064  2754 net.cpp:131] Top shape: (1)
I0428 20:26:12.656066  2754 net.cpp:134]     with loss weight 1
I0428 20:26:12.656082  2754 net.cpp:139] Memory required for data: 18704644
I0428 20:26:12.656086  2754 net.cpp:200] loss needs backward computation.
I0428 20:26:12.656090  2754 net.cpp:200] relu3 needs backward computation.
I0428 20:26:12.656095  2754 net.cpp:200] ip3 needs backward computation.
I0428 20:26:12.656098  2754 net.cpp:200] relu2 needs backward computation.
I0428 20:26:12.656102  2754 net.cpp:200] ip2 needs backward computation.
I0428 20:26:12.656105  2754 net.cpp:200] relu1 needs backward computation.
I0428 20:26:12.656108  2754 net.cpp:200] ip1 needs backward computation.
I0428 20:26:12.656111  2754 net.cpp:200] pool1 needs backward computation.
I0428 20:26:12.656116  2754 net.cpp:200] conv1 needs backward computation.
I0428 20:26:12.656118  2754 net.cpp:200] pool0 needs backward computation.
I0428 20:26:12.656121  2754 net.cpp:200] conv0 needs backward computation.
I0428 20:26:12.656126  2754 net.cpp:202] mnist does not need backward computation.
I0428 20:26:12.656129  2754 net.cpp:244] This network produces output loss
I0428 20:26:12.656139  2754 net.cpp:257] Network initialization done.
I0428 20:26:12.656525  2754 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1467.prototxt
I0428 20:26:12.656556  2754 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:12.656664  2754 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:12.656764  2754 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:12.656826  2754 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:12.656842  2754 net.cpp:86] Creating Layer mnist
I0428 20:26:12.656849  2754 net.cpp:382] mnist -> data
I0428 20:26:12.656858  2754 net.cpp:382] mnist -> label
I0428 20:26:12.656965  2754 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:12.659209  2754 net.cpp:124] Setting up mnist
I0428 20:26:12.659225  2754 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:12.659231  2754 net.cpp:131] Top shape: 100 (100)
I0428 20:26:12.659235  2754 net.cpp:139] Memory required for data: 314000
I0428 20:26:12.659240  2754 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:12.659256  2754 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:12.659279  2754 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:12.659286  2754 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:12.659293  2754 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:12.659348  2754 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:12.659358  2754 net.cpp:131] Top shape: 100 (100)
I0428 20:26:12.659363  2754 net.cpp:131] Top shape: 100 (100)
I0428 20:26:12.659366  2754 net.cpp:139] Memory required for data: 314800
I0428 20:26:12.659370  2754 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:12.659381  2754 net.cpp:86] Creating Layer conv0
I0428 20:26:12.659386  2754 net.cpp:408] conv0 <- data
I0428 20:26:12.659394  2754 net.cpp:382] conv0 -> conv0
I0428 20:26:12.661392  2754 net.cpp:124] Setting up conv0
I0428 20:26:12.661409  2754 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:12.661414  2754 net.cpp:139] Memory required for data: 23354800
I0428 20:26:12.661425  2754 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:12.661432  2754 net.cpp:86] Creating Layer pool0
I0428 20:26:12.661437  2754 net.cpp:408] pool0 <- conv0
I0428 20:26:12.661444  2754 net.cpp:382] pool0 -> pool0
I0428 20:26:12.661489  2754 net.cpp:124] Setting up pool0
I0428 20:26:12.661494  2754 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:12.661497  2754 net.cpp:139] Memory required for data: 29114800
I0428 20:26:12.661501  2754 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:12.661514  2754 net.cpp:86] Creating Layer conv1
I0428 20:26:12.661517  2754 net.cpp:408] conv1 <- pool0
I0428 20:26:12.661523  2754 net.cpp:382] conv1 -> conv1
I0428 20:26:12.663327  2754 net.cpp:124] Setting up conv1
I0428 20:26:12.663347  2754 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:12.663352  2754 net.cpp:139] Memory required for data: 29166000
I0428 20:26:12.663363  2754 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:12.663372  2754 net.cpp:86] Creating Layer pool1
I0428 20:26:12.663375  2754 net.cpp:408] pool1 <- conv1
I0428 20:26:12.663381  2754 net.cpp:382] pool1 -> pool1
I0428 20:26:12.663429  2754 net.cpp:124] Setting up pool1
I0428 20:26:12.663435  2754 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:12.663439  2754 net.cpp:139] Memory required for data: 29178800
I0428 20:26:12.663444  2754 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:12.663450  2754 net.cpp:86] Creating Layer ip1
I0428 20:26:12.663453  2754 net.cpp:408] ip1 <- pool1
I0428 20:26:12.663467  2754 net.cpp:382] ip1 -> ip1
I0428 20:26:12.663591  2754 net.cpp:124] Setting up ip1
I0428 20:26:12.663600  2754 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:12.663616  2754 net.cpp:139] Memory required for data: 29188800
I0428 20:26:12.663625  2754 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:12.663632  2754 net.cpp:86] Creating Layer relu1
I0428 20:26:12.663636  2754 net.cpp:408] relu1 <- ip1
I0428 20:26:12.663642  2754 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:12.663898  2754 net.cpp:124] Setting up relu1
I0428 20:26:12.663908  2754 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:12.663913  2754 net.cpp:139] Memory required for data: 29198800
I0428 20:26:12.663916  2754 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:12.663925  2754 net.cpp:86] Creating Layer ip2
I0428 20:26:12.663929  2754 net.cpp:408] ip2 <- ip1
I0428 20:26:12.663936  2754 net.cpp:382] ip2 -> ip2
I0428 20:26:12.664074  2754 net.cpp:124] Setting up ip2
I0428 20:26:12.664083  2754 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:12.664088  2754 net.cpp:139] Memory required for data: 29208800
I0428 20:26:12.664094  2754 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:12.664101  2754 net.cpp:86] Creating Layer relu2
I0428 20:26:12.664113  2754 net.cpp:408] relu2 <- ip2
I0428 20:26:12.664122  2754 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:12.664316  2754 net.cpp:124] Setting up relu2
I0428 20:26:12.664326  2754 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:12.664331  2754 net.cpp:139] Memory required for data: 29218800
I0428 20:26:12.664335  2754 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:12.664342  2754 net.cpp:86] Creating Layer ip3
I0428 20:26:12.664346  2754 net.cpp:408] ip3 <- ip2
I0428 20:26:12.664353  2754 net.cpp:382] ip3 -> ip3
I0428 20:26:12.664474  2754 net.cpp:124] Setting up ip3
I0428 20:26:12.664484  2754 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:12.664487  2754 net.cpp:139] Memory required for data: 29222800
I0428 20:26:12.664496  2754 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:12.664508  2754 net.cpp:86] Creating Layer relu3
I0428 20:26:12.664512  2754 net.cpp:408] relu3 <- ip3
I0428 20:26:12.664517  2754 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:12.665463  2754 net.cpp:124] Setting up relu3
I0428 20:26:12.665478  2754 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:12.665482  2754 net.cpp:139] Memory required for data: 29226800
I0428 20:26:12.665487  2754 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:12.665493  2754 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:12.665496  2754 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:12.665503  2754 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:12.665513  2754 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:12.665558  2754 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:12.665565  2754 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:12.665570  2754 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:12.665573  2754 net.cpp:139] Memory required for data: 29234800
I0428 20:26:12.665577  2754 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:12.665583  2754 net.cpp:86] Creating Layer accuracy
I0428 20:26:12.665587  2754 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:12.665592  2754 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:12.665597  2754 net.cpp:382] accuracy -> accuracy
I0428 20:26:12.665606  2754 net.cpp:124] Setting up accuracy
I0428 20:26:12.665611  2754 net.cpp:131] Top shape: (1)
I0428 20:26:12.665613  2754 net.cpp:139] Memory required for data: 29234804
I0428 20:26:12.665616  2754 layer_factory.hpp:77] Creating layer loss
I0428 20:26:12.665624  2754 net.cpp:86] Creating Layer loss
I0428 20:26:12.665628  2754 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:12.665632  2754 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:12.665643  2754 net.cpp:382] loss -> loss
I0428 20:26:12.665652  2754 layer_factory.hpp:77] Creating layer loss
I0428 20:26:12.665936  2754 net.cpp:124] Setting up loss
I0428 20:26:12.665946  2754 net.cpp:131] Top shape: (1)
I0428 20:26:12.665951  2754 net.cpp:134]     with loss weight 1
I0428 20:26:12.665968  2754 net.cpp:139] Memory required for data: 29234808
I0428 20:26:12.665973  2754 net.cpp:200] loss needs backward computation.
I0428 20:26:12.665979  2754 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:12.665983  2754 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:12.665987  2754 net.cpp:200] relu3 needs backward computation.
I0428 20:26:12.665990  2754 net.cpp:200] ip3 needs backward computation.
I0428 20:26:12.665994  2754 net.cpp:200] relu2 needs backward computation.
I0428 20:26:12.666004  2754 net.cpp:200] ip2 needs backward computation.
I0428 20:26:12.666007  2754 net.cpp:200] relu1 needs backward computation.
I0428 20:26:12.666012  2754 net.cpp:200] ip1 needs backward computation.
I0428 20:26:12.666014  2754 net.cpp:200] pool1 needs backward computation.
I0428 20:26:12.666018  2754 net.cpp:200] conv1 needs backward computation.
I0428 20:26:12.666023  2754 net.cpp:200] pool0 needs backward computation.
I0428 20:26:12.666025  2754 net.cpp:200] conv0 needs backward computation.
I0428 20:26:12.666030  2754 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:12.666034  2754 net.cpp:202] mnist does not need backward computation.
I0428 20:26:12.666038  2754 net.cpp:244] This network produces output accuracy
I0428 20:26:12.666043  2754 net.cpp:244] This network produces output loss
I0428 20:26:12.666056  2754 net.cpp:257] Network initialization done.
I0428 20:26:12.666107  2754 solver.cpp:56] Solver scaffolding done.
I0428 20:26:12.666530  2754 caffe.cpp:248] Starting Optimization
I0428 20:26:12.666538  2754 solver.cpp:273] Solving LeNet
I0428 20:26:12.666540  2754 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:12.667511  2754 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:12.766917  2761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:12.769632  2754 solver.cpp:398]     Test net output #0: accuracy = 0.0991
I0428 20:26:12.769657  2754 solver.cpp:398]     Test net output #1: loss = 2.36212 (* 1 = 2.36212 loss)
I0428 20:26:12.774546  2754 solver.cpp:219] Iteration 0 (0 iter/s, 0.107972s/100 iters), loss = 2.39921
I0428 20:26:12.774575  2754 solver.cpp:238]     Train net output #0: loss = 2.39921 (* 1 = 2.39921 loss)
I0428 20:26:12.774590  2754 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:12.974423  2754 solver.cpp:219] Iteration 100 (500.432 iter/s, 0.199827s/100 iters), loss = 1.36453
I0428 20:26:12.974457  2754 solver.cpp:238]     Train net output #0: loss = 1.36453 (* 1 = 1.36453 loss)
I0428 20:26:12.974465  2754 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:13.194429  2754 solver.cpp:219] Iteration 200 (454.642 iter/s, 0.219953s/100 iters), loss = 1.17385
I0428 20:26:13.194473  2754 solver.cpp:238]     Train net output #0: loss = 1.17385 (* 1 = 1.17385 loss)
I0428 20:26:13.194484  2754 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:13.404580  2754 solver.cpp:219] Iteration 300 (475.982 iter/s, 0.210092s/100 iters), loss = 1.30468
I0428 20:26:13.404615  2754 solver.cpp:238]     Train net output #0: loss = 1.30468 (* 1 = 1.30468 loss)
I0428 20:26:13.404623  2754 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:13.620141  2754 solver.cpp:219] Iteration 400 (464.02 iter/s, 0.215508s/100 iters), loss = 1.33932
I0428 20:26:13.620185  2754 solver.cpp:238]     Train net output #0: loss = 1.33932 (* 1 = 1.33932 loss)
I0428 20:26:13.620196  2754 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:13.828863  2754 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:13.935767  2761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:13.938618  2754 solver.cpp:398]     Test net output #0: accuracy = 0.6287
I0428 20:26:13.938645  2754 solver.cpp:398]     Test net output #1: loss = 1.02848 (* 1 = 1.02848 loss)
I0428 20:26:13.940573  2754 solver.cpp:219] Iteration 500 (312.139 iter/s, 0.32037s/100 iters), loss = 1.30882
I0428 20:26:13.940603  2754 solver.cpp:238]     Train net output #0: loss = 1.30882 (* 1 = 1.30882 loss)
I0428 20:26:13.940630  2754 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:14.156783  2754 solver.cpp:219] Iteration 600 (462.622 iter/s, 0.216159s/100 iters), loss = 0.449774
I0428 20:26:14.156847  2754 solver.cpp:238]     Train net output #0: loss = 0.449774 (* 1 = 0.449774 loss)
I0428 20:26:14.156859  2754 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:14.375476  2754 solver.cpp:219] Iteration 700 (457.428 iter/s, 0.218614s/100 iters), loss = 0.531057
I0428 20:26:14.375525  2754 solver.cpp:238]     Train net output #0: loss = 0.531057 (* 1 = 0.531057 loss)
I0428 20:26:14.375538  2754 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:14.588917  2754 solver.cpp:219] Iteration 800 (468.661 iter/s, 0.213374s/100 iters), loss = 0.913857
I0428 20:26:14.588961  2754 solver.cpp:238]     Train net output #0: loss = 0.913857 (* 1 = 0.913857 loss)
I0428 20:26:14.588973  2754 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:14.799587  2754 solver.cpp:219] Iteration 900 (474.815 iter/s, 0.210608s/100 iters), loss = 0.427678
I0428 20:26:14.799639  2754 solver.cpp:238]     Train net output #0: loss = 0.427678 (* 1 = 0.427678 loss)
I0428 20:26:14.799654  2754 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:14.871973  2760 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:15.011009  2754 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:15.012933  2754 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:15.014155  2754 solver.cpp:311] Iteration 1000, loss = 0.474894
I0428 20:26:15.014184  2754 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:15.119335  2761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:15.122169  2754 solver.cpp:398]     Test net output #0: accuracy = 0.8509
I0428 20:26:15.122192  2754 solver.cpp:398]     Test net output #1: loss = 0.436485 (* 1 = 0.436485 loss)
I0428 20:26:15.122198  2754 solver.cpp:316] Optimization Done.
I0428 20:26:15.122203  2754 caffe.cpp:259] Optimization Done.
