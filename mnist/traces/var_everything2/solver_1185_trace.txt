I0428 20:12:42.168455 32295 caffe.cpp:218] Using GPUs 0
I0428 20:12:42.205505 32295 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:42.719949 32295 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1185.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:42.720090 32295 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1185.prototxt
I0428 20:12:42.720494 32295 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:42.720512 32295 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:42.720609 32295 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:42.720685 32295 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:42.720787 32295 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:42.720816 32295 net.cpp:86] Creating Layer mnist
I0428 20:12:42.720825 32295 net.cpp:382] mnist -> data
I0428 20:12:42.720847 32295 net.cpp:382] mnist -> label
I0428 20:12:42.721941 32295 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:42.724396 32295 net.cpp:124] Setting up mnist
I0428 20:12:42.724414 32295 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:42.724421 32295 net.cpp:131] Top shape: 64 (64)
I0428 20:12:42.724424 32295 net.cpp:139] Memory required for data: 200960
I0428 20:12:42.724432 32295 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:42.724448 32295 net.cpp:86] Creating Layer conv0
I0428 20:12:42.724468 32295 net.cpp:408] conv0 <- data
I0428 20:12:42.724480 32295 net.cpp:382] conv0 -> conv0
I0428 20:12:43.000901 32295 net.cpp:124] Setting up conv0
I0428 20:12:43.000941 32295 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:43.000946 32295 net.cpp:139] Memory required for data: 3887360
I0428 20:12:43.000960 32295 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:43.000973 32295 net.cpp:86] Creating Layer pool0
I0428 20:12:43.000977 32295 net.cpp:408] pool0 <- conv0
I0428 20:12:43.000982 32295 net.cpp:382] pool0 -> pool0
I0428 20:12:43.001044 32295 net.cpp:124] Setting up pool0
I0428 20:12:43.001049 32295 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:43.001051 32295 net.cpp:139] Memory required for data: 4808960
I0428 20:12:43.001055 32295 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:43.001066 32295 net.cpp:86] Creating Layer conv1
I0428 20:12:43.001068 32295 net.cpp:408] conv1 <- pool0
I0428 20:12:43.001073 32295 net.cpp:382] conv1 -> conv1
I0428 20:12:43.003278 32295 net.cpp:124] Setting up conv1
I0428 20:12:43.003291 32295 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:43.003311 32295 net.cpp:139] Memory required for data: 6447360
I0428 20:12:43.003334 32295 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:43.003340 32295 net.cpp:86] Creating Layer pool1
I0428 20:12:43.003345 32295 net.cpp:408] pool1 <- conv1
I0428 20:12:43.003348 32295 net.cpp:382] pool1 -> pool1
I0428 20:12:43.003396 32295 net.cpp:124] Setting up pool1
I0428 20:12:43.003401 32295 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:43.003404 32295 net.cpp:139] Memory required for data: 6856960
I0428 20:12:43.003407 32295 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:43.003418 32295 net.cpp:86] Creating Layer ip1
I0428 20:12:43.003422 32295 net.cpp:408] ip1 <- pool1
I0428 20:12:43.003425 32295 net.cpp:382] ip1 -> ip1
I0428 20:12:43.004477 32295 net.cpp:124] Setting up ip1
I0428 20:12:43.004503 32295 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:43.004508 32295 net.cpp:139] Memory required for data: 6859520
I0428 20:12:43.004515 32295 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:43.004523 32295 net.cpp:86] Creating Layer relu1
I0428 20:12:43.004525 32295 net.cpp:408] relu1 <- ip1
I0428 20:12:43.004530 32295 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:43.004721 32295 net.cpp:124] Setting up relu1
I0428 20:12:43.004731 32295 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:43.004734 32295 net.cpp:139] Memory required for data: 6862080
I0428 20:12:43.004737 32295 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:43.004743 32295 net.cpp:86] Creating Layer ip2
I0428 20:12:43.004746 32295 net.cpp:408] ip2 <- ip1
I0428 20:12:43.004750 32295 net.cpp:382] ip2 -> ip2
I0428 20:12:43.004878 32295 net.cpp:124] Setting up ip2
I0428 20:12:43.004904 32295 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:12:43.004907 32295 net.cpp:139] Memory required for data: 6868480
I0428 20:12:43.004914 32295 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:43.004920 32295 net.cpp:86] Creating Layer relu2
I0428 20:12:43.004922 32295 net.cpp:408] relu2 <- ip2
I0428 20:12:43.004926 32295 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:43.005740 32295 net.cpp:124] Setting up relu2
I0428 20:12:43.005769 32295 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:12:43.005771 32295 net.cpp:139] Memory required for data: 6874880
I0428 20:12:43.005775 32295 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:43.005796 32295 net.cpp:86] Creating Layer ip3
I0428 20:12:43.005800 32295 net.cpp:408] ip3 <- ip2
I0428 20:12:43.005805 32295 net.cpp:382] ip3 -> ip3
I0428 20:12:43.005897 32295 net.cpp:124] Setting up ip3
I0428 20:12:43.005904 32295 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:43.005908 32295 net.cpp:139] Memory required for data: 6877440
I0428 20:12:43.005915 32295 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:43.005919 32295 net.cpp:86] Creating Layer relu3
I0428 20:12:43.005923 32295 net.cpp:408] relu3 <- ip3
I0428 20:12:43.005926 32295 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:43.006130 32295 net.cpp:124] Setting up relu3
I0428 20:12:43.006139 32295 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:43.006142 32295 net.cpp:139] Memory required for data: 6880000
I0428 20:12:43.006145 32295 layer_factory.hpp:77] Creating layer loss
I0428 20:12:43.006151 32295 net.cpp:86] Creating Layer loss
I0428 20:12:43.006155 32295 net.cpp:408] loss <- ip3
I0428 20:12:43.006158 32295 net.cpp:408] loss <- label
I0428 20:12:43.006163 32295 net.cpp:382] loss -> loss
I0428 20:12:43.006181 32295 layer_factory.hpp:77] Creating layer loss
I0428 20:12:43.006402 32295 net.cpp:124] Setting up loss
I0428 20:12:43.006412 32295 net.cpp:131] Top shape: (1)
I0428 20:12:43.006414 32295 net.cpp:134]     with loss weight 1
I0428 20:12:43.006428 32295 net.cpp:139] Memory required for data: 6880004
I0428 20:12:43.006431 32295 net.cpp:200] loss needs backward computation.
I0428 20:12:43.006434 32295 net.cpp:200] relu3 needs backward computation.
I0428 20:12:43.006438 32295 net.cpp:200] ip3 needs backward computation.
I0428 20:12:43.006440 32295 net.cpp:200] relu2 needs backward computation.
I0428 20:12:43.006443 32295 net.cpp:200] ip2 needs backward computation.
I0428 20:12:43.006445 32295 net.cpp:200] relu1 needs backward computation.
I0428 20:12:43.006448 32295 net.cpp:200] ip1 needs backward computation.
I0428 20:12:43.006451 32295 net.cpp:200] pool1 needs backward computation.
I0428 20:12:43.006469 32295 net.cpp:200] conv1 needs backward computation.
I0428 20:12:43.006472 32295 net.cpp:200] pool0 needs backward computation.
I0428 20:12:43.006475 32295 net.cpp:200] conv0 needs backward computation.
I0428 20:12:43.006479 32295 net.cpp:202] mnist does not need backward computation.
I0428 20:12:43.006481 32295 net.cpp:244] This network produces output loss
I0428 20:12:43.006490 32295 net.cpp:257] Network initialization done.
I0428 20:12:43.006862 32295 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1185.prototxt
I0428 20:12:43.006904 32295 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:43.007040 32295 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:43.007184 32295 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:43.007232 32295 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:43.007246 32295 net.cpp:86] Creating Layer mnist
I0428 20:12:43.007251 32295 net.cpp:382] mnist -> data
I0428 20:12:43.007261 32295 net.cpp:382] mnist -> label
I0428 20:12:43.007349 32295 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:43.009382 32295 net.cpp:124] Setting up mnist
I0428 20:12:43.009410 32295 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:43.009415 32295 net.cpp:131] Top shape: 100 (100)
I0428 20:12:43.009418 32295 net.cpp:139] Memory required for data: 314000
I0428 20:12:43.009423 32295 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:43.009459 32295 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:43.009462 32295 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:43.009467 32295 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:43.009474 32295 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:43.009517 32295 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:43.009523 32295 net.cpp:131] Top shape: 100 (100)
I0428 20:12:43.009527 32295 net.cpp:131] Top shape: 100 (100)
I0428 20:12:43.009531 32295 net.cpp:139] Memory required for data: 314800
I0428 20:12:43.009533 32295 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:43.009541 32295 net.cpp:86] Creating Layer conv0
I0428 20:12:43.009544 32295 net.cpp:408] conv0 <- data
I0428 20:12:43.009549 32295 net.cpp:382] conv0 -> conv0
I0428 20:12:43.011314 32295 net.cpp:124] Setting up conv0
I0428 20:12:43.011328 32295 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:43.011332 32295 net.cpp:139] Memory required for data: 6074800
I0428 20:12:43.011340 32295 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:43.011360 32295 net.cpp:86] Creating Layer pool0
I0428 20:12:43.011364 32295 net.cpp:408] pool0 <- conv0
I0428 20:12:43.011368 32295 net.cpp:382] pool0 -> pool0
I0428 20:12:43.011401 32295 net.cpp:124] Setting up pool0
I0428 20:12:43.011406 32295 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:43.011409 32295 net.cpp:139] Memory required for data: 7514800
I0428 20:12:43.011411 32295 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:43.011420 32295 net.cpp:86] Creating Layer conv1
I0428 20:12:43.011422 32295 net.cpp:408] conv1 <- pool0
I0428 20:12:43.011426 32295 net.cpp:382] conv1 -> conv1
I0428 20:12:43.013397 32295 net.cpp:124] Setting up conv1
I0428 20:12:43.013411 32295 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:43.013417 32295 net.cpp:139] Memory required for data: 10074800
I0428 20:12:43.013430 32295 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:43.013437 32295 net.cpp:86] Creating Layer pool1
I0428 20:12:43.013440 32295 net.cpp:408] pool1 <- conv1
I0428 20:12:43.013445 32295 net.cpp:382] pool1 -> pool1
I0428 20:12:43.013496 32295 net.cpp:124] Setting up pool1
I0428 20:12:43.013504 32295 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:43.013506 32295 net.cpp:139] Memory required for data: 10714800
I0428 20:12:43.013509 32295 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:43.013515 32295 net.cpp:86] Creating Layer ip1
I0428 20:12:43.013519 32295 net.cpp:408] ip1 <- pool1
I0428 20:12:43.013536 32295 net.cpp:382] ip1 -> ip1
I0428 20:12:43.013716 32295 net.cpp:124] Setting up ip1
I0428 20:12:43.013725 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.013746 32295 net.cpp:139] Memory required for data: 10718800
I0428 20:12:43.013754 32295 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:43.013759 32295 net.cpp:86] Creating Layer relu1
I0428 20:12:43.013763 32295 net.cpp:408] relu1 <- ip1
I0428 20:12:43.013767 32295 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:43.013968 32295 net.cpp:124] Setting up relu1
I0428 20:12:43.013980 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.013998 32295 net.cpp:139] Memory required for data: 10722800
I0428 20:12:43.014003 32295 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:43.014008 32295 net.cpp:86] Creating Layer ip2
I0428 20:12:43.014012 32295 net.cpp:408] ip2 <- ip1
I0428 20:12:43.014017 32295 net.cpp:382] ip2 -> ip2
I0428 20:12:43.014111 32295 net.cpp:124] Setting up ip2
I0428 20:12:43.014118 32295 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:12:43.014122 32295 net.cpp:139] Memory required for data: 10732800
I0428 20:12:43.014127 32295 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:43.014132 32295 net.cpp:86] Creating Layer relu2
I0428 20:12:43.014134 32295 net.cpp:408] relu2 <- ip2
I0428 20:12:43.014138 32295 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:43.014360 32295 net.cpp:124] Setting up relu2
I0428 20:12:43.014369 32295 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:12:43.014372 32295 net.cpp:139] Memory required for data: 10742800
I0428 20:12:43.014375 32295 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:43.014380 32295 net.cpp:86] Creating Layer ip3
I0428 20:12:43.014385 32295 net.cpp:408] ip3 <- ip2
I0428 20:12:43.014390 32295 net.cpp:382] ip3 -> ip3
I0428 20:12:43.014500 32295 net.cpp:124] Setting up ip3
I0428 20:12:43.014508 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.014511 32295 net.cpp:139] Memory required for data: 10746800
I0428 20:12:43.014518 32295 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:43.014523 32295 net.cpp:86] Creating Layer relu3
I0428 20:12:43.014526 32295 net.cpp:408] relu3 <- ip3
I0428 20:12:43.014530 32295 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:43.015365 32295 net.cpp:124] Setting up relu3
I0428 20:12:43.015378 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.015383 32295 net.cpp:139] Memory required for data: 10750800
I0428 20:12:43.015385 32295 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:12:43.015390 32295 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:12:43.015394 32295 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:12:43.015399 32295 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:12:43.015404 32295 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:12:43.015439 32295 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:12:43.015444 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.015449 32295 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:43.015450 32295 net.cpp:139] Memory required for data: 10758800
I0428 20:12:43.015453 32295 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:43.015458 32295 net.cpp:86] Creating Layer accuracy
I0428 20:12:43.015468 32295 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:12:43.015472 32295 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:43.015482 32295 net.cpp:382] accuracy -> accuracy
I0428 20:12:43.015489 32295 net.cpp:124] Setting up accuracy
I0428 20:12:43.015492 32295 net.cpp:131] Top shape: (1)
I0428 20:12:43.015496 32295 net.cpp:139] Memory required for data: 10758804
I0428 20:12:43.015503 32295 layer_factory.hpp:77] Creating layer loss
I0428 20:12:43.015507 32295 net.cpp:86] Creating Layer loss
I0428 20:12:43.015511 32295 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:12:43.015514 32295 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:43.015518 32295 net.cpp:382] loss -> loss
I0428 20:12:43.015524 32295 layer_factory.hpp:77] Creating layer loss
I0428 20:12:43.015777 32295 net.cpp:124] Setting up loss
I0428 20:12:43.015787 32295 net.cpp:131] Top shape: (1)
I0428 20:12:43.015791 32295 net.cpp:134]     with loss weight 1
I0428 20:12:43.015807 32295 net.cpp:139] Memory required for data: 10758808
I0428 20:12:43.015811 32295 net.cpp:200] loss needs backward computation.
I0428 20:12:43.015815 32295 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:43.015818 32295 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:12:43.015821 32295 net.cpp:200] relu3 needs backward computation.
I0428 20:12:43.015825 32295 net.cpp:200] ip3 needs backward computation.
I0428 20:12:43.015827 32295 net.cpp:200] relu2 needs backward computation.
I0428 20:12:43.015830 32295 net.cpp:200] ip2 needs backward computation.
I0428 20:12:43.015832 32295 net.cpp:200] relu1 needs backward computation.
I0428 20:12:43.015836 32295 net.cpp:200] ip1 needs backward computation.
I0428 20:12:43.015839 32295 net.cpp:200] pool1 needs backward computation.
I0428 20:12:43.015844 32295 net.cpp:200] conv1 needs backward computation.
I0428 20:12:43.015847 32295 net.cpp:200] pool0 needs backward computation.
I0428 20:12:43.015851 32295 net.cpp:200] conv0 needs backward computation.
I0428 20:12:43.015854 32295 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:43.015857 32295 net.cpp:202] mnist does not need backward computation.
I0428 20:12:43.015877 32295 net.cpp:244] This network produces output accuracy
I0428 20:12:43.015879 32295 net.cpp:244] This network produces output loss
I0428 20:12:43.015890 32295 net.cpp:257] Network initialization done.
I0428 20:12:43.015944 32295 solver.cpp:56] Solver scaffolding done.
I0428 20:12:43.016293 32295 caffe.cpp:248] Starting Optimization
I0428 20:12:43.016299 32295 solver.cpp:273] Solving LeNet
I0428 20:12:43.016302 32295 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:43.017096 32295 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:43.023586 32295 blocking_queue.cpp:49] Waiting for data
I0428 20:12:43.097064 32302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:43.097861 32295 solver.cpp:398]     Test net output #0: accuracy = 0.0749
I0428 20:12:43.097880 32295 solver.cpp:398]     Test net output #1: loss = 2.30534 (* 1 = 2.30534 loss)
I0428 20:12:43.102668 32295 solver.cpp:219] Iteration 0 (0 iter/s, 0.0863406s/100 iters), loss = 2.304
I0428 20:12:43.102689 32295 solver.cpp:238]     Train net output #0: loss = 2.304 (* 1 = 2.304 loss)
I0428 20:12:43.102716 32295 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:43.260133 32295 solver.cpp:219] Iteration 100 (635.245 iter/s, 0.15742s/100 iters), loss = 1.31359
I0428 20:12:43.260159 32295 solver.cpp:238]     Train net output #0: loss = 1.31359 (* 1 = 1.31359 loss)
I0428 20:12:43.260164 32295 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:43.417284 32295 solver.cpp:219] Iteration 200 (636.491 iter/s, 0.157111s/100 iters), loss = 1.18742
I0428 20:12:43.417322 32295 solver.cpp:238]     Train net output #0: loss = 1.18742 (* 1 = 1.18742 loss)
I0428 20:12:43.417343 32295 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:43.569358 32295 solver.cpp:219] Iteration 300 (657.738 iter/s, 0.152036s/100 iters), loss = 0.983026
I0428 20:12:43.569382 32295 solver.cpp:238]     Train net output #0: loss = 0.983026 (* 1 = 0.983026 loss)
I0428 20:12:43.569404 32295 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:43.722282 32295 solver.cpp:219] Iteration 400 (654.077 iter/s, 0.152887s/100 iters), loss = 1.28814
I0428 20:12:43.722306 32295 solver.cpp:238]     Train net output #0: loss = 1.28814 (* 1 = 1.28814 loss)
I0428 20:12:43.722312 32295 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:43.876986 32295 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:43.943778 32302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:43.946101 32295 solver.cpp:398]     Test net output #0: accuracy = 0.7903
I0428 20:12:43.946120 32295 solver.cpp:398]     Test net output #1: loss = 0.714687 (* 1 = 0.714687 loss)
I0428 20:12:43.947557 32295 solver.cpp:219] Iteration 500 (443.987 iter/s, 0.225232s/100 iters), loss = 0.901929
I0428 20:12:43.947592 32295 solver.cpp:238]     Train net output #0: loss = 0.901929 (* 1 = 0.901929 loss)
I0428 20:12:43.947599 32295 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:44.106416 32295 solver.cpp:219] Iteration 600 (629.683 iter/s, 0.15881s/100 iters), loss = 0.261921
I0428 20:12:44.106444 32295 solver.cpp:238]     Train net output #0: loss = 0.261921 (* 1 = 0.261921 loss)
I0428 20:12:44.106451 32295 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:44.270917 32295 solver.cpp:219] Iteration 700 (608.052 iter/s, 0.16446s/100 iters), loss = 0.461811
I0428 20:12:44.270942 32295 solver.cpp:238]     Train net output #0: loss = 0.461811 (* 1 = 0.461811 loss)
I0428 20:12:44.270949 32295 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:44.428692 32295 solver.cpp:219] Iteration 800 (633.971 iter/s, 0.157736s/100 iters), loss = 0.44554
I0428 20:12:44.428717 32295 solver.cpp:238]     Train net output #0: loss = 0.44554 (* 1 = 0.44554 loss)
I0428 20:12:44.428724 32295 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:44.588397 32295 solver.cpp:219] Iteration 900 (626.326 iter/s, 0.159661s/100 iters), loss = 0.332197
I0428 20:12:44.588431 32295 solver.cpp:238]     Train net output #0: loss = 0.332197 (* 1 = 0.332197 loss)
I0428 20:12:44.588438 32295 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:44.646867 32301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:44.754562 32295 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:44.757004 32295 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:44.758244 32295 solver.cpp:311] Iteration 1000, loss = 0.368779
I0428 20:12:44.758263 32295 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:44.834468 32302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:44.835289 32295 solver.cpp:398]     Test net output #0: accuracy = 0.9599
I0428 20:12:44.835310 32295 solver.cpp:398]     Test net output #1: loss = 0.320026 (* 1 = 0.320026 loss)
I0428 20:12:44.835315 32295 solver.cpp:316] Optimization Done.
I0428 20:12:44.835319 32295 caffe.cpp:259] Optimization Done.
