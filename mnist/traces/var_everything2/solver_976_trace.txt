I0428 20:04:36.365054 30418 caffe.cpp:218] Using GPUs 0
I0428 20:04:36.402073 30418 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:36.903650 30418 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test976.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:36.903787 30418 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test976.prototxt
I0428 20:04:36.904145 30418 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:36.904161 30418 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:36.904247 30418 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:36.904320 30418 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:36.904420 30418 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:36.904443 30418 net.cpp:86] Creating Layer mnist
I0428 20:04:36.904453 30418 net.cpp:382] mnist -> data
I0428 20:04:36.904474 30418 net.cpp:382] mnist -> label
I0428 20:04:36.905702 30418 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:36.908344 30418 net.cpp:124] Setting up mnist
I0428 20:04:36.908362 30418 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:36.908375 30418 net.cpp:131] Top shape: 64 (64)
I0428 20:04:36.908380 30418 net.cpp:139] Memory required for data: 200960
I0428 20:04:36.908386 30418 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:36.908403 30418 net.cpp:86] Creating Layer conv0
I0428 20:04:36.908409 30418 net.cpp:408] conv0 <- data
I0428 20:04:36.908422 30418 net.cpp:382] conv0 -> conv0
I0428 20:04:37.197163 30418 net.cpp:124] Setting up conv0
I0428 20:04:37.197192 30418 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:37.197197 30418 net.cpp:139] Memory required for data: 3887360
I0428 20:04:37.197214 30418 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:37.197228 30418 net.cpp:86] Creating Layer pool0
I0428 20:04:37.197233 30418 net.cpp:408] pool0 <- conv0
I0428 20:04:37.197239 30418 net.cpp:382] pool0 -> pool0
I0428 20:04:37.197291 30418 net.cpp:124] Setting up pool0
I0428 20:04:37.197298 30418 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:37.197319 30418 net.cpp:139] Memory required for data: 4808960
I0428 20:04:37.197322 30418 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:37.197335 30418 net.cpp:86] Creating Layer conv1
I0428 20:04:37.197340 30418 net.cpp:408] conv1 <- pool0
I0428 20:04:37.197345 30418 net.cpp:382] conv1 -> conv1
I0428 20:04:37.200446 30418 net.cpp:124] Setting up conv1
I0428 20:04:37.200464 30418 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:37.200469 30418 net.cpp:139] Memory required for data: 4841728
I0428 20:04:37.200479 30418 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:37.200487 30418 net.cpp:86] Creating Layer pool1
I0428 20:04:37.200491 30418 net.cpp:408] pool1 <- conv1
I0428 20:04:37.200497 30418 net.cpp:382] pool1 -> pool1
I0428 20:04:37.200541 30418 net.cpp:124] Setting up pool1
I0428 20:04:37.200546 30418 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:37.200549 30418 net.cpp:139] Memory required for data: 4849920
I0428 20:04:37.200553 30418 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:37.200562 30418 net.cpp:86] Creating Layer ip1
I0428 20:04:37.200564 30418 net.cpp:408] ip1 <- pool1
I0428 20:04:37.200570 30418 net.cpp:382] ip1 -> ip1
I0428 20:04:37.200686 30418 net.cpp:124] Setting up ip1
I0428 20:04:37.200695 30418 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:37.200700 30418 net.cpp:139] Memory required for data: 4852480
I0428 20:04:37.200708 30418 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:37.200714 30418 net.cpp:86] Creating Layer relu1
I0428 20:04:37.200718 30418 net.cpp:408] relu1 <- ip1
I0428 20:04:37.200723 30418 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:37.200937 30418 net.cpp:124] Setting up relu1
I0428 20:04:37.200948 30418 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:37.200953 30418 net.cpp:139] Memory required for data: 4855040
I0428 20:04:37.200955 30418 layer_factory.hpp:77] Creating layer loss
I0428 20:04:37.200963 30418 net.cpp:86] Creating Layer loss
I0428 20:04:37.200966 30418 net.cpp:408] loss <- ip1
I0428 20:04:37.200970 30418 net.cpp:408] loss <- label
I0428 20:04:37.200976 30418 net.cpp:382] loss -> loss
I0428 20:04:37.200996 30418 layer_factory.hpp:77] Creating layer loss
I0428 20:04:37.201930 30418 net.cpp:124] Setting up loss
I0428 20:04:37.201946 30418 net.cpp:131] Top shape: (1)
I0428 20:04:37.201949 30418 net.cpp:134]     with loss weight 1
I0428 20:04:37.201967 30418 net.cpp:139] Memory required for data: 4855044
I0428 20:04:37.201972 30418 net.cpp:200] loss needs backward computation.
I0428 20:04:37.201977 30418 net.cpp:200] relu1 needs backward computation.
I0428 20:04:37.201980 30418 net.cpp:200] ip1 needs backward computation.
I0428 20:04:37.201984 30418 net.cpp:200] pool1 needs backward computation.
I0428 20:04:37.201988 30418 net.cpp:200] conv1 needs backward computation.
I0428 20:04:37.201992 30418 net.cpp:200] pool0 needs backward computation.
I0428 20:04:37.201995 30418 net.cpp:200] conv0 needs backward computation.
I0428 20:04:37.201999 30418 net.cpp:202] mnist does not need backward computation.
I0428 20:04:37.202003 30418 net.cpp:244] This network produces output loss
I0428 20:04:37.202013 30418 net.cpp:257] Network initialization done.
I0428 20:04:37.202311 30418 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test976.prototxt
I0428 20:04:37.202340 30418 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:37.202427 30418 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:37.202507 30418 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:37.202558 30418 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:37.202570 30418 net.cpp:86] Creating Layer mnist
I0428 20:04:37.202575 30418 net.cpp:382] mnist -> data
I0428 20:04:37.202584 30418 net.cpp:382] mnist -> label
I0428 20:04:37.202682 30418 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:37.204828 30418 net.cpp:124] Setting up mnist
I0428 20:04:37.204854 30418 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:37.204869 30418 net.cpp:131] Top shape: 100 (100)
I0428 20:04:37.204872 30418 net.cpp:139] Memory required for data: 314000
I0428 20:04:37.204877 30418 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:37.204905 30418 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:37.204910 30418 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:37.204916 30418 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:37.204923 30418 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:37.205029 30418 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:37.205036 30418 net.cpp:131] Top shape: 100 (100)
I0428 20:04:37.205041 30418 net.cpp:131] Top shape: 100 (100)
I0428 20:04:37.205044 30418 net.cpp:139] Memory required for data: 314800
I0428 20:04:37.205049 30418 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:37.205057 30418 net.cpp:86] Creating Layer conv0
I0428 20:04:37.205061 30418 net.cpp:408] conv0 <- data
I0428 20:04:37.205067 30418 net.cpp:382] conv0 -> conv0
I0428 20:04:37.206084 30418 net.cpp:124] Setting up conv0
I0428 20:04:37.206099 30418 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:37.206104 30418 net.cpp:139] Memory required for data: 6074800
I0428 20:04:37.206115 30418 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:37.206122 30418 net.cpp:86] Creating Layer pool0
I0428 20:04:37.206126 30418 net.cpp:408] pool0 <- conv0
I0428 20:04:37.206132 30418 net.cpp:382] pool0 -> pool0
I0428 20:04:37.206174 30418 net.cpp:124] Setting up pool0
I0428 20:04:37.206190 30418 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:37.206193 30418 net.cpp:139] Memory required for data: 7514800
I0428 20:04:37.206197 30418 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:37.206207 30418 net.cpp:86] Creating Layer conv1
I0428 20:04:37.206210 30418 net.cpp:408] conv1 <- pool0
I0428 20:04:37.206217 30418 net.cpp:382] conv1 -> conv1
I0428 20:04:37.208515 30418 net.cpp:124] Setting up conv1
I0428 20:04:37.208530 30418 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:37.208544 30418 net.cpp:139] Memory required for data: 7566000
I0428 20:04:37.208554 30418 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:37.208561 30418 net.cpp:86] Creating Layer pool1
I0428 20:04:37.208577 30418 net.cpp:408] pool1 <- conv1
I0428 20:04:37.208583 30418 net.cpp:382] pool1 -> pool1
I0428 20:04:37.208636 30418 net.cpp:124] Setting up pool1
I0428 20:04:37.208642 30418 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:37.208645 30418 net.cpp:139] Memory required for data: 7578800
I0428 20:04:37.208649 30418 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:37.208655 30418 net.cpp:86] Creating Layer ip1
I0428 20:04:37.208659 30418 net.cpp:408] ip1 <- pool1
I0428 20:04:37.208665 30418 net.cpp:382] ip1 -> ip1
I0428 20:04:37.208825 30418 net.cpp:124] Setting up ip1
I0428 20:04:37.208837 30418 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:37.208840 30418 net.cpp:139] Memory required for data: 7582800
I0428 20:04:37.208850 30418 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:37.208856 30418 net.cpp:86] Creating Layer relu1
I0428 20:04:37.208860 30418 net.cpp:408] relu1 <- ip1
I0428 20:04:37.208866 30418 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:37.209780 30418 net.cpp:124] Setting up relu1
I0428 20:04:37.209795 30418 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:37.209800 30418 net.cpp:139] Memory required for data: 7586800
I0428 20:04:37.209803 30418 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:04:37.209811 30418 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:04:37.209815 30418 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:04:37.209821 30418 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:04:37.209828 30418 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:04:37.209882 30418 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:04:37.209887 30418 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:37.209892 30418 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:37.209897 30418 net.cpp:139] Memory required for data: 7594800
I0428 20:04:37.209899 30418 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:37.209906 30418 net.cpp:86] Creating Layer accuracy
I0428 20:04:37.209910 30418 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:04:37.209915 30418 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:37.209921 30418 net.cpp:382] accuracy -> accuracy
I0428 20:04:37.209929 30418 net.cpp:124] Setting up accuracy
I0428 20:04:37.209933 30418 net.cpp:131] Top shape: (1)
I0428 20:04:37.209936 30418 net.cpp:139] Memory required for data: 7594804
I0428 20:04:37.209940 30418 layer_factory.hpp:77] Creating layer loss
I0428 20:04:37.209945 30418 net.cpp:86] Creating Layer loss
I0428 20:04:37.209949 30418 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:04:37.209954 30418 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:37.209959 30418 net.cpp:382] loss -> loss
I0428 20:04:37.209965 30418 layer_factory.hpp:77] Creating layer loss
I0428 20:04:37.210240 30418 net.cpp:124] Setting up loss
I0428 20:04:37.210252 30418 net.cpp:131] Top shape: (1)
I0428 20:04:37.210255 30418 net.cpp:134]     with loss weight 1
I0428 20:04:37.210263 30418 net.cpp:139] Memory required for data: 7594808
I0428 20:04:37.210268 30418 net.cpp:200] loss needs backward computation.
I0428 20:04:37.210273 30418 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:37.210278 30418 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:04:37.210281 30418 net.cpp:200] relu1 needs backward computation.
I0428 20:04:37.210286 30418 net.cpp:200] ip1 needs backward computation.
I0428 20:04:37.210290 30418 net.cpp:200] pool1 needs backward computation.
I0428 20:04:37.210294 30418 net.cpp:200] conv1 needs backward computation.
I0428 20:04:37.210299 30418 net.cpp:200] pool0 needs backward computation.
I0428 20:04:37.210302 30418 net.cpp:200] conv0 needs backward computation.
I0428 20:04:37.210306 30418 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:37.210311 30418 net.cpp:202] mnist does not need backward computation.
I0428 20:04:37.210314 30418 net.cpp:244] This network produces output accuracy
I0428 20:04:37.210319 30418 net.cpp:244] This network produces output loss
I0428 20:04:37.210341 30418 net.cpp:257] Network initialization done.
I0428 20:04:37.210381 30418 solver.cpp:56] Solver scaffolding done.
I0428 20:04:37.210624 30418 caffe.cpp:248] Starting Optimization
I0428 20:04:37.210631 30418 solver.cpp:273] Solving LeNet
I0428 20:04:37.210635 30418 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:37.211491 30418 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:37.216459 30418 blocking_queue.cpp:49] Waiting for data
I0428 20:04:37.287475 30425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:37.288028 30418 solver.cpp:398]     Test net output #0: accuracy = 0.0398
I0428 20:04:37.288053 30418 solver.cpp:398]     Test net output #1: loss = 2.36586 (* 1 = 2.36586 loss)
I0428 20:04:37.291090 30418 solver.cpp:219] Iteration 0 (-9.84504e-31 iter/s, 0.080426s/100 iters), loss = 2.34569
I0428 20:04:37.291117 30418 solver.cpp:238]     Train net output #0: loss = 2.34569 (* 1 = 2.34569 loss)
I0428 20:04:37.291131 30418 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:37.376528 30418 solver.cpp:219] Iteration 100 (1170.94 iter/s, 0.0854014s/100 iters), loss = 0.854486
I0428 20:04:37.376559 30418 solver.cpp:238]     Train net output #0: loss = 0.854486 (* 1 = 0.854486 loss)
I0428 20:04:37.376566 30418 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:37.452164 30418 solver.cpp:219] Iteration 200 (1322.81 iter/s, 0.0755968s/100 iters), loss = 1.19447
I0428 20:04:37.452193 30418 solver.cpp:238]     Train net output #0: loss = 1.19447 (* 1 = 1.19447 loss)
I0428 20:04:37.452199 30418 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:37.527361 30418 solver.cpp:219] Iteration 300 (1330.52 iter/s, 0.0751586s/100 iters), loss = 0.963972
I0428 20:04:37.527400 30418 solver.cpp:238]     Train net output #0: loss = 0.963972 (* 1 = 0.963972 loss)
I0428 20:04:37.527407 30418 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:37.602519 30418 solver.cpp:219] Iteration 400 (1331.21 iter/s, 0.0751198s/100 iters), loss = 1.0122
I0428 20:04:37.602547 30418 solver.cpp:238]     Train net output #0: loss = 1.0122 (* 1 = 1.0122 loss)
I0428 20:04:37.602555 30418 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:37.676842 30418 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:37.752997 30425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:37.753530 30418 solver.cpp:398]     Test net output #0: accuracy = 0.7058
I0428 20:04:37.753556 30418 solver.cpp:398]     Test net output #1: loss = 0.949845 (* 1 = 0.949845 loss)
I0428 20:04:37.754379 30418 solver.cpp:219] Iteration 500 (658.678 iter/s, 0.151819s/100 iters), loss = 0.891193
I0428 20:04:37.754402 30418 solver.cpp:238]     Train net output #0: loss = 0.891193 (* 1 = 0.891193 loss)
I0428 20:04:37.754408 30418 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:37.839203 30418 solver.cpp:219] Iteration 600 (1179.35 iter/s, 0.0847924s/100 iters), loss = 0.812247
I0428 20:04:37.839243 30418 solver.cpp:238]     Train net output #0: loss = 0.812247 (* 1 = 0.812247 loss)
I0428 20:04:37.839264 30418 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:37.913563 30418 solver.cpp:219] Iteration 700 (1345.41 iter/s, 0.074327s/100 iters), loss = 1.09236
I0428 20:04:37.913602 30418 solver.cpp:238]     Train net output #0: loss = 1.09236 (* 1 = 1.09236 loss)
I0428 20:04:37.913609 30418 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:37.987504 30418 solver.cpp:219] Iteration 800 (1353.05 iter/s, 0.0739072s/100 iters), loss = 0.730195
I0428 20:04:37.987543 30418 solver.cpp:238]     Train net output #0: loss = 0.730195 (* 1 = 0.730195 loss)
I0428 20:04:37.987550 30418 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:38.061352 30418 solver.cpp:219] Iteration 900 (1354.74 iter/s, 0.0738151s/100 iters), loss = 0.746994
I0428 20:04:38.061390 30418 solver.cpp:238]     Train net output #0: loss = 0.746994 (* 1 = 0.746994 loss)
I0428 20:04:38.061396 30418 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:38.086665 30424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:38.135248 30418 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:38.135861 30418 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:38.136374 30418 solver.cpp:311] Iteration 1000, loss = 0.658908
I0428 20:04:38.136391 30418 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:38.211635 30425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:38.212188 30418 solver.cpp:398]     Test net output #0: accuracy = 0.8358
I0428 20:04:38.212224 30418 solver.cpp:398]     Test net output #1: loss = 0.484307 (* 1 = 0.484307 loss)
I0428 20:04:38.212230 30418 solver.cpp:316] Optimization Done.
I0428 20:04:38.212234 30418 caffe.cpp:259] Optimization Done.
