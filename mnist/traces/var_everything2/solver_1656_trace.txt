I0428 20:37:47.834681  5040 caffe.cpp:218] Using GPUs 0
I0428 20:37:47.864754  5040 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:48.311178  5040 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1656.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:48.311311  5040 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1656.prototxt
I0428 20:37:48.311640  5040 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:48.311656  5040 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:48.311735  5040 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:48.311799  5040 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:48.311877  5040 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:48.311898  5040 net.cpp:86] Creating Layer mnist
I0428 20:37:48.311903  5040 net.cpp:382] mnist -> data
I0428 20:37:48.311923  5040 net.cpp:382] mnist -> label
I0428 20:37:48.312862  5040 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:48.315011  5040 net.cpp:124] Setting up mnist
I0428 20:37:48.315040  5040 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:48.315047  5040 net.cpp:131] Top shape: 64 (64)
I0428 20:37:48.315052  5040 net.cpp:139] Memory required for data: 200960
I0428 20:37:48.315057  5040 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:48.315068  5040 net.cpp:86] Creating Layer conv0
I0428 20:37:48.315100  5040 net.cpp:408] conv0 <- data
I0428 20:37:48.315110  5040 net.cpp:382] conv0 -> conv0
I0428 20:37:48.542485  5040 net.cpp:124] Setting up conv0
I0428 20:37:48.542524  5040 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:48.542528  5040 net.cpp:139] Memory required for data: 14946560
I0428 20:37:48.542543  5040 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:48.542556  5040 net.cpp:86] Creating Layer pool0
I0428 20:37:48.542559  5040 net.cpp:408] pool0 <- conv0
I0428 20:37:48.542564  5040 net.cpp:382] pool0 -> pool0
I0428 20:37:48.542639  5040 net.cpp:124] Setting up pool0
I0428 20:37:48.542644  5040 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:48.542646  5040 net.cpp:139] Memory required for data: 18632960
I0428 20:37:48.542649  5040 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:48.542659  5040 net.cpp:86] Creating Layer conv1
I0428 20:37:48.542662  5040 net.cpp:408] conv1 <- pool0
I0428 20:37:48.542666  5040 net.cpp:382] conv1 -> conv1
I0428 20:37:48.546643  5040 net.cpp:124] Setting up conv1
I0428 20:37:48.546671  5040 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:48.546675  5040 net.cpp:139] Memory required for data: 20271360
I0428 20:37:48.546684  5040 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:48.546705  5040 net.cpp:86] Creating Layer pool1
I0428 20:37:48.546710  5040 net.cpp:408] pool1 <- conv1
I0428 20:37:48.546713  5040 net.cpp:382] pool1 -> pool1
I0428 20:37:48.546766  5040 net.cpp:124] Setting up pool1
I0428 20:37:48.546772  5040 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:48.546775  5040 net.cpp:139] Memory required for data: 20680960
I0428 20:37:48.546778  5040 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:48.546785  5040 net.cpp:86] Creating Layer ip1
I0428 20:37:48.546788  5040 net.cpp:408] ip1 <- pool1
I0428 20:37:48.546793  5040 net.cpp:382] ip1 -> ip1
I0428 20:37:48.547821  5040 net.cpp:124] Setting up ip1
I0428 20:37:48.547834  5040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:48.547853  5040 net.cpp:139] Memory required for data: 20683520
I0428 20:37:48.547863  5040 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:48.547868  5040 net.cpp:86] Creating Layer relu1
I0428 20:37:48.547871  5040 net.cpp:408] relu1 <- ip1
I0428 20:37:48.547876  5040 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:48.548056  5040 net.cpp:124] Setting up relu1
I0428 20:37:48.548066  5040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:48.548069  5040 net.cpp:139] Memory required for data: 20686080
I0428 20:37:48.548072  5040 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:48.548079  5040 net.cpp:86] Creating Layer ip2
I0428 20:37:48.548082  5040 net.cpp:408] ip2 <- ip1
I0428 20:37:48.548089  5040 net.cpp:382] ip2 -> ip2
I0428 20:37:48.548202  5040 net.cpp:124] Setting up ip2
I0428 20:37:48.548209  5040 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:48.548213  5040 net.cpp:139] Memory required for data: 20698880
I0428 20:37:48.548218  5040 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:48.548223  5040 net.cpp:86] Creating Layer relu2
I0428 20:37:48.548226  5040 net.cpp:408] relu2 <- ip2
I0428 20:37:48.548231  5040 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:48.548977  5040 net.cpp:124] Setting up relu2
I0428 20:37:48.549005  5040 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:48.549008  5040 net.cpp:139] Memory required for data: 20711680
I0428 20:37:48.549011  5040 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:48.549021  5040 net.cpp:86] Creating Layer ip3
I0428 20:37:48.549023  5040 net.cpp:408] ip3 <- ip2
I0428 20:37:48.549028  5040 net.cpp:382] ip3 -> ip3
I0428 20:37:48.549137  5040 net.cpp:124] Setting up ip3
I0428 20:37:48.549145  5040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:48.549149  5040 net.cpp:139] Memory required for data: 20714240
I0428 20:37:48.549156  5040 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:48.549163  5040 net.cpp:86] Creating Layer relu3
I0428 20:37:48.549166  5040 net.cpp:408] relu3 <- ip3
I0428 20:37:48.549183  5040 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:48.549355  5040 net.cpp:124] Setting up relu3
I0428 20:37:48.549362  5040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:48.549365  5040 net.cpp:139] Memory required for data: 20716800
I0428 20:37:48.549368  5040 layer_factory.hpp:77] Creating layer loss
I0428 20:37:48.549376  5040 net.cpp:86] Creating Layer loss
I0428 20:37:48.549378  5040 net.cpp:408] loss <- ip3
I0428 20:37:48.549381  5040 net.cpp:408] loss <- label
I0428 20:37:48.549387  5040 net.cpp:382] loss -> loss
I0428 20:37:48.549404  5040 layer_factory.hpp:77] Creating layer loss
I0428 20:37:48.549672  5040 net.cpp:124] Setting up loss
I0428 20:37:48.549680  5040 net.cpp:131] Top shape: (1)
I0428 20:37:48.549684  5040 net.cpp:134]     with loss weight 1
I0428 20:37:48.549697  5040 net.cpp:139] Memory required for data: 20716804
I0428 20:37:48.549700  5040 net.cpp:200] loss needs backward computation.
I0428 20:37:48.549705  5040 net.cpp:200] relu3 needs backward computation.
I0428 20:37:48.549707  5040 net.cpp:200] ip3 needs backward computation.
I0428 20:37:48.549710  5040 net.cpp:200] relu2 needs backward computation.
I0428 20:37:48.549712  5040 net.cpp:200] ip2 needs backward computation.
I0428 20:37:48.549715  5040 net.cpp:200] relu1 needs backward computation.
I0428 20:37:48.549717  5040 net.cpp:200] ip1 needs backward computation.
I0428 20:37:48.549721  5040 net.cpp:200] pool1 needs backward computation.
I0428 20:37:48.549723  5040 net.cpp:200] conv1 needs backward computation.
I0428 20:37:48.549726  5040 net.cpp:200] pool0 needs backward computation.
I0428 20:37:48.549728  5040 net.cpp:200] conv0 needs backward computation.
I0428 20:37:48.549731  5040 net.cpp:202] mnist does not need backward computation.
I0428 20:37:48.549734  5040 net.cpp:244] This network produces output loss
I0428 20:37:48.549744  5040 net.cpp:257] Network initialization done.
I0428 20:37:48.550156  5040 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1656.prototxt
I0428 20:37:48.550200  5040 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:48.550328  5040 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:48.550411  5040 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:48.550467  5040 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:48.550482  5040 net.cpp:86] Creating Layer mnist
I0428 20:37:48.550487  5040 net.cpp:382] mnist -> data
I0428 20:37:48.550494  5040 net.cpp:382] mnist -> label
I0428 20:37:48.550580  5040 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:48.552573  5040 net.cpp:124] Setting up mnist
I0428 20:37:48.552587  5040 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:48.552592  5040 net.cpp:131] Top shape: 100 (100)
I0428 20:37:48.552594  5040 net.cpp:139] Memory required for data: 314000
I0428 20:37:48.552597  5040 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:48.552604  5040 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:48.552608  5040 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:48.552640  5040 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:48.552649  5040 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:48.552693  5040 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:48.552698  5040 net.cpp:131] Top shape: 100 (100)
I0428 20:37:48.552702  5040 net.cpp:131] Top shape: 100 (100)
I0428 20:37:48.552705  5040 net.cpp:139] Memory required for data: 314800
I0428 20:37:48.552707  5040 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:48.552717  5040 net.cpp:86] Creating Layer conv0
I0428 20:37:48.552721  5040 net.cpp:408] conv0 <- data
I0428 20:37:48.552726  5040 net.cpp:382] conv0 -> conv0
I0428 20:37:48.554610  5040 net.cpp:124] Setting up conv0
I0428 20:37:48.554625  5040 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:48.554630  5040 net.cpp:139] Memory required for data: 23354800
I0428 20:37:48.554638  5040 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:48.554646  5040 net.cpp:86] Creating Layer pool0
I0428 20:37:48.554649  5040 net.cpp:408] pool0 <- conv0
I0428 20:37:48.554654  5040 net.cpp:382] pool0 -> pool0
I0428 20:37:48.554708  5040 net.cpp:124] Setting up pool0
I0428 20:37:48.554713  5040 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:48.554715  5040 net.cpp:139] Memory required for data: 29114800
I0428 20:37:48.554718  5040 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:48.554728  5040 net.cpp:86] Creating Layer conv1
I0428 20:37:48.554730  5040 net.cpp:408] conv1 <- pool0
I0428 20:37:48.554735  5040 net.cpp:382] conv1 -> conv1
I0428 20:37:48.557792  5040 net.cpp:124] Setting up conv1
I0428 20:37:48.557806  5040 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:48.557809  5040 net.cpp:139] Memory required for data: 31674800
I0428 20:37:48.557819  5040 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:48.557842  5040 net.cpp:86] Creating Layer pool1
I0428 20:37:48.557845  5040 net.cpp:408] pool1 <- conv1
I0428 20:37:48.557852  5040 net.cpp:382] pool1 -> pool1
I0428 20:37:48.557901  5040 net.cpp:124] Setting up pool1
I0428 20:37:48.557909  5040 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:48.557911  5040 net.cpp:139] Memory required for data: 32314800
I0428 20:37:48.557915  5040 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:48.557922  5040 net.cpp:86] Creating Layer ip1
I0428 20:37:48.557925  5040 net.cpp:408] ip1 <- pool1
I0428 20:37:48.557930  5040 net.cpp:382] ip1 -> ip1
I0428 20:37:48.558161  5040 net.cpp:124] Setting up ip1
I0428 20:37:48.558178  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.558182  5040 net.cpp:139] Memory required for data: 32318800
I0428 20:37:48.558195  5040 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:48.558202  5040 net.cpp:86] Creating Layer relu1
I0428 20:37:48.558212  5040 net.cpp:408] relu1 <- ip1
I0428 20:37:48.558217  5040 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:48.558382  5040 net.cpp:124] Setting up relu1
I0428 20:37:48.558389  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.558393  5040 net.cpp:139] Memory required for data: 32322800
I0428 20:37:48.558395  5040 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:48.558403  5040 net.cpp:86] Creating Layer ip2
I0428 20:37:48.558406  5040 net.cpp:408] ip2 <- ip1
I0428 20:37:48.558413  5040 net.cpp:382] ip2 -> ip2
I0428 20:37:48.558512  5040 net.cpp:124] Setting up ip2
I0428 20:37:48.558521  5040 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:48.558524  5040 net.cpp:139] Memory required for data: 32342800
I0428 20:37:48.558529  5040 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:48.558542  5040 net.cpp:86] Creating Layer relu2
I0428 20:37:48.558544  5040 net.cpp:408] relu2 <- ip2
I0428 20:37:48.558548  5040 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:48.558715  5040 net.cpp:124] Setting up relu2
I0428 20:37:48.558724  5040 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:48.558727  5040 net.cpp:139] Memory required for data: 32362800
I0428 20:37:48.558730  5040 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:48.558735  5040 net.cpp:86] Creating Layer ip3
I0428 20:37:48.558738  5040 net.cpp:408] ip3 <- ip2
I0428 20:37:48.558760  5040 net.cpp:382] ip3 -> ip3
I0428 20:37:48.558900  5040 net.cpp:124] Setting up ip3
I0428 20:37:48.558907  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.558910  5040 net.cpp:139] Memory required for data: 32366800
I0428 20:37:48.558918  5040 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:48.558924  5040 net.cpp:86] Creating Layer relu3
I0428 20:37:48.558928  5040 net.cpp:408] relu3 <- ip3
I0428 20:37:48.558933  5040 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:48.559746  5040 net.cpp:124] Setting up relu3
I0428 20:37:48.559763  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.559767  5040 net.cpp:139] Memory required for data: 32370800
I0428 20:37:48.559770  5040 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:48.559775  5040 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:48.559778  5040 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:48.559782  5040 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:48.559790  5040 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:48.559834  5040 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:48.559854  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.559857  5040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:48.559860  5040 net.cpp:139] Memory required for data: 32378800
I0428 20:37:48.559864  5040 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:48.559872  5040 net.cpp:86] Creating Layer accuracy
I0428 20:37:48.559875  5040 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:48.559880  5040 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:48.559885  5040 net.cpp:382] accuracy -> accuracy
I0428 20:37:48.559890  5040 net.cpp:124] Setting up accuracy
I0428 20:37:48.559895  5040 net.cpp:131] Top shape: (1)
I0428 20:37:48.559897  5040 net.cpp:139] Memory required for data: 32378804
I0428 20:37:48.559900  5040 layer_factory.hpp:77] Creating layer loss
I0428 20:37:48.559906  5040 net.cpp:86] Creating Layer loss
I0428 20:37:48.559908  5040 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:48.559913  5040 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:48.559917  5040 net.cpp:382] loss -> loss
I0428 20:37:48.559937  5040 layer_factory.hpp:77] Creating layer loss
I0428 20:37:48.560194  5040 net.cpp:124] Setting up loss
I0428 20:37:48.560202  5040 net.cpp:131] Top shape: (1)
I0428 20:37:48.560205  5040 net.cpp:134]     with loss weight 1
I0428 20:37:48.560220  5040 net.cpp:139] Memory required for data: 32378808
I0428 20:37:48.560222  5040 net.cpp:200] loss needs backward computation.
I0428 20:37:48.560226  5040 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:48.560230  5040 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:48.560232  5040 net.cpp:200] relu3 needs backward computation.
I0428 20:37:48.560235  5040 net.cpp:200] ip3 needs backward computation.
I0428 20:37:48.560237  5040 net.cpp:200] relu2 needs backward computation.
I0428 20:37:48.560240  5040 net.cpp:200] ip2 needs backward computation.
I0428 20:37:48.560243  5040 net.cpp:200] relu1 needs backward computation.
I0428 20:37:48.560252  5040 net.cpp:200] ip1 needs backward computation.
I0428 20:37:48.560256  5040 net.cpp:200] pool1 needs backward computation.
I0428 20:37:48.560257  5040 net.cpp:200] conv1 needs backward computation.
I0428 20:37:48.560266  5040 net.cpp:200] pool0 needs backward computation.
I0428 20:37:48.560269  5040 net.cpp:200] conv0 needs backward computation.
I0428 20:37:48.560273  5040 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:48.560277  5040 net.cpp:202] mnist does not need backward computation.
I0428 20:37:48.560286  5040 net.cpp:244] This network produces output accuracy
I0428 20:37:48.560289  5040 net.cpp:244] This network produces output loss
I0428 20:37:48.560298  5040 net.cpp:257] Network initialization done.
I0428 20:37:48.560353  5040 solver.cpp:56] Solver scaffolding done.
I0428 20:37:48.560699  5040 caffe.cpp:248] Starting Optimization
I0428 20:37:48.560706  5040 solver.cpp:273] Solving LeNet
I0428 20:37:48.560709  5040 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:48.562196  5040 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:48.683954  5047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:48.687330  5040 solver.cpp:398]     Test net output #0: accuracy = 0.0958
I0428 20:37:48.687367  5040 solver.cpp:398]     Test net output #1: loss = 2.30944 (* 1 = 2.30944 loss)
I0428 20:37:48.692737  5040 solver.cpp:219] Iteration 0 (-1.77726e-31 iter/s, 0.131998s/100 iters), loss = 2.31541
I0428 20:37:48.692776  5040 solver.cpp:238]     Train net output #0: loss = 2.31541 (* 1 = 2.31541 loss)
I0428 20:37:48.692788  5040 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:48.967092  5040 solver.cpp:219] Iteration 100 (364.552 iter/s, 0.274309s/100 iters), loss = 1.05559
I0428 20:37:48.967118  5040 solver.cpp:238]     Train net output #0: loss = 1.05559 (* 1 = 1.05559 loss)
I0428 20:37:48.967123  5040 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:49.229992  5040 solver.cpp:219] Iteration 200 (380.439 iter/s, 0.262854s/100 iters), loss = 0.61049
I0428 20:37:49.230021  5040 solver.cpp:238]     Train net output #0: loss = 0.61049 (* 1 = 0.61049 loss)
I0428 20:37:49.230042  5040 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:49.491767  5040 solver.cpp:219] Iteration 300 (382.076 iter/s, 0.261728s/100 iters), loss = 0.479204
I0428 20:37:49.491796  5040 solver.cpp:238]     Train net output #0: loss = 0.479204 (* 1 = 0.479204 loss)
I0428 20:37:49.491802  5040 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:49.754269  5040 solver.cpp:219] Iteration 400 (381.016 iter/s, 0.262456s/100 iters), loss = 0.412701
I0428 20:37:49.754295  5040 solver.cpp:238]     Train net output #0: loss = 0.412701 (* 1 = 0.412701 loss)
I0428 20:37:49.754302  5040 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:50.014696  5040 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:50.139487  5047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:50.142844  5040 solver.cpp:398]     Test net output #0: accuracy = 0.9453
I0428 20:37:50.142881  5040 solver.cpp:398]     Test net output #1: loss = 0.185795 (* 1 = 0.185795 loss)
I0428 20:37:50.145406  5040 solver.cpp:219] Iteration 500 (255.698 iter/s, 0.391087s/100 iters), loss = 0.111644
I0428 20:37:50.145443  5040 solver.cpp:238]     Train net output #0: loss = 0.111644 (* 1 = 0.111644 loss)
I0428 20:37:50.145464  5040 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:50.425144  5040 solver.cpp:219] Iteration 600 (357.555 iter/s, 0.279677s/100 iters), loss = 0.0886263
I0428 20:37:50.425194  5040 solver.cpp:238]     Train net output #0: loss = 0.0886263 (* 1 = 0.0886263 loss)
I0428 20:37:50.425204  5040 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:50.712910  5040 solver.cpp:219] Iteration 700 (347.588 iter/s, 0.287697s/100 iters), loss = 0.0814438
I0428 20:37:50.712957  5040 solver.cpp:238]     Train net output #0: loss = 0.0814437 (* 1 = 0.0814437 loss)
I0428 20:37:50.712968  5040 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:51.007253  5040 solver.cpp:219] Iteration 800 (339.817 iter/s, 0.294276s/100 iters), loss = 0.209361
I0428 20:37:51.007302  5040 solver.cpp:238]     Train net output #0: loss = 0.209361 (* 1 = 0.209361 loss)
I0428 20:37:51.007314  5040 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:51.305614  5040 solver.cpp:219] Iteration 900 (335.244 iter/s, 0.29829s/100 iters), loss = 0.084526
I0428 20:37:51.305665  5040 solver.cpp:238]     Train net output #0: loss = 0.084526 (* 1 = 0.084526 loss)
I0428 20:37:51.305678  5040 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:51.404675  5046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:51.602248  5040 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:51.610688  5040 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:51.615036  5040 solver.cpp:311] Iteration 1000, loss = 0.122213
I0428 20:37:51.615066  5040 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:51.747431  5047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:51.752063  5040 solver.cpp:398]     Test net output #0: accuracy = 0.9708
I0428 20:37:51.752087  5040 solver.cpp:398]     Test net output #1: loss = 0.0926086 (* 1 = 0.0926086 loss)
I0428 20:37:51.752092  5040 solver.cpp:316] Optimization Done.
I0428 20:37:51.752096  5040 caffe.cpp:259] Optimization Done.
