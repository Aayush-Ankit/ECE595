I0428 19:39:51.365664 24405 caffe.cpp:218] Using GPUs 0
I0428 19:39:51.403463 24405 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:51.917019 24405 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test317.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:51.917196 24405 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test317.prototxt
I0428 19:39:51.917582 24405 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:51.917603 24405 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:51.917708 24405 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:39:51.917817 24405 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:51.917948 24405 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:51.917984 24405 net.cpp:86] Creating Layer mnist
I0428 19:39:51.917994 24405 net.cpp:382] mnist -> data
I0428 19:39:51.918027 24405 net.cpp:382] mnist -> label
I0428 19:39:51.919261 24405 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:51.921741 24405 net.cpp:124] Setting up mnist
I0428 19:39:51.921764 24405 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:51.921774 24405 net.cpp:131] Top shape: 64 (64)
I0428 19:39:51.921780 24405 net.cpp:139] Memory required for data: 200960
I0428 19:39:51.921793 24405 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:51.921818 24405 net.cpp:86] Creating Layer conv0
I0428 19:39:51.921828 24405 net.cpp:408] conv0 <- data
I0428 19:39:51.921845 24405 net.cpp:382] conv0 -> conv0
I0428 19:39:52.204974 24405 net.cpp:124] Setting up conv0
I0428 19:39:52.205004 24405 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:52.205011 24405 net.cpp:139] Memory required for data: 495872
I0428 19:39:52.205062 24405 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:52.205081 24405 net.cpp:86] Creating Layer pool0
I0428 19:39:52.205088 24405 net.cpp:408] pool0 <- conv0
I0428 19:39:52.205098 24405 net.cpp:382] pool0 -> pool0
I0428 19:39:52.205152 24405 net.cpp:124] Setting up pool0
I0428 19:39:52.205160 24405 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:52.205165 24405 net.cpp:139] Memory required for data: 569600
I0428 19:39:52.205170 24405 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:52.205186 24405 net.cpp:86] Creating Layer conv1
I0428 19:39:52.205193 24405 net.cpp:408] conv1 <- pool0
I0428 19:39:52.205202 24405 net.cpp:382] conv1 -> conv1
I0428 19:39:52.207012 24405 net.cpp:124] Setting up conv1
I0428 19:39:52.207028 24405 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:39:52.207034 24405 net.cpp:139] Memory required for data: 651520
I0428 19:39:52.207046 24405 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:52.207058 24405 net.cpp:86] Creating Layer pool1
I0428 19:39:52.207064 24405 net.cpp:408] pool1 <- conv1
I0428 19:39:52.207072 24405 net.cpp:382] pool1 -> pool1
I0428 19:39:52.207116 24405 net.cpp:124] Setting up pool1
I0428 19:39:52.207124 24405 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:39:52.207129 24405 net.cpp:139] Memory required for data: 672000
I0428 19:39:52.207135 24405 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:52.207145 24405 net.cpp:86] Creating Layer ip1
I0428 19:39:52.207150 24405 net.cpp:408] ip1 <- pool1
I0428 19:39:52.207159 24405 net.cpp:382] ip1 -> ip1
I0428 19:39:52.207263 24405 net.cpp:124] Setting up ip1
I0428 19:39:52.207273 24405 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:52.207278 24405 net.cpp:139] Memory required for data: 674560
I0428 19:39:52.207288 24405 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:52.207301 24405 net.cpp:86] Creating Layer relu1
I0428 19:39:52.207307 24405 net.cpp:408] relu1 <- ip1
I0428 19:39:52.207315 24405 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:52.207481 24405 net.cpp:124] Setting up relu1
I0428 19:39:52.207491 24405 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:52.207496 24405 net.cpp:139] Memory required for data: 677120
I0428 19:39:52.207501 24405 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:52.207511 24405 net.cpp:86] Creating Layer ip2
I0428 19:39:52.207516 24405 net.cpp:408] ip2 <- ip1
I0428 19:39:52.207525 24405 net.cpp:382] ip2 -> ip2
I0428 19:39:52.207625 24405 net.cpp:124] Setting up ip2
I0428 19:39:52.207633 24405 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:52.207638 24405 net.cpp:139] Memory required for data: 679680
I0428 19:39:52.207648 24405 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:52.207657 24405 net.cpp:86] Creating Layer relu2
I0428 19:39:52.207662 24405 net.cpp:408] relu2 <- ip2
I0428 19:39:52.207669 24405 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:52.208618 24405 net.cpp:124] Setting up relu2
I0428 19:39:52.208631 24405 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:52.208637 24405 net.cpp:139] Memory required for data: 682240
I0428 19:39:52.208642 24405 layer_factory.hpp:77] Creating layer loss
I0428 19:39:52.208652 24405 net.cpp:86] Creating Layer loss
I0428 19:39:52.208658 24405 net.cpp:408] loss <- ip2
I0428 19:39:52.208667 24405 net.cpp:408] loss <- label
I0428 19:39:52.208674 24405 net.cpp:382] loss -> loss
I0428 19:39:52.208695 24405 layer_factory.hpp:77] Creating layer loss
I0428 19:39:52.208951 24405 net.cpp:124] Setting up loss
I0428 19:39:52.208963 24405 net.cpp:131] Top shape: (1)
I0428 19:39:52.208968 24405 net.cpp:134]     with loss weight 1
I0428 19:39:52.208989 24405 net.cpp:139] Memory required for data: 682244
I0428 19:39:52.208995 24405 net.cpp:200] loss needs backward computation.
I0428 19:39:52.209002 24405 net.cpp:200] relu2 needs backward computation.
I0428 19:39:52.209007 24405 net.cpp:200] ip2 needs backward computation.
I0428 19:39:52.209012 24405 net.cpp:200] relu1 needs backward computation.
I0428 19:39:52.209017 24405 net.cpp:200] ip1 needs backward computation.
I0428 19:39:52.209022 24405 net.cpp:200] pool1 needs backward computation.
I0428 19:39:52.209038 24405 net.cpp:200] conv1 needs backward computation.
I0428 19:39:52.209045 24405 net.cpp:200] pool0 needs backward computation.
I0428 19:39:52.209050 24405 net.cpp:200] conv0 needs backward computation.
I0428 19:39:52.209056 24405 net.cpp:202] mnist does not need backward computation.
I0428 19:39:52.209061 24405 net.cpp:244] This network produces output loss
I0428 19:39:52.209090 24405 net.cpp:257] Network initialization done.
I0428 19:39:52.209414 24405 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test317.prototxt
I0428 19:39:52.209446 24405 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:52.209537 24405 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:39:52.209631 24405 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:52.209691 24405 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:52.209708 24405 net.cpp:86] Creating Layer mnist
I0428 19:39:52.209715 24405 net.cpp:382] mnist -> data
I0428 19:39:52.209728 24405 net.cpp:382] mnist -> label
I0428 19:39:52.209841 24405 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:52.212000 24405 net.cpp:124] Setting up mnist
I0428 19:39:52.212015 24405 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:52.212023 24405 net.cpp:131] Top shape: 100 (100)
I0428 19:39:52.212028 24405 net.cpp:139] Memory required for data: 314000
I0428 19:39:52.212034 24405 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:52.212044 24405 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:52.212050 24405 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:52.212057 24405 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:52.212069 24405 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:52.212117 24405 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:52.212134 24405 net.cpp:131] Top shape: 100 (100)
I0428 19:39:52.212141 24405 net.cpp:131] Top shape: 100 (100)
I0428 19:39:52.212146 24405 net.cpp:139] Memory required for data: 314800
I0428 19:39:52.212152 24405 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:52.212164 24405 net.cpp:86] Creating Layer conv0
I0428 19:39:52.212172 24405 net.cpp:408] conv0 <- data
I0428 19:39:52.212179 24405 net.cpp:382] conv0 -> conv0
I0428 19:39:52.213778 24405 net.cpp:124] Setting up conv0
I0428 19:39:52.213793 24405 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:52.213799 24405 net.cpp:139] Memory required for data: 775600
I0428 19:39:52.213814 24405 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:52.213824 24405 net.cpp:86] Creating Layer pool0
I0428 19:39:52.213829 24405 net.cpp:408] pool0 <- conv0
I0428 19:39:52.213836 24405 net.cpp:382] pool0 -> pool0
I0428 19:39:52.213879 24405 net.cpp:124] Setting up pool0
I0428 19:39:52.213887 24405 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:52.213892 24405 net.cpp:139] Memory required for data: 890800
I0428 19:39:52.213898 24405 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:52.213912 24405 net.cpp:86] Creating Layer conv1
I0428 19:39:52.213917 24405 net.cpp:408] conv1 <- pool0
I0428 19:39:52.213927 24405 net.cpp:382] conv1 -> conv1
I0428 19:39:52.215385 24405 net.cpp:124] Setting up conv1
I0428 19:39:52.215399 24405 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:39:52.215405 24405 net.cpp:139] Memory required for data: 1018800
I0428 19:39:52.215418 24405 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:52.215430 24405 net.cpp:86] Creating Layer pool1
I0428 19:39:52.215436 24405 net.cpp:408] pool1 <- conv1
I0428 19:39:52.215445 24405 net.cpp:382] pool1 -> pool1
I0428 19:39:52.215504 24405 net.cpp:124] Setting up pool1
I0428 19:39:52.215513 24405 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:39:52.215519 24405 net.cpp:139] Memory required for data: 1050800
I0428 19:39:52.215524 24405 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:52.215534 24405 net.cpp:86] Creating Layer ip1
I0428 19:39:52.215539 24405 net.cpp:408] ip1 <- pool1
I0428 19:39:52.215548 24405 net.cpp:382] ip1 -> ip1
I0428 19:39:52.215654 24405 net.cpp:124] Setting up ip1
I0428 19:39:52.215664 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.215669 24405 net.cpp:139] Memory required for data: 1054800
I0428 19:39:52.215682 24405 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:52.215690 24405 net.cpp:86] Creating Layer relu1
I0428 19:39:52.215711 24405 net.cpp:408] relu1 <- ip1
I0428 19:39:52.215718 24405 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:52.215870 24405 net.cpp:124] Setting up relu1
I0428 19:39:52.215880 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.215885 24405 net.cpp:139] Memory required for data: 1058800
I0428 19:39:52.215891 24405 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:52.215903 24405 net.cpp:86] Creating Layer ip2
I0428 19:39:52.215909 24405 net.cpp:408] ip2 <- ip1
I0428 19:39:52.215917 24405 net.cpp:382] ip2 -> ip2
I0428 19:39:52.216014 24405 net.cpp:124] Setting up ip2
I0428 19:39:52.216024 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.216029 24405 net.cpp:139] Memory required for data: 1062800
I0428 19:39:52.216038 24405 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:52.216045 24405 net.cpp:86] Creating Layer relu2
I0428 19:39:52.216050 24405 net.cpp:408] relu2 <- ip2
I0428 19:39:52.216058 24405 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:52.216205 24405 net.cpp:124] Setting up relu2
I0428 19:39:52.216214 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.216220 24405 net.cpp:139] Memory required for data: 1066800
I0428 19:39:52.216225 24405 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:39:52.216233 24405 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:39:52.216238 24405 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:39:52.216244 24405 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:39:52.216282 24405 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:39:52.216328 24405 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:39:52.216337 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.216343 24405 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:52.216348 24405 net.cpp:139] Memory required for data: 1074800
I0428 19:39:52.216354 24405 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:52.216362 24405 net.cpp:86] Creating Layer accuracy
I0428 19:39:52.216367 24405 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:39:52.216374 24405 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:52.216382 24405 net.cpp:382] accuracy -> accuracy
I0428 19:39:52.216393 24405 net.cpp:124] Setting up accuracy
I0428 19:39:52.216403 24405 net.cpp:131] Top shape: (1)
I0428 19:39:52.216408 24405 net.cpp:139] Memory required for data: 1074804
I0428 19:39:52.216413 24405 layer_factory.hpp:77] Creating layer loss
I0428 19:39:52.216420 24405 net.cpp:86] Creating Layer loss
I0428 19:39:52.216425 24405 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:39:52.216433 24405 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:52.216440 24405 net.cpp:382] loss -> loss
I0428 19:39:52.216450 24405 layer_factory.hpp:77] Creating layer loss
I0428 19:39:52.216711 24405 net.cpp:124] Setting up loss
I0428 19:39:52.216722 24405 net.cpp:131] Top shape: (1)
I0428 19:39:52.216727 24405 net.cpp:134]     with loss weight 1
I0428 19:39:52.216737 24405 net.cpp:139] Memory required for data: 1074808
I0428 19:39:52.216753 24405 net.cpp:200] loss needs backward computation.
I0428 19:39:52.216758 24405 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:52.216765 24405 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:39:52.216771 24405 net.cpp:200] relu2 needs backward computation.
I0428 19:39:52.216776 24405 net.cpp:200] ip2 needs backward computation.
I0428 19:39:52.216783 24405 net.cpp:200] relu1 needs backward computation.
I0428 19:39:52.216789 24405 net.cpp:200] ip1 needs backward computation.
I0428 19:39:52.216794 24405 net.cpp:200] pool1 needs backward computation.
I0428 19:39:52.216799 24405 net.cpp:200] conv1 needs backward computation.
I0428 19:39:52.216805 24405 net.cpp:200] pool0 needs backward computation.
I0428 19:39:52.216832 24405 net.cpp:200] conv0 needs backward computation.
I0428 19:39:52.216840 24405 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:52.216863 24405 net.cpp:202] mnist does not need backward computation.
I0428 19:39:52.216869 24405 net.cpp:244] This network produces output accuracy
I0428 19:39:52.216876 24405 net.cpp:244] This network produces output loss
I0428 19:39:52.216893 24405 net.cpp:257] Network initialization done.
I0428 19:39:52.216946 24405 solver.cpp:56] Solver scaffolding done.
I0428 19:39:52.217273 24405 caffe.cpp:248] Starting Optimization
I0428 19:39:52.217281 24405 solver.cpp:273] Solving LeNet
I0428 19:39:52.217285 24405 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:52.218122 24405 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:52.219748 24405 blocking_queue.cpp:49] Waiting for data
I0428 19:39:52.292099 24414 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:52.292493 24405 solver.cpp:398]     Test net output #0: accuracy = 0.0553
I0428 19:39:52.292515 24405 solver.cpp:398]     Test net output #1: loss = 2.31889 (* 1 = 2.31889 loss)
I0428 19:39:52.294699 24405 solver.cpp:219] Iteration 0 (0 iter/s, 0.0773693s/100 iters), loss = 2.309
I0428 19:39:52.294742 24405 solver.cpp:238]     Train net output #0: loss = 2.309 (* 1 = 2.309 loss)
I0428 19:39:52.294767 24405 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:52.370128 24405 solver.cpp:219] Iteration 100 (1326.58 iter/s, 0.0753818s/100 iters), loss = 1.69095
I0428 19:39:52.370164 24405 solver.cpp:238]     Train net output #0: loss = 1.69095 (* 1 = 1.69095 loss)
I0428 19:39:52.370177 24405 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:52.434020 24405 solver.cpp:219] Iteration 200 (1566.18 iter/s, 0.0638497s/100 iters), loss = 1.56362
I0428 19:39:52.434062 24405 solver.cpp:238]     Train net output #0: loss = 1.56362 (* 1 = 1.56362 loss)
I0428 19:39:52.434072 24405 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:52.494765 24405 solver.cpp:219] Iteration 300 (1647.48 iter/s, 0.0606986s/100 iters), loss = 1.2048
I0428 19:39:52.494792 24405 solver.cpp:238]     Train net output #0: loss = 1.2048 (* 1 = 1.2048 loss)
I0428 19:39:52.494817 24405 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:52.556237 24405 solver.cpp:219] Iteration 400 (1627.63 iter/s, 0.0614391s/100 iters), loss = 0.837836
I0428 19:39:52.556264 24405 solver.cpp:238]     Train net output #0: loss = 0.837836 (* 1 = 0.837836 loss)
I0428 19:39:52.556290 24405 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:52.616760 24405 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:52.692157 24414 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:52.692570 24405 solver.cpp:398]     Test net output #0: accuracy = 0.8144
I0428 19:39:52.692595 24405 solver.cpp:398]     Test net output #1: loss = 0.551049 (* 1 = 0.551049 loss)
I0428 19:39:52.693325 24405 solver.cpp:219] Iteration 500 (729.66 iter/s, 0.13705s/100 iters), loss = 0.524706
I0428 19:39:52.693354 24405 solver.cpp:238]     Train net output #0: loss = 0.524706 (* 1 = 0.524706 loss)
I0428 19:39:52.693366 24405 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:52.763968 24405 solver.cpp:219] Iteration 600 (1416.25 iter/s, 0.0706088s/100 iters), loss = 0.402717
I0428 19:39:52.763996 24405 solver.cpp:238]     Train net output #0: loss = 0.402717 (* 1 = 0.402717 loss)
I0428 19:39:52.764006 24405 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:52.826943 24405 solver.cpp:219] Iteration 700 (1588.78 iter/s, 0.0629412s/100 iters), loss = 0.829064
I0428 19:39:52.826972 24405 solver.cpp:238]     Train net output #0: loss = 0.829064 (* 1 = 0.829064 loss)
I0428 19:39:52.826982 24405 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:52.888059 24405 solver.cpp:219] Iteration 800 (1637.18 iter/s, 0.0610807s/100 iters), loss = 0.709926
I0428 19:39:52.888088 24405 solver.cpp:238]     Train net output #0: loss = 0.709926 (* 1 = 0.709926 loss)
I0428 19:39:52.888098 24405 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:52.950124 24405 solver.cpp:219] Iteration 900 (1612.1 iter/s, 0.0620308s/100 iters), loss = 0.596255
I0428 19:39:52.950153 24405 solver.cpp:238]     Train net output #0: loss = 0.596255 (* 1 = 0.596255 loss)
I0428 19:39:52.950163 24405 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:52.970944 24413 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:53.010602 24405 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:53.011162 24405 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:53.011567 24405 solver.cpp:311] Iteration 1000, loss = 0.463799
I0428 19:39:53.011584 24405 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:53.059257 24414 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:53.059639 24405 solver.cpp:398]     Test net output #0: accuracy = 0.8517
I0428 19:39:53.059659 24405 solver.cpp:398]     Test net output #1: loss = 0.404608 (* 1 = 0.404608 loss)
I0428 19:39:53.059667 24405 solver.cpp:316] Optimization Done.
I0428 19:39:53.059671 24405 caffe.cpp:259] Optimization Done.
