I0428 19:55:45.025892 28245 caffe.cpp:218] Using GPUs 0
I0428 19:55:45.057628 28245 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:45.517113 28245 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test739.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:45.517315 28245 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test739.prototxt
I0428 19:55:45.517751 28245 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:45.517781 28245 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:45.517860 28245 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:45.517920 28245 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:45.518004 28245 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:45.518023 28245 net.cpp:86] Creating Layer mnist
I0428 19:55:45.518029 28245 net.cpp:382] mnist -> data
I0428 19:55:45.518062 28245 net.cpp:382] mnist -> label
I0428 19:55:45.519071 28245 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:45.521343 28245 net.cpp:124] Setting up mnist
I0428 19:55:45.521373 28245 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:45.521378 28245 net.cpp:131] Top shape: 64 (64)
I0428 19:55:45.521383 28245 net.cpp:139] Memory required for data: 200960
I0428 19:55:45.521387 28245 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:45.521416 28245 net.cpp:86] Creating Layer conv0
I0428 19:55:45.521435 28245 net.cpp:408] conv0 <- data
I0428 19:55:45.521445 28245 net.cpp:382] conv0 -> conv0
I0428 19:55:45.749326 28245 net.cpp:124] Setting up conv0
I0428 19:55:45.749367 28245 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:45.749372 28245 net.cpp:139] Memory required for data: 938240
I0428 19:55:45.749385 28245 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:45.749398 28245 net.cpp:86] Creating Layer pool0
I0428 19:55:45.749402 28245 net.cpp:408] pool0 <- conv0
I0428 19:55:45.749423 28245 net.cpp:382] pool0 -> pool0
I0428 19:55:45.749469 28245 net.cpp:124] Setting up pool0
I0428 19:55:45.749476 28245 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:45.749480 28245 net.cpp:139] Memory required for data: 1122560
I0428 19:55:45.749482 28245 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:45.749492 28245 net.cpp:86] Creating Layer conv1
I0428 19:55:45.749495 28245 net.cpp:408] conv1 <- pool0
I0428 19:55:45.749500 28245 net.cpp:382] conv1 -> conv1
I0428 19:55:45.752264 28245 net.cpp:124] Setting up conv1
I0428 19:55:45.752288 28245 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:45.752292 28245 net.cpp:139] Memory required for data: 2760960
I0428 19:55:45.752316 28245 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:45.752323 28245 net.cpp:86] Creating Layer pool1
I0428 19:55:45.752326 28245 net.cpp:408] pool1 <- conv1
I0428 19:55:45.752331 28245 net.cpp:382] pool1 -> pool1
I0428 19:55:45.752382 28245 net.cpp:124] Setting up pool1
I0428 19:55:45.752387 28245 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:45.752389 28245 net.cpp:139] Memory required for data: 3170560
I0428 19:55:45.752393 28245 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:45.752398 28245 net.cpp:86] Creating Layer ip1
I0428 19:55:45.752401 28245 net.cpp:408] ip1 <- pool1
I0428 19:55:45.752405 28245 net.cpp:382] ip1 -> ip1
I0428 19:55:45.753792 28245 net.cpp:124] Setting up ip1
I0428 19:55:45.753803 28245 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:45.753823 28245 net.cpp:139] Memory required for data: 3183360
I0428 19:55:45.753831 28245 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:45.753836 28245 net.cpp:86] Creating Layer relu1
I0428 19:55:45.753840 28245 net.cpp:408] relu1 <- ip1
I0428 19:55:45.753844 28245 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:45.754020 28245 net.cpp:124] Setting up relu1
I0428 19:55:45.754029 28245 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:45.754032 28245 net.cpp:139] Memory required for data: 3196160
I0428 19:55:45.754035 28245 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:45.754041 28245 net.cpp:86] Creating Layer ip2
I0428 19:55:45.754045 28245 net.cpp:408] ip2 <- ip1
I0428 19:55:45.754050 28245 net.cpp:382] ip2 -> ip2
I0428 19:55:45.754972 28245 net.cpp:124] Setting up ip2
I0428 19:55:45.754984 28245 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:45.755004 28245 net.cpp:139] Memory required for data: 3208960
I0428 19:55:45.755010 28245 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:45.755017 28245 net.cpp:86] Creating Layer relu2
I0428 19:55:45.755020 28245 net.cpp:408] relu2 <- ip2
I0428 19:55:45.755024 28245 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:45.755740 28245 net.cpp:124] Setting up relu2
I0428 19:55:45.755764 28245 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:45.755782 28245 net.cpp:139] Memory required for data: 3221760
I0428 19:55:45.755785 28245 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:45.755792 28245 net.cpp:86] Creating Layer ip3
I0428 19:55:45.755798 28245 net.cpp:408] ip3 <- ip2
I0428 19:55:45.755803 28245 net.cpp:382] ip3 -> ip3
I0428 19:55:45.755901 28245 net.cpp:124] Setting up ip3
I0428 19:55:45.755908 28245 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:45.755911 28245 net.cpp:139] Memory required for data: 3224320
I0428 19:55:45.755918 28245 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:45.755923 28245 net.cpp:86] Creating Layer relu3
I0428 19:55:45.755926 28245 net.cpp:408] relu3 <- ip3
I0428 19:55:45.755930 28245 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:45.756101 28245 net.cpp:124] Setting up relu3
I0428 19:55:45.756109 28245 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:45.756112 28245 net.cpp:139] Memory required for data: 3226880
I0428 19:55:45.756115 28245 layer_factory.hpp:77] Creating layer loss
I0428 19:55:45.756121 28245 net.cpp:86] Creating Layer loss
I0428 19:55:45.756124 28245 net.cpp:408] loss <- ip3
I0428 19:55:45.756129 28245 net.cpp:408] loss <- label
I0428 19:55:45.756145 28245 net.cpp:382] loss -> loss
I0428 19:55:45.756161 28245 layer_factory.hpp:77] Creating layer loss
I0428 19:55:45.756392 28245 net.cpp:124] Setting up loss
I0428 19:55:45.756402 28245 net.cpp:131] Top shape: (1)
I0428 19:55:45.756404 28245 net.cpp:134]     with loss weight 1
I0428 19:55:45.756422 28245 net.cpp:139] Memory required for data: 3226884
I0428 19:55:45.756425 28245 net.cpp:200] loss needs backward computation.
I0428 19:55:45.756429 28245 net.cpp:200] relu3 needs backward computation.
I0428 19:55:45.756433 28245 net.cpp:200] ip3 needs backward computation.
I0428 19:55:45.756435 28245 net.cpp:200] relu2 needs backward computation.
I0428 19:55:45.756438 28245 net.cpp:200] ip2 needs backward computation.
I0428 19:55:45.756440 28245 net.cpp:200] relu1 needs backward computation.
I0428 19:55:45.756443 28245 net.cpp:200] ip1 needs backward computation.
I0428 19:55:45.756446 28245 net.cpp:200] pool1 needs backward computation.
I0428 19:55:45.756449 28245 net.cpp:200] conv1 needs backward computation.
I0428 19:55:45.756453 28245 net.cpp:200] pool0 needs backward computation.
I0428 19:55:45.756455 28245 net.cpp:200] conv0 needs backward computation.
I0428 19:55:45.756458 28245 net.cpp:202] mnist does not need backward computation.
I0428 19:55:45.756461 28245 net.cpp:244] This network produces output loss
I0428 19:55:45.756471 28245 net.cpp:257] Network initialization done.
I0428 19:55:45.756829 28245 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test739.prototxt
I0428 19:55:45.756888 28245 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:45.756999 28245 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:45.757081 28245 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:45.757125 28245 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:45.757141 28245 net.cpp:86] Creating Layer mnist
I0428 19:55:45.757146 28245 net.cpp:382] mnist -> data
I0428 19:55:45.757155 28245 net.cpp:382] mnist -> label
I0428 19:55:45.757269 28245 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:45.758429 28245 net.cpp:124] Setting up mnist
I0428 19:55:45.758457 28245 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:45.758462 28245 net.cpp:131] Top shape: 100 (100)
I0428 19:55:45.758466 28245 net.cpp:139] Memory required for data: 314000
I0428 19:55:45.758468 28245 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:45.758489 28245 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:45.758493 28245 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:45.758497 28245 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:45.758504 28245 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:45.758545 28245 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:45.758550 28245 net.cpp:131] Top shape: 100 (100)
I0428 19:55:45.758554 28245 net.cpp:131] Top shape: 100 (100)
I0428 19:55:45.758556 28245 net.cpp:139] Memory required for data: 314800
I0428 19:55:45.758560 28245 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:45.758569 28245 net.cpp:86] Creating Layer conv0
I0428 19:55:45.758571 28245 net.cpp:408] conv0 <- data
I0428 19:55:45.758576 28245 net.cpp:382] conv0 -> conv0
I0428 19:55:45.760241 28245 net.cpp:124] Setting up conv0
I0428 19:55:45.760254 28245 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:45.760257 28245 net.cpp:139] Memory required for data: 1466800
I0428 19:55:45.760267 28245 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:45.760288 28245 net.cpp:86] Creating Layer pool0
I0428 19:55:45.760291 28245 net.cpp:408] pool0 <- conv0
I0428 19:55:45.760306 28245 net.cpp:382] pool0 -> pool0
I0428 19:55:45.760340 28245 net.cpp:124] Setting up pool0
I0428 19:55:45.760345 28245 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:45.760349 28245 net.cpp:139] Memory required for data: 1754800
I0428 19:55:45.760350 28245 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:45.760359 28245 net.cpp:86] Creating Layer conv1
I0428 19:55:45.760361 28245 net.cpp:408] conv1 <- pool0
I0428 19:55:45.760366 28245 net.cpp:382] conv1 -> conv1
I0428 19:55:45.761952 28245 net.cpp:124] Setting up conv1
I0428 19:55:45.761966 28245 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:45.761970 28245 net.cpp:139] Memory required for data: 4314800
I0428 19:55:45.761979 28245 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:45.761986 28245 net.cpp:86] Creating Layer pool1
I0428 19:55:45.761989 28245 net.cpp:408] pool1 <- conv1
I0428 19:55:45.761994 28245 net.cpp:382] pool1 -> pool1
I0428 19:55:45.762028 28245 net.cpp:124] Setting up pool1
I0428 19:55:45.762033 28245 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:45.762037 28245 net.cpp:139] Memory required for data: 4954800
I0428 19:55:45.762040 28245 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:45.762046 28245 net.cpp:86] Creating Layer ip1
I0428 19:55:45.762049 28245 net.cpp:408] ip1 <- pool1
I0428 19:55:45.762053 28245 net.cpp:382] ip1 -> ip1
I0428 19:55:45.762641 28245 net.cpp:124] Setting up ip1
I0428 19:55:45.762660 28245 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:45.762673 28245 net.cpp:139] Memory required for data: 4974800
I0428 19:55:45.762681 28245 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:45.762686 28245 net.cpp:86] Creating Layer relu1
I0428 19:55:45.762688 28245 net.cpp:408] relu1 <- ip1
I0428 19:55:45.762692 28245 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:45.762930 28245 net.cpp:124] Setting up relu1
I0428 19:55:45.762938 28245 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:45.762941 28245 net.cpp:139] Memory required for data: 4994800
I0428 19:55:45.762944 28245 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:45.762953 28245 net.cpp:86] Creating Layer ip2
I0428 19:55:45.762955 28245 net.cpp:408] ip2 <- ip1
I0428 19:55:45.762960 28245 net.cpp:382] ip2 -> ip2
I0428 19:55:45.763108 28245 net.cpp:124] Setting up ip2
I0428 19:55:45.763114 28245 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:45.763118 28245 net.cpp:139] Memory required for data: 5014800
I0428 19:55:45.763123 28245 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:45.763130 28245 net.cpp:86] Creating Layer relu2
I0428 19:55:45.763134 28245 net.cpp:408] relu2 <- ip2
I0428 19:55:45.763137 28245 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:45.763290 28245 net.cpp:124] Setting up relu2
I0428 19:55:45.763298 28245 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:45.763303 28245 net.cpp:139] Memory required for data: 5034800
I0428 19:55:45.763305 28245 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:45.763311 28245 net.cpp:86] Creating Layer ip3
I0428 19:55:45.763315 28245 net.cpp:408] ip3 <- ip2
I0428 19:55:45.763319 28245 net.cpp:382] ip3 -> ip3
I0428 19:55:45.763427 28245 net.cpp:124] Setting up ip3
I0428 19:55:45.763433 28245 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:45.763437 28245 net.cpp:139] Memory required for data: 5038800
I0428 19:55:45.763444 28245 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:45.763465 28245 net.cpp:86] Creating Layer relu3
I0428 19:55:45.763468 28245 net.cpp:408] relu3 <- ip3
I0428 19:55:45.763473 28245 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:45.764274 28245 net.cpp:124] Setting up relu3
I0428 19:55:45.764286 28245 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:45.764289 28245 net.cpp:139] Memory required for data: 5042800
I0428 19:55:45.764293 28245 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:45.764298 28245 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:45.764302 28245 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:45.764305 28245 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:45.764312 28245 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:45.764364 28245 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:45.764371 28245 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:45.764375 28245 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:45.764377 28245 net.cpp:139] Memory required for data: 5050800
I0428 19:55:45.764380 28245 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:45.764392 28245 net.cpp:86] Creating Layer accuracy
I0428 19:55:45.764395 28245 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:45.764400 28245 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:45.764408 28245 net.cpp:382] accuracy -> accuracy
I0428 19:55:45.764415 28245 net.cpp:124] Setting up accuracy
I0428 19:55:45.764420 28245 net.cpp:131] Top shape: (1)
I0428 19:55:45.764421 28245 net.cpp:139] Memory required for data: 5050804
I0428 19:55:45.764425 28245 layer_factory.hpp:77] Creating layer loss
I0428 19:55:45.764439 28245 net.cpp:86] Creating Layer loss
I0428 19:55:45.764443 28245 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:45.764456 28245 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:45.764461 28245 net.cpp:382] loss -> loss
I0428 19:55:45.764470 28245 layer_factory.hpp:77] Creating layer loss
I0428 19:55:45.764693 28245 net.cpp:124] Setting up loss
I0428 19:55:45.764701 28245 net.cpp:131] Top shape: (1)
I0428 19:55:45.764705 28245 net.cpp:134]     with loss weight 1
I0428 19:55:45.764720 28245 net.cpp:139] Memory required for data: 5050808
I0428 19:55:45.764744 28245 net.cpp:200] loss needs backward computation.
I0428 19:55:45.764746 28245 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:45.764750 28245 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:45.764753 28245 net.cpp:200] relu3 needs backward computation.
I0428 19:55:45.764756 28245 net.cpp:200] ip3 needs backward computation.
I0428 19:55:45.764758 28245 net.cpp:200] relu2 needs backward computation.
I0428 19:55:45.764761 28245 net.cpp:200] ip2 needs backward computation.
I0428 19:55:45.764763 28245 net.cpp:200] relu1 needs backward computation.
I0428 19:55:45.764766 28245 net.cpp:200] ip1 needs backward computation.
I0428 19:55:45.764770 28245 net.cpp:200] pool1 needs backward computation.
I0428 19:55:45.764772 28245 net.cpp:200] conv1 needs backward computation.
I0428 19:55:45.764775 28245 net.cpp:200] pool0 needs backward computation.
I0428 19:55:45.764777 28245 net.cpp:200] conv0 needs backward computation.
I0428 19:55:45.764781 28245 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:45.764786 28245 net.cpp:202] mnist does not need backward computation.
I0428 19:55:45.764789 28245 net.cpp:244] This network produces output accuracy
I0428 19:55:45.764792 28245 net.cpp:244] This network produces output loss
I0428 19:55:45.764803 28245 net.cpp:257] Network initialization done.
I0428 19:55:45.764866 28245 solver.cpp:56] Solver scaffolding done.
I0428 19:55:45.765287 28245 caffe.cpp:248] Starting Optimization
I0428 19:55:45.765295 28245 solver.cpp:273] Solving LeNet
I0428 19:55:45.765297 28245 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:45.766121 28245 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:45.771270 28245 blocking_queue.cpp:49] Waiting for data
I0428 19:55:45.838078 28252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:45.838688 28245 solver.cpp:398]     Test net output #0: accuracy = 0.0753
I0428 19:55:45.838708 28245 solver.cpp:398]     Test net output #1: loss = 2.33997 (* 1 = 2.33997 loss)
I0428 19:55:45.842455 28245 solver.cpp:219] Iteration 0 (0 iter/s, 0.0771174s/100 iters), loss = 2.3465
I0428 19:55:45.842478 28245 solver.cpp:238]     Train net output #0: loss = 2.3465 (* 1 = 2.3465 loss)
I0428 19:55:45.842504 28245 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:45.993396 28245 solver.cpp:219] Iteration 100 (662.687 iter/s, 0.150901s/100 iters), loss = 0.429527
I0428 19:55:45.993423 28245 solver.cpp:238]     Train net output #0: loss = 0.429527 (* 1 = 0.429527 loss)
I0428 19:55:45.993430 28245 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:46.139456 28245 solver.cpp:219] Iteration 200 (684.831 iter/s, 0.146021s/100 iters), loss = 0.210705
I0428 19:55:46.139480 28245 solver.cpp:238]     Train net output #0: loss = 0.210705 (* 1 = 0.210705 loss)
I0428 19:55:46.139487 28245 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:46.285889 28245 solver.cpp:219] Iteration 300 (683.083 iter/s, 0.146395s/100 iters), loss = 0.240002
I0428 19:55:46.285915 28245 solver.cpp:238]     Train net output #0: loss = 0.240002 (* 1 = 0.240002 loss)
I0428 19:55:46.285938 28245 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:46.461822 28245 solver.cpp:219] Iteration 400 (568.556 iter/s, 0.175884s/100 iters), loss = 0.0698202
I0428 19:55:46.461876 28245 solver.cpp:238]     Train net output #0: loss = 0.0698202 (* 1 = 0.0698202 loss)
I0428 19:55:46.461889 28245 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:46.650429 28245 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:46.723686 28252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:46.724441 28245 solver.cpp:398]     Test net output #0: accuracy = 0.956
I0428 19:55:46.724474 28245 solver.cpp:398]     Test net output #1: loss = 0.128293 (* 1 = 0.128293 loss)
I0428 19:55:46.726266 28245 solver.cpp:219] Iteration 500 (378.252 iter/s, 0.264374s/100 iters), loss = 0.0916157
I0428 19:55:46.726325 28245 solver.cpp:238]     Train net output #0: loss = 0.0916157 (* 1 = 0.0916157 loss)
I0428 19:55:46.726336 28245 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:46.893338 28245 solver.cpp:219] Iteration 600 (598.799 iter/s, 0.167001s/100 iters), loss = 0.171269
I0428 19:55:46.893373 28245 solver.cpp:238]     Train net output #0: loss = 0.171269 (* 1 = 0.171269 loss)
I0428 19:55:46.893381 28245 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:47.061372 28245 solver.cpp:219] Iteration 700 (595.287 iter/s, 0.167986s/100 iters), loss = 0.155958
I0428 19:55:47.061409 28245 solver.cpp:238]     Train net output #0: loss = 0.155958 (* 1 = 0.155958 loss)
I0428 19:55:47.061419 28245 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:47.217566 28245 solver.cpp:219] Iteration 800 (640.436 iter/s, 0.156144s/100 iters), loss = 0.264639
I0428 19:55:47.217599 28245 solver.cpp:238]     Train net output #0: loss = 0.264639 (* 1 = 0.264639 loss)
I0428 19:55:47.217608 28245 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:47.386711 28245 solver.cpp:219] Iteration 900 (591.376 iter/s, 0.169097s/100 iters), loss = 0.120382
I0428 19:55:47.386751 28245 solver.cpp:238]     Train net output #0: loss = 0.120382 (* 1 = 0.120382 loss)
I0428 19:55:47.386762 28245 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:47.444030 28251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:47.557598 28245 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:47.560894 28245 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:47.562513 28245 solver.cpp:311] Iteration 1000, loss = 0.077133
I0428 19:55:47.562536 28245 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:47.634270 28252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:47.634898 28245 solver.cpp:398]     Test net output #0: accuracy = 0.9758
I0428 19:55:47.634922 28245 solver.cpp:398]     Test net output #1: loss = 0.0757886 (* 1 = 0.0757886 loss)
I0428 19:55:47.634932 28245 solver.cpp:316] Optimization Done.
I0428 19:55:47.634935 28245 caffe.cpp:259] Optimization Done.
