I0428 19:34:46.892010 23389 caffe.cpp:218] Using GPUs 0
I0428 19:34:46.931113 23389 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:34:47.448046 23389 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test211.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:34:47.448216 23389 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test211.prototxt
I0428 19:34:47.448592 23389 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:34:47.448616 23389 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:34:47.448712 23389 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:47.448832 23389 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:47.448976 23389 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:34:47.449009 23389 net.cpp:86] Creating Layer mnist
I0428 19:34:47.449021 23389 net.cpp:382] mnist -> data
I0428 19:34:47.449055 23389 net.cpp:382] mnist -> label
I0428 19:34:47.450278 23389 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:34:47.452744 23389 net.cpp:124] Setting up mnist
I0428 19:34:47.452764 23389 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:34:47.452775 23389 net.cpp:131] Top shape: 64 (64)
I0428 19:34:47.452780 23389 net.cpp:139] Memory required for data: 200960
I0428 19:34:47.452791 23389 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:47.452826 23389 net.cpp:86] Creating Layer conv0
I0428 19:34:47.452837 23389 net.cpp:408] conv0 <- data
I0428 19:34:47.452857 23389 net.cpp:382] conv0 -> conv0
I0428 19:34:47.735752 23389 net.cpp:124] Setting up conv0
I0428 19:34:47.735781 23389 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:34:47.735787 23389 net.cpp:139] Memory required for data: 7573760
I0428 19:34:47.735807 23389 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:47.735824 23389 net.cpp:86] Creating Layer pool0
I0428 19:34:47.735848 23389 net.cpp:408] pool0 <- conv0
I0428 19:34:47.735859 23389 net.cpp:382] pool0 -> pool0
I0428 19:34:47.735915 23389 net.cpp:124] Setting up pool0
I0428 19:34:47.735924 23389 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:34:47.735929 23389 net.cpp:139] Memory required for data: 9416960
I0428 19:34:47.735934 23389 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:47.735945 23389 net.cpp:86] Creating Layer ip1
I0428 19:34:47.735955 23389 net.cpp:408] ip1 <- pool0
I0428 19:34:47.735963 23389 net.cpp:382] ip1 -> ip1
I0428 19:34:47.737341 23389 net.cpp:124] Setting up ip1
I0428 19:34:47.737356 23389 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:47.737361 23389 net.cpp:139] Memory required for data: 9419520
I0428 19:34:47.737373 23389 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:47.737383 23389 net.cpp:86] Creating Layer relu1
I0428 19:34:47.737388 23389 net.cpp:408] relu1 <- ip1
I0428 19:34:47.737396 23389 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:47.737568 23389 net.cpp:124] Setting up relu1
I0428 19:34:47.737578 23389 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:47.737583 23389 net.cpp:139] Memory required for data: 9422080
I0428 19:34:47.737588 23389 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:47.737614 23389 net.cpp:86] Creating Layer ip2
I0428 19:34:47.737619 23389 net.cpp:408] ip2 <- ip1
I0428 19:34:47.737627 23389 net.cpp:382] ip2 -> ip2
I0428 19:34:47.737737 23389 net.cpp:124] Setting up ip2
I0428 19:34:47.737746 23389 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:34:47.737762 23389 net.cpp:139] Memory required for data: 9428480
I0428 19:34:47.737776 23389 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:47.737785 23389 net.cpp:86] Creating Layer relu2
I0428 19:34:47.737792 23389 net.cpp:408] relu2 <- ip2
I0428 19:34:47.737798 23389 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:47.738682 23389 net.cpp:124] Setting up relu2
I0428 19:34:47.738695 23389 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:34:47.738701 23389 net.cpp:139] Memory required for data: 9434880
I0428 19:34:47.738706 23389 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:47.738718 23389 net.cpp:86] Creating Layer ip3
I0428 19:34:47.738723 23389 net.cpp:408] ip3 <- ip2
I0428 19:34:47.738731 23389 net.cpp:382] ip3 -> ip3
I0428 19:34:47.738844 23389 net.cpp:124] Setting up ip3
I0428 19:34:47.738867 23389 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:47.738873 23389 net.cpp:139] Memory required for data: 9437440
I0428 19:34:47.738896 23389 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:47.738906 23389 net.cpp:86] Creating Layer relu3
I0428 19:34:47.738914 23389 net.cpp:408] relu3 <- ip3
I0428 19:34:47.738935 23389 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:47.739109 23389 net.cpp:124] Setting up relu3
I0428 19:34:47.739118 23389 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:47.739123 23389 net.cpp:139] Memory required for data: 9440000
I0428 19:34:47.739128 23389 layer_factory.hpp:77] Creating layer loss
I0428 19:34:47.739137 23389 net.cpp:86] Creating Layer loss
I0428 19:34:47.739143 23389 net.cpp:408] loss <- ip3
I0428 19:34:47.739151 23389 net.cpp:408] loss <- label
I0428 19:34:47.739159 23389 net.cpp:382] loss -> loss
I0428 19:34:47.739182 23389 layer_factory.hpp:77] Creating layer loss
I0428 19:34:47.739428 23389 net.cpp:124] Setting up loss
I0428 19:34:47.739439 23389 net.cpp:131] Top shape: (1)
I0428 19:34:47.739444 23389 net.cpp:134]     with loss weight 1
I0428 19:34:47.739461 23389 net.cpp:139] Memory required for data: 9440004
I0428 19:34:47.739467 23389 net.cpp:200] loss needs backward computation.
I0428 19:34:47.739473 23389 net.cpp:200] relu3 needs backward computation.
I0428 19:34:47.739477 23389 net.cpp:200] ip3 needs backward computation.
I0428 19:34:47.739482 23389 net.cpp:200] relu2 needs backward computation.
I0428 19:34:47.739487 23389 net.cpp:200] ip2 needs backward computation.
I0428 19:34:47.739491 23389 net.cpp:200] relu1 needs backward computation.
I0428 19:34:47.739495 23389 net.cpp:200] ip1 needs backward computation.
I0428 19:34:47.739511 23389 net.cpp:200] pool0 needs backward computation.
I0428 19:34:47.739516 23389 net.cpp:200] conv0 needs backward computation.
I0428 19:34:47.739521 23389 net.cpp:202] mnist does not need backward computation.
I0428 19:34:47.739526 23389 net.cpp:244] This network produces output loss
I0428 19:34:47.739538 23389 net.cpp:257] Network initialization done.
I0428 19:34:47.739890 23389 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test211.prototxt
I0428 19:34:47.739923 23389 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:34:47.740057 23389 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:47.740169 23389 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:47.740229 23389 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:34:47.740248 23389 net.cpp:86] Creating Layer mnist
I0428 19:34:47.740257 23389 net.cpp:382] mnist -> data
I0428 19:34:47.740283 23389 net.cpp:382] mnist -> label
I0428 19:34:47.740427 23389 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:34:47.741729 23389 net.cpp:124] Setting up mnist
I0428 19:34:47.741760 23389 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:34:47.741766 23389 net.cpp:131] Top shape: 100 (100)
I0428 19:34:47.741771 23389 net.cpp:139] Memory required for data: 314000
I0428 19:34:47.741777 23389 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:34:47.741806 23389 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:34:47.741812 23389 net.cpp:408] label_mnist_1_split <- label
I0428 19:34:47.741821 23389 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:34:47.741845 23389 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:34:47.741930 23389 net.cpp:124] Setting up label_mnist_1_split
I0428 19:34:47.741938 23389 net.cpp:131] Top shape: 100 (100)
I0428 19:34:47.741945 23389 net.cpp:131] Top shape: 100 (100)
I0428 19:34:47.741950 23389 net.cpp:139] Memory required for data: 314800
I0428 19:34:47.741967 23389 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:47.741981 23389 net.cpp:86] Creating Layer conv0
I0428 19:34:47.741987 23389 net.cpp:408] conv0 <- data
I0428 19:34:47.741997 23389 net.cpp:382] conv0 -> conv0
I0428 19:34:47.743672 23389 net.cpp:124] Setting up conv0
I0428 19:34:47.743687 23389 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:34:47.743693 23389 net.cpp:139] Memory required for data: 11834800
I0428 19:34:47.743722 23389 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:47.743732 23389 net.cpp:86] Creating Layer pool0
I0428 19:34:47.743738 23389 net.cpp:408] pool0 <- conv0
I0428 19:34:47.743746 23389 net.cpp:382] pool0 -> pool0
I0428 19:34:47.743787 23389 net.cpp:124] Setting up pool0
I0428 19:34:47.743795 23389 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:34:47.743800 23389 net.cpp:139] Memory required for data: 14714800
I0428 19:34:47.743805 23389 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:47.743816 23389 net.cpp:86] Creating Layer ip1
I0428 19:34:47.743821 23389 net.cpp:408] ip1 <- pool0
I0428 19:34:47.743844 23389 net.cpp:382] ip1 -> ip1
I0428 19:34:47.744405 23389 net.cpp:124] Setting up ip1
I0428 19:34:47.744415 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.744418 23389 net.cpp:139] Memory required for data: 14718800
I0428 19:34:47.744429 23389 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:47.744438 23389 net.cpp:86] Creating Layer relu1
I0428 19:34:47.744443 23389 net.cpp:408] relu1 <- ip1
I0428 19:34:47.744451 23389 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:47.744619 23389 net.cpp:124] Setting up relu1
I0428 19:34:47.744629 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.744634 23389 net.cpp:139] Memory required for data: 14722800
I0428 19:34:47.744640 23389 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:47.744649 23389 net.cpp:86] Creating Layer ip2
I0428 19:34:47.744654 23389 net.cpp:408] ip2 <- ip1
I0428 19:34:47.744678 23389 net.cpp:382] ip2 -> ip2
I0428 19:34:47.744803 23389 net.cpp:124] Setting up ip2
I0428 19:34:47.744834 23389 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:34:47.744840 23389 net.cpp:139] Memory required for data: 14732800
I0428 19:34:47.744853 23389 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:47.744861 23389 net.cpp:86] Creating Layer relu2
I0428 19:34:47.744866 23389 net.cpp:408] relu2 <- ip2
I0428 19:34:47.744874 23389 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:47.745730 23389 net.cpp:124] Setting up relu2
I0428 19:34:47.745743 23389 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:34:47.745748 23389 net.cpp:139] Memory required for data: 14742800
I0428 19:34:47.745754 23389 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:47.745765 23389 net.cpp:86] Creating Layer ip3
I0428 19:34:47.745770 23389 net.cpp:408] ip3 <- ip2
I0428 19:34:47.745779 23389 net.cpp:382] ip3 -> ip3
I0428 19:34:47.745934 23389 net.cpp:124] Setting up ip3
I0428 19:34:47.745944 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.745971 23389 net.cpp:139] Memory required for data: 14746800
I0428 19:34:47.745980 23389 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:47.745987 23389 net.cpp:86] Creating Layer relu3
I0428 19:34:47.745993 23389 net.cpp:408] relu3 <- ip3
I0428 19:34:47.746001 23389 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:47.746194 23389 net.cpp:124] Setting up relu3
I0428 19:34:47.746206 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.746212 23389 net.cpp:139] Memory required for data: 14750800
I0428 19:34:47.746225 23389 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:34:47.746248 23389 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:34:47.746254 23389 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:34:47.746263 23389 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:34:47.746273 23389 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:34:47.746316 23389 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:34:47.746325 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.746345 23389 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:47.746351 23389 net.cpp:139] Memory required for data: 14758800
I0428 19:34:47.746356 23389 layer_factory.hpp:77] Creating layer accuracy
I0428 19:34:47.746364 23389 net.cpp:86] Creating Layer accuracy
I0428 19:34:47.746371 23389 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:34:47.746378 23389 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:34:47.746387 23389 net.cpp:382] accuracy -> accuracy
I0428 19:34:47.746398 23389 net.cpp:124] Setting up accuracy
I0428 19:34:47.746421 23389 net.cpp:131] Top shape: (1)
I0428 19:34:47.746428 23389 net.cpp:139] Memory required for data: 14758804
I0428 19:34:47.746433 23389 layer_factory.hpp:77] Creating layer loss
I0428 19:34:47.746440 23389 net.cpp:86] Creating Layer loss
I0428 19:34:47.746445 23389 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:34:47.746453 23389 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:34:47.746470 23389 net.cpp:382] loss -> loss
I0428 19:34:47.746480 23389 layer_factory.hpp:77] Creating layer loss
I0428 19:34:47.746714 23389 net.cpp:124] Setting up loss
I0428 19:34:47.746724 23389 net.cpp:131] Top shape: (1)
I0428 19:34:47.746731 23389 net.cpp:134]     with loss weight 1
I0428 19:34:47.746739 23389 net.cpp:139] Memory required for data: 14758808
I0428 19:34:47.746745 23389 net.cpp:200] loss needs backward computation.
I0428 19:34:47.746752 23389 net.cpp:202] accuracy does not need backward computation.
I0428 19:34:47.746757 23389 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:34:47.746762 23389 net.cpp:200] relu3 needs backward computation.
I0428 19:34:47.746767 23389 net.cpp:200] ip3 needs backward computation.
I0428 19:34:47.746772 23389 net.cpp:200] relu2 needs backward computation.
I0428 19:34:47.746776 23389 net.cpp:200] ip2 needs backward computation.
I0428 19:34:47.746780 23389 net.cpp:200] relu1 needs backward computation.
I0428 19:34:47.746785 23389 net.cpp:200] ip1 needs backward computation.
I0428 19:34:47.746790 23389 net.cpp:200] pool0 needs backward computation.
I0428 19:34:47.746795 23389 net.cpp:200] conv0 needs backward computation.
I0428 19:34:47.746801 23389 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:34:47.746819 23389 net.cpp:202] mnist does not need backward computation.
I0428 19:34:47.746824 23389 net.cpp:244] This network produces output accuracy
I0428 19:34:47.746829 23389 net.cpp:244] This network produces output loss
I0428 19:34:47.746845 23389 net.cpp:257] Network initialization done.
I0428 19:34:47.746904 23389 solver.cpp:56] Solver scaffolding done.
I0428 19:34:47.747191 23389 caffe.cpp:248] Starting Optimization
I0428 19:34:47.747198 23389 solver.cpp:273] Solving LeNet
I0428 19:34:47.747218 23389 solver.cpp:274] Learning Rate Policy: inv
I0428 19:34:47.748087 23389 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:34:47.846899 23396 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:47.849427 23389 solver.cpp:398]     Test net output #0: accuracy = 0.0892
I0428 19:34:47.849450 23389 solver.cpp:398]     Test net output #1: loss = 2.31263 (* 1 = 2.31263 loss)
I0428 19:34:47.853744 23389 solver.cpp:219] Iteration 0 (-5.77498e-31 iter/s, 0.106497s/100 iters), loss = 2.31813
I0428 19:34:47.853771 23389 solver.cpp:238]     Train net output #0: loss = 2.31813 (* 1 = 2.31813 loss)
I0428 19:34:47.853803 23389 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:34:47.992899 23389 solver.cpp:219] Iteration 100 (718.816 iter/s, 0.139118s/100 iters), loss = 0.974671
I0428 19:34:47.992928 23389 solver.cpp:238]     Train net output #0: loss = 0.974671 (* 1 = 0.974671 loss)
I0428 19:34:47.992954 23389 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:34:48.130358 23389 solver.cpp:219] Iteration 200 (727.692 iter/s, 0.137421s/100 iters), loss = 0.716104
I0428 19:34:48.130386 23389 solver.cpp:238]     Train net output #0: loss = 0.716104 (* 1 = 0.716104 loss)
I0428 19:34:48.130411 23389 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:34:48.273090 23389 solver.cpp:219] Iteration 300 (700.808 iter/s, 0.142692s/100 iters), loss = 0.452062
I0428 19:34:48.273154 23389 solver.cpp:238]     Train net output #0: loss = 0.452062 (* 1 = 0.452062 loss)
I0428 19:34:48.273164 23389 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:34:48.418524 23389 solver.cpp:219] Iteration 400 (687.875 iter/s, 0.145375s/100 iters), loss = 0.563157
I0428 19:34:48.418551 23389 solver.cpp:238]     Train net output #0: loss = 0.563157 (* 1 = 0.563157 loss)
I0428 19:34:48.418577 23389 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:34:48.556399 23389 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:34:48.650934 23396 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:48.653489 23389 solver.cpp:398]     Test net output #0: accuracy = 0.8966
I0428 19:34:48.653527 23389 solver.cpp:398]     Test net output #1: loss = 0.444891 (* 1 = 0.444891 loss)
I0428 19:34:48.654896 23389 solver.cpp:219] Iteration 500 (423.135 iter/s, 0.236331s/100 iters), loss = 0.509059
I0428 19:34:48.654924 23389 solver.cpp:238]     Train net output #0: loss = 0.509059 (* 1 = 0.509059 loss)
I0428 19:34:48.654966 23389 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:34:48.797947 23389 solver.cpp:219] Iteration 600 (699.238 iter/s, 0.143013s/100 iters), loss = 0.332762
I0428 19:34:48.797979 23389 solver.cpp:238]     Train net output #0: loss = 0.332762 (* 1 = 0.332762 loss)
I0428 19:34:48.797991 23389 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:34:48.938576 23389 solver.cpp:219] Iteration 700 (711.299 iter/s, 0.140588s/100 iters), loss = 0.580506
I0428 19:34:48.938606 23389 solver.cpp:238]     Train net output #0: loss = 0.580506 (* 1 = 0.580506 loss)
I0428 19:34:48.938632 23389 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:34:49.083451 23389 solver.cpp:219] Iteration 800 (690.438 iter/s, 0.144836s/100 iters), loss = 0.502426
I0428 19:34:49.083482 23389 solver.cpp:238]     Train net output #0: loss = 0.502426 (* 1 = 0.502426 loss)
I0428 19:34:49.083492 23389 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:34:49.227685 23389 solver.cpp:219] Iteration 900 (693.507 iter/s, 0.144195s/100 iters), loss = 0.390542
I0428 19:34:49.227715 23389 solver.cpp:238]     Train net output #0: loss = 0.390542 (* 1 = 0.390542 loss)
I0428 19:34:49.227741 23389 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:34:49.275378 23395 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:49.368194 23389 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:34:49.369854 23389 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:34:49.371424 23389 solver.cpp:311] Iteration 1000, loss = 0.458002
I0428 19:34:49.371454 23389 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:34:49.467034 23396 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:49.469655 23389 solver.cpp:398]     Test net output #0: accuracy = 0.9362
I0428 19:34:49.469677 23389 solver.cpp:398]     Test net output #1: loss = 0.377554 (* 1 = 0.377554 loss)
I0428 19:34:49.469703 23389 solver.cpp:316] Optimization Done.
I0428 19:34:49.469708 23389 caffe.cpp:259] Optimization Done.
