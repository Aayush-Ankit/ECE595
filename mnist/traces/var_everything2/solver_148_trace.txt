I0428 19:32:16.735383 22800 caffe.cpp:218] Using GPUs 0
I0428 19:32:16.765867 22800 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:17.215895 22800 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test148.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:17.216049 22800 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test148.prototxt
I0428 19:32:17.216361 22800 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:17.216378 22800 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:17.216457 22800 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:17.216542 22800 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:17.216650 22800 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:17.216678 22800 net.cpp:86] Creating Layer mnist
I0428 19:32:17.216687 22800 net.cpp:382] mnist -> data
I0428 19:32:17.216712 22800 net.cpp:382] mnist -> label
I0428 19:32:17.217829 22800 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:17.220134 22800 net.cpp:124] Setting up mnist
I0428 19:32:17.220180 22800 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:17.220190 22800 net.cpp:131] Top shape: 64 (64)
I0428 19:32:17.220196 22800 net.cpp:139] Memory required for data: 200960
I0428 19:32:17.220204 22800 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:17.220227 22800 net.cpp:86] Creating Layer conv0
I0428 19:32:17.220237 22800 net.cpp:408] conv0 <- data
I0428 19:32:17.220252 22800 net.cpp:382] conv0 -> conv0
I0428 19:32:17.456718 22800 net.cpp:124] Setting up conv0
I0428 19:32:17.456763 22800 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:17.456768 22800 net.cpp:139] Memory required for data: 1675520
I0428 19:32:17.456802 22800 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:17.456856 22800 net.cpp:86] Creating Layer pool0
I0428 19:32:17.456882 22800 net.cpp:408] pool0 <- conv0
I0428 19:32:17.456893 22800 net.cpp:382] pool0 -> pool0
I0428 19:32:17.456949 22800 net.cpp:124] Setting up pool0
I0428 19:32:17.456959 22800 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:17.456965 22800 net.cpp:139] Memory required for data: 2044160
I0428 19:32:17.456971 22800 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:17.456982 22800 net.cpp:86] Creating Layer ip1
I0428 19:32:17.456995 22800 net.cpp:408] ip1 <- pool0
I0428 19:32:17.457003 22800 net.cpp:382] ip1 -> ip1
I0428 19:32:17.458484 22800 net.cpp:124] Setting up ip1
I0428 19:32:17.458499 22800 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:17.458504 22800 net.cpp:139] Memory required for data: 2056960
I0428 19:32:17.458518 22800 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:17.458528 22800 net.cpp:86] Creating Layer relu1
I0428 19:32:17.458539 22800 net.cpp:408] relu1 <- ip1
I0428 19:32:17.458546 22800 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:17.458750 22800 net.cpp:124] Setting up relu1
I0428 19:32:17.458760 22800 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:17.458765 22800 net.cpp:139] Memory required for data: 2069760
I0428 19:32:17.458770 22800 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:17.458781 22800 net.cpp:86] Creating Layer ip2
I0428 19:32:17.458786 22800 net.cpp:408] ip2 <- ip1
I0428 19:32:17.458796 22800 net.cpp:382] ip2 -> ip2
I0428 19:32:17.458917 22800 net.cpp:124] Setting up ip2
I0428 19:32:17.458926 22800 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:17.458947 22800 net.cpp:139] Memory required for data: 2072320
I0428 19:32:17.458959 22800 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:17.458969 22800 net.cpp:86] Creating Layer relu2
I0428 19:32:17.458976 22800 net.cpp:408] relu2 <- ip2
I0428 19:32:17.458983 22800 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:17.459781 22800 net.cpp:124] Setting up relu2
I0428 19:32:17.459794 22800 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:17.459800 22800 net.cpp:139] Memory required for data: 2074880
I0428 19:32:17.459805 22800 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:17.459816 22800 net.cpp:86] Creating Layer ip3
I0428 19:32:17.459822 22800 net.cpp:408] ip3 <- ip2
I0428 19:32:17.459831 22800 net.cpp:382] ip3 -> ip3
I0428 19:32:17.459934 22800 net.cpp:124] Setting up ip3
I0428 19:32:17.459944 22800 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:17.459949 22800 net.cpp:139] Memory required for data: 2077440
I0428 19:32:17.459959 22800 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:17.459967 22800 net.cpp:86] Creating Layer relu3
I0428 19:32:17.459975 22800 net.cpp:408] relu3 <- ip3
I0428 19:32:17.459981 22800 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:17.460156 22800 net.cpp:124] Setting up relu3
I0428 19:32:17.460166 22800 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:17.460171 22800 net.cpp:139] Memory required for data: 2080000
I0428 19:32:17.460177 22800 layer_factory.hpp:77] Creating layer loss
I0428 19:32:17.460186 22800 net.cpp:86] Creating Layer loss
I0428 19:32:17.460191 22800 net.cpp:408] loss <- ip3
I0428 19:32:17.460198 22800 net.cpp:408] loss <- label
I0428 19:32:17.460207 22800 net.cpp:382] loss -> loss
I0428 19:32:17.460232 22800 layer_factory.hpp:77] Creating layer loss
I0428 19:32:17.460515 22800 net.cpp:124] Setting up loss
I0428 19:32:17.460525 22800 net.cpp:131] Top shape: (1)
I0428 19:32:17.460530 22800 net.cpp:134]     with loss weight 1
I0428 19:32:17.460549 22800 net.cpp:139] Memory required for data: 2080004
I0428 19:32:17.460556 22800 net.cpp:200] loss needs backward computation.
I0428 19:32:17.460561 22800 net.cpp:200] relu3 needs backward computation.
I0428 19:32:17.460566 22800 net.cpp:200] ip3 needs backward computation.
I0428 19:32:17.460572 22800 net.cpp:200] relu2 needs backward computation.
I0428 19:32:17.460577 22800 net.cpp:200] ip2 needs backward computation.
I0428 19:32:17.460582 22800 net.cpp:200] relu1 needs backward computation.
I0428 19:32:17.460587 22800 net.cpp:200] ip1 needs backward computation.
I0428 19:32:17.460602 22800 net.cpp:200] pool0 needs backward computation.
I0428 19:32:17.460608 22800 net.cpp:200] conv0 needs backward computation.
I0428 19:32:17.460613 22800 net.cpp:202] mnist does not need backward computation.
I0428 19:32:17.460618 22800 net.cpp:244] This network produces output loss
I0428 19:32:17.460630 22800 net.cpp:257] Network initialization done.
I0428 19:32:17.460989 22800 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test148.prototxt
I0428 19:32:17.461025 22800 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:17.461117 22800 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:17.461273 22800 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:17.461331 22800 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:17.461355 22800 net.cpp:86] Creating Layer mnist
I0428 19:32:17.461364 22800 net.cpp:382] mnist -> data
I0428 19:32:17.461375 22800 net.cpp:382] mnist -> label
I0428 19:32:17.461522 22800 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:17.462743 22800 net.cpp:124] Setting up mnist
I0428 19:32:17.462774 22800 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:17.462781 22800 net.cpp:131] Top shape: 100 (100)
I0428 19:32:17.462786 22800 net.cpp:139] Memory required for data: 314000
I0428 19:32:17.462792 22800 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:17.462806 22800 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:17.462813 22800 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:17.462821 22800 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:17.462832 22800 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:17.462908 22800 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:17.462916 22800 net.cpp:131] Top shape: 100 (100)
I0428 19:32:17.462923 22800 net.cpp:131] Top shape: 100 (100)
I0428 19:32:17.462927 22800 net.cpp:139] Memory required for data: 314800
I0428 19:32:17.462945 22800 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:17.462960 22800 net.cpp:86] Creating Layer conv0
I0428 19:32:17.462966 22800 net.cpp:408] conv0 <- data
I0428 19:32:17.462975 22800 net.cpp:382] conv0 -> conv0
I0428 19:32:17.464645 22800 net.cpp:124] Setting up conv0
I0428 19:32:17.464663 22800 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:17.464668 22800 net.cpp:139] Memory required for data: 2618800
I0428 19:32:17.464712 22800 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:17.464723 22800 net.cpp:86] Creating Layer pool0
I0428 19:32:17.464730 22800 net.cpp:408] pool0 <- conv0
I0428 19:32:17.464737 22800 net.cpp:382] pool0 -> pool0
I0428 19:32:17.464794 22800 net.cpp:124] Setting up pool0
I0428 19:32:17.464803 22800 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:17.464814 22800 net.cpp:139] Memory required for data: 3194800
I0428 19:32:17.464835 22800 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:17.464848 22800 net.cpp:86] Creating Layer ip1
I0428 19:32:17.464854 22800 net.cpp:408] ip1 <- pool0
I0428 19:32:17.464861 22800 net.cpp:382] ip1 -> ip1
I0428 19:32:17.465384 22800 net.cpp:124] Setting up ip1
I0428 19:32:17.465394 22800 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:17.465399 22800 net.cpp:139] Memory required for data: 3214800
I0428 19:32:17.465425 22800 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:17.465433 22800 net.cpp:86] Creating Layer relu1
I0428 19:32:17.465441 22800 net.cpp:408] relu1 <- ip1
I0428 19:32:17.465448 22800 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:17.465649 22800 net.cpp:124] Setting up relu1
I0428 19:32:17.465662 22800 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:17.465667 22800 net.cpp:139] Memory required for data: 3234800
I0428 19:32:17.465673 22800 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:17.465683 22800 net.cpp:86] Creating Layer ip2
I0428 19:32:17.465689 22800 net.cpp:408] ip2 <- ip1
I0428 19:32:17.465698 22800 net.cpp:382] ip2 -> ip2
I0428 19:32:17.465827 22800 net.cpp:124] Setting up ip2
I0428 19:32:17.465837 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.465842 22800 net.cpp:139] Memory required for data: 3238800
I0428 19:32:17.465868 22800 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:17.465876 22800 net.cpp:86] Creating Layer relu2
I0428 19:32:17.465884 22800 net.cpp:408] relu2 <- ip2
I0428 19:32:17.465893 22800 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:17.466756 22800 net.cpp:124] Setting up relu2
I0428 19:32:17.466770 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.466776 22800 net.cpp:139] Memory required for data: 3242800
I0428 19:32:17.466783 22800 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:17.466794 22800 net.cpp:86] Creating Layer ip3
I0428 19:32:17.466799 22800 net.cpp:408] ip3 <- ip2
I0428 19:32:17.466826 22800 net.cpp:382] ip3 -> ip3
I0428 19:32:17.466964 22800 net.cpp:124] Setting up ip3
I0428 19:32:17.466974 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.466980 22800 net.cpp:139] Memory required for data: 3246800
I0428 19:32:17.466989 22800 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:17.466998 22800 net.cpp:86] Creating Layer relu3
I0428 19:32:17.467003 22800 net.cpp:408] relu3 <- ip3
I0428 19:32:17.467010 22800 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:17.467195 22800 net.cpp:124] Setting up relu3
I0428 19:32:17.467206 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.467211 22800 net.cpp:139] Memory required for data: 3250800
I0428 19:32:17.467216 22800 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:17.467222 22800 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:17.467229 22800 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:17.467238 22800 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:17.467263 22800 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:17.467324 22800 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:17.467332 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.467339 22800 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:17.467357 22800 net.cpp:139] Memory required for data: 3258800
I0428 19:32:17.467363 22800 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:17.467375 22800 net.cpp:86] Creating Layer accuracy
I0428 19:32:17.467381 22800 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:17.467387 22800 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:17.467396 22800 net.cpp:382] accuracy -> accuracy
I0428 19:32:17.467407 22800 net.cpp:124] Setting up accuracy
I0428 19:32:17.467417 22800 net.cpp:131] Top shape: (1)
I0428 19:32:17.467422 22800 net.cpp:139] Memory required for data: 3258804
I0428 19:32:17.467428 22800 layer_factory.hpp:77] Creating layer loss
I0428 19:32:17.467438 22800 net.cpp:86] Creating Layer loss
I0428 19:32:17.467445 22800 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:17.467453 22800 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:17.467460 22800 net.cpp:382] loss -> loss
I0428 19:32:17.467471 22800 layer_factory.hpp:77] Creating layer loss
I0428 19:32:17.467777 22800 net.cpp:124] Setting up loss
I0428 19:32:17.467788 22800 net.cpp:131] Top shape: (1)
I0428 19:32:17.467794 22800 net.cpp:134]     with loss weight 1
I0428 19:32:17.467818 22800 net.cpp:139] Memory required for data: 3258808
I0428 19:32:17.467823 22800 net.cpp:200] loss needs backward computation.
I0428 19:32:17.467829 22800 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:17.467836 22800 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:17.467841 22800 net.cpp:200] relu3 needs backward computation.
I0428 19:32:17.467846 22800 net.cpp:200] ip3 needs backward computation.
I0428 19:32:17.467851 22800 net.cpp:200] relu2 needs backward computation.
I0428 19:32:17.467856 22800 net.cpp:200] ip2 needs backward computation.
I0428 19:32:17.467861 22800 net.cpp:200] relu1 needs backward computation.
I0428 19:32:17.467865 22800 net.cpp:200] ip1 needs backward computation.
I0428 19:32:17.467870 22800 net.cpp:200] pool0 needs backward computation.
I0428 19:32:17.467876 22800 net.cpp:200] conv0 needs backward computation.
I0428 19:32:17.467882 22800 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:17.467890 22800 net.cpp:202] mnist does not need backward computation.
I0428 19:32:17.467893 22800 net.cpp:244] This network produces output accuracy
I0428 19:32:17.467900 22800 net.cpp:244] This network produces output loss
I0428 19:32:17.467918 22800 net.cpp:257] Network initialization done.
I0428 19:32:17.467962 22800 solver.cpp:56] Solver scaffolding done.
I0428 19:32:17.468284 22800 caffe.cpp:248] Starting Optimization
I0428 19:32:17.468291 22800 solver.cpp:273] Solving LeNet
I0428 19:32:17.468296 22800 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:17.469193 22800 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:17.472870 22800 blocking_queue.cpp:49] Waiting for data
I0428 19:32:17.543779 22807 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:17.544323 22800 solver.cpp:398]     Test net output #0: accuracy = 0.0945
I0428 19:32:17.544345 22800 solver.cpp:398]     Test net output #1: loss = 2.31245 (* 1 = 2.31245 loss)
I0428 19:32:17.547374 22800 solver.cpp:219] Iteration 0 (-1.02855e-42 iter/s, 0.0790456s/100 iters), loss = 2.30399
I0428 19:32:17.547400 22800 solver.cpp:238]     Train net output #0: loss = 2.30399 (* 1 = 2.30399 loss)
I0428 19:32:17.547447 22800 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:17.620028 22800 solver.cpp:219] Iteration 100 (1377.07 iter/s, 0.072618s/100 iters), loss = 0.977906
I0428 19:32:17.620055 22800 solver.cpp:238]     Train net output #0: loss = 0.977906 (* 1 = 0.977906 loss)
I0428 19:32:17.620080 22800 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:17.695124 22800 solver.cpp:219] Iteration 200 (1332.25 iter/s, 0.0750611s/100 iters), loss = 0.473455
I0428 19:32:17.695154 22800 solver.cpp:238]     Train net output #0: loss = 0.473455 (* 1 = 0.473455 loss)
I0428 19:32:17.695174 22800 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:17.769966 22800 solver.cpp:219] Iteration 300 (1336.86 iter/s, 0.0748022s/100 iters), loss = 0.580961
I0428 19:32:17.769994 22800 solver.cpp:238]     Train net output #0: loss = 0.580961 (* 1 = 0.580961 loss)
I0428 19:32:17.770001 22800 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:17.858393 22800 solver.cpp:219] Iteration 400 (1131.39 iter/s, 0.0883867s/100 iters), loss = 0.182474
I0428 19:32:17.858433 22800 solver.cpp:238]     Train net output #0: loss = 0.182474 (* 1 = 0.182474 loss)
I0428 19:32:17.858443 22800 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:17.936756 22800 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:17.989706 22807 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:17.990238 22800 solver.cpp:398]     Test net output #0: accuracy = 0.9333
I0428 19:32:17.990262 22800 solver.cpp:398]     Test net output #1: loss = 0.232362 (* 1 = 0.232362 loss)
I0428 19:32:17.991057 22800 solver.cpp:219] Iteration 500 (754.085 iter/s, 0.132611s/100 iters), loss = 0.286742
I0428 19:32:17.991111 22800 solver.cpp:238]     Train net output #0: loss = 0.286742 (* 1 = 0.286742 loss)
I0428 19:32:17.991119 22800 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:18.069350 22800 solver.cpp:219] Iteration 600 (1278.25 iter/s, 0.078232s/100 iters), loss = 0.181665
I0428 19:32:18.069380 22800 solver.cpp:238]     Train net output #0: loss = 0.181665 (* 1 = 0.181665 loss)
I0428 19:32:18.069388 22800 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:18.145493 22800 solver.cpp:219] Iteration 700 (1314 iter/s, 0.0761035s/100 iters), loss = 0.313745
I0428 19:32:18.145522 22800 solver.cpp:238]     Train net output #0: loss = 0.313745 (* 1 = 0.313745 loss)
I0428 19:32:18.145529 22800 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:18.221361 22800 solver.cpp:219] Iteration 800 (1318.73 iter/s, 0.0758303s/100 iters), loss = 0.174783
I0428 19:32:18.221391 22800 solver.cpp:238]     Train net output #0: loss = 0.174783 (* 1 = 0.174783 loss)
I0428 19:32:18.221398 22800 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:18.297492 22800 solver.cpp:219] Iteration 900 (1314.24 iter/s, 0.0760893s/100 iters), loss = 0.267236
I0428 19:32:18.297525 22800 solver.cpp:238]     Train net output #0: loss = 0.267236 (* 1 = 0.267236 loss)
I0428 19:32:18.297533 22800 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:18.324074 22806 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:18.375000 22800 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:18.376838 22800 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:18.377917 22800 solver.cpp:311] Iteration 1000, loss = 0.166708
I0428 19:32:18.377938 22800 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:18.454063 22807 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:18.454741 22800 solver.cpp:398]     Test net output #0: accuracy = 0.9547
I0428 19:32:18.454773 22800 solver.cpp:398]     Test net output #1: loss = 0.148412 (* 1 = 0.148412 loss)
I0428 19:32:18.454782 22800 solver.cpp:316] Optimization Done.
I0428 19:32:18.454787 22800 caffe.cpp:259] Optimization Done.
