I0428 19:56:11.966848 28376 caffe.cpp:218] Using GPUs 0
I0428 19:56:12.000288 28376 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:12.510524 28376 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test752.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:12.510689 28376 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test752.prototxt
I0428 19:56:12.511276 28376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:12.511301 28376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:12.511440 28376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:12.511538 28376 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:12.511668 28376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:12.511700 28376 net.cpp:86] Creating Layer mnist
I0428 19:56:12.511711 28376 net.cpp:382] mnist -> data
I0428 19:56:12.511741 28376 net.cpp:382] mnist -> label
I0428 19:56:12.513329 28376 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:12.516034 28376 net.cpp:124] Setting up mnist
I0428 19:56:12.516052 28376 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:12.516058 28376 net.cpp:131] Top shape: 64 (64)
I0428 19:56:12.516062 28376 net.cpp:139] Memory required for data: 200960
I0428 19:56:12.516069 28376 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:12.516084 28376 net.cpp:86] Creating Layer conv0
I0428 19:56:12.516093 28376 net.cpp:408] conv0 <- data
I0428 19:56:12.516109 28376 net.cpp:382] conv0 -> conv0
I0428 19:56:12.767071 28376 net.cpp:124] Setting up conv0
I0428 19:56:12.767113 28376 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:12.767132 28376 net.cpp:139] Memory required for data: 1675520
I0428 19:56:12.767168 28376 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:12.767184 28376 net.cpp:86] Creating Layer pool0
I0428 19:56:12.767189 28376 net.cpp:408] pool0 <- conv0
I0428 19:56:12.767197 28376 net.cpp:382] pool0 -> pool0
I0428 19:56:12.767259 28376 net.cpp:124] Setting up pool0
I0428 19:56:12.767271 28376 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:12.767277 28376 net.cpp:139] Memory required for data: 2044160
I0428 19:56:12.767282 28376 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:12.767295 28376 net.cpp:86] Creating Layer conv1
I0428 19:56:12.767302 28376 net.cpp:408] conv1 <- pool0
I0428 19:56:12.767312 28376 net.cpp:382] conv1 -> conv1
I0428 19:56:12.769826 28376 net.cpp:124] Setting up conv1
I0428 19:56:12.769857 28376 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:12.769861 28376 net.cpp:139] Memory required for data: 2076928
I0428 19:56:12.769870 28376 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:12.769877 28376 net.cpp:86] Creating Layer pool1
I0428 19:56:12.769881 28376 net.cpp:408] pool1 <- conv1
I0428 19:56:12.769888 28376 net.cpp:382] pool1 -> pool1
I0428 19:56:12.769927 28376 net.cpp:124] Setting up pool1
I0428 19:56:12.769933 28376 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:12.769937 28376 net.cpp:139] Memory required for data: 2085120
I0428 19:56:12.769939 28376 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:12.769946 28376 net.cpp:86] Creating Layer ip1
I0428 19:56:12.769949 28376 net.cpp:408] ip1 <- pool1
I0428 19:56:12.769954 28376 net.cpp:382] ip1 -> ip1
I0428 19:56:12.770941 28376 net.cpp:124] Setting up ip1
I0428 19:56:12.770952 28376 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:12.770972 28376 net.cpp:139] Memory required for data: 2097920
I0428 19:56:12.770978 28376 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:12.770985 28376 net.cpp:86] Creating Layer relu1
I0428 19:56:12.770988 28376 net.cpp:408] relu1 <- ip1
I0428 19:56:12.770992 28376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:12.771159 28376 net.cpp:124] Setting up relu1
I0428 19:56:12.771167 28376 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:12.771170 28376 net.cpp:139] Memory required for data: 2110720
I0428 19:56:12.771173 28376 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:12.771180 28376 net.cpp:86] Creating Layer ip2
I0428 19:56:12.771183 28376 net.cpp:408] ip2 <- ip1
I0428 19:56:12.771188 28376 net.cpp:382] ip2 -> ip2
I0428 19:56:12.771286 28376 net.cpp:124] Setting up ip2
I0428 19:56:12.771292 28376 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:12.771296 28376 net.cpp:139] Memory required for data: 2113280
I0428 19:56:12.771301 28376 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:12.771306 28376 net.cpp:86] Creating Layer relu2
I0428 19:56:12.771308 28376 net.cpp:408] relu2 <- ip2
I0428 19:56:12.771312 28376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:12.772033 28376 net.cpp:124] Setting up relu2
I0428 19:56:12.772045 28376 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:12.772064 28376 net.cpp:139] Memory required for data: 2115840
I0428 19:56:12.772068 28376 layer_factory.hpp:77] Creating layer loss
I0428 19:56:12.772073 28376 net.cpp:86] Creating Layer loss
I0428 19:56:12.772076 28376 net.cpp:408] loss <- ip2
I0428 19:56:12.772080 28376 net.cpp:408] loss <- label
I0428 19:56:12.772086 28376 net.cpp:382] loss -> loss
I0428 19:56:12.772101 28376 layer_factory.hpp:77] Creating layer loss
I0428 19:56:12.772328 28376 net.cpp:124] Setting up loss
I0428 19:56:12.772336 28376 net.cpp:131] Top shape: (1)
I0428 19:56:12.772339 28376 net.cpp:134]     with loss weight 1
I0428 19:56:12.772353 28376 net.cpp:139] Memory required for data: 2115844
I0428 19:56:12.772356 28376 net.cpp:200] loss needs backward computation.
I0428 19:56:12.772361 28376 net.cpp:200] relu2 needs backward computation.
I0428 19:56:12.772362 28376 net.cpp:200] ip2 needs backward computation.
I0428 19:56:12.772366 28376 net.cpp:200] relu1 needs backward computation.
I0428 19:56:12.772367 28376 net.cpp:200] ip1 needs backward computation.
I0428 19:56:12.772382 28376 net.cpp:200] pool1 needs backward computation.
I0428 19:56:12.772384 28376 net.cpp:200] conv1 needs backward computation.
I0428 19:56:12.772387 28376 net.cpp:200] pool0 needs backward computation.
I0428 19:56:12.772390 28376 net.cpp:200] conv0 needs backward computation.
I0428 19:56:12.772393 28376 net.cpp:202] mnist does not need backward computation.
I0428 19:56:12.772397 28376 net.cpp:244] This network produces output loss
I0428 19:56:12.772404 28376 net.cpp:257] Network initialization done.
I0428 19:56:12.772706 28376 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test752.prototxt
I0428 19:56:12.772745 28376 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:12.772862 28376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:12.772945 28376 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:12.772991 28376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:12.773003 28376 net.cpp:86] Creating Layer mnist
I0428 19:56:12.773007 28376 net.cpp:382] mnist -> data
I0428 19:56:12.773015 28376 net.cpp:382] mnist -> label
I0428 19:56:12.773102 28376 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:12.775048 28376 net.cpp:124] Setting up mnist
I0428 19:56:12.775077 28376 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:12.775082 28376 net.cpp:131] Top shape: 100 (100)
I0428 19:56:12.775085 28376 net.cpp:139] Memory required for data: 314000
I0428 19:56:12.775089 28376 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:12.775096 28376 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:12.775099 28376 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:12.775104 28376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:12.775122 28376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:12.775219 28376 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:12.775254 28376 net.cpp:131] Top shape: 100 (100)
I0428 19:56:12.775259 28376 net.cpp:131] Top shape: 100 (100)
I0428 19:56:12.775261 28376 net.cpp:139] Memory required for data: 314800
I0428 19:56:12.775264 28376 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:12.775275 28376 net.cpp:86] Creating Layer conv0
I0428 19:56:12.775283 28376 net.cpp:408] conv0 <- data
I0428 19:56:12.775290 28376 net.cpp:382] conv0 -> conv0
I0428 19:56:12.776994 28376 net.cpp:124] Setting up conv0
I0428 19:56:12.777025 28376 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:12.777029 28376 net.cpp:139] Memory required for data: 2618800
I0428 19:56:12.777040 28376 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:12.777048 28376 net.cpp:86] Creating Layer pool0
I0428 19:56:12.777051 28376 net.cpp:408] pool0 <- conv0
I0428 19:56:12.777057 28376 net.cpp:382] pool0 -> pool0
I0428 19:56:12.777096 28376 net.cpp:124] Setting up pool0
I0428 19:56:12.777103 28376 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:12.777107 28376 net.cpp:139] Memory required for data: 3194800
I0428 19:56:12.777109 28376 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:12.777119 28376 net.cpp:86] Creating Layer conv1
I0428 19:56:12.777123 28376 net.cpp:408] conv1 <- pool0
I0428 19:56:12.777129 28376 net.cpp:382] conv1 -> conv1
I0428 19:56:12.779206 28376 net.cpp:124] Setting up conv1
I0428 19:56:12.779237 28376 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:12.779242 28376 net.cpp:139] Memory required for data: 3246000
I0428 19:56:12.779251 28376 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:12.779258 28376 net.cpp:86] Creating Layer pool1
I0428 19:56:12.779279 28376 net.cpp:408] pool1 <- conv1
I0428 19:56:12.779291 28376 net.cpp:382] pool1 -> pool1
I0428 19:56:12.779335 28376 net.cpp:124] Setting up pool1
I0428 19:56:12.779343 28376 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:12.779346 28376 net.cpp:139] Memory required for data: 3258800
I0428 19:56:12.779350 28376 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:12.779356 28376 net.cpp:86] Creating Layer ip1
I0428 19:56:12.779366 28376 net.cpp:408] ip1 <- pool1
I0428 19:56:12.779373 28376 net.cpp:382] ip1 -> ip1
I0428 19:56:12.779541 28376 net.cpp:124] Setting up ip1
I0428 19:56:12.779549 28376 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:12.779552 28376 net.cpp:139] Memory required for data: 3278800
I0428 19:56:12.779561 28376 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:12.779566 28376 net.cpp:86] Creating Layer relu1
I0428 19:56:12.779568 28376 net.cpp:408] relu1 <- ip1
I0428 19:56:12.779574 28376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:12.779813 28376 net.cpp:124] Setting up relu1
I0428 19:56:12.779824 28376 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:12.779827 28376 net.cpp:139] Memory required for data: 3298800
I0428 19:56:12.779831 28376 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:12.779839 28376 net.cpp:86] Creating Layer ip2
I0428 19:56:12.779842 28376 net.cpp:408] ip2 <- ip1
I0428 19:56:12.779847 28376 net.cpp:382] ip2 -> ip2
I0428 19:56:12.779953 28376 net.cpp:124] Setting up ip2
I0428 19:56:12.779959 28376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:12.779963 28376 net.cpp:139] Memory required for data: 3302800
I0428 19:56:12.779968 28376 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:12.779973 28376 net.cpp:86] Creating Layer relu2
I0428 19:56:12.779986 28376 net.cpp:408] relu2 <- ip2
I0428 19:56:12.779992 28376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:12.780155 28376 net.cpp:124] Setting up relu2
I0428 19:56:12.780164 28376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:12.780166 28376 net.cpp:139] Memory required for data: 3306800
I0428 19:56:12.780170 28376 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:56:12.780174 28376 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:56:12.780177 28376 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:56:12.780184 28376 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:56:12.780200 28376 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:56:12.780237 28376 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:56:12.780243 28376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:12.780247 28376 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:12.780251 28376 net.cpp:139] Memory required for data: 3314800
I0428 19:56:12.780259 28376 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:12.780266 28376 net.cpp:86] Creating Layer accuracy
I0428 19:56:12.780268 28376 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:56:12.780273 28376 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:12.780278 28376 net.cpp:382] accuracy -> accuracy
I0428 19:56:12.780285 28376 net.cpp:124] Setting up accuracy
I0428 19:56:12.780289 28376 net.cpp:131] Top shape: (1)
I0428 19:56:12.780292 28376 net.cpp:139] Memory required for data: 3314804
I0428 19:56:12.780294 28376 layer_factory.hpp:77] Creating layer loss
I0428 19:56:12.780320 28376 net.cpp:86] Creating Layer loss
I0428 19:56:12.780324 28376 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:56:12.780328 28376 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:12.780333 28376 net.cpp:382] loss -> loss
I0428 19:56:12.780339 28376 layer_factory.hpp:77] Creating layer loss
I0428 19:56:12.780580 28376 net.cpp:124] Setting up loss
I0428 19:56:12.780591 28376 net.cpp:131] Top shape: (1)
I0428 19:56:12.780594 28376 net.cpp:134]     with loss weight 1
I0428 19:56:12.780601 28376 net.cpp:139] Memory required for data: 3314808
I0428 19:56:12.780604 28376 net.cpp:200] loss needs backward computation.
I0428 19:56:12.780608 28376 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:12.780612 28376 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:56:12.780616 28376 net.cpp:200] relu2 needs backward computation.
I0428 19:56:12.780618 28376 net.cpp:200] ip2 needs backward computation.
I0428 19:56:12.780622 28376 net.cpp:200] relu1 needs backward computation.
I0428 19:56:12.780623 28376 net.cpp:200] ip1 needs backward computation.
I0428 19:56:12.780627 28376 net.cpp:200] pool1 needs backward computation.
I0428 19:56:12.780630 28376 net.cpp:200] conv1 needs backward computation.
I0428 19:56:12.780633 28376 net.cpp:200] pool0 needs backward computation.
I0428 19:56:12.780637 28376 net.cpp:200] conv0 needs backward computation.
I0428 19:56:12.780640 28376 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:12.780658 28376 net.cpp:202] mnist does not need backward computation.
I0428 19:56:12.780661 28376 net.cpp:244] This network produces output accuracy
I0428 19:56:12.780664 28376 net.cpp:244] This network produces output loss
I0428 19:56:12.780675 28376 net.cpp:257] Network initialization done.
I0428 19:56:12.780710 28376 solver.cpp:56] Solver scaffolding done.
I0428 19:56:12.781023 28376 caffe.cpp:248] Starting Optimization
I0428 19:56:12.781029 28376 solver.cpp:273] Solving LeNet
I0428 19:56:12.781033 28376 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:12.781816 28376 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:12.785317 28376 blocking_queue.cpp:49] Waiting for data
I0428 19:56:12.857728 28383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:12.858227 28376 solver.cpp:398]     Test net output #0: accuracy = 0.1059
I0428 19:56:12.858244 28376 solver.cpp:398]     Test net output #1: loss = 2.30644 (* 1 = 2.30644 loss)
I0428 19:56:12.860589 28376 solver.cpp:219] Iteration 0 (0 iter/s, 0.0795286s/100 iters), loss = 2.30762
I0428 19:56:12.860628 28376 solver.cpp:238]     Train net output #0: loss = 2.30762 (* 1 = 2.30762 loss)
I0428 19:56:12.860641 28376 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:12.948693 28376 solver.cpp:219] Iteration 100 (1135.6 iter/s, 0.088059s/100 iters), loss = 0.854097
I0428 19:56:12.948748 28376 solver.cpp:238]     Train net output #0: loss = 0.854097 (* 1 = 0.854097 loss)
I0428 19:56:12.948758 28376 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:13.024941 28376 solver.cpp:219] Iteration 200 (1312.57 iter/s, 0.0761866s/100 iters), loss = 0.288483
I0428 19:56:13.024991 28376 solver.cpp:238]     Train net output #0: loss = 0.288483 (* 1 = 0.288483 loss)
I0428 19:56:13.024999 28376 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:13.094005 28376 solver.cpp:219] Iteration 300 (1449.12 iter/s, 0.0690073s/100 iters), loss = 0.307989
I0428 19:56:13.094035 28376 solver.cpp:238]     Train net output #0: loss = 0.307989 (* 1 = 0.307989 loss)
I0428 19:56:13.094043 28376 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:13.163048 28376 solver.cpp:219] Iteration 400 (1449.2 iter/s, 0.0690035s/100 iters), loss = 0.287566
I0428 19:56:13.163077 28376 solver.cpp:238]     Train net output #0: loss = 0.287566 (* 1 = 0.287566 loss)
I0428 19:56:13.163084 28376 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:13.231767 28376 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:13.307711 28383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:13.308343 28376 solver.cpp:398]     Test net output #0: accuracy = 0.9268
I0428 19:56:13.308370 28376 solver.cpp:398]     Test net output #1: loss = 0.236291 (* 1 = 0.236291 loss)
I0428 19:56:13.309314 28376 solver.cpp:219] Iteration 500 (683.892 iter/s, 0.146222s/100 iters), loss = 0.308146
I0428 19:56:13.309348 28376 solver.cpp:238]     Train net output #0: loss = 0.308146 (* 1 = 0.308146 loss)
I0428 19:56:13.309360 28376 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:13.381337 28376 solver.cpp:219] Iteration 600 (1389.21 iter/s, 0.0719831s/100 iters), loss = 0.178925
I0428 19:56:13.381364 28376 solver.cpp:238]     Train net output #0: loss = 0.178924 (* 1 = 0.178924 loss)
I0428 19:56:13.381371 28376 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:13.448294 28376 solver.cpp:219] Iteration 700 (1494.27 iter/s, 0.0669225s/100 iters), loss = 0.241887
I0428 19:56:13.448335 28376 solver.cpp:238]     Train net output #0: loss = 0.241887 (* 1 = 0.241887 loss)
I0428 19:56:13.448341 28376 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:13.514616 28376 solver.cpp:219] Iteration 800 (1508.55 iter/s, 0.0662886s/100 iters), loss = 0.221658
I0428 19:56:13.514673 28376 solver.cpp:238]     Train net output #0: loss = 0.221658 (* 1 = 0.221658 loss)
I0428 19:56:13.514696 28376 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:13.581279 28376 solver.cpp:219] Iteration 900 (1501.58 iter/s, 0.0665967s/100 iters), loss = 0.264209
I0428 19:56:13.581318 28376 solver.cpp:238]     Train net output #0: loss = 0.264209 (* 1 = 0.264209 loss)
I0428 19:56:13.581324 28376 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:13.603569 28382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:13.651001 28376 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:13.651640 28376 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:13.652211 28376 solver.cpp:311] Iteration 1000, loss = 0.235329
I0428 19:56:13.652226 28376 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:13.717299 28383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:13.717963 28376 solver.cpp:398]     Test net output #0: accuracy = 0.9489
I0428 19:56:13.718000 28376 solver.cpp:398]     Test net output #1: loss = 0.162211 (* 1 = 0.162211 loss)
I0428 19:56:13.718008 28376 solver.cpp:316] Optimization Done.
I0428 19:56:13.718019 28376 caffe.cpp:259] Optimization Done.
