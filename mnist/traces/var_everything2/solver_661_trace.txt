I0428 19:52:24.898186 27508 caffe.cpp:218] Using GPUs 0
I0428 19:52:24.927669 27508 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:25.379546 27508 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test661.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:25.379665 27508 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test661.prototxt
I0428 19:52:25.380003 27508 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:25.380035 27508 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:25.380116 27508 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:25.380178 27508 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:25.380257 27508 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:25.380276 27508 net.cpp:86] Creating Layer mnist
I0428 19:52:25.380283 27508 net.cpp:382] mnist -> data
I0428 19:52:25.380301 27508 net.cpp:382] mnist -> label
I0428 19:52:25.381258 27508 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:25.383424 27508 net.cpp:124] Setting up mnist
I0428 19:52:25.383456 27508 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:25.383461 27508 net.cpp:131] Top shape: 64 (64)
I0428 19:52:25.383464 27508 net.cpp:139] Memory required for data: 200960
I0428 19:52:25.383471 27508 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:25.383483 27508 net.cpp:86] Creating Layer conv0
I0428 19:52:25.383500 27508 net.cpp:408] conv0 <- data
I0428 19:52:25.383510 27508 net.cpp:382] conv0 -> conv0
I0428 19:52:25.621597 27508 net.cpp:124] Setting up conv0
I0428 19:52:25.621639 27508 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:25.621642 27508 net.cpp:139] Memory required for data: 938240
I0428 19:52:25.621657 27508 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:25.621670 27508 net.cpp:86] Creating Layer pool0
I0428 19:52:25.621675 27508 net.cpp:408] pool0 <- conv0
I0428 19:52:25.621680 27508 net.cpp:382] pool0 -> pool0
I0428 19:52:25.621727 27508 net.cpp:124] Setting up pool0
I0428 19:52:25.621736 27508 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:25.621738 27508 net.cpp:139] Memory required for data: 1122560
I0428 19:52:25.621742 27508 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:25.621752 27508 net.cpp:86] Creating Layer conv1
I0428 19:52:25.621755 27508 net.cpp:408] conv1 <- pool0
I0428 19:52:25.621760 27508 net.cpp:382] conv1 -> conv1
I0428 19:52:25.624501 27508 net.cpp:124] Setting up conv1
I0428 19:52:25.624516 27508 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:25.624521 27508 net.cpp:139] Memory required for data: 1532160
I0428 19:52:25.624529 27508 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:25.624536 27508 net.cpp:86] Creating Layer pool1
I0428 19:52:25.624541 27508 net.cpp:408] pool1 <- conv1
I0428 19:52:25.624544 27508 net.cpp:382] pool1 -> pool1
I0428 19:52:25.624583 27508 net.cpp:124] Setting up pool1
I0428 19:52:25.624589 27508 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:25.624593 27508 net.cpp:139] Memory required for data: 1634560
I0428 19:52:25.624595 27508 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:25.624603 27508 net.cpp:86] Creating Layer ip1
I0428 19:52:25.624605 27508 net.cpp:408] ip1 <- pool1
I0428 19:52:25.624610 27508 net.cpp:382] ip1 -> ip1
I0428 19:52:25.624837 27508 net.cpp:124] Setting up ip1
I0428 19:52:25.624845 27508 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:25.624848 27508 net.cpp:139] Memory required for data: 1647360
I0428 19:52:25.624855 27508 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:25.624861 27508 net.cpp:86] Creating Layer relu1
I0428 19:52:25.624866 27508 net.cpp:408] relu1 <- ip1
I0428 19:52:25.624869 27508 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:25.625037 27508 net.cpp:124] Setting up relu1
I0428 19:52:25.625047 27508 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:25.625051 27508 net.cpp:139] Memory required for data: 1660160
I0428 19:52:25.625053 27508 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:25.625059 27508 net.cpp:86] Creating Layer ip2
I0428 19:52:25.625063 27508 net.cpp:408] ip2 <- ip1
I0428 19:52:25.625068 27508 net.cpp:382] ip2 -> ip2
I0428 19:52:25.625190 27508 net.cpp:124] Setting up ip2
I0428 19:52:25.625196 27508 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:25.625200 27508 net.cpp:139] Memory required for data: 1672960
I0428 19:52:25.625205 27508 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:25.625211 27508 net.cpp:86] Creating Layer relu2
I0428 19:52:25.625213 27508 net.cpp:408] relu2 <- ip2
I0428 19:52:25.625217 27508 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:25.625947 27508 net.cpp:124] Setting up relu2
I0428 19:52:25.625960 27508 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:25.625980 27508 net.cpp:139] Memory required for data: 1685760
I0428 19:52:25.625983 27508 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:25.626006 27508 net.cpp:86] Creating Layer ip3
I0428 19:52:25.626009 27508 net.cpp:408] ip3 <- ip2
I0428 19:52:25.626029 27508 net.cpp:382] ip3 -> ip3
I0428 19:52:25.626137 27508 net.cpp:124] Setting up ip3
I0428 19:52:25.626144 27508 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:25.626148 27508 net.cpp:139] Memory required for data: 1688320
I0428 19:52:25.626157 27508 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:25.626161 27508 net.cpp:86] Creating Layer relu3
I0428 19:52:25.626164 27508 net.cpp:408] relu3 <- ip3
I0428 19:52:25.626168 27508 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:25.626338 27508 net.cpp:124] Setting up relu3
I0428 19:52:25.626348 27508 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:25.626351 27508 net.cpp:139] Memory required for data: 1690880
I0428 19:52:25.626354 27508 layer_factory.hpp:77] Creating layer loss
I0428 19:52:25.626360 27508 net.cpp:86] Creating Layer loss
I0428 19:52:25.626365 27508 net.cpp:408] loss <- ip3
I0428 19:52:25.626374 27508 net.cpp:408] loss <- label
I0428 19:52:25.626379 27508 net.cpp:382] loss -> loss
I0428 19:52:25.626397 27508 layer_factory.hpp:77] Creating layer loss
I0428 19:52:25.626636 27508 net.cpp:124] Setting up loss
I0428 19:52:25.626646 27508 net.cpp:131] Top shape: (1)
I0428 19:52:25.626649 27508 net.cpp:134]     with loss weight 1
I0428 19:52:25.626664 27508 net.cpp:139] Memory required for data: 1690884
I0428 19:52:25.626667 27508 net.cpp:200] loss needs backward computation.
I0428 19:52:25.626672 27508 net.cpp:200] relu3 needs backward computation.
I0428 19:52:25.626674 27508 net.cpp:200] ip3 needs backward computation.
I0428 19:52:25.626677 27508 net.cpp:200] relu2 needs backward computation.
I0428 19:52:25.626680 27508 net.cpp:200] ip2 needs backward computation.
I0428 19:52:25.626683 27508 net.cpp:200] relu1 needs backward computation.
I0428 19:52:25.626685 27508 net.cpp:200] ip1 needs backward computation.
I0428 19:52:25.626688 27508 net.cpp:200] pool1 needs backward computation.
I0428 19:52:25.626691 27508 net.cpp:200] conv1 needs backward computation.
I0428 19:52:25.626694 27508 net.cpp:200] pool0 needs backward computation.
I0428 19:52:25.626698 27508 net.cpp:200] conv0 needs backward computation.
I0428 19:52:25.626701 27508 net.cpp:202] mnist does not need backward computation.
I0428 19:52:25.626704 27508 net.cpp:244] This network produces output loss
I0428 19:52:25.626713 27508 net.cpp:257] Network initialization done.
I0428 19:52:25.627054 27508 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test661.prototxt
I0428 19:52:25.627082 27508 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:25.627192 27508 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:25.627269 27508 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:25.627312 27508 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:25.627324 27508 net.cpp:86] Creating Layer mnist
I0428 19:52:25.627329 27508 net.cpp:382] mnist -> data
I0428 19:52:25.627337 27508 net.cpp:382] mnist -> label
I0428 19:52:25.627419 27508 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:25.629483 27508 net.cpp:124] Setting up mnist
I0428 19:52:25.629497 27508 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:25.629501 27508 net.cpp:131] Top shape: 100 (100)
I0428 19:52:25.629504 27508 net.cpp:139] Memory required for data: 314000
I0428 19:52:25.629508 27508 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:25.629518 27508 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:25.629523 27508 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:25.629528 27508 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:25.629534 27508 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:25.629613 27508 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:25.629621 27508 net.cpp:131] Top shape: 100 (100)
I0428 19:52:25.629624 27508 net.cpp:131] Top shape: 100 (100)
I0428 19:52:25.629627 27508 net.cpp:139] Memory required for data: 314800
I0428 19:52:25.629631 27508 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:25.629638 27508 net.cpp:86] Creating Layer conv0
I0428 19:52:25.629642 27508 net.cpp:408] conv0 <- data
I0428 19:52:25.629647 27508 net.cpp:382] conv0 -> conv0
I0428 19:52:25.631356 27508 net.cpp:124] Setting up conv0
I0428 19:52:25.631372 27508 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:25.631376 27508 net.cpp:139] Memory required for data: 1466800
I0428 19:52:25.631386 27508 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:25.631392 27508 net.cpp:86] Creating Layer pool0
I0428 19:52:25.631394 27508 net.cpp:408] pool0 <- conv0
I0428 19:52:25.631400 27508 net.cpp:382] pool0 -> pool0
I0428 19:52:25.631438 27508 net.cpp:124] Setting up pool0
I0428 19:52:25.631444 27508 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:25.631448 27508 net.cpp:139] Memory required for data: 1754800
I0428 19:52:25.631450 27508 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:25.631459 27508 net.cpp:86] Creating Layer conv1
I0428 19:52:25.631464 27508 net.cpp:408] conv1 <- pool0
I0428 19:52:25.631469 27508 net.cpp:382] conv1 -> conv1
I0428 19:52:25.633683 27508 net.cpp:124] Setting up conv1
I0428 19:52:25.633713 27508 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:25.633715 27508 net.cpp:139] Memory required for data: 2394800
I0428 19:52:25.633724 27508 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:25.633731 27508 net.cpp:86] Creating Layer pool1
I0428 19:52:25.633735 27508 net.cpp:408] pool1 <- conv1
I0428 19:52:25.633750 27508 net.cpp:382] pool1 -> pool1
I0428 19:52:25.633790 27508 net.cpp:124] Setting up pool1
I0428 19:52:25.633797 27508 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:25.633800 27508 net.cpp:139] Memory required for data: 2554800
I0428 19:52:25.633803 27508 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:25.633811 27508 net.cpp:86] Creating Layer ip1
I0428 19:52:25.633815 27508 net.cpp:408] ip1 <- pool1
I0428 19:52:25.633819 27508 net.cpp:382] ip1 -> ip1
I0428 19:52:25.634057 27508 net.cpp:124] Setting up ip1
I0428 19:52:25.634064 27508 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:25.634078 27508 net.cpp:139] Memory required for data: 2574800
I0428 19:52:25.634085 27508 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:25.634091 27508 net.cpp:86] Creating Layer relu1
I0428 19:52:25.634094 27508 net.cpp:408] relu1 <- ip1
I0428 19:52:25.634100 27508 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:25.634276 27508 net.cpp:124] Setting up relu1
I0428 19:52:25.634285 27508 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:25.634289 27508 net.cpp:139] Memory required for data: 2594800
I0428 19:52:25.634292 27508 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:25.634300 27508 net.cpp:86] Creating Layer ip2
I0428 19:52:25.634304 27508 net.cpp:408] ip2 <- ip1
I0428 19:52:25.634310 27508 net.cpp:382] ip2 -> ip2
I0428 19:52:25.634438 27508 net.cpp:124] Setting up ip2
I0428 19:52:25.634445 27508 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:25.634449 27508 net.cpp:139] Memory required for data: 2614800
I0428 19:52:25.634454 27508 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:25.634459 27508 net.cpp:86] Creating Layer relu2
I0428 19:52:25.634464 27508 net.cpp:408] relu2 <- ip2
I0428 19:52:25.634469 27508 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:25.634620 27508 net.cpp:124] Setting up relu2
I0428 19:52:25.634630 27508 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:25.634649 27508 net.cpp:139] Memory required for data: 2634800
I0428 19:52:25.634654 27508 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:25.634660 27508 net.cpp:86] Creating Layer ip3
I0428 19:52:25.634663 27508 net.cpp:408] ip3 <- ip2
I0428 19:52:25.634668 27508 net.cpp:382] ip3 -> ip3
I0428 19:52:25.634775 27508 net.cpp:124] Setting up ip3
I0428 19:52:25.634783 27508 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:25.634796 27508 net.cpp:139] Memory required for data: 2638800
I0428 19:52:25.634805 27508 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:25.634811 27508 net.cpp:86] Creating Layer relu3
I0428 19:52:25.634814 27508 net.cpp:408] relu3 <- ip3
I0428 19:52:25.634819 27508 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:25.635694 27508 net.cpp:124] Setting up relu3
I0428 19:52:25.635710 27508 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:25.635713 27508 net.cpp:139] Memory required for data: 2642800
I0428 19:52:25.635716 27508 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:25.635721 27508 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:25.635730 27508 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:25.635735 27508 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:25.635741 27508 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:25.635781 27508 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:25.635787 27508 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:25.635792 27508 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:25.635794 27508 net.cpp:139] Memory required for data: 2650800
I0428 19:52:25.635797 27508 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:25.635802 27508 net.cpp:86] Creating Layer accuracy
I0428 19:52:25.635805 27508 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:25.635809 27508 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:25.635815 27508 net.cpp:382] accuracy -> accuracy
I0428 19:52:25.635821 27508 net.cpp:124] Setting up accuracy
I0428 19:52:25.635825 27508 net.cpp:131] Top shape: (1)
I0428 19:52:25.635828 27508 net.cpp:139] Memory required for data: 2650804
I0428 19:52:25.635831 27508 layer_factory.hpp:77] Creating layer loss
I0428 19:52:25.635836 27508 net.cpp:86] Creating Layer loss
I0428 19:52:25.635839 27508 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:25.635843 27508 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:25.635854 27508 net.cpp:382] loss -> loss
I0428 19:52:25.635859 27508 layer_factory.hpp:77] Creating layer loss
I0428 19:52:25.636098 27508 net.cpp:124] Setting up loss
I0428 19:52:25.636108 27508 net.cpp:131] Top shape: (1)
I0428 19:52:25.636112 27508 net.cpp:134]     with loss weight 1
I0428 19:52:25.636118 27508 net.cpp:139] Memory required for data: 2650808
I0428 19:52:25.636132 27508 net.cpp:200] loss needs backward computation.
I0428 19:52:25.636135 27508 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:25.636139 27508 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:25.636142 27508 net.cpp:200] relu3 needs backward computation.
I0428 19:52:25.636145 27508 net.cpp:200] ip3 needs backward computation.
I0428 19:52:25.636148 27508 net.cpp:200] relu2 needs backward computation.
I0428 19:52:25.636167 27508 net.cpp:200] ip2 needs backward computation.
I0428 19:52:25.636169 27508 net.cpp:200] relu1 needs backward computation.
I0428 19:52:25.636171 27508 net.cpp:200] ip1 needs backward computation.
I0428 19:52:25.636174 27508 net.cpp:200] pool1 needs backward computation.
I0428 19:52:25.636178 27508 net.cpp:200] conv1 needs backward computation.
I0428 19:52:25.636180 27508 net.cpp:200] pool0 needs backward computation.
I0428 19:52:25.636183 27508 net.cpp:200] conv0 needs backward computation.
I0428 19:52:25.636188 27508 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:25.636191 27508 net.cpp:202] mnist does not need backward computation.
I0428 19:52:25.636194 27508 net.cpp:244] This network produces output accuracy
I0428 19:52:25.636198 27508 net.cpp:244] This network produces output loss
I0428 19:52:25.636209 27508 net.cpp:257] Network initialization done.
I0428 19:52:25.636256 27508 solver.cpp:56] Solver scaffolding done.
I0428 19:52:25.636627 27508 caffe.cpp:248] Starting Optimization
I0428 19:52:25.636633 27508 solver.cpp:273] Solving LeNet
I0428 19:52:25.636636 27508 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:25.637598 27508 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:25.641458 27508 blocking_queue.cpp:49] Waiting for data
I0428 19:52:25.714009 27516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:25.714506 27508 solver.cpp:398]     Test net output #0: accuracy = 0.1145
I0428 19:52:25.714526 27508 solver.cpp:398]     Test net output #1: loss = 2.31866 (* 1 = 2.31866 loss)
I0428 19:52:25.716876 27508 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801921s/100 iters), loss = 2.31292
I0428 19:52:25.716913 27508 solver.cpp:238]     Train net output #0: loss = 2.31292 (* 1 = 2.31292 loss)
I0428 19:52:25.716925 27508 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:25.801734 27508 solver.cpp:219] Iteration 100 (1178.91 iter/s, 0.0848238s/100 iters), loss = 0.678887
I0428 19:52:25.801775 27508 solver.cpp:238]     Train net output #0: loss = 0.678887 (* 1 = 0.678887 loss)
I0428 19:52:25.801782 27508 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:25.885510 27508 solver.cpp:219] Iteration 200 (1194.38 iter/s, 0.0837253s/100 iters), loss = 0.175138
I0428 19:52:25.885550 27508 solver.cpp:238]     Train net output #0: loss = 0.175138 (* 1 = 0.175138 loss)
I0428 19:52:25.885555 27508 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:25.968454 27508 solver.cpp:219] Iteration 300 (1206.11 iter/s, 0.0829115s/100 iters), loss = 0.27364
I0428 19:52:25.968492 27508 solver.cpp:238]     Train net output #0: loss = 0.27364 (* 1 = 0.27364 loss)
I0428 19:52:25.968498 27508 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:26.052130 27508 solver.cpp:219] Iteration 400 (1195.54 iter/s, 0.0836444s/100 iters), loss = 0.0709183
I0428 19:52:26.052170 27508 solver.cpp:238]     Train net output #0: loss = 0.0709182 (* 1 = 0.0709182 loss)
I0428 19:52:26.052176 27508 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:26.134482 27508 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:26.179976 27516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:26.180783 27508 solver.cpp:398]     Test net output #0: accuracy = 0.9644
I0428 19:52:26.180821 27508 solver.cpp:398]     Test net output #1: loss = 0.117262 (* 1 = 0.117262 loss)
I0428 19:52:26.181763 27508 solver.cpp:219] Iteration 500 (771.62 iter/s, 0.129597s/100 iters), loss = 0.122014
I0428 19:52:26.181800 27508 solver.cpp:238]     Train net output #0: loss = 0.122014 (* 1 = 0.122014 loss)
I0428 19:52:26.181823 27508 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:26.265786 27508 solver.cpp:219] Iteration 600 (1190.59 iter/s, 0.0839917s/100 iters), loss = 0.140641
I0428 19:52:26.265810 27508 solver.cpp:238]     Train net output #0: loss = 0.140641 (* 1 = 0.140641 loss)
I0428 19:52:26.265816 27508 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:26.350564 27508 solver.cpp:219] Iteration 700 (1179.99 iter/s, 0.0847462s/100 iters), loss = 0.107286
I0428 19:52:26.350605 27508 solver.cpp:238]     Train net output #0: loss = 0.107286 (* 1 = 0.107286 loss)
I0428 19:52:26.350610 27508 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:26.435250 27508 solver.cpp:219] Iteration 800 (1181.32 iter/s, 0.084651s/100 iters), loss = 0.27665
I0428 19:52:26.435282 27508 solver.cpp:238]     Train net output #0: loss = 0.27665 (* 1 = 0.27665 loss)
I0428 19:52:26.435288 27508 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:26.519258 27508 solver.cpp:219] Iteration 900 (1190.81 iter/s, 0.0839762s/100 iters), loss = 0.246424
I0428 19:52:26.519312 27508 solver.cpp:238]     Train net output #0: loss = 0.246423 (* 1 = 0.246423 loss)
I0428 19:52:26.519335 27508 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:26.547711 27515 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:26.602877 27508 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:26.604043 27508 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:26.604760 27508 solver.cpp:311] Iteration 1000, loss = 0.13539
I0428 19:52:26.604774 27508 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:26.652051 27516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:26.652608 27508 solver.cpp:398]     Test net output #0: accuracy = 0.9751
I0428 19:52:26.652644 27508 solver.cpp:398]     Test net output #1: loss = 0.0754788 (* 1 = 0.0754788 loss)
I0428 19:52:26.652650 27508 solver.cpp:316] Optimization Done.
I0428 19:52:26.652653 27508 caffe.cpp:259] Optimization Done.
