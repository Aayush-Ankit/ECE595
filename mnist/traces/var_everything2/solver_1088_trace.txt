I0428 20:08:37.155864 31424 caffe.cpp:218] Using GPUs 0
I0428 20:08:37.196084 31424 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:37.744890 31424 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1088.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:37.745033 31424 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1088.prototxt
I0428 20:08:37.745443 31424 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:37.745462 31424 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:37.745563 31424 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:37.745645 31424 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:37.745739 31424 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:37.745764 31424 net.cpp:86] Creating Layer mnist
I0428 20:08:37.745771 31424 net.cpp:382] mnist -> data
I0428 20:08:37.745795 31424 net.cpp:382] mnist -> label
I0428 20:08:37.746883 31424 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:37.749349 31424 net.cpp:124] Setting up mnist
I0428 20:08:37.749367 31424 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:37.749374 31424 net.cpp:131] Top shape: 64 (64)
I0428 20:08:37.749378 31424 net.cpp:139] Memory required for data: 200960
I0428 20:08:37.749385 31424 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:37.749400 31424 net.cpp:86] Creating Layer conv0
I0428 20:08:37.749421 31424 net.cpp:408] conv0 <- data
I0428 20:08:37.749435 31424 net.cpp:382] conv0 -> conv0
I0428 20:08:38.029712 31424 net.cpp:124] Setting up conv0
I0428 20:08:38.029739 31424 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:38.029743 31424 net.cpp:139] Memory required for data: 3887360
I0428 20:08:38.029757 31424 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:38.029770 31424 net.cpp:86] Creating Layer pool0
I0428 20:08:38.029774 31424 net.cpp:408] pool0 <- conv0
I0428 20:08:38.029779 31424 net.cpp:382] pool0 -> pool0
I0428 20:08:38.029822 31424 net.cpp:124] Setting up pool0
I0428 20:08:38.029829 31424 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:38.029832 31424 net.cpp:139] Memory required for data: 4808960
I0428 20:08:38.029835 31424 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:38.029846 31424 net.cpp:86] Creating Layer conv1
I0428 20:08:38.029850 31424 net.cpp:408] conv1 <- pool0
I0428 20:08:38.029853 31424 net.cpp:382] conv1 -> conv1
I0428 20:08:38.032618 31424 net.cpp:124] Setting up conv1
I0428 20:08:38.032646 31424 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:38.032650 31424 net.cpp:139] Memory required for data: 4972800
I0428 20:08:38.032672 31424 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:38.032680 31424 net.cpp:86] Creating Layer pool1
I0428 20:08:38.032683 31424 net.cpp:408] pool1 <- conv1
I0428 20:08:38.032688 31424 net.cpp:382] pool1 -> pool1
I0428 20:08:38.032739 31424 net.cpp:124] Setting up pool1
I0428 20:08:38.032744 31424 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:38.032747 31424 net.cpp:139] Memory required for data: 5013760
I0428 20:08:38.032750 31424 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:38.032757 31424 net.cpp:86] Creating Layer ip1
I0428 20:08:38.032759 31424 net.cpp:408] ip1 <- pool1
I0428 20:08:38.032764 31424 net.cpp:382] ip1 -> ip1
I0428 20:08:38.032922 31424 net.cpp:124] Setting up ip1
I0428 20:08:38.032929 31424 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:38.032933 31424 net.cpp:139] Memory required for data: 5026560
I0428 20:08:38.032940 31424 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:38.032945 31424 net.cpp:86] Creating Layer relu1
I0428 20:08:38.032948 31424 net.cpp:408] relu1 <- ip1
I0428 20:08:38.032953 31424 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:38.033110 31424 net.cpp:124] Setting up relu1
I0428 20:08:38.033119 31424 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:38.033138 31424 net.cpp:139] Memory required for data: 5039360
I0428 20:08:38.033140 31424 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:38.033146 31424 net.cpp:86] Creating Layer ip2
I0428 20:08:38.033149 31424 net.cpp:408] ip2 <- ip1
I0428 20:08:38.033154 31424 net.cpp:382] ip2 -> ip2
I0428 20:08:38.034153 31424 net.cpp:124] Setting up ip2
I0428 20:08:38.034165 31424 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:38.034185 31424 net.cpp:139] Memory required for data: 5045760
I0428 20:08:38.034191 31424 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:38.034198 31424 net.cpp:86] Creating Layer relu2
I0428 20:08:38.034201 31424 net.cpp:408] relu2 <- ip2
I0428 20:08:38.034205 31424 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:38.035035 31424 net.cpp:124] Setting up relu2
I0428 20:08:38.035048 31424 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:38.035068 31424 net.cpp:139] Memory required for data: 5052160
I0428 20:08:38.035073 31424 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:38.035079 31424 net.cpp:86] Creating Layer ip3
I0428 20:08:38.035082 31424 net.cpp:408] ip3 <- ip2
I0428 20:08:38.035089 31424 net.cpp:382] ip3 -> ip3
I0428 20:08:38.035185 31424 net.cpp:124] Setting up ip3
I0428 20:08:38.035193 31424 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:38.035197 31424 net.cpp:139] Memory required for data: 5054720
I0428 20:08:38.035204 31424 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:38.035210 31424 net.cpp:86] Creating Layer relu3
I0428 20:08:38.035213 31424 net.cpp:408] relu3 <- ip3
I0428 20:08:38.035218 31424 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:38.035409 31424 net.cpp:124] Setting up relu3
I0428 20:08:38.035418 31424 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:38.035421 31424 net.cpp:139] Memory required for data: 5057280
I0428 20:08:38.035425 31424 layer_factory.hpp:77] Creating layer loss
I0428 20:08:38.035431 31424 net.cpp:86] Creating Layer loss
I0428 20:08:38.035434 31424 net.cpp:408] loss <- ip3
I0428 20:08:38.035439 31424 net.cpp:408] loss <- label
I0428 20:08:38.035444 31424 net.cpp:382] loss -> loss
I0428 20:08:38.035462 31424 layer_factory.hpp:77] Creating layer loss
I0428 20:08:38.035701 31424 net.cpp:124] Setting up loss
I0428 20:08:38.035709 31424 net.cpp:131] Top shape: (1)
I0428 20:08:38.035713 31424 net.cpp:134]     with loss weight 1
I0428 20:08:38.035727 31424 net.cpp:139] Memory required for data: 5057284
I0428 20:08:38.035729 31424 net.cpp:200] loss needs backward computation.
I0428 20:08:38.035733 31424 net.cpp:200] relu3 needs backward computation.
I0428 20:08:38.035737 31424 net.cpp:200] ip3 needs backward computation.
I0428 20:08:38.035739 31424 net.cpp:200] relu2 needs backward computation.
I0428 20:08:38.035742 31424 net.cpp:200] ip2 needs backward computation.
I0428 20:08:38.035744 31424 net.cpp:200] relu1 needs backward computation.
I0428 20:08:38.035748 31424 net.cpp:200] ip1 needs backward computation.
I0428 20:08:38.035750 31424 net.cpp:200] pool1 needs backward computation.
I0428 20:08:38.035753 31424 net.cpp:200] conv1 needs backward computation.
I0428 20:08:38.035756 31424 net.cpp:200] pool0 needs backward computation.
I0428 20:08:38.035759 31424 net.cpp:200] conv0 needs backward computation.
I0428 20:08:38.035763 31424 net.cpp:202] mnist does not need backward computation.
I0428 20:08:38.035765 31424 net.cpp:244] This network produces output loss
I0428 20:08:38.035774 31424 net.cpp:257] Network initialization done.
I0428 20:08:38.036093 31424 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1088.prototxt
I0428 20:08:38.036150 31424 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:38.036240 31424 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:38.036317 31424 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:38.036363 31424 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:38.036375 31424 net.cpp:86] Creating Layer mnist
I0428 20:08:38.036379 31424 net.cpp:382] mnist -> data
I0428 20:08:38.036387 31424 net.cpp:382] mnist -> label
I0428 20:08:38.036484 31424 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:38.038476 31424 net.cpp:124] Setting up mnist
I0428 20:08:38.038504 31424 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:38.038509 31424 net.cpp:131] Top shape: 100 (100)
I0428 20:08:38.038513 31424 net.cpp:139] Memory required for data: 314000
I0428 20:08:38.038517 31424 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:38.038552 31424 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:38.038556 31424 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:38.038563 31424 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:38.038568 31424 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:38.038609 31424 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:38.038615 31424 net.cpp:131] Top shape: 100 (100)
I0428 20:08:38.038619 31424 net.cpp:131] Top shape: 100 (100)
I0428 20:08:38.038622 31424 net.cpp:139] Memory required for data: 314800
I0428 20:08:38.038625 31424 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:38.038633 31424 net.cpp:86] Creating Layer conv0
I0428 20:08:38.038647 31424 net.cpp:408] conv0 <- data
I0428 20:08:38.038651 31424 net.cpp:382] conv0 -> conv0
I0428 20:08:38.040537 31424 net.cpp:124] Setting up conv0
I0428 20:08:38.040550 31424 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:38.040555 31424 net.cpp:139] Memory required for data: 6074800
I0428 20:08:38.040563 31424 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:38.040570 31424 net.cpp:86] Creating Layer pool0
I0428 20:08:38.040585 31424 net.cpp:408] pool0 <- conv0
I0428 20:08:38.040588 31424 net.cpp:382] pool0 -> pool0
I0428 20:08:38.040624 31424 net.cpp:124] Setting up pool0
I0428 20:08:38.040630 31424 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:38.040633 31424 net.cpp:139] Memory required for data: 7514800
I0428 20:08:38.040635 31424 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:38.040643 31424 net.cpp:86] Creating Layer conv1
I0428 20:08:38.040647 31424 net.cpp:408] conv1 <- pool0
I0428 20:08:38.040652 31424 net.cpp:382] conv1 -> conv1
I0428 20:08:38.042994 31424 net.cpp:124] Setting up conv1
I0428 20:08:38.043007 31424 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:38.043011 31424 net.cpp:139] Memory required for data: 7770800
I0428 20:08:38.043020 31424 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:38.043025 31424 net.cpp:86] Creating Layer pool1
I0428 20:08:38.043045 31424 net.cpp:408] pool1 <- conv1
I0428 20:08:38.043051 31424 net.cpp:382] pool1 -> pool1
I0428 20:08:38.043123 31424 net.cpp:124] Setting up pool1
I0428 20:08:38.043128 31424 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:38.043138 31424 net.cpp:139] Memory required for data: 7834800
I0428 20:08:38.043140 31424 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:38.043146 31424 net.cpp:86] Creating Layer ip1
I0428 20:08:38.043150 31424 net.cpp:408] ip1 <- pool1
I0428 20:08:38.043155 31424 net.cpp:382] ip1 -> ip1
I0428 20:08:38.043334 31424 net.cpp:124] Setting up ip1
I0428 20:08:38.043341 31424 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:38.043355 31424 net.cpp:139] Memory required for data: 7854800
I0428 20:08:38.043364 31424 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:38.043368 31424 net.cpp:86] Creating Layer relu1
I0428 20:08:38.043371 31424 net.cpp:408] relu1 <- ip1
I0428 20:08:38.043376 31424 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:38.043650 31424 net.cpp:124] Setting up relu1
I0428 20:08:38.043659 31424 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:38.043663 31424 net.cpp:139] Memory required for data: 7874800
I0428 20:08:38.043665 31424 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:38.043673 31424 net.cpp:86] Creating Layer ip2
I0428 20:08:38.043676 31424 net.cpp:408] ip2 <- ip1
I0428 20:08:38.043681 31424 net.cpp:382] ip2 -> ip2
I0428 20:08:38.043798 31424 net.cpp:124] Setting up ip2
I0428 20:08:38.043805 31424 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:38.043808 31424 net.cpp:139] Memory required for data: 7884800
I0428 20:08:38.043814 31424 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:38.043818 31424 net.cpp:86] Creating Layer relu2
I0428 20:08:38.043822 31424 net.cpp:408] relu2 <- ip2
I0428 20:08:38.043825 31424 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:38.043972 31424 net.cpp:124] Setting up relu2
I0428 20:08:38.043980 31424 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:38.043983 31424 net.cpp:139] Memory required for data: 7894800
I0428 20:08:38.043985 31424 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:38.043990 31424 net.cpp:86] Creating Layer ip3
I0428 20:08:38.043994 31424 net.cpp:408] ip3 <- ip2
I0428 20:08:38.043998 31424 net.cpp:382] ip3 -> ip3
I0428 20:08:38.044082 31424 net.cpp:124] Setting up ip3
I0428 20:08:38.044088 31424 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:38.044092 31424 net.cpp:139] Memory required for data: 7898800
I0428 20:08:38.044100 31424 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:38.044103 31424 net.cpp:86] Creating Layer relu3
I0428 20:08:38.044106 31424 net.cpp:408] relu3 <- ip3
I0428 20:08:38.044109 31424 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:38.044952 31424 net.cpp:124] Setting up relu3
I0428 20:08:38.044963 31424 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:38.044967 31424 net.cpp:139] Memory required for data: 7902800
I0428 20:08:38.044971 31424 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:38.044987 31424 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:38.044991 31424 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:38.044996 31424 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:38.045002 31424 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:38.045042 31424 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:38.045047 31424 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:38.045052 31424 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:38.045054 31424 net.cpp:139] Memory required for data: 7910800
I0428 20:08:38.045058 31424 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:38.045061 31424 net.cpp:86] Creating Layer accuracy
I0428 20:08:38.045065 31424 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:38.045069 31424 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:38.045074 31424 net.cpp:382] accuracy -> accuracy
I0428 20:08:38.045080 31424 net.cpp:124] Setting up accuracy
I0428 20:08:38.045084 31424 net.cpp:131] Top shape: (1)
I0428 20:08:38.045087 31424 net.cpp:139] Memory required for data: 7910804
I0428 20:08:38.045090 31424 layer_factory.hpp:77] Creating layer loss
I0428 20:08:38.045094 31424 net.cpp:86] Creating Layer loss
I0428 20:08:38.045097 31424 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:38.045100 31424 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:38.045104 31424 net.cpp:382] loss -> loss
I0428 20:08:38.045110 31424 layer_factory.hpp:77] Creating layer loss
I0428 20:08:38.045351 31424 net.cpp:124] Setting up loss
I0428 20:08:38.045359 31424 net.cpp:131] Top shape: (1)
I0428 20:08:38.045363 31424 net.cpp:134]     with loss weight 1
I0428 20:08:38.045379 31424 net.cpp:139] Memory required for data: 7910808
I0428 20:08:38.045400 31424 net.cpp:200] loss needs backward computation.
I0428 20:08:38.045404 31424 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:38.045408 31424 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:38.045413 31424 net.cpp:200] relu3 needs backward computation.
I0428 20:08:38.045414 31424 net.cpp:200] ip3 needs backward computation.
I0428 20:08:38.045418 31424 net.cpp:200] relu2 needs backward computation.
I0428 20:08:38.045420 31424 net.cpp:200] ip2 needs backward computation.
I0428 20:08:38.045429 31424 net.cpp:200] relu1 needs backward computation.
I0428 20:08:38.045433 31424 net.cpp:200] ip1 needs backward computation.
I0428 20:08:38.045435 31424 net.cpp:200] pool1 needs backward computation.
I0428 20:08:38.045439 31424 net.cpp:200] conv1 needs backward computation.
I0428 20:08:38.045460 31424 net.cpp:200] pool0 needs backward computation.
I0428 20:08:38.045464 31424 net.cpp:200] conv0 needs backward computation.
I0428 20:08:38.045467 31424 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:38.045471 31424 net.cpp:202] mnist does not need backward computation.
I0428 20:08:38.045478 31424 net.cpp:244] This network produces output accuracy
I0428 20:08:38.045482 31424 net.cpp:244] This network produces output loss
I0428 20:08:38.045507 31424 net.cpp:257] Network initialization done.
I0428 20:08:38.045552 31424 solver.cpp:56] Solver scaffolding done.
I0428 20:08:38.045884 31424 caffe.cpp:248] Starting Optimization
I0428 20:08:38.045892 31424 solver.cpp:273] Solving LeNet
I0428 20:08:38.045894 31424 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:38.046752 31424 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:38.051442 31424 blocking_queue.cpp:49] Waiting for data
I0428 20:08:38.122776 31431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:38.123529 31424 solver.cpp:398]     Test net output #0: accuracy = 0.0966
I0428 20:08:38.123564 31424 solver.cpp:398]     Test net output #1: loss = 2.30539 (* 1 = 2.30539 loss)
I0428 20:08:38.128787 31424 solver.cpp:219] Iteration 0 (-2.10476e-31 iter/s, 0.0828641s/100 iters), loss = 2.29575
I0428 20:08:38.128844 31424 solver.cpp:238]     Train net output #0: loss = 2.29575 (* 1 = 2.29575 loss)
I0428 20:08:38.128864 31424 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:38.229534 31424 solver.cpp:219] Iteration 100 (993.219 iter/s, 0.100683s/100 iters), loss = 0.497246
I0428 20:08:38.229565 31424 solver.cpp:238]     Train net output #0: loss = 0.497246 (* 1 = 0.497246 loss)
I0428 20:08:38.229573 31424 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:38.335479 31424 solver.cpp:219] Iteration 200 (944.278 iter/s, 0.105901s/100 iters), loss = 0.234222
I0428 20:08:38.335515 31424 solver.cpp:238]     Train net output #0: loss = 0.234222 (* 1 = 0.234222 loss)
I0428 20:08:38.335525 31424 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:38.436230 31424 solver.cpp:219] Iteration 300 (992.997 iter/s, 0.100705s/100 iters), loss = 0.27301
I0428 20:08:38.436260 31424 solver.cpp:238]     Train net output #0: loss = 0.27301 (* 1 = 0.27301 loss)
I0428 20:08:38.436267 31424 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:38.531728 31424 solver.cpp:219] Iteration 400 (1047.59 iter/s, 0.0954573s/100 iters), loss = 0.120923
I0428 20:08:38.531755 31424 solver.cpp:238]     Train net output #0: loss = 0.120923 (* 1 = 0.120923 loss)
I0428 20:08:38.531764 31424 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:38.632705 31424 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:38.689292 31431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:38.691190 31424 solver.cpp:398]     Test net output #0: accuracy = 0.9611
I0428 20:08:38.691226 31424 solver.cpp:398]     Test net output #1: loss = 0.122454 (* 1 = 0.122454 loss)
I0428 20:08:38.692157 31424 solver.cpp:219] Iteration 500 (623.5 iter/s, 0.160385s/100 iters), loss = 0.0807631
I0428 20:08:38.692203 31424 solver.cpp:238]     Train net output #0: loss = 0.080763 (* 1 = 0.080763 loss)
I0428 20:08:38.692214 31424 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:38.786262 31424 solver.cpp:219] Iteration 600 (1063.27 iter/s, 0.0940491s/100 iters), loss = 0.174756
I0428 20:08:38.786290 31424 solver.cpp:238]     Train net output #0: loss = 0.174756 (* 1 = 0.174756 loss)
I0428 20:08:38.786309 31424 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:38.881048 31424 solver.cpp:219] Iteration 700 (1055.49 iter/s, 0.0947425s/100 iters), loss = 0.180527
I0428 20:08:38.881103 31424 solver.cpp:238]     Train net output #0: loss = 0.180527 (* 1 = 0.180527 loss)
I0428 20:08:38.881119 31424 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:38.985842 31424 solver.cpp:219] Iteration 800 (954.803 iter/s, 0.104734s/100 iters), loss = 0.461199
I0428 20:08:38.985877 31424 solver.cpp:238]     Train net output #0: loss = 0.461199 (* 1 = 0.461199 loss)
I0428 20:08:38.985884 31424 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:39.082877 31424 solver.cpp:219] Iteration 900 (1031.01 iter/s, 0.0969923s/100 iters), loss = 0.213024
I0428 20:08:39.082906 31424 solver.cpp:238]     Train net output #0: loss = 0.213024 (* 1 = 0.213024 loss)
I0428 20:08:39.082913 31424 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:39.117735 31430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:39.186463 31424 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:39.187508 31424 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:39.188235 31424 solver.cpp:311] Iteration 1000, loss = 0.110837
I0428 20:08:39.188259 31424 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:39.262531 31431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:39.263139 31424 solver.cpp:398]     Test net output #0: accuracy = 0.9715
I0428 20:08:39.263161 31424 solver.cpp:398]     Test net output #1: loss = 0.0879814 (* 1 = 0.0879814 loss)
I0428 20:08:39.263169 31424 solver.cpp:316] Optimization Done.
I0428 20:08:39.263173 31424 caffe.cpp:259] Optimization Done.
