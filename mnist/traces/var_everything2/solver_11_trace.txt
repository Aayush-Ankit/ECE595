I0428 19:28:00.816284 21510 caffe.cpp:218] Using GPUs 0
I0428 19:28:00.857072 21510 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:01.388562 21510 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test11.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:01.388708 21510 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test11.prototxt
I0428 19:28:01.388990 21510 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:01.389004 21510 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:01.389070 21510 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:28:01.389128 21510 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:01.389233 21510 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:01.389258 21510 net.cpp:86] Creating Layer mnist
I0428 19:28:01.389269 21510 net.cpp:382] mnist -> data
I0428 19:28:01.389292 21510 net.cpp:382] mnist -> label
I0428 19:28:01.390391 21510 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:01.393069 21510 net.cpp:124] Setting up mnist
I0428 19:28:01.393086 21510 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:01.393093 21510 net.cpp:131] Top shape: 64 (64)
I0428 19:28:01.393096 21510 net.cpp:139] Memory required for data: 200960
I0428 19:28:01.393103 21510 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:01.393116 21510 net.cpp:86] Creating Layer ip1
I0428 19:28:01.393122 21510 net.cpp:408] ip1 <- data
I0428 19:28:01.393134 21510 net.cpp:382] ip1 -> ip1
I0428 19:28:01.393580 21510 net.cpp:124] Setting up ip1
I0428 19:28:01.393592 21510 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:01.393596 21510 net.cpp:139] Memory required for data: 213760
I0428 19:28:01.393610 21510 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:01.393618 21510 net.cpp:86] Creating Layer relu1
I0428 19:28:01.393622 21510 net.cpp:408] relu1 <- ip1
I0428 19:28:01.393628 21510 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:01.681607 21510 net.cpp:124] Setting up relu1
I0428 19:28:01.681638 21510 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:01.681643 21510 net.cpp:139] Memory required for data: 226560
I0428 19:28:01.681650 21510 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:01.681664 21510 net.cpp:86] Creating Layer ip2
I0428 19:28:01.681670 21510 net.cpp:408] ip2 <- ip1
I0428 19:28:01.681679 21510 net.cpp:382] ip2 -> ip2
I0428 19:28:01.682848 21510 net.cpp:124] Setting up ip2
I0428 19:28:01.682864 21510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:01.682869 21510 net.cpp:139] Memory required for data: 229120
I0428 19:28:01.682881 21510 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:01.682909 21510 net.cpp:86] Creating Layer relu2
I0428 19:28:01.682914 21510 net.cpp:408] relu2 <- ip2
I0428 19:28:01.682920 21510 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:01.683794 21510 net.cpp:124] Setting up relu2
I0428 19:28:01.683809 21510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:01.683815 21510 net.cpp:139] Memory required for data: 231680
I0428 19:28:01.683818 21510 layer_factory.hpp:77] Creating layer loss
I0428 19:28:01.683826 21510 net.cpp:86] Creating Layer loss
I0428 19:28:01.683830 21510 net.cpp:408] loss <- ip2
I0428 19:28:01.683836 21510 net.cpp:408] loss <- label
I0428 19:28:01.683843 21510 net.cpp:382] loss -> loss
I0428 19:28:01.683867 21510 layer_factory.hpp:77] Creating layer loss
I0428 19:28:01.684147 21510 net.cpp:124] Setting up loss
I0428 19:28:01.684159 21510 net.cpp:131] Top shape: (1)
I0428 19:28:01.684164 21510 net.cpp:134]     with loss weight 1
I0428 19:28:01.684180 21510 net.cpp:139] Memory required for data: 231684
I0428 19:28:01.684185 21510 net.cpp:200] loss needs backward computation.
I0428 19:28:01.684190 21510 net.cpp:200] relu2 needs backward computation.
I0428 19:28:01.684193 21510 net.cpp:200] ip2 needs backward computation.
I0428 19:28:01.684196 21510 net.cpp:200] relu1 needs backward computation.
I0428 19:28:01.684201 21510 net.cpp:200] ip1 needs backward computation.
I0428 19:28:01.684206 21510 net.cpp:202] mnist does not need backward computation.
I0428 19:28:01.684208 21510 net.cpp:244] This network produces output loss
I0428 19:28:01.684217 21510 net.cpp:257] Network initialization done.
I0428 19:28:01.684470 21510 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test11.prototxt
I0428 19:28:01.684496 21510 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:01.684568 21510 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:28:01.684628 21510 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:01.684687 21510 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:01.684701 21510 net.cpp:86] Creating Layer mnist
I0428 19:28:01.684707 21510 net.cpp:382] mnist -> data
I0428 19:28:01.684717 21510 net.cpp:382] mnist -> label
I0428 19:28:01.684829 21510 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:01.687031 21510 net.cpp:124] Setting up mnist
I0428 19:28:01.687047 21510 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:01.687052 21510 net.cpp:131] Top shape: 100 (100)
I0428 19:28:01.687057 21510 net.cpp:139] Memory required for data: 314000
I0428 19:28:01.687062 21510 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:01.687074 21510 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:01.687078 21510 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:01.687084 21510 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:01.687105 21510 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:01.687161 21510 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:01.687172 21510 net.cpp:131] Top shape: 100 (100)
I0428 19:28:01.687180 21510 net.cpp:131] Top shape: 100 (100)
I0428 19:28:01.687186 21510 net.cpp:139] Memory required for data: 314800
I0428 19:28:01.687191 21510 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:01.687203 21510 net.cpp:86] Creating Layer ip1
I0428 19:28:01.687211 21510 net.cpp:408] ip1 <- data
I0428 19:28:01.687221 21510 net.cpp:382] ip1 -> ip1
I0428 19:28:01.687695 21510 net.cpp:124] Setting up ip1
I0428 19:28:01.687705 21510 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:01.687710 21510 net.cpp:139] Memory required for data: 334800
I0428 19:28:01.687721 21510 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:01.687726 21510 net.cpp:86] Creating Layer relu1
I0428 19:28:01.687731 21510 net.cpp:408] relu1 <- ip1
I0428 19:28:01.687736 21510 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:01.687938 21510 net.cpp:124] Setting up relu1
I0428 19:28:01.687949 21510 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:01.687953 21510 net.cpp:139] Memory required for data: 354800
I0428 19:28:01.687958 21510 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:01.687965 21510 net.cpp:86] Creating Layer ip2
I0428 19:28:01.687970 21510 net.cpp:408] ip2 <- ip1
I0428 19:28:01.687976 21510 net.cpp:382] ip2 -> ip2
I0428 19:28:01.688083 21510 net.cpp:124] Setting up ip2
I0428 19:28:01.688092 21510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:01.688097 21510 net.cpp:139] Memory required for data: 358800
I0428 19:28:01.688104 21510 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:01.688109 21510 net.cpp:86] Creating Layer relu2
I0428 19:28:01.688113 21510 net.cpp:408] relu2 <- ip2
I0428 19:28:01.688122 21510 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:01.689088 21510 net.cpp:124] Setting up relu2
I0428 19:28:01.689105 21510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:01.689108 21510 net.cpp:139] Memory required for data: 362800
I0428 19:28:01.689113 21510 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:28:01.689122 21510 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:28:01.689127 21510 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:28:01.689133 21510 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:28:01.689141 21510 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:28:01.689189 21510 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:28:01.689195 21510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:01.689200 21510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:01.689203 21510 net.cpp:139] Memory required for data: 370800
I0428 19:28:01.689208 21510 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:01.689218 21510 net.cpp:86] Creating Layer accuracy
I0428 19:28:01.689223 21510 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:28:01.689227 21510 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:01.689234 21510 net.cpp:382] accuracy -> accuracy
I0428 19:28:01.689244 21510 net.cpp:124] Setting up accuracy
I0428 19:28:01.689249 21510 net.cpp:131] Top shape: (1)
I0428 19:28:01.689252 21510 net.cpp:139] Memory required for data: 370804
I0428 19:28:01.689255 21510 layer_factory.hpp:77] Creating layer loss
I0428 19:28:01.689265 21510 net.cpp:86] Creating Layer loss
I0428 19:28:01.689270 21510 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:28:01.689273 21510 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:01.689280 21510 net.cpp:382] loss -> loss
I0428 19:28:01.689286 21510 layer_factory.hpp:77] Creating layer loss
I0428 19:28:01.689573 21510 net.cpp:124] Setting up loss
I0428 19:28:01.689582 21510 net.cpp:131] Top shape: (1)
I0428 19:28:01.689586 21510 net.cpp:134]     with loss weight 1
I0428 19:28:01.689594 21510 net.cpp:139] Memory required for data: 370808
I0428 19:28:01.689599 21510 net.cpp:200] loss needs backward computation.
I0428 19:28:01.689615 21510 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:01.689621 21510 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:28:01.689625 21510 net.cpp:200] relu2 needs backward computation.
I0428 19:28:01.689628 21510 net.cpp:200] ip2 needs backward computation.
I0428 19:28:01.689632 21510 net.cpp:200] relu1 needs backward computation.
I0428 19:28:01.689635 21510 net.cpp:200] ip1 needs backward computation.
I0428 19:28:01.689640 21510 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:01.689646 21510 net.cpp:202] mnist does not need backward computation.
I0428 19:28:01.689649 21510 net.cpp:244] This network produces output accuracy
I0428 19:28:01.689653 21510 net.cpp:244] This network produces output loss
I0428 19:28:01.689666 21510 net.cpp:257] Network initialization done.
I0428 19:28:01.689698 21510 solver.cpp:56] Solver scaffolding done.
I0428 19:28:01.689865 21510 caffe.cpp:248] Starting Optimization
I0428 19:28:01.689873 21510 solver.cpp:273] Solving LeNet
I0428 19:28:01.689877 21510 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:01.690675 21510 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:01.691529 21510 blocking_queue.cpp:49] Waiting for data
I0428 19:28:01.770685 21517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:01.771140 21510 solver.cpp:398]     Test net output #0: accuracy = 0.1146
I0428 19:28:01.771173 21510 solver.cpp:398]     Test net output #1: loss = 2.304 (* 1 = 2.304 loss)
I0428 19:28:01.772800 21510 solver.cpp:219] Iteration 0 (-2.64582e-31 iter/s, 0.0828857s/100 iters), loss = 2.29775
I0428 19:28:01.772866 21510 solver.cpp:238]     Train net output #0: loss = 2.29775 (* 1 = 2.29775 loss)
I0428 19:28:01.772883 21510 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:01.819495 21510 solver.cpp:219] Iteration 100 (2145.11 iter/s, 0.0466176s/100 iters), loss = 0.93016
I0428 19:28:01.819531 21510 solver.cpp:238]     Train net output #0: loss = 0.93016 (* 1 = 0.93016 loss)
I0428 19:28:01.819540 21510 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:01.861003 21510 solver.cpp:219] Iteration 200 (2411.44 iter/s, 0.0414689s/100 iters), loss = 0.692581
I0428 19:28:01.861030 21510 solver.cpp:238]     Train net output #0: loss = 0.692581 (* 1 = 0.692581 loss)
I0428 19:28:01.861038 21510 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:01.901684 21510 solver.cpp:219] Iteration 300 (2460.35 iter/s, 0.0406446s/100 iters), loss = 0.719466
I0428 19:28:01.901708 21510 solver.cpp:238]     Train net output #0: loss = 0.719466 (* 1 = 0.719466 loss)
I0428 19:28:01.901715 21510 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:01.942363 21510 solver.cpp:219] Iteration 400 (2460.23 iter/s, 0.0406467s/100 iters), loss = 0.995882
I0428 19:28:01.942387 21510 solver.cpp:238]     Train net output #0: loss = 0.995882 (* 1 = 0.995882 loss)
I0428 19:28:01.942394 21510 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:01.982722 21510 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:02.038312 21517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:02.038784 21510 solver.cpp:398]     Test net output #0: accuracy = 0.7872
I0428 19:28:02.038816 21510 solver.cpp:398]     Test net output #1: loss = 0.711474 (* 1 = 0.711474 loss)
I0428 19:28:02.039353 21510 solver.cpp:219] Iteration 500 (1031.41 iter/s, 0.0969544s/100 iters), loss = 0.870509
I0428 19:28:02.039391 21510 solver.cpp:238]     Train net output #0: loss = 0.870509 (* 1 = 0.870509 loss)
I0428 19:28:02.039412 21510 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:02.088654 21510 solver.cpp:219] Iteration 600 (2030.28 iter/s, 0.0492544s/100 iters), loss = 0.471806
I0428 19:28:02.088686 21510 solver.cpp:238]     Train net output #0: loss = 0.471806 (* 1 = 0.471806 loss)
I0428 19:28:02.088695 21510 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:02.131057 21510 solver.cpp:219] Iteration 700 (2360.44 iter/s, 0.0423649s/100 iters), loss = 0.78336
I0428 19:28:02.131105 21510 solver.cpp:238]     Train net output #0: loss = 0.78336 (* 1 = 0.78336 loss)
I0428 19:28:02.131112 21510 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:02.171491 21510 solver.cpp:219] Iteration 800 (2476.45 iter/s, 0.0403804s/100 iters), loss = 0.714037
I0428 19:28:02.171519 21510 solver.cpp:238]     Train net output #0: loss = 0.714037 (* 1 = 0.714037 loss)
I0428 19:28:02.171525 21510 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:02.224318 21510 solver.cpp:219] Iteration 900 (1894.44 iter/s, 0.0527862s/100 iters), loss = 0.612799
I0428 19:28:02.224366 21510 solver.cpp:238]     Train net output #0: loss = 0.612799 (* 1 = 0.612799 loss)
I0428 19:28:02.224378 21510 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:02.241531 21516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:02.271924 21510 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:02.273195 21510 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:02.273913 21510 solver.cpp:311] Iteration 1000, loss = 0.601065
I0428 19:28:02.273934 21510 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:02.328915 21517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:02.329294 21510 solver.cpp:398]     Test net output #0: accuracy = 0.824
I0428 19:28:02.329315 21510 solver.cpp:398]     Test net output #1: loss = 0.663925 (* 1 = 0.663925 loss)
I0428 19:28:02.329324 21510 solver.cpp:316] Optimization Done.
I0428 19:28:02.329327 21510 caffe.cpp:259] Optimization Done.
