I0428 20:27:25.385692  3037 caffe.cpp:218] Using GPUs 0
I0428 20:27:25.422904  3037 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:25.937012  3037 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1488.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:25.937155  3037 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1488.prototxt
I0428 20:27:25.937532  3037 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:25.937549  3037 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:25.937640  3037 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:25.937714  3037 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:25.937811  3037 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:25.937835  3037 net.cpp:86] Creating Layer mnist
I0428 20:27:25.937844  3037 net.cpp:382] mnist -> data
I0428 20:27:25.937866  3037 net.cpp:382] mnist -> label
I0428 20:27:25.939028  3037 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:25.941588  3037 net.cpp:124] Setting up mnist
I0428 20:27:25.941607  3037 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:25.941615  3037 net.cpp:131] Top shape: 64 (64)
I0428 20:27:25.941618  3037 net.cpp:139] Memory required for data: 200960
I0428 20:27:25.941625  3037 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:25.941640  3037 net.cpp:86] Creating Layer conv0
I0428 20:27:25.941646  3037 net.cpp:408] conv0 <- data
I0428 20:27:25.941659  3037 net.cpp:382] conv0 -> conv0
I0428 20:27:26.232458  3037 net.cpp:124] Setting up conv0
I0428 20:27:26.232486  3037 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:26.232491  3037 net.cpp:139] Memory required for data: 14946560
I0428 20:27:26.232523  3037 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:26.232537  3037 net.cpp:86] Creating Layer pool0
I0428 20:27:26.232542  3037 net.cpp:408] pool0 <- conv0
I0428 20:27:26.232547  3037 net.cpp:382] pool0 -> pool0
I0428 20:27:26.232597  3037 net.cpp:124] Setting up pool0
I0428 20:27:26.232604  3037 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:26.232606  3037 net.cpp:139] Memory required for data: 18632960
I0428 20:27:26.232610  3037 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:26.232622  3037 net.cpp:86] Creating Layer conv1
I0428 20:27:26.232625  3037 net.cpp:408] conv1 <- pool0
I0428 20:27:26.232630  3037 net.cpp:382] conv1 -> conv1
I0428 20:27:26.235674  3037 net.cpp:124] Setting up conv1
I0428 20:27:26.235690  3037 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:26.235695  3037 net.cpp:139] Memory required for data: 18714880
I0428 20:27:26.235705  3037 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:26.235713  3037 net.cpp:86] Creating Layer pool1
I0428 20:27:26.235718  3037 net.cpp:408] pool1 <- conv1
I0428 20:27:26.235723  3037 net.cpp:382] pool1 -> pool1
I0428 20:27:26.235764  3037 net.cpp:124] Setting up pool1
I0428 20:27:26.235769  3037 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:26.235772  3037 net.cpp:139] Memory required for data: 18735360
I0428 20:27:26.235775  3037 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:26.235783  3037 net.cpp:86] Creating Layer ip1
I0428 20:27:26.235787  3037 net.cpp:408] ip1 <- pool1
I0428 20:27:26.235792  3037 net.cpp:382] ip1 -> ip1
I0428 20:27:26.235916  3037 net.cpp:124] Setting up ip1
I0428 20:27:26.235925  3037 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:27:26.235929  3037 net.cpp:139] Memory required for data: 18741760
I0428 20:27:26.235936  3037 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:26.235942  3037 net.cpp:86] Creating Layer relu1
I0428 20:27:26.235945  3037 net.cpp:408] relu1 <- ip1
I0428 20:27:26.235950  3037 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:26.236135  3037 net.cpp:124] Setting up relu1
I0428 20:27:26.236146  3037 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:27:26.236150  3037 net.cpp:139] Memory required for data: 18748160
I0428 20:27:26.236153  3037 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:26.236160  3037 net.cpp:86] Creating Layer ip2
I0428 20:27:26.236163  3037 net.cpp:408] ip2 <- ip1
I0428 20:27:26.236168  3037 net.cpp:382] ip2 -> ip2
I0428 20:27:26.236266  3037 net.cpp:124] Setting up ip2
I0428 20:27:26.236274  3037 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:26.236277  3037 net.cpp:139] Memory required for data: 18750720
I0428 20:27:26.236284  3037 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:26.236289  3037 net.cpp:86] Creating Layer relu2
I0428 20:27:26.236294  3037 net.cpp:408] relu2 <- ip2
I0428 20:27:26.236297  3037 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:26.237100  3037 net.cpp:124] Setting up relu2
I0428 20:27:26.237115  3037 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:26.237119  3037 net.cpp:139] Memory required for data: 18753280
I0428 20:27:26.237123  3037 layer_factory.hpp:77] Creating layer loss
I0428 20:27:26.237129  3037 net.cpp:86] Creating Layer loss
I0428 20:27:26.237133  3037 net.cpp:408] loss <- ip2
I0428 20:27:26.237138  3037 net.cpp:408] loss <- label
I0428 20:27:26.237143  3037 net.cpp:382] loss -> loss
I0428 20:27:26.237165  3037 layer_factory.hpp:77] Creating layer loss
I0428 20:27:26.237454  3037 net.cpp:124] Setting up loss
I0428 20:27:26.237467  3037 net.cpp:131] Top shape: (1)
I0428 20:27:26.237470  3037 net.cpp:134]     with loss weight 1
I0428 20:27:26.237484  3037 net.cpp:139] Memory required for data: 18753284
I0428 20:27:26.237488  3037 net.cpp:200] loss needs backward computation.
I0428 20:27:26.237493  3037 net.cpp:200] relu2 needs backward computation.
I0428 20:27:26.237495  3037 net.cpp:200] ip2 needs backward computation.
I0428 20:27:26.237498  3037 net.cpp:200] relu1 needs backward computation.
I0428 20:27:26.237501  3037 net.cpp:200] ip1 needs backward computation.
I0428 20:27:26.237515  3037 net.cpp:200] pool1 needs backward computation.
I0428 20:27:26.237519  3037 net.cpp:200] conv1 needs backward computation.
I0428 20:27:26.237522  3037 net.cpp:200] pool0 needs backward computation.
I0428 20:27:26.237526  3037 net.cpp:200] conv0 needs backward computation.
I0428 20:27:26.237529  3037 net.cpp:202] mnist does not need backward computation.
I0428 20:27:26.237532  3037 net.cpp:244] This network produces output loss
I0428 20:27:26.237541  3037 net.cpp:257] Network initialization done.
I0428 20:27:26.237845  3037 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1488.prototxt
I0428 20:27:26.237872  3037 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:26.237958  3037 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:26.238024  3037 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:26.238077  3037 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:26.238098  3037 net.cpp:86] Creating Layer mnist
I0428 20:27:26.238106  3037 net.cpp:382] mnist -> data
I0428 20:27:26.238119  3037 net.cpp:382] mnist -> label
I0428 20:27:26.238212  3037 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:26.240259  3037 net.cpp:124] Setting up mnist
I0428 20:27:26.240274  3037 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:26.240279  3037 net.cpp:131] Top shape: 100 (100)
I0428 20:27:26.240283  3037 net.cpp:139] Memory required for data: 314000
I0428 20:27:26.240288  3037 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:26.240298  3037 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:26.240301  3037 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:26.240306  3037 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:26.240314  3037 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:26.240375  3037 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:26.240381  3037 net.cpp:131] Top shape: 100 (100)
I0428 20:27:26.240384  3037 net.cpp:131] Top shape: 100 (100)
I0428 20:27:26.240387  3037 net.cpp:139] Memory required for data: 314800
I0428 20:27:26.240391  3037 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:26.240399  3037 net.cpp:86] Creating Layer conv0
I0428 20:27:26.240402  3037 net.cpp:408] conv0 <- data
I0428 20:27:26.240407  3037 net.cpp:382] conv0 -> conv0
I0428 20:27:26.242192  3037 net.cpp:124] Setting up conv0
I0428 20:27:26.242207  3037 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:26.242210  3037 net.cpp:139] Memory required for data: 23354800
I0428 20:27:26.242220  3037 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:26.242228  3037 net.cpp:86] Creating Layer pool0
I0428 20:27:26.242230  3037 net.cpp:408] pool0 <- conv0
I0428 20:27:26.242235  3037 net.cpp:382] pool0 -> pool0
I0428 20:27:26.242272  3037 net.cpp:124] Setting up pool0
I0428 20:27:26.242277  3037 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:26.242280  3037 net.cpp:139] Memory required for data: 29114800
I0428 20:27:26.242283  3037 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:26.242291  3037 net.cpp:86] Creating Layer conv1
I0428 20:27:26.242295  3037 net.cpp:408] conv1 <- pool0
I0428 20:27:26.242300  3037 net.cpp:382] conv1 -> conv1
I0428 20:27:26.243937  3037 net.cpp:124] Setting up conv1
I0428 20:27:26.243950  3037 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:26.243954  3037 net.cpp:139] Memory required for data: 29242800
I0428 20:27:26.243963  3037 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:26.243971  3037 net.cpp:86] Creating Layer pool1
I0428 20:27:26.243975  3037 net.cpp:408] pool1 <- conv1
I0428 20:27:26.243980  3037 net.cpp:382] pool1 -> pool1
I0428 20:27:26.244036  3037 net.cpp:124] Setting up pool1
I0428 20:27:26.244055  3037 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:26.244060  3037 net.cpp:139] Memory required for data: 29274800
I0428 20:27:26.244065  3037 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:26.244083  3037 net.cpp:86] Creating Layer ip1
I0428 20:27:26.244096  3037 net.cpp:408] ip1 <- pool1
I0428 20:27:26.244107  3037 net.cpp:382] ip1 -> ip1
I0428 20:27:26.244238  3037 net.cpp:124] Setting up ip1
I0428 20:27:26.244248  3037 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:27:26.244252  3037 net.cpp:139] Memory required for data: 29284800
I0428 20:27:26.244261  3037 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:26.244266  3037 net.cpp:86] Creating Layer relu1
I0428 20:27:26.244269  3037 net.cpp:408] relu1 <- ip1
I0428 20:27:26.244276  3037 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:26.244451  3037 net.cpp:124] Setting up relu1
I0428 20:27:26.244460  3037 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:27:26.244463  3037 net.cpp:139] Memory required for data: 29294800
I0428 20:27:26.244467  3037 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:26.244475  3037 net.cpp:86] Creating Layer ip2
I0428 20:27:26.244478  3037 net.cpp:408] ip2 <- ip1
I0428 20:27:26.244483  3037 net.cpp:382] ip2 -> ip2
I0428 20:27:26.244587  3037 net.cpp:124] Setting up ip2
I0428 20:27:26.244596  3037 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:26.244598  3037 net.cpp:139] Memory required for data: 29298800
I0428 20:27:26.244603  3037 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:26.244616  3037 net.cpp:86] Creating Layer relu2
I0428 20:27:26.244618  3037 net.cpp:408] relu2 <- ip2
I0428 20:27:26.244624  3037 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:26.244797  3037 net.cpp:124] Setting up relu2
I0428 20:27:26.244807  3037 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:26.244817  3037 net.cpp:139] Memory required for data: 29302800
I0428 20:27:26.244822  3037 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:27:26.244830  3037 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:27:26.244833  3037 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:27:26.244840  3037 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:27:26.244858  3037 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:27:26.244897  3037 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:27:26.244904  3037 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:26.244907  3037 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:26.244910  3037 net.cpp:139] Memory required for data: 29310800
I0428 20:27:26.244912  3037 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:26.244917  3037 net.cpp:86] Creating Layer accuracy
I0428 20:27:26.244920  3037 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:27:26.244925  3037 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:26.244935  3037 net.cpp:382] accuracy -> accuracy
I0428 20:27:26.244946  3037 net.cpp:124] Setting up accuracy
I0428 20:27:26.244953  3037 net.cpp:131] Top shape: (1)
I0428 20:27:26.244958  3037 net.cpp:139] Memory required for data: 29310804
I0428 20:27:26.244963  3037 layer_factory.hpp:77] Creating layer loss
I0428 20:27:26.244971  3037 net.cpp:86] Creating Layer loss
I0428 20:27:26.244976  3037 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:27:26.244982  3037 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:26.244990  3037 net.cpp:382] loss -> loss
I0428 20:27:26.245002  3037 layer_factory.hpp:77] Creating layer loss
I0428 20:27:26.245353  3037 net.cpp:124] Setting up loss
I0428 20:27:26.245364  3037 net.cpp:131] Top shape: (1)
I0428 20:27:26.245368  3037 net.cpp:134]     with loss weight 1
I0428 20:27:26.245375  3037 net.cpp:139] Memory required for data: 29310808
I0428 20:27:26.245378  3037 net.cpp:200] loss needs backward computation.
I0428 20:27:26.245383  3037 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:26.245388  3037 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:27:26.245390  3037 net.cpp:200] relu2 needs backward computation.
I0428 20:27:26.245393  3037 net.cpp:200] ip2 needs backward computation.
I0428 20:27:26.245396  3037 net.cpp:200] relu1 needs backward computation.
I0428 20:27:26.245399  3037 net.cpp:200] ip1 needs backward computation.
I0428 20:27:26.245403  3037 net.cpp:200] pool1 needs backward computation.
I0428 20:27:26.245405  3037 net.cpp:200] conv1 needs backward computation.
I0428 20:27:26.245409  3037 net.cpp:200] pool0 needs backward computation.
I0428 20:27:26.245411  3037 net.cpp:200] conv0 needs backward computation.
I0428 20:27:26.245415  3037 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:26.245419  3037 net.cpp:202] mnist does not need backward computation.
I0428 20:27:26.245421  3037 net.cpp:244] This network produces output accuracy
I0428 20:27:26.245425  3037 net.cpp:244] This network produces output loss
I0428 20:27:26.245436  3037 net.cpp:257] Network initialization done.
I0428 20:27:26.245476  3037 solver.cpp:56] Solver scaffolding done.
I0428 20:27:26.245754  3037 caffe.cpp:248] Starting Optimization
I0428 20:27:26.245761  3037 solver.cpp:273] Solving LeNet
I0428 20:27:26.245772  3037 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:26.245944  3037 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:26.307137  3037 blocking_queue.cpp:49] Waiting for data
I0428 20:27:26.341739  3044 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:26.343101  3037 solver.cpp:398]     Test net output #0: accuracy = 0.0997
I0428 20:27:26.343133  3037 solver.cpp:398]     Test net output #1: loss = 2.32398 (* 1 = 2.32398 loss)
I0428 20:27:26.347579  3037 solver.cpp:219] Iteration 0 (-7.49975e-31 iter/s, 0.101778s/100 iters), loss = 2.32739
I0428 20:27:26.347604  3037 solver.cpp:238]     Train net output #0: loss = 2.32739 (* 1 = 2.32739 loss)
I0428 20:27:26.347614  3037 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:26.553169  3037 solver.cpp:219] Iteration 100 (486.506 iter/s, 0.205548s/100 iters), loss = 0.658469
I0428 20:27:26.553210  3037 solver.cpp:238]     Train net output #0: loss = 0.658469 (* 1 = 0.658469 loss)
I0428 20:27:26.553231  3037 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:26.762392  3037 solver.cpp:219] Iteration 200 (478.065 iter/s, 0.209177s/100 iters), loss = 0.544617
I0428 20:27:26.762435  3037 solver.cpp:238]     Train net output #0: loss = 0.544617 (* 1 = 0.544617 loss)
I0428 20:27:26.762445  3037 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:26.956069  3037 solver.cpp:219] Iteration 300 (516.467 iter/s, 0.193623s/100 iters), loss = 0.317316
I0428 20:27:26.956096  3037 solver.cpp:238]     Train net output #0: loss = 0.317316 (* 1 = 0.317316 loss)
I0428 20:27:26.956102  3037 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:27.157620  3037 solver.cpp:219] Iteration 400 (496.261 iter/s, 0.201507s/100 iters), loss = 0.18581
I0428 20:27:27.157650  3037 solver.cpp:238]     Train net output #0: loss = 0.18581 (* 1 = 0.18581 loss)
I0428 20:27:27.157658  3037 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:27.353844  3037 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:27.449528  3044 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:27.451854  3037 solver.cpp:398]     Test net output #0: accuracy = 0.9492
I0428 20:27:27.451877  3037 solver.cpp:398]     Test net output #1: loss = 0.159075 (* 1 = 0.159075 loss)
I0428 20:27:27.453789  3037 solver.cpp:219] Iteration 500 (337.703 iter/s, 0.296118s/100 iters), loss = 0.180534
I0428 20:27:27.453815  3037 solver.cpp:238]     Train net output #0: loss = 0.180534 (* 1 = 0.180534 loss)
I0428 20:27:27.453822  3037 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:27.655413  3037 solver.cpp:219] Iteration 600 (496.09 iter/s, 0.201577s/100 iters), loss = 0.147905
I0428 20:27:27.655460  3037 solver.cpp:238]     Train net output #0: loss = 0.147905 (* 1 = 0.147905 loss)
I0428 20:27:27.655470  3037 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:27.863665  3037 solver.cpp:219] Iteration 700 (480.339 iter/s, 0.208186s/100 iters), loss = 0.178302
I0428 20:27:27.863719  3037 solver.cpp:238]     Train net output #0: loss = 0.178302 (* 1 = 0.178302 loss)
I0428 20:27:27.863731  3037 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:28.073748  3037 solver.cpp:219] Iteration 800 (476.161 iter/s, 0.210013s/100 iters), loss = 0.47115
I0428 20:27:28.073791  3037 solver.cpp:238]     Train net output #0: loss = 0.47115 (* 1 = 0.47115 loss)
I0428 20:27:28.073802  3037 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:28.288548  3037 solver.cpp:219] Iteration 900 (465.686 iter/s, 0.214737s/100 iters), loss = 0.211806
I0428 20:27:28.288599  3037 solver.cpp:238]     Train net output #0: loss = 0.211805 (* 1 = 0.211805 loss)
I0428 20:27:28.288610  3037 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:28.358790  3043 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:28.494721  3037 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:28.496564  3037 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:28.497812  3037 solver.cpp:311] Iteration 1000, loss = 0.144298
I0428 20:27:28.497854  3037 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:28.601536  3044 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:28.605020  3037 solver.cpp:398]     Test net output #0: accuracy = 0.9659
I0428 20:27:28.605047  3037 solver.cpp:398]     Test net output #1: loss = 0.104683 (* 1 = 0.104683 loss)
I0428 20:27:28.605053  3037 solver.cpp:316] Optimization Done.
I0428 20:27:28.605057  3037 caffe.cpp:259] Optimization Done.
