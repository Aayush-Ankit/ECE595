I0428 19:49:19.137670 26731 caffe.cpp:218] Using GPUs 0
I0428 19:49:19.170475 26731 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:19.647394 26731 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test571.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:19.647552 26731 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test571.prototxt
I0428 19:49:19.647943 26731 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:19.647976 26731 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:19.648056 26731 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:19.648119 26731 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:19.648205 26731 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:19.648224 26731 net.cpp:86] Creating Layer mnist
I0428 19:49:19.648231 26731 net.cpp:382] mnist -> data
I0428 19:49:19.648249 26731 net.cpp:382] mnist -> label
I0428 19:49:19.649238 26731 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:19.651530 26731 net.cpp:124] Setting up mnist
I0428 19:49:19.651578 26731 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:19.651583 26731 net.cpp:131] Top shape: 64 (64)
I0428 19:49:19.651587 26731 net.cpp:139] Memory required for data: 200960
I0428 19:49:19.651592 26731 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:19.651607 26731 net.cpp:86] Creating Layer conv0
I0428 19:49:19.651624 26731 net.cpp:408] conv0 <- data
I0428 19:49:19.651634 26731 net.cpp:382] conv0 -> conv0
I0428 19:49:19.890732 26731 net.cpp:124] Setting up conv0
I0428 19:49:19.890772 26731 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:19.890776 26731 net.cpp:139] Memory required for data: 938240
I0428 19:49:19.890791 26731 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:19.890805 26731 net.cpp:86] Creating Layer pool0
I0428 19:49:19.890810 26731 net.cpp:408] pool0 <- conv0
I0428 19:49:19.890830 26731 net.cpp:382] pool0 -> pool0
I0428 19:49:19.890879 26731 net.cpp:124] Setting up pool0
I0428 19:49:19.890892 26731 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:19.890894 26731 net.cpp:139] Memory required for data: 1122560
I0428 19:49:19.890897 26731 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:19.890908 26731 net.cpp:86] Creating Layer conv1
I0428 19:49:19.890911 26731 net.cpp:408] conv1 <- pool0
I0428 19:49:19.890918 26731 net.cpp:382] conv1 -> conv1
I0428 19:49:19.892789 26731 net.cpp:124] Setting up conv1
I0428 19:49:19.892827 26731 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:19.892832 26731 net.cpp:139] Memory required for data: 1204480
I0428 19:49:19.892840 26731 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:19.892850 26731 net.cpp:86] Creating Layer pool1
I0428 19:49:19.892853 26731 net.cpp:408] pool1 <- conv1
I0428 19:49:19.892858 26731 net.cpp:382] pool1 -> pool1
I0428 19:49:19.892900 26731 net.cpp:124] Setting up pool1
I0428 19:49:19.892906 26731 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:19.892909 26731 net.cpp:139] Memory required for data: 1224960
I0428 19:49:19.892911 26731 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:19.892920 26731 net.cpp:86] Creating Layer ip1
I0428 19:49:19.892922 26731 net.cpp:408] ip1 <- pool1
I0428 19:49:19.892930 26731 net.cpp:382] ip1 -> ip1
I0428 19:49:19.893962 26731 net.cpp:124] Setting up ip1
I0428 19:49:19.893990 26731 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:19.893992 26731 net.cpp:139] Memory required for data: 1231360
I0428 19:49:19.894001 26731 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:19.894022 26731 net.cpp:86] Creating Layer relu1
I0428 19:49:19.894026 26731 net.cpp:408] relu1 <- ip1
I0428 19:49:19.894032 26731 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:19.894209 26731 net.cpp:124] Setting up relu1
I0428 19:49:19.894218 26731 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:19.894222 26731 net.cpp:139] Memory required for data: 1237760
I0428 19:49:19.894224 26731 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:19.894232 26731 net.cpp:86] Creating Layer ip2
I0428 19:49:19.894235 26731 net.cpp:408] ip2 <- ip1
I0428 19:49:19.894239 26731 net.cpp:382] ip2 -> ip2
I0428 19:49:19.894346 26731 net.cpp:124] Setting up ip2
I0428 19:49:19.894354 26731 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:19.894356 26731 net.cpp:139] Memory required for data: 1244160
I0428 19:49:19.894362 26731 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:19.894368 26731 net.cpp:86] Creating Layer relu2
I0428 19:49:19.894371 26731 net.cpp:408] relu2 <- ip2
I0428 19:49:19.894376 26731 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:19.895148 26731 net.cpp:124] Setting up relu2
I0428 19:49:19.895159 26731 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:19.895179 26731 net.cpp:139] Memory required for data: 1250560
I0428 19:49:19.895181 26731 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:19.895190 26731 net.cpp:86] Creating Layer ip3
I0428 19:49:19.895192 26731 net.cpp:408] ip3 <- ip2
I0428 19:49:19.895198 26731 net.cpp:382] ip3 -> ip3
I0428 19:49:19.895313 26731 net.cpp:124] Setting up ip3
I0428 19:49:19.895319 26731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:19.895323 26731 net.cpp:139] Memory required for data: 1253120
I0428 19:49:19.895330 26731 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:19.895335 26731 net.cpp:86] Creating Layer relu3
I0428 19:49:19.895339 26731 net.cpp:408] relu3 <- ip3
I0428 19:49:19.895342 26731 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:19.895530 26731 net.cpp:124] Setting up relu3
I0428 19:49:19.895539 26731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:19.895542 26731 net.cpp:139] Memory required for data: 1255680
I0428 19:49:19.895545 26731 layer_factory.hpp:77] Creating layer loss
I0428 19:49:19.895552 26731 net.cpp:86] Creating Layer loss
I0428 19:49:19.895555 26731 net.cpp:408] loss <- ip3
I0428 19:49:19.895560 26731 net.cpp:408] loss <- label
I0428 19:49:19.895565 26731 net.cpp:382] loss -> loss
I0428 19:49:19.895578 26731 layer_factory.hpp:77] Creating layer loss
I0428 19:49:19.895820 26731 net.cpp:124] Setting up loss
I0428 19:49:19.895829 26731 net.cpp:131] Top shape: (1)
I0428 19:49:19.895833 26731 net.cpp:134]     with loss weight 1
I0428 19:49:19.895846 26731 net.cpp:139] Memory required for data: 1255684
I0428 19:49:19.895850 26731 net.cpp:200] loss needs backward computation.
I0428 19:49:19.895855 26731 net.cpp:200] relu3 needs backward computation.
I0428 19:49:19.895859 26731 net.cpp:200] ip3 needs backward computation.
I0428 19:49:19.895861 26731 net.cpp:200] relu2 needs backward computation.
I0428 19:49:19.895864 26731 net.cpp:200] ip2 needs backward computation.
I0428 19:49:19.895867 26731 net.cpp:200] relu1 needs backward computation.
I0428 19:49:19.895869 26731 net.cpp:200] ip1 needs backward computation.
I0428 19:49:19.895872 26731 net.cpp:200] pool1 needs backward computation.
I0428 19:49:19.895875 26731 net.cpp:200] conv1 needs backward computation.
I0428 19:49:19.895879 26731 net.cpp:200] pool0 needs backward computation.
I0428 19:49:19.895897 26731 net.cpp:200] conv0 needs backward computation.
I0428 19:49:19.895900 26731 net.cpp:202] mnist does not need backward computation.
I0428 19:49:19.895903 26731 net.cpp:244] This network produces output loss
I0428 19:49:19.895929 26731 net.cpp:257] Network initialization done.
I0428 19:49:19.896320 26731 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test571.prototxt
I0428 19:49:19.896360 26731 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:19.896447 26731 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:19.896526 26731 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:19.896567 26731 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:19.896579 26731 net.cpp:86] Creating Layer mnist
I0428 19:49:19.896585 26731 net.cpp:382] mnist -> data
I0428 19:49:19.896592 26731 net.cpp:382] mnist -> label
I0428 19:49:19.896674 26731 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:19.898744 26731 net.cpp:124] Setting up mnist
I0428 19:49:19.898773 26731 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:19.898793 26731 net.cpp:131] Top shape: 100 (100)
I0428 19:49:19.898797 26731 net.cpp:139] Memory required for data: 314000
I0428 19:49:19.898800 26731 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:19.898807 26731 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:19.898811 26731 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:19.898818 26731 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:19.898824 26731 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:19.898907 26731 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:19.898916 26731 net.cpp:131] Top shape: 100 (100)
I0428 19:49:19.898918 26731 net.cpp:131] Top shape: 100 (100)
I0428 19:49:19.898921 26731 net.cpp:139] Memory required for data: 314800
I0428 19:49:19.898924 26731 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:19.898936 26731 net.cpp:86] Creating Layer conv0
I0428 19:49:19.898938 26731 net.cpp:408] conv0 <- data
I0428 19:49:19.898943 26731 net.cpp:382] conv0 -> conv0
I0428 19:49:19.900676 26731 net.cpp:124] Setting up conv0
I0428 19:49:19.900704 26731 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:19.900707 26731 net.cpp:139] Memory required for data: 1466800
I0428 19:49:19.900717 26731 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:19.900724 26731 net.cpp:86] Creating Layer pool0
I0428 19:49:19.900727 26731 net.cpp:408] pool0 <- conv0
I0428 19:49:19.900732 26731 net.cpp:382] pool0 -> pool0
I0428 19:49:19.900769 26731 net.cpp:124] Setting up pool0
I0428 19:49:19.900775 26731 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:19.900777 26731 net.cpp:139] Memory required for data: 1754800
I0428 19:49:19.900780 26731 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:19.900789 26731 net.cpp:86] Creating Layer conv1
I0428 19:49:19.900792 26731 net.cpp:408] conv1 <- pool0
I0428 19:49:19.900799 26731 net.cpp:382] conv1 -> conv1
I0428 19:49:19.903106 26731 net.cpp:124] Setting up conv1
I0428 19:49:19.903120 26731 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:19.903123 26731 net.cpp:139] Memory required for data: 1882800
I0428 19:49:19.903131 26731 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:19.903137 26731 net.cpp:86] Creating Layer pool1
I0428 19:49:19.903141 26731 net.cpp:408] pool1 <- conv1
I0428 19:49:19.903146 26731 net.cpp:382] pool1 -> pool1
I0428 19:49:19.903223 26731 net.cpp:124] Setting up pool1
I0428 19:49:19.903229 26731 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:19.903233 26731 net.cpp:139] Memory required for data: 1914800
I0428 19:49:19.903235 26731 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:19.903241 26731 net.cpp:86] Creating Layer ip1
I0428 19:49:19.903244 26731 net.cpp:408] ip1 <- pool1
I0428 19:49:19.903250 26731 net.cpp:382] ip1 -> ip1
I0428 19:49:19.903404 26731 net.cpp:124] Setting up ip1
I0428 19:49:19.903415 26731 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:19.903429 26731 net.cpp:139] Memory required for data: 1924800
I0428 19:49:19.903436 26731 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:19.903442 26731 net.cpp:86] Creating Layer relu1
I0428 19:49:19.903445 26731 net.cpp:408] relu1 <- ip1
I0428 19:49:19.903450 26731 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:19.903645 26731 net.cpp:124] Setting up relu1
I0428 19:49:19.903656 26731 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:19.903659 26731 net.cpp:139] Memory required for data: 1934800
I0428 19:49:19.903662 26731 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:19.903671 26731 net.cpp:86] Creating Layer ip2
I0428 19:49:19.903692 26731 net.cpp:408] ip2 <- ip1
I0428 19:49:19.903698 26731 net.cpp:382] ip2 -> ip2
I0428 19:49:19.903808 26731 net.cpp:124] Setting up ip2
I0428 19:49:19.903815 26731 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:19.903818 26731 net.cpp:139] Memory required for data: 1944800
I0428 19:49:19.903825 26731 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:19.903830 26731 net.cpp:86] Creating Layer relu2
I0428 19:49:19.903832 26731 net.cpp:408] relu2 <- ip2
I0428 19:49:19.903837 26731 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:19.904006 26731 net.cpp:124] Setting up relu2
I0428 19:49:19.904014 26731 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:19.904017 26731 net.cpp:139] Memory required for data: 1954800
I0428 19:49:19.904021 26731 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:19.904026 26731 net.cpp:86] Creating Layer ip3
I0428 19:49:19.904031 26731 net.cpp:408] ip3 <- ip2
I0428 19:49:19.904036 26731 net.cpp:382] ip3 -> ip3
I0428 19:49:19.904134 26731 net.cpp:124] Setting up ip3
I0428 19:49:19.904140 26731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:19.904144 26731 net.cpp:139] Memory required for data: 1958800
I0428 19:49:19.904150 26731 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:19.904155 26731 net.cpp:86] Creating Layer relu3
I0428 19:49:19.904158 26731 net.cpp:408] relu3 <- ip3
I0428 19:49:19.904163 26731 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:19.905179 26731 net.cpp:124] Setting up relu3
I0428 19:49:19.905191 26731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:19.905210 26731 net.cpp:139] Memory required for data: 1962800
I0428 19:49:19.905213 26731 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:19.905221 26731 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:19.905231 26731 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:19.905236 26731 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:19.905242 26731 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:19.905283 26731 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:19.905288 26731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:19.905293 26731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:19.905295 26731 net.cpp:139] Memory required for data: 1970800
I0428 19:49:19.905298 26731 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:19.905304 26731 net.cpp:86] Creating Layer accuracy
I0428 19:49:19.905308 26731 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:19.905311 26731 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:19.905318 26731 net.cpp:382] accuracy -> accuracy
I0428 19:49:19.905324 26731 net.cpp:124] Setting up accuracy
I0428 19:49:19.905328 26731 net.cpp:131] Top shape: (1)
I0428 19:49:19.905331 26731 net.cpp:139] Memory required for data: 1970804
I0428 19:49:19.905334 26731 layer_factory.hpp:77] Creating layer loss
I0428 19:49:19.905339 26731 net.cpp:86] Creating Layer loss
I0428 19:49:19.905342 26731 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:19.905345 26731 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:19.905350 26731 net.cpp:382] loss -> loss
I0428 19:49:19.905356 26731 layer_factory.hpp:77] Creating layer loss
I0428 19:49:19.905603 26731 net.cpp:124] Setting up loss
I0428 19:49:19.905616 26731 net.cpp:131] Top shape: (1)
I0428 19:49:19.905620 26731 net.cpp:134]     with loss weight 1
I0428 19:49:19.905627 26731 net.cpp:139] Memory required for data: 1970808
I0428 19:49:19.905639 26731 net.cpp:200] loss needs backward computation.
I0428 19:49:19.905643 26731 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:19.905648 26731 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:19.905652 26731 net.cpp:200] relu3 needs backward computation.
I0428 19:49:19.905655 26731 net.cpp:200] ip3 needs backward computation.
I0428 19:49:19.905658 26731 net.cpp:200] relu2 needs backward computation.
I0428 19:49:19.905660 26731 net.cpp:200] ip2 needs backward computation.
I0428 19:49:19.905663 26731 net.cpp:200] relu1 needs backward computation.
I0428 19:49:19.905666 26731 net.cpp:200] ip1 needs backward computation.
I0428 19:49:19.905669 26731 net.cpp:200] pool1 needs backward computation.
I0428 19:49:19.905673 26731 net.cpp:200] conv1 needs backward computation.
I0428 19:49:19.905678 26731 net.cpp:200] pool0 needs backward computation.
I0428 19:49:19.905680 26731 net.cpp:200] conv0 needs backward computation.
I0428 19:49:19.905683 26731 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:19.905702 26731 net.cpp:202] mnist does not need backward computation.
I0428 19:49:19.905705 26731 net.cpp:244] This network produces output accuracy
I0428 19:49:19.905709 26731 net.cpp:244] This network produces output loss
I0428 19:49:19.905720 26731 net.cpp:257] Network initialization done.
I0428 19:49:19.905777 26731 solver.cpp:56] Solver scaffolding done.
I0428 19:49:19.906185 26731 caffe.cpp:248] Starting Optimization
I0428 19:49:19.906191 26731 solver.cpp:273] Solving LeNet
I0428 19:49:19.906193 26731 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:19.907117 26731 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:19.910770 26731 blocking_queue.cpp:49] Waiting for data
I0428 19:49:19.981992 26738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:19.982516 26731 solver.cpp:398]     Test net output #0: accuracy = 0.161
I0428 19:49:19.982537 26731 solver.cpp:398]     Test net output #1: loss = 2.29331 (* 1 = 2.29331 loss)
I0428 19:49:19.984490 26731 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782434s/100 iters), loss = 2.29057
I0428 19:49:19.984529 26731 solver.cpp:238]     Train net output #0: loss = 2.29057 (* 1 = 2.29057 loss)
I0428 19:49:19.984540 26731 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:20.060958 26731 solver.cpp:219] Iteration 100 (1308.32 iter/s, 0.0764339s/100 iters), loss = 0.481294
I0428 19:49:20.060984 26731 solver.cpp:238]     Train net output #0: loss = 0.481294 (* 1 = 0.481294 loss)
I0428 19:49:20.060991 26731 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:20.135502 26731 solver.cpp:219] Iteration 200 (1342.1 iter/s, 0.0745103s/100 iters), loss = 0.266872
I0428 19:49:20.135526 26731 solver.cpp:238]     Train net output #0: loss = 0.266872 (* 1 = 0.266872 loss)
I0428 19:49:20.135548 26731 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:20.208895 26731 solver.cpp:219] Iteration 300 (1363.15 iter/s, 0.0733594s/100 iters), loss = 0.393453
I0428 19:49:20.208920 26731 solver.cpp:238]     Train net output #0: loss = 0.393453 (* 1 = 0.393453 loss)
I0428 19:49:20.208942 26731 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:20.282045 26731 solver.cpp:219] Iteration 400 (1367.7 iter/s, 0.0731156s/100 iters), loss = 0.150526
I0428 19:49:20.282068 26731 solver.cpp:238]     Train net output #0: loss = 0.150526 (* 1 = 0.150526 loss)
I0428 19:49:20.282088 26731 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:20.355078 26731 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:20.430392 26738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:20.430868 26731 solver.cpp:398]     Test net output #0: accuracy = 0.9444
I0428 19:49:20.430888 26731 solver.cpp:398]     Test net output #1: loss = 0.182133 (* 1 = 0.182133 loss)
I0428 19:49:20.431740 26731 solver.cpp:219] Iteration 500 (668.188 iter/s, 0.149659s/100 iters), loss = 0.196892
I0428 19:49:20.431766 26731 solver.cpp:238]     Train net output #0: loss = 0.196892 (* 1 = 0.196892 loss)
I0428 19:49:20.431790 26731 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:20.507604 26731 solver.cpp:219] Iteration 600 (1318.84 iter/s, 0.0758241s/100 iters), loss = 0.185224
I0428 19:49:20.507630 26731 solver.cpp:238]     Train net output #0: loss = 0.185224 (* 1 = 0.185224 loss)
I0428 19:49:20.507639 26731 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:20.601995 26731 solver.cpp:219] Iteration 700 (1059.86 iter/s, 0.0943523s/100 iters), loss = 0.244483
I0428 19:49:20.602033 26731 solver.cpp:238]     Train net output #0: loss = 0.244483 (* 1 = 0.244483 loss)
I0428 19:49:20.602044 26731 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:20.683850 26731 solver.cpp:219] Iteration 800 (1222.38 iter/s, 0.0818074s/100 iters), loss = 0.236113
I0428 19:49:20.683879 26731 solver.cpp:238]     Train net output #0: loss = 0.236113 (* 1 = 0.236113 loss)
I0428 19:49:20.683889 26731 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:20.761696 26731 solver.cpp:219] Iteration 900 (1285.22 iter/s, 0.0778076s/100 iters), loss = 0.252478
I0428 19:49:20.761728 26731 solver.cpp:238]     Train net output #0: loss = 0.252478 (* 1 = 0.252478 loss)
I0428 19:49:20.761736 26731 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:20.787946 26737 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:20.839941 26731 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:20.840682 26731 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:20.841202 26731 solver.cpp:311] Iteration 1000, loss = 0.160577
I0428 19:49:20.841222 26731 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:20.895907 26738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:20.896430 26731 solver.cpp:398]     Test net output #0: accuracy = 0.9624
I0428 19:49:20.896456 26731 solver.cpp:398]     Test net output #1: loss = 0.117187 (* 1 = 0.117187 loss)
I0428 19:49:20.896466 26731 solver.cpp:316] Optimization Done.
I0428 19:49:20.896469 26731 caffe.cpp:259] Optimization Done.
