I0428 20:16:39.891741   706 caffe.cpp:218] Using GPUs 0
I0428 20:16:39.932019   706 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:16:40.468031   706 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1276.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:16:40.468169   706 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1276.prototxt
I0428 20:16:40.468585   706 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:16:40.468603   706 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:16:40.468708   706 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:40.468786   706 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:40.468895   706 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:16:40.468920   706 net.cpp:86] Creating Layer mnist
I0428 20:16:40.468930   706 net.cpp:382] mnist -> data
I0428 20:16:40.468952   706 net.cpp:382] mnist -> label
I0428 20:16:40.470052   706 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:16:40.472513   706 net.cpp:124] Setting up mnist
I0428 20:16:40.472530   706 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:16:40.472537   706 net.cpp:131] Top shape: 64 (64)
I0428 20:16:40.472540   706 net.cpp:139] Memory required for data: 200960
I0428 20:16:40.472546   706 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:40.472564   706 net.cpp:86] Creating Layer conv0
I0428 20:16:40.472585   706 net.cpp:408] conv0 <- data
I0428 20:16:40.472605   706 net.cpp:382] conv0 -> conv0
I0428 20:16:40.764720   706 net.cpp:124] Setting up conv0
I0428 20:16:40.764752   706 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:16:40.764757   706 net.cpp:139] Memory required for data: 7573760
I0428 20:16:40.764775   706 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:40.764791   706 net.cpp:86] Creating Layer pool0
I0428 20:16:40.764796   706 net.cpp:408] pool0 <- conv0
I0428 20:16:40.764801   706 net.cpp:382] pool0 -> pool0
I0428 20:16:40.764866   706 net.cpp:124] Setting up pool0
I0428 20:16:40.764873   706 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:16:40.764878   706 net.cpp:139] Memory required for data: 9416960
I0428 20:16:40.764881   706 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:40.764894   706 net.cpp:86] Creating Layer conv1
I0428 20:16:40.764899   706 net.cpp:408] conv1 <- pool0
I0428 20:16:40.764904   706 net.cpp:382] conv1 -> conv1
I0428 20:16:40.768081   706 net.cpp:124] Setting up conv1
I0428 20:16:40.768098   706 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:16:40.768102   706 net.cpp:139] Memory required for data: 9498880
I0428 20:16:40.768113   706 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:40.768124   706 net.cpp:86] Creating Layer pool1
I0428 20:16:40.768128   706 net.cpp:408] pool1 <- conv1
I0428 20:16:40.768134   706 net.cpp:382] pool1 -> pool1
I0428 20:16:40.768180   706 net.cpp:124] Setting up pool1
I0428 20:16:40.768187   706 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:16:40.768190   706 net.cpp:139] Memory required for data: 9519360
I0428 20:16:40.768194   706 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:40.768203   706 net.cpp:86] Creating Layer ip1
I0428 20:16:40.768208   706 net.cpp:408] ip1 <- pool1
I0428 20:16:40.768213   706 net.cpp:382] ip1 -> ip1
I0428 20:16:40.768350   706 net.cpp:124] Setting up ip1
I0428 20:16:40.768359   706 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:40.768362   706 net.cpp:139] Memory required for data: 9525760
I0428 20:16:40.768371   706 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:40.768378   706 net.cpp:86] Creating Layer relu1
I0428 20:16:40.768383   706 net.cpp:408] relu1 <- ip1
I0428 20:16:40.768389   706 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:40.768596   706 net.cpp:124] Setting up relu1
I0428 20:16:40.768607   706 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:40.768611   706 net.cpp:139] Memory required for data: 9532160
I0428 20:16:40.768615   706 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:40.768623   706 net.cpp:86] Creating Layer ip2
I0428 20:16:40.768627   706 net.cpp:408] ip2 <- ip1
I0428 20:16:40.768632   706 net.cpp:382] ip2 -> ip2
I0428 20:16:40.768765   706 net.cpp:124] Setting up ip2
I0428 20:16:40.768774   706 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:40.768776   706 net.cpp:139] Memory required for data: 9544960
I0428 20:16:40.768782   706 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:40.768791   706 net.cpp:86] Creating Layer relu2
I0428 20:16:40.768795   706 net.cpp:408] relu2 <- ip2
I0428 20:16:40.768800   706 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:40.769664   706 net.cpp:124] Setting up relu2
I0428 20:16:40.769678   706 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:40.769682   706 net.cpp:139] Memory required for data: 9557760
I0428 20:16:40.769686   706 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:40.769695   706 net.cpp:86] Creating Layer ip3
I0428 20:16:40.769700   706 net.cpp:408] ip3 <- ip2
I0428 20:16:40.769706   706 net.cpp:382] ip3 -> ip3
I0428 20:16:40.769834   706 net.cpp:124] Setting up ip3
I0428 20:16:40.769842   706 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:40.769845   706 net.cpp:139] Memory required for data: 9560320
I0428 20:16:40.769856   706 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:40.769863   706 net.cpp:86] Creating Layer relu3
I0428 20:16:40.769866   706 net.cpp:408] relu3 <- ip3
I0428 20:16:40.769872   706 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:40.770082   706 net.cpp:124] Setting up relu3
I0428 20:16:40.770092   706 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:40.770097   706 net.cpp:139] Memory required for data: 9562880
I0428 20:16:40.770099   706 layer_factory.hpp:77] Creating layer loss
I0428 20:16:40.770112   706 net.cpp:86] Creating Layer loss
I0428 20:16:40.770115   706 net.cpp:408] loss <- ip3
I0428 20:16:40.770119   706 net.cpp:408] loss <- label
I0428 20:16:40.770128   706 net.cpp:382] loss -> loss
I0428 20:16:40.770143   706 layer_factory.hpp:77] Creating layer loss
I0428 20:16:40.770426   706 net.cpp:124] Setting up loss
I0428 20:16:40.770437   706 net.cpp:131] Top shape: (1)
I0428 20:16:40.770440   706 net.cpp:134]     with loss weight 1
I0428 20:16:40.770457   706 net.cpp:139] Memory required for data: 9562884
I0428 20:16:40.770459   706 net.cpp:200] loss needs backward computation.
I0428 20:16:40.770463   706 net.cpp:200] relu3 needs backward computation.
I0428 20:16:40.770467   706 net.cpp:200] ip3 needs backward computation.
I0428 20:16:40.770472   706 net.cpp:200] relu2 needs backward computation.
I0428 20:16:40.770474   706 net.cpp:200] ip2 needs backward computation.
I0428 20:16:40.770478   706 net.cpp:200] relu1 needs backward computation.
I0428 20:16:40.770480   706 net.cpp:200] ip1 needs backward computation.
I0428 20:16:40.770484   706 net.cpp:200] pool1 needs backward computation.
I0428 20:16:40.770488   706 net.cpp:200] conv1 needs backward computation.
I0428 20:16:40.770490   706 net.cpp:200] pool0 needs backward computation.
I0428 20:16:40.770494   706 net.cpp:200] conv0 needs backward computation.
I0428 20:16:40.770498   706 net.cpp:202] mnist does not need backward computation.
I0428 20:16:40.770501   706 net.cpp:244] This network produces output loss
I0428 20:16:40.770514   706 net.cpp:257] Network initialization done.
I0428 20:16:40.770897   706 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1276.prototxt
I0428 20:16:40.770928   706 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:16:40.771039   706 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:40.771136   706 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:40.771188   706 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:16:40.771203   706 net.cpp:86] Creating Layer mnist
I0428 20:16:40.771210   706 net.cpp:382] mnist -> data
I0428 20:16:40.771219   706 net.cpp:382] mnist -> label
I0428 20:16:40.771325   706 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:16:40.773739   706 net.cpp:124] Setting up mnist
I0428 20:16:40.773756   706 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:16:40.773761   706 net.cpp:131] Top shape: 100 (100)
I0428 20:16:40.773764   706 net.cpp:139] Memory required for data: 314000
I0428 20:16:40.773768   706 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:16:40.773777   706 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:16:40.773782   706 net.cpp:408] label_mnist_1_split <- label
I0428 20:16:40.773787   706 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:16:40.773795   706 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:16:40.773859   706 net.cpp:124] Setting up label_mnist_1_split
I0428 20:16:40.773865   706 net.cpp:131] Top shape: 100 (100)
I0428 20:16:40.773869   706 net.cpp:131] Top shape: 100 (100)
I0428 20:16:40.773872   706 net.cpp:139] Memory required for data: 314800
I0428 20:16:40.773876   706 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:40.773887   706 net.cpp:86] Creating Layer conv0
I0428 20:16:40.773890   706 net.cpp:408] conv0 <- data
I0428 20:16:40.773898   706 net.cpp:382] conv0 -> conv0
I0428 20:16:40.775889   706 net.cpp:124] Setting up conv0
I0428 20:16:40.775905   706 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:16:40.775909   706 net.cpp:139] Memory required for data: 11834800
I0428 20:16:40.775923   706 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:40.775930   706 net.cpp:86] Creating Layer pool0
I0428 20:16:40.775935   706 net.cpp:408] pool0 <- conv0
I0428 20:16:40.775940   706 net.cpp:382] pool0 -> pool0
I0428 20:16:40.775985   706 net.cpp:124] Setting up pool0
I0428 20:16:40.775992   706 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:16:40.775995   706 net.cpp:139] Memory required for data: 14714800
I0428 20:16:40.776000   706 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:40.776010   706 net.cpp:86] Creating Layer conv1
I0428 20:16:40.776013   706 net.cpp:408] conv1 <- pool0
I0428 20:16:40.776023   706 net.cpp:382] conv1 -> conv1
I0428 20:16:40.777858   706 net.cpp:124] Setting up conv1
I0428 20:16:40.777875   706 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:16:40.777879   706 net.cpp:139] Memory required for data: 14842800
I0428 20:16:40.777891   706 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:40.777899   706 net.cpp:86] Creating Layer pool1
I0428 20:16:40.777905   706 net.cpp:408] pool1 <- conv1
I0428 20:16:40.777912   706 net.cpp:382] pool1 -> pool1
I0428 20:16:40.777956   706 net.cpp:124] Setting up pool1
I0428 20:16:40.777961   706 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:16:40.777964   706 net.cpp:139] Memory required for data: 14874800
I0428 20:16:40.777969   706 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:40.777977   706 net.cpp:86] Creating Layer ip1
I0428 20:16:40.777981   706 net.cpp:408] ip1 <- pool1
I0428 20:16:40.777987   706 net.cpp:382] ip1 -> ip1
I0428 20:16:40.778120   706 net.cpp:124] Setting up ip1
I0428 20:16:40.778129   706 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:40.778146   706 net.cpp:139] Memory required for data: 14884800
I0428 20:16:40.778156   706 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:40.778163   706 net.cpp:86] Creating Layer relu1
I0428 20:16:40.778167   706 net.cpp:408] relu1 <- ip1
I0428 20:16:40.778173   706 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:40.778370   706 net.cpp:124] Setting up relu1
I0428 20:16:40.778380   706 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:40.778384   706 net.cpp:139] Memory required for data: 14894800
I0428 20:16:40.778388   706 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:40.778398   706 net.cpp:86] Creating Layer ip2
I0428 20:16:40.778403   706 net.cpp:408] ip2 <- ip1
I0428 20:16:40.778409   706 net.cpp:382] ip2 -> ip2
I0428 20:16:40.778542   706 net.cpp:124] Setting up ip2
I0428 20:16:40.778551   706 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:40.778555   706 net.cpp:139] Memory required for data: 14914800
I0428 20:16:40.778561   706 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:40.778566   706 net.cpp:86] Creating Layer relu2
I0428 20:16:40.778570   706 net.cpp:408] relu2 <- ip2
I0428 20:16:40.778574   706 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:40.778864   706 net.cpp:124] Setting up relu2
I0428 20:16:40.778874   706 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:40.778878   706 net.cpp:139] Memory required for data: 14934800
I0428 20:16:40.778882   706 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:40.778888   706 net.cpp:86] Creating Layer ip3
I0428 20:16:40.778892   706 net.cpp:408] ip3 <- ip2
I0428 20:16:40.778899   706 net.cpp:382] ip3 -> ip3
I0428 20:16:40.779026   706 net.cpp:124] Setting up ip3
I0428 20:16:40.779034   706 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:40.779038   706 net.cpp:139] Memory required for data: 14938800
I0428 20:16:40.779047   706 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:40.779053   706 net.cpp:86] Creating Layer relu3
I0428 20:16:40.779057   706 net.cpp:408] relu3 <- ip3
I0428 20:16:40.779063   706 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:40.779984   706 net.cpp:124] Setting up relu3
I0428 20:16:40.779999   706 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:40.780004   706 net.cpp:139] Memory required for data: 14942800
I0428 20:16:40.780007   706 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:16:40.780014   706 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:16:40.780017   706 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:16:40.780025   706 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:16:40.780031   706 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:16:40.780093   706 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:16:40.780102   706 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:40.780105   706 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:40.780109   706 net.cpp:139] Memory required for data: 14950800
I0428 20:16:40.780118   706 layer_factory.hpp:77] Creating layer accuracy
I0428 20:16:40.780125   706 net.cpp:86] Creating Layer accuracy
I0428 20:16:40.780129   706 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:16:40.780134   706 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:16:40.780141   706 net.cpp:382] accuracy -> accuracy
I0428 20:16:40.780150   706 net.cpp:124] Setting up accuracy
I0428 20:16:40.780154   706 net.cpp:131] Top shape: (1)
I0428 20:16:40.780158   706 net.cpp:139] Memory required for data: 14950804
I0428 20:16:40.780161   706 layer_factory.hpp:77] Creating layer loss
I0428 20:16:40.780167   706 net.cpp:86] Creating Layer loss
I0428 20:16:40.780170   706 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:16:40.780175   706 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:16:40.780180   706 net.cpp:382] loss -> loss
I0428 20:16:40.780187   706 layer_factory.hpp:77] Creating layer loss
I0428 20:16:40.780478   706 net.cpp:124] Setting up loss
I0428 20:16:40.780488   706 net.cpp:131] Top shape: (1)
I0428 20:16:40.780493   706 net.cpp:134]     with loss weight 1
I0428 20:16:40.780510   706 net.cpp:139] Memory required for data: 14950808
I0428 20:16:40.780515   706 net.cpp:200] loss needs backward computation.
I0428 20:16:40.780519   706 net.cpp:202] accuracy does not need backward computation.
I0428 20:16:40.780524   706 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:16:40.780527   706 net.cpp:200] relu3 needs backward computation.
I0428 20:16:40.780530   706 net.cpp:200] ip3 needs backward computation.
I0428 20:16:40.780534   706 net.cpp:200] relu2 needs backward computation.
I0428 20:16:40.780537   706 net.cpp:200] ip2 needs backward computation.
I0428 20:16:40.780540   706 net.cpp:200] relu1 needs backward computation.
I0428 20:16:40.780544   706 net.cpp:200] ip1 needs backward computation.
I0428 20:16:40.780547   706 net.cpp:200] pool1 needs backward computation.
I0428 20:16:40.780550   706 net.cpp:200] conv1 needs backward computation.
I0428 20:16:40.780555   706 net.cpp:200] pool0 needs backward computation.
I0428 20:16:40.780558   706 net.cpp:200] conv0 needs backward computation.
I0428 20:16:40.780562   706 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:16:40.780566   706 net.cpp:202] mnist does not need backward computation.
I0428 20:16:40.780570   706 net.cpp:244] This network produces output accuracy
I0428 20:16:40.780580   706 net.cpp:244] This network produces output loss
I0428 20:16:40.780596   706 net.cpp:257] Network initialization done.
I0428 20:16:40.780647   706 solver.cpp:56] Solver scaffolding done.
I0428 20:16:40.781082   706 caffe.cpp:248] Starting Optimization
I0428 20:16:40.781090   706 solver.cpp:273] Solving LeNet
I0428 20:16:40.781093   706 solver.cpp:274] Learning Rate Policy: inv
I0428 20:16:40.782066   706 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:16:40.855734   713 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:40.857667   706 solver.cpp:398]     Test net output #0: accuracy = 0.1137
I0428 20:16:40.857692   706 solver.cpp:398]     Test net output #1: loss = 2.30764 (* 1 = 2.30764 loss)
I0428 20:16:40.862265   706 solver.cpp:219] Iteration 0 (0 iter/s, 0.0811387s/100 iters), loss = 2.32084
I0428 20:16:40.862294   706 solver.cpp:238]     Train net output #0: loss = 2.32084 (* 1 = 2.32084 loss)
I0428 20:16:40.862308   706 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:16:40.982487   706 solver.cpp:219] Iteration 100 (832.138 iter/s, 0.120172s/100 iters), loss = 0.489668
I0428 20:16:40.982523   706 solver.cpp:238]     Train net output #0: loss = 0.489668 (* 1 = 0.489668 loss)
I0428 20:16:40.982532   706 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:16:41.102391   706 solver.cpp:219] Iteration 200 (834.326 iter/s, 0.119857s/100 iters), loss = 0.417795
I0428 20:16:41.102418   706 solver.cpp:238]     Train net output #0: loss = 0.417795 (* 1 = 0.417795 loss)
I0428 20:16:41.102424   706 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:16:41.227483   706 solver.cpp:219] Iteration 300 (799.681 iter/s, 0.12505s/100 iters), loss = 0.42869
I0428 20:16:41.227526   706 solver.cpp:238]     Train net output #0: loss = 0.42869 (* 1 = 0.42869 loss)
I0428 20:16:41.227537   706 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:16:41.358463   706 solver.cpp:219] Iteration 400 (763.793 iter/s, 0.130926s/100 iters), loss = 0.54208
I0428 20:16:41.358495   706 solver.cpp:238]     Train net output #0: loss = 0.54208 (* 1 = 0.54208 loss)
I0428 20:16:41.358503   706 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:16:41.490496   706 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:16:41.500936   706 blocking_queue.cpp:49] Waiting for data
I0428 20:16:41.569015   713 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:41.569942   706 solver.cpp:398]     Test net output #0: accuracy = 0.928
I0428 20:16:41.569967   706 solver.cpp:398]     Test net output #1: loss = 0.381798 (* 1 = 0.381798 loss)
I0428 20:16:41.571247   706 solver.cpp:219] Iteration 500 (470.066 iter/s, 0.212736s/100 iters), loss = 0.373983
I0428 20:16:41.571295   706 solver.cpp:238]     Train net output #0: loss = 0.373983 (* 1 = 0.373983 loss)
I0428 20:16:41.571305   706 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:16:41.698011   706 solver.cpp:219] Iteration 600 (789.232 iter/s, 0.126706s/100 iters), loss = 0.287766
I0428 20:16:41.698045   706 solver.cpp:238]     Train net output #0: loss = 0.287766 (* 1 = 0.287766 loss)
I0428 20:16:41.698056   706 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:16:41.827352   706 solver.cpp:219] Iteration 700 (773.435 iter/s, 0.129293s/100 iters), loss = 0.460932
I0428 20:16:41.827394   706 solver.cpp:238]     Train net output #0: loss = 0.460932 (* 1 = 0.460932 loss)
I0428 20:16:41.827404   706 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:16:41.959833   706 solver.cpp:219] Iteration 800 (755.123 iter/s, 0.132429s/100 iters), loss = 0.511933
I0428 20:16:41.959870   706 solver.cpp:238]     Train net output #0: loss = 0.511933 (* 1 = 0.511933 loss)
I0428 20:16:41.959879   706 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:16:42.087095   706 solver.cpp:219] Iteration 900 (786.08 iter/s, 0.127214s/100 iters), loss = 0.380914
I0428 20:16:42.087128   706 solver.cpp:238]     Train net output #0: loss = 0.380914 (* 1 = 0.380914 loss)
I0428 20:16:42.087136   706 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:16:42.130602   712 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:42.212999   706 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:16:42.214124   706 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:16:42.214920   706 solver.cpp:311] Iteration 1000, loss = 0.19834
I0428 20:16:42.214939   706 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:16:42.297935   713 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:42.299391   706 solver.cpp:398]     Test net output #0: accuracy = 0.9573
I0428 20:16:42.299430   706 solver.cpp:398]     Test net output #1: loss = 0.135417 (* 1 = 0.135417 loss)
I0428 20:16:42.299441   706 solver.cpp:316] Optimization Done.
I0428 20:16:42.299448   706 caffe.cpp:259] Optimization Done.
