I0428 19:39:14.253625 24247 caffe.cpp:218] Using GPUs 0
I0428 19:39:14.291054 24247 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:14.801586 24247 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test298.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:14.801728 24247 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test298.prototxt
I0428 19:39:14.802148 24247 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:14.802170 24247 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:14.802273 24247 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:14.802352 24247 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:14.802453 24247 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:14.802475 24247 net.cpp:86] Creating Layer mnist
I0428 19:39:14.802484 24247 net.cpp:382] mnist -> data
I0428 19:39:14.802507 24247 net.cpp:382] mnist -> label
I0428 19:39:14.803617 24247 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:14.806100 24247 net.cpp:124] Setting up mnist
I0428 19:39:14.806118 24247 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:14.806124 24247 net.cpp:131] Top shape: 64 (64)
I0428 19:39:14.806128 24247 net.cpp:139] Memory required for data: 200960
I0428 19:39:14.806135 24247 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:14.806160 24247 net.cpp:86] Creating Layer conv0
I0428 19:39:14.806181 24247 net.cpp:408] conv0 <- data
I0428 19:39:14.806196 24247 net.cpp:382] conv0 -> conv0
I0428 19:39:15.092041 24247 net.cpp:124] Setting up conv0
I0428 19:39:15.092068 24247 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:15.092073 24247 net.cpp:139] Memory required for data: 495872
I0428 19:39:15.092090 24247 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:15.092103 24247 net.cpp:86] Creating Layer pool0
I0428 19:39:15.092108 24247 net.cpp:408] pool0 <- conv0
I0428 19:39:15.092113 24247 net.cpp:382] pool0 -> pool0
I0428 19:39:15.092161 24247 net.cpp:124] Setting up pool0
I0428 19:39:15.092167 24247 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:15.092170 24247 net.cpp:139] Memory required for data: 569600
I0428 19:39:15.092173 24247 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:15.092185 24247 net.cpp:86] Creating Layer conv1
I0428 19:39:15.092187 24247 net.cpp:408] conv1 <- pool0
I0428 19:39:15.092192 24247 net.cpp:382] conv1 -> conv1
I0428 19:39:15.094010 24247 net.cpp:124] Setting up conv1
I0428 19:39:15.094040 24247 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:15.094044 24247 net.cpp:139] Memory required for data: 602368
I0428 19:39:15.094053 24247 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:15.094063 24247 net.cpp:86] Creating Layer pool1
I0428 19:39:15.094066 24247 net.cpp:408] pool1 <- conv1
I0428 19:39:15.094071 24247 net.cpp:382] pool1 -> pool1
I0428 19:39:15.094125 24247 net.cpp:124] Setting up pool1
I0428 19:39:15.094130 24247 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:15.094133 24247 net.cpp:139] Memory required for data: 610560
I0428 19:39:15.094136 24247 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:15.094146 24247 net.cpp:86] Creating Layer ip1
I0428 19:39:15.094148 24247 net.cpp:408] ip1 <- pool1
I0428 19:39:15.094153 24247 net.cpp:382] ip1 -> ip1
I0428 19:39:15.094256 24247 net.cpp:124] Setting up ip1
I0428 19:39:15.094271 24247 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:15.094274 24247 net.cpp:139] Memory required for data: 616960
I0428 19:39:15.094281 24247 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:15.094287 24247 net.cpp:86] Creating Layer relu1
I0428 19:39:15.094291 24247 net.cpp:408] relu1 <- ip1
I0428 19:39:15.094295 24247 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:15.094492 24247 net.cpp:124] Setting up relu1
I0428 19:39:15.094501 24247 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:15.094504 24247 net.cpp:139] Memory required for data: 623360
I0428 19:39:15.094507 24247 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:15.094514 24247 net.cpp:86] Creating Layer ip2
I0428 19:39:15.094517 24247 net.cpp:408] ip2 <- ip1
I0428 19:39:15.094521 24247 net.cpp:382] ip2 -> ip2
I0428 19:39:15.094631 24247 net.cpp:124] Setting up ip2
I0428 19:39:15.094640 24247 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:15.094642 24247 net.cpp:139] Memory required for data: 629760
I0428 19:39:15.094648 24247 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:15.094655 24247 net.cpp:86] Creating Layer relu2
I0428 19:39:15.094657 24247 net.cpp:408] relu2 <- ip2
I0428 19:39:15.094661 24247 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:15.095482 24247 net.cpp:124] Setting up relu2
I0428 19:39:15.095494 24247 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:15.095515 24247 net.cpp:139] Memory required for data: 636160
I0428 19:39:15.095517 24247 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:15.095525 24247 net.cpp:86] Creating Layer ip3
I0428 19:39:15.095528 24247 net.cpp:408] ip3 <- ip2
I0428 19:39:15.095535 24247 net.cpp:382] ip3 -> ip3
I0428 19:39:15.095635 24247 net.cpp:124] Setting up ip3
I0428 19:39:15.095643 24247 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:15.095646 24247 net.cpp:139] Memory required for data: 638720
I0428 19:39:15.095654 24247 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:15.095659 24247 net.cpp:86] Creating Layer relu3
I0428 19:39:15.095662 24247 net.cpp:408] relu3 <- ip3
I0428 19:39:15.095667 24247 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:15.095855 24247 net.cpp:124] Setting up relu3
I0428 19:39:15.095865 24247 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:15.095868 24247 net.cpp:139] Memory required for data: 641280
I0428 19:39:15.095871 24247 layer_factory.hpp:77] Creating layer loss
I0428 19:39:15.095877 24247 net.cpp:86] Creating Layer loss
I0428 19:39:15.095881 24247 net.cpp:408] loss <- ip3
I0428 19:39:15.095885 24247 net.cpp:408] loss <- label
I0428 19:39:15.095890 24247 net.cpp:382] loss -> loss
I0428 19:39:15.095906 24247 layer_factory.hpp:77] Creating layer loss
I0428 19:39:15.096160 24247 net.cpp:124] Setting up loss
I0428 19:39:15.096169 24247 net.cpp:131] Top shape: (1)
I0428 19:39:15.096174 24247 net.cpp:134]     with loss weight 1
I0428 19:39:15.096186 24247 net.cpp:139] Memory required for data: 641284
I0428 19:39:15.096190 24247 net.cpp:200] loss needs backward computation.
I0428 19:39:15.096194 24247 net.cpp:200] relu3 needs backward computation.
I0428 19:39:15.096197 24247 net.cpp:200] ip3 needs backward computation.
I0428 19:39:15.096200 24247 net.cpp:200] relu2 needs backward computation.
I0428 19:39:15.096204 24247 net.cpp:200] ip2 needs backward computation.
I0428 19:39:15.096206 24247 net.cpp:200] relu1 needs backward computation.
I0428 19:39:15.096209 24247 net.cpp:200] ip1 needs backward computation.
I0428 19:39:15.096211 24247 net.cpp:200] pool1 needs backward computation.
I0428 19:39:15.096215 24247 net.cpp:200] conv1 needs backward computation.
I0428 19:39:15.096218 24247 net.cpp:200] pool0 needs backward computation.
I0428 19:39:15.096221 24247 net.cpp:200] conv0 needs backward computation.
I0428 19:39:15.096225 24247 net.cpp:202] mnist does not need backward computation.
I0428 19:39:15.096227 24247 net.cpp:244] This network produces output loss
I0428 19:39:15.096237 24247 net.cpp:257] Network initialization done.
I0428 19:39:15.096592 24247 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test298.prototxt
I0428 19:39:15.096634 24247 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:15.096737 24247 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:15.096853 24247 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:15.096915 24247 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:15.096928 24247 net.cpp:86] Creating Layer mnist
I0428 19:39:15.096933 24247 net.cpp:382] mnist -> data
I0428 19:39:15.096941 24247 net.cpp:382] mnist -> label
I0428 19:39:15.097033 24247 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:15.099130 24247 net.cpp:124] Setting up mnist
I0428 19:39:15.099159 24247 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:15.099165 24247 net.cpp:131] Top shape: 100 (100)
I0428 19:39:15.099169 24247 net.cpp:139] Memory required for data: 314000
I0428 19:39:15.099174 24247 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:15.099179 24247 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:15.099184 24247 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:15.099189 24247 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:15.099195 24247 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:15.099258 24247 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:15.099264 24247 net.cpp:131] Top shape: 100 (100)
I0428 19:39:15.099268 24247 net.cpp:131] Top shape: 100 (100)
I0428 19:39:15.099272 24247 net.cpp:139] Memory required for data: 314800
I0428 19:39:15.099274 24247 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:15.099282 24247 net.cpp:86] Creating Layer conv0
I0428 19:39:15.099299 24247 net.cpp:408] conv0 <- data
I0428 19:39:15.099304 24247 net.cpp:382] conv0 -> conv0
I0428 19:39:15.101009 24247 net.cpp:124] Setting up conv0
I0428 19:39:15.101023 24247 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:15.101027 24247 net.cpp:139] Memory required for data: 775600
I0428 19:39:15.101037 24247 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:15.101042 24247 net.cpp:86] Creating Layer pool0
I0428 19:39:15.101045 24247 net.cpp:408] pool0 <- conv0
I0428 19:39:15.101050 24247 net.cpp:382] pool0 -> pool0
I0428 19:39:15.101086 24247 net.cpp:124] Setting up pool0
I0428 19:39:15.101092 24247 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:15.101095 24247 net.cpp:139] Memory required for data: 890800
I0428 19:39:15.101099 24247 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:15.101106 24247 net.cpp:86] Creating Layer conv1
I0428 19:39:15.101109 24247 net.cpp:408] conv1 <- pool0
I0428 19:39:15.101114 24247 net.cpp:382] conv1 -> conv1
I0428 19:39:15.102649 24247 net.cpp:124] Setting up conv1
I0428 19:39:15.102664 24247 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:15.102669 24247 net.cpp:139] Memory required for data: 942000
I0428 19:39:15.102677 24247 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:15.102690 24247 net.cpp:86] Creating Layer pool1
I0428 19:39:15.102694 24247 net.cpp:408] pool1 <- conv1
I0428 19:39:15.102699 24247 net.cpp:382] pool1 -> pool1
I0428 19:39:15.102751 24247 net.cpp:124] Setting up pool1
I0428 19:39:15.102757 24247 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:15.102761 24247 net.cpp:139] Memory required for data: 954800
I0428 19:39:15.102763 24247 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:15.102774 24247 net.cpp:86] Creating Layer ip1
I0428 19:39:15.102793 24247 net.cpp:408] ip1 <- pool1
I0428 19:39:15.102803 24247 net.cpp:382] ip1 -> ip1
I0428 19:39:15.102952 24247 net.cpp:124] Setting up ip1
I0428 19:39:15.102959 24247 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:15.102974 24247 net.cpp:139] Memory required for data: 964800
I0428 19:39:15.102982 24247 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:15.102988 24247 net.cpp:86] Creating Layer relu1
I0428 19:39:15.102991 24247 net.cpp:408] relu1 <- ip1
I0428 19:39:15.102996 24247 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:15.103186 24247 net.cpp:124] Setting up relu1
I0428 19:39:15.103194 24247 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:15.103199 24247 net.cpp:139] Memory required for data: 974800
I0428 19:39:15.103201 24247 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:15.103207 24247 net.cpp:86] Creating Layer ip2
I0428 19:39:15.103219 24247 net.cpp:408] ip2 <- ip1
I0428 19:39:15.103224 24247 net.cpp:382] ip2 -> ip2
I0428 19:39:15.103323 24247 net.cpp:124] Setting up ip2
I0428 19:39:15.103330 24247 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:15.103333 24247 net.cpp:139] Memory required for data: 984800
I0428 19:39:15.103339 24247 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:15.103343 24247 net.cpp:86] Creating Layer relu2
I0428 19:39:15.103353 24247 net.cpp:408] relu2 <- ip2
I0428 19:39:15.103358 24247 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:15.103500 24247 net.cpp:124] Setting up relu2
I0428 19:39:15.103509 24247 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:15.103513 24247 net.cpp:139] Memory required for data: 994800
I0428 19:39:15.103526 24247 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:15.103533 24247 net.cpp:86] Creating Layer ip3
I0428 19:39:15.103540 24247 net.cpp:408] ip3 <- ip2
I0428 19:39:15.103545 24247 net.cpp:382] ip3 -> ip3
I0428 19:39:15.103657 24247 net.cpp:124] Setting up ip3
I0428 19:39:15.103663 24247 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:15.103667 24247 net.cpp:139] Memory required for data: 998800
I0428 19:39:15.103675 24247 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:15.103679 24247 net.cpp:86] Creating Layer relu3
I0428 19:39:15.103683 24247 net.cpp:408] relu3 <- ip3
I0428 19:39:15.103688 24247 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:15.104569 24247 net.cpp:124] Setting up relu3
I0428 19:39:15.104583 24247 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:15.104586 24247 net.cpp:139] Memory required for data: 1002800
I0428 19:39:15.104589 24247 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:15.104595 24247 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:15.104598 24247 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:15.104604 24247 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:15.104610 24247 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:15.104660 24247 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:15.104665 24247 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:15.104668 24247 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:15.104672 24247 net.cpp:139] Memory required for data: 1010800
I0428 19:39:15.104676 24247 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:15.104681 24247 net.cpp:86] Creating Layer accuracy
I0428 19:39:15.104683 24247 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:15.104693 24247 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:15.104698 24247 net.cpp:382] accuracy -> accuracy
I0428 19:39:15.104706 24247 net.cpp:124] Setting up accuracy
I0428 19:39:15.104709 24247 net.cpp:131] Top shape: (1)
I0428 19:39:15.104712 24247 net.cpp:139] Memory required for data: 1010804
I0428 19:39:15.104715 24247 layer_factory.hpp:77] Creating layer loss
I0428 19:39:15.104719 24247 net.cpp:86] Creating Layer loss
I0428 19:39:15.104722 24247 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:15.104727 24247 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:15.104730 24247 net.cpp:382] loss -> loss
I0428 19:39:15.104746 24247 layer_factory.hpp:77] Creating layer loss
I0428 19:39:15.105015 24247 net.cpp:124] Setting up loss
I0428 19:39:15.105026 24247 net.cpp:131] Top shape: (1)
I0428 19:39:15.105042 24247 net.cpp:134]     with loss weight 1
I0428 19:39:15.105048 24247 net.cpp:139] Memory required for data: 1010808
I0428 19:39:15.105068 24247 net.cpp:200] loss needs backward computation.
I0428 19:39:15.105073 24247 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:15.105078 24247 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:15.105082 24247 net.cpp:200] relu3 needs backward computation.
I0428 19:39:15.105089 24247 net.cpp:200] ip3 needs backward computation.
I0428 19:39:15.105093 24247 net.cpp:200] relu2 needs backward computation.
I0428 19:39:15.105096 24247 net.cpp:200] ip2 needs backward computation.
I0428 19:39:15.105099 24247 net.cpp:200] relu1 needs backward computation.
I0428 19:39:15.105108 24247 net.cpp:200] ip1 needs backward computation.
I0428 19:39:15.105111 24247 net.cpp:200] pool1 needs backward computation.
I0428 19:39:15.105115 24247 net.cpp:200] conv1 needs backward computation.
I0428 19:39:15.105118 24247 net.cpp:200] pool0 needs backward computation.
I0428 19:39:15.105123 24247 net.cpp:200] conv0 needs backward computation.
I0428 19:39:15.105132 24247 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:15.105136 24247 net.cpp:202] mnist does not need backward computation.
I0428 19:39:15.105139 24247 net.cpp:244] This network produces output accuracy
I0428 19:39:15.105144 24247 net.cpp:244] This network produces output loss
I0428 19:39:15.105168 24247 net.cpp:257] Network initialization done.
I0428 19:39:15.105223 24247 solver.cpp:56] Solver scaffolding done.
I0428 19:39:15.105561 24247 caffe.cpp:248] Starting Optimization
I0428 19:39:15.105583 24247 solver.cpp:273] Solving LeNet
I0428 19:39:15.105587 24247 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:15.106381 24247 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:15.108439 24247 blocking_queue.cpp:49] Waiting for data
I0428 19:39:15.180223 24254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:15.180645 24247 solver.cpp:398]     Test net output #0: accuracy = 0.1098
I0428 19:39:15.180665 24247 solver.cpp:398]     Test net output #1: loss = 2.3055 (* 1 = 2.3055 loss)
I0428 19:39:15.183189 24247 solver.cpp:219] Iteration 0 (0 iter/s, 0.0775731s/100 iters), loss = 2.29187
I0428 19:39:15.183230 24247 solver.cpp:238]     Train net output #0: loss = 2.29187 (* 1 = 2.29187 loss)
I0428 19:39:15.183251 24247 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:15.270112 24247 solver.cpp:219] Iteration 100 (1151.12 iter/s, 0.0868721s/100 iters), loss = 1.6855
I0428 19:39:15.270149 24247 solver.cpp:238]     Train net output #0: loss = 1.6855 (* 1 = 1.6855 loss)
I0428 19:39:15.270157 24247 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:15.342039 24247 solver.cpp:219] Iteration 200 (1391.17 iter/s, 0.0718817s/100 iters), loss = 1.7698
I0428 19:39:15.342064 24247 solver.cpp:238]     Train net output #0: loss = 1.7698 (* 1 = 1.7698 loss)
I0428 19:39:15.342072 24247 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:15.408618 24247 solver.cpp:219] Iteration 300 (1502.73 iter/s, 0.0665457s/100 iters), loss = 1.02467
I0428 19:39:15.408643 24247 solver.cpp:238]     Train net output #0: loss = 1.02467 (* 1 = 1.02467 loss)
I0428 19:39:15.408663 24247 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:15.475522 24247 solver.cpp:219] Iteration 400 (1495.43 iter/s, 0.0668702s/100 iters), loss = 0.990124
I0428 19:39:15.475543 24247 solver.cpp:238]     Train net output #0: loss = 0.990124 (* 1 = 0.990124 loss)
I0428 19:39:15.475549 24247 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:15.542189 24247 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:15.594851 24254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:15.595281 24247 solver.cpp:398]     Test net output #0: accuracy = 0.6233
I0428 19:39:15.595304 24247 solver.cpp:398]     Test net output #1: loss = 0.99533 (* 1 = 0.99533 loss)
I0428 19:39:15.596076 24247 solver.cpp:219] Iteration 500 (829.74 iter/s, 0.12052s/100 iters), loss = 0.964349
I0428 19:39:15.596101 24247 solver.cpp:238]     Train net output #0: loss = 0.964349 (* 1 = 0.964349 loss)
I0428 19:39:15.596127 24247 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:15.667878 24247 solver.cpp:219] Iteration 600 (1393.36 iter/s, 0.0717691s/100 iters), loss = 1.18904
I0428 19:39:15.667903 24247 solver.cpp:238]     Train net output #0: loss = 1.18904 (* 1 = 1.18904 loss)
I0428 19:39:15.667925 24247 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:15.735309 24247 solver.cpp:219] Iteration 700 (1483.73 iter/s, 0.0673976s/100 iters), loss = 0.684082
I0428 19:39:15.735332 24247 solver.cpp:238]     Train net output #0: loss = 0.684082 (* 1 = 0.684082 loss)
I0428 19:39:15.735352 24247 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:15.809167 24247 solver.cpp:219] Iteration 800 (1354.55 iter/s, 0.0738252s/100 iters), loss = 0.800063
I0428 19:39:15.809208 24247 solver.cpp:238]     Train net output #0: loss = 0.800063 (* 1 = 0.800063 loss)
I0428 19:39:15.809229 24247 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:15.894299 24247 solver.cpp:219] Iteration 900 (1175.42 iter/s, 0.085076s/100 iters), loss = 0.8429
I0428 19:39:15.894342 24247 solver.cpp:238]     Train net output #0: loss = 0.8429 (* 1 = 0.8429 loss)
I0428 19:39:15.894354 24247 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:15.925077 24253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:15.979061 24247 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:15.979841 24247 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:15.980293 24247 solver.cpp:311] Iteration 1000, loss = 0.500685
I0428 19:39:15.980319 24247 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:16.032604 24254 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:16.033066 24247 solver.cpp:398]     Test net output #0: accuracy = 0.8369
I0428 19:39:16.033087 24247 solver.cpp:398]     Test net output #1: loss = 0.465914 (* 1 = 0.465914 loss)
I0428 19:39:16.033093 24247 solver.cpp:316] Optimization Done.
I0428 19:39:16.033098 24247 caffe.cpp:259] Optimization Done.
