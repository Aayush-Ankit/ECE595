I0428 20:19:11.333837  1313 caffe.cpp:218] Using GPUs 0
I0428 20:19:11.369884  1313 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:11.825201  1313 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1336.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:11.825341  1313 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1336.prototxt
I0428 20:19:11.825669  1313 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:11.825682  1313 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:11.825752  1313 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:11.825809  1313 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:11.825894  1313 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:11.825914  1313 net.cpp:86] Creating Layer mnist
I0428 20:19:11.825920  1313 net.cpp:382] mnist -> data
I0428 20:19:11.825939  1313 net.cpp:382] mnist -> label
I0428 20:19:11.826907  1313 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:11.829069  1313 net.cpp:124] Setting up mnist
I0428 20:19:11.829114  1313 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:11.829119  1313 net.cpp:131] Top shape: 64 (64)
I0428 20:19:11.829123  1313 net.cpp:139] Memory required for data: 200960
I0428 20:19:11.829128  1313 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:11.829171  1313 net.cpp:86] Creating Layer conv0
I0428 20:19:11.829176  1313 net.cpp:408] conv0 <- data
I0428 20:19:11.829185  1313 net.cpp:382] conv0 -> conv0
I0428 20:19:12.058914  1313 net.cpp:124] Setting up conv0
I0428 20:19:12.058957  1313 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:12.058961  1313 net.cpp:139] Memory required for data: 7573760
I0428 20:19:12.058998  1313 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:12.059010  1313 net.cpp:86] Creating Layer pool0
I0428 20:19:12.059015  1313 net.cpp:408] pool0 <- conv0
I0428 20:19:12.059020  1313 net.cpp:382] pool0 -> pool0
I0428 20:19:12.059067  1313 net.cpp:124] Setting up pool0
I0428 20:19:12.059094  1313 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:12.059098  1313 net.cpp:139] Memory required for data: 9416960
I0428 20:19:12.059100  1313 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:12.059110  1313 net.cpp:86] Creating Layer conv1
I0428 20:19:12.059113  1313 net.cpp:408] conv1 <- pool0
I0428 20:19:12.059118  1313 net.cpp:382] conv1 -> conv1
I0428 20:19:12.061111  1313 net.cpp:124] Setting up conv1
I0428 20:19:12.061141  1313 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:12.061146  1313 net.cpp:139] Memory required for data: 9826560
I0428 20:19:12.061168  1313 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:12.061175  1313 net.cpp:86] Creating Layer pool1
I0428 20:19:12.061179  1313 net.cpp:408] pool1 <- conv1
I0428 20:19:12.061184  1313 net.cpp:382] pool1 -> pool1
I0428 20:19:12.061236  1313 net.cpp:124] Setting up pool1
I0428 20:19:12.061241  1313 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:12.061244  1313 net.cpp:139] Memory required for data: 9928960
I0428 20:19:12.061247  1313 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:12.061255  1313 net.cpp:86] Creating Layer ip1
I0428 20:19:12.061259  1313 net.cpp:408] ip1 <- pool1
I0428 20:19:12.061262  1313 net.cpp:382] ip1 -> ip1
I0428 20:19:12.061539  1313 net.cpp:124] Setting up ip1
I0428 20:19:12.061547  1313 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:12.061550  1313 net.cpp:139] Memory required for data: 9941760
I0428 20:19:12.061558  1313 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:12.061564  1313 net.cpp:86] Creating Layer relu1
I0428 20:19:12.061568  1313 net.cpp:408] relu1 <- ip1
I0428 20:19:12.061571  1313 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:12.061733  1313 net.cpp:124] Setting up relu1
I0428 20:19:12.061743  1313 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:12.061745  1313 net.cpp:139] Memory required for data: 9954560
I0428 20:19:12.061748  1313 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:12.061755  1313 net.cpp:86] Creating Layer ip2
I0428 20:19:12.061758  1313 net.cpp:408] ip2 <- ip1
I0428 20:19:12.061764  1313 net.cpp:382] ip2 -> ip2
I0428 20:19:12.061898  1313 net.cpp:124] Setting up ip2
I0428 20:19:12.061905  1313 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:12.061908  1313 net.cpp:139] Memory required for data: 9957120
I0428 20:19:12.061913  1313 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:12.061919  1313 net.cpp:86] Creating Layer relu2
I0428 20:19:12.061923  1313 net.cpp:408] relu2 <- ip2
I0428 20:19:12.061926  1313 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:12.062767  1313 net.cpp:124] Setting up relu2
I0428 20:19:12.062793  1313 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:12.062813  1313 net.cpp:139] Memory required for data: 9959680
I0428 20:19:12.062815  1313 layer_factory.hpp:77] Creating layer loss
I0428 20:19:12.062821  1313 net.cpp:86] Creating Layer loss
I0428 20:19:12.062824  1313 net.cpp:408] loss <- ip2
I0428 20:19:12.062829  1313 net.cpp:408] loss <- label
I0428 20:19:12.062834  1313 net.cpp:382] loss -> loss
I0428 20:19:12.062850  1313 layer_factory.hpp:77] Creating layer loss
I0428 20:19:12.063091  1313 net.cpp:124] Setting up loss
I0428 20:19:12.063102  1313 net.cpp:131] Top shape: (1)
I0428 20:19:12.063105  1313 net.cpp:134]     with loss weight 1
I0428 20:19:12.063119  1313 net.cpp:139] Memory required for data: 9959684
I0428 20:19:12.063123  1313 net.cpp:200] loss needs backward computation.
I0428 20:19:12.063127  1313 net.cpp:200] relu2 needs backward computation.
I0428 20:19:12.063129  1313 net.cpp:200] ip2 needs backward computation.
I0428 20:19:12.063133  1313 net.cpp:200] relu1 needs backward computation.
I0428 20:19:12.063135  1313 net.cpp:200] ip1 needs backward computation.
I0428 20:19:12.063165  1313 net.cpp:200] pool1 needs backward computation.
I0428 20:19:12.063169  1313 net.cpp:200] conv1 needs backward computation.
I0428 20:19:12.063172  1313 net.cpp:200] pool0 needs backward computation.
I0428 20:19:12.063175  1313 net.cpp:200] conv0 needs backward computation.
I0428 20:19:12.063179  1313 net.cpp:202] mnist does not need backward computation.
I0428 20:19:12.063181  1313 net.cpp:244] This network produces output loss
I0428 20:19:12.063190  1313 net.cpp:257] Network initialization done.
I0428 20:19:12.063530  1313 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1336.prototxt
I0428 20:19:12.063570  1313 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:12.063668  1313 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:12.063731  1313 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:12.063778  1313 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:12.063791  1313 net.cpp:86] Creating Layer mnist
I0428 20:19:12.063796  1313 net.cpp:382] mnist -> data
I0428 20:19:12.063802  1313 net.cpp:382] mnist -> label
I0428 20:19:12.063905  1313 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:12.066094  1313 net.cpp:124] Setting up mnist
I0428 20:19:12.066123  1313 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:12.066128  1313 net.cpp:131] Top shape: 100 (100)
I0428 20:19:12.066133  1313 net.cpp:139] Memory required for data: 314000
I0428 20:19:12.066136  1313 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:12.066143  1313 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:12.066145  1313 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:12.066149  1313 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:12.066171  1313 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:12.066236  1313 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:12.066242  1313 net.cpp:131] Top shape: 100 (100)
I0428 20:19:12.066246  1313 net.cpp:131] Top shape: 100 (100)
I0428 20:19:12.066248  1313 net.cpp:139] Memory required for data: 314800
I0428 20:19:12.066251  1313 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:12.066259  1313 net.cpp:86] Creating Layer conv0
I0428 20:19:12.066262  1313 net.cpp:408] conv0 <- data
I0428 20:19:12.066267  1313 net.cpp:382] conv0 -> conv0
I0428 20:19:12.068279  1313 net.cpp:124] Setting up conv0
I0428 20:19:12.068292  1313 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:12.068296  1313 net.cpp:139] Memory required for data: 11834800
I0428 20:19:12.068305  1313 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:12.068310  1313 net.cpp:86] Creating Layer pool0
I0428 20:19:12.068313  1313 net.cpp:408] pool0 <- conv0
I0428 20:19:12.068318  1313 net.cpp:382] pool0 -> pool0
I0428 20:19:12.068351  1313 net.cpp:124] Setting up pool0
I0428 20:19:12.068356  1313 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:12.068359  1313 net.cpp:139] Memory required for data: 14714800
I0428 20:19:12.068363  1313 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:12.068372  1313 net.cpp:86] Creating Layer conv1
I0428 20:19:12.068373  1313 net.cpp:408] conv1 <- pool0
I0428 20:19:12.068378  1313 net.cpp:382] conv1 -> conv1
I0428 20:19:12.070300  1313 net.cpp:124] Setting up conv1
I0428 20:19:12.070313  1313 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:12.070317  1313 net.cpp:139] Memory required for data: 15354800
I0428 20:19:12.070325  1313 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:12.070332  1313 net.cpp:86] Creating Layer pool1
I0428 20:19:12.070358  1313 net.cpp:408] pool1 <- conv1
I0428 20:19:12.070363  1313 net.cpp:382] pool1 -> pool1
I0428 20:19:12.070431  1313 net.cpp:124] Setting up pool1
I0428 20:19:12.070442  1313 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:12.070446  1313 net.cpp:139] Memory required for data: 15514800
I0428 20:19:12.070448  1313 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:12.070454  1313 net.cpp:86] Creating Layer ip1
I0428 20:19:12.070464  1313 net.cpp:408] ip1 <- pool1
I0428 20:19:12.070468  1313 net.cpp:382] ip1 -> ip1
I0428 20:19:12.070674  1313 net.cpp:124] Setting up ip1
I0428 20:19:12.070698  1313 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:12.070700  1313 net.cpp:139] Memory required for data: 15534800
I0428 20:19:12.070706  1313 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:12.070713  1313 net.cpp:86] Creating Layer relu1
I0428 20:19:12.070715  1313 net.cpp:408] relu1 <- ip1
I0428 20:19:12.070719  1313 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:12.070883  1313 net.cpp:124] Setting up relu1
I0428 20:19:12.070891  1313 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:12.070894  1313 net.cpp:139] Memory required for data: 15554800
I0428 20:19:12.070897  1313 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:12.070912  1313 net.cpp:86] Creating Layer ip2
I0428 20:19:12.070915  1313 net.cpp:408] ip2 <- ip1
I0428 20:19:12.070920  1313 net.cpp:382] ip2 -> ip2
I0428 20:19:12.071013  1313 net.cpp:124] Setting up ip2
I0428 20:19:12.071022  1313 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:12.071024  1313 net.cpp:139] Memory required for data: 15558800
I0428 20:19:12.071053  1313 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:12.071058  1313 net.cpp:86] Creating Layer relu2
I0428 20:19:12.071060  1313 net.cpp:408] relu2 <- ip2
I0428 20:19:12.071064  1313 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:12.071214  1313 net.cpp:124] Setting up relu2
I0428 20:19:12.071221  1313 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:12.071224  1313 net.cpp:139] Memory required for data: 15562800
I0428 20:19:12.071228  1313 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:19:12.071231  1313 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:19:12.071234  1313 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:19:12.071244  1313 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:19:12.071260  1313 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:19:12.071308  1313 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:19:12.071313  1313 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:12.071316  1313 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:12.071319  1313 net.cpp:139] Memory required for data: 15570800
I0428 20:19:12.071323  1313 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:12.071328  1313 net.cpp:86] Creating Layer accuracy
I0428 20:19:12.071331  1313 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:19:12.071352  1313 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:12.071355  1313 net.cpp:382] accuracy -> accuracy
I0428 20:19:12.071362  1313 net.cpp:124] Setting up accuracy
I0428 20:19:12.071372  1313 net.cpp:131] Top shape: (1)
I0428 20:19:12.071375  1313 net.cpp:139] Memory required for data: 15570804
I0428 20:19:12.071378  1313 layer_factory.hpp:77] Creating layer loss
I0428 20:19:12.071382  1313 net.cpp:86] Creating Layer loss
I0428 20:19:12.071385  1313 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:19:12.071388  1313 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:12.071393  1313 net.cpp:382] loss -> loss
I0428 20:19:12.071399  1313 layer_factory.hpp:77] Creating layer loss
I0428 20:19:12.071612  1313 net.cpp:124] Setting up loss
I0428 20:19:12.071621  1313 net.cpp:131] Top shape: (1)
I0428 20:19:12.071624  1313 net.cpp:134]     with loss weight 1
I0428 20:19:12.071630  1313 net.cpp:139] Memory required for data: 15570808
I0428 20:19:12.071635  1313 net.cpp:200] loss needs backward computation.
I0428 20:19:12.071637  1313 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:12.071641  1313 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:19:12.071645  1313 net.cpp:200] relu2 needs backward computation.
I0428 20:19:12.071647  1313 net.cpp:200] ip2 needs backward computation.
I0428 20:19:12.071650  1313 net.cpp:200] relu1 needs backward computation.
I0428 20:19:12.071652  1313 net.cpp:200] ip1 needs backward computation.
I0428 20:19:12.071655  1313 net.cpp:200] pool1 needs backward computation.
I0428 20:19:12.071658  1313 net.cpp:200] conv1 needs backward computation.
I0428 20:19:12.071661  1313 net.cpp:200] pool0 needs backward computation.
I0428 20:19:12.071665  1313 net.cpp:200] conv0 needs backward computation.
I0428 20:19:12.071668  1313 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:12.071671  1313 net.cpp:202] mnist does not need backward computation.
I0428 20:19:12.071674  1313 net.cpp:244] This network produces output accuracy
I0428 20:19:12.071677  1313 net.cpp:244] This network produces output loss
I0428 20:19:12.071702  1313 net.cpp:257] Network initialization done.
I0428 20:19:12.071738  1313 solver.cpp:56] Solver scaffolding done.
I0428 20:19:12.072047  1313 caffe.cpp:248] Starting Optimization
I0428 20:19:12.072053  1313 solver.cpp:273] Solving LeNet
I0428 20:19:12.072057  1313 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:12.072856  1313 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:12.079110  1313 blocking_queue.cpp:49] Waiting for data
I0428 20:19:12.151290  1320 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:12.152024  1313 solver.cpp:398]     Test net output #0: accuracy = 0.0927
I0428 20:19:12.152045  1313 solver.cpp:398]     Test net output #1: loss = 2.31083 (* 1 = 2.31083 loss)
I0428 20:19:12.156302  1313 solver.cpp:219] Iteration 0 (0 iter/s, 0.0842208s/100 iters), loss = 2.29001
I0428 20:19:12.156327  1313 solver.cpp:238]     Train net output #0: loss = 2.29001 (* 1 = 2.29001 loss)
I0428 20:19:12.156337  1313 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:12.293889  1313 solver.cpp:219] Iteration 100 (727.015 iter/s, 0.137549s/100 iters), loss = 0.58798
I0428 20:19:12.293926  1313 solver.cpp:238]     Train net output #0: loss = 0.58798 (* 1 = 0.58798 loss)
I0428 20:19:12.293936  1313 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:12.437657  1313 solver.cpp:219] Iteration 200 (695.805 iter/s, 0.143718s/100 iters), loss = 0.516855
I0428 20:19:12.437700  1313 solver.cpp:238]     Train net output #0: loss = 0.516855 (* 1 = 0.516855 loss)
I0428 20:19:12.437711  1313 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:12.578107  1313 solver.cpp:219] Iteration 300 (712.273 iter/s, 0.140396s/100 iters), loss = 0.352394
I0428 20:19:12.578145  1313 solver.cpp:238]     Train net output #0: loss = 0.352394 (* 1 = 0.352394 loss)
I0428 20:19:12.578155  1313 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:12.720419  1313 solver.cpp:219] Iteration 400 (702.932 iter/s, 0.142261s/100 iters), loss = 0.52743
I0428 20:19:12.720455  1313 solver.cpp:238]     Train net output #0: loss = 0.52743 (* 1 = 0.52743 loss)
I0428 20:19:12.720465  1313 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:12.856802  1313 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:12.926059  1320 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:12.927827  1313 solver.cpp:398]     Test net output #0: accuracy = 0.8759
I0428 20:19:12.927855  1313 solver.cpp:398]     Test net output #1: loss = 0.326727 (* 1 = 0.326727 loss)
I0428 20:19:12.929127  1313 solver.cpp:219] Iteration 500 (479.254 iter/s, 0.208657s/100 iters), loss = 0.468804
I0428 20:19:12.929155  1313 solver.cpp:238]     Train net output #0: loss = 0.468804 (* 1 = 0.468804 loss)
I0428 20:19:12.929167  1313 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:13.063864  1313 solver.cpp:219] Iteration 600 (742.419 iter/s, 0.134695s/100 iters), loss = 0.182854
I0428 20:19:13.063900  1313 solver.cpp:238]     Train net output #0: loss = 0.182854 (* 1 = 0.182854 loss)
I0428 20:19:13.063910  1313 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:13.199544  1313 solver.cpp:219] Iteration 700 (737.313 iter/s, 0.135628s/100 iters), loss = 0.297335
I0428 20:19:13.199599  1313 solver.cpp:238]     Train net output #0: loss = 0.297335 (* 1 = 0.297335 loss)
I0428 20:19:13.199615  1313 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:13.346288  1313 solver.cpp:219] Iteration 800 (681.766 iter/s, 0.146678s/100 iters), loss = 0.420051
I0428 20:19:13.346334  1313 solver.cpp:238]     Train net output #0: loss = 0.420051 (* 1 = 0.420051 loss)
I0428 20:19:13.346349  1313 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:13.489393  1313 solver.cpp:219] Iteration 900 (699.063 iter/s, 0.143049s/100 iters), loss = 0.181933
I0428 20:19:13.489430  1313 solver.cpp:238]     Train net output #0: loss = 0.181933 (* 1 = 0.181933 loss)
I0428 20:19:13.489440  1313 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:13.533787  1319 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:13.623435  1313 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:13.625247  1313 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:13.626338  1313 solver.cpp:311] Iteration 1000, loss = 0.217253
I0428 20:19:13.626358  1313 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:13.704546  1320 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:13.705301  1313 solver.cpp:398]     Test net output #0: accuracy = 0.8801
I0428 20:19:13.705323  1313 solver.cpp:398]     Test net output #1: loss = 0.300298 (* 1 = 0.300298 loss)
I0428 20:19:13.705329  1313 solver.cpp:316] Optimization Done.
I0428 20:19:13.705333  1313 caffe.cpp:259] Optimization Done.
