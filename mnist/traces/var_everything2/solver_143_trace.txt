I0428 19:32:06.984185 22758 caffe.cpp:218] Using GPUs 0
I0428 19:32:07.024755 22758 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:07.551389 22758 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test143.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:07.551528 22758 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test143.prototxt
I0428 19:32:07.551892 22758 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:07.551911 22758 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:07.552007 22758 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:07.552314 22758 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:07.552415 22758 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:07.552438 22758 net.cpp:86] Creating Layer mnist
I0428 19:32:07.552448 22758 net.cpp:382] mnist -> data
I0428 19:32:07.552471 22758 net.cpp:382] mnist -> label
I0428 19:32:07.553580 22758 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:07.556255 22758 net.cpp:124] Setting up mnist
I0428 19:32:07.556274 22758 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:07.556280 22758 net.cpp:131] Top shape: 64 (64)
I0428 19:32:07.556284 22758 net.cpp:139] Memory required for data: 200960
I0428 19:32:07.556291 22758 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:07.556308 22758 net.cpp:86] Creating Layer conv0
I0428 19:32:07.556314 22758 net.cpp:408] conv0 <- data
I0428 19:32:07.556327 22758 net.cpp:382] conv0 -> conv0
I0428 19:32:07.845270 22758 net.cpp:124] Setting up conv0
I0428 19:32:07.845300 22758 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:07.845305 22758 net.cpp:139] Memory required for data: 1675520
I0428 19:32:07.845322 22758 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:07.845338 22758 net.cpp:86] Creating Layer pool0
I0428 19:32:07.845365 22758 net.cpp:408] pool0 <- conv0
I0428 19:32:07.845372 22758 net.cpp:382] pool0 -> pool0
I0428 19:32:07.845429 22758 net.cpp:124] Setting up pool0
I0428 19:32:07.845437 22758 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:07.845440 22758 net.cpp:139] Memory required for data: 2044160
I0428 19:32:07.845444 22758 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:07.845453 22758 net.cpp:86] Creating Layer ip1
I0428 19:32:07.845456 22758 net.cpp:408] ip1 <- pool0
I0428 19:32:07.845463 22758 net.cpp:382] ip1 -> ip1
I0428 19:32:07.845834 22758 net.cpp:124] Setting up ip1
I0428 19:32:07.845844 22758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:07.845849 22758 net.cpp:139] Memory required for data: 2050560
I0428 19:32:07.845857 22758 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:07.845865 22758 net.cpp:86] Creating Layer relu1
I0428 19:32:07.845868 22758 net.cpp:408] relu1 <- ip1
I0428 19:32:07.845873 22758 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:07.846070 22758 net.cpp:124] Setting up relu1
I0428 19:32:07.846081 22758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:07.846084 22758 net.cpp:139] Memory required for data: 2056960
I0428 19:32:07.846088 22758 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:07.846096 22758 net.cpp:86] Creating Layer ip2
I0428 19:32:07.846101 22758 net.cpp:408] ip2 <- ip1
I0428 19:32:07.846107 22758 net.cpp:382] ip2 -> ip2
I0428 19:32:07.846217 22758 net.cpp:124] Setting up ip2
I0428 19:32:07.846226 22758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:07.846230 22758 net.cpp:139] Memory required for data: 2063360
I0428 19:32:07.846238 22758 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:07.846245 22758 net.cpp:86] Creating Layer relu2
I0428 19:32:07.846248 22758 net.cpp:408] relu2 <- ip2
I0428 19:32:07.846252 22758 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:07.847110 22758 net.cpp:124] Setting up relu2
I0428 19:32:07.847124 22758 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:07.847128 22758 net.cpp:139] Memory required for data: 2069760
I0428 19:32:07.847133 22758 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:07.847141 22758 net.cpp:86] Creating Layer ip3
I0428 19:32:07.847146 22758 net.cpp:408] ip3 <- ip2
I0428 19:32:07.847152 22758 net.cpp:382] ip3 -> ip3
I0428 19:32:07.847267 22758 net.cpp:124] Setting up ip3
I0428 19:32:07.847276 22758 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:07.847280 22758 net.cpp:139] Memory required for data: 2072320
I0428 19:32:07.847286 22758 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:07.847295 22758 net.cpp:86] Creating Layer relu3
I0428 19:32:07.847298 22758 net.cpp:408] relu3 <- ip3
I0428 19:32:07.847303 22758 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:07.847478 22758 net.cpp:124] Setting up relu3
I0428 19:32:07.847487 22758 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:07.847491 22758 net.cpp:139] Memory required for data: 2074880
I0428 19:32:07.847496 22758 layer_factory.hpp:77] Creating layer loss
I0428 19:32:07.847502 22758 net.cpp:86] Creating Layer loss
I0428 19:32:07.847506 22758 net.cpp:408] loss <- ip3
I0428 19:32:07.847510 22758 net.cpp:408] loss <- label
I0428 19:32:07.847517 22758 net.cpp:382] loss -> loss
I0428 19:32:07.847533 22758 layer_factory.hpp:77] Creating layer loss
I0428 19:32:07.847801 22758 net.cpp:124] Setting up loss
I0428 19:32:07.847812 22758 net.cpp:131] Top shape: (1)
I0428 19:32:07.847816 22758 net.cpp:134]     with loss weight 1
I0428 19:32:07.847832 22758 net.cpp:139] Memory required for data: 2074884
I0428 19:32:07.847836 22758 net.cpp:200] loss needs backward computation.
I0428 19:32:07.847841 22758 net.cpp:200] relu3 needs backward computation.
I0428 19:32:07.847846 22758 net.cpp:200] ip3 needs backward computation.
I0428 19:32:07.847848 22758 net.cpp:200] relu2 needs backward computation.
I0428 19:32:07.847851 22758 net.cpp:200] ip2 needs backward computation.
I0428 19:32:07.847856 22758 net.cpp:200] relu1 needs backward computation.
I0428 19:32:07.847858 22758 net.cpp:200] ip1 needs backward computation.
I0428 19:32:07.847873 22758 net.cpp:200] pool0 needs backward computation.
I0428 19:32:07.847877 22758 net.cpp:200] conv0 needs backward computation.
I0428 19:32:07.847882 22758 net.cpp:202] mnist does not need backward computation.
I0428 19:32:07.847884 22758 net.cpp:244] This network produces output loss
I0428 19:32:07.847894 22758 net.cpp:257] Network initialization done.
I0428 19:32:07.848237 22758 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test143.prototxt
I0428 19:32:07.848268 22758 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:07.848366 22758 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:07.848441 22758 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:07.848497 22758 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:07.848512 22758 net.cpp:86] Creating Layer mnist
I0428 19:32:07.848517 22758 net.cpp:382] mnist -> data
I0428 19:32:07.848527 22758 net.cpp:382] mnist -> label
I0428 19:32:07.848624 22758 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:07.850837 22758 net.cpp:124] Setting up mnist
I0428 19:32:07.850853 22758 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:07.850860 22758 net.cpp:131] Top shape: 100 (100)
I0428 19:32:07.850864 22758 net.cpp:139] Memory required for data: 314000
I0428 19:32:07.850868 22758 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:07.850877 22758 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:07.850880 22758 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:07.850886 22758 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:07.850894 22758 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:07.850951 22758 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:07.850960 22758 net.cpp:131] Top shape: 100 (100)
I0428 19:32:07.850965 22758 net.cpp:131] Top shape: 100 (100)
I0428 19:32:07.850970 22758 net.cpp:139] Memory required for data: 314800
I0428 19:32:07.850985 22758 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:07.850996 22758 net.cpp:86] Creating Layer conv0
I0428 19:32:07.850999 22758 net.cpp:408] conv0 <- data
I0428 19:32:07.851006 22758 net.cpp:382] conv0 -> conv0
I0428 19:32:07.852892 22758 net.cpp:124] Setting up conv0
I0428 19:32:07.852908 22758 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:07.852913 22758 net.cpp:139] Memory required for data: 2618800
I0428 19:32:07.852924 22758 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:07.852931 22758 net.cpp:86] Creating Layer pool0
I0428 19:32:07.852937 22758 net.cpp:408] pool0 <- conv0
I0428 19:32:07.852942 22758 net.cpp:382] pool0 -> pool0
I0428 19:32:07.852984 22758 net.cpp:124] Setting up pool0
I0428 19:32:07.852991 22758 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:07.852994 22758 net.cpp:139] Memory required for data: 3194800
I0428 19:32:07.852998 22758 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:07.853006 22758 net.cpp:86] Creating Layer ip1
I0428 19:32:07.853009 22758 net.cpp:408] ip1 <- pool0
I0428 19:32:07.853015 22758 net.cpp:382] ip1 -> ip1
I0428 19:32:07.853379 22758 net.cpp:124] Setting up ip1
I0428 19:32:07.853387 22758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:07.853391 22758 net.cpp:139] Memory required for data: 3204800
I0428 19:32:07.853400 22758 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:07.853406 22758 net.cpp:86] Creating Layer relu1
I0428 19:32:07.853410 22758 net.cpp:408] relu1 <- ip1
I0428 19:32:07.853415 22758 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:07.853710 22758 net.cpp:124] Setting up relu1
I0428 19:32:07.853720 22758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:07.853724 22758 net.cpp:139] Memory required for data: 3214800
I0428 19:32:07.853729 22758 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:07.853736 22758 net.cpp:86] Creating Layer ip2
I0428 19:32:07.853740 22758 net.cpp:408] ip2 <- ip1
I0428 19:32:07.853746 22758 net.cpp:382] ip2 -> ip2
I0428 19:32:07.853862 22758 net.cpp:124] Setting up ip2
I0428 19:32:07.853870 22758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:07.853874 22758 net.cpp:139] Memory required for data: 3224800
I0428 19:32:07.853883 22758 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:07.853888 22758 net.cpp:86] Creating Layer relu2
I0428 19:32:07.853893 22758 net.cpp:408] relu2 <- ip2
I0428 19:32:07.853898 22758 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:07.854887 22758 net.cpp:124] Setting up relu2
I0428 19:32:07.854903 22758 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:07.854908 22758 net.cpp:139] Memory required for data: 3234800
I0428 19:32:07.854912 22758 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:07.854923 22758 net.cpp:86] Creating Layer ip3
I0428 19:32:07.854928 22758 net.cpp:408] ip3 <- ip2
I0428 19:32:07.854934 22758 net.cpp:382] ip3 -> ip3
I0428 19:32:07.855056 22758 net.cpp:124] Setting up ip3
I0428 19:32:07.855065 22758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:07.855069 22758 net.cpp:139] Memory required for data: 3238800
I0428 19:32:07.855077 22758 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:07.855082 22758 net.cpp:86] Creating Layer relu3
I0428 19:32:07.855087 22758 net.cpp:408] relu3 <- ip3
I0428 19:32:07.855093 22758 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:07.855271 22758 net.cpp:124] Setting up relu3
I0428 19:32:07.855281 22758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:07.855285 22758 net.cpp:139] Memory required for data: 3242800
I0428 19:32:07.855289 22758 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:07.855294 22758 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:07.855299 22758 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:07.855305 22758 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:07.855312 22758 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:07.855351 22758 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:07.855356 22758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:07.855361 22758 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:07.855377 22758 net.cpp:139] Memory required for data: 3250800
I0428 19:32:07.855381 22758 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:07.855387 22758 net.cpp:86] Creating Layer accuracy
I0428 19:32:07.855392 22758 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:07.855397 22758 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:07.855409 22758 net.cpp:382] accuracy -> accuracy
I0428 19:32:07.855418 22758 net.cpp:124] Setting up accuracy
I0428 19:32:07.855423 22758 net.cpp:131] Top shape: (1)
I0428 19:32:07.855427 22758 net.cpp:139] Memory required for data: 3250804
I0428 19:32:07.855430 22758 layer_factory.hpp:77] Creating layer loss
I0428 19:32:07.855437 22758 net.cpp:86] Creating Layer loss
I0428 19:32:07.855439 22758 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:07.855444 22758 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:07.855449 22758 net.cpp:382] loss -> loss
I0428 19:32:07.855456 22758 layer_factory.hpp:77] Creating layer loss
I0428 19:32:07.855727 22758 net.cpp:124] Setting up loss
I0428 19:32:07.855737 22758 net.cpp:131] Top shape: (1)
I0428 19:32:07.855741 22758 net.cpp:134]     with loss weight 1
I0428 19:32:07.855748 22758 net.cpp:139] Memory required for data: 3250808
I0428 19:32:07.855752 22758 net.cpp:200] loss needs backward computation.
I0428 19:32:07.855757 22758 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:07.855762 22758 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:07.855765 22758 net.cpp:200] relu3 needs backward computation.
I0428 19:32:07.855768 22758 net.cpp:200] ip3 needs backward computation.
I0428 19:32:07.855772 22758 net.cpp:200] relu2 needs backward computation.
I0428 19:32:07.855775 22758 net.cpp:200] ip2 needs backward computation.
I0428 19:32:07.855779 22758 net.cpp:200] relu1 needs backward computation.
I0428 19:32:07.855782 22758 net.cpp:200] ip1 needs backward computation.
I0428 19:32:07.855787 22758 net.cpp:200] pool0 needs backward computation.
I0428 19:32:07.855790 22758 net.cpp:200] conv0 needs backward computation.
I0428 19:32:07.855794 22758 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:07.855798 22758 net.cpp:202] mnist does not need backward computation.
I0428 19:32:07.855803 22758 net.cpp:244] This network produces output accuracy
I0428 19:32:07.855806 22758 net.cpp:244] This network produces output loss
I0428 19:32:07.855818 22758 net.cpp:257] Network initialization done.
I0428 19:32:07.855860 22758 solver.cpp:56] Solver scaffolding done.
I0428 19:32:07.856168 22758 caffe.cpp:248] Starting Optimization
I0428 19:32:07.856176 22758 solver.cpp:273] Solving LeNet
I0428 19:32:07.856180 22758 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:07.857060 22758 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:07.862149 22758 blocking_queue.cpp:49] Waiting for data
I0428 19:32:07.928637 22767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:07.929183 22758 solver.cpp:398]     Test net output #0: accuracy = 0.0675
I0428 19:32:07.929206 22758 solver.cpp:398]     Test net output #1: loss = 2.32354 (* 1 = 2.32354 loss)
I0428 19:32:07.931566 22758 solver.cpp:219] Iteration 0 (-7.2253e-31 iter/s, 0.07536s/100 iters), loss = 2.35077
I0428 19:32:07.931607 22758 solver.cpp:238]     Train net output #0: loss = 2.35077 (* 1 = 2.35077 loss)
I0428 19:32:07.931619 22758 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:08.002303 22758 solver.cpp:219] Iteration 100 (1414.66 iter/s, 0.0706883s/100 iters), loss = 0.946639
I0428 19:32:08.002336 22758 solver.cpp:238]     Train net output #0: loss = 0.946639 (* 1 = 0.946639 loss)
I0428 19:32:08.002344 22758 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:08.070578 22758 solver.cpp:219] Iteration 200 (1465.56 iter/s, 0.0682332s/100 iters), loss = 0.585358
I0428 19:32:08.070608 22758 solver.cpp:238]     Train net output #0: loss = 0.585358 (* 1 = 0.585358 loss)
I0428 19:32:08.070616 22758 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:08.137640 22758 solver.cpp:219] Iteration 300 (1492.01 iter/s, 0.0670236s/100 iters), loss = 0.709715
I0428 19:32:08.137670 22758 solver.cpp:238]     Train net output #0: loss = 0.709715 (* 1 = 0.709715 loss)
I0428 19:32:08.137676 22758 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:08.207078 22758 solver.cpp:219] Iteration 400 (1440.89 iter/s, 0.0694016s/100 iters), loss = 0.91769
I0428 19:32:08.207105 22758 solver.cpp:238]     Train net output #0: loss = 0.91769 (* 1 = 0.91769 loss)
I0428 19:32:08.207113 22758 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:08.270012 22758 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:08.325399 22767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:08.325943 22758 solver.cpp:398]     Test net output #0: accuracy = 0.839
I0428 19:32:08.325964 22758 solver.cpp:398]     Test net output #1: loss = 0.631395 (* 1 = 0.631395 loss)
I0428 19:32:08.326634 22758 solver.cpp:219] Iteration 500 (836.7 iter/s, 0.119517s/100 iters), loss = 0.803892
I0428 19:32:08.326660 22758 solver.cpp:238]     Train net output #0: loss = 0.803892 (* 1 = 0.803892 loss)
I0428 19:32:08.326668 22758 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:08.399878 22758 solver.cpp:219] Iteration 600 (1365.94 iter/s, 0.0732099s/100 iters), loss = 0.394099
I0428 19:32:08.399919 22758 solver.cpp:238]     Train net output #0: loss = 0.394099 (* 1 = 0.394099 loss)
I0428 19:32:08.399925 22758 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:08.464174 22758 solver.cpp:219] Iteration 700 (1556.13 iter/s, 0.0642621s/100 iters), loss = 0.647296
I0428 19:32:08.464215 22758 solver.cpp:238]     Train net output #0: loss = 0.647296 (* 1 = 0.647296 loss)
I0428 19:32:08.464221 22758 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:08.529238 22758 solver.cpp:219] Iteration 800 (1537.72 iter/s, 0.0650312s/100 iters), loss = 0.635193
I0428 19:32:08.529294 22758 solver.cpp:238]     Train net output #0: loss = 0.635193 (* 1 = 0.635193 loss)
I0428 19:32:08.529299 22758 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:08.594244 22758 solver.cpp:219] Iteration 900 (1539.45 iter/s, 0.0649585s/100 iters), loss = 0.46464
I0428 19:32:08.594285 22758 solver.cpp:238]     Train net output #0: loss = 0.46464 (* 1 = 0.46464 loss)
I0428 19:32:08.594291 22758 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:08.616396 22766 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:08.658617 22758 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:08.659590 22758 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:08.660275 22758 solver.cpp:311] Iteration 1000, loss = 0.570543
I0428 19:32:08.660290 22758 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:08.719394 22767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:08.719915 22758 solver.cpp:398]     Test net output #0: accuracy = 0.8606
I0428 19:32:08.719936 22758 solver.cpp:398]     Test net output #1: loss = 0.57874 (* 1 = 0.57874 loss)
I0428 19:32:08.719941 22758 solver.cpp:316] Optimization Done.
I0428 19:32:08.719945 22758 caffe.cpp:259] Optimization Done.
