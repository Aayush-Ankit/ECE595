I0428 20:26:18.963415  2772 caffe.cpp:218] Using GPUs 0
I0428 20:26:19.000779  2772 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:19.509678  2772 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1469.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:19.509821  2772 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1469.prototxt
I0428 20:26:19.510227  2772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:19.510244  2772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:19.510341  2772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:19.510416  2772 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:19.510515  2772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:19.510538  2772 net.cpp:86] Creating Layer mnist
I0428 20:26:19.510546  2772 net.cpp:382] mnist -> data
I0428 20:26:19.510570  2772 net.cpp:382] mnist -> label
I0428 20:26:19.511656  2772 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:19.514111  2772 net.cpp:124] Setting up mnist
I0428 20:26:19.514128  2772 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:19.514134  2772 net.cpp:131] Top shape: 64 (64)
I0428 20:26:19.514138  2772 net.cpp:139] Memory required for data: 200960
I0428 20:26:19.514147  2772 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:19.514161  2772 net.cpp:86] Creating Layer conv0
I0428 20:26:19.514183  2772 net.cpp:408] conv0 <- data
I0428 20:26:19.514194  2772 net.cpp:382] conv0 -> conv0
I0428 20:26:19.808750  2772 net.cpp:124] Setting up conv0
I0428 20:26:19.808779  2772 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:19.808784  2772 net.cpp:139] Memory required for data: 14946560
I0428 20:26:19.808799  2772 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:19.808821  2772 net.cpp:86] Creating Layer pool0
I0428 20:26:19.808827  2772 net.cpp:408] pool0 <- conv0
I0428 20:26:19.808833  2772 net.cpp:382] pool0 -> pool0
I0428 20:26:19.808886  2772 net.cpp:124] Setting up pool0
I0428 20:26:19.808893  2772 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:19.808897  2772 net.cpp:139] Memory required for data: 18632960
I0428 20:26:19.808900  2772 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:19.808913  2772 net.cpp:86] Creating Layer conv1
I0428 20:26:19.808917  2772 net.cpp:408] conv1 <- pool0
I0428 20:26:19.808923  2772 net.cpp:382] conv1 -> conv1
I0428 20:26:19.811758  2772 net.cpp:124] Setting up conv1
I0428 20:26:19.811772  2772 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:19.811776  2772 net.cpp:139] Memory required for data: 18665728
I0428 20:26:19.811785  2772 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:19.811794  2772 net.cpp:86] Creating Layer pool1
I0428 20:26:19.811797  2772 net.cpp:408] pool1 <- conv1
I0428 20:26:19.811805  2772 net.cpp:382] pool1 -> pool1
I0428 20:26:19.811843  2772 net.cpp:124] Setting up pool1
I0428 20:26:19.811848  2772 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:19.811851  2772 net.cpp:139] Memory required for data: 18673920
I0428 20:26:19.811856  2772 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:19.811862  2772 net.cpp:86] Creating Layer ip1
I0428 20:26:19.811866  2772 net.cpp:408] ip1 <- pool1
I0428 20:26:19.811870  2772 net.cpp:382] ip1 -> ip1
I0428 20:26:19.811975  2772 net.cpp:124] Setting up ip1
I0428 20:26:19.811982  2772 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:19.811985  2772 net.cpp:139] Memory required for data: 18680320
I0428 20:26:19.811992  2772 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:19.811998  2772 net.cpp:86] Creating Layer relu1
I0428 20:26:19.812001  2772 net.cpp:408] relu1 <- ip1
I0428 20:26:19.812006  2772 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:19.812202  2772 net.cpp:124] Setting up relu1
I0428 20:26:19.812212  2772 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:19.812216  2772 net.cpp:139] Memory required for data: 18686720
I0428 20:26:19.812218  2772 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:19.812225  2772 net.cpp:86] Creating Layer ip2
I0428 20:26:19.812229  2772 net.cpp:408] ip2 <- ip1
I0428 20:26:19.812234  2772 net.cpp:382] ip2 -> ip2
I0428 20:26:19.812338  2772 net.cpp:124] Setting up ip2
I0428 20:26:19.812345  2772 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:19.812348  2772 net.cpp:139] Memory required for data: 18693120
I0428 20:26:19.812355  2772 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:19.812361  2772 net.cpp:86] Creating Layer relu2
I0428 20:26:19.812364  2772 net.cpp:408] relu2 <- ip2
I0428 20:26:19.812368  2772 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:19.813128  2772 net.cpp:124] Setting up relu2
I0428 20:26:19.813143  2772 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:19.813145  2772 net.cpp:139] Memory required for data: 18699520
I0428 20:26:19.813149  2772 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:19.813156  2772 net.cpp:86] Creating Layer ip3
I0428 20:26:19.813160  2772 net.cpp:408] ip3 <- ip2
I0428 20:26:19.813166  2772 net.cpp:382] ip3 -> ip3
I0428 20:26:19.813272  2772 net.cpp:124] Setting up ip3
I0428 20:26:19.813280  2772 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:19.813283  2772 net.cpp:139] Memory required for data: 18702080
I0428 20:26:19.813292  2772 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:19.813297  2772 net.cpp:86] Creating Layer relu3
I0428 20:26:19.813300  2772 net.cpp:408] relu3 <- ip3
I0428 20:26:19.813305  2772 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:19.813480  2772 net.cpp:124] Setting up relu3
I0428 20:26:19.813489  2772 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:19.813493  2772 net.cpp:139] Memory required for data: 18704640
I0428 20:26:19.813496  2772 layer_factory.hpp:77] Creating layer loss
I0428 20:26:19.813503  2772 net.cpp:86] Creating Layer loss
I0428 20:26:19.813506  2772 net.cpp:408] loss <- ip3
I0428 20:26:19.813510  2772 net.cpp:408] loss <- label
I0428 20:26:19.813515  2772 net.cpp:382] loss -> loss
I0428 20:26:19.813530  2772 layer_factory.hpp:77] Creating layer loss
I0428 20:26:19.813766  2772 net.cpp:124] Setting up loss
I0428 20:26:19.813776  2772 net.cpp:131] Top shape: (1)
I0428 20:26:19.813779  2772 net.cpp:134]     with loss weight 1
I0428 20:26:19.813793  2772 net.cpp:139] Memory required for data: 18704644
I0428 20:26:19.813797  2772 net.cpp:200] loss needs backward computation.
I0428 20:26:19.813802  2772 net.cpp:200] relu3 needs backward computation.
I0428 20:26:19.813804  2772 net.cpp:200] ip3 needs backward computation.
I0428 20:26:19.813807  2772 net.cpp:200] relu2 needs backward computation.
I0428 20:26:19.813810  2772 net.cpp:200] ip2 needs backward computation.
I0428 20:26:19.813813  2772 net.cpp:200] relu1 needs backward computation.
I0428 20:26:19.813817  2772 net.cpp:200] ip1 needs backward computation.
I0428 20:26:19.813819  2772 net.cpp:200] pool1 needs backward computation.
I0428 20:26:19.813822  2772 net.cpp:200] conv1 needs backward computation.
I0428 20:26:19.813827  2772 net.cpp:200] pool0 needs backward computation.
I0428 20:26:19.813829  2772 net.cpp:200] conv0 needs backward computation.
I0428 20:26:19.813833  2772 net.cpp:202] mnist does not need backward computation.
I0428 20:26:19.813837  2772 net.cpp:244] This network produces output loss
I0428 20:26:19.813845  2772 net.cpp:257] Network initialization done.
I0428 20:26:19.814185  2772 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1469.prototxt
I0428 20:26:19.814213  2772 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:19.814307  2772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:19.814388  2772 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:19.814436  2772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:19.814450  2772 net.cpp:86] Creating Layer mnist
I0428 20:26:19.814455  2772 net.cpp:382] mnist -> data
I0428 20:26:19.814462  2772 net.cpp:382] mnist -> label
I0428 20:26:19.814551  2772 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:19.816720  2772 net.cpp:124] Setting up mnist
I0428 20:26:19.816733  2772 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:19.816740  2772 net.cpp:131] Top shape: 100 (100)
I0428 20:26:19.816742  2772 net.cpp:139] Memory required for data: 314000
I0428 20:26:19.816746  2772 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:19.816753  2772 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:19.816757  2772 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:19.816762  2772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:19.816769  2772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:19.816817  2772 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:19.816823  2772 net.cpp:131] Top shape: 100 (100)
I0428 20:26:19.816828  2772 net.cpp:131] Top shape: 100 (100)
I0428 20:26:19.816830  2772 net.cpp:139] Memory required for data: 314800
I0428 20:26:19.816833  2772 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:19.816843  2772 net.cpp:86] Creating Layer conv0
I0428 20:26:19.816845  2772 net.cpp:408] conv0 <- data
I0428 20:26:19.816851  2772 net.cpp:382] conv0 -> conv0
I0428 20:26:19.818542  2772 net.cpp:124] Setting up conv0
I0428 20:26:19.818557  2772 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:19.818560  2772 net.cpp:139] Memory required for data: 23354800
I0428 20:26:19.818570  2772 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:19.818578  2772 net.cpp:86] Creating Layer pool0
I0428 20:26:19.818580  2772 net.cpp:408] pool0 <- conv0
I0428 20:26:19.818585  2772 net.cpp:382] pool0 -> pool0
I0428 20:26:19.818622  2772 net.cpp:124] Setting up pool0
I0428 20:26:19.818629  2772 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:19.818631  2772 net.cpp:139] Memory required for data: 29114800
I0428 20:26:19.818634  2772 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:19.818644  2772 net.cpp:86] Creating Layer conv1
I0428 20:26:19.818646  2772 net.cpp:408] conv1 <- pool0
I0428 20:26:19.818651  2772 net.cpp:382] conv1 -> conv1
I0428 20:26:19.820161  2772 net.cpp:124] Setting up conv1
I0428 20:26:19.820178  2772 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:19.820183  2772 net.cpp:139] Memory required for data: 29166000
I0428 20:26:19.820191  2772 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:19.820199  2772 net.cpp:86] Creating Layer pool1
I0428 20:26:19.820204  2772 net.cpp:408] pool1 <- conv1
I0428 20:26:19.820209  2772 net.cpp:382] pool1 -> pool1
I0428 20:26:19.820246  2772 net.cpp:124] Setting up pool1
I0428 20:26:19.820251  2772 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:19.820255  2772 net.cpp:139] Memory required for data: 29178800
I0428 20:26:19.820258  2772 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:19.820264  2772 net.cpp:86] Creating Layer ip1
I0428 20:26:19.820268  2772 net.cpp:408] ip1 <- pool1
I0428 20:26:19.820273  2772 net.cpp:382] ip1 -> ip1
I0428 20:26:19.820376  2772 net.cpp:124] Setting up ip1
I0428 20:26:19.820384  2772 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:19.820399  2772 net.cpp:139] Memory required for data: 29188800
I0428 20:26:19.820406  2772 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:19.820411  2772 net.cpp:86] Creating Layer relu1
I0428 20:26:19.820415  2772 net.cpp:408] relu1 <- ip1
I0428 20:26:19.820420  2772 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:19.820580  2772 net.cpp:124] Setting up relu1
I0428 20:26:19.820591  2772 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:19.820595  2772 net.cpp:139] Memory required for data: 29198800
I0428 20:26:19.820598  2772 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:19.820605  2772 net.cpp:86] Creating Layer ip2
I0428 20:26:19.820608  2772 net.cpp:408] ip2 <- ip1
I0428 20:26:19.820614  2772 net.cpp:382] ip2 -> ip2
I0428 20:26:19.820730  2772 net.cpp:124] Setting up ip2
I0428 20:26:19.820737  2772 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:19.820740  2772 net.cpp:139] Memory required for data: 29208800
I0428 20:26:19.820746  2772 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:19.820751  2772 net.cpp:86] Creating Layer relu2
I0428 20:26:19.820755  2772 net.cpp:408] relu2 <- ip2
I0428 20:26:19.820758  2772 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:19.821017  2772 net.cpp:124] Setting up relu2
I0428 20:26:19.821027  2772 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:19.821030  2772 net.cpp:139] Memory required for data: 29218800
I0428 20:26:19.821034  2772 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:19.821041  2772 net.cpp:86] Creating Layer ip3
I0428 20:26:19.821044  2772 net.cpp:408] ip3 <- ip2
I0428 20:26:19.821049  2772 net.cpp:382] ip3 -> ip3
I0428 20:26:19.821163  2772 net.cpp:124] Setting up ip3
I0428 20:26:19.821172  2772 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:19.821175  2772 net.cpp:139] Memory required for data: 29222800
I0428 20:26:19.821183  2772 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:19.821188  2772 net.cpp:86] Creating Layer relu3
I0428 20:26:19.821192  2772 net.cpp:408] relu3 <- ip3
I0428 20:26:19.821195  2772 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:19.821970  2772 net.cpp:124] Setting up relu3
I0428 20:26:19.821982  2772 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:19.821986  2772 net.cpp:139] Memory required for data: 29226800
I0428 20:26:19.821990  2772 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:19.821995  2772 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:19.821998  2772 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:19.822005  2772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:19.822010  2772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:19.822082  2772 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:19.822089  2772 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:19.822093  2772 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:19.822098  2772 net.cpp:139] Memory required for data: 29234800
I0428 20:26:19.822105  2772 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:19.822114  2772 net.cpp:86] Creating Layer accuracy
I0428 20:26:19.822118  2772 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:19.822124  2772 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:19.822127  2772 net.cpp:382] accuracy -> accuracy
I0428 20:26:19.822135  2772 net.cpp:124] Setting up accuracy
I0428 20:26:19.822139  2772 net.cpp:131] Top shape: (1)
I0428 20:26:19.822147  2772 net.cpp:139] Memory required for data: 29234804
I0428 20:26:19.822150  2772 layer_factory.hpp:77] Creating layer loss
I0428 20:26:19.822155  2772 net.cpp:86] Creating Layer loss
I0428 20:26:19.822163  2772 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:19.822167  2772 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:19.822172  2772 net.cpp:382] loss -> loss
I0428 20:26:19.822177  2772 layer_factory.hpp:77] Creating layer loss
I0428 20:26:19.822407  2772 net.cpp:124] Setting up loss
I0428 20:26:19.822415  2772 net.cpp:131] Top shape: (1)
I0428 20:26:19.822420  2772 net.cpp:134]     with loss weight 1
I0428 20:26:19.822437  2772 net.cpp:139] Memory required for data: 29234808
I0428 20:26:19.822440  2772 net.cpp:200] loss needs backward computation.
I0428 20:26:19.822444  2772 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:19.822449  2772 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:19.822453  2772 net.cpp:200] relu3 needs backward computation.
I0428 20:26:19.822455  2772 net.cpp:200] ip3 needs backward computation.
I0428 20:26:19.822458  2772 net.cpp:200] relu2 needs backward computation.
I0428 20:26:19.822461  2772 net.cpp:200] ip2 needs backward computation.
I0428 20:26:19.822464  2772 net.cpp:200] relu1 needs backward computation.
I0428 20:26:19.822468  2772 net.cpp:200] ip1 needs backward computation.
I0428 20:26:19.822471  2772 net.cpp:200] pool1 needs backward computation.
I0428 20:26:19.822474  2772 net.cpp:200] conv1 needs backward computation.
I0428 20:26:19.822479  2772 net.cpp:200] pool0 needs backward computation.
I0428 20:26:19.822481  2772 net.cpp:200] conv0 needs backward computation.
I0428 20:26:19.822485  2772 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:19.822489  2772 net.cpp:202] mnist does not need backward computation.
I0428 20:26:19.822492  2772 net.cpp:244] This network produces output accuracy
I0428 20:26:19.822496  2772 net.cpp:244] This network produces output loss
I0428 20:26:19.822507  2772 net.cpp:257] Network initialization done.
I0428 20:26:19.822549  2772 solver.cpp:56] Solver scaffolding done.
I0428 20:26:19.822885  2772 caffe.cpp:248] Starting Optimization
I0428 20:26:19.822891  2772 solver.cpp:273] Solving LeNet
I0428 20:26:19.822895  2772 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:19.823738  2772 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:19.918004  2779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:19.920529  2772 solver.cpp:398]     Test net output #0: accuracy = 0.0613
I0428 20:26:19.920563  2772 solver.cpp:398]     Test net output #1: loss = 2.32317 (* 1 = 2.32317 loss)
I0428 20:26:19.924906  2772 solver.cpp:219] Iteration 0 (-8.97577e-31 iter/s, 0.101977s/100 iters), loss = 2.33892
I0428 20:26:19.924945  2772 solver.cpp:238]     Train net output #0: loss = 2.33892 (* 1 = 2.33892 loss)
I0428 20:26:19.924957  2772 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:20.133657  2772 solver.cpp:219] Iteration 100 (479.175 iter/s, 0.208692s/100 iters), loss = 0.405103
I0428 20:26:20.133698  2772 solver.cpp:238]     Train net output #0: loss = 0.405103 (* 1 = 0.405103 loss)
I0428 20:26:20.133708  2772 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:20.339215  2772 solver.cpp:219] Iteration 200 (486.61 iter/s, 0.205503s/100 iters), loss = 0.312005
I0428 20:26:20.339247  2772 solver.cpp:238]     Train net output #0: loss = 0.312005 (* 1 = 0.312005 loss)
I0428 20:26:20.339256  2772 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:20.553408  2772 solver.cpp:219] Iteration 300 (466.976 iter/s, 0.214144s/100 iters), loss = 0.297836
I0428 20:26:20.553447  2772 solver.cpp:238]     Train net output #0: loss = 0.297836 (* 1 = 0.297836 loss)
I0428 20:26:20.553457  2772 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:20.769534  2772 solver.cpp:219] Iteration 400 (462.821 iter/s, 0.216066s/100 iters), loss = 0.210278
I0428 20:26:20.769583  2772 solver.cpp:238]     Train net output #0: loss = 0.210278 (* 1 = 0.210278 loss)
I0428 20:26:20.769596  2772 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:20.983731  2772 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:21.089061  2779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:21.091769  2772 solver.cpp:398]     Test net output #0: accuracy = 0.9239
I0428 20:26:21.091796  2772 solver.cpp:398]     Test net output #1: loss = 0.248555 (* 1 = 0.248555 loss)
I0428 20:26:21.093757  2772 solver.cpp:219] Iteration 500 (308.494 iter/s, 0.324155s/100 iters), loss = 0.351662
I0428 20:26:21.093786  2772 solver.cpp:238]     Train net output #0: loss = 0.351662 (* 1 = 0.351662 loss)
I0428 20:26:21.093812  2772 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:21.295007  2772 solver.cpp:219] Iteration 600 (497.006 iter/s, 0.201205s/100 iters), loss = 0.118105
I0428 20:26:21.295043  2772 solver.cpp:238]     Train net output #0: loss = 0.118105 (* 1 = 0.118105 loss)
I0428 20:26:21.295053  2772 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:21.505559  2772 solver.cpp:219] Iteration 700 (475.065 iter/s, 0.210498s/100 iters), loss = 0.235992
I0428 20:26:21.505601  2772 solver.cpp:238]     Train net output #0: loss = 0.235992 (* 1 = 0.235992 loss)
I0428 20:26:21.505612  2772 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:21.715906  2772 solver.cpp:219] Iteration 800 (475.542 iter/s, 0.210287s/100 iters), loss = 0.145954
I0428 20:26:21.715952  2772 solver.cpp:238]     Train net output #0: loss = 0.145954 (* 1 = 0.145954 loss)
I0428 20:26:21.715962  2772 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:21.922672  2772 solver.cpp:219] Iteration 900 (483.792 iter/s, 0.206701s/100 iters), loss = 0.228268
I0428 20:26:21.922708  2772 solver.cpp:238]     Train net output #0: loss = 0.228268 (* 1 = 0.228268 loss)
I0428 20:26:21.922718  2772 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:21.990777  2778 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:22.124294  2772 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:22.125911  2772 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:22.126940  2772 solver.cpp:311] Iteration 1000, loss = 0.240803
I0428 20:26:22.126961  2772 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:22.225527  2779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:22.228201  2772 solver.cpp:398]     Test net output #0: accuracy = 0.9558
I0428 20:26:22.228225  2772 solver.cpp:398]     Test net output #1: loss = 0.145985 (* 1 = 0.145985 loss)
I0428 20:26:22.228232  2772 solver.cpp:316] Optimization Done.
I0428 20:26:22.228240  2772 caffe.cpp:259] Optimization Done.
