I0428 19:53:37.584265 27811 caffe.cpp:218] Using GPUs 0
I0428 19:53:37.619976 27811 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:38.074270 27811 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test692.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:38.074412 27811 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test692.prototxt
I0428 19:53:38.074762 27811 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:38.074793 27811 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:38.074875 27811 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:38.074940 27811 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:38.075040 27811 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:38.075062 27811 net.cpp:86] Creating Layer mnist
I0428 19:53:38.075073 27811 net.cpp:382] mnist -> data
I0428 19:53:38.075093 27811 net.cpp:382] mnist -> label
I0428 19:53:38.076009 27811 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:38.078239 27811 net.cpp:124] Setting up mnist
I0428 19:53:38.078285 27811 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:38.078312 27811 net.cpp:131] Top shape: 64 (64)
I0428 19:53:38.078316 27811 net.cpp:139] Memory required for data: 200960
I0428 19:53:38.078322 27811 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:38.078336 27811 net.cpp:86] Creating Layer conv0
I0428 19:53:38.078368 27811 net.cpp:408] conv0 <- data
I0428 19:53:38.078382 27811 net.cpp:382] conv0 -> conv0
I0428 19:53:38.306871 27811 net.cpp:124] Setting up conv0
I0428 19:53:38.306913 27811 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:38.306917 27811 net.cpp:139] Memory required for data: 938240
I0428 19:53:38.306932 27811 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:38.306946 27811 net.cpp:86] Creating Layer pool0
I0428 19:53:38.306949 27811 net.cpp:408] pool0 <- conv0
I0428 19:53:38.306970 27811 net.cpp:382] pool0 -> pool0
I0428 19:53:38.307015 27811 net.cpp:124] Setting up pool0
I0428 19:53:38.307034 27811 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:38.307037 27811 net.cpp:139] Memory required for data: 1122560
I0428 19:53:38.307040 27811 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:38.307050 27811 net.cpp:86] Creating Layer conv1
I0428 19:53:38.307054 27811 net.cpp:408] conv1 <- pool0
I0428 19:53:38.307059 27811 net.cpp:382] conv1 -> conv1
I0428 19:53:38.309823 27811 net.cpp:124] Setting up conv1
I0428 19:53:38.309854 27811 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:38.309857 27811 net.cpp:139] Memory required for data: 1941760
I0428 19:53:38.309865 27811 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:38.309873 27811 net.cpp:86] Creating Layer pool1
I0428 19:53:38.309876 27811 net.cpp:408] pool1 <- conv1
I0428 19:53:38.309881 27811 net.cpp:382] pool1 -> pool1
I0428 19:53:38.309948 27811 net.cpp:124] Setting up pool1
I0428 19:53:38.309954 27811 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:38.309957 27811 net.cpp:139] Memory required for data: 2146560
I0428 19:53:38.309960 27811 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:38.309967 27811 net.cpp:86] Creating Layer ip1
I0428 19:53:38.309970 27811 net.cpp:408] ip1 <- pool1
I0428 19:53:38.309974 27811 net.cpp:382] ip1 -> ip1
I0428 19:53:38.310175 27811 net.cpp:124] Setting up ip1
I0428 19:53:38.310197 27811 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:38.310200 27811 net.cpp:139] Memory required for data: 2152960
I0428 19:53:38.310207 27811 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:38.310212 27811 net.cpp:86] Creating Layer relu1
I0428 19:53:38.310215 27811 net.cpp:408] relu1 <- ip1
I0428 19:53:38.310220 27811 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:38.310367 27811 net.cpp:124] Setting up relu1
I0428 19:53:38.310375 27811 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:38.310379 27811 net.cpp:139] Memory required for data: 2159360
I0428 19:53:38.310381 27811 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:38.310387 27811 net.cpp:86] Creating Layer ip2
I0428 19:53:38.310390 27811 net.cpp:408] ip2 <- ip1
I0428 19:53:38.310395 27811 net.cpp:382] ip2 -> ip2
I0428 19:53:38.311404 27811 net.cpp:124] Setting up ip2
I0428 19:53:38.311415 27811 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:38.311435 27811 net.cpp:139] Memory required for data: 2172160
I0428 19:53:38.311441 27811 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:38.311449 27811 net.cpp:86] Creating Layer relu2
I0428 19:53:38.311451 27811 net.cpp:408] relu2 <- ip2
I0428 19:53:38.311456 27811 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:38.312278 27811 net.cpp:124] Setting up relu2
I0428 19:53:38.312291 27811 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:38.312311 27811 net.cpp:139] Memory required for data: 2184960
I0428 19:53:38.312315 27811 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:38.312322 27811 net.cpp:86] Creating Layer ip3
I0428 19:53:38.312326 27811 net.cpp:408] ip3 <- ip2
I0428 19:53:38.312332 27811 net.cpp:382] ip3 -> ip3
I0428 19:53:38.312441 27811 net.cpp:124] Setting up ip3
I0428 19:53:38.312449 27811 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:38.312453 27811 net.cpp:139] Memory required for data: 2187520
I0428 19:53:38.312461 27811 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:38.312466 27811 net.cpp:86] Creating Layer relu3
I0428 19:53:38.312470 27811 net.cpp:408] relu3 <- ip3
I0428 19:53:38.312474 27811 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:38.312690 27811 net.cpp:124] Setting up relu3
I0428 19:53:38.312698 27811 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:38.312702 27811 net.cpp:139] Memory required for data: 2190080
I0428 19:53:38.312705 27811 layer_factory.hpp:77] Creating layer loss
I0428 19:53:38.312711 27811 net.cpp:86] Creating Layer loss
I0428 19:53:38.312714 27811 net.cpp:408] loss <- ip3
I0428 19:53:38.312718 27811 net.cpp:408] loss <- label
I0428 19:53:38.312723 27811 net.cpp:382] loss -> loss
I0428 19:53:38.312737 27811 layer_factory.hpp:77] Creating layer loss
I0428 19:53:38.313042 27811 net.cpp:124] Setting up loss
I0428 19:53:38.313053 27811 net.cpp:131] Top shape: (1)
I0428 19:53:38.313057 27811 net.cpp:134]     with loss weight 1
I0428 19:53:38.313076 27811 net.cpp:139] Memory required for data: 2190084
I0428 19:53:38.313079 27811 net.cpp:200] loss needs backward computation.
I0428 19:53:38.313083 27811 net.cpp:200] relu3 needs backward computation.
I0428 19:53:38.313086 27811 net.cpp:200] ip3 needs backward computation.
I0428 19:53:38.313091 27811 net.cpp:200] relu2 needs backward computation.
I0428 19:53:38.313093 27811 net.cpp:200] ip2 needs backward computation.
I0428 19:53:38.313097 27811 net.cpp:200] relu1 needs backward computation.
I0428 19:53:38.313099 27811 net.cpp:200] ip1 needs backward computation.
I0428 19:53:38.313102 27811 net.cpp:200] pool1 needs backward computation.
I0428 19:53:38.313107 27811 net.cpp:200] conv1 needs backward computation.
I0428 19:53:38.313109 27811 net.cpp:200] pool0 needs backward computation.
I0428 19:53:38.313113 27811 net.cpp:200] conv0 needs backward computation.
I0428 19:53:38.313117 27811 net.cpp:202] mnist does not need backward computation.
I0428 19:53:38.313120 27811 net.cpp:244] This network produces output loss
I0428 19:53:38.313148 27811 net.cpp:257] Network initialization done.
I0428 19:53:38.313534 27811 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test692.prototxt
I0428 19:53:38.313576 27811 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:38.313676 27811 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:38.313752 27811 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:38.313796 27811 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:38.313808 27811 net.cpp:86] Creating Layer mnist
I0428 19:53:38.313812 27811 net.cpp:382] mnist -> data
I0428 19:53:38.313820 27811 net.cpp:382] mnist -> label
I0428 19:53:38.313910 27811 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:38.316042 27811 net.cpp:124] Setting up mnist
I0428 19:53:38.316087 27811 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:38.316092 27811 net.cpp:131] Top shape: 100 (100)
I0428 19:53:38.316095 27811 net.cpp:139] Memory required for data: 314000
I0428 19:53:38.316099 27811 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:38.316105 27811 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:38.316109 27811 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:38.316114 27811 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:38.316120 27811 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:38.316195 27811 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:38.316202 27811 net.cpp:131] Top shape: 100 (100)
I0428 19:53:38.316205 27811 net.cpp:131] Top shape: 100 (100)
I0428 19:53:38.316208 27811 net.cpp:139] Memory required for data: 314800
I0428 19:53:38.316211 27811 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:38.316220 27811 net.cpp:86] Creating Layer conv0
I0428 19:53:38.316223 27811 net.cpp:408] conv0 <- data
I0428 19:53:38.316227 27811 net.cpp:382] conv0 -> conv0
I0428 19:53:38.318017 27811 net.cpp:124] Setting up conv0
I0428 19:53:38.318030 27811 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:38.318050 27811 net.cpp:139] Memory required for data: 1466800
I0428 19:53:38.318059 27811 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:38.318065 27811 net.cpp:86] Creating Layer pool0
I0428 19:53:38.318069 27811 net.cpp:408] pool0 <- conv0
I0428 19:53:38.318073 27811 net.cpp:382] pool0 -> pool0
I0428 19:53:38.318107 27811 net.cpp:124] Setting up pool0
I0428 19:53:38.318112 27811 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:38.318115 27811 net.cpp:139] Memory required for data: 1754800
I0428 19:53:38.318119 27811 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:38.318126 27811 net.cpp:86] Creating Layer conv1
I0428 19:53:38.318130 27811 net.cpp:408] conv1 <- pool0
I0428 19:53:38.318135 27811 net.cpp:382] conv1 -> conv1
I0428 19:53:38.319712 27811 net.cpp:124] Setting up conv1
I0428 19:53:38.319741 27811 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:38.319763 27811 net.cpp:139] Memory required for data: 3034800
I0428 19:53:38.319772 27811 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:38.319779 27811 net.cpp:86] Creating Layer pool1
I0428 19:53:38.319782 27811 net.cpp:408] pool1 <- conv1
I0428 19:53:38.319788 27811 net.cpp:382] pool1 -> pool1
I0428 19:53:38.319823 27811 net.cpp:124] Setting up pool1
I0428 19:53:38.319835 27811 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:38.319839 27811 net.cpp:139] Memory required for data: 3354800
I0428 19:53:38.319842 27811 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:38.319849 27811 net.cpp:86] Creating Layer ip1
I0428 19:53:38.319851 27811 net.cpp:408] ip1 <- pool1
I0428 19:53:38.319857 27811 net.cpp:382] ip1 -> ip1
I0428 19:53:38.320071 27811 net.cpp:124] Setting up ip1
I0428 19:53:38.320080 27811 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:38.320093 27811 net.cpp:139] Memory required for data: 3364800
I0428 19:53:38.320101 27811 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:38.320112 27811 net.cpp:86] Creating Layer relu1
I0428 19:53:38.320116 27811 net.cpp:408] relu1 <- ip1
I0428 19:53:38.320122 27811 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:38.320296 27811 net.cpp:124] Setting up relu1
I0428 19:53:38.320303 27811 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:38.320307 27811 net.cpp:139] Memory required for data: 3374800
I0428 19:53:38.320309 27811 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:38.320317 27811 net.cpp:86] Creating Layer ip2
I0428 19:53:38.320322 27811 net.cpp:408] ip2 <- ip1
I0428 19:53:38.320325 27811 net.cpp:382] ip2 -> ip2
I0428 19:53:38.320473 27811 net.cpp:124] Setting up ip2
I0428 19:53:38.320480 27811 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:38.320483 27811 net.cpp:139] Memory required for data: 3394800
I0428 19:53:38.320489 27811 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:38.320494 27811 net.cpp:86] Creating Layer relu2
I0428 19:53:38.320498 27811 net.cpp:408] relu2 <- ip2
I0428 19:53:38.320502 27811 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:38.320734 27811 net.cpp:124] Setting up relu2
I0428 19:53:38.320744 27811 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:38.320749 27811 net.cpp:139] Memory required for data: 3414800
I0428 19:53:38.320751 27811 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:38.320758 27811 net.cpp:86] Creating Layer ip3
I0428 19:53:38.320766 27811 net.cpp:408] ip3 <- ip2
I0428 19:53:38.320772 27811 net.cpp:382] ip3 -> ip3
I0428 19:53:38.320917 27811 net.cpp:124] Setting up ip3
I0428 19:53:38.320926 27811 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:38.320930 27811 net.cpp:139] Memory required for data: 3418800
I0428 19:53:38.320938 27811 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:38.320945 27811 net.cpp:86] Creating Layer relu3
I0428 19:53:38.320948 27811 net.cpp:408] relu3 <- ip3
I0428 19:53:38.320952 27811 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:38.321866 27811 net.cpp:124] Setting up relu3
I0428 19:53:38.321879 27811 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:38.321902 27811 net.cpp:139] Memory required for data: 3422800
I0428 19:53:38.321905 27811 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:38.321925 27811 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:38.321929 27811 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:38.321933 27811 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:38.321939 27811 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:38.321992 27811 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:38.321998 27811 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:38.322001 27811 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:38.322005 27811 net.cpp:139] Memory required for data: 3430800
I0428 19:53:38.322007 27811 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:38.322012 27811 net.cpp:86] Creating Layer accuracy
I0428 19:53:38.322016 27811 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:38.322019 27811 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:38.322026 27811 net.cpp:382] accuracy -> accuracy
I0428 19:53:38.322031 27811 net.cpp:124] Setting up accuracy
I0428 19:53:38.322036 27811 net.cpp:131] Top shape: (1)
I0428 19:53:38.322038 27811 net.cpp:139] Memory required for data: 3430804
I0428 19:53:38.322041 27811 layer_factory.hpp:77] Creating layer loss
I0428 19:53:38.322052 27811 net.cpp:86] Creating Layer loss
I0428 19:53:38.322057 27811 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:38.322059 27811 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:38.322063 27811 net.cpp:382] loss -> loss
I0428 19:53:38.322069 27811 layer_factory.hpp:77] Creating layer loss
I0428 19:53:38.322340 27811 net.cpp:124] Setting up loss
I0428 19:53:38.322350 27811 net.cpp:131] Top shape: (1)
I0428 19:53:38.322352 27811 net.cpp:134]     with loss weight 1
I0428 19:53:38.322360 27811 net.cpp:139] Memory required for data: 3430808
I0428 19:53:38.322373 27811 net.cpp:200] loss needs backward computation.
I0428 19:53:38.322378 27811 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:38.322382 27811 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:38.322386 27811 net.cpp:200] relu3 needs backward computation.
I0428 19:53:38.322388 27811 net.cpp:200] ip3 needs backward computation.
I0428 19:53:38.322391 27811 net.cpp:200] relu2 needs backward computation.
I0428 19:53:38.322394 27811 net.cpp:200] ip2 needs backward computation.
I0428 19:53:38.322397 27811 net.cpp:200] relu1 needs backward computation.
I0428 19:53:38.322401 27811 net.cpp:200] ip1 needs backward computation.
I0428 19:53:38.322403 27811 net.cpp:200] pool1 needs backward computation.
I0428 19:53:38.322407 27811 net.cpp:200] conv1 needs backward computation.
I0428 19:53:38.322409 27811 net.cpp:200] pool0 needs backward computation.
I0428 19:53:38.322412 27811 net.cpp:200] conv0 needs backward computation.
I0428 19:53:38.322417 27811 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:38.322420 27811 net.cpp:202] mnist does not need backward computation.
I0428 19:53:38.322422 27811 net.cpp:244] This network produces output accuracy
I0428 19:53:38.322427 27811 net.cpp:244] This network produces output loss
I0428 19:53:38.322438 27811 net.cpp:257] Network initialization done.
I0428 19:53:38.322491 27811 solver.cpp:56] Solver scaffolding done.
I0428 19:53:38.322916 27811 caffe.cpp:248] Starting Optimization
I0428 19:53:38.322921 27811 solver.cpp:273] Solving LeNet
I0428 19:53:38.322924 27811 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:38.323863 27811 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:38.328025 27811 blocking_queue.cpp:49] Waiting for data
I0428 19:53:38.391721 27818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:38.392236 27811 solver.cpp:398]     Test net output #0: accuracy = 0.1018
I0428 19:53:38.392271 27811 solver.cpp:398]     Test net output #1: loss = 2.32733 (* 1 = 2.32733 loss)
I0428 19:53:38.395254 27811 solver.cpp:219] Iteration 0 (0 iter/s, 0.072276s/100 iters), loss = 2.33377
I0428 19:53:38.395292 27811 solver.cpp:238]     Train net output #0: loss = 2.33377 (* 1 = 2.33377 loss)
I0428 19:53:38.395303 27811 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:38.500633 27811 solver.cpp:219] Iteration 100 (949.454 iter/s, 0.105324s/100 iters), loss = 0.419323
I0428 19:53:38.500671 27811 solver.cpp:238]     Train net output #0: loss = 0.419323 (* 1 = 0.419323 loss)
I0428 19:53:38.500677 27811 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:38.606150 27811 solver.cpp:219] Iteration 200 (948.036 iter/s, 0.105481s/100 iters), loss = 0.182002
I0428 19:53:38.606192 27811 solver.cpp:238]     Train net output #0: loss = 0.182002 (* 1 = 0.182002 loss)
I0428 19:53:38.606199 27811 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:38.712450 27811 solver.cpp:219] Iteration 300 (941.192 iter/s, 0.106248s/100 iters), loss = 0.263094
I0428 19:53:38.712489 27811 solver.cpp:238]     Train net output #0: loss = 0.263094 (* 1 = 0.263094 loss)
I0428 19:53:38.712496 27811 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:38.820278 27811 solver.cpp:219] Iteration 400 (927.692 iter/s, 0.107794s/100 iters), loss = 0.12918
I0428 19:53:38.820317 27811 solver.cpp:238]     Train net output #0: loss = 0.12918 (* 1 = 0.12918 loss)
I0428 19:53:38.820323 27811 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:38.926874 27811 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:38.980137 27818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:38.980662 27811 solver.cpp:398]     Test net output #0: accuracy = 0.9653
I0428 19:53:38.980698 27811 solver.cpp:398]     Test net output #1: loss = 0.10824 (* 1 = 0.10824 loss)
I0428 19:53:38.981793 27811 solver.cpp:219] Iteration 500 (619.277 iter/s, 0.161479s/100 iters), loss = 0.143369
I0428 19:53:38.981860 27811 solver.cpp:238]     Train net output #0: loss = 0.143369 (* 1 = 0.143369 loss)
I0428 19:53:38.981883 27811 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:39.092173 27811 solver.cpp:219] Iteration 600 (906.462 iter/s, 0.110319s/100 iters), loss = 0.0827779
I0428 19:53:39.092216 27811 solver.cpp:238]     Train net output #0: loss = 0.0827779 (* 1 = 0.0827779 loss)
I0428 19:53:39.092222 27811 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:39.198330 27811 solver.cpp:219] Iteration 700 (942.336 iter/s, 0.106119s/100 iters), loss = 0.266894
I0428 19:53:39.198372 27811 solver.cpp:238]     Train net output #0: loss = 0.266894 (* 1 = 0.266894 loss)
I0428 19:53:39.198379 27811 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:39.302497 27811 solver.cpp:219] Iteration 800 (960.475 iter/s, 0.104115s/100 iters), loss = 0.307886
I0428 19:53:39.302538 27811 solver.cpp:238]     Train net output #0: loss = 0.307886 (* 1 = 0.307886 loss)
I0428 19:53:39.302544 27811 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:39.409111 27811 solver.cpp:219] Iteration 900 (938.416 iter/s, 0.106563s/100 iters), loss = 0.184033
I0428 19:53:39.409164 27811 solver.cpp:238]     Train net output #0: loss = 0.184033 (* 1 = 0.184033 loss)
I0428 19:53:39.409171 27811 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:39.445370 27817 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:39.515627 27811 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:39.517035 27811 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:39.517721 27811 solver.cpp:311] Iteration 1000, loss = 0.101484
I0428 19:53:39.517736 27811 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:39.593879 27818 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:39.594436 27811 solver.cpp:398]     Test net output #0: accuracy = 0.9756
I0428 19:53:39.594471 27811 solver.cpp:398]     Test net output #1: loss = 0.0715769 (* 1 = 0.0715769 loss)
I0428 19:53:39.594477 27811 solver.cpp:316] Optimization Done.
I0428 19:53:39.594480 27811 caffe.cpp:259] Optimization Done.
