I0428 20:21:49.586493  1833 caffe.cpp:218] Using GPUs 0
I0428 20:21:49.618162  1833 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:50.127909  1833 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1392.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:50.128057  1833 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1392.prototxt
I0428 20:21:50.128478  1833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:50.128497  1833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:50.128604  1833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:50.128684  1833 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:50.128788  1833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:50.128819  1833 net.cpp:86] Creating Layer mnist
I0428 20:21:50.128828  1833 net.cpp:382] mnist -> data
I0428 20:21:50.128850  1833 net.cpp:382] mnist -> label
I0428 20:21:50.129941  1833 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:50.132657  1833 net.cpp:124] Setting up mnist
I0428 20:21:50.132674  1833 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:50.132680  1833 net.cpp:131] Top shape: 64 (64)
I0428 20:21:50.132684  1833 net.cpp:139] Memory required for data: 200960
I0428 20:21:50.132691  1833 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:50.132763  1833 net.cpp:86] Creating Layer conv0
I0428 20:21:50.132787  1833 net.cpp:408] conv0 <- data
I0428 20:21:50.132800  1833 net.cpp:382] conv0 -> conv0
I0428 20:21:50.416302  1833 net.cpp:124] Setting up conv0
I0428 20:21:50.416329  1833 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:50.416333  1833 net.cpp:139] Memory required for data: 7573760
I0428 20:21:50.416348  1833 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:50.416362  1833 net.cpp:86] Creating Layer pool0
I0428 20:21:50.416366  1833 net.cpp:408] pool0 <- conv0
I0428 20:21:50.416371  1833 net.cpp:382] pool0 -> pool0
I0428 20:21:50.416416  1833 net.cpp:124] Setting up pool0
I0428 20:21:50.416421  1833 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:50.416424  1833 net.cpp:139] Memory required for data: 9416960
I0428 20:21:50.416429  1833 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:50.416438  1833 net.cpp:86] Creating Layer conv1
I0428 20:21:50.416441  1833 net.cpp:408] conv1 <- pool0
I0428 20:21:50.416446  1833 net.cpp:382] conv1 -> conv1
I0428 20:21:50.418614  1833 net.cpp:124] Setting up conv1
I0428 20:21:50.418628  1833 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:50.418632  1833 net.cpp:139] Memory required for data: 10236160
I0428 20:21:50.418640  1833 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:50.418648  1833 net.cpp:86] Creating Layer pool1
I0428 20:21:50.418650  1833 net.cpp:408] pool1 <- conv1
I0428 20:21:50.418655  1833 net.cpp:382] pool1 -> pool1
I0428 20:21:50.418690  1833 net.cpp:124] Setting up pool1
I0428 20:21:50.418695  1833 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:50.418697  1833 net.cpp:139] Memory required for data: 10440960
I0428 20:21:50.418700  1833 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:50.418707  1833 net.cpp:86] Creating Layer ip1
I0428 20:21:50.418712  1833 net.cpp:408] ip1 <- pool1
I0428 20:21:50.418716  1833 net.cpp:382] ip1 -> ip1
I0428 20:21:50.418913  1833 net.cpp:124] Setting up ip1
I0428 20:21:50.418921  1833 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:50.418925  1833 net.cpp:139] Memory required for data: 10447360
I0428 20:21:50.418931  1833 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:50.418937  1833 net.cpp:86] Creating Layer relu1
I0428 20:21:50.418941  1833 net.cpp:408] relu1 <- ip1
I0428 20:21:50.418944  1833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:50.419102  1833 net.cpp:124] Setting up relu1
I0428 20:21:50.419111  1833 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:50.419113  1833 net.cpp:139] Memory required for data: 10453760
I0428 20:21:50.419116  1833 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:50.419122  1833 net.cpp:86] Creating Layer ip2
I0428 20:21:50.419126  1833 net.cpp:408] ip2 <- ip1
I0428 20:21:50.419129  1833 net.cpp:382] ip2 -> ip2
I0428 20:21:50.419226  1833 net.cpp:124] Setting up ip2
I0428 20:21:50.419234  1833 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:50.419236  1833 net.cpp:139] Memory required for data: 10466560
I0428 20:21:50.419241  1833 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:50.419247  1833 net.cpp:86] Creating Layer relu2
I0428 20:21:50.419250  1833 net.cpp:408] relu2 <- ip2
I0428 20:21:50.419253  1833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:50.419940  1833 net.cpp:124] Setting up relu2
I0428 20:21:50.419961  1833 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:50.419965  1833 net.cpp:139] Memory required for data: 10479360
I0428 20:21:50.419968  1833 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:50.419975  1833 net.cpp:86] Creating Layer ip3
I0428 20:21:50.419977  1833 net.cpp:408] ip3 <- ip2
I0428 20:21:50.419983  1833 net.cpp:382] ip3 -> ip3
I0428 20:21:50.420080  1833 net.cpp:124] Setting up ip3
I0428 20:21:50.420089  1833 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:50.420091  1833 net.cpp:139] Memory required for data: 10481920
I0428 20:21:50.420099  1833 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:50.420104  1833 net.cpp:86] Creating Layer relu3
I0428 20:21:50.420106  1833 net.cpp:408] relu3 <- ip3
I0428 20:21:50.420110  1833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:50.420265  1833 net.cpp:124] Setting up relu3
I0428 20:21:50.420274  1833 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:50.420276  1833 net.cpp:139] Memory required for data: 10484480
I0428 20:21:50.420279  1833 layer_factory.hpp:77] Creating layer loss
I0428 20:21:50.420284  1833 net.cpp:86] Creating Layer loss
I0428 20:21:50.420287  1833 net.cpp:408] loss <- ip3
I0428 20:21:50.420291  1833 net.cpp:408] loss <- label
I0428 20:21:50.420296  1833 net.cpp:382] loss -> loss
I0428 20:21:50.420310  1833 layer_factory.hpp:77] Creating layer loss
I0428 20:21:50.420522  1833 net.cpp:124] Setting up loss
I0428 20:21:50.420532  1833 net.cpp:131] Top shape: (1)
I0428 20:21:50.420536  1833 net.cpp:134]     with loss weight 1
I0428 20:21:50.420548  1833 net.cpp:139] Memory required for data: 10484484
I0428 20:21:50.420552  1833 net.cpp:200] loss needs backward computation.
I0428 20:21:50.420555  1833 net.cpp:200] relu3 needs backward computation.
I0428 20:21:50.420558  1833 net.cpp:200] ip3 needs backward computation.
I0428 20:21:50.420560  1833 net.cpp:200] relu2 needs backward computation.
I0428 20:21:50.420563  1833 net.cpp:200] ip2 needs backward computation.
I0428 20:21:50.420567  1833 net.cpp:200] relu1 needs backward computation.
I0428 20:21:50.420568  1833 net.cpp:200] ip1 needs backward computation.
I0428 20:21:50.420572  1833 net.cpp:200] pool1 needs backward computation.
I0428 20:21:50.420574  1833 net.cpp:200] conv1 needs backward computation.
I0428 20:21:50.420578  1833 net.cpp:200] pool0 needs backward computation.
I0428 20:21:50.420580  1833 net.cpp:200] conv0 needs backward computation.
I0428 20:21:50.420583  1833 net.cpp:202] mnist does not need backward computation.
I0428 20:21:50.420586  1833 net.cpp:244] This network produces output loss
I0428 20:21:50.420594  1833 net.cpp:257] Network initialization done.
I0428 20:21:50.421003  1833 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1392.prototxt
I0428 20:21:50.421047  1833 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:50.421144  1833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:50.421252  1833 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:50.421298  1833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:50.421310  1833 net.cpp:86] Creating Layer mnist
I0428 20:21:50.421329  1833 net.cpp:382] mnist -> data
I0428 20:21:50.421336  1833 net.cpp:382] mnist -> label
I0428 20:21:50.421437  1833 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:50.423342  1833 net.cpp:124] Setting up mnist
I0428 20:21:50.423354  1833 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:50.423359  1833 net.cpp:131] Top shape: 100 (100)
I0428 20:21:50.423362  1833 net.cpp:139] Memory required for data: 314000
I0428 20:21:50.423365  1833 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:50.423372  1833 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:50.423375  1833 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:50.423380  1833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:50.423387  1833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:50.423420  1833 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:50.423424  1833 net.cpp:131] Top shape: 100 (100)
I0428 20:21:50.423429  1833 net.cpp:131] Top shape: 100 (100)
I0428 20:21:50.423430  1833 net.cpp:139] Memory required for data: 314800
I0428 20:21:50.423434  1833 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:50.423440  1833 net.cpp:86] Creating Layer conv0
I0428 20:21:50.423444  1833 net.cpp:408] conv0 <- data
I0428 20:21:50.423449  1833 net.cpp:382] conv0 -> conv0
I0428 20:21:50.425215  1833 net.cpp:124] Setting up conv0
I0428 20:21:50.425228  1833 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:50.425232  1833 net.cpp:139] Memory required for data: 11834800
I0428 20:21:50.425246  1833 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:50.425251  1833 net.cpp:86] Creating Layer pool0
I0428 20:21:50.425271  1833 net.cpp:408] pool0 <- conv0
I0428 20:21:50.425274  1833 net.cpp:382] pool0 -> pool0
I0428 20:21:50.425308  1833 net.cpp:124] Setting up pool0
I0428 20:21:50.425313  1833 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:50.425315  1833 net.cpp:139] Memory required for data: 14714800
I0428 20:21:50.425318  1833 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:50.425326  1833 net.cpp:86] Creating Layer conv1
I0428 20:21:50.425329  1833 net.cpp:408] conv1 <- pool0
I0428 20:21:50.425334  1833 net.cpp:382] conv1 -> conv1
I0428 20:21:50.427225  1833 net.cpp:124] Setting up conv1
I0428 20:21:50.427243  1833 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:50.427263  1833 net.cpp:139] Memory required for data: 15994800
I0428 20:21:50.427285  1833 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:50.427306  1833 net.cpp:86] Creating Layer pool1
I0428 20:21:50.427317  1833 net.cpp:408] pool1 <- conv1
I0428 20:21:50.427322  1833 net.cpp:382] pool1 -> pool1
I0428 20:21:50.427358  1833 net.cpp:124] Setting up pool1
I0428 20:21:50.427371  1833 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:50.427374  1833 net.cpp:139] Memory required for data: 16314800
I0428 20:21:50.427377  1833 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:50.427383  1833 net.cpp:86] Creating Layer ip1
I0428 20:21:50.427386  1833 net.cpp:408] ip1 <- pool1
I0428 20:21:50.427390  1833 net.cpp:382] ip1 -> ip1
I0428 20:21:50.427634  1833 net.cpp:124] Setting up ip1
I0428 20:21:50.427641  1833 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:50.427654  1833 net.cpp:139] Memory required for data: 16324800
I0428 20:21:50.427660  1833 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:50.427673  1833 net.cpp:86] Creating Layer relu1
I0428 20:21:50.427676  1833 net.cpp:408] relu1 <- ip1
I0428 20:21:50.427680  1833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:50.427836  1833 net.cpp:124] Setting up relu1
I0428 20:21:50.427860  1833 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:50.427865  1833 net.cpp:139] Memory required for data: 16334800
I0428 20:21:50.427868  1833 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:50.427877  1833 net.cpp:86] Creating Layer ip2
I0428 20:21:50.427881  1833 net.cpp:408] ip2 <- ip1
I0428 20:21:50.427891  1833 net.cpp:382] ip2 -> ip2
I0428 20:21:50.427991  1833 net.cpp:124] Setting up ip2
I0428 20:21:50.427999  1833 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:50.428001  1833 net.cpp:139] Memory required for data: 16354800
I0428 20:21:50.428006  1833 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:50.428010  1833 net.cpp:86] Creating Layer relu2
I0428 20:21:50.428014  1833 net.cpp:408] relu2 <- ip2
I0428 20:21:50.428017  1833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:50.428272  1833 net.cpp:124] Setting up relu2
I0428 20:21:50.428279  1833 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:50.428283  1833 net.cpp:139] Memory required for data: 16374800
I0428 20:21:50.428287  1833 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:50.428292  1833 net.cpp:86] Creating Layer ip3
I0428 20:21:50.428295  1833 net.cpp:408] ip3 <- ip2
I0428 20:21:50.428300  1833 net.cpp:382] ip3 -> ip3
I0428 20:21:50.428396  1833 net.cpp:124] Setting up ip3
I0428 20:21:50.428403  1833 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:50.428407  1833 net.cpp:139] Memory required for data: 16378800
I0428 20:21:50.428414  1833 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:50.428419  1833 net.cpp:86] Creating Layer relu3
I0428 20:21:50.428422  1833 net.cpp:408] relu3 <- ip3
I0428 20:21:50.428426  1833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:50.429338  1833 net.cpp:124] Setting up relu3
I0428 20:21:50.429350  1833 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:50.429353  1833 net.cpp:139] Memory required for data: 16382800
I0428 20:21:50.429358  1833 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:50.429363  1833 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:50.429365  1833 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:50.429370  1833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:50.429375  1833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:50.429414  1833 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:50.429419  1833 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:50.429422  1833 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:50.429426  1833 net.cpp:139] Memory required for data: 16390800
I0428 20:21:50.429430  1833 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:50.429433  1833 net.cpp:86] Creating Layer accuracy
I0428 20:21:50.429436  1833 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:50.429440  1833 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:50.429445  1833 net.cpp:382] accuracy -> accuracy
I0428 20:21:50.429451  1833 net.cpp:124] Setting up accuracy
I0428 20:21:50.429455  1833 net.cpp:131] Top shape: (1)
I0428 20:21:50.429457  1833 net.cpp:139] Memory required for data: 16390804
I0428 20:21:50.429460  1833 layer_factory.hpp:77] Creating layer loss
I0428 20:21:50.429463  1833 net.cpp:86] Creating Layer loss
I0428 20:21:50.429466  1833 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:50.429471  1833 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:50.429473  1833 net.cpp:382] loss -> loss
I0428 20:21:50.429479  1833 layer_factory.hpp:77] Creating layer loss
I0428 20:21:50.429751  1833 net.cpp:124] Setting up loss
I0428 20:21:50.429762  1833 net.cpp:131] Top shape: (1)
I0428 20:21:50.429766  1833 net.cpp:134]     with loss weight 1
I0428 20:21:50.429782  1833 net.cpp:139] Memory required for data: 16390808
I0428 20:21:50.429792  1833 net.cpp:200] loss needs backward computation.
I0428 20:21:50.429796  1833 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:50.429800  1833 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:50.429803  1833 net.cpp:200] relu3 needs backward computation.
I0428 20:21:50.429806  1833 net.cpp:200] ip3 needs backward computation.
I0428 20:21:50.429810  1833 net.cpp:200] relu2 needs backward computation.
I0428 20:21:50.429812  1833 net.cpp:200] ip2 needs backward computation.
I0428 20:21:50.429816  1833 net.cpp:200] relu1 needs backward computation.
I0428 20:21:50.429817  1833 net.cpp:200] ip1 needs backward computation.
I0428 20:21:50.429826  1833 net.cpp:200] pool1 needs backward computation.
I0428 20:21:50.429829  1833 net.cpp:200] conv1 needs backward computation.
I0428 20:21:50.429832  1833 net.cpp:200] pool0 needs backward computation.
I0428 20:21:50.429836  1833 net.cpp:200] conv0 needs backward computation.
I0428 20:21:50.429846  1833 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:50.429849  1833 net.cpp:202] mnist does not need backward computation.
I0428 20:21:50.429852  1833 net.cpp:244] This network produces output accuracy
I0428 20:21:50.429855  1833 net.cpp:244] This network produces output loss
I0428 20:21:50.429865  1833 net.cpp:257] Network initialization done.
I0428 20:21:50.429908  1833 solver.cpp:56] Solver scaffolding done.
I0428 20:21:50.430251  1833 caffe.cpp:248] Starting Optimization
I0428 20:21:50.430259  1833 solver.cpp:273] Solving LeNet
I0428 20:21:50.430284  1833 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:50.431028  1833 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:50.438688  1833 blocking_queue.cpp:49] Waiting for data
I0428 20:21:50.509420  1840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:50.510496  1833 solver.cpp:398]     Test net output #0: accuracy = 0.0603
I0428 20:21:50.510524  1833 solver.cpp:398]     Test net output #1: loss = 2.3201 (* 1 = 2.3201 loss)
I0428 20:21:50.514861  1833 solver.cpp:219] Iteration 0 (0 iter/s, 0.0845527s/100 iters), loss = 2.33296
I0428 20:21:50.514883  1833 solver.cpp:238]     Train net output #0: loss = 2.33296 (* 1 = 2.33296 loss)
I0428 20:21:50.514894  1833 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:50.675240  1833 solver.cpp:219] Iteration 100 (623.667 iter/s, 0.160342s/100 iters), loss = 0.717038
I0428 20:21:50.675266  1833 solver.cpp:238]     Train net output #0: loss = 0.717038 (* 1 = 0.717038 loss)
I0428 20:21:50.675272  1833 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:50.827867  1833 solver.cpp:219] Iteration 200 (655.363 iter/s, 0.152587s/100 iters), loss = 0.654298
I0428 20:21:50.827906  1833 solver.cpp:238]     Train net output #0: loss = 0.654298 (* 1 = 0.654298 loss)
I0428 20:21:50.827913  1833 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:50.980463  1833 solver.cpp:219] Iteration 300 (655.481 iter/s, 0.15256s/100 iters), loss = 0.356417
I0428 20:21:50.980504  1833 solver.cpp:238]     Train net output #0: loss = 0.356417 (* 1 = 0.356417 loss)
I0428 20:21:50.980510  1833 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:51.133673  1833 solver.cpp:219] Iteration 400 (652.857 iter/s, 0.153173s/100 iters), loss = 0.716438
I0428 20:21:51.133713  1833 solver.cpp:238]     Train net output #0: loss = 0.716438 (* 1 = 0.716438 loss)
I0428 20:21:51.133718  1833 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:51.286072  1833 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:51.365197  1840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:51.366242  1833 solver.cpp:398]     Test net output #0: accuracy = 0.7924
I0428 20:21:51.366281  1833 solver.cpp:398]     Test net output #1: loss = 0.531732 (* 1 = 0.531732 loss)
I0428 20:21:51.367849  1833 solver.cpp:219] Iteration 500 (427.105 iter/s, 0.234135s/100 iters), loss = 0.736954
I0428 20:21:51.367889  1833 solver.cpp:238]     Train net output #0: loss = 0.736954 (* 1 = 0.736954 loss)
I0428 20:21:51.367897  1833 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:51.526466  1833 solver.cpp:219] Iteration 600 (630.667 iter/s, 0.158562s/100 iters), loss = 0.344532
I0428 20:21:51.526499  1833 solver.cpp:238]     Train net output #0: loss = 0.344532 (* 1 = 0.344532 loss)
I0428 20:21:51.526504  1833 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:51.685179  1833 solver.cpp:219] Iteration 700 (630.248 iter/s, 0.158668s/100 iters), loss = 0.697625
I0428 20:21:51.685205  1833 solver.cpp:238]     Train net output #0: loss = 0.697625 (* 1 = 0.697625 loss)
I0428 20:21:51.685211  1833 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:51.843708  1833 solver.cpp:219] Iteration 800 (630.956 iter/s, 0.15849s/100 iters), loss = 0.557567
I0428 20:21:51.843745  1833 solver.cpp:238]     Train net output #0: loss = 0.557567 (* 1 = 0.557567 loss)
I0428 20:21:51.843751  1833 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:51.997143  1833 solver.cpp:219] Iteration 900 (651.893 iter/s, 0.153399s/100 iters), loss = 0.372475
I0428 20:21:51.997182  1833 solver.cpp:238]     Train net output #0: loss = 0.372475 (* 1 = 0.372475 loss)
I0428 20:21:51.997189  1833 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:52.048676  1839 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:52.150579  1833 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:52.152710  1833 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:52.154093  1833 solver.cpp:311] Iteration 1000, loss = 0.503444
I0428 20:21:52.154109  1833 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:52.232445  1840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:52.233490  1833 solver.cpp:398]     Test net output #0: accuracy = 0.7962
I0428 20:21:52.233525  1833 solver.cpp:398]     Test net output #1: loss = 0.512148 (* 1 = 0.512148 loss)
I0428 20:21:52.233530  1833 solver.cpp:316] Optimization Done.
I0428 20:21:52.233533  1833 caffe.cpp:259] Optimization Done.
