I0428 19:30:45.818512 22395 caffe.cpp:218] Using GPUs 0
I0428 19:30:45.855548 22395 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:46.388078 22395 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test101.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:46.388216 22395 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test101.prototxt
I0428 19:30:46.388579 22395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:46.388597 22395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:46.388684 22395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:46.388761 22395 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:46.388866 22395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:46.388890 22395 net.cpp:86] Creating Layer mnist
I0428 19:30:46.388898 22395 net.cpp:382] mnist -> data
I0428 19:30:46.388921 22395 net.cpp:382] mnist -> label
I0428 19:30:46.390028 22395 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:46.392520 22395 net.cpp:124] Setting up mnist
I0428 19:30:46.392539 22395 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:46.392545 22395 net.cpp:131] Top shape: 64 (64)
I0428 19:30:46.392549 22395 net.cpp:139] Memory required for data: 200960
I0428 19:30:46.392556 22395 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:46.392592 22395 net.cpp:86] Creating Layer conv0
I0428 19:30:46.392601 22395 net.cpp:408] conv0 <- data
I0428 19:30:46.392613 22395 net.cpp:382] conv0 -> conv0
I0428 19:30:46.686413 22395 net.cpp:124] Setting up conv0
I0428 19:30:46.686445 22395 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:46.686450 22395 net.cpp:139] Memory required for data: 938240
I0428 19:30:46.686468 22395 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:46.686482 22395 net.cpp:86] Creating Layer pool0
I0428 19:30:46.686506 22395 net.cpp:408] pool0 <- conv0
I0428 19:30:46.686514 22395 net.cpp:382] pool0 -> pool0
I0428 19:30:46.686574 22395 net.cpp:124] Setting up pool0
I0428 19:30:46.686583 22395 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:46.686588 22395 net.cpp:139] Memory required for data: 1122560
I0428 19:30:46.686591 22395 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:46.686600 22395 net.cpp:86] Creating Layer ip1
I0428 19:30:46.686604 22395 net.cpp:408] ip1 <- pool0
I0428 19:30:46.686610 22395 net.cpp:382] ip1 -> ip1
I0428 19:30:46.686856 22395 net.cpp:124] Setting up ip1
I0428 19:30:46.686866 22395 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:46.686870 22395 net.cpp:139] Memory required for data: 1128960
I0428 19:30:46.686879 22395 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:46.686887 22395 net.cpp:86] Creating Layer relu1
I0428 19:30:46.686890 22395 net.cpp:408] relu1 <- ip1
I0428 19:30:46.686897 22395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:46.687103 22395 net.cpp:124] Setting up relu1
I0428 19:30:46.687117 22395 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:46.687121 22395 net.cpp:139] Memory required for data: 1135360
I0428 19:30:46.687125 22395 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:46.687134 22395 net.cpp:86] Creating Layer ip2
I0428 19:30:46.687136 22395 net.cpp:408] ip2 <- ip1
I0428 19:30:46.687144 22395 net.cpp:382] ip2 -> ip2
I0428 19:30:46.687265 22395 net.cpp:124] Setting up ip2
I0428 19:30:46.687274 22395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:46.687278 22395 net.cpp:139] Memory required for data: 1137920
I0428 19:30:46.687286 22395 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:46.687294 22395 net.cpp:86] Creating Layer relu2
I0428 19:30:46.687299 22395 net.cpp:408] relu2 <- ip2
I0428 19:30:46.687304 22395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:46.688163 22395 net.cpp:124] Setting up relu2
I0428 19:30:46.688179 22395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:46.688182 22395 net.cpp:139] Memory required for data: 1140480
I0428 19:30:46.688186 22395 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:46.688194 22395 net.cpp:86] Creating Layer ip3
I0428 19:30:46.688199 22395 net.cpp:408] ip3 <- ip2
I0428 19:30:46.688205 22395 net.cpp:382] ip3 -> ip3
I0428 19:30:46.688329 22395 net.cpp:124] Setting up ip3
I0428 19:30:46.688339 22395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:46.688343 22395 net.cpp:139] Memory required for data: 1143040
I0428 19:30:46.688349 22395 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:46.688357 22395 net.cpp:86] Creating Layer relu3
I0428 19:30:46.688360 22395 net.cpp:408] relu3 <- ip3
I0428 19:30:46.688367 22395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:46.688555 22395 net.cpp:124] Setting up relu3
I0428 19:30:46.688565 22395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:46.688568 22395 net.cpp:139] Memory required for data: 1145600
I0428 19:30:46.688572 22395 layer_factory.hpp:77] Creating layer loss
I0428 19:30:46.688580 22395 net.cpp:86] Creating Layer loss
I0428 19:30:46.688583 22395 net.cpp:408] loss <- ip3
I0428 19:30:46.688587 22395 net.cpp:408] loss <- label
I0428 19:30:46.688596 22395 net.cpp:382] loss -> loss
I0428 19:30:46.688612 22395 layer_factory.hpp:77] Creating layer loss
I0428 19:30:46.688911 22395 net.cpp:124] Setting up loss
I0428 19:30:46.688922 22395 net.cpp:131] Top shape: (1)
I0428 19:30:46.688926 22395 net.cpp:134]     with loss weight 1
I0428 19:30:46.688941 22395 net.cpp:139] Memory required for data: 1145604
I0428 19:30:46.688946 22395 net.cpp:200] loss needs backward computation.
I0428 19:30:46.688951 22395 net.cpp:200] relu3 needs backward computation.
I0428 19:30:46.688953 22395 net.cpp:200] ip3 needs backward computation.
I0428 19:30:46.688957 22395 net.cpp:200] relu2 needs backward computation.
I0428 19:30:46.688961 22395 net.cpp:200] ip2 needs backward computation.
I0428 19:30:46.688963 22395 net.cpp:200] relu1 needs backward computation.
I0428 19:30:46.688966 22395 net.cpp:200] ip1 needs backward computation.
I0428 19:30:46.688982 22395 net.cpp:200] pool0 needs backward computation.
I0428 19:30:46.688987 22395 net.cpp:200] conv0 needs backward computation.
I0428 19:30:46.688990 22395 net.cpp:202] mnist does not need backward computation.
I0428 19:30:46.688993 22395 net.cpp:244] This network produces output loss
I0428 19:30:46.689004 22395 net.cpp:257] Network initialization done.
I0428 19:30:46.689339 22395 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test101.prototxt
I0428 19:30:46.689370 22395 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:46.689466 22395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:46.689545 22395 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:46.689599 22395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:46.689615 22395 net.cpp:86] Creating Layer mnist
I0428 19:30:46.689620 22395 net.cpp:382] mnist -> data
I0428 19:30:46.689632 22395 net.cpp:382] mnist -> label
I0428 19:30:46.689735 22395 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:46.691927 22395 net.cpp:124] Setting up mnist
I0428 19:30:46.691943 22395 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:46.691949 22395 net.cpp:131] Top shape: 100 (100)
I0428 19:30:46.691953 22395 net.cpp:139] Memory required for data: 314000
I0428 19:30:46.691957 22395 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:46.691967 22395 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:46.691972 22395 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:46.691978 22395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:46.691987 22395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:46.692068 22395 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:46.692078 22395 net.cpp:131] Top shape: 100 (100)
I0428 19:30:46.692082 22395 net.cpp:131] Top shape: 100 (100)
I0428 19:30:46.692085 22395 net.cpp:139] Memory required for data: 314800
I0428 19:30:46.692101 22395 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:46.692114 22395 net.cpp:86] Creating Layer conv0
I0428 19:30:46.692118 22395 net.cpp:408] conv0 <- data
I0428 19:30:46.692126 22395 net.cpp:382] conv0 -> conv0
I0428 19:30:46.693953 22395 net.cpp:124] Setting up conv0
I0428 19:30:46.693972 22395 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:46.693977 22395 net.cpp:139] Memory required for data: 1466800
I0428 19:30:46.693989 22395 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:46.693996 22395 net.cpp:86] Creating Layer pool0
I0428 19:30:46.694000 22395 net.cpp:408] pool0 <- conv0
I0428 19:30:46.694005 22395 net.cpp:382] pool0 -> pool0
I0428 19:30:46.694051 22395 net.cpp:124] Setting up pool0
I0428 19:30:46.694058 22395 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:46.694061 22395 net.cpp:139] Memory required for data: 1754800
I0428 19:30:46.694064 22395 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:46.694074 22395 net.cpp:86] Creating Layer ip1
I0428 19:30:46.694078 22395 net.cpp:408] ip1 <- pool0
I0428 19:30:46.694084 22395 net.cpp:382] ip1 -> ip1
I0428 19:30:46.694422 22395 net.cpp:124] Setting up ip1
I0428 19:30:46.694432 22395 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:46.694434 22395 net.cpp:139] Memory required for data: 1764800
I0428 19:30:46.694443 22395 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:46.694450 22395 net.cpp:86] Creating Layer relu1
I0428 19:30:46.694454 22395 net.cpp:408] relu1 <- ip1
I0428 19:30:46.694458 22395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:46.694726 22395 net.cpp:124] Setting up relu1
I0428 19:30:46.694739 22395 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:46.694743 22395 net.cpp:139] Memory required for data: 1774800
I0428 19:30:46.694747 22395 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:46.694756 22395 net.cpp:86] Creating Layer ip2
I0428 19:30:46.694764 22395 net.cpp:408] ip2 <- ip1
I0428 19:30:46.694772 22395 net.cpp:382] ip2 -> ip2
I0428 19:30:46.694893 22395 net.cpp:124] Setting up ip2
I0428 19:30:46.694902 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.694906 22395 net.cpp:139] Memory required for data: 1778800
I0428 19:30:46.694917 22395 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:46.694923 22395 net.cpp:86] Creating Layer relu2
I0428 19:30:46.694927 22395 net.cpp:408] relu2 <- ip2
I0428 19:30:46.694934 22395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:46.695886 22395 net.cpp:124] Setting up relu2
I0428 19:30:46.695900 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.695904 22395 net.cpp:139] Memory required for data: 1782800
I0428 19:30:46.695909 22395 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:46.695919 22395 net.cpp:86] Creating Layer ip3
I0428 19:30:46.695922 22395 net.cpp:408] ip3 <- ip2
I0428 19:30:46.695930 22395 net.cpp:382] ip3 -> ip3
I0428 19:30:46.696054 22395 net.cpp:124] Setting up ip3
I0428 19:30:46.696064 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.696069 22395 net.cpp:139] Memory required for data: 1786800
I0428 19:30:46.696075 22395 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:46.696081 22395 net.cpp:86] Creating Layer relu3
I0428 19:30:46.696086 22395 net.cpp:408] relu3 <- ip3
I0428 19:30:46.696097 22395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:46.696290 22395 net.cpp:124] Setting up relu3
I0428 19:30:46.696301 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.696305 22395 net.cpp:139] Memory required for data: 1790800
I0428 19:30:46.696310 22395 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:46.696316 22395 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:46.696321 22395 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:46.696326 22395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:46.696332 22395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:46.696377 22395 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:46.696384 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.696388 22395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:46.696404 22395 net.cpp:139] Memory required for data: 1798800
I0428 19:30:46.696408 22395 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:46.696414 22395 net.cpp:86] Creating Layer accuracy
I0428 19:30:46.696419 22395 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:46.696424 22395 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:46.696430 22395 net.cpp:382] accuracy -> accuracy
I0428 19:30:46.696440 22395 net.cpp:124] Setting up accuracy
I0428 19:30:46.696445 22395 net.cpp:131] Top shape: (1)
I0428 19:30:46.696449 22395 net.cpp:139] Memory required for data: 1798804
I0428 19:30:46.696451 22395 layer_factory.hpp:77] Creating layer loss
I0428 19:30:46.696456 22395 net.cpp:86] Creating Layer loss
I0428 19:30:46.696460 22395 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:46.696465 22395 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:46.696471 22395 net.cpp:382] loss -> loss
I0428 19:30:46.696478 22395 layer_factory.hpp:77] Creating layer loss
I0428 19:30:46.696775 22395 net.cpp:124] Setting up loss
I0428 19:30:46.696785 22395 net.cpp:131] Top shape: (1)
I0428 19:30:46.696789 22395 net.cpp:134]     with loss weight 1
I0428 19:30:46.696796 22395 net.cpp:139] Memory required for data: 1798808
I0428 19:30:46.696800 22395 net.cpp:200] loss needs backward computation.
I0428 19:30:46.696805 22395 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:46.696818 22395 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:46.696822 22395 net.cpp:200] relu3 needs backward computation.
I0428 19:30:46.696825 22395 net.cpp:200] ip3 needs backward computation.
I0428 19:30:46.696830 22395 net.cpp:200] relu2 needs backward computation.
I0428 19:30:46.696833 22395 net.cpp:200] ip2 needs backward computation.
I0428 19:30:46.696836 22395 net.cpp:200] relu1 needs backward computation.
I0428 19:30:46.696840 22395 net.cpp:200] ip1 needs backward computation.
I0428 19:30:46.696843 22395 net.cpp:200] pool0 needs backward computation.
I0428 19:30:46.696846 22395 net.cpp:200] conv0 needs backward computation.
I0428 19:30:46.696851 22395 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:46.696856 22395 net.cpp:202] mnist does not need backward computation.
I0428 19:30:46.696858 22395 net.cpp:244] This network produces output accuracy
I0428 19:30:46.696862 22395 net.cpp:244] This network produces output loss
I0428 19:30:46.696874 22395 net.cpp:257] Network initialization done.
I0428 19:30:46.696918 22395 solver.cpp:56] Solver scaffolding done.
I0428 19:30:46.697239 22395 caffe.cpp:248] Starting Optimization
I0428 19:30:46.697247 22395 solver.cpp:273] Solving LeNet
I0428 19:30:46.697250 22395 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:46.697424 22395 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:46.702239 22395 blocking_queue.cpp:49] Waiting for data
I0428 19:30:46.772133 22411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:46.772603 22395 solver.cpp:398]     Test net output #0: accuracy = 0.0541
I0428 19:30:46.772627 22395 solver.cpp:398]     Test net output #1: loss = 2.3224 (* 1 = 2.3224 loss)
I0428 19:30:46.774502 22395 solver.cpp:219] Iteration 0 (-1.05238e-42 iter/s, 0.0772201s/100 iters), loss = 2.31594
I0428 19:30:46.774535 22395 solver.cpp:238]     Train net output #0: loss = 2.31594 (* 1 = 2.31594 loss)
I0428 19:30:46.774554 22395 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:46.837941 22395 solver.cpp:219] Iteration 100 (1577.4 iter/s, 0.0633954s/100 iters), loss = 0.831661
I0428 19:30:46.837973 22395 solver.cpp:238]     Train net output #0: loss = 0.831661 (* 1 = 0.831661 loss)
I0428 19:30:46.837981 22395 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:46.900859 22395 solver.cpp:219] Iteration 200 (1590.44 iter/s, 0.0628757s/100 iters), loss = 0.397164
I0428 19:30:46.900890 22395 solver.cpp:238]     Train net output #0: loss = 0.397164 (* 1 = 0.397164 loss)
I0428 19:30:46.900897 22395 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:46.961458 22395 solver.cpp:219] Iteration 300 (1651.24 iter/s, 0.0605604s/100 iters), loss = 0.677777
I0428 19:30:46.961483 22395 solver.cpp:238]     Train net output #0: loss = 0.677777 (* 1 = 0.677777 loss)
I0428 19:30:46.961489 22395 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:47.019302 22395 solver.cpp:219] Iteration 400 (1729.78 iter/s, 0.0578109s/100 iters), loss = 0.368779
I0428 19:30:47.019326 22395 solver.cpp:238]     Train net output #0: loss = 0.368779 (* 1 = 0.368779 loss)
I0428 19:30:47.019332 22395 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:47.077232 22395 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:47.130233 22411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:47.130693 22395 solver.cpp:398]     Test net output #0: accuracy = 0.9164
I0428 19:30:47.130728 22395 solver.cpp:398]     Test net output #1: loss = 0.291522 (* 1 = 0.291522 loss)
I0428 19:30:47.131356 22395 solver.cpp:219] Iteration 500 (892.703 iter/s, 0.112019s/100 iters), loss = 0.398793
I0428 19:30:47.131402 22395 solver.cpp:238]     Train net output #0: loss = 0.398793 (* 1 = 0.398793 loss)
I0428 19:30:47.131413 22395 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:47.190709 22395 solver.cpp:219] Iteration 600 (1685.79 iter/s, 0.0593195s/100 iters), loss = 0.274751
I0428 19:30:47.190733 22395 solver.cpp:238]     Train net output #0: loss = 0.274751 (* 1 = 0.274751 loss)
I0428 19:30:47.190739 22395 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:47.249516 22395 solver.cpp:219] Iteration 700 (1701.42 iter/s, 0.0587745s/100 iters), loss = 0.318186
I0428 19:30:47.249555 22395 solver.cpp:238]     Train net output #0: loss = 0.318186 (* 1 = 0.318186 loss)
I0428 19:30:47.249562 22395 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:47.308009 22395 solver.cpp:219] Iteration 800 (1710.96 iter/s, 0.0584469s/100 iters), loss = 0.320827
I0428 19:30:47.308048 22395 solver.cpp:238]     Train net output #0: loss = 0.320827 (* 1 = 0.320827 loss)
I0428 19:30:47.308054 22395 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:47.366467 22395 solver.cpp:219] Iteration 900 (1712.01 iter/s, 0.058411s/100 iters), loss = 0.391942
I0428 19:30:47.366506 22395 solver.cpp:238]     Train net output #0: loss = 0.391942 (* 1 = 0.391942 loss)
I0428 19:30:47.366513 22395 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:47.386111 22410 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:47.424214 22395 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:47.425178 22395 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:47.425724 22395 solver.cpp:311] Iteration 1000, loss = 0.187664
I0428 19:30:47.425739 22395 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:47.470520 22411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:47.470993 22395 solver.cpp:398]     Test net output #0: accuracy = 0.9501
I0428 19:30:47.471014 22395 solver.cpp:398]     Test net output #1: loss = 0.164369 (* 1 = 0.164369 loss)
I0428 19:30:47.471035 22395 solver.cpp:316] Optimization Done.
I0428 19:30:47.471040 22395 caffe.cpp:259] Optimization Done.
