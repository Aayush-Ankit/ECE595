I0428 20:05:20.630908 30592 caffe.cpp:218] Using GPUs 0
I0428 20:05:20.665941 30592 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:21.116952 30592 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test997.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:21.117102 30592 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test997.prototxt
I0428 20:05:21.117499 30592 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:21.117543 30592 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:21.117624 30592 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:21.117686 30592 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:21.117765 30592 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:21.117784 30592 net.cpp:86] Creating Layer mnist
I0428 20:05:21.117791 30592 net.cpp:382] mnist -> data
I0428 20:05:21.117810 30592 net.cpp:382] mnist -> label
I0428 20:05:21.118695 30592 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:21.120992 30592 net.cpp:124] Setting up mnist
I0428 20:05:21.121039 30592 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:21.121045 30592 net.cpp:131] Top shape: 64 (64)
I0428 20:05:21.121047 30592 net.cpp:139] Memory required for data: 200960
I0428 20:05:21.121053 30592 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:21.121068 30592 net.cpp:86] Creating Layer conv0
I0428 20:05:21.121085 30592 net.cpp:408] conv0 <- data
I0428 20:05:21.121098 30592 net.cpp:382] conv0 -> conv0
I0428 20:05:21.356509 30592 net.cpp:124] Setting up conv0
I0428 20:05:21.356552 30592 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:21.356556 30592 net.cpp:139] Memory required for data: 3887360
I0428 20:05:21.356570 30592 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:21.356582 30592 net.cpp:86] Creating Layer pool0
I0428 20:05:21.356586 30592 net.cpp:408] pool0 <- conv0
I0428 20:05:21.356591 30592 net.cpp:382] pool0 -> pool0
I0428 20:05:21.356650 30592 net.cpp:124] Setting up pool0
I0428 20:05:21.356655 30592 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:21.356658 30592 net.cpp:139] Memory required for data: 4808960
I0428 20:05:21.356662 30592 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:21.356672 30592 net.cpp:86] Creating Layer conv1
I0428 20:05:21.356675 30592 net.cpp:408] conv1 <- pool0
I0428 20:05:21.356680 30592 net.cpp:382] conv1 -> conv1
I0428 20:05:21.359524 30592 net.cpp:124] Setting up conv1
I0428 20:05:21.359555 30592 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:21.359558 30592 net.cpp:139] Memory required for data: 4841728
I0428 20:05:21.359567 30592 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:21.359575 30592 net.cpp:86] Creating Layer pool1
I0428 20:05:21.359580 30592 net.cpp:408] pool1 <- conv1
I0428 20:05:21.359585 30592 net.cpp:382] pool1 -> pool1
I0428 20:05:21.359665 30592 net.cpp:124] Setting up pool1
I0428 20:05:21.359673 30592 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:21.359675 30592 net.cpp:139] Memory required for data: 4849920
I0428 20:05:21.359678 30592 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:21.359685 30592 net.cpp:86] Creating Layer ip1
I0428 20:05:21.359688 30592 net.cpp:408] ip1 <- pool1
I0428 20:05:21.359694 30592 net.cpp:382] ip1 -> ip1
I0428 20:05:21.359788 30592 net.cpp:124] Setting up ip1
I0428 20:05:21.359796 30592 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:21.359798 30592 net.cpp:139] Memory required for data: 4856320
I0428 20:05:21.359805 30592 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:21.359810 30592 net.cpp:86] Creating Layer relu1
I0428 20:05:21.359813 30592 net.cpp:408] relu1 <- ip1
I0428 20:05:21.359817 30592 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:21.359980 30592 net.cpp:124] Setting up relu1
I0428 20:05:21.359989 30592 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:21.359993 30592 net.cpp:139] Memory required for data: 4862720
I0428 20:05:21.359997 30592 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:21.360002 30592 net.cpp:86] Creating Layer ip2
I0428 20:05:21.360005 30592 net.cpp:408] ip2 <- ip1
I0428 20:05:21.360009 30592 net.cpp:382] ip2 -> ip2
I0428 20:05:21.360097 30592 net.cpp:124] Setting up ip2
I0428 20:05:21.360105 30592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:21.360107 30592 net.cpp:139] Memory required for data: 4865280
I0428 20:05:21.360112 30592 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:21.360119 30592 net.cpp:86] Creating Layer relu2
I0428 20:05:21.360122 30592 net.cpp:408] relu2 <- ip2
I0428 20:05:21.360126 30592 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:21.360859 30592 net.cpp:124] Setting up relu2
I0428 20:05:21.360872 30592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:21.360890 30592 net.cpp:139] Memory required for data: 4867840
I0428 20:05:21.360894 30592 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:21.360901 30592 net.cpp:86] Creating Layer ip3
I0428 20:05:21.360905 30592 net.cpp:408] ip3 <- ip2
I0428 20:05:21.360911 30592 net.cpp:382] ip3 -> ip3
I0428 20:05:21.361006 30592 net.cpp:124] Setting up ip3
I0428 20:05:21.361012 30592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:21.361016 30592 net.cpp:139] Memory required for data: 4870400
I0428 20:05:21.361023 30592 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:21.361028 30592 net.cpp:86] Creating Layer relu3
I0428 20:05:21.361032 30592 net.cpp:408] relu3 <- ip3
I0428 20:05:21.361034 30592 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:21.361209 30592 net.cpp:124] Setting up relu3
I0428 20:05:21.361218 30592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:21.361222 30592 net.cpp:139] Memory required for data: 4872960
I0428 20:05:21.361225 30592 layer_factory.hpp:77] Creating layer loss
I0428 20:05:21.361232 30592 net.cpp:86] Creating Layer loss
I0428 20:05:21.361234 30592 net.cpp:408] loss <- ip3
I0428 20:05:21.361238 30592 net.cpp:408] loss <- label
I0428 20:05:21.361243 30592 net.cpp:382] loss -> loss
I0428 20:05:21.361258 30592 layer_factory.hpp:77] Creating layer loss
I0428 20:05:21.361490 30592 net.cpp:124] Setting up loss
I0428 20:05:21.361500 30592 net.cpp:131] Top shape: (1)
I0428 20:05:21.361503 30592 net.cpp:134]     with loss weight 1
I0428 20:05:21.361517 30592 net.cpp:139] Memory required for data: 4872964
I0428 20:05:21.361521 30592 net.cpp:200] loss needs backward computation.
I0428 20:05:21.361524 30592 net.cpp:200] relu3 needs backward computation.
I0428 20:05:21.361527 30592 net.cpp:200] ip3 needs backward computation.
I0428 20:05:21.361531 30592 net.cpp:200] relu2 needs backward computation.
I0428 20:05:21.361533 30592 net.cpp:200] ip2 needs backward computation.
I0428 20:05:21.361536 30592 net.cpp:200] relu1 needs backward computation.
I0428 20:05:21.361538 30592 net.cpp:200] ip1 needs backward computation.
I0428 20:05:21.361541 30592 net.cpp:200] pool1 needs backward computation.
I0428 20:05:21.361544 30592 net.cpp:200] conv1 needs backward computation.
I0428 20:05:21.361547 30592 net.cpp:200] pool0 needs backward computation.
I0428 20:05:21.361551 30592 net.cpp:200] conv0 needs backward computation.
I0428 20:05:21.361554 30592 net.cpp:202] mnist does not need backward computation.
I0428 20:05:21.361557 30592 net.cpp:244] This network produces output loss
I0428 20:05:21.361565 30592 net.cpp:257] Network initialization done.
I0428 20:05:21.361884 30592 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test997.prototxt
I0428 20:05:21.361939 30592 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:21.362046 30592 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:21.362125 30592 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:21.362171 30592 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:21.362185 30592 net.cpp:86] Creating Layer mnist
I0428 20:05:21.362190 30592 net.cpp:382] mnist -> data
I0428 20:05:21.362197 30592 net.cpp:382] mnist -> label
I0428 20:05:21.362293 30592 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:21.364159 30592 net.cpp:124] Setting up mnist
I0428 20:05:21.364188 30592 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:21.364193 30592 net.cpp:131] Top shape: 100 (100)
I0428 20:05:21.364197 30592 net.cpp:139] Memory required for data: 314000
I0428 20:05:21.364199 30592 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:21.364207 30592 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:21.364209 30592 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:21.364214 30592 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:21.364220 30592 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:21.364300 30592 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:21.364308 30592 net.cpp:131] Top shape: 100 (100)
I0428 20:05:21.364311 30592 net.cpp:131] Top shape: 100 (100)
I0428 20:05:21.364315 30592 net.cpp:139] Memory required for data: 314800
I0428 20:05:21.364317 30592 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:21.364326 30592 net.cpp:86] Creating Layer conv0
I0428 20:05:21.364328 30592 net.cpp:408] conv0 <- data
I0428 20:05:21.364333 30592 net.cpp:382] conv0 -> conv0
I0428 20:05:21.366004 30592 net.cpp:124] Setting up conv0
I0428 20:05:21.366034 30592 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:21.366039 30592 net.cpp:139] Memory required for data: 6074800
I0428 20:05:21.366047 30592 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:21.366052 30592 net.cpp:86] Creating Layer pool0
I0428 20:05:21.366056 30592 net.cpp:408] pool0 <- conv0
I0428 20:05:21.366061 30592 net.cpp:382] pool0 -> pool0
I0428 20:05:21.366122 30592 net.cpp:124] Setting up pool0
I0428 20:05:21.366127 30592 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:21.366130 30592 net.cpp:139] Memory required for data: 7514800
I0428 20:05:21.366133 30592 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:21.366142 30592 net.cpp:86] Creating Layer conv1
I0428 20:05:21.366145 30592 net.cpp:408] conv1 <- pool0
I0428 20:05:21.366149 30592 net.cpp:382] conv1 -> conv1
I0428 20:05:21.368212 30592 net.cpp:124] Setting up conv1
I0428 20:05:21.368227 30592 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:21.368245 30592 net.cpp:139] Memory required for data: 7566000
I0428 20:05:21.368255 30592 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:21.368261 30592 net.cpp:86] Creating Layer pool1
I0428 20:05:21.368264 30592 net.cpp:408] pool1 <- conv1
I0428 20:05:21.368269 30592 net.cpp:382] pool1 -> pool1
I0428 20:05:21.368324 30592 net.cpp:124] Setting up pool1
I0428 20:05:21.368329 30592 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:21.368331 30592 net.cpp:139] Memory required for data: 7578800
I0428 20:05:21.368335 30592 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:21.368340 30592 net.cpp:86] Creating Layer ip1
I0428 20:05:21.368342 30592 net.cpp:408] ip1 <- pool1
I0428 20:05:21.368348 30592 net.cpp:382] ip1 -> ip1
I0428 20:05:21.368458 30592 net.cpp:124] Setting up ip1
I0428 20:05:21.368466 30592 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:21.368480 30592 net.cpp:139] Memory required for data: 7588800
I0428 20:05:21.368487 30592 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:21.368494 30592 net.cpp:86] Creating Layer relu1
I0428 20:05:21.368497 30592 net.cpp:408] relu1 <- ip1
I0428 20:05:21.368501 30592 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:21.368767 30592 net.cpp:124] Setting up relu1
I0428 20:05:21.368777 30592 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:21.368780 30592 net.cpp:139] Memory required for data: 7598800
I0428 20:05:21.368784 30592 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:21.368793 30592 net.cpp:86] Creating Layer ip2
I0428 20:05:21.368796 30592 net.cpp:408] ip2 <- ip1
I0428 20:05:21.368800 30592 net.cpp:382] ip2 -> ip2
I0428 20:05:21.368937 30592 net.cpp:124] Setting up ip2
I0428 20:05:21.368945 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.368948 30592 net.cpp:139] Memory required for data: 7602800
I0428 20:05:21.368954 30592 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:21.368962 30592 net.cpp:86] Creating Layer relu2
I0428 20:05:21.368964 30592 net.cpp:408] relu2 <- ip2
I0428 20:05:21.368973 30592 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:21.369154 30592 net.cpp:124] Setting up relu2
I0428 20:05:21.369177 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.369180 30592 net.cpp:139] Memory required for data: 7606800
I0428 20:05:21.369184 30592 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:21.369190 30592 net.cpp:86] Creating Layer ip3
I0428 20:05:21.369194 30592 net.cpp:408] ip3 <- ip2
I0428 20:05:21.369204 30592 net.cpp:382] ip3 -> ip3
I0428 20:05:21.369323 30592 net.cpp:124] Setting up ip3
I0428 20:05:21.369330 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.369333 30592 net.cpp:139] Memory required for data: 7610800
I0428 20:05:21.369340 30592 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:21.369345 30592 net.cpp:86] Creating Layer relu3
I0428 20:05:21.369348 30592 net.cpp:408] relu3 <- ip3
I0428 20:05:21.369351 30592 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:21.370192 30592 net.cpp:124] Setting up relu3
I0428 20:05:21.370203 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.370223 30592 net.cpp:139] Memory required for data: 7614800
I0428 20:05:21.370225 30592 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:21.370234 30592 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:21.370237 30592 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:21.370244 30592 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:21.370249 30592 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:21.370290 30592 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:21.370295 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.370298 30592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:21.370301 30592 net.cpp:139] Memory required for data: 7622800
I0428 20:05:21.370303 30592 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:21.370309 30592 net.cpp:86] Creating Layer accuracy
I0428 20:05:21.370312 30592 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:21.370317 30592 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:21.370321 30592 net.cpp:382] accuracy -> accuracy
I0428 20:05:21.370328 30592 net.cpp:124] Setting up accuracy
I0428 20:05:21.370332 30592 net.cpp:131] Top shape: (1)
I0428 20:05:21.370335 30592 net.cpp:139] Memory required for data: 7622804
I0428 20:05:21.370338 30592 layer_factory.hpp:77] Creating layer loss
I0428 20:05:21.370343 30592 net.cpp:86] Creating Layer loss
I0428 20:05:21.370347 30592 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:21.370350 30592 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:21.370354 30592 net.cpp:382] loss -> loss
I0428 20:05:21.370359 30592 layer_factory.hpp:77] Creating layer loss
I0428 20:05:21.370591 30592 net.cpp:124] Setting up loss
I0428 20:05:21.370601 30592 net.cpp:131] Top shape: (1)
I0428 20:05:21.370604 30592 net.cpp:134]     with loss weight 1
I0428 20:05:21.370610 30592 net.cpp:139] Memory required for data: 7622808
I0428 20:05:21.370623 30592 net.cpp:200] loss needs backward computation.
I0428 20:05:21.370627 30592 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:21.370631 30592 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:21.370635 30592 net.cpp:200] relu3 needs backward computation.
I0428 20:05:21.370637 30592 net.cpp:200] ip3 needs backward computation.
I0428 20:05:21.370640 30592 net.cpp:200] relu2 needs backward computation.
I0428 20:05:21.370643 30592 net.cpp:200] ip2 needs backward computation.
I0428 20:05:21.370645 30592 net.cpp:200] relu1 needs backward computation.
I0428 20:05:21.370648 30592 net.cpp:200] ip1 needs backward computation.
I0428 20:05:21.370651 30592 net.cpp:200] pool1 needs backward computation.
I0428 20:05:21.370654 30592 net.cpp:200] conv1 needs backward computation.
I0428 20:05:21.370657 30592 net.cpp:200] pool0 needs backward computation.
I0428 20:05:21.370661 30592 net.cpp:200] conv0 needs backward computation.
I0428 20:05:21.370664 30592 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:21.370667 30592 net.cpp:202] mnist does not need backward computation.
I0428 20:05:21.370671 30592 net.cpp:244] This network produces output accuracy
I0428 20:05:21.370673 30592 net.cpp:244] This network produces output loss
I0428 20:05:21.370685 30592 net.cpp:257] Network initialization done.
I0428 20:05:21.370728 30592 solver.cpp:56] Solver scaffolding done.
I0428 20:05:21.371094 30592 caffe.cpp:248] Starting Optimization
I0428 20:05:21.371100 30592 solver.cpp:273] Solving LeNet
I0428 20:05:21.371103 30592 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:21.371912 30592 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:21.377041 30592 blocking_queue.cpp:49] Waiting for data
I0428 20:05:21.447943 30601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:21.448572 30592 solver.cpp:398]     Test net output #0: accuracy = 0.1009
I0428 20:05:21.448611 30592 solver.cpp:398]     Test net output #1: loss = 2.31505 (* 1 = 2.31505 loss)
I0428 20:05:21.451700 30592 solver.cpp:219] Iteration 0 (-5.34661e-31 iter/s, 0.0805572s/100 iters), loss = 2.29739
I0428 20:05:21.451740 30592 solver.cpp:238]     Train net output #0: loss = 2.29739 (* 1 = 2.29739 loss)
I0428 20:05:21.451752 30592 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:21.543433 30592 solver.cpp:219] Iteration 100 (1090.56 iter/s, 0.0916962s/100 iters), loss = 0.981394
I0428 20:05:21.543473 30592 solver.cpp:238]     Train net output #0: loss = 0.981394 (* 1 = 0.981394 loss)
I0428 20:05:21.543480 30592 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:21.635553 30592 solver.cpp:219] Iteration 200 (1085.95 iter/s, 0.0920852s/100 iters), loss = 0.531268
I0428 20:05:21.635577 30592 solver.cpp:238]     Train net output #0: loss = 0.531268 (* 1 = 0.531268 loss)
I0428 20:05:21.635583 30592 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:21.727027 30592 solver.cpp:219] Iteration 300 (1093.6 iter/s, 0.0914412s/100 iters), loss = 0.535033
I0428 20:05:21.727066 30592 solver.cpp:238]     Train net output #0: loss = 0.535033 (* 1 = 0.535033 loss)
I0428 20:05:21.727072 30592 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:21.818567 30592 solver.cpp:219] Iteration 400 (1092.81 iter/s, 0.0915068s/100 iters), loss = 0.592909
I0428 20:05:21.818620 30592 solver.cpp:238]     Train net output #0: loss = 0.592909 (* 1 = 0.592909 loss)
I0428 20:05:21.818626 30592 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:21.909358 30592 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:21.964121 30601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:21.964709 30592 solver.cpp:398]     Test net output #0: accuracy = 0.8478
I0428 20:05:21.964740 30592 solver.cpp:398]     Test net output #1: loss = 0.444434 (* 1 = 0.444434 loss)
I0428 20:05:21.965607 30592 solver.cpp:219] Iteration 500 (680.318 iter/s, 0.14699s/100 iters), loss = 0.448853
I0428 20:05:21.965663 30592 solver.cpp:238]     Train net output #0: loss = 0.448853 (* 1 = 0.448853 loss)
I0428 20:05:21.965688 30592 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:22.057279 30592 solver.cpp:219] Iteration 600 (1091.62 iter/s, 0.0916072s/100 iters), loss = 0.478668
I0428 20:05:22.057318 30592 solver.cpp:238]     Train net output #0: loss = 0.478668 (* 1 = 0.478668 loss)
I0428 20:05:22.057324 30592 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:22.145927 30592 solver.cpp:219] Iteration 700 (1128.49 iter/s, 0.088614s/100 iters), loss = 0.378389
I0428 20:05:22.145967 30592 solver.cpp:238]     Train net output #0: loss = 0.378388 (* 1 = 0.378388 loss)
I0428 20:05:22.145972 30592 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:22.229910 30592 solver.cpp:219] Iteration 800 (1191.18 iter/s, 0.0839506s/100 iters), loss = 0.670795
I0428 20:05:22.229950 30592 solver.cpp:238]     Train net output #0: loss = 0.670795 (* 1 = 0.670795 loss)
I0428 20:05:22.229956 30592 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:22.313663 30592 solver.cpp:219] Iteration 900 (1194.45 iter/s, 0.0837202s/100 iters), loss = 0.292702
I0428 20:05:22.313701 30592 solver.cpp:238]     Train net output #0: loss = 0.292702 (* 1 = 0.292702 loss)
I0428 20:05:22.313707 30592 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:22.341627 30598 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:22.397482 30592 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:22.398263 30592 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:22.398872 30592 solver.cpp:311] Iteration 1000, loss = 0.465941
I0428 20:05:22.398887 30592 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:22.452002 30601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:22.453583 30592 solver.cpp:398]     Test net output #0: accuracy = 0.8586
I0428 20:05:22.453615 30592 solver.cpp:398]     Test net output #1: loss = 0.38443 (* 1 = 0.38443 loss)
I0428 20:05:22.453620 30592 solver.cpp:316] Optimization Done.
I0428 20:05:22.453624 30592 caffe.cpp:259] Optimization Done.
