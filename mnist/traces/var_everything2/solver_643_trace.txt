I0428 19:51:46.034699 27359 caffe.cpp:218] Using GPUs 0
I0428 19:51:46.070895 27359 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:46.523425 27359 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test643.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:46.523555 27359 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test643.prototxt
I0428 19:51:46.523912 27359 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:46.523943 27359 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:46.524026 27359 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:46.524088 27359 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:46.524186 27359 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:46.524205 27359 net.cpp:86] Creating Layer mnist
I0428 19:51:46.524214 27359 net.cpp:382] mnist -> data
I0428 19:51:46.524231 27359 net.cpp:382] mnist -> label
I0428 19:51:46.525214 27359 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:46.527413 27359 net.cpp:124] Setting up mnist
I0428 19:51:46.527427 27359 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:46.527432 27359 net.cpp:131] Top shape: 64 (64)
I0428 19:51:46.527434 27359 net.cpp:139] Memory required for data: 200960
I0428 19:51:46.527441 27359 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:46.527478 27359 net.cpp:86] Creating Layer conv0
I0428 19:51:46.527496 27359 net.cpp:408] conv0 <- data
I0428 19:51:46.527508 27359 net.cpp:382] conv0 -> conv0
I0428 19:51:46.763306 27359 net.cpp:124] Setting up conv0
I0428 19:51:46.763350 27359 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:46.763353 27359 net.cpp:139] Memory required for data: 938240
I0428 19:51:46.763368 27359 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:46.763396 27359 net.cpp:86] Creating Layer pool0
I0428 19:51:46.763401 27359 net.cpp:408] pool0 <- conv0
I0428 19:51:46.763406 27359 net.cpp:382] pool0 -> pool0
I0428 19:51:46.763451 27359 net.cpp:124] Setting up pool0
I0428 19:51:46.763458 27359 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:46.763461 27359 net.cpp:139] Memory required for data: 1122560
I0428 19:51:46.763464 27359 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:46.763475 27359 net.cpp:86] Creating Layer conv1
I0428 19:51:46.763479 27359 net.cpp:408] conv1 <- pool0
I0428 19:51:46.763484 27359 net.cpp:382] conv1 -> conv1
I0428 19:51:46.766435 27359 net.cpp:124] Setting up conv1
I0428 19:51:46.766449 27359 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:46.766453 27359 net.cpp:139] Memory required for data: 1532160
I0428 19:51:46.766461 27359 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:46.766469 27359 net.cpp:86] Creating Layer pool1
I0428 19:51:46.766471 27359 net.cpp:408] pool1 <- conv1
I0428 19:51:46.766476 27359 net.cpp:382] pool1 -> pool1
I0428 19:51:46.766510 27359 net.cpp:124] Setting up pool1
I0428 19:51:46.766515 27359 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:46.766517 27359 net.cpp:139] Memory required for data: 1634560
I0428 19:51:46.766520 27359 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:46.766526 27359 net.cpp:86] Creating Layer ip1
I0428 19:51:46.766530 27359 net.cpp:408] ip1 <- pool1
I0428 19:51:46.766533 27359 net.cpp:382] ip1 -> ip1
I0428 19:51:46.766638 27359 net.cpp:124] Setting up ip1
I0428 19:51:46.766645 27359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:46.766649 27359 net.cpp:139] Memory required for data: 1637120
I0428 19:51:46.766655 27359 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:46.766660 27359 net.cpp:86] Creating Layer relu1
I0428 19:51:46.766666 27359 net.cpp:408] relu1 <- ip1
I0428 19:51:46.766670 27359 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:46.766819 27359 net.cpp:124] Setting up relu1
I0428 19:51:46.766826 27359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:46.766829 27359 net.cpp:139] Memory required for data: 1639680
I0428 19:51:46.766831 27359 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:46.766837 27359 net.cpp:86] Creating Layer ip2
I0428 19:51:46.766840 27359 net.cpp:408] ip2 <- ip1
I0428 19:51:46.766845 27359 net.cpp:382] ip2 -> ip2
I0428 19:51:46.766934 27359 net.cpp:124] Setting up ip2
I0428 19:51:46.766940 27359 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:46.766959 27359 net.cpp:139] Memory required for data: 1652480
I0428 19:51:46.766964 27359 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:46.766984 27359 net.cpp:86] Creating Layer relu2
I0428 19:51:46.766988 27359 net.cpp:408] relu2 <- ip2
I0428 19:51:46.766993 27359 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:46.767712 27359 net.cpp:124] Setting up relu2
I0428 19:51:46.767724 27359 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:46.767743 27359 net.cpp:139] Memory required for data: 1665280
I0428 19:51:46.767746 27359 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:46.767753 27359 net.cpp:86] Creating Layer ip3
I0428 19:51:46.767756 27359 net.cpp:408] ip3 <- ip2
I0428 19:51:46.767761 27359 net.cpp:382] ip3 -> ip3
I0428 19:51:46.767855 27359 net.cpp:124] Setting up ip3
I0428 19:51:46.767863 27359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:46.767865 27359 net.cpp:139] Memory required for data: 1667840
I0428 19:51:46.767873 27359 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:46.767880 27359 net.cpp:86] Creating Layer relu3
I0428 19:51:46.767884 27359 net.cpp:408] relu3 <- ip3
I0428 19:51:46.767886 27359 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:46.768056 27359 net.cpp:124] Setting up relu3
I0428 19:51:46.768080 27359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:46.768084 27359 net.cpp:139] Memory required for data: 1670400
I0428 19:51:46.768086 27359 layer_factory.hpp:77] Creating layer loss
I0428 19:51:46.768092 27359 net.cpp:86] Creating Layer loss
I0428 19:51:46.768095 27359 net.cpp:408] loss <- ip3
I0428 19:51:46.768100 27359 net.cpp:408] loss <- label
I0428 19:51:46.768105 27359 net.cpp:382] loss -> loss
I0428 19:51:46.768122 27359 layer_factory.hpp:77] Creating layer loss
I0428 19:51:46.768344 27359 net.cpp:124] Setting up loss
I0428 19:51:46.768353 27359 net.cpp:131] Top shape: (1)
I0428 19:51:46.768357 27359 net.cpp:134]     with loss weight 1
I0428 19:51:46.768385 27359 net.cpp:139] Memory required for data: 1670404
I0428 19:51:46.768388 27359 net.cpp:200] loss needs backward computation.
I0428 19:51:46.768407 27359 net.cpp:200] relu3 needs backward computation.
I0428 19:51:46.768410 27359 net.cpp:200] ip3 needs backward computation.
I0428 19:51:46.768412 27359 net.cpp:200] relu2 needs backward computation.
I0428 19:51:46.768415 27359 net.cpp:200] ip2 needs backward computation.
I0428 19:51:46.768419 27359 net.cpp:200] relu1 needs backward computation.
I0428 19:51:46.768420 27359 net.cpp:200] ip1 needs backward computation.
I0428 19:51:46.768424 27359 net.cpp:200] pool1 needs backward computation.
I0428 19:51:46.768426 27359 net.cpp:200] conv1 needs backward computation.
I0428 19:51:46.768429 27359 net.cpp:200] pool0 needs backward computation.
I0428 19:51:46.768431 27359 net.cpp:200] conv0 needs backward computation.
I0428 19:51:46.768435 27359 net.cpp:202] mnist does not need backward computation.
I0428 19:51:46.768437 27359 net.cpp:244] This network produces output loss
I0428 19:51:46.768446 27359 net.cpp:257] Network initialization done.
I0428 19:51:46.768743 27359 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test643.prototxt
I0428 19:51:46.768767 27359 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:46.768894 27359 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:46.768973 27359 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:46.769017 27359 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:46.769032 27359 net.cpp:86] Creating Layer mnist
I0428 19:51:46.769037 27359 net.cpp:382] mnist -> data
I0428 19:51:46.769044 27359 net.cpp:382] mnist -> label
I0428 19:51:46.769125 27359 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:46.771040 27359 net.cpp:124] Setting up mnist
I0428 19:51:46.771062 27359 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:46.771067 27359 net.cpp:131] Top shape: 100 (100)
I0428 19:51:46.771070 27359 net.cpp:139] Memory required for data: 314000
I0428 19:51:46.771073 27359 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:46.771080 27359 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:46.771083 27359 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:46.771088 27359 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:46.771095 27359 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:46.771201 27359 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:46.771209 27359 net.cpp:131] Top shape: 100 (100)
I0428 19:51:46.771212 27359 net.cpp:131] Top shape: 100 (100)
I0428 19:51:46.771214 27359 net.cpp:139] Memory required for data: 314800
I0428 19:51:46.771217 27359 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:46.771225 27359 net.cpp:86] Creating Layer conv0
I0428 19:51:46.771229 27359 net.cpp:408] conv0 <- data
I0428 19:51:46.771232 27359 net.cpp:382] conv0 -> conv0
I0428 19:51:46.772794 27359 net.cpp:124] Setting up conv0
I0428 19:51:46.772809 27359 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:46.772850 27359 net.cpp:139] Memory required for data: 1466800
I0428 19:51:46.772874 27359 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:46.772881 27359 net.cpp:86] Creating Layer pool0
I0428 19:51:46.772884 27359 net.cpp:408] pool0 <- conv0
I0428 19:51:46.772889 27359 net.cpp:382] pool0 -> pool0
I0428 19:51:46.772974 27359 net.cpp:124] Setting up pool0
I0428 19:51:46.772981 27359 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:46.772984 27359 net.cpp:139] Memory required for data: 1754800
I0428 19:51:46.772989 27359 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:46.772996 27359 net.cpp:86] Creating Layer conv1
I0428 19:51:46.773000 27359 net.cpp:408] conv1 <- pool0
I0428 19:51:46.773005 27359 net.cpp:382] conv1 -> conv1
I0428 19:51:46.775066 27359 net.cpp:124] Setting up conv1
I0428 19:51:46.775079 27359 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:46.775082 27359 net.cpp:139] Memory required for data: 2394800
I0428 19:51:46.775099 27359 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:46.775104 27359 net.cpp:86] Creating Layer pool1
I0428 19:51:46.775107 27359 net.cpp:408] pool1 <- conv1
I0428 19:51:46.775112 27359 net.cpp:382] pool1 -> pool1
I0428 19:51:46.775147 27359 net.cpp:124] Setting up pool1
I0428 19:51:46.775152 27359 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:46.775156 27359 net.cpp:139] Memory required for data: 2554800
I0428 19:51:46.775157 27359 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:46.775163 27359 net.cpp:86] Creating Layer ip1
I0428 19:51:46.775190 27359 net.cpp:408] ip1 <- pool1
I0428 19:51:46.775195 27359 net.cpp:382] ip1 -> ip1
I0428 19:51:46.775306 27359 net.cpp:124] Setting up ip1
I0428 19:51:46.775315 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.775327 27359 net.cpp:139] Memory required for data: 2558800
I0428 19:51:46.775336 27359 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:46.775339 27359 net.cpp:86] Creating Layer relu1
I0428 19:51:46.775343 27359 net.cpp:408] relu1 <- ip1
I0428 19:51:46.775347 27359 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:46.775501 27359 net.cpp:124] Setting up relu1
I0428 19:51:46.775509 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.775527 27359 net.cpp:139] Memory required for data: 2562800
I0428 19:51:46.775532 27359 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:46.775537 27359 net.cpp:86] Creating Layer ip2
I0428 19:51:46.775540 27359 net.cpp:408] ip2 <- ip1
I0428 19:51:46.775545 27359 net.cpp:382] ip2 -> ip2
I0428 19:51:46.775670 27359 net.cpp:124] Setting up ip2
I0428 19:51:46.775676 27359 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:46.775679 27359 net.cpp:139] Memory required for data: 2582800
I0428 19:51:46.775684 27359 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:46.775688 27359 net.cpp:86] Creating Layer relu2
I0428 19:51:46.775691 27359 net.cpp:408] relu2 <- ip2
I0428 19:51:46.775696 27359 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:46.775923 27359 net.cpp:124] Setting up relu2
I0428 19:51:46.775931 27359 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:46.775934 27359 net.cpp:139] Memory required for data: 2602800
I0428 19:51:46.775938 27359 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:46.775943 27359 net.cpp:86] Creating Layer ip3
I0428 19:51:46.775945 27359 net.cpp:408] ip3 <- ip2
I0428 19:51:46.775949 27359 net.cpp:382] ip3 -> ip3
I0428 19:51:46.776062 27359 net.cpp:124] Setting up ip3
I0428 19:51:46.776084 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.776087 27359 net.cpp:139] Memory required for data: 2606800
I0428 19:51:46.776094 27359 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:46.776098 27359 net.cpp:86] Creating Layer relu3
I0428 19:51:46.776103 27359 net.cpp:408] relu3 <- ip3
I0428 19:51:46.776106 27359 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:46.776801 27359 net.cpp:124] Setting up relu3
I0428 19:51:46.776836 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.776840 27359 net.cpp:139] Memory required for data: 2610800
I0428 19:51:46.776859 27359 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:46.776865 27359 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:46.776868 27359 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:46.776873 27359 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:46.776880 27359 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:46.776921 27359 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:46.776926 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.776937 27359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:46.776957 27359 net.cpp:139] Memory required for data: 2618800
I0428 19:51:46.776959 27359 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:46.776965 27359 net.cpp:86] Creating Layer accuracy
I0428 19:51:46.776968 27359 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:46.776973 27359 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:46.776976 27359 net.cpp:382] accuracy -> accuracy
I0428 19:51:46.776983 27359 net.cpp:124] Setting up accuracy
I0428 19:51:46.776988 27359 net.cpp:131] Top shape: (1)
I0428 19:51:46.776990 27359 net.cpp:139] Memory required for data: 2618804
I0428 19:51:46.776993 27359 layer_factory.hpp:77] Creating layer loss
I0428 19:51:46.776998 27359 net.cpp:86] Creating Layer loss
I0428 19:51:46.777000 27359 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:46.777004 27359 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:46.777009 27359 net.cpp:382] loss -> loss
I0428 19:51:46.777015 27359 layer_factory.hpp:77] Creating layer loss
I0428 19:51:46.777256 27359 net.cpp:124] Setting up loss
I0428 19:51:46.777266 27359 net.cpp:131] Top shape: (1)
I0428 19:51:46.777269 27359 net.cpp:134]     with loss weight 1
I0428 19:51:46.777276 27359 net.cpp:139] Memory required for data: 2618808
I0428 19:51:46.777289 27359 net.cpp:200] loss needs backward computation.
I0428 19:51:46.777293 27359 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:46.777297 27359 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:46.777300 27359 net.cpp:200] relu3 needs backward computation.
I0428 19:51:46.777304 27359 net.cpp:200] ip3 needs backward computation.
I0428 19:51:46.777307 27359 net.cpp:200] relu2 needs backward computation.
I0428 19:51:46.777310 27359 net.cpp:200] ip2 needs backward computation.
I0428 19:51:46.777313 27359 net.cpp:200] relu1 needs backward computation.
I0428 19:51:46.777317 27359 net.cpp:200] ip1 needs backward computation.
I0428 19:51:46.777328 27359 net.cpp:200] pool1 needs backward computation.
I0428 19:51:46.777348 27359 net.cpp:200] conv1 needs backward computation.
I0428 19:51:46.777350 27359 net.cpp:200] pool0 needs backward computation.
I0428 19:51:46.777354 27359 net.cpp:200] conv0 needs backward computation.
I0428 19:51:46.777364 27359 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:46.777369 27359 net.cpp:202] mnist does not need backward computation.
I0428 19:51:46.777370 27359 net.cpp:244] This network produces output accuracy
I0428 19:51:46.777374 27359 net.cpp:244] This network produces output loss
I0428 19:51:46.777384 27359 net.cpp:257] Network initialization done.
I0428 19:51:46.777426 27359 solver.cpp:56] Solver scaffolding done.
I0428 19:51:46.777806 27359 caffe.cpp:248] Starting Optimization
I0428 19:51:46.777812 27359 solver.cpp:273] Solving LeNet
I0428 19:51:46.777813 27359 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:46.778671 27359 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:46.782447 27359 blocking_queue.cpp:49] Waiting for data
I0428 19:51:46.853206 27366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:46.853718 27359 solver.cpp:398]     Test net output #0: accuracy = 0.0983
I0428 19:51:46.853754 27359 solver.cpp:398]     Test net output #1: loss = 2.31206 (* 1 = 2.31206 loss)
I0428 19:51:46.855494 27359 solver.cpp:219] Iteration 0 (-3.15763e-31 iter/s, 0.077645s/100 iters), loss = 2.3077
I0428 19:51:46.855532 27359 solver.cpp:238]     Train net output #0: loss = 2.3077 (* 1 = 2.3077 loss)
I0428 19:51:46.855545 27359 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:46.962388 27359 solver.cpp:219] Iteration 100 (935.962 iter/s, 0.106842s/100 iters), loss = 0.687716
I0428 19:51:46.962437 27359 solver.cpp:238]     Train net output #0: loss = 0.687716 (* 1 = 0.687716 loss)
I0428 19:51:46.962458 27359 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:47.053681 27359 solver.cpp:219] Iteration 200 (1096.05 iter/s, 0.0912364s/100 iters), loss = 0.447405
I0428 19:51:47.053709 27359 solver.cpp:238]     Train net output #0: loss = 0.447405 (* 1 = 0.447405 loss)
I0428 19:51:47.053728 27359 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:47.141290 27359 solver.cpp:219] Iteration 300 (1141.92 iter/s, 0.0875714s/100 iters), loss = 0.273772
I0428 19:51:47.141320 27359 solver.cpp:238]     Train net output #0: loss = 0.273772 (* 1 = 0.273772 loss)
I0428 19:51:47.141327 27359 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:47.230492 27359 solver.cpp:219] Iteration 400 (1121.54 iter/s, 0.0891628s/100 iters), loss = 0.202477
I0428 19:51:47.230525 27359 solver.cpp:238]     Train net output #0: loss = 0.202476 (* 1 = 0.202476 loss)
I0428 19:51:47.230532 27359 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:47.320224 27359 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:47.395516 27366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:47.396195 27359 solver.cpp:398]     Test net output #0: accuracy = 0.9579
I0428 19:51:47.396227 27359 solver.cpp:398]     Test net output #1: loss = 0.135919 (* 1 = 0.135919 loss)
I0428 19:51:47.397308 27359 solver.cpp:219] Iteration 500 (599.637 iter/s, 0.166768s/100 iters), loss = 0.0719524
I0428 19:51:47.397374 27359 solver.cpp:238]     Train net output #0: loss = 0.0719523 (* 1 = 0.0719523 loss)
I0428 19:51:47.397393 27359 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:47.498713 27359 solver.cpp:219] Iteration 600 (986.855 iter/s, 0.101332s/100 iters), loss = 0.136743
I0428 19:51:47.498747 27359 solver.cpp:238]     Train net output #0: loss = 0.136743 (* 1 = 0.136743 loss)
I0428 19:51:47.498755 27359 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:47.590744 27359 solver.cpp:219] Iteration 700 (1087.12 iter/s, 0.0919859s/100 iters), loss = 0.177742
I0428 19:51:47.590773 27359 solver.cpp:238]     Train net output #0: loss = 0.177742 (* 1 = 0.177742 loss)
I0428 19:51:47.590780 27359 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:47.686326 27359 solver.cpp:219] Iteration 800 (1046.66 iter/s, 0.0955423s/100 iters), loss = 0.213617
I0428 19:51:47.686358 27359 solver.cpp:238]     Train net output #0: loss = 0.213616 (* 1 = 0.213616 loss)
I0428 19:51:47.686367 27359 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:47.777140 27359 solver.cpp:219] Iteration 900 (1101.67 iter/s, 0.0907715s/100 iters), loss = 0.259224
I0428 19:51:47.777170 27359 solver.cpp:238]     Train net output #0: loss = 0.259224 (* 1 = 0.259224 loss)
I0428 19:51:47.777179 27359 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:47.808773 27365 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:47.867374 27359 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:47.868240 27359 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:47.868737 27359 solver.cpp:311] Iteration 1000, loss = 0.130336
I0428 19:51:47.868755 27359 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:47.943825 27366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:47.944521 27359 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 19:51:47.944557 27359 solver.cpp:398]     Test net output #1: loss = 0.0938834 (* 1 = 0.0938834 loss)
I0428 19:51:47.944567 27359 solver.cpp:316] Optimization Done.
I0428 19:51:47.944572 27359 caffe.cpp:259] Optimization Done.
