I0428 20:04:38.466687 30426 caffe.cpp:218] Using GPUs 0
I0428 20:04:38.496007 30426 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:38.940896 30426 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test977.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:38.941051 30426 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test977.prototxt
I0428 20:04:38.941344 30426 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:38.941359 30426 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:38.941422 30426 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:38.941478 30426 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:38.941560 30426 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:38.941594 30426 net.cpp:86] Creating Layer mnist
I0428 20:04:38.941601 30426 net.cpp:382] mnist -> data
I0428 20:04:38.941619 30426 net.cpp:382] mnist -> label
I0428 20:04:38.942736 30426 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:38.945040 30426 net.cpp:124] Setting up mnist
I0428 20:04:38.945071 30426 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:38.945077 30426 net.cpp:131] Top shape: 64 (64)
I0428 20:04:38.945080 30426 net.cpp:139] Memory required for data: 200960
I0428 20:04:38.945086 30426 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:38.945099 30426 net.cpp:86] Creating Layer conv0
I0428 20:04:38.945104 30426 net.cpp:408] conv0 <- data
I0428 20:04:38.945116 30426 net.cpp:382] conv0 -> conv0
I0428 20:04:39.182931 30426 net.cpp:124] Setting up conv0
I0428 20:04:39.182974 30426 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:39.182978 30426 net.cpp:139] Memory required for data: 3887360
I0428 20:04:39.182993 30426 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:39.183006 30426 net.cpp:86] Creating Layer pool0
I0428 20:04:39.183010 30426 net.cpp:408] pool0 <- conv0
I0428 20:04:39.183015 30426 net.cpp:382] pool0 -> pool0
I0428 20:04:39.183076 30426 net.cpp:124] Setting up pool0
I0428 20:04:39.183082 30426 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:39.183100 30426 net.cpp:139] Memory required for data: 4808960
I0428 20:04:39.183104 30426 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:39.183115 30426 net.cpp:86] Creating Layer conv1
I0428 20:04:39.183117 30426 net.cpp:408] conv1 <- pool0
I0428 20:04:39.183122 30426 net.cpp:382] conv1 -> conv1
I0428 20:04:39.185957 30426 net.cpp:124] Setting up conv1
I0428 20:04:39.185987 30426 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:39.185992 30426 net.cpp:139] Memory required for data: 4841728
I0428 20:04:39.186017 30426 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:39.186038 30426 net.cpp:86] Creating Layer pool1
I0428 20:04:39.186043 30426 net.cpp:408] pool1 <- conv1
I0428 20:04:39.186048 30426 net.cpp:382] pool1 -> pool1
I0428 20:04:39.186100 30426 net.cpp:124] Setting up pool1
I0428 20:04:39.186106 30426 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:39.186110 30426 net.cpp:139] Memory required for data: 4849920
I0428 20:04:39.186113 30426 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:39.186134 30426 net.cpp:86] Creating Layer ip1
I0428 20:04:39.186137 30426 net.cpp:408] ip1 <- pool1
I0428 20:04:39.186142 30426 net.cpp:382] ip1 -> ip1
I0428 20:04:39.186235 30426 net.cpp:124] Setting up ip1
I0428 20:04:39.186242 30426 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:39.186245 30426 net.cpp:139] Memory required for data: 4852480
I0428 20:04:39.186252 30426 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:39.186259 30426 net.cpp:86] Creating Layer relu1
I0428 20:04:39.186261 30426 net.cpp:408] relu1 <- ip1
I0428 20:04:39.186265 30426 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:39.186425 30426 net.cpp:124] Setting up relu1
I0428 20:04:39.186434 30426 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:39.186436 30426 net.cpp:139] Memory required for data: 4855040
I0428 20:04:39.186439 30426 layer_factory.hpp:77] Creating layer loss
I0428 20:04:39.186445 30426 net.cpp:86] Creating Layer loss
I0428 20:04:39.186450 30426 net.cpp:408] loss <- ip1
I0428 20:04:39.186452 30426 net.cpp:408] loss <- label
I0428 20:04:39.186457 30426 net.cpp:382] loss -> loss
I0428 20:04:39.186475 30426 layer_factory.hpp:77] Creating layer loss
I0428 20:04:39.187405 30426 net.cpp:124] Setting up loss
I0428 20:04:39.187417 30426 net.cpp:131] Top shape: (1)
I0428 20:04:39.187438 30426 net.cpp:134]     with loss weight 1
I0428 20:04:39.187451 30426 net.cpp:139] Memory required for data: 4855044
I0428 20:04:39.187455 30426 net.cpp:200] loss needs backward computation.
I0428 20:04:39.187458 30426 net.cpp:200] relu1 needs backward computation.
I0428 20:04:39.187461 30426 net.cpp:200] ip1 needs backward computation.
I0428 20:04:39.187464 30426 net.cpp:200] pool1 needs backward computation.
I0428 20:04:39.187467 30426 net.cpp:200] conv1 needs backward computation.
I0428 20:04:39.187470 30426 net.cpp:200] pool0 needs backward computation.
I0428 20:04:39.187474 30426 net.cpp:200] conv0 needs backward computation.
I0428 20:04:39.187476 30426 net.cpp:202] mnist does not need backward computation.
I0428 20:04:39.187479 30426 net.cpp:244] This network produces output loss
I0428 20:04:39.187487 30426 net.cpp:257] Network initialization done.
I0428 20:04:39.187750 30426 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test977.prototxt
I0428 20:04:39.187773 30426 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:39.187845 30426 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:39.187912 30426 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:39.187954 30426 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:39.187968 30426 net.cpp:86] Creating Layer mnist
I0428 20:04:39.187971 30426 net.cpp:382] mnist -> data
I0428 20:04:39.187978 30426 net.cpp:382] mnist -> label
I0428 20:04:39.188076 30426 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:39.190138 30426 net.cpp:124] Setting up mnist
I0428 20:04:39.190168 30426 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:39.190173 30426 net.cpp:131] Top shape: 100 (100)
I0428 20:04:39.190176 30426 net.cpp:139] Memory required for data: 314000
I0428 20:04:39.190181 30426 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:39.190239 30426 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:39.190243 30426 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:39.190263 30426 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:39.190270 30426 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:39.190320 30426 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:39.190325 30426 net.cpp:131] Top shape: 100 (100)
I0428 20:04:39.190330 30426 net.cpp:131] Top shape: 100 (100)
I0428 20:04:39.190332 30426 net.cpp:139] Memory required for data: 314800
I0428 20:04:39.190335 30426 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:39.190343 30426 net.cpp:86] Creating Layer conv0
I0428 20:04:39.190346 30426 net.cpp:408] conv0 <- data
I0428 20:04:39.190351 30426 net.cpp:382] conv0 -> conv0
I0428 20:04:39.191344 30426 net.cpp:124] Setting up conv0
I0428 20:04:39.191356 30426 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:39.191360 30426 net.cpp:139] Memory required for data: 6074800
I0428 20:04:39.191370 30426 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:39.191375 30426 net.cpp:86] Creating Layer pool0
I0428 20:04:39.191378 30426 net.cpp:408] pool0 <- conv0
I0428 20:04:39.191383 30426 net.cpp:382] pool0 -> pool0
I0428 20:04:39.191433 30426 net.cpp:124] Setting up pool0
I0428 20:04:39.191439 30426 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:39.191442 30426 net.cpp:139] Memory required for data: 7514800
I0428 20:04:39.191445 30426 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:39.191453 30426 net.cpp:86] Creating Layer conv1
I0428 20:04:39.191457 30426 net.cpp:408] conv1 <- pool0
I0428 20:04:39.191462 30426 net.cpp:382] conv1 -> conv1
I0428 20:04:39.193675 30426 net.cpp:124] Setting up conv1
I0428 20:04:39.193689 30426 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:39.193693 30426 net.cpp:139] Memory required for data: 7566000
I0428 20:04:39.193702 30426 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:39.193708 30426 net.cpp:86] Creating Layer pool1
I0428 20:04:39.193739 30426 net.cpp:408] pool1 <- conv1
I0428 20:04:39.193747 30426 net.cpp:382] pool1 -> pool1
I0428 20:04:39.193792 30426 net.cpp:124] Setting up pool1
I0428 20:04:39.193799 30426 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:39.193801 30426 net.cpp:139] Memory required for data: 7578800
I0428 20:04:39.193804 30426 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:39.193826 30426 net.cpp:86] Creating Layer ip1
I0428 20:04:39.193830 30426 net.cpp:408] ip1 <- pool1
I0428 20:04:39.193835 30426 net.cpp:382] ip1 -> ip1
I0428 20:04:39.193998 30426 net.cpp:124] Setting up ip1
I0428 20:04:39.194007 30426 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:39.194010 30426 net.cpp:139] Memory required for data: 7582800
I0428 20:04:39.194018 30426 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:39.194023 30426 net.cpp:86] Creating Layer relu1
I0428 20:04:39.194033 30426 net.cpp:408] relu1 <- ip1
I0428 20:04:39.194037 30426 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:39.194883 30426 net.cpp:124] Setting up relu1
I0428 20:04:39.194896 30426 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:39.194900 30426 net.cpp:139] Memory required for data: 7586800
I0428 20:04:39.194903 30426 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:04:39.194912 30426 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:04:39.194931 30426 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:04:39.194937 30426 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:04:39.194944 30426 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:04:39.194986 30426 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:04:39.194993 30426 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:39.194998 30426 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:39.195000 30426 net.cpp:139] Memory required for data: 7594800
I0428 20:04:39.195003 30426 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:39.195008 30426 net.cpp:86] Creating Layer accuracy
I0428 20:04:39.195011 30426 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:04:39.195015 30426 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:39.195019 30426 net.cpp:382] accuracy -> accuracy
I0428 20:04:39.195026 30426 net.cpp:124] Setting up accuracy
I0428 20:04:39.195030 30426 net.cpp:131] Top shape: (1)
I0428 20:04:39.195034 30426 net.cpp:139] Memory required for data: 7594804
I0428 20:04:39.195035 30426 layer_factory.hpp:77] Creating layer loss
I0428 20:04:39.195041 30426 net.cpp:86] Creating Layer loss
I0428 20:04:39.195044 30426 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:04:39.195049 30426 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:39.195052 30426 net.cpp:382] loss -> loss
I0428 20:04:39.195057 30426 layer_factory.hpp:77] Creating layer loss
I0428 20:04:39.195299 30426 net.cpp:124] Setting up loss
I0428 20:04:39.195308 30426 net.cpp:131] Top shape: (1)
I0428 20:04:39.195312 30426 net.cpp:134]     with loss weight 1
I0428 20:04:39.195318 30426 net.cpp:139] Memory required for data: 7594808
I0428 20:04:39.195322 30426 net.cpp:200] loss needs backward computation.
I0428 20:04:39.195327 30426 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:39.195330 30426 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:04:39.195333 30426 net.cpp:200] relu1 needs backward computation.
I0428 20:04:39.195335 30426 net.cpp:200] ip1 needs backward computation.
I0428 20:04:39.195338 30426 net.cpp:200] pool1 needs backward computation.
I0428 20:04:39.195343 30426 net.cpp:200] conv1 needs backward computation.
I0428 20:04:39.195345 30426 net.cpp:200] pool0 needs backward computation.
I0428 20:04:39.195348 30426 net.cpp:200] conv0 needs backward computation.
I0428 20:04:39.195351 30426 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:39.195355 30426 net.cpp:202] mnist does not need backward computation.
I0428 20:04:39.195358 30426 net.cpp:244] This network produces output accuracy
I0428 20:04:39.195369 30426 net.cpp:244] This network produces output loss
I0428 20:04:39.195389 30426 net.cpp:257] Network initialization done.
I0428 20:04:39.195422 30426 solver.cpp:56] Solver scaffolding done.
I0428 20:04:39.195634 30426 caffe.cpp:248] Starting Optimization
I0428 20:04:39.195641 30426 solver.cpp:273] Solving LeNet
I0428 20:04:39.195644 30426 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:39.196496 30426 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:39.201207 30426 blocking_queue.cpp:49] Waiting for data
I0428 20:04:39.272400 30433 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:39.272948 30426 solver.cpp:398]     Test net output #0: accuracy = 0.1356
I0428 20:04:39.272965 30426 solver.cpp:398]     Test net output #1: loss = 2.29962 (* 1 = 2.29962 loss)
I0428 20:04:39.275789 30426 solver.cpp:219] Iteration 0 (-7.80558e-31 iter/s, 0.0801188s/100 iters), loss = 2.34311
I0428 20:04:39.275851 30426 solver.cpp:238]     Train net output #0: loss = 2.34311 (* 1 = 2.34311 loss)
I0428 20:04:39.275864 30426 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:39.362124 30426 solver.cpp:219] Iteration 100 (1159.05 iter/s, 0.0862772s/100 iters), loss = 0.536314
I0428 20:04:39.362151 30426 solver.cpp:238]     Train net output #0: loss = 0.536314 (* 1 = 0.536314 loss)
I0428 20:04:39.362157 30426 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:39.445919 30426 solver.cpp:219] Iteration 200 (1193.97 iter/s, 0.083754s/100 iters), loss = 0.598257
I0428 20:04:39.445966 30426 solver.cpp:238]     Train net output #0: loss = 0.598257 (* 1 = 0.598257 loss)
I0428 20:04:39.445972 30426 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:39.521160 30426 solver.cpp:219] Iteration 300 (1330.07 iter/s, 0.0751841s/100 iters), loss = 0.527989
I0428 20:04:39.521204 30426 solver.cpp:238]     Train net output #0: loss = 0.527989 (* 1 = 0.527989 loss)
I0428 20:04:39.521210 30426 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:39.594185 30426 solver.cpp:219] Iteration 400 (1370.08 iter/s, 0.0729887s/100 iters), loss = 0.353482
I0428 20:04:39.594209 30426 solver.cpp:238]     Train net output #0: loss = 0.353482 (* 1 = 0.353482 loss)
I0428 20:04:39.594215 30426 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:39.665510 30426 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:39.728845 30433 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:39.729372 30426 solver.cpp:398]     Test net output #0: accuracy = 0.9201
I0428 20:04:39.729393 30426 solver.cpp:398]     Test net output #1: loss = 0.284086 (* 1 = 0.284086 loss)
I0428 20:04:39.730185 30426 solver.cpp:219] Iteration 500 (735.491 iter/s, 0.135964s/100 iters), loss = 0.408758
I0428 20:04:39.730222 30426 solver.cpp:238]     Train net output #0: loss = 0.408758 (* 1 = 0.408758 loss)
I0428 20:04:39.730228 30426 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:39.813793 30426 solver.cpp:219] Iteration 600 (1196.81 iter/s, 0.0835554s/100 iters), loss = 0.157366
I0428 20:04:39.813832 30426 solver.cpp:238]     Train net output #0: loss = 0.157366 (* 1 = 0.157366 loss)
I0428 20:04:39.813838 30426 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:39.887481 30426 solver.cpp:219] Iteration 700 (1357.92 iter/s, 0.073642s/100 iters), loss = 0.345512
I0428 20:04:39.887519 30426 solver.cpp:238]     Train net output #0: loss = 0.345512 (* 1 = 0.345512 loss)
I0428 20:04:39.887526 30426 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:39.960526 30426 solver.cpp:219] Iteration 800 (1369.89 iter/s, 0.0729988s/100 iters), loss = 0.274727
I0428 20:04:39.960564 30426 solver.cpp:238]     Train net output #0: loss = 0.274727 (* 1 = 0.274727 loss)
I0428 20:04:39.960571 30426 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:40.033679 30426 solver.cpp:219] Iteration 900 (1367.62 iter/s, 0.0731199s/100 iters), loss = 0.238292
I0428 20:04:40.033717 30426 solver.cpp:238]     Train net output #0: loss = 0.238292 (* 1 = 0.238292 loss)
I0428 20:04:40.033722 30426 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:40.057946 30432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:40.105530 30426 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:40.106184 30426 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:40.106863 30426 solver.cpp:311] Iteration 1000, loss = 0.127533
I0428 20:04:40.106902 30426 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:40.162972 30433 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:40.164276 30426 solver.cpp:398]     Test net output #0: accuracy = 0.9441
I0428 20:04:40.164305 30426 solver.cpp:398]     Test net output #1: loss = 0.179657 (* 1 = 0.179657 loss)
I0428 20:04:40.164314 30426 solver.cpp:316] Optimization Done.
I0428 20:04:40.164320 30426 caffe.cpp:259] Optimization Done.
