I0428 20:33:50.383003  4379 caffe.cpp:218] Using GPUs 0
I0428 20:33:50.421239  4379 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:50.934640  4379 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1595.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:50.934782  4379 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1595.prototxt
I0428 20:33:50.935186  4379 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:50.935204  4379 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:50.935300  4379 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:50.935374  4379 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:50.935472  4379 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:50.935493  4379 net.cpp:86] Creating Layer mnist
I0428 20:33:50.935501  4379 net.cpp:382] mnist -> data
I0428 20:33:50.935523  4379 net.cpp:382] mnist -> label
I0428 20:33:50.936601  4379 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:50.939052  4379 net.cpp:124] Setting up mnist
I0428 20:33:50.939071  4379 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:50.939077  4379 net.cpp:131] Top shape: 64 (64)
I0428 20:33:50.939081  4379 net.cpp:139] Memory required for data: 200960
I0428 20:33:50.939090  4379 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:50.939105  4379 net.cpp:86] Creating Layer conv0
I0428 20:33:50.939126  4379 net.cpp:408] conv0 <- data
I0428 20:33:50.939138  4379 net.cpp:382] conv0 -> conv0
I0428 20:33:51.199898  4379 net.cpp:124] Setting up conv0
I0428 20:33:51.199924  4379 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:51.199928  4379 net.cpp:139] Memory required for data: 14946560
I0428 20:33:51.199942  4379 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:51.199954  4379 net.cpp:86] Creating Layer pool0
I0428 20:33:51.199957  4379 net.cpp:408] pool0 <- conv0
I0428 20:33:51.199964  4379 net.cpp:382] pool0 -> pool0
I0428 20:33:51.200022  4379 net.cpp:124] Setting up pool0
I0428 20:33:51.200028  4379 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:51.200031  4379 net.cpp:139] Memory required for data: 18632960
I0428 20:33:51.200033  4379 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:51.200044  4379 net.cpp:86] Creating Layer conv1
I0428 20:33:51.200047  4379 net.cpp:408] conv1 <- pool0
I0428 20:33:51.200052  4379 net.cpp:382] conv1 -> conv1
I0428 20:33:51.202360  4379 net.cpp:124] Setting up conv1
I0428 20:33:51.202390  4379 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:51.202394  4379 net.cpp:139] Memory required for data: 19042560
I0428 20:33:51.202404  4379 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:51.202411  4379 net.cpp:86] Creating Layer pool1
I0428 20:33:51.202430  4379 net.cpp:408] pool1 <- conv1
I0428 20:33:51.202435  4379 net.cpp:382] pool1 -> pool1
I0428 20:33:51.202484  4379 net.cpp:124] Setting up pool1
I0428 20:33:51.202491  4379 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:51.202492  4379 net.cpp:139] Memory required for data: 19144960
I0428 20:33:51.202495  4379 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:51.202502  4379 net.cpp:86] Creating Layer ip1
I0428 20:33:51.202505  4379 net.cpp:408] ip1 <- pool1
I0428 20:33:51.202510  4379 net.cpp:382] ip1 -> ip1
I0428 20:33:51.202767  4379 net.cpp:124] Setting up ip1
I0428 20:33:51.202775  4379 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:51.202778  4379 net.cpp:139] Memory required for data: 19157760
I0428 20:33:51.202785  4379 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:51.202791  4379 net.cpp:86] Creating Layer relu1
I0428 20:33:51.202795  4379 net.cpp:408] relu1 <- ip1
I0428 20:33:51.202798  4379 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:51.202983  4379 net.cpp:124] Setting up relu1
I0428 20:33:51.202991  4379 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:51.202996  4379 net.cpp:139] Memory required for data: 19170560
I0428 20:33:51.202998  4379 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:51.203018  4379 net.cpp:86] Creating Layer ip2
I0428 20:33:51.203022  4379 net.cpp:408] ip2 <- ip1
I0428 20:33:51.203027  4379 net.cpp:382] ip2 -> ip2
I0428 20:33:51.203125  4379 net.cpp:124] Setting up ip2
I0428 20:33:51.203132  4379 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:51.203135  4379 net.cpp:139] Memory required for data: 19176960
I0428 20:33:51.203140  4379 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:51.203146  4379 net.cpp:86] Creating Layer relu2
I0428 20:33:51.203150  4379 net.cpp:408] relu2 <- ip2
I0428 20:33:51.203153  4379 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:51.203958  4379 net.cpp:124] Setting up relu2
I0428 20:33:51.203969  4379 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:51.203987  4379 net.cpp:139] Memory required for data: 19183360
I0428 20:33:51.203990  4379 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:51.203997  4379 net.cpp:86] Creating Layer ip3
I0428 20:33:51.204000  4379 net.cpp:408] ip3 <- ip2
I0428 20:33:51.204006  4379 net.cpp:382] ip3 -> ip3
I0428 20:33:51.204099  4379 net.cpp:124] Setting up ip3
I0428 20:33:51.204107  4379 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:51.204110  4379 net.cpp:139] Memory required for data: 19185920
I0428 20:33:51.204118  4379 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:51.204123  4379 net.cpp:86] Creating Layer relu3
I0428 20:33:51.204125  4379 net.cpp:408] relu3 <- ip3
I0428 20:33:51.204143  4379 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:51.204320  4379 net.cpp:124] Setting up relu3
I0428 20:33:51.204329  4379 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:51.204332  4379 net.cpp:139] Memory required for data: 19188480
I0428 20:33:51.204335  4379 layer_factory.hpp:77] Creating layer loss
I0428 20:33:51.204341  4379 net.cpp:86] Creating Layer loss
I0428 20:33:51.204344  4379 net.cpp:408] loss <- ip3
I0428 20:33:51.204349  4379 net.cpp:408] loss <- label
I0428 20:33:51.204354  4379 net.cpp:382] loss -> loss
I0428 20:33:51.204367  4379 layer_factory.hpp:77] Creating layer loss
I0428 20:33:51.204610  4379 net.cpp:124] Setting up loss
I0428 20:33:51.204620  4379 net.cpp:131] Top shape: (1)
I0428 20:33:51.204624  4379 net.cpp:134]     with loss weight 1
I0428 20:33:51.204655  4379 net.cpp:139] Memory required for data: 19188484
I0428 20:33:51.204658  4379 net.cpp:200] loss needs backward computation.
I0428 20:33:51.204663  4379 net.cpp:200] relu3 needs backward computation.
I0428 20:33:51.204665  4379 net.cpp:200] ip3 needs backward computation.
I0428 20:33:51.204668  4379 net.cpp:200] relu2 needs backward computation.
I0428 20:33:51.204671  4379 net.cpp:200] ip2 needs backward computation.
I0428 20:33:51.204674  4379 net.cpp:200] relu1 needs backward computation.
I0428 20:33:51.204677  4379 net.cpp:200] ip1 needs backward computation.
I0428 20:33:51.204680  4379 net.cpp:200] pool1 needs backward computation.
I0428 20:33:51.204684  4379 net.cpp:200] conv1 needs backward computation.
I0428 20:33:51.204686  4379 net.cpp:200] pool0 needs backward computation.
I0428 20:33:51.204689  4379 net.cpp:200] conv0 needs backward computation.
I0428 20:33:51.204694  4379 net.cpp:202] mnist does not need backward computation.
I0428 20:33:51.204696  4379 net.cpp:244] This network produces output loss
I0428 20:33:51.204705  4379 net.cpp:257] Network initialization done.
I0428 20:33:51.205092  4379 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1595.prototxt
I0428 20:33:51.205130  4379 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:51.205231  4379 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:51.205308  4379 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:51.205350  4379 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:51.205363  4379 net.cpp:86] Creating Layer mnist
I0428 20:33:51.205366  4379 net.cpp:382] mnist -> data
I0428 20:33:51.205374  4379 net.cpp:382] mnist -> label
I0428 20:33:51.205454  4379 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:51.207712  4379 net.cpp:124] Setting up mnist
I0428 20:33:51.207756  4379 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:51.207761  4379 net.cpp:131] Top shape: 100 (100)
I0428 20:33:51.207763  4379 net.cpp:139] Memory required for data: 314000
I0428 20:33:51.207767  4379 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:51.207773  4379 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:51.207777  4379 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:51.207782  4379 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:51.207787  4379 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:51.207866  4379 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:51.207872  4379 net.cpp:131] Top shape: 100 (100)
I0428 20:33:51.207876  4379 net.cpp:131] Top shape: 100 (100)
I0428 20:33:51.207880  4379 net.cpp:139] Memory required for data: 314800
I0428 20:33:51.207882  4379 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:51.207890  4379 net.cpp:86] Creating Layer conv0
I0428 20:33:51.207893  4379 net.cpp:408] conv0 <- data
I0428 20:33:51.207898  4379 net.cpp:382] conv0 -> conv0
I0428 20:33:51.209761  4379 net.cpp:124] Setting up conv0
I0428 20:33:51.209791  4379 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:51.209795  4379 net.cpp:139] Memory required for data: 23354800
I0428 20:33:51.209805  4379 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:51.209812  4379 net.cpp:86] Creating Layer pool0
I0428 20:33:51.209815  4379 net.cpp:408] pool0 <- conv0
I0428 20:33:51.209820  4379 net.cpp:382] pool0 -> pool0
I0428 20:33:51.209856  4379 net.cpp:124] Setting up pool0
I0428 20:33:51.209861  4379 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:51.209864  4379 net.cpp:139] Memory required for data: 29114800
I0428 20:33:51.209867  4379 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:51.209875  4379 net.cpp:86] Creating Layer conv1
I0428 20:33:51.209878  4379 net.cpp:408] conv1 <- pool0
I0428 20:33:51.209898  4379 net.cpp:382] conv1 -> conv1
I0428 20:33:51.211928  4379 net.cpp:124] Setting up conv1
I0428 20:33:51.211956  4379 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:51.211961  4379 net.cpp:139] Memory required for data: 29754800
I0428 20:33:51.211979  4379 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:51.211985  4379 net.cpp:86] Creating Layer pool1
I0428 20:33:51.211988  4379 net.cpp:408] pool1 <- conv1
I0428 20:33:51.211993  4379 net.cpp:382] pool1 -> pool1
I0428 20:33:51.212050  4379 net.cpp:124] Setting up pool1
I0428 20:33:51.212056  4379 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:51.212060  4379 net.cpp:139] Memory required for data: 29914800
I0428 20:33:51.212064  4379 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:51.212069  4379 net.cpp:86] Creating Layer ip1
I0428 20:33:51.212072  4379 net.cpp:408] ip1 <- pool1
I0428 20:33:51.212077  4379 net.cpp:382] ip1 -> ip1
I0428 20:33:51.212314  4379 net.cpp:124] Setting up ip1
I0428 20:33:51.212334  4379 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:51.212337  4379 net.cpp:139] Memory required for data: 29934800
I0428 20:33:51.212345  4379 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:51.212350  4379 net.cpp:86] Creating Layer relu1
I0428 20:33:51.212354  4379 net.cpp:408] relu1 <- ip1
I0428 20:33:51.212359  4379 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:51.212523  4379 net.cpp:124] Setting up relu1
I0428 20:33:51.212532  4379 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:51.212537  4379 net.cpp:139] Memory required for data: 29954800
I0428 20:33:51.212540  4379 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:51.212570  4379 net.cpp:86] Creating Layer ip2
I0428 20:33:51.212574  4379 net.cpp:408] ip2 <- ip1
I0428 20:33:51.212579  4379 net.cpp:382] ip2 -> ip2
I0428 20:33:51.212690  4379 net.cpp:124] Setting up ip2
I0428 20:33:51.212697  4379 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:51.212702  4379 net.cpp:139] Memory required for data: 29964800
I0428 20:33:51.212707  4379 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:51.212712  4379 net.cpp:86] Creating Layer relu2
I0428 20:33:51.212715  4379 net.cpp:408] relu2 <- ip2
I0428 20:33:51.212719  4379 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:51.212952  4379 net.cpp:124] Setting up relu2
I0428 20:33:51.212961  4379 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:51.212965  4379 net.cpp:139] Memory required for data: 29974800
I0428 20:33:51.212967  4379 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:51.212973  4379 net.cpp:86] Creating Layer ip3
I0428 20:33:51.212976  4379 net.cpp:408] ip3 <- ip2
I0428 20:33:51.212981  4379 net.cpp:382] ip3 -> ip3
I0428 20:33:51.213119  4379 net.cpp:124] Setting up ip3
I0428 20:33:51.213125  4379 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:51.213129  4379 net.cpp:139] Memory required for data: 29978800
I0428 20:33:51.213137  4379 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:51.213142  4379 net.cpp:86] Creating Layer relu3
I0428 20:33:51.213145  4379 net.cpp:408] relu3 <- ip3
I0428 20:33:51.213165  4379 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:51.213987  4379 net.cpp:124] Setting up relu3
I0428 20:33:51.213999  4379 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:51.214018  4379 net.cpp:139] Memory required for data: 29982800
I0428 20:33:51.214021  4379 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:51.214027  4379 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:51.214030  4379 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:51.214037  4379 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:51.214043  4379 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:51.214110  4379 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:51.214118  4379 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:51.214123  4379 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:51.214131  4379 net.cpp:139] Memory required for data: 29990800
I0428 20:33:51.214134  4379 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:51.214139  4379 net.cpp:86] Creating Layer accuracy
I0428 20:33:51.214143  4379 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:51.214150  4379 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:51.214155  4379 net.cpp:382] accuracy -> accuracy
I0428 20:33:51.214162  4379 net.cpp:124] Setting up accuracy
I0428 20:33:51.214166  4379 net.cpp:131] Top shape: (1)
I0428 20:33:51.214174  4379 net.cpp:139] Memory required for data: 29990804
I0428 20:33:51.214176  4379 layer_factory.hpp:77] Creating layer loss
I0428 20:33:51.214184  4379 net.cpp:86] Creating Layer loss
I0428 20:33:51.214188  4379 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:51.214191  4379 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:51.214195  4379 net.cpp:382] loss -> loss
I0428 20:33:51.214201  4379 layer_factory.hpp:77] Creating layer loss
I0428 20:33:51.214473  4379 net.cpp:124] Setting up loss
I0428 20:33:51.214483  4379 net.cpp:131] Top shape: (1)
I0428 20:33:51.214486  4379 net.cpp:134]     with loss weight 1
I0428 20:33:51.214504  4379 net.cpp:139] Memory required for data: 29990808
I0428 20:33:51.214507  4379 net.cpp:200] loss needs backward computation.
I0428 20:33:51.214510  4379 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:51.214515  4379 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:51.214519  4379 net.cpp:200] relu3 needs backward computation.
I0428 20:33:51.214527  4379 net.cpp:200] ip3 needs backward computation.
I0428 20:33:51.214535  4379 net.cpp:200] relu2 needs backward computation.
I0428 20:33:51.214539  4379 net.cpp:200] ip2 needs backward computation.
I0428 20:33:51.214541  4379 net.cpp:200] relu1 needs backward computation.
I0428 20:33:51.214545  4379 net.cpp:200] ip1 needs backward computation.
I0428 20:33:51.214547  4379 net.cpp:200] pool1 needs backward computation.
I0428 20:33:51.214551  4379 net.cpp:200] conv1 needs backward computation.
I0428 20:33:51.214555  4379 net.cpp:200] pool0 needs backward computation.
I0428 20:33:51.214558  4379 net.cpp:200] conv0 needs backward computation.
I0428 20:33:51.214562  4379 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:51.214566  4379 net.cpp:202] mnist does not need backward computation.
I0428 20:33:51.214573  4379 net.cpp:244] This network produces output accuracy
I0428 20:33:51.214577  4379 net.cpp:244] This network produces output loss
I0428 20:33:51.214591  4379 net.cpp:257] Network initialization done.
I0428 20:33:51.214640  4379 solver.cpp:56] Solver scaffolding done.
I0428 20:33:51.215042  4379 caffe.cpp:248] Starting Optimization
I0428 20:33:51.215049  4379 solver.cpp:273] Solving LeNet
I0428 20:33:51.215050  4379 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:51.215251  4379 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:51.313272  4386 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:51.315763  4379 solver.cpp:398]     Test net output #0: accuracy = 0.1
I0428 20:33:51.315798  4379 solver.cpp:398]     Test net output #1: loss = 2.31629 (* 1 = 2.31629 loss)
I0428 20:33:51.321928  4379 solver.cpp:219] Iteration 0 (-6.3274e-39 iter/s, 0.10683s/100 iters), loss = 2.31656
I0428 20:33:51.321967  4379 solver.cpp:238]     Train net output #0: loss = 2.31656 (* 1 = 2.31656 loss)
I0428 20:33:51.321979  4379 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:51.536774  4379 solver.cpp:219] Iteration 100 (465.549 iter/s, 0.2148s/100 iters), loss = 1.20894
I0428 20:33:51.536821  4379 solver.cpp:238]     Train net output #0: loss = 1.20894 (* 1 = 1.20894 loss)
I0428 20:33:51.536833  4379 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:51.747495  4379 solver.cpp:219] Iteration 200 (474.68 iter/s, 0.210668s/100 iters), loss = 0.858997
I0428 20:33:51.747526  4379 solver.cpp:238]     Train net output #0: loss = 0.858997 (* 1 = 0.858997 loss)
I0428 20:33:51.747534  4379 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:51.965184  4379 solver.cpp:219] Iteration 300 (459.496 iter/s, 0.21763s/100 iters), loss = 0.765682
I0428 20:33:51.965215  4379 solver.cpp:238]     Train net output #0: loss = 0.765682 (* 1 = 0.765682 loss)
I0428 20:33:51.965224  4379 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:52.175922  4379 solver.cpp:219] Iteration 400 (474.636 iter/s, 0.210688s/100 iters), loss = 0.799844
I0428 20:33:52.175969  4379 solver.cpp:238]     Train net output #0: loss = 0.799844 (* 1 = 0.799844 loss)
I0428 20:33:52.175981  4379 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:52.391953  4379 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:52.490666  4386 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:52.493214  4379 solver.cpp:398]     Test net output #0: accuracy = 0.7549
I0428 20:33:52.493239  4379 solver.cpp:398]     Test net output #1: loss = 0.808445 (* 1 = 0.808445 loss)
I0428 20:33:52.495267  4379 solver.cpp:219] Iteration 500 (313.203 iter/s, 0.319281s/100 iters), loss = 0.815165
I0428 20:33:52.495293  4379 solver.cpp:238]     Train net output #0: loss = 0.815165 (* 1 = 0.815165 loss)
I0428 20:33:52.495318  4379 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:52.712733  4379 solver.cpp:219] Iteration 600 (459.931 iter/s, 0.217424s/100 iters), loss = 0.945048
I0428 20:33:52.712764  4379 solver.cpp:238]     Train net output #0: loss = 0.945048 (* 1 = 0.945048 loss)
I0428 20:33:52.712772  4379 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:52.926969  4379 solver.cpp:219] Iteration 700 (466.882 iter/s, 0.214187s/100 iters), loss = 0.767189
I0428 20:33:52.927000  4379 solver.cpp:238]     Train net output #0: loss = 0.767189 (* 1 = 0.767189 loss)
I0428 20:33:52.927008  4379 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:53.146361  4379 solver.cpp:219] Iteration 800 (455.901 iter/s, 0.219346s/100 iters), loss = 0.899728
I0428 20:33:53.146392  4379 solver.cpp:238]     Train net output #0: loss = 0.899728 (* 1 = 0.899728 loss)
I0428 20:33:53.146401  4379 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:53.359725  4379 solver.cpp:219] Iteration 900 (468.785 iter/s, 0.213318s/100 iters), loss = 0.617545
I0428 20:33:53.359767  4379 solver.cpp:238]     Train net output #0: loss = 0.617545 (* 1 = 0.617545 loss)
I0428 20:33:53.359788  4379 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:53.430230  4385 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:53.571990  4379 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:53.574697  4379 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:53.576230  4379 solver.cpp:311] Iteration 1000, loss = 0.446691
I0428 20:33:53.576247  4379 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:53.672327  4386 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:53.674991  4379 solver.cpp:398]     Test net output #0: accuracy = 0.9588
I0428 20:33:53.675029  4379 solver.cpp:398]     Test net output #1: loss = 0.34047 (* 1 = 0.34047 loss)
I0428 20:33:53.675035  4379 solver.cpp:316] Optimization Done.
I0428 20:33:53.675038  4379 caffe.cpp:259] Optimization Done.
