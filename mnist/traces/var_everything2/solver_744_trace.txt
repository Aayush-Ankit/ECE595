I0428 19:55:56.543849 28310 caffe.cpp:218] Using GPUs 0
I0428 19:55:56.575860 28310 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:57.053871 28310 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test744.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:57.053992 28310 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test744.prototxt
I0428 19:55:57.054291 28310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:57.054306 28310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:57.054375 28310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:55:57.054435 28310 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:57.054514 28310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:57.054533 28310 net.cpp:86] Creating Layer mnist
I0428 19:55:57.054539 28310 net.cpp:382] mnist -> data
I0428 19:55:57.054558 28310 net.cpp:382] mnist -> label
I0428 19:55:57.055577 28310 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:57.057737 28310 net.cpp:124] Setting up mnist
I0428 19:55:57.057785 28310 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:57.057791 28310 net.cpp:131] Top shape: 64 (64)
I0428 19:55:57.057793 28310 net.cpp:139] Memory required for data: 200960
I0428 19:55:57.057799 28310 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:57.057813 28310 net.cpp:86] Creating Layer conv0
I0428 19:55:57.057818 28310 net.cpp:408] conv0 <- data
I0428 19:55:57.057828 28310 net.cpp:382] conv0 -> conv0
I0428 19:55:57.282341 28310 net.cpp:124] Setting up conv0
I0428 19:55:57.282366 28310 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:55:57.282369 28310 net.cpp:139] Memory required for data: 1675520
I0428 19:55:57.282400 28310 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:57.282413 28310 net.cpp:86] Creating Layer pool0
I0428 19:55:57.282418 28310 net.cpp:408] pool0 <- conv0
I0428 19:55:57.282423 28310 net.cpp:382] pool0 -> pool0
I0428 19:55:57.282480 28310 net.cpp:124] Setting up pool0
I0428 19:55:57.282487 28310 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:55:57.282491 28310 net.cpp:139] Memory required for data: 2044160
I0428 19:55:57.282495 28310 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:57.282505 28310 net.cpp:86] Creating Layer conv1
I0428 19:55:57.282510 28310 net.cpp:408] conv1 <- pool0
I0428 19:55:57.282529 28310 net.cpp:382] conv1 -> conv1
I0428 19:55:57.284428 28310 net.cpp:124] Setting up conv1
I0428 19:55:57.284442 28310 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:55:57.284446 28310 net.cpp:139] Memory required for data: 2076928
I0428 19:55:57.284454 28310 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:57.284461 28310 net.cpp:86] Creating Layer pool1
I0428 19:55:57.284466 28310 net.cpp:408] pool1 <- conv1
I0428 19:55:57.284469 28310 net.cpp:382] pool1 -> pool1
I0428 19:55:57.284505 28310 net.cpp:124] Setting up pool1
I0428 19:55:57.284512 28310 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:55:57.284515 28310 net.cpp:139] Memory required for data: 2085120
I0428 19:55:57.284518 28310 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:57.284525 28310 net.cpp:86] Creating Layer ip1
I0428 19:55:57.284533 28310 net.cpp:408] ip1 <- pool1
I0428 19:55:57.284553 28310 net.cpp:382] ip1 -> ip1
I0428 19:55:57.284646 28310 net.cpp:124] Setting up ip1
I0428 19:55:57.284652 28310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:57.284656 28310 net.cpp:139] Memory required for data: 2087680
I0428 19:55:57.284662 28310 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:57.284667 28310 net.cpp:86] Creating Layer relu1
I0428 19:55:57.284672 28310 net.cpp:408] relu1 <- ip1
I0428 19:55:57.284675 28310 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:57.284858 28310 net.cpp:124] Setting up relu1
I0428 19:55:57.284883 28310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:57.284886 28310 net.cpp:139] Memory required for data: 2090240
I0428 19:55:57.284890 28310 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:57.284896 28310 net.cpp:86] Creating Layer ip2
I0428 19:55:57.284900 28310 net.cpp:408] ip2 <- ip1
I0428 19:55:57.284905 28310 net.cpp:382] ip2 -> ip2
I0428 19:55:57.285034 28310 net.cpp:124] Setting up ip2
I0428 19:55:57.285042 28310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:57.285044 28310 net.cpp:139] Memory required for data: 2092800
I0428 19:55:57.285050 28310 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:57.285056 28310 net.cpp:86] Creating Layer relu2
I0428 19:55:57.285075 28310 net.cpp:408] relu2 <- ip2
I0428 19:55:57.285080 28310 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:57.285913 28310 net.cpp:124] Setting up relu2
I0428 19:55:57.285924 28310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:57.285928 28310 net.cpp:139] Memory required for data: 2095360
I0428 19:55:57.285946 28310 layer_factory.hpp:77] Creating layer loss
I0428 19:55:57.285953 28310 net.cpp:86] Creating Layer loss
I0428 19:55:57.285955 28310 net.cpp:408] loss <- ip2
I0428 19:55:57.285960 28310 net.cpp:408] loss <- label
I0428 19:55:57.285965 28310 net.cpp:382] loss -> loss
I0428 19:55:57.285984 28310 layer_factory.hpp:77] Creating layer loss
I0428 19:55:57.286231 28310 net.cpp:124] Setting up loss
I0428 19:55:57.286242 28310 net.cpp:131] Top shape: (1)
I0428 19:55:57.286244 28310 net.cpp:134]     with loss weight 1
I0428 19:55:57.286258 28310 net.cpp:139] Memory required for data: 2095364
I0428 19:55:57.286262 28310 net.cpp:200] loss needs backward computation.
I0428 19:55:57.286267 28310 net.cpp:200] relu2 needs backward computation.
I0428 19:55:57.286269 28310 net.cpp:200] ip2 needs backward computation.
I0428 19:55:57.286273 28310 net.cpp:200] relu1 needs backward computation.
I0428 19:55:57.286275 28310 net.cpp:200] ip1 needs backward computation.
I0428 19:55:57.286288 28310 net.cpp:200] pool1 needs backward computation.
I0428 19:55:57.286291 28310 net.cpp:200] conv1 needs backward computation.
I0428 19:55:57.286295 28310 net.cpp:200] pool0 needs backward computation.
I0428 19:55:57.286298 28310 net.cpp:200] conv0 needs backward computation.
I0428 19:55:57.286301 28310 net.cpp:202] mnist does not need backward computation.
I0428 19:55:57.286304 28310 net.cpp:244] This network produces output loss
I0428 19:55:57.286314 28310 net.cpp:257] Network initialization done.
I0428 19:55:57.286622 28310 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test744.prototxt
I0428 19:55:57.286646 28310 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:57.286730 28310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:55:57.286788 28310 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:57.286847 28310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:57.286860 28310 net.cpp:86] Creating Layer mnist
I0428 19:55:57.286865 28310 net.cpp:382] mnist -> data
I0428 19:55:57.286888 28310 net.cpp:382] mnist -> label
I0428 19:55:57.286993 28310 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:57.289309 28310 net.cpp:124] Setting up mnist
I0428 19:55:57.289353 28310 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:57.289358 28310 net.cpp:131] Top shape: 100 (100)
I0428 19:55:57.289361 28310 net.cpp:139] Memory required for data: 314000
I0428 19:55:57.289366 28310 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:57.289400 28310 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:57.289405 28310 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:57.289410 28310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:57.289417 28310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:57.289460 28310 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:57.289479 28310 net.cpp:131] Top shape: 100 (100)
I0428 19:55:57.289482 28310 net.cpp:131] Top shape: 100 (100)
I0428 19:55:57.289485 28310 net.cpp:139] Memory required for data: 314800
I0428 19:55:57.289489 28310 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:57.289497 28310 net.cpp:86] Creating Layer conv0
I0428 19:55:57.289500 28310 net.cpp:408] conv0 <- data
I0428 19:55:57.289505 28310 net.cpp:382] conv0 -> conv0
I0428 19:55:57.291297 28310 net.cpp:124] Setting up conv0
I0428 19:55:57.291326 28310 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:55:57.291329 28310 net.cpp:139] Memory required for data: 2618800
I0428 19:55:57.291338 28310 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:57.291344 28310 net.cpp:86] Creating Layer pool0
I0428 19:55:57.291347 28310 net.cpp:408] pool0 <- conv0
I0428 19:55:57.291352 28310 net.cpp:382] pool0 -> pool0
I0428 19:55:57.291385 28310 net.cpp:124] Setting up pool0
I0428 19:55:57.291390 28310 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:55:57.291393 28310 net.cpp:139] Memory required for data: 3194800
I0428 19:55:57.291396 28310 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:57.291404 28310 net.cpp:86] Creating Layer conv1
I0428 19:55:57.291407 28310 net.cpp:408] conv1 <- pool0
I0428 19:55:57.291411 28310 net.cpp:382] conv1 -> conv1
I0428 19:55:57.293635 28310 net.cpp:124] Setting up conv1
I0428 19:55:57.293664 28310 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:55:57.293669 28310 net.cpp:139] Memory required for data: 3246000
I0428 19:55:57.293678 28310 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:57.293686 28310 net.cpp:86] Creating Layer pool1
I0428 19:55:57.293690 28310 net.cpp:408] pool1 <- conv1
I0428 19:55:57.293695 28310 net.cpp:382] pool1 -> pool1
I0428 19:55:57.293754 28310 net.cpp:124] Setting up pool1
I0428 19:55:57.293761 28310 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:55:57.293763 28310 net.cpp:139] Memory required for data: 3258800
I0428 19:55:57.293774 28310 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:57.293781 28310 net.cpp:86] Creating Layer ip1
I0428 19:55:57.293786 28310 net.cpp:408] ip1 <- pool1
I0428 19:55:57.293790 28310 net.cpp:382] ip1 -> ip1
I0428 19:55:57.293916 28310 net.cpp:124] Setting up ip1
I0428 19:55:57.293939 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.293942 28310 net.cpp:139] Memory required for data: 3262800
I0428 19:55:57.293949 28310 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:57.293956 28310 net.cpp:86] Creating Layer relu1
I0428 19:55:57.293958 28310 net.cpp:408] relu1 <- ip1
I0428 19:55:57.293963 28310 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:57.294246 28310 net.cpp:124] Setting up relu1
I0428 19:55:57.294256 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.294260 28310 net.cpp:139] Memory required for data: 3266800
I0428 19:55:57.294262 28310 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:57.294270 28310 net.cpp:86] Creating Layer ip2
I0428 19:55:57.294273 28310 net.cpp:408] ip2 <- ip1
I0428 19:55:57.294279 28310 net.cpp:382] ip2 -> ip2
I0428 19:55:57.294392 28310 net.cpp:124] Setting up ip2
I0428 19:55:57.294399 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.294402 28310 net.cpp:139] Memory required for data: 3270800
I0428 19:55:57.294407 28310 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:57.294414 28310 net.cpp:86] Creating Layer relu2
I0428 19:55:57.294416 28310 net.cpp:408] relu2 <- ip2
I0428 19:55:57.294420 28310 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:57.294579 28310 net.cpp:124] Setting up relu2
I0428 19:55:57.294587 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.294590 28310 net.cpp:139] Memory required for data: 3274800
I0428 19:55:57.294594 28310 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:55:57.294600 28310 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:55:57.294602 28310 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:55:57.294606 28310 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:55:57.294623 28310 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:55:57.294658 28310 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:55:57.294664 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.294668 28310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:57.294672 28310 net.cpp:139] Memory required for data: 3282800
I0428 19:55:57.294674 28310 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:57.294680 28310 net.cpp:86] Creating Layer accuracy
I0428 19:55:57.294683 28310 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:55:57.294687 28310 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:57.294692 28310 net.cpp:382] accuracy -> accuracy
I0428 19:55:57.294713 28310 net.cpp:124] Setting up accuracy
I0428 19:55:57.294718 28310 net.cpp:131] Top shape: (1)
I0428 19:55:57.294735 28310 net.cpp:139] Memory required for data: 3282804
I0428 19:55:57.294739 28310 layer_factory.hpp:77] Creating layer loss
I0428 19:55:57.294744 28310 net.cpp:86] Creating Layer loss
I0428 19:55:57.294747 28310 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:55:57.294751 28310 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:57.294778 28310 net.cpp:382] loss -> loss
I0428 19:55:57.294785 28310 layer_factory.hpp:77] Creating layer loss
I0428 19:55:57.295075 28310 net.cpp:124] Setting up loss
I0428 19:55:57.295099 28310 net.cpp:131] Top shape: (1)
I0428 19:55:57.295116 28310 net.cpp:134]     with loss weight 1
I0428 19:55:57.295122 28310 net.cpp:139] Memory required for data: 3282808
I0428 19:55:57.295140 28310 net.cpp:200] loss needs backward computation.
I0428 19:55:57.295145 28310 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:57.295147 28310 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:55:57.295166 28310 net.cpp:200] relu2 needs backward computation.
I0428 19:55:57.295168 28310 net.cpp:200] ip2 needs backward computation.
I0428 19:55:57.295171 28310 net.cpp:200] relu1 needs backward computation.
I0428 19:55:57.295173 28310 net.cpp:200] ip1 needs backward computation.
I0428 19:55:57.295176 28310 net.cpp:200] pool1 needs backward computation.
I0428 19:55:57.295179 28310 net.cpp:200] conv1 needs backward computation.
I0428 19:55:57.295182 28310 net.cpp:200] pool0 needs backward computation.
I0428 19:55:57.295184 28310 net.cpp:200] conv0 needs backward computation.
I0428 19:55:57.295188 28310 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:57.295192 28310 net.cpp:202] mnist does not need backward computation.
I0428 19:55:57.295194 28310 net.cpp:244] This network produces output accuracy
I0428 19:55:57.295197 28310 net.cpp:244] This network produces output loss
I0428 19:55:57.295207 28310 net.cpp:257] Network initialization done.
I0428 19:55:57.295243 28310 solver.cpp:56] Solver scaffolding done.
I0428 19:55:57.295521 28310 caffe.cpp:248] Starting Optimization
I0428 19:55:57.295527 28310 solver.cpp:273] Solving LeNet
I0428 19:55:57.295531 28310 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:57.296352 28310 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:57.299827 28310 blocking_queue.cpp:49] Waiting for data
I0428 19:55:57.368480 28317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:57.369040 28310 solver.cpp:398]     Test net output #0: accuracy = 0.1024
I0428 19:55:57.369068 28310 solver.cpp:398]     Test net output #1: loss = 2.29117 (* 1 = 2.29117 loss)
I0428 19:55:57.372071 28310 solver.cpp:219] Iteration 0 (0 iter/s, 0.0765111s/100 iters), loss = 2.30214
I0428 19:55:57.372104 28310 solver.cpp:238]     Train net output #0: loss = 2.30214 (* 1 = 2.30214 loss)
I0428 19:55:57.372119 28310 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:57.443828 28310 solver.cpp:219] Iteration 100 (1394.47 iter/s, 0.0717117s/100 iters), loss = 1.79212
I0428 19:55:57.443862 28310 solver.cpp:238]     Train net output #0: loss = 1.79212 (* 1 = 1.79212 loss)
I0428 19:55:57.443871 28310 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:57.524236 28310 solver.cpp:219] Iteration 200 (1244.35 iter/s, 0.0803635s/100 iters), loss = 1.41995
I0428 19:55:57.524299 28310 solver.cpp:238]     Train net output #0: loss = 1.41995 (* 1 = 1.41995 loss)
I0428 19:55:57.524309 28310 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:57.603142 28310 solver.cpp:219] Iteration 300 (1268.46 iter/s, 0.0788357s/100 iters), loss = 1.25407
I0428 19:55:57.603173 28310 solver.cpp:238]     Train net output #0: loss = 1.25407 (* 1 = 1.25407 loss)
I0428 19:55:57.603181 28310 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:57.688166 28310 solver.cpp:219] Iteration 400 (1176.7 iter/s, 0.0849837s/100 iters), loss = 1.07841
I0428 19:55:57.688197 28310 solver.cpp:238]     Train net output #0: loss = 1.07841 (* 1 = 1.07841 loss)
I0428 19:55:57.688205 28310 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:57.772300 28310 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:57.847669 28317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:57.848299 28310 solver.cpp:398]     Test net output #0: accuracy = 0.7692
I0428 19:55:57.848326 28310 solver.cpp:398]     Test net output #1: loss = 0.82105 (* 1 = 0.82105 loss)
I0428 19:55:57.849282 28310 solver.cpp:219] Iteration 500 (620.844 iter/s, 0.161071s/100 iters), loss = 0.846493
I0428 19:55:57.849315 28310 solver.cpp:238]     Train net output #0: loss = 0.846493 (* 1 = 0.846493 loss)
I0428 19:55:57.849326 28310 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:57.918108 28310 solver.cpp:219] Iteration 600 (1453.78 iter/s, 0.0687862s/100 iters), loss = 0.628228
I0428 19:55:57.918133 28310 solver.cpp:238]     Train net output #0: loss = 0.628228 (* 1 = 0.628228 loss)
I0428 19:55:57.918138 28310 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:57.985071 28310 solver.cpp:219] Iteration 700 (1494.06 iter/s, 0.0669317s/100 iters), loss = 0.819345
I0428 19:55:57.985111 28310 solver.cpp:238]     Train net output #0: loss = 0.819345 (* 1 = 0.819345 loss)
I0428 19:55:57.985117 28310 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:58.052284 28310 solver.cpp:219] Iteration 800 (1488.89 iter/s, 0.0671642s/100 iters), loss = 0.92018
I0428 19:55:58.052323 28310 solver.cpp:238]     Train net output #0: loss = 0.92018 (* 1 = 0.92018 loss)
I0428 19:55:58.052330 28310 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:58.118142 28310 solver.cpp:219] Iteration 900 (1519.14 iter/s, 0.0658268s/100 iters), loss = 0.974018
I0428 19:55:58.118165 28310 solver.cpp:238]     Train net output #0: loss = 0.974018 (* 1 = 0.974018 loss)
I0428 19:55:58.118170 28310 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:58.140118 28316 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:58.183209 28310 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:58.183781 28310 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:58.184172 28310 solver.cpp:311] Iteration 1000, loss = 0.788926
I0428 19:55:58.184202 28310 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:58.248982 28317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:58.249594 28310 solver.cpp:398]     Test net output #0: accuracy = 0.8271
I0428 19:55:58.249631 28310 solver.cpp:398]     Test net output #1: loss = 0.684705 (* 1 = 0.684705 loss)
I0428 19:55:58.249639 28310 solver.cpp:316] Optimization Done.
I0428 19:55:58.249644 28310 caffe.cpp:259] Optimization Done.
