I0428 20:26:04.580909  2734 caffe.cpp:218] Using GPUs 0
I0428 20:26:04.613158  2734 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:05.120403  2734 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1465.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:05.120549  2734 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1465.prototxt
I0428 20:26:05.120977  2734 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:05.120997  2734 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:05.121101  2734 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:05.121182  2734 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:05.121284  2734 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:05.121310  2734 net.cpp:86] Creating Layer mnist
I0428 20:26:05.121317  2734 net.cpp:382] mnist -> data
I0428 20:26:05.121340  2734 net.cpp:382] mnist -> label
I0428 20:26:05.122433  2734 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:05.124896  2734 net.cpp:124] Setting up mnist
I0428 20:26:05.124914  2734 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:05.124922  2734 net.cpp:131] Top shape: 64 (64)
I0428 20:26:05.124927  2734 net.cpp:139] Memory required for data: 200960
I0428 20:26:05.124933  2734 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:05.124948  2734 net.cpp:86] Creating Layer conv0
I0428 20:26:05.124969  2734 net.cpp:408] conv0 <- data
I0428 20:26:05.124982  2734 net.cpp:382] conv0 -> conv0
I0428 20:26:05.376464  2734 net.cpp:124] Setting up conv0
I0428 20:26:05.376492  2734 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:05.376495  2734 net.cpp:139] Memory required for data: 14946560
I0428 20:26:05.376509  2734 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:05.376520  2734 net.cpp:86] Creating Layer pool0
I0428 20:26:05.376524  2734 net.cpp:408] pool0 <- conv0
I0428 20:26:05.376529  2734 net.cpp:382] pool0 -> pool0
I0428 20:26:05.376590  2734 net.cpp:124] Setting up pool0
I0428 20:26:05.376595  2734 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:05.376597  2734 net.cpp:139] Memory required for data: 18632960
I0428 20:26:05.376600  2734 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:05.376610  2734 net.cpp:86] Creating Layer conv1
I0428 20:26:05.376613  2734 net.cpp:408] conv1 <- pool0
I0428 20:26:05.376618  2734 net.cpp:382] conv1 -> conv1
I0428 20:26:05.379629  2734 net.cpp:124] Setting up conv1
I0428 20:26:05.379658  2734 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:05.379662  2734 net.cpp:139] Memory required for data: 18665728
I0428 20:26:05.379670  2734 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:05.379678  2734 net.cpp:86] Creating Layer pool1
I0428 20:26:05.379681  2734 net.cpp:408] pool1 <- conv1
I0428 20:26:05.379686  2734 net.cpp:382] pool1 -> pool1
I0428 20:26:05.379722  2734 net.cpp:124] Setting up pool1
I0428 20:26:05.379727  2734 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:05.379731  2734 net.cpp:139] Memory required for data: 18673920
I0428 20:26:05.379734  2734 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:05.379741  2734 net.cpp:86] Creating Layer ip1
I0428 20:26:05.379745  2734 net.cpp:408] ip1 <- pool1
I0428 20:26:05.379750  2734 net.cpp:382] ip1 -> ip1
I0428 20:26:05.379856  2734 net.cpp:124] Setting up ip1
I0428 20:26:05.379863  2734 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:05.379866  2734 net.cpp:139] Memory required for data: 18680320
I0428 20:26:05.379873  2734 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:05.379878  2734 net.cpp:86] Creating Layer relu1
I0428 20:26:05.379881  2734 net.cpp:408] relu1 <- ip1
I0428 20:26:05.379885  2734 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:05.380040  2734 net.cpp:124] Setting up relu1
I0428 20:26:05.380048  2734 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:05.380051  2734 net.cpp:139] Memory required for data: 18686720
I0428 20:26:05.380054  2734 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:05.380060  2734 net.cpp:86] Creating Layer ip2
I0428 20:26:05.380064  2734 net.cpp:408] ip2 <- ip1
I0428 20:26:05.380069  2734 net.cpp:382] ip2 -> ip2
I0428 20:26:05.380156  2734 net.cpp:124] Setting up ip2
I0428 20:26:05.380162  2734 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:05.380164  2734 net.cpp:139] Memory required for data: 18689280
I0428 20:26:05.380169  2734 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:05.380175  2734 net.cpp:86] Creating Layer relu2
I0428 20:26:05.380178  2734 net.cpp:408] relu2 <- ip2
I0428 20:26:05.380182  2734 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:05.380952  2734 net.cpp:124] Setting up relu2
I0428 20:26:05.380980  2734 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:05.380983  2734 net.cpp:139] Memory required for data: 18691840
I0428 20:26:05.380986  2734 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:05.381007  2734 net.cpp:86] Creating Layer ip3
I0428 20:26:05.381011  2734 net.cpp:408] ip3 <- ip2
I0428 20:26:05.381016  2734 net.cpp:382] ip3 -> ip3
I0428 20:26:05.381110  2734 net.cpp:124] Setting up ip3
I0428 20:26:05.381119  2734 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:05.381121  2734 net.cpp:139] Memory required for data: 18694400
I0428 20:26:05.381129  2734 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:05.381134  2734 net.cpp:86] Creating Layer relu3
I0428 20:26:05.381137  2734 net.cpp:408] relu3 <- ip3
I0428 20:26:05.381141  2734 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:05.381300  2734 net.cpp:124] Setting up relu3
I0428 20:26:05.381309  2734 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:05.381312  2734 net.cpp:139] Memory required for data: 18696960
I0428 20:26:05.381315  2734 layer_factory.hpp:77] Creating layer loss
I0428 20:26:05.381320  2734 net.cpp:86] Creating Layer loss
I0428 20:26:05.381325  2734 net.cpp:408] loss <- ip3
I0428 20:26:05.381342  2734 net.cpp:408] loss <- label
I0428 20:26:05.381347  2734 net.cpp:382] loss -> loss
I0428 20:26:05.381364  2734 layer_factory.hpp:77] Creating layer loss
I0428 20:26:05.381572  2734 net.cpp:124] Setting up loss
I0428 20:26:05.381582  2734 net.cpp:131] Top shape: (1)
I0428 20:26:05.381584  2734 net.cpp:134]     with loss weight 1
I0428 20:26:05.381598  2734 net.cpp:139] Memory required for data: 18696964
I0428 20:26:05.381602  2734 net.cpp:200] loss needs backward computation.
I0428 20:26:05.381604  2734 net.cpp:200] relu3 needs backward computation.
I0428 20:26:05.381608  2734 net.cpp:200] ip3 needs backward computation.
I0428 20:26:05.381610  2734 net.cpp:200] relu2 needs backward computation.
I0428 20:26:05.381613  2734 net.cpp:200] ip2 needs backward computation.
I0428 20:26:05.381615  2734 net.cpp:200] relu1 needs backward computation.
I0428 20:26:05.381618  2734 net.cpp:200] ip1 needs backward computation.
I0428 20:26:05.381621  2734 net.cpp:200] pool1 needs backward computation.
I0428 20:26:05.381623  2734 net.cpp:200] conv1 needs backward computation.
I0428 20:26:05.381626  2734 net.cpp:200] pool0 needs backward computation.
I0428 20:26:05.381629  2734 net.cpp:200] conv0 needs backward computation.
I0428 20:26:05.381633  2734 net.cpp:202] mnist does not need backward computation.
I0428 20:26:05.381635  2734 net.cpp:244] This network produces output loss
I0428 20:26:05.381644  2734 net.cpp:257] Network initialization done.
I0428 20:26:05.381956  2734 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1465.prototxt
I0428 20:26:05.381981  2734 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:05.382098  2734 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:05.382210  2734 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:05.382254  2734 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:05.382267  2734 net.cpp:86] Creating Layer mnist
I0428 20:26:05.382272  2734 net.cpp:382] mnist -> data
I0428 20:26:05.382280  2734 net.cpp:382] mnist -> label
I0428 20:26:05.382367  2734 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:05.384531  2734 net.cpp:124] Setting up mnist
I0428 20:26:05.384567  2734 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:05.384588  2734 net.cpp:131] Top shape: 100 (100)
I0428 20:26:05.384591  2734 net.cpp:139] Memory required for data: 314000
I0428 20:26:05.384595  2734 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:05.384606  2734 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:05.384625  2734 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:05.384630  2734 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:05.384637  2734 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:05.384713  2734 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:05.384721  2734 net.cpp:131] Top shape: 100 (100)
I0428 20:26:05.384726  2734 net.cpp:131] Top shape: 100 (100)
I0428 20:26:05.384728  2734 net.cpp:139] Memory required for data: 314800
I0428 20:26:05.384732  2734 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:05.384740  2734 net.cpp:86] Creating Layer conv0
I0428 20:26:05.384743  2734 net.cpp:408] conv0 <- data
I0428 20:26:05.384748  2734 net.cpp:382] conv0 -> conv0
I0428 20:26:05.386334  2734 net.cpp:124] Setting up conv0
I0428 20:26:05.386365  2734 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:05.386369  2734 net.cpp:139] Memory required for data: 23354800
I0428 20:26:05.386378  2734 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:05.386384  2734 net.cpp:86] Creating Layer pool0
I0428 20:26:05.386387  2734 net.cpp:408] pool0 <- conv0
I0428 20:26:05.386392  2734 net.cpp:382] pool0 -> pool0
I0428 20:26:05.386440  2734 net.cpp:124] Setting up pool0
I0428 20:26:05.386446  2734 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:05.386449  2734 net.cpp:139] Memory required for data: 29114800
I0428 20:26:05.386451  2734 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:05.386461  2734 net.cpp:86] Creating Layer conv1
I0428 20:26:05.386463  2734 net.cpp:408] conv1 <- pool0
I0428 20:26:05.386468  2734 net.cpp:382] conv1 -> conv1
I0428 20:26:05.388082  2734 net.cpp:124] Setting up conv1
I0428 20:26:05.388095  2734 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:05.388115  2734 net.cpp:139] Memory required for data: 29166000
I0428 20:26:05.388135  2734 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:05.388141  2734 net.cpp:86] Creating Layer pool1
I0428 20:26:05.388145  2734 net.cpp:408] pool1 <- conv1
I0428 20:26:05.388150  2734 net.cpp:382] pool1 -> pool1
I0428 20:26:05.388186  2734 net.cpp:124] Setting up pool1
I0428 20:26:05.388192  2734 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:05.388195  2734 net.cpp:139] Memory required for data: 29178800
I0428 20:26:05.388198  2734 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:05.388205  2734 net.cpp:86] Creating Layer ip1
I0428 20:26:05.388207  2734 net.cpp:408] ip1 <- pool1
I0428 20:26:05.388214  2734 net.cpp:382] ip1 -> ip1
I0428 20:26:05.388367  2734 net.cpp:124] Setting up ip1
I0428 20:26:05.388376  2734 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:05.388389  2734 net.cpp:139] Memory required for data: 29188800
I0428 20:26:05.388413  2734 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:05.388420  2734 net.cpp:86] Creating Layer relu1
I0428 20:26:05.388424  2734 net.cpp:408] relu1 <- ip1
I0428 20:26:05.388443  2734 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:05.388662  2734 net.cpp:124] Setting up relu1
I0428 20:26:05.388672  2734 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:05.388676  2734 net.cpp:139] Memory required for data: 29198800
I0428 20:26:05.388694  2734 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:05.388715  2734 net.cpp:86] Creating Layer ip2
I0428 20:26:05.388717  2734 net.cpp:408] ip2 <- ip1
I0428 20:26:05.388723  2734 net.cpp:382] ip2 -> ip2
I0428 20:26:05.388854  2734 net.cpp:124] Setting up ip2
I0428 20:26:05.388864  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.388867  2734 net.cpp:139] Memory required for data: 29202800
I0428 20:26:05.388873  2734 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:05.388877  2734 net.cpp:86] Creating Layer relu2
I0428 20:26:05.388881  2734 net.cpp:408] relu2 <- ip2
I0428 20:26:05.388886  2734 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:05.389050  2734 net.cpp:124] Setting up relu2
I0428 20:26:05.389076  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.389080  2734 net.cpp:139] Memory required for data: 29206800
I0428 20:26:05.389082  2734 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:05.389089  2734 net.cpp:86] Creating Layer ip3
I0428 20:26:05.389093  2734 net.cpp:408] ip3 <- ip2
I0428 20:26:05.389101  2734 net.cpp:382] ip3 -> ip3
I0428 20:26:05.389222  2734 net.cpp:124] Setting up ip3
I0428 20:26:05.389231  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.389233  2734 net.cpp:139] Memory required for data: 29210800
I0428 20:26:05.389241  2734 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:05.389245  2734 net.cpp:86] Creating Layer relu3
I0428 20:26:05.389248  2734 net.cpp:408] relu3 <- ip3
I0428 20:26:05.389252  2734 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:05.390149  2734 net.cpp:124] Setting up relu3
I0428 20:26:05.390161  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.390180  2734 net.cpp:139] Memory required for data: 29214800
I0428 20:26:05.390183  2734 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:05.390192  2734 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:05.390197  2734 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:05.390202  2734 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:05.390209  2734 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:05.390280  2734 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:05.390288  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.390292  2734 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:05.390295  2734 net.cpp:139] Memory required for data: 29222800
I0428 20:26:05.390300  2734 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:05.390316  2734 net.cpp:86] Creating Layer accuracy
I0428 20:26:05.390321  2734 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:05.390324  2734 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:05.390328  2734 net.cpp:382] accuracy -> accuracy
I0428 20:26:05.390336  2734 net.cpp:124] Setting up accuracy
I0428 20:26:05.390339  2734 net.cpp:131] Top shape: (1)
I0428 20:26:05.390342  2734 net.cpp:139] Memory required for data: 29222804
I0428 20:26:05.390346  2734 layer_factory.hpp:77] Creating layer loss
I0428 20:26:05.390350  2734 net.cpp:86] Creating Layer loss
I0428 20:26:05.390354  2734 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:05.390358  2734 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:05.390362  2734 net.cpp:382] loss -> loss
I0428 20:26:05.390367  2734 layer_factory.hpp:77] Creating layer loss
I0428 20:26:05.390614  2734 net.cpp:124] Setting up loss
I0428 20:26:05.390622  2734 net.cpp:131] Top shape: (1)
I0428 20:26:05.390625  2734 net.cpp:134]     with loss weight 1
I0428 20:26:05.390641  2734 net.cpp:139] Memory required for data: 29222808
I0428 20:26:05.390645  2734 net.cpp:200] loss needs backward computation.
I0428 20:26:05.390648  2734 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:05.390652  2734 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:05.390655  2734 net.cpp:200] relu3 needs backward computation.
I0428 20:26:05.390658  2734 net.cpp:200] ip3 needs backward computation.
I0428 20:26:05.390661  2734 net.cpp:200] relu2 needs backward computation.
I0428 20:26:05.390663  2734 net.cpp:200] ip2 needs backward computation.
I0428 20:26:05.390666  2734 net.cpp:200] relu1 needs backward computation.
I0428 20:26:05.390668  2734 net.cpp:200] ip1 needs backward computation.
I0428 20:26:05.390671  2734 net.cpp:200] pool1 needs backward computation.
I0428 20:26:05.390673  2734 net.cpp:200] conv1 needs backward computation.
I0428 20:26:05.390683  2734 net.cpp:200] pool0 needs backward computation.
I0428 20:26:05.390686  2734 net.cpp:200] conv0 needs backward computation.
I0428 20:26:05.390694  2734 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:05.390697  2734 net.cpp:202] mnist does not need backward computation.
I0428 20:26:05.390700  2734 net.cpp:244] This network produces output accuracy
I0428 20:26:05.390704  2734 net.cpp:244] This network produces output loss
I0428 20:26:05.390715  2734 net.cpp:257] Network initialization done.
I0428 20:26:05.390755  2734 solver.cpp:56] Solver scaffolding done.
I0428 20:26:05.391206  2734 caffe.cpp:248] Starting Optimization
I0428 20:26:05.391211  2734 solver.cpp:273] Solving LeNet
I0428 20:26:05.391229  2734 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:05.392035  2734 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:05.449390  2734 blocking_queue.cpp:49] Waiting for data
I0428 20:26:05.487722  2741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:05.489343  2734 solver.cpp:398]     Test net output #0: accuracy = 0.1013
I0428 20:26:05.489382  2734 solver.cpp:398]     Test net output #1: loss = 2.30366 (* 1 = 2.30366 loss)
I0428 20:26:05.494112  2734 solver.cpp:219] Iteration 0 (0 iter/s, 0.102839s/100 iters), loss = 2.30525
I0428 20:26:05.494149  2734 solver.cpp:238]     Train net output #0: loss = 2.30525 (* 1 = 2.30525 loss)
I0428 20:26:05.494174  2734 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:05.693491  2734 solver.cpp:219] Iteration 100 (501.694 iter/s, 0.199325s/100 iters), loss = 1.44066
I0428 20:26:05.693533  2734 solver.cpp:238]     Train net output #0: loss = 1.44066 (* 1 = 1.44066 loss)
I0428 20:26:05.693539  2734 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:05.899173  2734 solver.cpp:219] Iteration 200 (486.329 iter/s, 0.205622s/100 iters), loss = 1.21071
I0428 20:26:05.899214  2734 solver.cpp:238]     Train net output #0: loss = 1.21071 (* 1 = 1.21071 loss)
I0428 20:26:05.899224  2734 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:06.104719  2734 solver.cpp:219] Iteration 300 (486.634 iter/s, 0.205493s/100 iters), loss = 0.880571
I0428 20:26:06.104751  2734 solver.cpp:238]     Train net output #0: loss = 0.880571 (* 1 = 0.880571 loss)
I0428 20:26:06.104759  2734 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:06.315424  2734 solver.cpp:219] Iteration 400 (474.709 iter/s, 0.210655s/100 iters), loss = 1.28539
I0428 20:26:06.315462  2734 solver.cpp:238]     Train net output #0: loss = 1.28539 (* 1 = 1.28539 loss)
I0428 20:26:06.315472  2734 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:06.523584  2734 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:06.625717  2741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:06.628115  2734 solver.cpp:398]     Test net output #0: accuracy = 0.6397
I0428 20:26:06.628144  2734 solver.cpp:398]     Test net output #1: loss = 1.1491 (* 1 = 1.1491 loss)
I0428 20:26:06.630113  2734 solver.cpp:219] Iteration 500 (317.832 iter/s, 0.314631s/100 iters), loss = 1.34098
I0428 20:26:06.630162  2734 solver.cpp:238]     Train net output #0: loss = 1.34098 (* 1 = 1.34098 loss)
I0428 20:26:06.630175  2734 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:06.845232  2734 solver.cpp:219] Iteration 600 (465.005 iter/s, 0.215051s/100 iters), loss = 0.976396
I0428 20:26:06.845278  2734 solver.cpp:238]     Train net output #0: loss = 0.976396 (* 1 = 0.976396 loss)
I0428 20:26:06.845290  2734 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:07.055400  2734 solver.cpp:219] Iteration 700 (475.945 iter/s, 0.210108s/100 iters), loss = 1.2029
I0428 20:26:07.055435  2734 solver.cpp:238]     Train net output #0: loss = 1.2029 (* 1 = 1.2029 loss)
I0428 20:26:07.055444  2734 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:07.259614  2734 solver.cpp:219] Iteration 800 (489.805 iter/s, 0.204163s/100 iters), loss = 0.874484
I0428 20:26:07.259649  2734 solver.cpp:238]     Train net output #0: loss = 0.874484 (* 1 = 0.874484 loss)
I0428 20:26:07.259656  2734 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:07.462857  2734 solver.cpp:219] Iteration 900 (492.145 iter/s, 0.203192s/100 iters), loss = 0.82778
I0428 20:26:07.462893  2734 solver.cpp:238]     Train net output #0: loss = 0.82778 (* 1 = 0.82778 loss)
I0428 20:26:07.462900  2734 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:07.533542  2740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:07.672397  2734 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:07.674060  2734 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:07.675231  2734 solver.cpp:311] Iteration 1000, loss = 0.934802
I0428 20:26:07.675268  2734 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:07.785238  2741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:07.787820  2734 solver.cpp:398]     Test net output #0: accuracy = 0.7185
I0428 20:26:07.787850  2734 solver.cpp:398]     Test net output #1: loss = 0.939939 (* 1 = 0.939939 loss)
I0428 20:26:07.787858  2734 solver.cpp:316] Optimization Done.
I0428 20:26:07.787861  2734 caffe.cpp:259] Optimization Done.
