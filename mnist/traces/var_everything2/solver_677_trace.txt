I0428 19:53:02.206183 27681 caffe.cpp:218] Using GPUs 0
I0428 19:53:02.242841 27681 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:02.763448 27681 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test677.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:02.763587 27681 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test677.prototxt
I0428 19:53:02.764006 27681 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:02.764027 27681 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:02.764129 27681 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:02.764211 27681 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:02.764307 27681 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:02.764330 27681 net.cpp:86] Creating Layer mnist
I0428 19:53:02.764339 27681 net.cpp:382] mnist -> data
I0428 19:53:02.764361 27681 net.cpp:382] mnist -> label
I0428 19:53:02.765451 27681 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:02.767987 27681 net.cpp:124] Setting up mnist
I0428 19:53:02.768004 27681 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:02.768012 27681 net.cpp:131] Top shape: 64 (64)
I0428 19:53:02.768014 27681 net.cpp:139] Memory required for data: 200960
I0428 19:53:02.768023 27681 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:02.768049 27681 net.cpp:86] Creating Layer conv0
I0428 19:53:02.768070 27681 net.cpp:408] conv0 <- data
I0428 19:53:02.768088 27681 net.cpp:382] conv0 -> conv0
I0428 19:53:03.037307 27681 net.cpp:124] Setting up conv0
I0428 19:53:03.037333 27681 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:03.037338 27681 net.cpp:139] Memory required for data: 938240
I0428 19:53:03.037353 27681 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:03.037364 27681 net.cpp:86] Creating Layer pool0
I0428 19:53:03.037367 27681 net.cpp:408] pool0 <- conv0
I0428 19:53:03.037372 27681 net.cpp:382] pool0 -> pool0
I0428 19:53:03.037432 27681 net.cpp:124] Setting up pool0
I0428 19:53:03.037438 27681 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:03.037441 27681 net.cpp:139] Memory required for data: 1122560
I0428 19:53:03.037443 27681 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:03.037454 27681 net.cpp:86] Creating Layer conv1
I0428 19:53:03.037457 27681 net.cpp:408] conv1 <- pool0
I0428 19:53:03.037461 27681 net.cpp:382] conv1 -> conv1
I0428 19:53:03.040372 27681 net.cpp:124] Setting up conv1
I0428 19:53:03.040401 27681 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:03.040405 27681 net.cpp:139] Memory required for data: 1941760
I0428 19:53:03.040412 27681 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:03.040419 27681 net.cpp:86] Creating Layer pool1
I0428 19:53:03.040423 27681 net.cpp:408] pool1 <- conv1
I0428 19:53:03.040429 27681 net.cpp:382] pool1 -> pool1
I0428 19:53:03.040488 27681 net.cpp:124] Setting up pool1
I0428 19:53:03.040504 27681 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:03.040508 27681 net.cpp:139] Memory required for data: 2146560
I0428 19:53:03.040510 27681 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:03.040518 27681 net.cpp:86] Creating Layer ip1
I0428 19:53:03.040521 27681 net.cpp:408] ip1 <- pool1
I0428 19:53:03.040527 27681 net.cpp:382] ip1 -> ip1
I0428 19:53:03.040679 27681 net.cpp:124] Setting up ip1
I0428 19:53:03.040688 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.040689 27681 net.cpp:139] Memory required for data: 2149120
I0428 19:53:03.040696 27681 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:03.040702 27681 net.cpp:86] Creating Layer relu1
I0428 19:53:03.040705 27681 net.cpp:408] relu1 <- ip1
I0428 19:53:03.040709 27681 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:03.040933 27681 net.cpp:124] Setting up relu1
I0428 19:53:03.040943 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.040946 27681 net.cpp:139] Memory required for data: 2151680
I0428 19:53:03.040951 27681 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:03.040957 27681 net.cpp:86] Creating Layer ip2
I0428 19:53:03.040961 27681 net.cpp:408] ip2 <- ip1
I0428 19:53:03.040966 27681 net.cpp:382] ip2 -> ip2
I0428 19:53:03.041070 27681 net.cpp:124] Setting up ip2
I0428 19:53:03.041077 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.041080 27681 net.cpp:139] Memory required for data: 2154240
I0428 19:53:03.041085 27681 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:03.041091 27681 net.cpp:86] Creating Layer relu2
I0428 19:53:03.041095 27681 net.cpp:408] relu2 <- ip2
I0428 19:53:03.041100 27681 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:03.041967 27681 net.cpp:124] Setting up relu2
I0428 19:53:03.041980 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.041998 27681 net.cpp:139] Memory required for data: 2156800
I0428 19:53:03.042002 27681 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:03.042011 27681 net.cpp:86] Creating Layer ip3
I0428 19:53:03.042014 27681 net.cpp:408] ip3 <- ip2
I0428 19:53:03.042019 27681 net.cpp:382] ip3 -> ip3
I0428 19:53:03.042122 27681 net.cpp:124] Setting up ip3
I0428 19:53:03.042131 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.042135 27681 net.cpp:139] Memory required for data: 2159360
I0428 19:53:03.042141 27681 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:03.042147 27681 net.cpp:86] Creating Layer relu3
I0428 19:53:03.042150 27681 net.cpp:408] relu3 <- ip3
I0428 19:53:03.042155 27681 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:03.042325 27681 net.cpp:124] Setting up relu3
I0428 19:53:03.042335 27681 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:03.042337 27681 net.cpp:139] Memory required for data: 2161920
I0428 19:53:03.042340 27681 layer_factory.hpp:77] Creating layer loss
I0428 19:53:03.042346 27681 net.cpp:86] Creating Layer loss
I0428 19:53:03.042351 27681 net.cpp:408] loss <- ip3
I0428 19:53:03.042354 27681 net.cpp:408] loss <- label
I0428 19:53:03.042363 27681 net.cpp:382] loss -> loss
I0428 19:53:03.042378 27681 layer_factory.hpp:77] Creating layer loss
I0428 19:53:03.042646 27681 net.cpp:124] Setting up loss
I0428 19:53:03.042656 27681 net.cpp:131] Top shape: (1)
I0428 19:53:03.042659 27681 net.cpp:134]     with loss weight 1
I0428 19:53:03.042673 27681 net.cpp:139] Memory required for data: 2161924
I0428 19:53:03.042676 27681 net.cpp:200] loss needs backward computation.
I0428 19:53:03.042680 27681 net.cpp:200] relu3 needs backward computation.
I0428 19:53:03.042682 27681 net.cpp:200] ip3 needs backward computation.
I0428 19:53:03.042685 27681 net.cpp:200] relu2 needs backward computation.
I0428 19:53:03.042687 27681 net.cpp:200] ip2 needs backward computation.
I0428 19:53:03.042690 27681 net.cpp:200] relu1 needs backward computation.
I0428 19:53:03.042692 27681 net.cpp:200] ip1 needs backward computation.
I0428 19:53:03.042695 27681 net.cpp:200] pool1 needs backward computation.
I0428 19:53:03.042701 27681 net.cpp:200] conv1 needs backward computation.
I0428 19:53:03.042704 27681 net.cpp:200] pool0 needs backward computation.
I0428 19:53:03.042707 27681 net.cpp:200] conv0 needs backward computation.
I0428 19:53:03.042711 27681 net.cpp:202] mnist does not need backward computation.
I0428 19:53:03.042712 27681 net.cpp:244] This network produces output loss
I0428 19:53:03.042721 27681 net.cpp:257] Network initialization done.
I0428 19:53:03.043120 27681 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test677.prototxt
I0428 19:53:03.043177 27681 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:03.043265 27681 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:03.043346 27681 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:03.043390 27681 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:03.043402 27681 net.cpp:86] Creating Layer mnist
I0428 19:53:03.043408 27681 net.cpp:382] mnist -> data
I0428 19:53:03.043416 27681 net.cpp:382] mnist -> label
I0428 19:53:03.043505 27681 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:03.045681 27681 net.cpp:124] Setting up mnist
I0428 19:53:03.045727 27681 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:03.045732 27681 net.cpp:131] Top shape: 100 (100)
I0428 19:53:03.045735 27681 net.cpp:139] Memory required for data: 314000
I0428 19:53:03.045753 27681 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:03.045760 27681 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:03.045763 27681 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:03.045779 27681 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:03.045786 27681 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:03.045845 27681 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:03.045850 27681 net.cpp:131] Top shape: 100 (100)
I0428 19:53:03.045855 27681 net.cpp:131] Top shape: 100 (100)
I0428 19:53:03.045857 27681 net.cpp:139] Memory required for data: 314800
I0428 19:53:03.045861 27681 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:03.045871 27681 net.cpp:86] Creating Layer conv0
I0428 19:53:03.045873 27681 net.cpp:408] conv0 <- data
I0428 19:53:03.045878 27681 net.cpp:382] conv0 -> conv0
I0428 19:53:03.047626 27681 net.cpp:124] Setting up conv0
I0428 19:53:03.047641 27681 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:03.047643 27681 net.cpp:139] Memory required for data: 1466800
I0428 19:53:03.047652 27681 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:03.047660 27681 net.cpp:86] Creating Layer pool0
I0428 19:53:03.047663 27681 net.cpp:408] pool0 <- conv0
I0428 19:53:03.047668 27681 net.cpp:382] pool0 -> pool0
I0428 19:53:03.047705 27681 net.cpp:124] Setting up pool0
I0428 19:53:03.047711 27681 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:03.047713 27681 net.cpp:139] Memory required for data: 1754800
I0428 19:53:03.047716 27681 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:03.047725 27681 net.cpp:86] Creating Layer conv1
I0428 19:53:03.047729 27681 net.cpp:408] conv1 <- pool0
I0428 19:53:03.047734 27681 net.cpp:382] conv1 -> conv1
I0428 19:53:03.049393 27681 net.cpp:124] Setting up conv1
I0428 19:53:03.049423 27681 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:03.049440 27681 net.cpp:139] Memory required for data: 3034800
I0428 19:53:03.049449 27681 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:03.049458 27681 net.cpp:86] Creating Layer pool1
I0428 19:53:03.049463 27681 net.cpp:408] pool1 <- conv1
I0428 19:53:03.049468 27681 net.cpp:382] pool1 -> pool1
I0428 19:53:03.049510 27681 net.cpp:124] Setting up pool1
I0428 19:53:03.049516 27681 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:03.049520 27681 net.cpp:139] Memory required for data: 3354800
I0428 19:53:03.049522 27681 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:03.049530 27681 net.cpp:86] Creating Layer ip1
I0428 19:53:03.049533 27681 net.cpp:408] ip1 <- pool1
I0428 19:53:03.049538 27681 net.cpp:382] ip1 -> ip1
I0428 19:53:03.049682 27681 net.cpp:124] Setting up ip1
I0428 19:53:03.049690 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.049703 27681 net.cpp:139] Memory required for data: 3358800
I0428 19:53:03.049710 27681 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:03.049715 27681 net.cpp:86] Creating Layer relu1
I0428 19:53:03.049720 27681 net.cpp:408] relu1 <- ip1
I0428 19:53:03.049726 27681 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:03.049893 27681 net.cpp:124] Setting up relu1
I0428 19:53:03.049902 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.049906 27681 net.cpp:139] Memory required for data: 3362800
I0428 19:53:03.049908 27681 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:03.049916 27681 net.cpp:86] Creating Layer ip2
I0428 19:53:03.049919 27681 net.cpp:408] ip2 <- ip1
I0428 19:53:03.049926 27681 net.cpp:382] ip2 -> ip2
I0428 19:53:03.050045 27681 net.cpp:124] Setting up ip2
I0428 19:53:03.050053 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.050056 27681 net.cpp:139] Memory required for data: 3366800
I0428 19:53:03.050061 27681 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:03.050066 27681 net.cpp:86] Creating Layer relu2
I0428 19:53:03.050070 27681 net.cpp:408] relu2 <- ip2
I0428 19:53:03.050073 27681 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:03.050276 27681 net.cpp:124] Setting up relu2
I0428 19:53:03.050290 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.050295 27681 net.cpp:139] Memory required for data: 3370800
I0428 19:53:03.050302 27681 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:03.050310 27681 net.cpp:86] Creating Layer ip3
I0428 19:53:03.050315 27681 net.cpp:408] ip3 <- ip2
I0428 19:53:03.050325 27681 net.cpp:382] ip3 -> ip3
I0428 19:53:03.050458 27681 net.cpp:124] Setting up ip3
I0428 19:53:03.050467 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.050470 27681 net.cpp:139] Memory required for data: 3374800
I0428 19:53:03.050479 27681 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:03.050485 27681 net.cpp:86] Creating Layer relu3
I0428 19:53:03.050488 27681 net.cpp:408] relu3 <- ip3
I0428 19:53:03.050494 27681 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:03.051302 27681 net.cpp:124] Setting up relu3
I0428 19:53:03.051326 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.051331 27681 net.cpp:139] Memory required for data: 3378800
I0428 19:53:03.051334 27681 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:03.051350 27681 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:03.051353 27681 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:03.051359 27681 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:03.051367 27681 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:03.051405 27681 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:03.051412 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.051416 27681 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:03.051419 27681 net.cpp:139] Memory required for data: 3386800
I0428 19:53:03.051422 27681 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:03.051429 27681 net.cpp:86] Creating Layer accuracy
I0428 19:53:03.051432 27681 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:03.051435 27681 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:03.051440 27681 net.cpp:382] accuracy -> accuracy
I0428 19:53:03.051447 27681 net.cpp:124] Setting up accuracy
I0428 19:53:03.051450 27681 net.cpp:131] Top shape: (1)
I0428 19:53:03.051453 27681 net.cpp:139] Memory required for data: 3386804
I0428 19:53:03.051456 27681 layer_factory.hpp:77] Creating layer loss
I0428 19:53:03.051461 27681 net.cpp:86] Creating Layer loss
I0428 19:53:03.051465 27681 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:03.051468 27681 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:03.051472 27681 net.cpp:382] loss -> loss
I0428 19:53:03.051478 27681 layer_factory.hpp:77] Creating layer loss
I0428 19:53:03.051760 27681 net.cpp:124] Setting up loss
I0428 19:53:03.051772 27681 net.cpp:131] Top shape: (1)
I0428 19:53:03.051776 27681 net.cpp:134]     with loss weight 1
I0428 19:53:03.051782 27681 net.cpp:139] Memory required for data: 3386808
I0428 19:53:03.051795 27681 net.cpp:200] loss needs backward computation.
I0428 19:53:03.051800 27681 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:03.051803 27681 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:03.051806 27681 net.cpp:200] relu3 needs backward computation.
I0428 19:53:03.051810 27681 net.cpp:200] ip3 needs backward computation.
I0428 19:53:03.051812 27681 net.cpp:200] relu2 needs backward computation.
I0428 19:53:03.051815 27681 net.cpp:200] ip2 needs backward computation.
I0428 19:53:03.051817 27681 net.cpp:200] relu1 needs backward computation.
I0428 19:53:03.051820 27681 net.cpp:200] ip1 needs backward computation.
I0428 19:53:03.051825 27681 net.cpp:200] pool1 needs backward computation.
I0428 19:53:03.051826 27681 net.cpp:200] conv1 needs backward computation.
I0428 19:53:03.051831 27681 net.cpp:200] pool0 needs backward computation.
I0428 19:53:03.051834 27681 net.cpp:200] conv0 needs backward computation.
I0428 19:53:03.051838 27681 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:03.051841 27681 net.cpp:202] mnist does not need backward computation.
I0428 19:53:03.051844 27681 net.cpp:244] This network produces output accuracy
I0428 19:53:03.051847 27681 net.cpp:244] This network produces output loss
I0428 19:53:03.051858 27681 net.cpp:257] Network initialization done.
I0428 19:53:03.051900 27681 solver.cpp:56] Solver scaffolding done.
I0428 19:53:03.052264 27681 caffe.cpp:248] Starting Optimization
I0428 19:53:03.052270 27681 solver.cpp:273] Solving LeNet
I0428 19:53:03.052273 27681 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:03.052484 27681 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:03.058467 27681 blocking_queue.cpp:49] Waiting for data
I0428 19:53:03.108433 27688 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:03.108996 27681 solver.cpp:398]     Test net output #0: accuracy = 0.1142
I0428 19:53:03.109021 27681 solver.cpp:398]     Test net output #1: loss = 2.35267 (* 1 = 2.35267 loss)
I0428 19:53:03.111452 27681 solver.cpp:219] Iteration 0 (0 iter/s, 0.0591411s/100 iters), loss = 2.39613
I0428 19:53:03.111490 27681 solver.cpp:238]     Train net output #0: loss = 2.39613 (* 1 = 2.39613 loss)
I0428 19:53:03.111502 27681 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:03.221588 27681 solver.cpp:219] Iteration 100 (908.277 iter/s, 0.110099s/100 iters), loss = 1.03386
I0428 19:53:03.221617 27681 solver.cpp:238]     Train net output #0: loss = 1.03386 (* 1 = 1.03386 loss)
I0428 19:53:03.221623 27681 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:03.325414 27681 solver.cpp:219] Iteration 200 (963.526 iter/s, 0.103785s/100 iters), loss = 0.599539
I0428 19:53:03.325459 27681 solver.cpp:238]     Train net output #0: loss = 0.599539 (* 1 = 0.599539 loss)
I0428 19:53:03.325475 27681 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:03.440847 27681 solver.cpp:219] Iteration 300 (866.73 iter/s, 0.115376s/100 iters), loss = 0.662848
I0428 19:53:03.440886 27681 solver.cpp:238]     Train net output #0: loss = 0.662848 (* 1 = 0.662848 loss)
I0428 19:53:03.440894 27681 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:03.542453 27681 solver.cpp:219] Iteration 400 (984.667 iter/s, 0.101557s/100 iters), loss = 0.723044
I0428 19:53:03.542495 27681 solver.cpp:238]     Train net output #0: loss = 0.723044 (* 1 = 0.723044 loss)
I0428 19:53:03.542501 27681 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:03.651901 27681 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:03.705155 27688 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:03.705675 27681 solver.cpp:398]     Test net output #0: accuracy = 0.7617
I0428 19:53:03.705698 27681 solver.cpp:398]     Test net output #1: loss = 0.616015 (* 1 = 0.616015 loss)
I0428 19:53:03.706735 27681 solver.cpp:219] Iteration 500 (608.856 iter/s, 0.164242s/100 iters), loss = 0.639179
I0428 19:53:03.706781 27681 solver.cpp:238]     Train net output #0: loss = 0.639179 (* 1 = 0.639179 loss)
I0428 19:53:03.706805 27681 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:03.817541 27681 solver.cpp:219] Iteration 600 (902.913 iter/s, 0.110753s/100 iters), loss = 0.260913
I0428 19:53:03.817567 27681 solver.cpp:238]     Train net output #0: loss = 0.260913 (* 1 = 0.260913 loss)
I0428 19:53:03.817574 27681 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:03.926868 27681 solver.cpp:219] Iteration 700 (915.002 iter/s, 0.109289s/100 iters), loss = 0.370179
I0428 19:53:03.926894 27681 solver.cpp:238]     Train net output #0: loss = 0.370179 (* 1 = 0.370179 loss)
I0428 19:53:03.926900 27681 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:04.027127 27681 solver.cpp:219] Iteration 800 (997.785 iter/s, 0.100222s/100 iters), loss = 0.404553
I0428 19:53:04.027166 27681 solver.cpp:238]     Train net output #0: loss = 0.404553 (* 1 = 0.404553 loss)
I0428 19:53:04.027173 27681 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:04.134851 27681 solver.cpp:219] Iteration 900 (928.724 iter/s, 0.107675s/100 iters), loss = 0.256857
I0428 19:53:04.134877 27681 solver.cpp:238]     Train net output #0: loss = 0.256857 (* 1 = 0.256857 loss)
I0428 19:53:04.134883 27681 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:04.170126 27687 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:04.236970 27681 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:04.238092 27681 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:04.238661 27681 solver.cpp:311] Iteration 1000, loss = 0.212633
I0428 19:53:04.238675 27681 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:04.310662 27688 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:04.311192 27681 solver.cpp:398]     Test net output #0: accuracy = 0.8737
I0428 19:53:04.311228 27681 solver.cpp:398]     Test net output #1: loss = 0.339954 (* 1 = 0.339954 loss)
I0428 19:53:04.311234 27681 solver.cpp:316] Optimization Done.
I0428 19:53:04.311238 27681 caffe.cpp:259] Optimization Done.
