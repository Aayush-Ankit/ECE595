I0428 20:03:20.141788 30163 caffe.cpp:218] Using GPUs 0
I0428 20:03:20.171782 30163 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:20.621197 30163 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test949.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:20.621351 30163 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test949.prototxt
I0428 20:03:20.621695 30163 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:20.621713 30163 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:20.621799 30163 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:20.621882 30163 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:20.621995 30163 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:20.622022 30163 net.cpp:86] Creating Layer mnist
I0428 20:03:20.622031 30163 net.cpp:382] mnist -> data
I0428 20:03:20.622057 30163 net.cpp:382] mnist -> label
I0428 20:03:20.623206 30163 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:20.625334 30163 net.cpp:124] Setting up mnist
I0428 20:03:20.625365 30163 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:20.625375 30163 net.cpp:131] Top shape: 64 (64)
I0428 20:03:20.625380 30163 net.cpp:139] Memory required for data: 200960
I0428 20:03:20.625389 30163 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:20.625407 30163 net.cpp:86] Creating Layer conv0
I0428 20:03:20.625427 30163 net.cpp:408] conv0 <- data
I0428 20:03:20.625443 30163 net.cpp:382] conv0 -> conv0
I0428 20:03:20.857520 30163 net.cpp:124] Setting up conv0
I0428 20:03:20.857547 30163 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:20.857553 30163 net.cpp:139] Memory required for data: 1675520
I0428 20:03:20.857571 30163 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:20.857589 30163 net.cpp:86] Creating Layer pool0
I0428 20:03:20.857595 30163 net.cpp:408] pool0 <- conv0
I0428 20:03:20.857604 30163 net.cpp:382] pool0 -> pool0
I0428 20:03:20.857661 30163 net.cpp:124] Setting up pool0
I0428 20:03:20.857669 30163 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:20.857674 30163 net.cpp:139] Memory required for data: 2044160
I0428 20:03:20.857678 30163 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:20.857693 30163 net.cpp:86] Creating Layer conv1
I0428 20:03:20.857699 30163 net.cpp:408] conv1 <- pool0
I0428 20:03:20.857707 30163 net.cpp:382] conv1 -> conv1
I0428 20:03:20.859668 30163 net.cpp:124] Setting up conv1
I0428 20:03:20.859684 30163 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:20.859691 30163 net.cpp:139] Memory required for data: 3682560
I0428 20:03:20.859704 30163 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:20.859716 30163 net.cpp:86] Creating Layer pool1
I0428 20:03:20.859722 30163 net.cpp:408] pool1 <- conv1
I0428 20:03:20.859731 30163 net.cpp:382] pool1 -> pool1
I0428 20:03:20.859783 30163 net.cpp:124] Setting up pool1
I0428 20:03:20.859793 30163 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:20.859812 30163 net.cpp:139] Memory required for data: 4092160
I0428 20:03:20.859818 30163 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:20.859844 30163 net.cpp:86] Creating Layer ip1
I0428 20:03:20.859855 30163 net.cpp:408] ip1 <- pool1
I0428 20:03:20.859864 30163 net.cpp:382] ip1 -> ip1
I0428 20:03:20.861035 30163 net.cpp:124] Setting up ip1
I0428 20:03:20.861050 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.861057 30163 net.cpp:139] Memory required for data: 4094720
I0428 20:03:20.861070 30163 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:20.861081 30163 net.cpp:86] Creating Layer relu1
I0428 20:03:20.861088 30163 net.cpp:408] relu1 <- ip1
I0428 20:03:20.861096 30163 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:20.861340 30163 net.cpp:124] Setting up relu1
I0428 20:03:20.861363 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.861368 30163 net.cpp:139] Memory required for data: 4097280
I0428 20:03:20.861373 30163 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:20.861382 30163 net.cpp:86] Creating Layer ip2
I0428 20:03:20.861388 30163 net.cpp:408] ip2 <- ip1
I0428 20:03:20.861397 30163 net.cpp:382] ip2 -> ip2
I0428 20:03:20.861490 30163 net.cpp:124] Setting up ip2
I0428 20:03:20.861498 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.861503 30163 net.cpp:139] Memory required for data: 4099840
I0428 20:03:20.861512 30163 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:20.861521 30163 net.cpp:86] Creating Layer relu2
I0428 20:03:20.861526 30163 net.cpp:408] relu2 <- ip2
I0428 20:03:20.861532 30163 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:20.862323 30163 net.cpp:124] Setting up relu2
I0428 20:03:20.862336 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.862341 30163 net.cpp:139] Memory required for data: 4102400
I0428 20:03:20.862347 30163 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:20.862357 30163 net.cpp:86] Creating Layer ip3
I0428 20:03:20.862363 30163 net.cpp:408] ip3 <- ip2
I0428 20:03:20.862372 30163 net.cpp:382] ip3 -> ip3
I0428 20:03:20.862473 30163 net.cpp:124] Setting up ip3
I0428 20:03:20.862483 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.862488 30163 net.cpp:139] Memory required for data: 4104960
I0428 20:03:20.862501 30163 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:20.862510 30163 net.cpp:86] Creating Layer relu3
I0428 20:03:20.862516 30163 net.cpp:408] relu3 <- ip3
I0428 20:03:20.862524 30163 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:20.862685 30163 net.cpp:124] Setting up relu3
I0428 20:03:20.862695 30163 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:20.862701 30163 net.cpp:139] Memory required for data: 4107520
I0428 20:03:20.862706 30163 layer_factory.hpp:77] Creating layer loss
I0428 20:03:20.862715 30163 net.cpp:86] Creating Layer loss
I0428 20:03:20.862720 30163 net.cpp:408] loss <- ip3
I0428 20:03:20.862727 30163 net.cpp:408] loss <- label
I0428 20:03:20.862735 30163 net.cpp:382] loss -> loss
I0428 20:03:20.862754 30163 layer_factory.hpp:77] Creating layer loss
I0428 20:03:20.863018 30163 net.cpp:124] Setting up loss
I0428 20:03:20.863030 30163 net.cpp:131] Top shape: (1)
I0428 20:03:20.863035 30163 net.cpp:134]     with loss weight 1
I0428 20:03:20.863055 30163 net.cpp:139] Memory required for data: 4107524
I0428 20:03:20.863062 30163 net.cpp:200] loss needs backward computation.
I0428 20:03:20.863070 30163 net.cpp:200] relu3 needs backward computation.
I0428 20:03:20.863075 30163 net.cpp:200] ip3 needs backward computation.
I0428 20:03:20.863080 30163 net.cpp:200] relu2 needs backward computation.
I0428 20:03:20.863085 30163 net.cpp:200] ip2 needs backward computation.
I0428 20:03:20.863090 30163 net.cpp:200] relu1 needs backward computation.
I0428 20:03:20.863095 30163 net.cpp:200] ip1 needs backward computation.
I0428 20:03:20.863101 30163 net.cpp:200] pool1 needs backward computation.
I0428 20:03:20.863106 30163 net.cpp:200] conv1 needs backward computation.
I0428 20:03:20.863112 30163 net.cpp:200] pool0 needs backward computation.
I0428 20:03:20.863117 30163 net.cpp:200] conv0 needs backward computation.
I0428 20:03:20.863123 30163 net.cpp:202] mnist does not need backward computation.
I0428 20:03:20.863128 30163 net.cpp:244] This network produces output loss
I0428 20:03:20.863143 30163 net.cpp:257] Network initialization done.
I0428 20:03:20.863488 30163 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test949.prototxt
I0428 20:03:20.863520 30163 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:20.863610 30163 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:20.863742 30163 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:20.863801 30163 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:20.863817 30163 net.cpp:86] Creating Layer mnist
I0428 20:03:20.863826 30163 net.cpp:382] mnist -> data
I0428 20:03:20.863837 30163 net.cpp:382] mnist -> label
I0428 20:03:20.863947 30163 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:20.866334 30163 net.cpp:124] Setting up mnist
I0428 20:03:20.866364 30163 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:20.866374 30163 net.cpp:131] Top shape: 100 (100)
I0428 20:03:20.866394 30163 net.cpp:139] Memory required for data: 314000
I0428 20:03:20.866400 30163 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:20.866410 30163 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:20.866416 30163 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:20.866425 30163 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:20.866436 30163 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:20.866544 30163 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:20.866551 30163 net.cpp:131] Top shape: 100 (100)
I0428 20:03:20.866559 30163 net.cpp:131] Top shape: 100 (100)
I0428 20:03:20.866562 30163 net.cpp:139] Memory required for data: 314800
I0428 20:03:20.866578 30163 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:20.866591 30163 net.cpp:86] Creating Layer conv0
I0428 20:03:20.866597 30163 net.cpp:408] conv0 <- data
I0428 20:03:20.866605 30163 net.cpp:382] conv0 -> conv0
I0428 20:03:20.868288 30163 net.cpp:124] Setting up conv0
I0428 20:03:20.868302 30163 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:20.868309 30163 net.cpp:139] Memory required for data: 2618800
I0428 20:03:20.868322 30163 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:20.868332 30163 net.cpp:86] Creating Layer pool0
I0428 20:03:20.868338 30163 net.cpp:408] pool0 <- conv0
I0428 20:03:20.868346 30163 net.cpp:382] pool0 -> pool0
I0428 20:03:20.868391 30163 net.cpp:124] Setting up pool0
I0428 20:03:20.868399 30163 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:20.868404 30163 net.cpp:139] Memory required for data: 3194800
I0428 20:03:20.868410 30163 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:20.868423 30163 net.cpp:86] Creating Layer conv1
I0428 20:03:20.868430 30163 net.cpp:408] conv1 <- pool0
I0428 20:03:20.868439 30163 net.cpp:382] conv1 -> conv1
I0428 20:03:20.870302 30163 net.cpp:124] Setting up conv1
I0428 20:03:20.870318 30163 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:20.870338 30163 net.cpp:139] Memory required for data: 5754800
I0428 20:03:20.870367 30163 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:20.870378 30163 net.cpp:86] Creating Layer pool1
I0428 20:03:20.870386 30163 net.cpp:408] pool1 <- conv1
I0428 20:03:20.870429 30163 net.cpp:382] pool1 -> pool1
I0428 20:03:20.870476 30163 net.cpp:124] Setting up pool1
I0428 20:03:20.870484 30163 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:20.870491 30163 net.cpp:139] Memory required for data: 6394800
I0428 20:03:20.870496 30163 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:20.870506 30163 net.cpp:86] Creating Layer ip1
I0428 20:03:20.870513 30163 net.cpp:408] ip1 <- pool1
I0428 20:03:20.870522 30163 net.cpp:382] ip1 -> ip1
I0428 20:03:20.870723 30163 net.cpp:124] Setting up ip1
I0428 20:03:20.870731 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.870748 30163 net.cpp:139] Memory required for data: 6398800
I0428 20:03:20.870764 30163 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:20.870772 30163 net.cpp:86] Creating Layer relu1
I0428 20:03:20.870779 30163 net.cpp:408] relu1 <- ip1
I0428 20:03:20.870790 30163 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:20.871021 30163 net.cpp:124] Setting up relu1
I0428 20:03:20.871031 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.871037 30163 net.cpp:139] Memory required for data: 6402800
I0428 20:03:20.871042 30163 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:20.871054 30163 net.cpp:86] Creating Layer ip2
I0428 20:03:20.871062 30163 net.cpp:408] ip2 <- ip1
I0428 20:03:20.871069 30163 net.cpp:382] ip2 -> ip2
I0428 20:03:20.871186 30163 net.cpp:124] Setting up ip2
I0428 20:03:20.871208 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.871212 30163 net.cpp:139] Memory required for data: 6406800
I0428 20:03:20.871223 30163 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:20.871230 30163 net.cpp:86] Creating Layer relu2
I0428 20:03:20.871237 30163 net.cpp:408] relu2 <- ip2
I0428 20:03:20.871245 30163 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:20.871408 30163 net.cpp:124] Setting up relu2
I0428 20:03:20.871419 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.871424 30163 net.cpp:139] Memory required for data: 6410800
I0428 20:03:20.871429 30163 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:20.871457 30163 net.cpp:86] Creating Layer ip3
I0428 20:03:20.871464 30163 net.cpp:408] ip3 <- ip2
I0428 20:03:20.871472 30163 net.cpp:382] ip3 -> ip3
I0428 20:03:20.871583 30163 net.cpp:124] Setting up ip3
I0428 20:03:20.871592 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.871597 30163 net.cpp:139] Memory required for data: 6414800
I0428 20:03:20.871608 30163 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:20.871619 30163 net.cpp:86] Creating Layer relu3
I0428 20:03:20.871628 30163 net.cpp:408] relu3 <- ip3
I0428 20:03:20.871634 30163 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:20.872603 30163 net.cpp:124] Setting up relu3
I0428 20:03:20.872618 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.872625 30163 net.cpp:139] Memory required for data: 6418800
I0428 20:03:20.872630 30163 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:20.872638 30163 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:20.872644 30163 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:20.872653 30163 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:20.872664 30163 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:20.872714 30163 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:20.872722 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.872728 30163 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:20.872735 30163 net.cpp:139] Memory required for data: 6426800
I0428 20:03:20.872740 30163 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:20.872748 30163 net.cpp:86] Creating Layer accuracy
I0428 20:03:20.872755 30163 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:20.872762 30163 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:20.872771 30163 net.cpp:382] accuracy -> accuracy
I0428 20:03:20.872783 30163 net.cpp:124] Setting up accuracy
I0428 20:03:20.872792 30163 net.cpp:131] Top shape: (1)
I0428 20:03:20.872797 30163 net.cpp:139] Memory required for data: 6426804
I0428 20:03:20.872836 30163 layer_factory.hpp:77] Creating layer loss
I0428 20:03:20.872848 30163 net.cpp:86] Creating Layer loss
I0428 20:03:20.872853 30163 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:20.872860 30163 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:20.872879 30163 net.cpp:382] loss -> loss
I0428 20:03:20.872889 30163 layer_factory.hpp:77] Creating layer loss
I0428 20:03:20.873165 30163 net.cpp:124] Setting up loss
I0428 20:03:20.873178 30163 net.cpp:131] Top shape: (1)
I0428 20:03:20.873183 30163 net.cpp:134]     with loss weight 1
I0428 20:03:20.873203 30163 net.cpp:139] Memory required for data: 6426808
I0428 20:03:20.873210 30163 net.cpp:200] loss needs backward computation.
I0428 20:03:20.873216 30163 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:20.873222 30163 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:20.873227 30163 net.cpp:200] relu3 needs backward computation.
I0428 20:03:20.873232 30163 net.cpp:200] ip3 needs backward computation.
I0428 20:03:20.873237 30163 net.cpp:200] relu2 needs backward computation.
I0428 20:03:20.873242 30163 net.cpp:200] ip2 needs backward computation.
I0428 20:03:20.873247 30163 net.cpp:200] relu1 needs backward computation.
I0428 20:03:20.873251 30163 net.cpp:200] ip1 needs backward computation.
I0428 20:03:20.873257 30163 net.cpp:200] pool1 needs backward computation.
I0428 20:03:20.873262 30163 net.cpp:200] conv1 needs backward computation.
I0428 20:03:20.873267 30163 net.cpp:200] pool0 needs backward computation.
I0428 20:03:20.873272 30163 net.cpp:200] conv0 needs backward computation.
I0428 20:03:20.873278 30163 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:20.873284 30163 net.cpp:202] mnist does not need backward computation.
I0428 20:03:20.873292 30163 net.cpp:244] This network produces output accuracy
I0428 20:03:20.873298 30163 net.cpp:244] This network produces output loss
I0428 20:03:20.873320 30163 net.cpp:257] Network initialization done.
I0428 20:03:20.873394 30163 solver.cpp:56] Solver scaffolding done.
I0428 20:03:20.873800 30163 caffe.cpp:248] Starting Optimization
I0428 20:03:20.873806 30163 solver.cpp:273] Solving LeNet
I0428 20:03:20.873811 30163 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:20.874042 30163 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:20.879987 30163 blocking_queue.cpp:49] Waiting for data
I0428 20:03:20.949587 30170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:20.950215 30163 solver.cpp:398]     Test net output #0: accuracy = 0.076
I0428 20:03:20.950235 30163 solver.cpp:398]     Test net output #1: loss = 2.30885 (* 1 = 2.30885 loss)
I0428 20:03:20.953999 30163 solver.cpp:219] Iteration 0 (2.84026 iter/s, 0.0801505s/100 iters), loss = 2.32177
I0428 20:03:20.954025 30163 solver.cpp:238]     Train net output #0: loss = 2.32177 (* 1 = 2.32177 loss)
I0428 20:03:20.954057 30163 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:21.102864 30163 solver.cpp:219] Iteration 100 (671.93 iter/s, 0.148825s/100 iters), loss = 0.766828
I0428 20:03:21.102890 30163 solver.cpp:238]     Train net output #0: loss = 0.766828 (* 1 = 0.766828 loss)
I0428 20:03:21.102916 30163 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:21.252912 30163 solver.cpp:219] Iteration 200 (666.618 iter/s, 0.150011s/100 iters), loss = 0.662149
I0428 20:03:21.252941 30163 solver.cpp:238]     Train net output #0: loss = 0.662149 (* 1 = 0.662149 loss)
I0428 20:03:21.252967 30163 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:21.400588 30163 solver.cpp:219] Iteration 300 (677.341 iter/s, 0.147636s/100 iters), loss = 0.27165
I0428 20:03:21.400619 30163 solver.cpp:238]     Train net output #0: loss = 0.27165 (* 1 = 0.27165 loss)
I0428 20:03:21.400645 30163 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:21.548923 30163 solver.cpp:219] Iteration 400 (674.351 iter/s, 0.148291s/100 iters), loss = 0.242857
I0428 20:03:21.548957 30163 solver.cpp:238]     Train net output #0: loss = 0.242857 (* 1 = 0.242857 loss)
I0428 20:03:21.548982 30163 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:21.693596 30163 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:21.749781 30170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:21.751361 30163 solver.cpp:398]     Test net output #0: accuracy = 0.9396
I0428 20:03:21.751382 30163 solver.cpp:398]     Test net output #1: loss = 0.211216 (* 1 = 0.211216 loss)
I0428 20:03:21.752715 30163 solver.cpp:219] Iteration 500 (490.806 iter/s, 0.203746s/100 iters), loss = 0.196991
I0428 20:03:21.752775 30163 solver.cpp:238]     Train net output #0: loss = 0.196991 (* 1 = 0.196991 loss)
I0428 20:03:21.752804 30163 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:21.909446 30163 solver.cpp:219] Iteration 600 (638.264 iter/s, 0.156675s/100 iters), loss = 0.0872697
I0428 20:03:21.909477 30163 solver.cpp:238]     Train net output #0: loss = 0.0872698 (* 1 = 0.0872698 loss)
I0428 20:03:21.909504 30163 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:22.059111 30163 solver.cpp:219] Iteration 700 (668.343 iter/s, 0.149624s/100 iters), loss = 0.291773
I0428 20:03:22.059144 30163 solver.cpp:238]     Train net output #0: loss = 0.291773 (* 1 = 0.291773 loss)
I0428 20:03:22.059156 30163 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:22.206540 30163 solver.cpp:219] Iteration 800 (678.489 iter/s, 0.147386s/100 iters), loss = 0.30296
I0428 20:03:22.206569 30163 solver.cpp:238]     Train net output #0: loss = 0.30296 (* 1 = 0.30296 loss)
I0428 20:03:22.206595 30163 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:22.353302 30163 solver.cpp:219] Iteration 900 (681.562 iter/s, 0.146722s/100 iters), loss = 0.142834
I0428 20:03:22.353333 30163 solver.cpp:238]     Train net output #0: loss = 0.142834 (* 1 = 0.142834 loss)
I0428 20:03:22.353344 30163 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:22.401824 30169 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:22.508360 30163 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:22.510610 30163 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:22.511739 30163 solver.cpp:311] Iteration 1000, loss = 0.1072
I0428 20:03:22.511765 30163 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:22.586805 30170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:22.587458 30163 solver.cpp:398]     Test net output #0: accuracy = 0.9687
I0428 20:03:22.587483 30163 solver.cpp:398]     Test net output #1: loss = 0.100781 (* 1 = 0.100781 loss)
I0428 20:03:22.587493 30163 solver.cpp:316] Optimization Done.
I0428 20:03:22.587499 30163 caffe.cpp:259] Optimization Done.
