I0428 19:51:17.265023 27246 caffe.cpp:218] Using GPUs 0
I0428 19:51:17.297616 27246 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:17.806185 27246 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test629.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:17.806332 27246 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test629.prototxt
I0428 19:51:17.806718 27246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:17.806735 27246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:17.806829 27246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:17.806906 27246 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:17.807008 27246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:17.807031 27246 net.cpp:86] Creating Layer mnist
I0428 19:51:17.807041 27246 net.cpp:382] mnist -> data
I0428 19:51:17.807063 27246 net.cpp:382] mnist -> label
I0428 19:51:17.808145 27246 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:17.810600 27246 net.cpp:124] Setting up mnist
I0428 19:51:17.810618 27246 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:17.810626 27246 net.cpp:131] Top shape: 64 (64)
I0428 19:51:17.810628 27246 net.cpp:139] Memory required for data: 200960
I0428 19:51:17.810636 27246 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:17.810653 27246 net.cpp:86] Creating Layer conv0
I0428 19:51:17.810658 27246 net.cpp:408] conv0 <- data
I0428 19:51:17.810672 27246 net.cpp:382] conv0 -> conv0
I0428 19:51:18.070372 27246 net.cpp:124] Setting up conv0
I0428 19:51:18.070416 27246 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:18.070421 27246 net.cpp:139] Memory required for data: 938240
I0428 19:51:18.070456 27246 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:18.070469 27246 net.cpp:86] Creating Layer pool0
I0428 19:51:18.070473 27246 net.cpp:408] pool0 <- conv0
I0428 19:51:18.070479 27246 net.cpp:382] pool0 -> pool0
I0428 19:51:18.070546 27246 net.cpp:124] Setting up pool0
I0428 19:51:18.070554 27246 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:18.070556 27246 net.cpp:139] Memory required for data: 1122560
I0428 19:51:18.070560 27246 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:18.070571 27246 net.cpp:86] Creating Layer conv1
I0428 19:51:18.070574 27246 net.cpp:408] conv1 <- pool0
I0428 19:51:18.070580 27246 net.cpp:382] conv1 -> conv1
I0428 19:51:18.073513 27246 net.cpp:124] Setting up conv1
I0428 19:51:18.073544 27246 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:18.073547 27246 net.cpp:139] Memory required for data: 1532160
I0428 19:51:18.073555 27246 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:18.073563 27246 net.cpp:86] Creating Layer pool1
I0428 19:51:18.073567 27246 net.cpp:408] pool1 <- conv1
I0428 19:51:18.073571 27246 net.cpp:382] pool1 -> pool1
I0428 19:51:18.073609 27246 net.cpp:124] Setting up pool1
I0428 19:51:18.073616 27246 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:18.073619 27246 net.cpp:139] Memory required for data: 1634560
I0428 19:51:18.073621 27246 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:18.073628 27246 net.cpp:86] Creating Layer ip1
I0428 19:51:18.073632 27246 net.cpp:408] ip1 <- pool1
I0428 19:51:18.073637 27246 net.cpp:382] ip1 -> ip1
I0428 19:51:18.073751 27246 net.cpp:124] Setting up ip1
I0428 19:51:18.073758 27246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:18.073761 27246 net.cpp:139] Memory required for data: 1637120
I0428 19:51:18.073768 27246 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:18.073773 27246 net.cpp:86] Creating Layer relu1
I0428 19:51:18.073776 27246 net.cpp:408] relu1 <- ip1
I0428 19:51:18.073781 27246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:18.073943 27246 net.cpp:124] Setting up relu1
I0428 19:51:18.073951 27246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:18.073954 27246 net.cpp:139] Memory required for data: 1639680
I0428 19:51:18.073957 27246 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:18.073964 27246 net.cpp:86] Creating Layer ip2
I0428 19:51:18.073967 27246 net.cpp:408] ip2 <- ip1
I0428 19:51:18.073972 27246 net.cpp:382] ip2 -> ip2
I0428 19:51:18.074064 27246 net.cpp:124] Setting up ip2
I0428 19:51:18.074070 27246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:18.074074 27246 net.cpp:139] Memory required for data: 1642240
I0428 19:51:18.074079 27246 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:18.074084 27246 net.cpp:86] Creating Layer relu2
I0428 19:51:18.074089 27246 net.cpp:408] relu2 <- ip2
I0428 19:51:18.074091 27246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:18.074862 27246 net.cpp:124] Setting up relu2
I0428 19:51:18.074873 27246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:18.074877 27246 net.cpp:139] Memory required for data: 1644800
I0428 19:51:18.074880 27246 layer_factory.hpp:77] Creating layer loss
I0428 19:51:18.074887 27246 net.cpp:86] Creating Layer loss
I0428 19:51:18.074889 27246 net.cpp:408] loss <- ip2
I0428 19:51:18.074894 27246 net.cpp:408] loss <- label
I0428 19:51:18.074899 27246 net.cpp:382] loss -> loss
I0428 19:51:18.074919 27246 layer_factory.hpp:77] Creating layer loss
I0428 19:51:18.075148 27246 net.cpp:124] Setting up loss
I0428 19:51:18.075158 27246 net.cpp:131] Top shape: (1)
I0428 19:51:18.075162 27246 net.cpp:134]     with loss weight 1
I0428 19:51:18.075178 27246 net.cpp:139] Memory required for data: 1644804
I0428 19:51:18.075182 27246 net.cpp:200] loss needs backward computation.
I0428 19:51:18.075186 27246 net.cpp:200] relu2 needs backward computation.
I0428 19:51:18.075188 27246 net.cpp:200] ip2 needs backward computation.
I0428 19:51:18.075191 27246 net.cpp:200] relu1 needs backward computation.
I0428 19:51:18.075194 27246 net.cpp:200] ip1 needs backward computation.
I0428 19:51:18.075207 27246 net.cpp:200] pool1 needs backward computation.
I0428 19:51:18.075212 27246 net.cpp:200] conv1 needs backward computation.
I0428 19:51:18.075214 27246 net.cpp:200] pool0 needs backward computation.
I0428 19:51:18.075233 27246 net.cpp:200] conv0 needs backward computation.
I0428 19:51:18.075237 27246 net.cpp:202] mnist does not need backward computation.
I0428 19:51:18.075240 27246 net.cpp:244] This network produces output loss
I0428 19:51:18.075248 27246 net.cpp:257] Network initialization done.
I0428 19:51:18.075557 27246 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test629.prototxt
I0428 19:51:18.075582 27246 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:18.075664 27246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:18.075727 27246 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:18.075769 27246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:18.075783 27246 net.cpp:86] Creating Layer mnist
I0428 19:51:18.075788 27246 net.cpp:382] mnist -> data
I0428 19:51:18.075794 27246 net.cpp:382] mnist -> label
I0428 19:51:18.075876 27246 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:18.078006 27246 net.cpp:124] Setting up mnist
I0428 19:51:18.078019 27246 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:18.078024 27246 net.cpp:131] Top shape: 100 (100)
I0428 19:51:18.078027 27246 net.cpp:139] Memory required for data: 314000
I0428 19:51:18.078032 27246 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:18.078042 27246 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:18.078045 27246 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:18.078049 27246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:18.078058 27246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:18.078163 27246 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:18.078181 27246 net.cpp:131] Top shape: 100 (100)
I0428 19:51:18.078186 27246 net.cpp:131] Top shape: 100 (100)
I0428 19:51:18.078188 27246 net.cpp:139] Memory required for data: 314800
I0428 19:51:18.078191 27246 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:18.078202 27246 net.cpp:86] Creating Layer conv0
I0428 19:51:18.078205 27246 net.cpp:408] conv0 <- data
I0428 19:51:18.078210 27246 net.cpp:382] conv0 -> conv0
I0428 19:51:18.079901 27246 net.cpp:124] Setting up conv0
I0428 19:51:18.079931 27246 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:18.079936 27246 net.cpp:139] Memory required for data: 1466800
I0428 19:51:18.079946 27246 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:18.079953 27246 net.cpp:86] Creating Layer pool0
I0428 19:51:18.079957 27246 net.cpp:408] pool0 <- conv0
I0428 19:51:18.079963 27246 net.cpp:382] pool0 -> pool0
I0428 19:51:18.079999 27246 net.cpp:124] Setting up pool0
I0428 19:51:18.080006 27246 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:18.080009 27246 net.cpp:139] Memory required for data: 1754800
I0428 19:51:18.080013 27246 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:18.080023 27246 net.cpp:86] Creating Layer conv1
I0428 19:51:18.080029 27246 net.cpp:408] conv1 <- pool0
I0428 19:51:18.080035 27246 net.cpp:382] conv1 -> conv1
I0428 19:51:18.082237 27246 net.cpp:124] Setting up conv1
I0428 19:51:18.082250 27246 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:18.082254 27246 net.cpp:139] Memory required for data: 2394800
I0428 19:51:18.082263 27246 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:18.082271 27246 net.cpp:86] Creating Layer pool1
I0428 19:51:18.082275 27246 net.cpp:408] pool1 <- conv1
I0428 19:51:18.082280 27246 net.cpp:382] pool1 -> pool1
I0428 19:51:18.082335 27246 net.cpp:124] Setting up pool1
I0428 19:51:18.082345 27246 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:18.082347 27246 net.cpp:139] Memory required for data: 2554800
I0428 19:51:18.082350 27246 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:18.082356 27246 net.cpp:86] Creating Layer ip1
I0428 19:51:18.082360 27246 net.cpp:408] ip1 <- pool1
I0428 19:51:18.082366 27246 net.cpp:382] ip1 -> ip1
I0428 19:51:18.082540 27246 net.cpp:124] Setting up ip1
I0428 19:51:18.082547 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.082551 27246 net.cpp:139] Memory required for data: 2558800
I0428 19:51:18.082559 27246 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:18.082564 27246 net.cpp:86] Creating Layer relu1
I0428 19:51:18.082568 27246 net.cpp:408] relu1 <- ip1
I0428 19:51:18.082574 27246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:18.082751 27246 net.cpp:124] Setting up relu1
I0428 19:51:18.082759 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.082763 27246 net.cpp:139] Memory required for data: 2562800
I0428 19:51:18.082767 27246 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:18.082773 27246 net.cpp:86] Creating Layer ip2
I0428 19:51:18.082777 27246 net.cpp:408] ip2 <- ip1
I0428 19:51:18.082782 27246 net.cpp:382] ip2 -> ip2
I0428 19:51:18.082895 27246 net.cpp:124] Setting up ip2
I0428 19:51:18.082902 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.082906 27246 net.cpp:139] Memory required for data: 2566800
I0428 19:51:18.082911 27246 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:18.082916 27246 net.cpp:86] Creating Layer relu2
I0428 19:51:18.082918 27246 net.cpp:408] relu2 <- ip2
I0428 19:51:18.082932 27246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:18.083091 27246 net.cpp:124] Setting up relu2
I0428 19:51:18.083099 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.083102 27246 net.cpp:139] Memory required for data: 2570800
I0428 19:51:18.083106 27246 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:18.083111 27246 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:18.083113 27246 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:18.083119 27246 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:18.083137 27246 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:18.083173 27246 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:18.083194 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.083199 27246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:18.083200 27246 net.cpp:139] Memory required for data: 2578800
I0428 19:51:18.083204 27246 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:18.083209 27246 net.cpp:86] Creating Layer accuracy
I0428 19:51:18.083212 27246 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:18.083216 27246 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:18.083221 27246 net.cpp:382] accuracy -> accuracy
I0428 19:51:18.083228 27246 net.cpp:124] Setting up accuracy
I0428 19:51:18.083232 27246 net.cpp:131] Top shape: (1)
I0428 19:51:18.083235 27246 net.cpp:139] Memory required for data: 2578804
I0428 19:51:18.083243 27246 layer_factory.hpp:77] Creating layer loss
I0428 19:51:18.083254 27246 net.cpp:86] Creating Layer loss
I0428 19:51:18.083257 27246 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:18.083261 27246 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:18.083271 27246 net.cpp:382] loss -> loss
I0428 19:51:18.083277 27246 layer_factory.hpp:77] Creating layer loss
I0428 19:51:18.083515 27246 net.cpp:124] Setting up loss
I0428 19:51:18.083524 27246 net.cpp:131] Top shape: (1)
I0428 19:51:18.083528 27246 net.cpp:134]     with loss weight 1
I0428 19:51:18.083534 27246 net.cpp:139] Memory required for data: 2578808
I0428 19:51:18.083536 27246 net.cpp:200] loss needs backward computation.
I0428 19:51:18.083540 27246 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:18.083544 27246 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:18.083547 27246 net.cpp:200] relu2 needs backward computation.
I0428 19:51:18.083550 27246 net.cpp:200] ip2 needs backward computation.
I0428 19:51:18.083554 27246 net.cpp:200] relu1 needs backward computation.
I0428 19:51:18.083555 27246 net.cpp:200] ip1 needs backward computation.
I0428 19:51:18.083565 27246 net.cpp:200] pool1 needs backward computation.
I0428 19:51:18.083569 27246 net.cpp:200] conv1 needs backward computation.
I0428 19:51:18.083571 27246 net.cpp:200] pool0 needs backward computation.
I0428 19:51:18.083575 27246 net.cpp:200] conv0 needs backward computation.
I0428 19:51:18.083583 27246 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:18.083586 27246 net.cpp:202] mnist does not need backward computation.
I0428 19:51:18.083590 27246 net.cpp:244] This network produces output accuracy
I0428 19:51:18.083592 27246 net.cpp:244] This network produces output loss
I0428 19:51:18.083608 27246 net.cpp:257] Network initialization done.
I0428 19:51:18.083643 27246 solver.cpp:56] Solver scaffolding done.
I0428 19:51:18.083915 27246 caffe.cpp:248] Starting Optimization
I0428 19:51:18.083922 27246 solver.cpp:273] Solving LeNet
I0428 19:51:18.083925 27246 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:18.084101 27246 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:18.087307 27246 blocking_queue.cpp:49] Waiting for data
I0428 19:51:18.147174 27253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:18.147671 27246 solver.cpp:398]     Test net output #0: accuracy = 0.0837
I0428 19:51:18.147691 27246 solver.cpp:398]     Test net output #1: loss = 2.31367 (* 1 = 2.31367 loss)
I0428 19:51:18.149271 27246 solver.cpp:219] Iteration 0 (-5.08068e-31 iter/s, 0.0653189s/100 iters), loss = 2.30205
I0428 19:51:18.149320 27246 solver.cpp:238]     Train net output #0: loss = 2.30205 (* 1 = 2.30205 loss)
I0428 19:51:18.149333 27246 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:18.226670 27246 solver.cpp:219] Iteration 100 (1293.02 iter/s, 0.0773386s/100 iters), loss = 1.15185
I0428 19:51:18.226708 27246 solver.cpp:238]     Train net output #0: loss = 1.15185 (* 1 = 1.15185 loss)
I0428 19:51:18.226714 27246 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:18.303699 27246 solver.cpp:219] Iteration 200 (1299.02 iter/s, 0.0769812s/100 iters), loss = 0.653139
I0428 19:51:18.303735 27246 solver.cpp:238]     Train net output #0: loss = 0.653139 (* 1 = 0.653139 loss)
I0428 19:51:18.303741 27246 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:18.381013 27246 solver.cpp:219] Iteration 300 (1294.18 iter/s, 0.0772689s/100 iters), loss = 0.648099
I0428 19:51:18.381042 27246 solver.cpp:238]     Train net output #0: loss = 0.648099 (* 1 = 0.648099 loss)
I0428 19:51:18.381048 27246 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:18.457598 27246 solver.cpp:219] Iteration 400 (1306.37 iter/s, 0.0765481s/100 iters), loss = 0.422209
I0428 19:51:18.457623 27246 solver.cpp:238]     Train net output #0: loss = 0.422209 (* 1 = 0.422209 loss)
I0428 19:51:18.457628 27246 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:18.533278 27246 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:18.609239 27253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:18.609755 27246 solver.cpp:398]     Test net output #0: accuracy = 0.8567
I0428 19:51:18.609772 27246 solver.cpp:398]     Test net output #1: loss = 0.392022 (* 1 = 0.392022 loss)
I0428 19:51:18.610497 27246 solver.cpp:219] Iteration 500 (654.23 iter/s, 0.152851s/100 iters), loss = 0.331199
I0428 19:51:18.610518 27246 solver.cpp:238]     Train net output #0: loss = 0.331199 (* 1 = 0.331199 loss)
I0428 19:51:18.610527 27246 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:18.688038 27246 solver.cpp:219] Iteration 600 (1290.14 iter/s, 0.0775107s/100 iters), loss = 0.253966
I0428 19:51:18.688061 27246 solver.cpp:238]     Train net output #0: loss = 0.253966 (* 1 = 0.253966 loss)
I0428 19:51:18.688067 27246 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:18.764824 27246 solver.cpp:219] Iteration 700 (1302.87 iter/s, 0.0767538s/100 iters), loss = 0.381274
I0428 19:51:18.764847 27246 solver.cpp:238]     Train net output #0: loss = 0.381274 (* 1 = 0.381274 loss)
I0428 19:51:18.764853 27246 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:18.841579 27246 solver.cpp:219] Iteration 800 (1303.39 iter/s, 0.0767232s/100 iters), loss = 0.503723
I0428 19:51:18.841603 27246 solver.cpp:238]     Train net output #0: loss = 0.503723 (* 1 = 0.503723 loss)
I0428 19:51:18.841609 27246 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:18.918712 27246 solver.cpp:219] Iteration 900 (1297 iter/s, 0.0771011s/100 iters), loss = 0.41458
I0428 19:51:18.918736 27246 solver.cpp:238]     Train net output #0: loss = 0.41458 (* 1 = 0.41458 loss)
I0428 19:51:18.918742 27246 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:18.944027 27252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:18.993613 27246 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:18.994415 27246 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:18.994885 27246 solver.cpp:311] Iteration 1000, loss = 0.392959
I0428 19:51:18.994899 27246 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:19.071369 27253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:19.071882 27246 solver.cpp:398]     Test net output #0: accuracy = 0.8741
I0428 19:51:19.071903 27246 solver.cpp:398]     Test net output #1: loss = 0.33519 (* 1 = 0.33519 loss)
I0428 19:51:19.071910 27246 solver.cpp:316] Optimization Done.
I0428 19:51:19.071913 27246 caffe.cpp:259] Optimization Done.
