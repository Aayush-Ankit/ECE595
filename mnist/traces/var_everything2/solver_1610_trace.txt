I0428 20:34:45.381444  4519 caffe.cpp:218] Using GPUs 0
I0428 20:34:45.411558  4519 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:45.860965  4519 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1610.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:45.861106  4519 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1610.prototxt
I0428 20:34:45.861487  4519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:45.861517  4519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:45.861601  4519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:45.861662  4519 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:45.861745  4519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:45.861775  4519 net.cpp:86] Creating Layer mnist
I0428 20:34:45.861781  4519 net.cpp:382] mnist -> data
I0428 20:34:45.861801  4519 net.cpp:382] mnist -> label
I0428 20:34:45.862788  4519 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:45.864977  4519 net.cpp:124] Setting up mnist
I0428 20:34:45.865007  4519 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:45.865012  4519 net.cpp:131] Top shape: 64 (64)
I0428 20:34:45.865015  4519 net.cpp:139] Memory required for data: 200960
I0428 20:34:45.865021  4519 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:45.865034  4519 net.cpp:86] Creating Layer conv0
I0428 20:34:45.865039  4519 net.cpp:408] conv0 <- data
I0428 20:34:45.865048  4519 net.cpp:382] conv0 -> conv0
I0428 20:34:46.099567  4519 net.cpp:124] Setting up conv0
I0428 20:34:46.099593  4519 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:46.099597  4519 net.cpp:139] Memory required for data: 14946560
I0428 20:34:46.099644  4519 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:46.099658  4519 net.cpp:86] Creating Layer pool0
I0428 20:34:46.099661  4519 net.cpp:408] pool0 <- conv0
I0428 20:34:46.099683  4519 net.cpp:382] pool0 -> pool0
I0428 20:34:46.099727  4519 net.cpp:124] Setting up pool0
I0428 20:34:46.099733  4519 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:46.099736  4519 net.cpp:139] Memory required for data: 18632960
I0428 20:34:46.099740  4519 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:46.099750  4519 net.cpp:86] Creating Layer conv1
I0428 20:34:46.099752  4519 net.cpp:408] conv1 <- pool0
I0428 20:34:46.099756  4519 net.cpp:382] conv1 -> conv1
I0428 20:34:46.103330  4519 net.cpp:124] Setting up conv1
I0428 20:34:46.103360  4519 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:46.103364  4519 net.cpp:139] Memory required for data: 19452160
I0428 20:34:46.103373  4519 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:46.103379  4519 net.cpp:86] Creating Layer pool1
I0428 20:34:46.103382  4519 net.cpp:408] pool1 <- conv1
I0428 20:34:46.103387  4519 net.cpp:382] pool1 -> pool1
I0428 20:34:46.103421  4519 net.cpp:124] Setting up pool1
I0428 20:34:46.103426  4519 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:46.103430  4519 net.cpp:139] Memory required for data: 19656960
I0428 20:34:46.103432  4519 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:46.103438  4519 net.cpp:86] Creating Layer ip1
I0428 20:34:46.103441  4519 net.cpp:408] ip1 <- pool1
I0428 20:34:46.103446  4519 net.cpp:382] ip1 -> ip1
I0428 20:34:46.103760  4519 net.cpp:124] Setting up ip1
I0428 20:34:46.103766  4519 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:46.103770  4519 net.cpp:139] Memory required for data: 19669760
I0428 20:34:46.103775  4519 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:46.103780  4519 net.cpp:86] Creating Layer relu1
I0428 20:34:46.103783  4519 net.cpp:408] relu1 <- ip1
I0428 20:34:46.103787  4519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:46.103936  4519 net.cpp:124] Setting up relu1
I0428 20:34:46.103945  4519 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:46.103947  4519 net.cpp:139] Memory required for data: 19682560
I0428 20:34:46.103961  4519 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:46.103967  4519 net.cpp:86] Creating Layer ip2
I0428 20:34:46.103971  4519 net.cpp:408] ip2 <- ip1
I0428 20:34:46.103974  4519 net.cpp:382] ip2 -> ip2
I0428 20:34:46.104064  4519 net.cpp:124] Setting up ip2
I0428 20:34:46.104071  4519 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:46.104074  4519 net.cpp:139] Memory required for data: 19685120
I0428 20:34:46.104079  4519 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:46.104084  4519 net.cpp:86] Creating Layer relu2
I0428 20:34:46.104087  4519 net.cpp:408] relu2 <- ip2
I0428 20:34:46.104090  4519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:46.104856  4519 net.cpp:124] Setting up relu2
I0428 20:34:46.104868  4519 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:46.104887  4519 net.cpp:139] Memory required for data: 19687680
I0428 20:34:46.104890  4519 layer_factory.hpp:77] Creating layer loss
I0428 20:34:46.104897  4519 net.cpp:86] Creating Layer loss
I0428 20:34:46.104900  4519 net.cpp:408] loss <- ip2
I0428 20:34:46.104904  4519 net.cpp:408] loss <- label
I0428 20:34:46.104909  4519 net.cpp:382] loss -> loss
I0428 20:34:46.104925  4519 layer_factory.hpp:77] Creating layer loss
I0428 20:34:46.105195  4519 net.cpp:124] Setting up loss
I0428 20:34:46.105206  4519 net.cpp:131] Top shape: (1)
I0428 20:34:46.105208  4519 net.cpp:134]     with loss weight 1
I0428 20:34:46.105222  4519 net.cpp:139] Memory required for data: 19687684
I0428 20:34:46.105226  4519 net.cpp:200] loss needs backward computation.
I0428 20:34:46.105229  4519 net.cpp:200] relu2 needs backward computation.
I0428 20:34:46.105232  4519 net.cpp:200] ip2 needs backward computation.
I0428 20:34:46.105234  4519 net.cpp:200] relu1 needs backward computation.
I0428 20:34:46.105237  4519 net.cpp:200] ip1 needs backward computation.
I0428 20:34:46.105250  4519 net.cpp:200] pool1 needs backward computation.
I0428 20:34:46.105254  4519 net.cpp:200] conv1 needs backward computation.
I0428 20:34:46.105257  4519 net.cpp:200] pool0 needs backward computation.
I0428 20:34:46.105260  4519 net.cpp:200] conv0 needs backward computation.
I0428 20:34:46.105263  4519 net.cpp:202] mnist does not need backward computation.
I0428 20:34:46.105267  4519 net.cpp:244] This network produces output loss
I0428 20:34:46.105274  4519 net.cpp:257] Network initialization done.
I0428 20:34:46.105576  4519 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1610.prototxt
I0428 20:34:46.105600  4519 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:46.105700  4519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:34:46.105765  4519 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:46.105809  4519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:46.105820  4519 net.cpp:86] Creating Layer mnist
I0428 20:34:46.105825  4519 net.cpp:382] mnist -> data
I0428 20:34:46.105846  4519 net.cpp:382] mnist -> label
I0428 20:34:46.105940  4519 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:46.107075  4519 net.cpp:124] Setting up mnist
I0428 20:34:46.107103  4519 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:46.107107  4519 net.cpp:131] Top shape: 100 (100)
I0428 20:34:46.107111  4519 net.cpp:139] Memory required for data: 314000
I0428 20:34:46.107115  4519 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:46.107121  4519 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:46.107125  4519 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:46.107130  4519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:46.107136  4519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:46.107277  4519 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:46.107285  4519 net.cpp:131] Top shape: 100 (100)
I0428 20:34:46.107288  4519 net.cpp:131] Top shape: 100 (100)
I0428 20:34:46.107291  4519 net.cpp:139] Memory required for data: 314800
I0428 20:34:46.107295  4519 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:46.107302  4519 net.cpp:86] Creating Layer conv0
I0428 20:34:46.107306  4519 net.cpp:408] conv0 <- data
I0428 20:34:46.107311  4519 net.cpp:382] conv0 -> conv0
I0428 20:34:46.109202  4519 net.cpp:124] Setting up conv0
I0428 20:34:46.109215  4519 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:46.109220  4519 net.cpp:139] Memory required for data: 23354800
I0428 20:34:46.109228  4519 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:46.109251  4519 net.cpp:86] Creating Layer pool0
I0428 20:34:46.109254  4519 net.cpp:408] pool0 <- conv0
I0428 20:34:46.109259  4519 net.cpp:382] pool0 -> pool0
I0428 20:34:46.109295  4519 net.cpp:124] Setting up pool0
I0428 20:34:46.109300  4519 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:46.109308  4519 net.cpp:139] Memory required for data: 29114800
I0428 20:34:46.109309  4519 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:46.109319  4519 net.cpp:86] Creating Layer conv1
I0428 20:34:46.109323  4519 net.cpp:408] conv1 <- pool0
I0428 20:34:46.109328  4519 net.cpp:382] conv1 -> conv1
I0428 20:34:46.112545  4519 net.cpp:124] Setting up conv1
I0428 20:34:46.112560  4519 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:46.112562  4519 net.cpp:139] Memory required for data: 30394800
I0428 20:34:46.112588  4519 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:46.112609  4519 net.cpp:86] Creating Layer pool1
I0428 20:34:46.112612  4519 net.cpp:408] pool1 <- conv1
I0428 20:34:46.112634  4519 net.cpp:382] pool1 -> pool1
I0428 20:34:46.112668  4519 net.cpp:124] Setting up pool1
I0428 20:34:46.112673  4519 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:46.112675  4519 net.cpp:139] Memory required for data: 30714800
I0428 20:34:46.112678  4519 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:46.112696  4519 net.cpp:86] Creating Layer ip1
I0428 20:34:46.112699  4519 net.cpp:408] ip1 <- pool1
I0428 20:34:46.112709  4519 net.cpp:382] ip1 -> ip1
I0428 20:34:46.113046  4519 net.cpp:124] Setting up ip1
I0428 20:34:46.113054  4519 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:46.113059  4519 net.cpp:139] Memory required for data: 30734800
I0428 20:34:46.113065  4519 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:46.113083  4519 net.cpp:86] Creating Layer relu1
I0428 20:34:46.113086  4519 net.cpp:408] relu1 <- ip1
I0428 20:34:46.113090  4519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:46.113245  4519 net.cpp:124] Setting up relu1
I0428 20:34:46.113253  4519 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:46.113255  4519 net.cpp:139] Memory required for data: 30754800
I0428 20:34:46.113265  4519 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:46.113277  4519 net.cpp:86] Creating Layer ip2
I0428 20:34:46.113281  4519 net.cpp:408] ip2 <- ip1
I0428 20:34:46.113287  4519 net.cpp:382] ip2 -> ip2
I0428 20:34:46.113384  4519 net.cpp:124] Setting up ip2
I0428 20:34:46.113390  4519 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:46.113394  4519 net.cpp:139] Memory required for data: 30758800
I0428 20:34:46.113399  4519 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:46.113404  4519 net.cpp:86] Creating Layer relu2
I0428 20:34:46.113405  4519 net.cpp:408] relu2 <- ip2
I0428 20:34:46.113409  4519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:46.113641  4519 net.cpp:124] Setting up relu2
I0428 20:34:46.113649  4519 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:46.113652  4519 net.cpp:139] Memory required for data: 30762800
I0428 20:34:46.113656  4519 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:34:46.113662  4519 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:34:46.113664  4519 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:34:46.113669  4519 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:34:46.113685  4519 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:34:46.113735  4519 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:34:46.113741  4519 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:46.113744  4519 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:46.113747  4519 net.cpp:139] Memory required for data: 30770800
I0428 20:34:46.113750  4519 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:46.113756  4519 net.cpp:86] Creating Layer accuracy
I0428 20:34:46.113759  4519 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:34:46.113770  4519 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:46.113773  4519 net.cpp:382] accuracy -> accuracy
I0428 20:34:46.113780  4519 net.cpp:124] Setting up accuracy
I0428 20:34:46.113785  4519 net.cpp:131] Top shape: (1)
I0428 20:34:46.113788  4519 net.cpp:139] Memory required for data: 30770804
I0428 20:34:46.113791  4519 layer_factory.hpp:77] Creating layer loss
I0428 20:34:46.113801  4519 net.cpp:86] Creating Layer loss
I0428 20:34:46.113804  4519 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:34:46.113807  4519 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:46.113817  4519 net.cpp:382] loss -> loss
I0428 20:34:46.113823  4519 layer_factory.hpp:77] Creating layer loss
I0428 20:34:46.114084  4519 net.cpp:124] Setting up loss
I0428 20:34:46.114091  4519 net.cpp:131] Top shape: (1)
I0428 20:34:46.114094  4519 net.cpp:134]     with loss weight 1
I0428 20:34:46.114100  4519 net.cpp:139] Memory required for data: 30770808
I0428 20:34:46.114104  4519 net.cpp:200] loss needs backward computation.
I0428 20:34:46.114107  4519 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:46.114110  4519 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:34:46.114114  4519 net.cpp:200] relu2 needs backward computation.
I0428 20:34:46.114122  4519 net.cpp:200] ip2 needs backward computation.
I0428 20:34:46.114125  4519 net.cpp:200] relu1 needs backward computation.
I0428 20:34:46.114128  4519 net.cpp:200] ip1 needs backward computation.
I0428 20:34:46.114130  4519 net.cpp:200] pool1 needs backward computation.
I0428 20:34:46.114135  4519 net.cpp:200] conv1 needs backward computation.
I0428 20:34:46.114137  4519 net.cpp:200] pool0 needs backward computation.
I0428 20:34:46.114140  4519 net.cpp:200] conv0 needs backward computation.
I0428 20:34:46.114143  4519 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:46.114147  4519 net.cpp:202] mnist does not need backward computation.
I0428 20:34:46.114150  4519 net.cpp:244] This network produces output accuracy
I0428 20:34:46.114153  4519 net.cpp:244] This network produces output loss
I0428 20:34:46.114167  4519 net.cpp:257] Network initialization done.
I0428 20:34:46.114202  4519 solver.cpp:56] Solver scaffolding done.
I0428 20:34:46.114473  4519 caffe.cpp:248] Starting Optimization
I0428 20:34:46.114480  4519 solver.cpp:273] Solving LeNet
I0428 20:34:46.114483  4519 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:46.115325  4519 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:46.167651  4519 blocking_queue.cpp:49] Waiting for data
I0428 20:34:46.225160  4526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:46.226706  4519 solver.cpp:398]     Test net output #0: accuracy = 0.1045
I0428 20:34:46.226728  4519 solver.cpp:398]     Test net output #1: loss = 2.31294 (* 1 = 2.31294 loss)
I0428 20:34:46.232295  4519 solver.cpp:219] Iteration 0 (0 iter/s, 0.117784s/100 iters), loss = 2.33407
I0428 20:34:46.232316  4519 solver.cpp:238]     Train net output #0: loss = 2.33407 (* 1 = 2.33407 loss)
I0428 20:34:46.232343  4519 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:46.458640  4519 solver.cpp:219] Iteration 100 (441.884 iter/s, 0.226304s/100 iters), loss = 0.858969
I0428 20:34:46.458667  4519 solver.cpp:238]     Train net output #0: loss = 0.858969 (* 1 = 0.858969 loss)
I0428 20:34:46.458673  4519 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:46.682936  4519 solver.cpp:219] Iteration 200 (445.925 iter/s, 0.224253s/100 iters), loss = 0.681172
I0428 20:34:46.682961  4519 solver.cpp:238]     Train net output #0: loss = 0.681172 (* 1 = 0.681172 loss)
I0428 20:34:46.682967  4519 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:46.907791  4519 solver.cpp:219] Iteration 300 (444.81 iter/s, 0.224815s/100 iters), loss = 0.313379
I0428 20:34:46.907815  4519 solver.cpp:238]     Train net output #0: loss = 0.313379 (* 1 = 0.313379 loss)
I0428 20:34:46.907821  4519 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:47.136004  4519 solver.cpp:219] Iteration 400 (438.264 iter/s, 0.228173s/100 iters), loss = 0.266163
I0428 20:34:47.136029  4519 solver.cpp:238]     Train net output #0: loss = 0.266163 (* 1 = 0.266163 loss)
I0428 20:34:47.136035  4519 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:47.359694  4519 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:47.466084  4526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:47.468866  4519 solver.cpp:398]     Test net output #0: accuracy = 0.8889
I0428 20:34:47.468888  4519 solver.cpp:398]     Test net output #1: loss = 0.2948 (* 1 = 0.2948 loss)
I0428 20:34:47.471103  4519 solver.cpp:219] Iteration 500 (298.461 iter/s, 0.335052s/100 iters), loss = 0.406851
I0428 20:34:47.471132  4519 solver.cpp:238]     Train net output #0: loss = 0.40685 (* 1 = 0.40685 loss)
I0428 20:34:47.471143  4519 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:47.704166  4519 solver.cpp:219] Iteration 600 (429.156 iter/s, 0.233015s/100 iters), loss = 0.230137
I0428 20:34:47.704205  4519 solver.cpp:238]     Train net output #0: loss = 0.230137 (* 1 = 0.230137 loss)
I0428 20:34:47.704211  4519 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:47.937049  4519 solver.cpp:219] Iteration 700 (429.502 iter/s, 0.232828s/100 iters), loss = 0.479584
I0428 20:34:47.937096  4519 solver.cpp:238]     Train net output #0: loss = 0.479584 (* 1 = 0.479584 loss)
I0428 20:34:47.937103  4519 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:48.169193  4519 solver.cpp:219] Iteration 800 (430.887 iter/s, 0.232079s/100 iters), loss = 0.401236
I0428 20:34:48.169220  4519 solver.cpp:238]     Train net output #0: loss = 0.401235 (* 1 = 0.401235 loss)
I0428 20:34:48.169226  4519 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:48.404398  4519 solver.cpp:219] Iteration 900 (425.238 iter/s, 0.235162s/100 iters), loss = 0.264301
I0428 20:34:48.404424  4519 solver.cpp:238]     Train net output #0: loss = 0.264301 (* 1 = 0.264301 loss)
I0428 20:34:48.404430  4519 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:48.482414  4525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:48.639374  4519 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:48.643936  4519 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:48.646078  4519 solver.cpp:311] Iteration 1000, loss = 0.345333
I0428 20:34:48.646095  4519 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:48.751549  4526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:48.754406  4519 solver.cpp:398]     Test net output #0: accuracy = 0.8948
I0428 20:34:48.754441  4519 solver.cpp:398]     Test net output #1: loss = 0.263732 (* 1 = 0.263732 loss)
I0428 20:34:48.754446  4519 solver.cpp:316] Optimization Done.
I0428 20:34:48.754448  4519 caffe.cpp:259] Optimization Done.
