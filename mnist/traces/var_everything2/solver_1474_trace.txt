I0428 20:26:36.865707  2851 caffe.cpp:218] Using GPUs 0
I0428 20:26:36.897573  2851 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:37.393784  2851 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1474.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:37.393954  2851 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1474.prototxt
I0428 20:26:37.394742  2851 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:37.394774  2851 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:37.394878  2851 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:37.394949  2851 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:37.395051  2851 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:37.395074  2851 net.cpp:86] Creating Layer mnist
I0428 20:26:37.395081  2851 net.cpp:382] mnist -> data
I0428 20:26:37.395115  2851 net.cpp:382] mnist -> label
I0428 20:26:37.396234  2851 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:37.398624  2851 net.cpp:124] Setting up mnist
I0428 20:26:37.398655  2851 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:37.398663  2851 net.cpp:131] Top shape: 64 (64)
I0428 20:26:37.398666  2851 net.cpp:139] Memory required for data: 200960
I0428 20:26:37.398672  2851 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:37.398700  2851 net.cpp:86] Creating Layer conv0
I0428 20:26:37.398718  2851 net.cpp:408] conv0 <- data
I0428 20:26:37.398730  2851 net.cpp:382] conv0 -> conv0
I0428 20:26:37.637610  2851 net.cpp:124] Setting up conv0
I0428 20:26:37.637652  2851 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:37.637656  2851 net.cpp:139] Memory required for data: 14946560
I0428 20:26:37.637670  2851 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:37.637684  2851 net.cpp:86] Creating Layer pool0
I0428 20:26:37.637688  2851 net.cpp:408] pool0 <- conv0
I0428 20:26:37.637696  2851 net.cpp:382] pool0 -> pool0
I0428 20:26:37.637758  2851 net.cpp:124] Setting up pool0
I0428 20:26:37.637764  2851 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:37.637768  2851 net.cpp:139] Memory required for data: 18632960
I0428 20:26:37.637773  2851 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:37.637784  2851 net.cpp:86] Creating Layer conv1
I0428 20:26:37.637790  2851 net.cpp:408] conv1 <- pool0
I0428 20:26:37.637814  2851 net.cpp:382] conv1 -> conv1
I0428 20:26:37.640666  2851 net.cpp:124] Setting up conv1
I0428 20:26:37.640681  2851 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:37.640700  2851 net.cpp:139] Memory required for data: 18665728
I0428 20:26:37.640708  2851 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:37.640717  2851 net.cpp:86] Creating Layer pool1
I0428 20:26:37.640719  2851 net.cpp:408] pool1 <- conv1
I0428 20:26:37.640724  2851 net.cpp:382] pool1 -> pool1
I0428 20:26:37.640795  2851 net.cpp:124] Setting up pool1
I0428 20:26:37.640800  2851 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:37.640805  2851 net.cpp:139] Memory required for data: 18673920
I0428 20:26:37.640807  2851 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:37.640838  2851 net.cpp:86] Creating Layer ip1
I0428 20:26:37.640842  2851 net.cpp:408] ip1 <- pool1
I0428 20:26:37.640847  2851 net.cpp:382] ip1 -> ip1
I0428 20:26:37.640986  2851 net.cpp:124] Setting up ip1
I0428 20:26:37.640993  2851 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:37.640996  2851 net.cpp:139] Memory required for data: 18686720
I0428 20:26:37.641006  2851 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:37.641012  2851 net.cpp:86] Creating Layer relu1
I0428 20:26:37.641016  2851 net.cpp:408] relu1 <- ip1
I0428 20:26:37.641021  2851 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:37.641229  2851 net.cpp:124] Setting up relu1
I0428 20:26:37.641237  2851 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:37.641242  2851 net.cpp:139] Memory required for data: 18699520
I0428 20:26:37.641244  2851 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:37.641250  2851 net.cpp:86] Creating Layer ip2
I0428 20:26:37.641255  2851 net.cpp:408] ip2 <- ip1
I0428 20:26:37.641276  2851 net.cpp:382] ip2 -> ip2
I0428 20:26:37.641407  2851 net.cpp:124] Setting up ip2
I0428 20:26:37.641414  2851 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:37.641417  2851 net.cpp:139] Memory required for data: 18702080
I0428 20:26:37.641425  2851 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:37.641432  2851 net.cpp:86] Creating Layer relu2
I0428 20:26:37.641435  2851 net.cpp:408] relu2 <- ip2
I0428 20:26:37.641439  2851 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:37.642273  2851 net.cpp:124] Setting up relu2
I0428 20:26:37.642285  2851 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:37.642304  2851 net.cpp:139] Memory required for data: 18704640
I0428 20:26:37.642307  2851 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:37.642314  2851 net.cpp:86] Creating Layer ip3
I0428 20:26:37.642318  2851 net.cpp:408] ip3 <- ip2
I0428 20:26:37.642323  2851 net.cpp:382] ip3 -> ip3
I0428 20:26:37.642416  2851 net.cpp:124] Setting up ip3
I0428 20:26:37.642423  2851 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:37.642426  2851 net.cpp:139] Memory required for data: 18707200
I0428 20:26:37.642434  2851 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:37.642443  2851 net.cpp:86] Creating Layer relu3
I0428 20:26:37.642462  2851 net.cpp:408] relu3 <- ip3
I0428 20:26:37.642467  2851 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:37.642637  2851 net.cpp:124] Setting up relu3
I0428 20:26:37.642645  2851 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:37.642649  2851 net.cpp:139] Memory required for data: 18709760
I0428 20:26:37.642652  2851 layer_factory.hpp:77] Creating layer loss
I0428 20:26:37.642659  2851 net.cpp:86] Creating Layer loss
I0428 20:26:37.642663  2851 net.cpp:408] loss <- ip3
I0428 20:26:37.642668  2851 net.cpp:408] loss <- label
I0428 20:26:37.642673  2851 net.cpp:382] loss -> loss
I0428 20:26:37.642690  2851 layer_factory.hpp:77] Creating layer loss
I0428 20:26:37.642947  2851 net.cpp:124] Setting up loss
I0428 20:26:37.642956  2851 net.cpp:131] Top shape: (1)
I0428 20:26:37.642959  2851 net.cpp:134]     with loss weight 1
I0428 20:26:37.642974  2851 net.cpp:139] Memory required for data: 18709764
I0428 20:26:37.642978  2851 net.cpp:200] loss needs backward computation.
I0428 20:26:37.642982  2851 net.cpp:200] relu3 needs backward computation.
I0428 20:26:37.642984  2851 net.cpp:200] ip3 needs backward computation.
I0428 20:26:37.642987  2851 net.cpp:200] relu2 needs backward computation.
I0428 20:26:37.642990  2851 net.cpp:200] ip2 needs backward computation.
I0428 20:26:37.642993  2851 net.cpp:200] relu1 needs backward computation.
I0428 20:26:37.642995  2851 net.cpp:200] ip1 needs backward computation.
I0428 20:26:37.642998  2851 net.cpp:200] pool1 needs backward computation.
I0428 20:26:37.643002  2851 net.cpp:200] conv1 needs backward computation.
I0428 20:26:37.643004  2851 net.cpp:200] pool0 needs backward computation.
I0428 20:26:37.643007  2851 net.cpp:200] conv0 needs backward computation.
I0428 20:26:37.643012  2851 net.cpp:202] mnist does not need backward computation.
I0428 20:26:37.643014  2851 net.cpp:244] This network produces output loss
I0428 20:26:37.643023  2851 net.cpp:257] Network initialization done.
I0428 20:26:37.643363  2851 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1474.prototxt
I0428 20:26:37.643404  2851 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:37.643527  2851 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:37.643610  2851 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:37.643657  2851 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:37.643671  2851 net.cpp:86] Creating Layer mnist
I0428 20:26:37.643677  2851 net.cpp:382] mnist -> data
I0428 20:26:37.643685  2851 net.cpp:382] mnist -> label
I0428 20:26:37.643808  2851 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:37.645916  2851 net.cpp:124] Setting up mnist
I0428 20:26:37.645946  2851 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:37.645967  2851 net.cpp:131] Top shape: 100 (100)
I0428 20:26:37.645972  2851 net.cpp:139] Memory required for data: 314000
I0428 20:26:37.645975  2851 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:37.645982  2851 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:37.645985  2851 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:37.645992  2851 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:37.646018  2851 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:37.646117  2851 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:37.646126  2851 net.cpp:131] Top shape: 100 (100)
I0428 20:26:37.646131  2851 net.cpp:131] Top shape: 100 (100)
I0428 20:26:37.646133  2851 net.cpp:139] Memory required for data: 314800
I0428 20:26:37.646136  2851 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:37.646147  2851 net.cpp:86] Creating Layer conv0
I0428 20:26:37.646152  2851 net.cpp:408] conv0 <- data
I0428 20:26:37.646157  2851 net.cpp:382] conv0 -> conv0
I0428 20:26:37.647888  2851 net.cpp:124] Setting up conv0
I0428 20:26:37.647902  2851 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:37.647922  2851 net.cpp:139] Memory required for data: 23354800
I0428 20:26:37.647930  2851 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:37.647938  2851 net.cpp:86] Creating Layer pool0
I0428 20:26:37.647940  2851 net.cpp:408] pool0 <- conv0
I0428 20:26:37.647945  2851 net.cpp:382] pool0 -> pool0
I0428 20:26:37.647981  2851 net.cpp:124] Setting up pool0
I0428 20:26:37.647986  2851 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:37.647989  2851 net.cpp:139] Memory required for data: 29114800
I0428 20:26:37.647992  2851 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:37.648000  2851 net.cpp:86] Creating Layer conv1
I0428 20:26:37.648005  2851 net.cpp:408] conv1 <- pool0
I0428 20:26:37.648008  2851 net.cpp:382] conv1 -> conv1
I0428 20:26:37.649686  2851 net.cpp:124] Setting up conv1
I0428 20:26:37.649699  2851 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:37.649720  2851 net.cpp:139] Memory required for data: 29166000
I0428 20:26:37.649729  2851 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:37.649742  2851 net.cpp:86] Creating Layer pool1
I0428 20:26:37.649746  2851 net.cpp:408] pool1 <- conv1
I0428 20:26:37.649751  2851 net.cpp:382] pool1 -> pool1
I0428 20:26:37.649803  2851 net.cpp:124] Setting up pool1
I0428 20:26:37.649809  2851 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:37.649812  2851 net.cpp:139] Memory required for data: 29178800
I0428 20:26:37.649816  2851 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:37.649821  2851 net.cpp:86] Creating Layer ip1
I0428 20:26:37.649824  2851 net.cpp:408] ip1 <- pool1
I0428 20:26:37.649830  2851 net.cpp:382] ip1 -> ip1
I0428 20:26:37.649971  2851 net.cpp:124] Setting up ip1
I0428 20:26:37.649977  2851 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:37.649992  2851 net.cpp:139] Memory required for data: 29198800
I0428 20:26:37.649999  2851 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:37.650005  2851 net.cpp:86] Creating Layer relu1
I0428 20:26:37.650008  2851 net.cpp:408] relu1 <- ip1
I0428 20:26:37.650013  2851 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:37.650174  2851 net.cpp:124] Setting up relu1
I0428 20:26:37.650194  2851 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:37.650197  2851 net.cpp:139] Memory required for data: 29218800
I0428 20:26:37.650202  2851 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:37.650208  2851 net.cpp:86] Creating Layer ip2
I0428 20:26:37.650212  2851 net.cpp:408] ip2 <- ip1
I0428 20:26:37.650216  2851 net.cpp:382] ip2 -> ip2
I0428 20:26:37.650326  2851 net.cpp:124] Setting up ip2
I0428 20:26:37.650333  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.650336  2851 net.cpp:139] Memory required for data: 29222800
I0428 20:26:37.650341  2851 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:37.650346  2851 net.cpp:86] Creating Layer relu2
I0428 20:26:37.650357  2851 net.cpp:408] relu2 <- ip2
I0428 20:26:37.650362  2851 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:37.650534  2851 net.cpp:124] Setting up relu2
I0428 20:26:37.650543  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.650547  2851 net.cpp:139] Memory required for data: 29226800
I0428 20:26:37.650549  2851 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:37.650554  2851 net.cpp:86] Creating Layer ip3
I0428 20:26:37.650557  2851 net.cpp:408] ip3 <- ip2
I0428 20:26:37.650562  2851 net.cpp:382] ip3 -> ip3
I0428 20:26:37.650684  2851 net.cpp:124] Setting up ip3
I0428 20:26:37.650691  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.650694  2851 net.cpp:139] Memory required for data: 29230800
I0428 20:26:37.650718  2851 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:37.650723  2851 net.cpp:86] Creating Layer relu3
I0428 20:26:37.650727  2851 net.cpp:408] relu3 <- ip3
I0428 20:26:37.650730  2851 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:37.651566  2851 net.cpp:124] Setting up relu3
I0428 20:26:37.651577  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.651597  2851 net.cpp:139] Memory required for data: 29234800
I0428 20:26:37.651600  2851 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:37.651607  2851 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:37.651609  2851 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:37.651615  2851 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:37.651621  2851 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:37.651656  2851 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:37.651661  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.651665  2851 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:37.651674  2851 net.cpp:139] Memory required for data: 29242800
I0428 20:26:37.651677  2851 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:37.651684  2851 net.cpp:86] Creating Layer accuracy
I0428 20:26:37.651686  2851 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:37.651691  2851 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:37.651695  2851 net.cpp:382] accuracy -> accuracy
I0428 20:26:37.651702  2851 net.cpp:124] Setting up accuracy
I0428 20:26:37.651706  2851 net.cpp:131] Top shape: (1)
I0428 20:26:37.651710  2851 net.cpp:139] Memory required for data: 29242804
I0428 20:26:37.651712  2851 layer_factory.hpp:77] Creating layer loss
I0428 20:26:37.651716  2851 net.cpp:86] Creating Layer loss
I0428 20:26:37.651721  2851 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:37.651724  2851 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:37.651728  2851 net.cpp:382] loss -> loss
I0428 20:26:37.651734  2851 layer_factory.hpp:77] Creating layer loss
I0428 20:26:37.651960  2851 net.cpp:124] Setting up loss
I0428 20:26:37.651969  2851 net.cpp:131] Top shape: (1)
I0428 20:26:37.651973  2851 net.cpp:134]     with loss weight 1
I0428 20:26:37.651988  2851 net.cpp:139] Memory required for data: 29242808
I0428 20:26:37.651991  2851 net.cpp:200] loss needs backward computation.
I0428 20:26:37.651995  2851 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:37.652000  2851 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:37.652004  2851 net.cpp:200] relu3 needs backward computation.
I0428 20:26:37.652006  2851 net.cpp:200] ip3 needs backward computation.
I0428 20:26:37.652009  2851 net.cpp:200] relu2 needs backward computation.
I0428 20:26:37.652012  2851 net.cpp:200] ip2 needs backward computation.
I0428 20:26:37.652015  2851 net.cpp:200] relu1 needs backward computation.
I0428 20:26:37.652019  2851 net.cpp:200] ip1 needs backward computation.
I0428 20:26:37.652032  2851 net.cpp:200] pool1 needs backward computation.
I0428 20:26:37.652035  2851 net.cpp:200] conv1 needs backward computation.
I0428 20:26:37.652039  2851 net.cpp:200] pool0 needs backward computation.
I0428 20:26:37.652056  2851 net.cpp:200] conv0 needs backward computation.
I0428 20:26:37.652060  2851 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:37.652065  2851 net.cpp:202] mnist does not need backward computation.
I0428 20:26:37.652067  2851 net.cpp:244] This network produces output accuracy
I0428 20:26:37.652072  2851 net.cpp:244] This network produces output loss
I0428 20:26:37.652083  2851 net.cpp:257] Network initialization done.
I0428 20:26:37.652127  2851 solver.cpp:56] Solver scaffolding done.
I0428 20:26:37.652519  2851 caffe.cpp:248] Starting Optimization
I0428 20:26:37.652524  2851 solver.cpp:273] Solving LeNet
I0428 20:26:37.652528  2851 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:37.653496  2851 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:37.749722  2858 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:37.751159  2851 solver.cpp:398]     Test net output #0: accuracy = 0.1045
I0428 20:26:37.751195  2851 solver.cpp:398]     Test net output #1: loss = 2.29791 (* 1 = 2.29791 loss)
I0428 20:26:37.755816  2851 solver.cpp:219] Iteration 0 (-2.44466e-31 iter/s, 0.103244s/100 iters), loss = 2.31429
I0428 20:26:37.755856  2851 solver.cpp:238]     Train net output #0: loss = 2.31429 (* 1 = 2.31429 loss)
I0428 20:26:37.755867  2851 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:37.955842  2851 solver.cpp:219] Iteration 100 (500.032 iter/s, 0.199987s/100 iters), loss = 0.833263
I0428 20:26:37.955868  2851 solver.cpp:238]     Train net output #0: loss = 0.833263 (* 1 = 0.833263 loss)
I0428 20:26:37.955874  2851 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:38.155961  2851 solver.cpp:219] Iteration 200 (499.807 iter/s, 0.200077s/100 iters), loss = 0.278137
I0428 20:26:38.155989  2851 solver.cpp:238]     Train net output #0: loss = 0.278137 (* 1 = 0.278137 loss)
I0428 20:26:38.155997  2851 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:38.358852  2851 solver.cpp:219] Iteration 300 (492.984 iter/s, 0.202846s/100 iters), loss = 0.240339
I0428 20:26:38.358887  2851 solver.cpp:238]     Train net output #0: loss = 0.240339 (* 1 = 0.240339 loss)
I0428 20:26:38.358896  2851 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:38.572080  2851 solver.cpp:219] Iteration 400 (469.093 iter/s, 0.213177s/100 iters), loss = 0.368627
I0428 20:26:38.572114  2851 solver.cpp:238]     Train net output #0: loss = 0.368627 (* 1 = 0.368627 loss)
I0428 20:26:38.572124  2851 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:38.785770  2851 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:38.891885  2858 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:38.894642  2851 solver.cpp:398]     Test net output #0: accuracy = 0.9312
I0428 20:26:38.894670  2851 solver.cpp:398]     Test net output #1: loss = 0.219262 (* 1 = 0.219262 loss)
I0428 20:26:38.896605  2851 solver.cpp:219] Iteration 500 (308.195 iter/s, 0.32447s/100 iters), loss = 0.288237
I0428 20:26:38.896633  2851 solver.cpp:238]     Train net output #0: loss = 0.288237 (* 1 = 0.288237 loss)
I0428 20:26:38.896661  2851 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:39.109750  2851 solver.cpp:219] Iteration 600 (469.269 iter/s, 0.213097s/100 iters), loss = 0.135964
I0428 20:26:39.109794  2851 solver.cpp:238]     Train net output #0: loss = 0.135964 (* 1 = 0.135964 loss)
I0428 20:26:39.109807  2851 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:39.325295  2851 solver.cpp:219] Iteration 700 (464.073 iter/s, 0.215484s/100 iters), loss = 0.253977
I0428 20:26:39.325343  2851 solver.cpp:238]     Train net output #0: loss = 0.253977 (* 1 = 0.253977 loss)
I0428 20:26:39.325356  2851 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:39.535006  2851 solver.cpp:219] Iteration 800 (477.007 iter/s, 0.20964s/100 iters), loss = 0.316466
I0428 20:26:39.535068  2851 solver.cpp:238]     Train net output #0: loss = 0.316466 (* 1 = 0.316466 loss)
I0428 20:26:39.535081  2851 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:39.752619  2851 solver.cpp:219] Iteration 900 (459.691 iter/s, 0.217538s/100 iters), loss = 0.274872
I0428 20:26:39.752663  2851 solver.cpp:238]     Train net output #0: loss = 0.274872 (* 1 = 0.274872 loss)
I0428 20:26:39.752674  2851 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:39.822134  2857 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:39.960281  2851 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:39.961874  2851 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:39.962899  2851 solver.cpp:311] Iteration 1000, loss = 0.26928
I0428 20:26:39.962918  2851 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:40.058126  2858 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:40.060631  2851 solver.cpp:398]     Test net output #0: accuracy = 0.9577
I0428 20:26:40.060654  2851 solver.cpp:398]     Test net output #1: loss = 0.132345 (* 1 = 0.132345 loss)
I0428 20:26:40.060662  2851 solver.cpp:316] Optimization Done.
I0428 20:26:40.060665  2851 caffe.cpp:259] Optimization Done.
