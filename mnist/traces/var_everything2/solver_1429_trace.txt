I0428 20:23:55.473301  2333 caffe.cpp:218] Using GPUs 0
I0428 20:23:55.510951  2333 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:56.026008  2333 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1429.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:56.026154  2333 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1429.prototxt
I0428 20:23:56.026576  2333 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:56.026595  2333 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:56.026700  2333 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:56.026779  2333 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:56.026877  2333 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:56.026901  2333 net.cpp:86] Creating Layer mnist
I0428 20:23:56.026911  2333 net.cpp:382] mnist -> data
I0428 20:23:56.026932  2333 net.cpp:382] mnist -> label
I0428 20:23:56.028018  2333 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:56.030457  2333 net.cpp:124] Setting up mnist
I0428 20:23:56.030478  2333 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:56.030484  2333 net.cpp:131] Top shape: 64 (64)
I0428 20:23:56.030488  2333 net.cpp:139] Memory required for data: 200960
I0428 20:23:56.030495  2333 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:56.030513  2333 net.cpp:86] Creating Layer conv0
I0428 20:23:56.030534  2333 net.cpp:408] conv0 <- data
I0428 20:23:56.030547  2333 net.cpp:382] conv0 -> conv0
I0428 20:23:56.323544  2333 net.cpp:124] Setting up conv0
I0428 20:23:56.323572  2333 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:56.323577  2333 net.cpp:139] Memory required for data: 7573760
I0428 20:23:56.323596  2333 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:56.323609  2333 net.cpp:86] Creating Layer pool0
I0428 20:23:56.323614  2333 net.cpp:408] pool0 <- conv0
I0428 20:23:56.323621  2333 net.cpp:382] pool0 -> pool0
I0428 20:23:56.323676  2333 net.cpp:124] Setting up pool0
I0428 20:23:56.323685  2333 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:56.323689  2333 net.cpp:139] Memory required for data: 9416960
I0428 20:23:56.323693  2333 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:56.323705  2333 net.cpp:86] Creating Layer conv1
I0428 20:23:56.323712  2333 net.cpp:408] conv1 <- pool0
I0428 20:23:56.323719  2333 net.cpp:382] conv1 -> conv1
I0428 20:23:56.327452  2333 net.cpp:124] Setting up conv1
I0428 20:23:56.327469  2333 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:56.327473  2333 net.cpp:139] Memory required for data: 11055360
I0428 20:23:56.327483  2333 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:56.327491  2333 net.cpp:86] Creating Layer pool1
I0428 20:23:56.327494  2333 net.cpp:408] pool1 <- conv1
I0428 20:23:56.327500  2333 net.cpp:382] pool1 -> pool1
I0428 20:23:56.327539  2333 net.cpp:124] Setting up pool1
I0428 20:23:56.327548  2333 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:56.327550  2333 net.cpp:139] Memory required for data: 11464960
I0428 20:23:56.327554  2333 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:56.327566  2333 net.cpp:86] Creating Layer ip1
I0428 20:23:56.327571  2333 net.cpp:408] ip1 <- pool1
I0428 20:23:56.327576  2333 net.cpp:382] ip1 -> ip1
I0428 20:23:56.327931  2333 net.cpp:124] Setting up ip1
I0428 20:23:56.327939  2333 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:56.327942  2333 net.cpp:139] Memory required for data: 11471360
I0428 20:23:56.327950  2333 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:56.327956  2333 net.cpp:86] Creating Layer relu1
I0428 20:23:56.327960  2333 net.cpp:408] relu1 <- ip1
I0428 20:23:56.327963  2333 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:56.328142  2333 net.cpp:124] Setting up relu1
I0428 20:23:56.328150  2333 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:56.328155  2333 net.cpp:139] Memory required for data: 11477760
I0428 20:23:56.328157  2333 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:56.328164  2333 net.cpp:86] Creating Layer ip2
I0428 20:23:56.328167  2333 net.cpp:408] ip2 <- ip1
I0428 20:23:56.328172  2333 net.cpp:382] ip2 -> ip2
I0428 20:23:56.328277  2333 net.cpp:124] Setting up ip2
I0428 20:23:56.328285  2333 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:56.328289  2333 net.cpp:139] Memory required for data: 11484160
I0428 20:23:56.328294  2333 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:56.328302  2333 net.cpp:86] Creating Layer relu2
I0428 20:23:56.328306  2333 net.cpp:408] relu2 <- ip2
I0428 20:23:56.328310  2333 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:56.329098  2333 net.cpp:124] Setting up relu2
I0428 20:23:56.329113  2333 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:56.329116  2333 net.cpp:139] Memory required for data: 11490560
I0428 20:23:56.329120  2333 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:56.329128  2333 net.cpp:86] Creating Layer ip3
I0428 20:23:56.329131  2333 net.cpp:408] ip3 <- ip2
I0428 20:23:56.329138  2333 net.cpp:382] ip3 -> ip3
I0428 20:23:56.329243  2333 net.cpp:124] Setting up ip3
I0428 20:23:56.329252  2333 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:56.329255  2333 net.cpp:139] Memory required for data: 11493120
I0428 20:23:56.329263  2333 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:56.329269  2333 net.cpp:86] Creating Layer relu3
I0428 20:23:56.329272  2333 net.cpp:408] relu3 <- ip3
I0428 20:23:56.329277  2333 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:56.329458  2333 net.cpp:124] Setting up relu3
I0428 20:23:56.329468  2333 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:56.329471  2333 net.cpp:139] Memory required for data: 11495680
I0428 20:23:56.329475  2333 layer_factory.hpp:77] Creating layer loss
I0428 20:23:56.329481  2333 net.cpp:86] Creating Layer loss
I0428 20:23:56.329484  2333 net.cpp:408] loss <- ip3
I0428 20:23:56.329488  2333 net.cpp:408] loss <- label
I0428 20:23:56.329494  2333 net.cpp:382] loss -> loss
I0428 20:23:56.329512  2333 layer_factory.hpp:77] Creating layer loss
I0428 20:23:56.329756  2333 net.cpp:124] Setting up loss
I0428 20:23:56.329766  2333 net.cpp:131] Top shape: (1)
I0428 20:23:56.329771  2333 net.cpp:134]     with loss weight 1
I0428 20:23:56.329785  2333 net.cpp:139] Memory required for data: 11495684
I0428 20:23:56.329789  2333 net.cpp:200] loss needs backward computation.
I0428 20:23:56.329793  2333 net.cpp:200] relu3 needs backward computation.
I0428 20:23:56.329797  2333 net.cpp:200] ip3 needs backward computation.
I0428 20:23:56.329799  2333 net.cpp:200] relu2 needs backward computation.
I0428 20:23:56.329802  2333 net.cpp:200] ip2 needs backward computation.
I0428 20:23:56.329805  2333 net.cpp:200] relu1 needs backward computation.
I0428 20:23:56.329808  2333 net.cpp:200] ip1 needs backward computation.
I0428 20:23:56.329812  2333 net.cpp:200] pool1 needs backward computation.
I0428 20:23:56.329815  2333 net.cpp:200] conv1 needs backward computation.
I0428 20:23:56.329818  2333 net.cpp:200] pool0 needs backward computation.
I0428 20:23:56.329823  2333 net.cpp:200] conv0 needs backward computation.
I0428 20:23:56.329825  2333 net.cpp:202] mnist does not need backward computation.
I0428 20:23:56.329829  2333 net.cpp:244] This network produces output loss
I0428 20:23:56.329838  2333 net.cpp:257] Network initialization done.
I0428 20:23:56.330193  2333 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1429.prototxt
I0428 20:23:56.330222  2333 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:56.330320  2333 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:56.330405  2333 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:56.330452  2333 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:56.330466  2333 net.cpp:86] Creating Layer mnist
I0428 20:23:56.330471  2333 net.cpp:382] mnist -> data
I0428 20:23:56.330479  2333 net.cpp:382] mnist -> label
I0428 20:23:56.330570  2333 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:56.331719  2333 net.cpp:124] Setting up mnist
I0428 20:23:56.331734  2333 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:56.331739  2333 net.cpp:131] Top shape: 100 (100)
I0428 20:23:56.331743  2333 net.cpp:139] Memory required for data: 314000
I0428 20:23:56.331748  2333 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:56.331769  2333 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:56.331773  2333 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:56.331779  2333 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:56.331786  2333 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:56.331835  2333 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:56.331841  2333 net.cpp:131] Top shape: 100 (100)
I0428 20:23:56.331845  2333 net.cpp:131] Top shape: 100 (100)
I0428 20:23:56.331848  2333 net.cpp:139] Memory required for data: 314800
I0428 20:23:56.331852  2333 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:56.331861  2333 net.cpp:86] Creating Layer conv0
I0428 20:23:56.331864  2333 net.cpp:408] conv0 <- data
I0428 20:23:56.331869  2333 net.cpp:382] conv0 -> conv0
I0428 20:23:56.333653  2333 net.cpp:124] Setting up conv0
I0428 20:23:56.333669  2333 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:56.333673  2333 net.cpp:139] Memory required for data: 11834800
I0428 20:23:56.333683  2333 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:56.333690  2333 net.cpp:86] Creating Layer pool0
I0428 20:23:56.333694  2333 net.cpp:408] pool0 <- conv0
I0428 20:23:56.333699  2333 net.cpp:382] pool0 -> pool0
I0428 20:23:56.333751  2333 net.cpp:124] Setting up pool0
I0428 20:23:56.333760  2333 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:56.333763  2333 net.cpp:139] Memory required for data: 14714800
I0428 20:23:56.333766  2333 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:56.333775  2333 net.cpp:86] Creating Layer conv1
I0428 20:23:56.333780  2333 net.cpp:408] conv1 <- pool0
I0428 20:23:56.333786  2333 net.cpp:382] conv1 -> conv1
I0428 20:23:56.337047  2333 net.cpp:124] Setting up conv1
I0428 20:23:56.337064  2333 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:56.337069  2333 net.cpp:139] Memory required for data: 17274800
I0428 20:23:56.337079  2333 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:56.337085  2333 net.cpp:86] Creating Layer pool1
I0428 20:23:56.337088  2333 net.cpp:408] pool1 <- conv1
I0428 20:23:56.337095  2333 net.cpp:382] pool1 -> pool1
I0428 20:23:56.337139  2333 net.cpp:124] Setting up pool1
I0428 20:23:56.337146  2333 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:56.337148  2333 net.cpp:139] Memory required for data: 17914800
I0428 20:23:56.337152  2333 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:56.337157  2333 net.cpp:86] Creating Layer ip1
I0428 20:23:56.337160  2333 net.cpp:408] ip1 <- pool1
I0428 20:23:56.337165  2333 net.cpp:382] ip1 -> ip1
I0428 20:23:56.337512  2333 net.cpp:124] Setting up ip1
I0428 20:23:56.337532  2333 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:56.337537  2333 net.cpp:139] Memory required for data: 17924800
I0428 20:23:56.337544  2333 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:56.337549  2333 net.cpp:86] Creating Layer relu1
I0428 20:23:56.337553  2333 net.cpp:408] relu1 <- ip1
I0428 20:23:56.337558  2333 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:56.337723  2333 net.cpp:124] Setting up relu1
I0428 20:23:56.337731  2333 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:56.337743  2333 net.cpp:139] Memory required for data: 17934800
I0428 20:23:56.337745  2333 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:56.337752  2333 net.cpp:86] Creating Layer ip2
I0428 20:23:56.337756  2333 net.cpp:408] ip2 <- ip1
I0428 20:23:56.337761  2333 net.cpp:382] ip2 -> ip2
I0428 20:23:56.337868  2333 net.cpp:124] Setting up ip2
I0428 20:23:56.337875  2333 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:56.337879  2333 net.cpp:139] Memory required for data: 17944800
I0428 20:23:56.337884  2333 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:56.337889  2333 net.cpp:86] Creating Layer relu2
I0428 20:23:56.337893  2333 net.cpp:408] relu2 <- ip2
I0428 20:23:56.337898  2333 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:56.338096  2333 net.cpp:124] Setting up relu2
I0428 20:23:56.338105  2333 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:56.338109  2333 net.cpp:139] Memory required for data: 17954800
I0428 20:23:56.338111  2333 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:56.338117  2333 net.cpp:86] Creating Layer ip3
I0428 20:23:56.338120  2333 net.cpp:408] ip3 <- ip2
I0428 20:23:56.338125  2333 net.cpp:382] ip3 -> ip3
I0428 20:23:56.338243  2333 net.cpp:124] Setting up ip3
I0428 20:23:56.338250  2333 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:56.338253  2333 net.cpp:139] Memory required for data: 17958800
I0428 20:23:56.338261  2333 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:56.338266  2333 net.cpp:86] Creating Layer relu3
I0428 20:23:56.338269  2333 net.cpp:408] relu3 <- ip3
I0428 20:23:56.338274  2333 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:56.339076  2333 net.cpp:124] Setting up relu3
I0428 20:23:56.339088  2333 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:56.339092  2333 net.cpp:139] Memory required for data: 17962800
I0428 20:23:56.339097  2333 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:56.339108  2333 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:56.339112  2333 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:56.339118  2333 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:56.339124  2333 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:56.339162  2333 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:56.339167  2333 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:56.339171  2333 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:56.339180  2333 net.cpp:139] Memory required for data: 17970800
I0428 20:23:56.339184  2333 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:56.339190  2333 net.cpp:86] Creating Layer accuracy
I0428 20:23:56.339192  2333 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:56.339196  2333 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:56.339201  2333 net.cpp:382] accuracy -> accuracy
I0428 20:23:56.339215  2333 net.cpp:124] Setting up accuracy
I0428 20:23:56.339220  2333 net.cpp:131] Top shape: (1)
I0428 20:23:56.339228  2333 net.cpp:139] Memory required for data: 17970804
I0428 20:23:56.339231  2333 layer_factory.hpp:77] Creating layer loss
I0428 20:23:56.339236  2333 net.cpp:86] Creating Layer loss
I0428 20:23:56.339239  2333 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:56.339243  2333 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:56.339248  2333 net.cpp:382] loss -> loss
I0428 20:23:56.339254  2333 layer_factory.hpp:77] Creating layer loss
I0428 20:23:56.339493  2333 net.cpp:124] Setting up loss
I0428 20:23:56.339504  2333 net.cpp:131] Top shape: (1)
I0428 20:23:56.339507  2333 net.cpp:134]     with loss weight 1
I0428 20:23:56.339524  2333 net.cpp:139] Memory required for data: 17970808
I0428 20:23:56.339529  2333 net.cpp:200] loss needs backward computation.
I0428 20:23:56.339540  2333 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:56.339543  2333 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:56.339547  2333 net.cpp:200] relu3 needs backward computation.
I0428 20:23:56.339555  2333 net.cpp:200] ip3 needs backward computation.
I0428 20:23:56.339558  2333 net.cpp:200] relu2 needs backward computation.
I0428 20:23:56.339561  2333 net.cpp:200] ip2 needs backward computation.
I0428 20:23:56.339565  2333 net.cpp:200] relu1 needs backward computation.
I0428 20:23:56.339567  2333 net.cpp:200] ip1 needs backward computation.
I0428 20:23:56.339570  2333 net.cpp:200] pool1 needs backward computation.
I0428 20:23:56.339573  2333 net.cpp:200] conv1 needs backward computation.
I0428 20:23:56.339577  2333 net.cpp:200] pool0 needs backward computation.
I0428 20:23:56.339581  2333 net.cpp:200] conv0 needs backward computation.
I0428 20:23:56.339584  2333 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:56.339594  2333 net.cpp:202] mnist does not need backward computation.
I0428 20:23:56.339597  2333 net.cpp:244] This network produces output accuracy
I0428 20:23:56.339601  2333 net.cpp:244] This network produces output loss
I0428 20:23:56.339612  2333 net.cpp:257] Network initialization done.
I0428 20:23:56.339655  2333 solver.cpp:56] Solver scaffolding done.
I0428 20:23:56.340001  2333 caffe.cpp:248] Starting Optimization
I0428 20:23:56.340008  2333 solver.cpp:273] Solving LeNet
I0428 20:23:56.340013  2333 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:56.340879  2333 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:56.352283  2333 blocking_queue.cpp:49] Waiting for data
I0428 20:23:56.431797  2340 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:56.433187  2333 solver.cpp:398]     Test net output #0: accuracy = 0.086
I0428 20:23:56.433254  2333 solver.cpp:398]     Test net output #1: loss = 2.3171 (* 1 = 2.3171 loss)
I0428 20:23:56.438830  2333 solver.cpp:219] Iteration 0 (0 iter/s, 0.0987872s/100 iters), loss = 2.30642
I0428 20:23:56.438851  2333 solver.cpp:238]     Train net output #0: loss = 2.30642 (* 1 = 2.30642 loss)
I0428 20:23:56.438863  2333 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:56.665709  2333 solver.cpp:219] Iteration 100 (440.842 iter/s, 0.226839s/100 iters), loss = 1.37126
I0428 20:23:56.665738  2333 solver.cpp:238]     Train net output #0: loss = 1.37126 (* 1 = 1.37126 loss)
I0428 20:23:56.665745  2333 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:56.878448  2333 solver.cpp:219] Iteration 200 (470.159 iter/s, 0.212694s/100 iters), loss = 1.03538
I0428 20:23:56.878475  2333 solver.cpp:238]     Train net output #0: loss = 1.03538 (* 1 = 1.03538 loss)
I0428 20:23:56.878482  2333 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:57.101167  2333 solver.cpp:219] Iteration 300 (449.091 iter/s, 0.222672s/100 iters), loss = 1.02656
I0428 20:23:57.101208  2333 solver.cpp:238]     Train net output #0: loss = 1.02656 (* 1 = 1.02656 loss)
I0428 20:23:57.101219  2333 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:57.327347  2333 solver.cpp:219] Iteration 400 (442.234 iter/s, 0.226125s/100 iters), loss = 1.27967
I0428 20:23:57.327373  2333 solver.cpp:238]     Train net output #0: loss = 1.27967 (* 1 = 1.27967 loss)
I0428 20:23:57.327380  2333 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:57.558861  2333 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:57.647025  2340 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:57.650209  2333 solver.cpp:398]     Test net output #0: accuracy = 0.6916
I0428 20:23:57.650233  2333 solver.cpp:398]     Test net output #1: loss = 0.975747 (* 1 = 0.975747 loss)
I0428 20:23:57.652168  2333 solver.cpp:219] Iteration 500 (307.906 iter/s, 0.324774s/100 iters), loss = 1.1575
I0428 20:23:57.652206  2333 solver.cpp:238]     Train net output #0: loss = 1.1575 (* 1 = 1.1575 loss)
I0428 20:23:57.652212  2333 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:57.870110  2333 solver.cpp:219] Iteration 600 (458.954 iter/s, 0.217887s/100 iters), loss = 0.435319
I0428 20:23:57.870136  2333 solver.cpp:238]     Train net output #0: loss = 0.435319 (* 1 = 0.435319 loss)
I0428 20:23:57.870158  2333 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:58.101410  2333 solver.cpp:219] Iteration 700 (432.415 iter/s, 0.231259s/100 iters), loss = 0.884091
I0428 20:23:58.101438  2333 solver.cpp:238]     Train net output #0: loss = 0.884091 (* 1 = 0.884091 loss)
I0428 20:23:58.101444  2333 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:58.334393  2333 solver.cpp:219] Iteration 800 (429.3 iter/s, 0.232937s/100 iters), loss = 0.716244
I0428 20:23:58.334425  2333 solver.cpp:238]     Train net output #0: loss = 0.716244 (* 1 = 0.716244 loss)
I0428 20:23:58.334434  2333 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:58.569468  2333 solver.cpp:219] Iteration 900 (425.486 iter/s, 0.235025s/100 iters), loss = 0.486818
I0428 20:23:58.569499  2333 solver.cpp:238]     Train net output #0: loss = 0.486818 (* 1 = 0.486818 loss)
I0428 20:23:58.569506  2333 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:58.646194  2339 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:58.802145  2333 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:58.807229  2333 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:58.809382  2333 solver.cpp:311] Iteration 1000, loss = 0.638095
I0428 20:23:58.809403  2333 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:58.898499  2340 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:58.901818  2333 solver.cpp:398]     Test net output #0: accuracy = 0.8856
I0428 20:23:58.901841  2333 solver.cpp:398]     Test net output #1: loss = 0.51347 (* 1 = 0.51347 loss)
I0428 20:23:58.901847  2333 solver.cpp:316] Optimization Done.
I0428 20:23:58.901860  2333 caffe.cpp:259] Optimization Done.
