I0428 19:39:28.196192 24307 caffe.cpp:218] Using GPUs 0
I0428 19:39:28.236071 24307 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:28.753489 24307 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test305.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:28.753660 24307 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test305.prototxt
I0428 19:39:28.754084 24307 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:28.754111 24307 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:28.754228 24307 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:28.754348 24307 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:28.754480 24307 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:28.754513 24307 net.cpp:86] Creating Layer mnist
I0428 19:39:28.754528 24307 net.cpp:382] mnist -> data
I0428 19:39:28.754559 24307 net.cpp:382] mnist -> label
I0428 19:39:28.755834 24307 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:28.758303 24307 net.cpp:124] Setting up mnist
I0428 19:39:28.758324 24307 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:28.758337 24307 net.cpp:131] Top shape: 64 (64)
I0428 19:39:28.758343 24307 net.cpp:139] Memory required for data: 200960
I0428 19:39:28.758353 24307 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:28.758375 24307 net.cpp:86] Creating Layer conv0
I0428 19:39:28.758399 24307 net.cpp:408] conv0 <- data
I0428 19:39:28.758421 24307 net.cpp:382] conv0 -> conv0
I0428 19:39:29.027966 24307 net.cpp:124] Setting up conv0
I0428 19:39:29.027994 24307 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:29.027999 24307 net.cpp:139] Memory required for data: 495872
I0428 19:39:29.028035 24307 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:29.028053 24307 net.cpp:86] Creating Layer pool0
I0428 19:39:29.028059 24307 net.cpp:408] pool0 <- conv0
I0428 19:39:29.028069 24307 net.cpp:382] pool0 -> pool0
I0428 19:39:29.028129 24307 net.cpp:124] Setting up pool0
I0428 19:39:29.028137 24307 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:29.028142 24307 net.cpp:139] Memory required for data: 569600
I0428 19:39:29.028148 24307 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:29.028164 24307 net.cpp:86] Creating Layer conv1
I0428 19:39:29.028172 24307 net.cpp:408] conv1 <- pool0
I0428 19:39:29.028179 24307 net.cpp:382] conv1 -> conv1
I0428 19:39:29.029947 24307 net.cpp:124] Setting up conv1
I0428 19:39:29.029963 24307 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:29.029968 24307 net.cpp:139] Memory required for data: 602368
I0428 19:39:29.029981 24307 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:29.029991 24307 net.cpp:86] Creating Layer pool1
I0428 19:39:29.029997 24307 net.cpp:408] pool1 <- conv1
I0428 19:39:29.030005 24307 net.cpp:382] pool1 -> pool1
I0428 19:39:29.030050 24307 net.cpp:124] Setting up pool1
I0428 19:39:29.030058 24307 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:29.030062 24307 net.cpp:139] Memory required for data: 610560
I0428 19:39:29.030068 24307 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:29.030078 24307 net.cpp:86] Creating Layer ip1
I0428 19:39:29.030084 24307 net.cpp:408] ip1 <- pool1
I0428 19:39:29.030092 24307 net.cpp:382] ip1 -> ip1
I0428 19:39:29.030997 24307 net.cpp:124] Setting up ip1
I0428 19:39:29.031010 24307 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:29.031015 24307 net.cpp:139] Memory required for data: 623360
I0428 19:39:29.031028 24307 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:29.031038 24307 net.cpp:86] Creating Layer relu1
I0428 19:39:29.031042 24307 net.cpp:408] relu1 <- ip1
I0428 19:39:29.031050 24307 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:29.031224 24307 net.cpp:124] Setting up relu1
I0428 19:39:29.031234 24307 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:29.031239 24307 net.cpp:139] Memory required for data: 636160
I0428 19:39:29.031244 24307 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:29.031253 24307 net.cpp:86] Creating Layer ip2
I0428 19:39:29.031258 24307 net.cpp:408] ip2 <- ip1
I0428 19:39:29.031267 24307 net.cpp:382] ip2 -> ip2
I0428 19:39:29.031366 24307 net.cpp:124] Setting up ip2
I0428 19:39:29.031375 24307 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:29.031380 24307 net.cpp:139] Memory required for data: 638720
I0428 19:39:29.031388 24307 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:29.031414 24307 net.cpp:86] Creating Layer relu2
I0428 19:39:29.031422 24307 net.cpp:408] relu2 <- ip2
I0428 19:39:29.031430 24307 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:29.032163 24307 net.cpp:124] Setting up relu2
I0428 19:39:29.032192 24307 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:29.032198 24307 net.cpp:139] Memory required for data: 641280
I0428 19:39:29.032204 24307 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:29.032213 24307 net.cpp:86] Creating Layer ip3
I0428 19:39:29.032219 24307 net.cpp:408] ip3 <- ip2
I0428 19:39:29.032228 24307 net.cpp:382] ip3 -> ip3
I0428 19:39:29.032330 24307 net.cpp:124] Setting up ip3
I0428 19:39:29.032341 24307 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:29.032346 24307 net.cpp:139] Memory required for data: 643840
I0428 19:39:29.032357 24307 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:29.032366 24307 net.cpp:86] Creating Layer relu3
I0428 19:39:29.032372 24307 net.cpp:408] relu3 <- ip3
I0428 19:39:29.032380 24307 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:29.032559 24307 net.cpp:124] Setting up relu3
I0428 19:39:29.032572 24307 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:29.032577 24307 net.cpp:139] Memory required for data: 646400
I0428 19:39:29.032582 24307 layer_factory.hpp:77] Creating layer loss
I0428 19:39:29.032590 24307 net.cpp:86] Creating Layer loss
I0428 19:39:29.032595 24307 net.cpp:408] loss <- ip3
I0428 19:39:29.032603 24307 net.cpp:408] loss <- label
I0428 19:39:29.032610 24307 net.cpp:382] loss -> loss
I0428 19:39:29.032632 24307 layer_factory.hpp:77] Creating layer loss
I0428 19:39:29.032943 24307 net.cpp:124] Setting up loss
I0428 19:39:29.032958 24307 net.cpp:131] Top shape: (1)
I0428 19:39:29.032963 24307 net.cpp:134]     with loss weight 1
I0428 19:39:29.032984 24307 net.cpp:139] Memory required for data: 646404
I0428 19:39:29.032991 24307 net.cpp:200] loss needs backward computation.
I0428 19:39:29.032997 24307 net.cpp:200] relu3 needs backward computation.
I0428 19:39:29.033004 24307 net.cpp:200] ip3 needs backward computation.
I0428 19:39:29.033008 24307 net.cpp:200] relu2 needs backward computation.
I0428 19:39:29.033015 24307 net.cpp:200] ip2 needs backward computation.
I0428 19:39:29.033020 24307 net.cpp:200] relu1 needs backward computation.
I0428 19:39:29.033025 24307 net.cpp:200] ip1 needs backward computation.
I0428 19:39:29.033030 24307 net.cpp:200] pool1 needs backward computation.
I0428 19:39:29.033035 24307 net.cpp:200] conv1 needs backward computation.
I0428 19:39:29.033041 24307 net.cpp:200] pool0 needs backward computation.
I0428 19:39:29.033046 24307 net.cpp:200] conv0 needs backward computation.
I0428 19:39:29.033052 24307 net.cpp:202] mnist does not need backward computation.
I0428 19:39:29.033058 24307 net.cpp:244] This network produces output loss
I0428 19:39:29.033073 24307 net.cpp:257] Network initialization done.
I0428 19:39:29.033459 24307 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test305.prototxt
I0428 19:39:29.033494 24307 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:29.033592 24307 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:29.033715 24307 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:29.033772 24307 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:29.033789 24307 net.cpp:86] Creating Layer mnist
I0428 19:39:29.033799 24307 net.cpp:382] mnist -> data
I0428 19:39:29.033812 24307 net.cpp:382] mnist -> label
I0428 19:39:29.033931 24307 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:29.036108 24307 net.cpp:124] Setting up mnist
I0428 19:39:29.036152 24307 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:29.036160 24307 net.cpp:131] Top shape: 100 (100)
I0428 19:39:29.036164 24307 net.cpp:139] Memory required for data: 314000
I0428 19:39:29.036170 24307 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:29.036180 24307 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:29.036185 24307 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:29.036195 24307 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:29.036206 24307 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:29.036298 24307 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:29.036308 24307 net.cpp:131] Top shape: 100 (100)
I0428 19:39:29.036314 24307 net.cpp:131] Top shape: 100 (100)
I0428 19:39:29.036319 24307 net.cpp:139] Memory required for data: 314800
I0428 19:39:29.036324 24307 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:29.036339 24307 net.cpp:86] Creating Layer conv0
I0428 19:39:29.036345 24307 net.cpp:408] conv0 <- data
I0428 19:39:29.036355 24307 net.cpp:382] conv0 -> conv0
I0428 19:39:29.037994 24307 net.cpp:124] Setting up conv0
I0428 19:39:29.038010 24307 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:29.038017 24307 net.cpp:139] Memory required for data: 775600
I0428 19:39:29.038030 24307 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:29.038040 24307 net.cpp:86] Creating Layer pool0
I0428 19:39:29.038048 24307 net.cpp:408] pool0 <- conv0
I0428 19:39:29.038058 24307 net.cpp:382] pool0 -> pool0
I0428 19:39:29.038102 24307 net.cpp:124] Setting up pool0
I0428 19:39:29.038110 24307 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:29.038115 24307 net.cpp:139] Memory required for data: 890800
I0428 19:39:29.038120 24307 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:29.038136 24307 net.cpp:86] Creating Layer conv1
I0428 19:39:29.038142 24307 net.cpp:408] conv1 <- pool0
I0428 19:39:29.038151 24307 net.cpp:382] conv1 -> conv1
I0428 19:39:29.039666 24307 net.cpp:124] Setting up conv1
I0428 19:39:29.039681 24307 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:29.039687 24307 net.cpp:139] Memory required for data: 942000
I0428 19:39:29.039702 24307 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:29.039713 24307 net.cpp:86] Creating Layer pool1
I0428 19:39:29.039721 24307 net.cpp:408] pool1 <- conv1
I0428 19:39:29.039729 24307 net.cpp:382] pool1 -> pool1
I0428 19:39:29.039774 24307 net.cpp:124] Setting up pool1
I0428 19:39:29.039783 24307 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:29.039788 24307 net.cpp:139] Memory required for data: 954800
I0428 19:39:29.039793 24307 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:29.039803 24307 net.cpp:86] Creating Layer ip1
I0428 19:39:29.039808 24307 net.cpp:408] ip1 <- pool1
I0428 19:39:29.039819 24307 net.cpp:382] ip1 -> ip1
I0428 19:39:29.039938 24307 net.cpp:124] Setting up ip1
I0428 19:39:29.039947 24307 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:29.039963 24307 net.cpp:139] Memory required for data: 974800
I0428 19:39:29.039976 24307 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:29.039988 24307 net.cpp:86] Creating Layer relu1
I0428 19:39:29.039994 24307 net.cpp:408] relu1 <- ip1
I0428 19:39:29.040002 24307 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:29.040191 24307 net.cpp:124] Setting up relu1
I0428 19:39:29.040202 24307 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:29.040207 24307 net.cpp:139] Memory required for data: 994800
I0428 19:39:29.040212 24307 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:29.040225 24307 net.cpp:86] Creating Layer ip2
I0428 19:39:29.040231 24307 net.cpp:408] ip2 <- ip1
I0428 19:39:29.040241 24307 net.cpp:382] ip2 -> ip2
I0428 19:39:29.040362 24307 net.cpp:124] Setting up ip2
I0428 19:39:29.040371 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.040376 24307 net.cpp:139] Memory required for data: 998800
I0428 19:39:29.040385 24307 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:29.040395 24307 net.cpp:86] Creating Layer relu2
I0428 19:39:29.040401 24307 net.cpp:408] relu2 <- ip2
I0428 19:39:29.040410 24307 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:29.040663 24307 net.cpp:124] Setting up relu2
I0428 19:39:29.040673 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.040678 24307 net.cpp:139] Memory required for data: 1002800
I0428 19:39:29.040683 24307 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:29.040694 24307 net.cpp:86] Creating Layer ip3
I0428 19:39:29.040700 24307 net.cpp:408] ip3 <- ip2
I0428 19:39:29.040709 24307 net.cpp:382] ip3 -> ip3
I0428 19:39:29.040834 24307 net.cpp:124] Setting up ip3
I0428 19:39:29.040846 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.040851 24307 net.cpp:139] Memory required for data: 1006800
I0428 19:39:29.040865 24307 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:29.040889 24307 net.cpp:86] Creating Layer relu3
I0428 19:39:29.040894 24307 net.cpp:408] relu3 <- ip3
I0428 19:39:29.040901 24307 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:29.041728 24307 net.cpp:124] Setting up relu3
I0428 19:39:29.041744 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.041750 24307 net.cpp:139] Memory required for data: 1010800
I0428 19:39:29.041755 24307 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:29.041765 24307 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:29.041771 24307 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:29.041780 24307 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:29.041790 24307 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:29.041841 24307 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:29.041848 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.041856 24307 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:29.041860 24307 net.cpp:139] Memory required for data: 1018800
I0428 19:39:29.041868 24307 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:29.041878 24307 net.cpp:86] Creating Layer accuracy
I0428 19:39:29.041884 24307 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:29.041893 24307 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:29.041900 24307 net.cpp:382] accuracy -> accuracy
I0428 19:39:29.041911 24307 net.cpp:124] Setting up accuracy
I0428 19:39:29.041919 24307 net.cpp:131] Top shape: (1)
I0428 19:39:29.041924 24307 net.cpp:139] Memory required for data: 1018804
I0428 19:39:29.041930 24307 layer_factory.hpp:77] Creating layer loss
I0428 19:39:29.041939 24307 net.cpp:86] Creating Layer loss
I0428 19:39:29.041960 24307 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:29.041967 24307 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:29.041975 24307 net.cpp:382] loss -> loss
I0428 19:39:29.041985 24307 layer_factory.hpp:77] Creating layer loss
I0428 19:39:29.042237 24307 net.cpp:124] Setting up loss
I0428 19:39:29.042248 24307 net.cpp:131] Top shape: (1)
I0428 19:39:29.042253 24307 net.cpp:134]     with loss weight 1
I0428 19:39:29.042276 24307 net.cpp:139] Memory required for data: 1018808
I0428 19:39:29.042294 24307 net.cpp:200] loss needs backward computation.
I0428 19:39:29.042301 24307 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:29.042309 24307 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:29.042313 24307 net.cpp:200] relu3 needs backward computation.
I0428 19:39:29.042318 24307 net.cpp:200] ip3 needs backward computation.
I0428 19:39:29.042323 24307 net.cpp:200] relu2 needs backward computation.
I0428 19:39:29.042328 24307 net.cpp:200] ip2 needs backward computation.
I0428 19:39:29.042333 24307 net.cpp:200] relu1 needs backward computation.
I0428 19:39:29.042338 24307 net.cpp:200] ip1 needs backward computation.
I0428 19:39:29.042343 24307 net.cpp:200] pool1 needs backward computation.
I0428 19:39:29.042349 24307 net.cpp:200] conv1 needs backward computation.
I0428 19:39:29.042354 24307 net.cpp:200] pool0 needs backward computation.
I0428 19:39:29.042359 24307 net.cpp:200] conv0 needs backward computation.
I0428 19:39:29.042366 24307 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:29.042372 24307 net.cpp:202] mnist does not need backward computation.
I0428 19:39:29.042377 24307 net.cpp:244] This network produces output accuracy
I0428 19:39:29.042382 24307 net.cpp:244] This network produces output loss
I0428 19:39:29.042400 24307 net.cpp:257] Network initialization done.
I0428 19:39:29.042449 24307 solver.cpp:56] Solver scaffolding done.
I0428 19:39:29.042803 24307 caffe.cpp:248] Starting Optimization
I0428 19:39:29.042809 24307 solver.cpp:273] Solving LeNet
I0428 19:39:29.042814 24307 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:29.043705 24307 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:29.046337 24307 blocking_queue.cpp:49] Waiting for data
I0428 19:39:29.118160 24314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:29.118609 24307 solver.cpp:398]     Test net output #0: accuracy = 0.1261
I0428 19:39:29.118634 24307 solver.cpp:398]     Test net output #1: loss = 2.29966 (* 1 = 2.29966 loss)
I0428 19:39:29.120529 24307 solver.cpp:219] Iteration 0 (-2.73566e-31 iter/s, 0.0776786s/100 iters), loss = 2.30844
I0428 19:39:29.120559 24307 solver.cpp:238]     Train net output #0: loss = 2.30844 (* 1 = 2.30844 loss)
I0428 19:39:29.120594 24307 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:29.192072 24307 solver.cpp:219] Iteration 100 (1398.53 iter/s, 0.0715038s/100 iters), loss = 1.69979
I0428 19:39:29.192102 24307 solver.cpp:238]     Train net output #0: loss = 1.69979 (* 1 = 1.69979 loss)
I0428 19:39:29.192112 24307 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:29.261886 24307 solver.cpp:219] Iteration 200 (1433.12 iter/s, 0.0697776s/100 iters), loss = 0.950607
I0428 19:39:29.261916 24307 solver.cpp:238]     Train net output #0: loss = 0.950607 (* 1 = 0.950607 loss)
I0428 19:39:29.261926 24307 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:29.330296 24307 solver.cpp:219] Iteration 300 (1462.55 iter/s, 0.0683736s/100 iters), loss = 0.761832
I0428 19:39:29.330327 24307 solver.cpp:238]     Train net output #0: loss = 0.761832 (* 1 = 0.761832 loss)
I0428 19:39:29.330338 24307 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:29.397979 24307 solver.cpp:219] Iteration 400 (1478.28 iter/s, 0.0676464s/100 iters), loss = 1.23884
I0428 19:39:29.398006 24307 solver.cpp:238]     Train net output #0: loss = 1.23884 (* 1 = 1.23884 loss)
I0428 19:39:29.398016 24307 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:29.464985 24307 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:29.537397 24314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:29.537822 24307 solver.cpp:398]     Test net output #0: accuracy = 0.7448
I0428 19:39:29.537842 24307 solver.cpp:398]     Test net output #1: loss = 0.905142 (* 1 = 0.905142 loss)
I0428 19:39:29.538596 24307 solver.cpp:219] Iteration 500 (711.34 iter/s, 0.14058s/100 iters), loss = 1.11943
I0428 19:39:29.538625 24307 solver.cpp:238]     Train net output #0: loss = 1.11943 (* 1 = 1.11943 loss)
I0428 19:39:29.538651 24307 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:29.609540 24307 solver.cpp:219] Iteration 600 (1410.56 iter/s, 0.0708936s/100 iters), loss = 0.749387
I0428 19:39:29.609570 24307 solver.cpp:238]     Train net output #0: loss = 0.749387 (* 1 = 0.749387 loss)
I0428 19:39:29.609580 24307 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:29.680663 24307 solver.cpp:219] Iteration 700 (1406.7 iter/s, 0.0710881s/100 iters), loss = 1.15195
I0428 19:39:29.680691 24307 solver.cpp:238]     Train net output #0: loss = 1.15195 (* 1 = 1.15195 loss)
I0428 19:39:29.680701 24307 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:29.749789 24307 solver.cpp:219] Iteration 800 (1447.36 iter/s, 0.0690913s/100 iters), loss = 0.887631
I0428 19:39:29.749819 24307 solver.cpp:238]     Train net output #0: loss = 0.887631 (* 1 = 0.887631 loss)
I0428 19:39:29.749828 24307 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:29.819500 24307 solver.cpp:219] Iteration 900 (1435.23 iter/s, 0.0696751s/100 iters), loss = 0.622421
I0428 19:39:29.819530 24307 solver.cpp:238]     Train net output #0: loss = 0.622421 (* 1 = 0.622421 loss)
I0428 19:39:29.819553 24307 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:29.843931 24313 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:29.889451 24307 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:29.890081 24307 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:29.890532 24307 solver.cpp:311] Iteration 1000, loss = 0.898136
I0428 19:39:29.890548 24307 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:29.966171 24314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:29.966600 24307 solver.cpp:398]     Test net output #0: accuracy = 0.7678
I0428 19:39:29.966621 24307 solver.cpp:398]     Test net output #1: loss = 0.837188 (* 1 = 0.837188 loss)
I0428 19:39:29.966630 24307 solver.cpp:316] Optimization Done.
I0428 19:39:29.966635 24307 caffe.cpp:259] Optimization Done.
