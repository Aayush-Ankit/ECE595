I0428 20:18:52.776325  1255 caffe.cpp:218] Using GPUs 0
I0428 20:18:52.812824  1255 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:53.265647  1255 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1329.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:53.265775  1255 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1329.prototxt
I0428 20:18:53.266072  1255 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:53.266086  1255 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:53.266155  1255 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:18:53.266214  1255 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:53.266295  1255 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:53.266314  1255 net.cpp:86] Creating Layer mnist
I0428 20:18:53.266321  1255 net.cpp:382] mnist -> data
I0428 20:18:53.266338  1255 net.cpp:382] mnist -> label
I0428 20:18:53.267333  1255 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:53.269549  1255 net.cpp:124] Setting up mnist
I0428 20:18:53.269583  1255 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:53.269588  1255 net.cpp:131] Top shape: 64 (64)
I0428 20:18:53.269592  1255 net.cpp:139] Memory required for data: 200960
I0428 20:18:53.269598  1255 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:53.269611  1255 net.cpp:86] Creating Layer conv0
I0428 20:18:53.269616  1255 net.cpp:408] conv0 <- data
I0428 20:18:53.269625  1255 net.cpp:382] conv0 -> conv0
I0428 20:18:53.495959  1255 net.cpp:124] Setting up conv0
I0428 20:18:53.495983  1255 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:53.495987  1255 net.cpp:139] Memory required for data: 7573760
I0428 20:18:53.496018  1255 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:53.496050  1255 net.cpp:86] Creating Layer pool0
I0428 20:18:53.496054  1255 net.cpp:408] pool0 <- conv0
I0428 20:18:53.496059  1255 net.cpp:382] pool0 -> pool0
I0428 20:18:53.496104  1255 net.cpp:124] Setting up pool0
I0428 20:18:53.496109  1255 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:53.496111  1255 net.cpp:139] Memory required for data: 9416960
I0428 20:18:53.496114  1255 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:53.496124  1255 net.cpp:86] Creating Layer conv1
I0428 20:18:53.496127  1255 net.cpp:408] conv1 <- pool0
I0428 20:18:53.496132  1255 net.cpp:382] conv1 -> conv1
I0428 20:18:53.498081  1255 net.cpp:124] Setting up conv1
I0428 20:18:53.498111  1255 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:18:53.498116  1255 net.cpp:139] Memory required for data: 9826560
I0428 20:18:53.498123  1255 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:53.498147  1255 net.cpp:86] Creating Layer pool1
I0428 20:18:53.498150  1255 net.cpp:408] pool1 <- conv1
I0428 20:18:53.498154  1255 net.cpp:382] pool1 -> pool1
I0428 20:18:53.498190  1255 net.cpp:124] Setting up pool1
I0428 20:18:53.498199  1255 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:18:53.498203  1255 net.cpp:139] Memory required for data: 9928960
I0428 20:18:53.498205  1255 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:53.498212  1255 net.cpp:86] Creating Layer ip1
I0428 20:18:53.498215  1255 net.cpp:408] ip1 <- pool1
I0428 20:18:53.498219  1255 net.cpp:382] ip1 -> ip1
I0428 20:18:53.498347  1255 net.cpp:124] Setting up ip1
I0428 20:18:53.498354  1255 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:53.498358  1255 net.cpp:139] Memory required for data: 9931520
I0428 20:18:53.498363  1255 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:53.498368  1255 net.cpp:86] Creating Layer relu1
I0428 20:18:53.498371  1255 net.cpp:408] relu1 <- ip1
I0428 20:18:53.498375  1255 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:53.498530  1255 net.cpp:124] Setting up relu1
I0428 20:18:53.498539  1255 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:53.498541  1255 net.cpp:139] Memory required for data: 9934080
I0428 20:18:53.498544  1255 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:53.498550  1255 net.cpp:86] Creating Layer ip2
I0428 20:18:53.498553  1255 net.cpp:408] ip2 <- ip1
I0428 20:18:53.498558  1255 net.cpp:382] ip2 -> ip2
I0428 20:18:53.498662  1255 net.cpp:124] Setting up ip2
I0428 20:18:53.498669  1255 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:53.498672  1255 net.cpp:139] Memory required for data: 9936640
I0428 20:18:53.498677  1255 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:53.498683  1255 net.cpp:86] Creating Layer relu2
I0428 20:18:53.498687  1255 net.cpp:408] relu2 <- ip2
I0428 20:18:53.498690  1255 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:53.499445  1255 net.cpp:124] Setting up relu2
I0428 20:18:53.499456  1255 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:53.499475  1255 net.cpp:139] Memory required for data: 9939200
I0428 20:18:53.499478  1255 layer_factory.hpp:77] Creating layer loss
I0428 20:18:53.499485  1255 net.cpp:86] Creating Layer loss
I0428 20:18:53.499487  1255 net.cpp:408] loss <- ip2
I0428 20:18:53.499492  1255 net.cpp:408] loss <- label
I0428 20:18:53.499496  1255 net.cpp:382] loss -> loss
I0428 20:18:53.499516  1255 layer_factory.hpp:77] Creating layer loss
I0428 20:18:53.499733  1255 net.cpp:124] Setting up loss
I0428 20:18:53.499742  1255 net.cpp:131] Top shape: (1)
I0428 20:18:53.499745  1255 net.cpp:134]     with loss weight 1
I0428 20:18:53.499758  1255 net.cpp:139] Memory required for data: 9939204
I0428 20:18:53.499761  1255 net.cpp:200] loss needs backward computation.
I0428 20:18:53.499765  1255 net.cpp:200] relu2 needs backward computation.
I0428 20:18:53.499768  1255 net.cpp:200] ip2 needs backward computation.
I0428 20:18:53.499770  1255 net.cpp:200] relu1 needs backward computation.
I0428 20:18:53.499773  1255 net.cpp:200] ip1 needs backward computation.
I0428 20:18:53.499784  1255 net.cpp:200] pool1 needs backward computation.
I0428 20:18:53.499788  1255 net.cpp:200] conv1 needs backward computation.
I0428 20:18:53.499790  1255 net.cpp:200] pool0 needs backward computation.
I0428 20:18:53.499794  1255 net.cpp:200] conv0 needs backward computation.
I0428 20:18:53.499796  1255 net.cpp:202] mnist does not need backward computation.
I0428 20:18:53.499799  1255 net.cpp:244] This network produces output loss
I0428 20:18:53.499807  1255 net.cpp:257] Network initialization done.
I0428 20:18:53.500074  1255 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1329.prototxt
I0428 20:18:53.500098  1255 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:53.500196  1255 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:18:53.500259  1255 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:53.500304  1255 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:53.500316  1255 net.cpp:86] Creating Layer mnist
I0428 20:18:53.500320  1255 net.cpp:382] mnist -> data
I0428 20:18:53.500329  1255 net.cpp:382] mnist -> label
I0428 20:18:53.500411  1255 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:53.502581  1255 net.cpp:124] Setting up mnist
I0428 20:18:53.502611  1255 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:53.502616  1255 net.cpp:131] Top shape: 100 (100)
I0428 20:18:53.502619  1255 net.cpp:139] Memory required for data: 314000
I0428 20:18:53.502638  1255 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:53.502667  1255 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:53.502671  1255 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:53.502678  1255 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:53.502684  1255 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:53.502784  1255 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:53.502792  1255 net.cpp:131] Top shape: 100 (100)
I0428 20:18:53.502796  1255 net.cpp:131] Top shape: 100 (100)
I0428 20:18:53.502799  1255 net.cpp:139] Memory required for data: 314800
I0428 20:18:53.502802  1255 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:53.502812  1255 net.cpp:86] Creating Layer conv0
I0428 20:18:53.502816  1255 net.cpp:408] conv0 <- data
I0428 20:18:53.502821  1255 net.cpp:382] conv0 -> conv0
I0428 20:18:53.504616  1255 net.cpp:124] Setting up conv0
I0428 20:18:53.504658  1255 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:53.504662  1255 net.cpp:139] Memory required for data: 11834800
I0428 20:18:53.504672  1255 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:53.504678  1255 net.cpp:86] Creating Layer pool0
I0428 20:18:53.504683  1255 net.cpp:408] pool0 <- conv0
I0428 20:18:53.504688  1255 net.cpp:382] pool0 -> pool0
I0428 20:18:53.504739  1255 net.cpp:124] Setting up pool0
I0428 20:18:53.504745  1255 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:53.504750  1255 net.cpp:139] Memory required for data: 14714800
I0428 20:18:53.504752  1255 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:53.504761  1255 net.cpp:86] Creating Layer conv1
I0428 20:18:53.504765  1255 net.cpp:408] conv1 <- pool0
I0428 20:18:53.504770  1255 net.cpp:382] conv1 -> conv1
I0428 20:18:53.506412  1255 net.cpp:124] Setting up conv1
I0428 20:18:53.506425  1255 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:18:53.506429  1255 net.cpp:139] Memory required for data: 15354800
I0428 20:18:53.506438  1255 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:53.506445  1255 net.cpp:86] Creating Layer pool1
I0428 20:18:53.506448  1255 net.cpp:408] pool1 <- conv1
I0428 20:18:53.506453  1255 net.cpp:382] pool1 -> pool1
I0428 20:18:53.506490  1255 net.cpp:124] Setting up pool1
I0428 20:18:53.506495  1255 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:18:53.506498  1255 net.cpp:139] Memory required for data: 15514800
I0428 20:18:53.506501  1255 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:53.506508  1255 net.cpp:86] Creating Layer ip1
I0428 20:18:53.506511  1255 net.cpp:408] ip1 <- pool1
I0428 20:18:53.506515  1255 net.cpp:382] ip1 -> ip1
I0428 20:18:53.506639  1255 net.cpp:124] Setting up ip1
I0428 20:18:53.506645  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.506649  1255 net.cpp:139] Memory required for data: 15518800
I0428 20:18:53.506655  1255 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:53.506678  1255 net.cpp:86] Creating Layer relu1
I0428 20:18:53.506681  1255 net.cpp:408] relu1 <- ip1
I0428 20:18:53.506685  1255 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:53.506850  1255 net.cpp:124] Setting up relu1
I0428 20:18:53.506857  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.506861  1255 net.cpp:139] Memory required for data: 15522800
I0428 20:18:53.506865  1255 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:53.506871  1255 net.cpp:86] Creating Layer ip2
I0428 20:18:53.506875  1255 net.cpp:408] ip2 <- ip1
I0428 20:18:53.506881  1255 net.cpp:382] ip2 -> ip2
I0428 20:18:53.506994  1255 net.cpp:124] Setting up ip2
I0428 20:18:53.507000  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.507004  1255 net.cpp:139] Memory required for data: 15526800
I0428 20:18:53.507009  1255 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:53.507014  1255 net.cpp:86] Creating Layer relu2
I0428 20:18:53.507016  1255 net.cpp:408] relu2 <- ip2
I0428 20:18:53.507020  1255 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:53.507282  1255 net.cpp:124] Setting up relu2
I0428 20:18:53.507290  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.507293  1255 net.cpp:139] Memory required for data: 15530800
I0428 20:18:53.507297  1255 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:18:53.507302  1255 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:18:53.507305  1255 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:18:53.507309  1255 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:18:53.507324  1255 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:18:53.507362  1255 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:18:53.507369  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.507374  1255 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:53.507376  1255 net.cpp:139] Memory required for data: 15538800
I0428 20:18:53.507378  1255 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:53.507385  1255 net.cpp:86] Creating Layer accuracy
I0428 20:18:53.507388  1255 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:18:53.507392  1255 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:53.507396  1255 net.cpp:382] accuracy -> accuracy
I0428 20:18:53.507403  1255 net.cpp:124] Setting up accuracy
I0428 20:18:53.507407  1255 net.cpp:131] Top shape: (1)
I0428 20:18:53.507411  1255 net.cpp:139] Memory required for data: 15538804
I0428 20:18:53.507413  1255 layer_factory.hpp:77] Creating layer loss
I0428 20:18:53.507419  1255 net.cpp:86] Creating Layer loss
I0428 20:18:53.507422  1255 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:18:53.507426  1255 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:53.507429  1255 net.cpp:382] loss -> loss
I0428 20:18:53.507436  1255 layer_factory.hpp:77] Creating layer loss
I0428 20:18:53.507666  1255 net.cpp:124] Setting up loss
I0428 20:18:53.507675  1255 net.cpp:131] Top shape: (1)
I0428 20:18:53.507678  1255 net.cpp:134]     with loss weight 1
I0428 20:18:53.507684  1255 net.cpp:139] Memory required for data: 15538808
I0428 20:18:53.507688  1255 net.cpp:200] loss needs backward computation.
I0428 20:18:53.507691  1255 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:53.507695  1255 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:18:53.507699  1255 net.cpp:200] relu2 needs backward computation.
I0428 20:18:53.507701  1255 net.cpp:200] ip2 needs backward computation.
I0428 20:18:53.507704  1255 net.cpp:200] relu1 needs backward computation.
I0428 20:18:53.507706  1255 net.cpp:200] ip1 needs backward computation.
I0428 20:18:53.507709  1255 net.cpp:200] pool1 needs backward computation.
I0428 20:18:53.507712  1255 net.cpp:200] conv1 needs backward computation.
I0428 20:18:53.507716  1255 net.cpp:200] pool0 needs backward computation.
I0428 20:18:53.507719  1255 net.cpp:200] conv0 needs backward computation.
I0428 20:18:53.507724  1255 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:53.507726  1255 net.cpp:202] mnist does not need backward computation.
I0428 20:18:53.507730  1255 net.cpp:244] This network produces output accuracy
I0428 20:18:53.507732  1255 net.cpp:244] This network produces output loss
I0428 20:18:53.507743  1255 net.cpp:257] Network initialization done.
I0428 20:18:53.507807  1255 solver.cpp:56] Solver scaffolding done.
I0428 20:18:53.508147  1255 caffe.cpp:248] Starting Optimization
I0428 20:18:53.508153  1255 solver.cpp:273] Solving LeNet
I0428 20:18:53.508155  1255 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:53.508429  1255 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:53.515276  1255 blocking_queue.cpp:49] Waiting for data
I0428 20:18:53.577026  1262 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:53.577926  1255 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 20:18:53.577960  1255 solver.cpp:398]     Test net output #1: loss = 2.35846 (* 1 = 2.35846 loss)
I0428 20:18:53.582356  1255 solver.cpp:219] Iteration 0 (-1.21546e-31 iter/s, 0.074149s/100 iters), loss = 2.36261
I0428 20:18:53.582396  1255 solver.cpp:238]     Train net output #0: loss = 2.36261 (* 1 = 2.36261 loss)
I0428 20:18:53.582406  1255 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:53.705389  1255 solver.cpp:219] Iteration 100 (813.049 iter/s, 0.122994s/100 iters), loss = 0.596095
I0428 20:18:53.705427  1255 solver.cpp:238]     Train net output #0: loss = 0.596095 (* 1 = 0.596095 loss)
I0428 20:18:53.705433  1255 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:53.828706  1255 solver.cpp:219] Iteration 200 (811.139 iter/s, 0.123283s/100 iters), loss = 0.507496
I0428 20:18:53.828747  1255 solver.cpp:238]     Train net output #0: loss = 0.507496 (* 1 = 0.507496 loss)
I0428 20:18:53.828752  1255 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:53.952853  1255 solver.cpp:219] Iteration 300 (805.725 iter/s, 0.124112s/100 iters), loss = 0.190343
I0428 20:18:53.952893  1255 solver.cpp:238]     Train net output #0: loss = 0.190343 (* 1 = 0.190343 loss)
I0428 20:18:53.952899  1255 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:54.078014  1255 solver.cpp:219] Iteration 400 (799.295 iter/s, 0.12511s/100 iters), loss = 0.08211
I0428 20:18:54.078057  1255 solver.cpp:238]     Train net output #0: loss = 0.08211 (* 1 = 0.08211 loss)
I0428 20:18:54.078063  1255 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:54.199640  1255 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:54.263413  1262 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:54.265735  1255 solver.cpp:398]     Test net output #0: accuracy = 0.9576
I0428 20:18:54.265753  1255 solver.cpp:398]     Test net output #1: loss = 0.137895 (* 1 = 0.137895 loss)
I0428 20:18:54.266921  1255 solver.cpp:219] Iteration 500 (529.477 iter/s, 0.188866s/100 iters), loss = 0.095338
I0428 20:18:54.266959  1255 solver.cpp:238]     Train net output #0: loss = 0.0953381 (* 1 = 0.0953381 loss)
I0428 20:18:54.266965  1255 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:54.401368  1255 solver.cpp:219] Iteration 600 (743.997 iter/s, 0.134409s/100 iters), loss = 0.0798391
I0428 20:18:54.401414  1255 solver.cpp:238]     Train net output #0: loss = 0.0798391 (* 1 = 0.0798391 loss)
I0428 20:18:54.401427  1255 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:54.549716  1255 solver.cpp:219] Iteration 700 (674.375 iter/s, 0.148285s/100 iters), loss = 0.176702
I0428 20:18:54.549783  1255 solver.cpp:238]     Train net output #0: loss = 0.176702 (* 1 = 0.176702 loss)
I0428 20:18:54.549808  1255 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:54.688537  1255 solver.cpp:219] Iteration 800 (720.742 iter/s, 0.138746s/100 iters), loss = 0.275442
I0428 20:18:54.688570  1255 solver.cpp:238]     Train net output #0: loss = 0.275442 (* 1 = 0.275442 loss)
I0428 20:18:54.688578  1255 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:54.822029  1255 solver.cpp:219] Iteration 900 (749.369 iter/s, 0.133446s/100 iters), loss = 0.185286
I0428 20:18:54.822067  1255 solver.cpp:238]     Train net output #0: loss = 0.185286 (* 1 = 0.185286 loss)
I0428 20:18:54.822077  1255 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:54.868324  1261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:54.959244  1255 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:54.960804  1255 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:54.961771  1255 solver.cpp:311] Iteration 1000, loss = 0.0932795
I0428 20:18:54.961792  1255 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:55.038347  1262 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:55.039222  1255 solver.cpp:398]     Test net output #0: accuracy = 0.9767
I0428 20:18:55.039247  1255 solver.cpp:398]     Test net output #1: loss = 0.0774237 (* 1 = 0.0774237 loss)
I0428 20:18:55.039253  1255 solver.cpp:316] Optimization Done.
I0428 20:18:55.039258  1255 caffe.cpp:259] Optimization Done.
