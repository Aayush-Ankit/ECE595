I0428 19:59:15.082911 29193 caffe.cpp:218] Using GPUs 0
I0428 19:59:15.119395 29193 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:15.572443 29193 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test842.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:15.572592 29193 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test842.prototxt
I0428 19:59:15.572983 29193 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:15.573014 29193 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:15.573092 29193 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:15.573154 29193 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:15.573264 29193 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:15.573282 29193 net.cpp:86] Creating Layer mnist
I0428 19:59:15.573288 29193 net.cpp:382] mnist -> data
I0428 19:59:15.573307 29193 net.cpp:382] mnist -> label
I0428 19:59:15.574308 29193 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:15.576530 29193 net.cpp:124] Setting up mnist
I0428 19:59:15.576560 29193 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:15.576566 29193 net.cpp:131] Top shape: 64 (64)
I0428 19:59:15.576570 29193 net.cpp:139] Memory required for data: 200960
I0428 19:59:15.576575 29193 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:15.576587 29193 net.cpp:86] Creating Layer conv0
I0428 19:59:15.576604 29193 net.cpp:408] conv0 <- data
I0428 19:59:15.576614 29193 net.cpp:382] conv0 -> conv0
I0428 19:59:15.802548 29193 net.cpp:124] Setting up conv0
I0428 19:59:15.802574 29193 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:15.802577 29193 net.cpp:139] Memory required for data: 1675520
I0428 19:59:15.802592 29193 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:15.802605 29193 net.cpp:86] Creating Layer pool0
I0428 19:59:15.802609 29193 net.cpp:408] pool0 <- conv0
I0428 19:59:15.802614 29193 net.cpp:382] pool0 -> pool0
I0428 19:59:15.802692 29193 net.cpp:124] Setting up pool0
I0428 19:59:15.802700 29193 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:15.802703 29193 net.cpp:139] Memory required for data: 2044160
I0428 19:59:15.802706 29193 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:15.802716 29193 net.cpp:86] Creating Layer conv1
I0428 19:59:15.802719 29193 net.cpp:408] conv1 <- pool0
I0428 19:59:15.802724 29193 net.cpp:382] conv1 -> conv1
I0428 19:59:15.805573 29193 net.cpp:124] Setting up conv1
I0428 19:59:15.805603 29193 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:15.805606 29193 net.cpp:139] Memory required for data: 2208000
I0428 19:59:15.805614 29193 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:15.805621 29193 net.cpp:86] Creating Layer pool1
I0428 19:59:15.805624 29193 net.cpp:408] pool1 <- conv1
I0428 19:59:15.805646 29193 net.cpp:382] pool1 -> pool1
I0428 19:59:15.805685 29193 net.cpp:124] Setting up pool1
I0428 19:59:15.805691 29193 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:15.805693 29193 net.cpp:139] Memory required for data: 2248960
I0428 19:59:15.805696 29193 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:15.805704 29193 net.cpp:86] Creating Layer ip1
I0428 19:59:15.805707 29193 net.cpp:408] ip1 <- pool1
I0428 19:59:15.805712 29193 net.cpp:382] ip1 -> ip1
I0428 19:59:15.805833 29193 net.cpp:124] Setting up ip1
I0428 19:59:15.805841 29193 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:15.805845 29193 net.cpp:139] Memory required for data: 2255360
I0428 19:59:15.805851 29193 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:15.805857 29193 net.cpp:86] Creating Layer relu1
I0428 19:59:15.805860 29193 net.cpp:408] relu1 <- ip1
I0428 19:59:15.805866 29193 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:15.806046 29193 net.cpp:124] Setting up relu1
I0428 19:59:15.806054 29193 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:15.806057 29193 net.cpp:139] Memory required for data: 2261760
I0428 19:59:15.806061 29193 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:15.806068 29193 net.cpp:86] Creating Layer ip2
I0428 19:59:15.806071 29193 net.cpp:408] ip2 <- ip1
I0428 19:59:15.806077 29193 net.cpp:382] ip2 -> ip2
I0428 19:59:15.806179 29193 net.cpp:124] Setting up ip2
I0428 19:59:15.806185 29193 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:15.806187 29193 net.cpp:139] Memory required for data: 2264320
I0428 19:59:15.806192 29193 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:15.806198 29193 net.cpp:86] Creating Layer relu2
I0428 19:59:15.806201 29193 net.cpp:408] relu2 <- ip2
I0428 19:59:15.806205 29193 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:15.806910 29193 net.cpp:124] Setting up relu2
I0428 19:59:15.806921 29193 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:15.806941 29193 net.cpp:139] Memory required for data: 2266880
I0428 19:59:15.806943 29193 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:15.806951 29193 net.cpp:86] Creating Layer ip3
I0428 19:59:15.806954 29193 net.cpp:408] ip3 <- ip2
I0428 19:59:15.806958 29193 net.cpp:382] ip3 -> ip3
I0428 19:59:15.807070 29193 net.cpp:124] Setting up ip3
I0428 19:59:15.807076 29193 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:15.807078 29193 net.cpp:139] Memory required for data: 2269440
I0428 19:59:15.807086 29193 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:15.807090 29193 net.cpp:86] Creating Layer relu3
I0428 19:59:15.807095 29193 net.cpp:408] relu3 <- ip3
I0428 19:59:15.807098 29193 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:15.807312 29193 net.cpp:124] Setting up relu3
I0428 19:59:15.807320 29193 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:15.807324 29193 net.cpp:139] Memory required for data: 2272000
I0428 19:59:15.807327 29193 layer_factory.hpp:77] Creating layer loss
I0428 19:59:15.807334 29193 net.cpp:86] Creating Layer loss
I0428 19:59:15.807337 29193 net.cpp:408] loss <- ip3
I0428 19:59:15.807341 29193 net.cpp:408] loss <- label
I0428 19:59:15.807346 29193 net.cpp:382] loss -> loss
I0428 19:59:15.807379 29193 layer_factory.hpp:77] Creating layer loss
I0428 19:59:15.807641 29193 net.cpp:124] Setting up loss
I0428 19:59:15.807664 29193 net.cpp:131] Top shape: (1)
I0428 19:59:15.807667 29193 net.cpp:134]     with loss weight 1
I0428 19:59:15.807696 29193 net.cpp:139] Memory required for data: 2272004
I0428 19:59:15.807699 29193 net.cpp:200] loss needs backward computation.
I0428 19:59:15.807703 29193 net.cpp:200] relu3 needs backward computation.
I0428 19:59:15.807705 29193 net.cpp:200] ip3 needs backward computation.
I0428 19:59:15.807708 29193 net.cpp:200] relu2 needs backward computation.
I0428 19:59:15.807710 29193 net.cpp:200] ip2 needs backward computation.
I0428 19:59:15.807713 29193 net.cpp:200] relu1 needs backward computation.
I0428 19:59:15.807715 29193 net.cpp:200] ip1 needs backward computation.
I0428 19:59:15.807718 29193 net.cpp:200] pool1 needs backward computation.
I0428 19:59:15.807720 29193 net.cpp:200] conv1 needs backward computation.
I0428 19:59:15.807723 29193 net.cpp:200] pool0 needs backward computation.
I0428 19:59:15.807726 29193 net.cpp:200] conv0 needs backward computation.
I0428 19:59:15.807729 29193 net.cpp:202] mnist does not need backward computation.
I0428 19:59:15.807731 29193 net.cpp:244] This network produces output loss
I0428 19:59:15.807740 29193 net.cpp:257] Network initialization done.
I0428 19:59:15.808091 29193 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test842.prototxt
I0428 19:59:15.808133 29193 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:15.808248 29193 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:15.808334 29193 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:15.808392 29193 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:15.808404 29193 net.cpp:86] Creating Layer mnist
I0428 19:59:15.808408 29193 net.cpp:382] mnist -> data
I0428 19:59:15.808418 29193 net.cpp:382] mnist -> label
I0428 19:59:15.808529 29193 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:15.810776 29193 net.cpp:124] Setting up mnist
I0428 19:59:15.810789 29193 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:15.810794 29193 net.cpp:131] Top shape: 100 (100)
I0428 19:59:15.810797 29193 net.cpp:139] Memory required for data: 314000
I0428 19:59:15.810801 29193 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:15.810837 29193 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:15.810840 29193 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:15.810845 29193 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:15.810853 29193 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:15.810899 29193 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:15.810905 29193 net.cpp:131] Top shape: 100 (100)
I0428 19:59:15.810909 29193 net.cpp:131] Top shape: 100 (100)
I0428 19:59:15.810911 29193 net.cpp:139] Memory required for data: 314800
I0428 19:59:15.810914 29193 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:15.810925 29193 net.cpp:86] Creating Layer conv0
I0428 19:59:15.810928 29193 net.cpp:408] conv0 <- data
I0428 19:59:15.810932 29193 net.cpp:382] conv0 -> conv0
I0428 19:59:15.812703 29193 net.cpp:124] Setting up conv0
I0428 19:59:15.812717 29193 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:15.812721 29193 net.cpp:139] Memory required for data: 2618800
I0428 19:59:15.812731 29193 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:15.812738 29193 net.cpp:86] Creating Layer pool0
I0428 19:59:15.812741 29193 net.cpp:408] pool0 <- conv0
I0428 19:59:15.812747 29193 net.cpp:382] pool0 -> pool0
I0428 19:59:15.812783 29193 net.cpp:124] Setting up pool0
I0428 19:59:15.812789 29193 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:15.812793 29193 net.cpp:139] Memory required for data: 3194800
I0428 19:59:15.812795 29193 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:15.812805 29193 net.cpp:86] Creating Layer conv1
I0428 19:59:15.812808 29193 net.cpp:408] conv1 <- pool0
I0428 19:59:15.812851 29193 net.cpp:382] conv1 -> conv1
I0428 19:59:15.815079 29193 net.cpp:124] Setting up conv1
I0428 19:59:15.815093 29193 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:15.815096 29193 net.cpp:139] Memory required for data: 3450800
I0428 19:59:15.815104 29193 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:15.815140 29193 net.cpp:86] Creating Layer pool1
I0428 19:59:15.815143 29193 net.cpp:408] pool1 <- conv1
I0428 19:59:15.815161 29193 net.cpp:382] pool1 -> pool1
I0428 19:59:15.815201 29193 net.cpp:124] Setting up pool1
I0428 19:59:15.815207 29193 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:15.815208 29193 net.cpp:139] Memory required for data: 3514800
I0428 19:59:15.815212 29193 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:15.815217 29193 net.cpp:86] Creating Layer ip1
I0428 19:59:15.815219 29193 net.cpp:408] ip1 <- pool1
I0428 19:59:15.815232 29193 net.cpp:382] ip1 -> ip1
I0428 19:59:15.815376 29193 net.cpp:124] Setting up ip1
I0428 19:59:15.815384 29193 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:15.815397 29193 net.cpp:139] Memory required for data: 3524800
I0428 19:59:15.815404 29193 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:15.815409 29193 net.cpp:86] Creating Layer relu1
I0428 19:59:15.815412 29193 net.cpp:408] relu1 <- ip1
I0428 19:59:15.815418 29193 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:15.815670 29193 net.cpp:124] Setting up relu1
I0428 19:59:15.815678 29193 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:15.815682 29193 net.cpp:139] Memory required for data: 3534800
I0428 19:59:15.815701 29193 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:15.815708 29193 net.cpp:86] Creating Layer ip2
I0428 19:59:15.815711 29193 net.cpp:408] ip2 <- ip1
I0428 19:59:15.815716 29193 net.cpp:382] ip2 -> ip2
I0428 19:59:15.815834 29193 net.cpp:124] Setting up ip2
I0428 19:59:15.815841 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.815845 29193 net.cpp:139] Memory required for data: 3538800
I0428 19:59:15.815850 29193 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:15.815860 29193 net.cpp:86] Creating Layer relu2
I0428 19:59:15.815865 29193 net.cpp:408] relu2 <- ip2
I0428 19:59:15.815870 29193 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:15.816062 29193 net.cpp:124] Setting up relu2
I0428 19:59:15.816071 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.816088 29193 net.cpp:139] Memory required for data: 3542800
I0428 19:59:15.816092 29193 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:15.816099 29193 net.cpp:86] Creating Layer ip3
I0428 19:59:15.816105 29193 net.cpp:408] ip3 <- ip2
I0428 19:59:15.816112 29193 net.cpp:382] ip3 -> ip3
I0428 19:59:15.816238 29193 net.cpp:124] Setting up ip3
I0428 19:59:15.816244 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.816248 29193 net.cpp:139] Memory required for data: 3546800
I0428 19:59:15.816256 29193 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:15.816267 29193 net.cpp:86] Creating Layer relu3
I0428 19:59:15.816272 29193 net.cpp:408] relu3 <- ip3
I0428 19:59:15.816275 29193 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:15.817101 29193 net.cpp:124] Setting up relu3
I0428 19:59:15.817113 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.817117 29193 net.cpp:139] Memory required for data: 3550800
I0428 19:59:15.817121 29193 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:15.817127 29193 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:15.817145 29193 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:15.817150 29193 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:15.817157 29193 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:15.817212 29193 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:15.817217 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.817221 29193 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:15.817224 29193 net.cpp:139] Memory required for data: 3558800
I0428 19:59:15.817226 29193 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:15.817232 29193 net.cpp:86] Creating Layer accuracy
I0428 19:59:15.817236 29193 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:15.817239 29193 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:15.817243 29193 net.cpp:382] accuracy -> accuracy
I0428 19:59:15.817250 29193 net.cpp:124] Setting up accuracy
I0428 19:59:15.817253 29193 net.cpp:131] Top shape: (1)
I0428 19:59:15.817256 29193 net.cpp:139] Memory required for data: 3558804
I0428 19:59:15.817260 29193 layer_factory.hpp:77] Creating layer loss
I0428 19:59:15.817263 29193 net.cpp:86] Creating Layer loss
I0428 19:59:15.817266 29193 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:15.817270 29193 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:15.817275 29193 net.cpp:382] loss -> loss
I0428 19:59:15.817281 29193 layer_factory.hpp:77] Creating layer loss
I0428 19:59:15.817517 29193 net.cpp:124] Setting up loss
I0428 19:59:15.817526 29193 net.cpp:131] Top shape: (1)
I0428 19:59:15.817530 29193 net.cpp:134]     with loss weight 1
I0428 19:59:15.817553 29193 net.cpp:139] Memory required for data: 3558808
I0428 19:59:15.817556 29193 net.cpp:200] loss needs backward computation.
I0428 19:59:15.817560 29193 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:15.817569 29193 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:15.817572 29193 net.cpp:200] relu3 needs backward computation.
I0428 19:59:15.817574 29193 net.cpp:200] ip3 needs backward computation.
I0428 19:59:15.817577 29193 net.cpp:200] relu2 needs backward computation.
I0428 19:59:15.817579 29193 net.cpp:200] ip2 needs backward computation.
I0428 19:59:15.817589 29193 net.cpp:200] relu1 needs backward computation.
I0428 19:59:15.817590 29193 net.cpp:200] ip1 needs backward computation.
I0428 19:59:15.817594 29193 net.cpp:200] pool1 needs backward computation.
I0428 19:59:15.817595 29193 net.cpp:200] conv1 needs backward computation.
I0428 19:59:15.817598 29193 net.cpp:200] pool0 needs backward computation.
I0428 19:59:15.817606 29193 net.cpp:200] conv0 needs backward computation.
I0428 19:59:15.817610 29193 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:15.817613 29193 net.cpp:202] mnist does not need backward computation.
I0428 19:59:15.817615 29193 net.cpp:244] This network produces output accuracy
I0428 19:59:15.817625 29193 net.cpp:244] This network produces output loss
I0428 19:59:15.817634 29193 net.cpp:257] Network initialization done.
I0428 19:59:15.817678 29193 solver.cpp:56] Solver scaffolding done.
I0428 19:59:15.817981 29193 caffe.cpp:248] Starting Optimization
I0428 19:59:15.818003 29193 solver.cpp:273] Solving LeNet
I0428 19:59:15.818006 29193 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:15.818161 29193 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:15.822512 29193 blocking_queue.cpp:49] Waiting for data
I0428 19:59:15.894762 29200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:15.895277 29193 solver.cpp:398]     Test net output #0: accuracy = 0.095
I0428 19:59:15.895298 29193 solver.cpp:398]     Test net output #1: loss = 2.32632 (* 1 = 2.32632 loss)
I0428 19:59:15.897851 29193 solver.cpp:219] Iteration 0 (0 iter/s, 0.0798198s/100 iters), loss = 2.29882
I0428 19:59:15.897876 29193 solver.cpp:238]     Train net output #0: loss = 2.29882 (* 1 = 2.29882 loss)
I0428 19:59:15.897902 29193 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:15.977551 29193 solver.cpp:219] Iteration 100 (1255.27 iter/s, 0.0796641s/100 iters), loss = 0.625235
I0428 19:59:15.977577 29193 solver.cpp:238]     Train net output #0: loss = 0.625235 (* 1 = 0.625235 loss)
I0428 19:59:15.977599 29193 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:16.054108 29193 solver.cpp:219] Iteration 200 (1306.82 iter/s, 0.0765217s/100 iters), loss = 0.75129
I0428 19:59:16.054131 29193 solver.cpp:238]     Train net output #0: loss = 0.75129 (* 1 = 0.75129 loss)
I0428 19:59:16.054137 29193 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:16.130094 29193 solver.cpp:219] Iteration 300 (1316.6 iter/s, 0.0759532s/100 iters), loss = 0.472644
I0428 19:59:16.130116 29193 solver.cpp:238]     Train net output #0: loss = 0.472644 (* 1 = 0.472644 loss)
I0428 19:59:16.130122 29193 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:16.206905 29193 solver.cpp:219] Iteration 400 (1302.43 iter/s, 0.0767795s/100 iters), loss = 0.374794
I0428 19:59:16.206929 29193 solver.cpp:238]     Train net output #0: loss = 0.374794 (* 1 = 0.374794 loss)
I0428 19:59:16.206950 29193 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:16.282814 29193 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:16.336097 29200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:16.336634 29193 solver.cpp:398]     Test net output #0: accuracy = 0.8524
I0428 19:59:16.336654 29193 solver.cpp:398]     Test net output #1: loss = 0.419109 (* 1 = 0.419109 loss)
I0428 19:59:16.337455 29193 solver.cpp:219] Iteration 500 (766.202 iter/s, 0.130514s/100 iters), loss = 0.452593
I0428 19:59:16.337479 29193 solver.cpp:238]     Train net output #0: loss = 0.452593 (* 1 = 0.452593 loss)
I0428 19:59:16.337507 29193 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:16.424561 29193 solver.cpp:219] Iteration 600 (1148.47 iter/s, 0.0870727s/100 iters), loss = 0.432339
I0428 19:59:16.424585 29193 solver.cpp:238]     Train net output #0: loss = 0.432339 (* 1 = 0.432339 loss)
I0428 19:59:16.424607 29193 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:16.504009 29193 solver.cpp:219] Iteration 700 (1259.24 iter/s, 0.0794132s/100 iters), loss = 0.516384
I0428 19:59:16.504032 29193 solver.cpp:238]     Train net output #0: loss = 0.516384 (* 1 = 0.516384 loss)
I0428 19:59:16.504055 29193 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:16.580287 29193 solver.cpp:219] Iteration 800 (1311.54 iter/s, 0.076246s/100 iters), loss = 0.578834
I0428 19:59:16.580325 29193 solver.cpp:238]     Train net output #0: loss = 0.578834 (* 1 = 0.578834 loss)
I0428 19:59:16.580332 29193 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:16.657222 29193 solver.cpp:219] Iteration 900 (1300.33 iter/s, 0.0769033s/100 iters), loss = 0.672237
I0428 19:59:16.657260 29193 solver.cpp:238]     Train net output #0: loss = 0.672237 (* 1 = 0.672237 loss)
I0428 19:59:16.657266 29193 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:16.683060 29199 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:16.741940 29193 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:16.742859 29193 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:16.743382 29193 solver.cpp:311] Iteration 1000, loss = 0.329589
I0428 19:59:16.743427 29193 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:16.817999 29200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:16.818532 29193 solver.cpp:398]     Test net output #0: accuracy = 0.8694
I0428 19:59:16.818565 29193 solver.cpp:398]     Test net output #1: loss = 0.345772 (* 1 = 0.345772 loss)
I0428 19:59:16.818570 29193 solver.cpp:316] Optimization Done.
I0428 19:59:16.818573 29193 caffe.cpp:259] Optimization Done.
