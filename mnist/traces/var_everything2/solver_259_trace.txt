I0428 19:37:29.358467 23827 caffe.cpp:218] Using GPUs 0
I0428 19:37:29.399369 23827 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:29.918390 23827 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test259.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:29.918532 23827 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test259.prototxt
I0428 19:37:29.918901 23827 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:29.918918 23827 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:29.919004 23827 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:29.919077 23827 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:29.919180 23827 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:29.919205 23827 net.cpp:86] Creating Layer mnist
I0428 19:37:29.919216 23827 net.cpp:382] mnist -> data
I0428 19:37:29.919239 23827 net.cpp:382] mnist -> label
I0428 19:37:29.920339 23827 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:29.922808 23827 net.cpp:124] Setting up mnist
I0428 19:37:29.922827 23827 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:29.922833 23827 net.cpp:131] Top shape: 64 (64)
I0428 19:37:29.922837 23827 net.cpp:139] Memory required for data: 200960
I0428 19:37:29.922843 23827 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:29.922890 23827 net.cpp:86] Creating Layer conv0
I0428 19:37:29.922897 23827 net.cpp:408] conv0 <- data
I0428 19:37:29.922909 23827 net.cpp:382] conv0 -> conv0
I0428 19:37:30.181776 23827 net.cpp:124] Setting up conv0
I0428 19:37:30.181816 23827 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:30.181834 23827 net.cpp:139] Memory required for data: 14946560
I0428 19:37:30.181864 23827 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:30.181877 23827 net.cpp:86] Creating Layer pool0
I0428 19:37:30.181915 23827 net.cpp:408] pool0 <- conv0
I0428 19:37:30.181921 23827 net.cpp:382] pool0 -> pool0
I0428 19:37:30.181967 23827 net.cpp:124] Setting up pool0
I0428 19:37:30.181978 23827 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:30.181982 23827 net.cpp:139] Memory required for data: 18632960
I0428 19:37:30.181984 23827 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:30.181991 23827 net.cpp:86] Creating Layer ip1
I0428 19:37:30.181994 23827 net.cpp:408] ip1 <- pool0
I0428 19:37:30.181999 23827 net.cpp:382] ip1 -> ip1
I0428 19:37:30.185035 23827 net.cpp:124] Setting up ip1
I0428 19:37:30.185048 23827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:30.185052 23827 net.cpp:139] Memory required for data: 18639360
I0428 19:37:30.185076 23827 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:30.185083 23827 net.cpp:86] Creating Layer relu1
I0428 19:37:30.185086 23827 net.cpp:408] relu1 <- ip1
I0428 19:37:30.185091 23827 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:30.185284 23827 net.cpp:124] Setting up relu1
I0428 19:37:30.185293 23827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:30.185297 23827 net.cpp:139] Memory required for data: 18645760
I0428 19:37:30.185299 23827 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:30.185305 23827 net.cpp:86] Creating Layer ip2
I0428 19:37:30.185308 23827 net.cpp:408] ip2 <- ip1
I0428 19:37:30.185313 23827 net.cpp:382] ip2 -> ip2
I0428 19:37:30.185402 23827 net.cpp:124] Setting up ip2
I0428 19:37:30.185410 23827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:30.185412 23827 net.cpp:139] Memory required for data: 18652160
I0428 19:37:30.185420 23827 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:30.185425 23827 net.cpp:86] Creating Layer relu2
I0428 19:37:30.185427 23827 net.cpp:408] relu2 <- ip2
I0428 19:37:30.185431 23827 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:30.186148 23827 net.cpp:124] Setting up relu2
I0428 19:37:30.186161 23827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:30.186179 23827 net.cpp:139] Memory required for data: 18658560
I0428 19:37:30.186182 23827 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:30.186189 23827 net.cpp:86] Creating Layer ip3
I0428 19:37:30.186192 23827 net.cpp:408] ip3 <- ip2
I0428 19:37:30.186197 23827 net.cpp:382] ip3 -> ip3
I0428 19:37:30.186324 23827 net.cpp:124] Setting up ip3
I0428 19:37:30.186332 23827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:30.186336 23827 net.cpp:139] Memory required for data: 18661120
I0428 19:37:30.186342 23827 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:30.186347 23827 net.cpp:86] Creating Layer relu3
I0428 19:37:30.186350 23827 net.cpp:408] relu3 <- ip3
I0428 19:37:30.186355 23827 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:30.186519 23827 net.cpp:124] Setting up relu3
I0428 19:37:30.186529 23827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:30.186532 23827 net.cpp:139] Memory required for data: 18663680
I0428 19:37:30.186535 23827 layer_factory.hpp:77] Creating layer loss
I0428 19:37:30.186542 23827 net.cpp:86] Creating Layer loss
I0428 19:37:30.186545 23827 net.cpp:408] loss <- ip3
I0428 19:37:30.186549 23827 net.cpp:408] loss <- label
I0428 19:37:30.186554 23827 net.cpp:382] loss -> loss
I0428 19:37:30.186569 23827 layer_factory.hpp:77] Creating layer loss
I0428 19:37:30.186823 23827 net.cpp:124] Setting up loss
I0428 19:37:30.186833 23827 net.cpp:131] Top shape: (1)
I0428 19:37:30.186837 23827 net.cpp:134]     with loss weight 1
I0428 19:37:30.186851 23827 net.cpp:139] Memory required for data: 18663684
I0428 19:37:30.186854 23827 net.cpp:200] loss needs backward computation.
I0428 19:37:30.186858 23827 net.cpp:200] relu3 needs backward computation.
I0428 19:37:30.186861 23827 net.cpp:200] ip3 needs backward computation.
I0428 19:37:30.186864 23827 net.cpp:200] relu2 needs backward computation.
I0428 19:37:30.186866 23827 net.cpp:200] ip2 needs backward computation.
I0428 19:37:30.186869 23827 net.cpp:200] relu1 needs backward computation.
I0428 19:37:30.186872 23827 net.cpp:200] ip1 needs backward computation.
I0428 19:37:30.186887 23827 net.cpp:200] pool0 needs backward computation.
I0428 19:37:30.186889 23827 net.cpp:200] conv0 needs backward computation.
I0428 19:37:30.186892 23827 net.cpp:202] mnist does not need backward computation.
I0428 19:37:30.186895 23827 net.cpp:244] This network produces output loss
I0428 19:37:30.186903 23827 net.cpp:257] Network initialization done.
I0428 19:37:30.187199 23827 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test259.prototxt
I0428 19:37:30.187225 23827 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:30.187306 23827 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:30.187397 23827 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:30.187438 23827 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:30.187451 23827 net.cpp:86] Creating Layer mnist
I0428 19:37:30.187456 23827 net.cpp:382] mnist -> data
I0428 19:37:30.187463 23827 net.cpp:382] mnist -> label
I0428 19:37:30.187544 23827 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:30.189584 23827 net.cpp:124] Setting up mnist
I0428 19:37:30.189611 23827 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:30.189616 23827 net.cpp:131] Top shape: 100 (100)
I0428 19:37:30.189620 23827 net.cpp:139] Memory required for data: 314000
I0428 19:37:30.189625 23827 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:30.189630 23827 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:30.189633 23827 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:30.189638 23827 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:30.189644 23827 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:30.189697 23827 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:30.189703 23827 net.cpp:131] Top shape: 100 (100)
I0428 19:37:30.189707 23827 net.cpp:131] Top shape: 100 (100)
I0428 19:37:30.189709 23827 net.cpp:139] Memory required for data: 314800
I0428 19:37:30.189721 23827 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:30.189730 23827 net.cpp:86] Creating Layer conv0
I0428 19:37:30.189734 23827 net.cpp:408] conv0 <- data
I0428 19:37:30.189739 23827 net.cpp:382] conv0 -> conv0
I0428 19:37:30.191321 23827 net.cpp:124] Setting up conv0
I0428 19:37:30.191335 23827 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:30.191339 23827 net.cpp:139] Memory required for data: 23354800
I0428 19:37:30.191347 23827 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:30.191354 23827 net.cpp:86] Creating Layer pool0
I0428 19:37:30.191357 23827 net.cpp:408] pool0 <- conv0
I0428 19:37:30.191361 23827 net.cpp:382] pool0 -> pool0
I0428 19:37:30.191396 23827 net.cpp:124] Setting up pool0
I0428 19:37:30.191402 23827 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:30.191406 23827 net.cpp:139] Memory required for data: 29114800
I0428 19:37:30.191408 23827 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:30.191414 23827 net.cpp:86] Creating Layer ip1
I0428 19:37:30.191417 23827 net.cpp:408] ip1 <- pool0
I0428 19:37:30.191421 23827 net.cpp:382] ip1 -> ip1
I0428 19:37:30.193708 23827 net.cpp:124] Setting up ip1
I0428 19:37:30.193717 23827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:30.193720 23827 net.cpp:139] Memory required for data: 29124800
I0428 19:37:30.193727 23827 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:30.193732 23827 net.cpp:86] Creating Layer relu1
I0428 19:37:30.193734 23827 net.cpp:408] relu1 <- ip1
I0428 19:37:30.193754 23827 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:30.193918 23827 net.cpp:124] Setting up relu1
I0428 19:37:30.193928 23827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:30.193931 23827 net.cpp:139] Memory required for data: 29134800
I0428 19:37:30.193934 23827 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:30.193940 23827 net.cpp:86] Creating Layer ip2
I0428 19:37:30.193954 23827 net.cpp:408] ip2 <- ip1
I0428 19:37:30.193958 23827 net.cpp:382] ip2 -> ip2
I0428 19:37:30.194051 23827 net.cpp:124] Setting up ip2
I0428 19:37:30.194057 23827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:30.194061 23827 net.cpp:139] Memory required for data: 29144800
I0428 19:37:30.194068 23827 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:30.194072 23827 net.cpp:86] Creating Layer relu2
I0428 19:37:30.194075 23827 net.cpp:408] relu2 <- ip2
I0428 19:37:30.194079 23827 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:30.194876 23827 net.cpp:124] Setting up relu2
I0428 19:37:30.194890 23827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:30.194892 23827 net.cpp:139] Memory required for data: 29154800
I0428 19:37:30.194896 23827 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:30.194905 23827 net.cpp:86] Creating Layer ip3
I0428 19:37:30.194908 23827 net.cpp:408] ip3 <- ip2
I0428 19:37:30.194913 23827 net.cpp:382] ip3 -> ip3
I0428 19:37:30.195040 23827 net.cpp:124] Setting up ip3
I0428 19:37:30.195049 23827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:30.195051 23827 net.cpp:139] Memory required for data: 29158800
I0428 19:37:30.195056 23827 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:30.195061 23827 net.cpp:86] Creating Layer relu3
I0428 19:37:30.195065 23827 net.cpp:408] relu3 <- ip3
I0428 19:37:30.195070 23827 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:30.195226 23827 net.cpp:124] Setting up relu3
I0428 19:37:30.195235 23827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:30.195238 23827 net.cpp:139] Memory required for data: 29162800
I0428 19:37:30.195241 23827 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:30.195246 23827 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:30.195248 23827 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:30.195253 23827 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:30.195258 23827 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:30.195291 23827 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:30.195297 23827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:30.195309 23827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:30.195312 23827 net.cpp:139] Memory required for data: 29170800
I0428 19:37:30.195322 23827 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:30.195327 23827 net.cpp:86] Creating Layer accuracy
I0428 19:37:30.195330 23827 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:30.195334 23827 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:30.195339 23827 net.cpp:382] accuracy -> accuracy
I0428 19:37:30.195346 23827 net.cpp:124] Setting up accuracy
I0428 19:37:30.195350 23827 net.cpp:131] Top shape: (1)
I0428 19:37:30.195353 23827 net.cpp:139] Memory required for data: 29170804
I0428 19:37:30.195355 23827 layer_factory.hpp:77] Creating layer loss
I0428 19:37:30.195359 23827 net.cpp:86] Creating Layer loss
I0428 19:37:30.195363 23827 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:30.195366 23827 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:30.195370 23827 net.cpp:382] loss -> loss
I0428 19:37:30.195375 23827 layer_factory.hpp:77] Creating layer loss
I0428 19:37:30.195605 23827 net.cpp:124] Setting up loss
I0428 19:37:30.195616 23827 net.cpp:131] Top shape: (1)
I0428 19:37:30.195619 23827 net.cpp:134]     with loss weight 1
I0428 19:37:30.195626 23827 net.cpp:139] Memory required for data: 29170808
I0428 19:37:30.195628 23827 net.cpp:200] loss needs backward computation.
I0428 19:37:30.195632 23827 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:30.195636 23827 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:30.195639 23827 net.cpp:200] relu3 needs backward computation.
I0428 19:37:30.195642 23827 net.cpp:200] ip3 needs backward computation.
I0428 19:37:30.195647 23827 net.cpp:200] relu2 needs backward computation.
I0428 19:37:30.195649 23827 net.cpp:200] ip2 needs backward computation.
I0428 19:37:30.195658 23827 net.cpp:200] relu1 needs backward computation.
I0428 19:37:30.195662 23827 net.cpp:200] ip1 needs backward computation.
I0428 19:37:30.195664 23827 net.cpp:200] pool0 needs backward computation.
I0428 19:37:30.195673 23827 net.cpp:200] conv0 needs backward computation.
I0428 19:37:30.195677 23827 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:30.195680 23827 net.cpp:202] mnist does not need backward computation.
I0428 19:37:30.195683 23827 net.cpp:244] This network produces output accuracy
I0428 19:37:30.195686 23827 net.cpp:244] This network produces output loss
I0428 19:37:30.195695 23827 net.cpp:257] Network initialization done.
I0428 19:37:30.195741 23827 solver.cpp:56] Solver scaffolding done.
I0428 19:37:30.196010 23827 caffe.cpp:248] Starting Optimization
I0428 19:37:30.196017 23827 solver.cpp:273] Solving LeNet
I0428 19:37:30.196020 23827 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:30.198060 23827 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:30.358577 23836 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:30.363050 23827 solver.cpp:398]     Test net output #0: accuracy = 0.0925
I0428 19:37:30.363073 23827 solver.cpp:398]     Test net output #1: loss = 2.32796 (* 1 = 2.32796 loss)
I0428 19:37:30.368199 23827 solver.cpp:219] Iteration 0 (0 iter/s, 0.17215s/100 iters), loss = 2.30754
I0428 19:37:30.368221 23827 solver.cpp:238]     Train net output #0: loss = 2.30754 (* 1 = 2.30754 loss)
I0428 19:37:30.368248 23827 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:30.596473 23827 solver.cpp:219] Iteration 100 (438.146 iter/s, 0.228234s/100 iters), loss = 0.357497
I0428 19:37:30.596500 23827 solver.cpp:238]     Train net output #0: loss = 0.357497 (* 1 = 0.357497 loss)
I0428 19:37:30.596508 23827 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:30.826364 23827 solver.cpp:219] Iteration 200 (435.074 iter/s, 0.229846s/100 iters), loss = 0.28441
I0428 19:37:30.826388 23827 solver.cpp:238]     Train net output #0: loss = 0.28441 (* 1 = 0.28441 loss)
I0428 19:37:30.826395 23827 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:31.053921 23827 solver.cpp:219] Iteration 300 (439.533 iter/s, 0.227514s/100 iters), loss = 0.288453
I0428 19:37:31.053961 23827 solver.cpp:238]     Train net output #0: loss = 0.288453 (* 1 = 0.288453 loss)
I0428 19:37:31.053982 23827 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:31.281553 23827 solver.cpp:219] Iteration 400 (439.412 iter/s, 0.227577s/100 iters), loss = 0.160097
I0428 19:37:31.281579 23827 solver.cpp:238]     Train net output #0: loss = 0.160097 (* 1 = 0.160097 loss)
I0428 19:37:31.281585 23827 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:31.505936 23827 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:31.665626 23836 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:31.670433 23827 solver.cpp:398]     Test net output #0: accuracy = 0.947
I0428 19:37:31.670455 23827 solver.cpp:398]     Test net output #1: loss = 0.173407 (* 1 = 0.173407 loss)
I0428 19:37:31.672708 23827 solver.cpp:219] Iteration 500 (255.686 iter/s, 0.391104s/100 iters), loss = 0.296141
I0428 19:37:31.672729 23827 solver.cpp:238]     Train net output #0: loss = 0.296141 (* 1 = 0.296141 loss)
I0428 19:37:31.672739 23827 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:31.906038 23827 solver.cpp:219] Iteration 600 (428.65 iter/s, 0.233291s/100 iters), loss = 0.141341
I0428 19:37:31.906065 23827 solver.cpp:238]     Train net output #0: loss = 0.141341 (* 1 = 0.141341 loss)
I0428 19:37:31.906072 23827 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:32.137082 23827 solver.cpp:219] Iteration 700 (432.916 iter/s, 0.230992s/100 iters), loss = 0.413023
I0428 19:37:32.137126 23827 solver.cpp:238]     Train net output #0: loss = 0.413023 (* 1 = 0.413023 loss)
I0428 19:37:32.137133 23827 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:32.369510 23827 solver.cpp:219] Iteration 800 (430.355 iter/s, 0.232366s/100 iters), loss = 0.171544
I0428 19:37:32.369537 23827 solver.cpp:238]     Train net output #0: loss = 0.171544 (* 1 = 0.171544 loss)
I0428 19:37:32.369544 23827 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:32.603091 23827 solver.cpp:219] Iteration 900 (428.199 iter/s, 0.233537s/100 iters), loss = 0.160176
I0428 19:37:32.603116 23827 solver.cpp:238]     Train net output #0: loss = 0.160176 (* 1 = 0.160176 loss)
I0428 19:37:32.603122 23827 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:32.682636 23833 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:32.833762 23827 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:32.839047 23827 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:32.843055 23827 solver.cpp:311] Iteration 1000, loss = 0.117125
I0428 19:37:32.843070 23827 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:32.999786 23836 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:33.004259 23827 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0428 19:37:33.004277 23827 solver.cpp:398]     Test net output #1: loss = 0.112173 (* 1 = 0.112173 loss)
I0428 19:37:33.004282 23827 solver.cpp:316] Optimization Done.
I0428 19:37:33.004286 23827 caffe.cpp:259] Optimization Done.
