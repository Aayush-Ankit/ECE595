I0428 19:31:45.441732 22660 caffe.cpp:218] Using GPUs 0
I0428 19:31:45.473548 22660 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:45.981118 22660 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test132.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:45.981259 22660 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test132.prototxt
I0428 19:31:45.981626 22660 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:45.981643 22660 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:45.981730 22660 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:45.981804 22660 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:45.981904 22660 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:45.981928 22660 net.cpp:86] Creating Layer mnist
I0428 19:31:45.981936 22660 net.cpp:382] mnist -> data
I0428 19:31:45.981958 22660 net.cpp:382] mnist -> label
I0428 19:31:45.983047 22660 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:45.985507 22660 net.cpp:124] Setting up mnist
I0428 19:31:45.985525 22660 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:45.985533 22660 net.cpp:131] Top shape: 64 (64)
I0428 19:31:45.985538 22660 net.cpp:139] Memory required for data: 200960
I0428 19:31:45.985544 22660 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:45.985559 22660 net.cpp:86] Creating Layer conv0
I0428 19:31:45.985565 22660 net.cpp:408] conv0 <- data
I0428 19:31:45.985579 22660 net.cpp:382] conv0 -> conv0
I0428 19:31:46.238823 22660 net.cpp:124] Setting up conv0
I0428 19:31:46.238855 22660 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:46.238860 22660 net.cpp:139] Memory required for data: 1675520
I0428 19:31:46.238895 22660 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:46.238911 22660 net.cpp:86] Creating Layer pool0
I0428 19:31:46.238935 22660 net.cpp:408] pool0 <- conv0
I0428 19:31:46.238943 22660 net.cpp:382] pool0 -> pool0
I0428 19:31:46.239001 22660 net.cpp:124] Setting up pool0
I0428 19:31:46.239011 22660 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:46.239014 22660 net.cpp:139] Memory required for data: 2044160
I0428 19:31:46.239019 22660 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:46.239029 22660 net.cpp:86] Creating Layer ip1
I0428 19:31:46.239033 22660 net.cpp:408] ip1 <- pool0
I0428 19:31:46.239040 22660 net.cpp:382] ip1 -> ip1
I0428 19:31:46.240422 22660 net.cpp:124] Setting up ip1
I0428 19:31:46.240447 22660 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:46.240453 22660 net.cpp:139] Memory required for data: 2046720
I0428 19:31:46.240463 22660 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:46.240473 22660 net.cpp:86] Creating Layer relu1
I0428 19:31:46.240478 22660 net.cpp:408] relu1 <- ip1
I0428 19:31:46.240485 22660 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:46.240696 22660 net.cpp:124] Setting up relu1
I0428 19:31:46.240710 22660 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:46.240715 22660 net.cpp:139] Memory required for data: 2049280
I0428 19:31:46.240720 22660 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:46.240728 22660 net.cpp:86] Creating Layer ip2
I0428 19:31:46.240732 22660 net.cpp:408] ip2 <- ip1
I0428 19:31:46.240739 22660 net.cpp:382] ip2 -> ip2
I0428 19:31:46.240917 22660 net.cpp:124] Setting up ip2
I0428 19:31:46.240929 22660 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:46.240936 22660 net.cpp:139] Memory required for data: 2055680
I0428 19:31:46.240948 22660 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:46.240957 22660 net.cpp:86] Creating Layer relu2
I0428 19:31:46.240962 22660 net.cpp:408] relu2 <- ip2
I0428 19:31:46.240968 22660 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:46.241991 22660 net.cpp:124] Setting up relu2
I0428 19:31:46.242007 22660 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:46.242012 22660 net.cpp:139] Memory required for data: 2062080
I0428 19:31:46.242018 22660 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:46.242027 22660 net.cpp:86] Creating Layer ip3
I0428 19:31:46.242033 22660 net.cpp:408] ip3 <- ip2
I0428 19:31:46.242040 22660 net.cpp:382] ip3 -> ip3
I0428 19:31:46.242159 22660 net.cpp:124] Setting up ip3
I0428 19:31:46.242169 22660 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:46.242174 22660 net.cpp:139] Memory required for data: 2064640
I0428 19:31:46.242182 22660 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:46.242190 22660 net.cpp:86] Creating Layer relu3
I0428 19:31:46.242195 22660 net.cpp:408] relu3 <- ip3
I0428 19:31:46.242202 22660 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:46.242398 22660 net.cpp:124] Setting up relu3
I0428 19:31:46.242408 22660 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:46.242413 22660 net.cpp:139] Memory required for data: 2067200
I0428 19:31:46.242418 22660 layer_factory.hpp:77] Creating layer loss
I0428 19:31:46.242425 22660 net.cpp:86] Creating Layer loss
I0428 19:31:46.242429 22660 net.cpp:408] loss <- ip3
I0428 19:31:46.242435 22660 net.cpp:408] loss <- label
I0428 19:31:46.242442 22660 net.cpp:382] loss -> loss
I0428 19:31:46.242465 22660 layer_factory.hpp:77] Creating layer loss
I0428 19:31:46.242764 22660 net.cpp:124] Setting up loss
I0428 19:31:46.242775 22660 net.cpp:131] Top shape: (1)
I0428 19:31:46.242780 22660 net.cpp:134]     with loss weight 1
I0428 19:31:46.242799 22660 net.cpp:139] Memory required for data: 2067204
I0428 19:31:46.242804 22660 net.cpp:200] loss needs backward computation.
I0428 19:31:46.242808 22660 net.cpp:200] relu3 needs backward computation.
I0428 19:31:46.242813 22660 net.cpp:200] ip3 needs backward computation.
I0428 19:31:46.242817 22660 net.cpp:200] relu2 needs backward computation.
I0428 19:31:46.242821 22660 net.cpp:200] ip2 needs backward computation.
I0428 19:31:46.242841 22660 net.cpp:200] relu1 needs backward computation.
I0428 19:31:46.242844 22660 net.cpp:200] ip1 needs backward computation.
I0428 19:31:46.242861 22660 net.cpp:200] pool0 needs backward computation.
I0428 19:31:46.242866 22660 net.cpp:200] conv0 needs backward computation.
I0428 19:31:46.242871 22660 net.cpp:202] mnist does not need backward computation.
I0428 19:31:46.242877 22660 net.cpp:244] This network produces output loss
I0428 19:31:46.242887 22660 net.cpp:257] Network initialization done.
I0428 19:31:46.243278 22660 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test132.prototxt
I0428 19:31:46.243312 22660 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:46.243432 22660 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:46.243513 22660 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:46.243577 22660 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:46.243592 22660 net.cpp:86] Creating Layer mnist
I0428 19:31:46.243599 22660 net.cpp:382] mnist -> data
I0428 19:31:46.243608 22660 net.cpp:382] mnist -> label
I0428 19:31:46.243711 22660 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:46.246210 22660 net.cpp:124] Setting up mnist
I0428 19:31:46.246242 22660 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:46.246248 22660 net.cpp:131] Top shape: 100 (100)
I0428 19:31:46.246253 22660 net.cpp:139] Memory required for data: 314000
I0428 19:31:46.246258 22660 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:46.246270 22660 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:46.246290 22660 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:46.246297 22660 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:46.246306 22660 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:46.246389 22660 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:46.246399 22660 net.cpp:131] Top shape: 100 (100)
I0428 19:31:46.246405 22660 net.cpp:131] Top shape: 100 (100)
I0428 19:31:46.246410 22660 net.cpp:139] Memory required for data: 314800
I0428 19:31:46.246426 22660 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:46.246439 22660 net.cpp:86] Creating Layer conv0
I0428 19:31:46.246448 22660 net.cpp:408] conv0 <- data
I0428 19:31:46.246470 22660 net.cpp:382] conv0 -> conv0
I0428 19:31:46.248522 22660 net.cpp:124] Setting up conv0
I0428 19:31:46.248553 22660 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:46.248558 22660 net.cpp:139] Memory required for data: 2618800
I0428 19:31:46.248572 22660 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:46.248580 22660 net.cpp:86] Creating Layer pool0
I0428 19:31:46.248585 22660 net.cpp:408] pool0 <- conv0
I0428 19:31:46.248606 22660 net.cpp:382] pool0 -> pool0
I0428 19:31:46.248649 22660 net.cpp:124] Setting up pool0
I0428 19:31:46.248667 22660 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:46.248672 22660 net.cpp:139] Memory required for data: 3194800
I0428 19:31:46.248675 22660 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:46.248684 22660 net.cpp:86] Creating Layer ip1
I0428 19:31:46.248689 22660 net.cpp:408] ip1 <- pool0
I0428 19:31:46.248695 22660 net.cpp:382] ip1 -> ip1
I0428 19:31:46.249032 22660 net.cpp:124] Setting up ip1
I0428 19:31:46.249043 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.249063 22660 net.cpp:139] Memory required for data: 3198800
I0428 19:31:46.249074 22660 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:46.249083 22660 net.cpp:86] Creating Layer relu1
I0428 19:31:46.249088 22660 net.cpp:408] relu1 <- ip1
I0428 19:31:46.249094 22660 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:46.249342 22660 net.cpp:124] Setting up relu1
I0428 19:31:46.249354 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.249358 22660 net.cpp:139] Memory required for data: 3202800
I0428 19:31:46.249363 22660 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:46.249372 22660 net.cpp:86] Creating Layer ip2
I0428 19:31:46.249375 22660 net.cpp:408] ip2 <- ip1
I0428 19:31:46.249382 22660 net.cpp:382] ip2 -> ip2
I0428 19:31:46.249496 22660 net.cpp:124] Setting up ip2
I0428 19:31:46.249505 22660 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:46.249510 22660 net.cpp:139] Memory required for data: 3212800
I0428 19:31:46.249521 22660 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:46.249526 22660 net.cpp:86] Creating Layer relu2
I0428 19:31:46.249532 22660 net.cpp:408] relu2 <- ip2
I0428 19:31:46.249537 22660 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:46.250735 22660 net.cpp:124] Setting up relu2
I0428 19:31:46.250768 22660 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:46.250773 22660 net.cpp:139] Memory required for data: 3222800
I0428 19:31:46.250778 22660 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:46.250788 22660 net.cpp:86] Creating Layer ip3
I0428 19:31:46.250793 22660 net.cpp:408] ip3 <- ip2
I0428 19:31:46.250802 22660 net.cpp:382] ip3 -> ip3
I0428 19:31:46.250936 22660 net.cpp:124] Setting up ip3
I0428 19:31:46.250957 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.250962 22660 net.cpp:139] Memory required for data: 3226800
I0428 19:31:46.250972 22660 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:46.250994 22660 net.cpp:86] Creating Layer relu3
I0428 19:31:46.250999 22660 net.cpp:408] relu3 <- ip3
I0428 19:31:46.251005 22660 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:46.251225 22660 net.cpp:124] Setting up relu3
I0428 19:31:46.251241 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.251247 22660 net.cpp:139] Memory required for data: 3230800
I0428 19:31:46.251253 22660 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:46.251260 22660 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:46.251266 22660 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:46.251272 22660 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:46.251281 22660 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:46.251348 22660 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:46.251358 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.251364 22660 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:46.251381 22660 net.cpp:139] Memory required for data: 3238800
I0428 19:31:46.251387 22660 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:46.251394 22660 net.cpp:86] Creating Layer accuracy
I0428 19:31:46.251399 22660 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:46.251416 22660 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:46.251422 22660 net.cpp:382] accuracy -> accuracy
I0428 19:31:46.251432 22660 net.cpp:124] Setting up accuracy
I0428 19:31:46.251438 22660 net.cpp:131] Top shape: (1)
I0428 19:31:46.251442 22660 net.cpp:139] Memory required for data: 3238804
I0428 19:31:46.251446 22660 layer_factory.hpp:77] Creating layer loss
I0428 19:31:46.251453 22660 net.cpp:86] Creating Layer loss
I0428 19:31:46.251457 22660 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:46.251463 22660 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:46.251469 22660 net.cpp:382] loss -> loss
I0428 19:31:46.251477 22660 layer_factory.hpp:77] Creating layer loss
I0428 19:31:46.251859 22660 net.cpp:124] Setting up loss
I0428 19:31:46.251890 22660 net.cpp:131] Top shape: (1)
I0428 19:31:46.251895 22660 net.cpp:134]     with loss weight 1
I0428 19:31:46.251919 22660 net.cpp:139] Memory required for data: 3238808
I0428 19:31:46.251924 22660 net.cpp:200] loss needs backward computation.
I0428 19:31:46.251929 22660 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:46.251935 22660 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:46.251940 22660 net.cpp:200] relu3 needs backward computation.
I0428 19:31:46.251945 22660 net.cpp:200] ip3 needs backward computation.
I0428 19:31:46.251969 22660 net.cpp:200] relu2 needs backward computation.
I0428 19:31:46.251974 22660 net.cpp:200] ip2 needs backward computation.
I0428 19:31:46.251979 22660 net.cpp:200] relu1 needs backward computation.
I0428 19:31:46.251984 22660 net.cpp:200] ip1 needs backward computation.
I0428 19:31:46.251989 22660 net.cpp:200] pool0 needs backward computation.
I0428 19:31:46.251996 22660 net.cpp:200] conv0 needs backward computation.
I0428 19:31:46.252002 22660 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:46.252007 22660 net.cpp:202] mnist does not need backward computation.
I0428 19:31:46.252012 22660 net.cpp:244] This network produces output accuracy
I0428 19:31:46.252018 22660 net.cpp:244] This network produces output loss
I0428 19:31:46.252032 22660 net.cpp:257] Network initialization done.
I0428 19:31:46.252084 22660 solver.cpp:56] Solver scaffolding done.
I0428 19:31:46.252477 22660 caffe.cpp:248] Starting Optimization
I0428 19:31:46.252485 22660 solver.cpp:273] Solving LeNet
I0428 19:31:46.252506 22660 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:46.252665 22660 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:46.259127 22660 blocking_queue.cpp:49] Waiting for data
I0428 19:31:46.329109 22667 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:46.329730 22660 solver.cpp:398]     Test net output #0: accuracy = 0.1341
I0428 19:31:46.329766 22660 solver.cpp:398]     Test net output #1: loss = 2.3007 (* 1 = 2.3007 loss)
I0428 19:31:46.332732 22660 solver.cpp:219] Iteration 0 (-1.98501e-31 iter/s, 0.0801978s/100 iters), loss = 2.3074
I0428 19:31:46.332775 22660 solver.cpp:238]     Train net output #0: loss = 2.3074 (* 1 = 2.3074 loss)
I0428 19:31:46.332803 22660 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:46.398149 22660 solver.cpp:219] Iteration 100 (1529.87 iter/s, 0.065365s/100 iters), loss = 1.1205
I0428 19:31:46.398188 22660 solver.cpp:238]     Train net output #0: loss = 1.1205 (* 1 = 1.1205 loss)
I0428 19:31:46.398195 22660 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:46.459713 22660 solver.cpp:219] Iteration 200 (1625.14 iter/s, 0.0615333s/100 iters), loss = 0.911257
I0428 19:31:46.459750 22660 solver.cpp:238]     Train net output #0: loss = 0.911257 (* 1 = 0.911257 loss)
I0428 19:31:46.459756 22660 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:46.521812 22660 solver.cpp:219] Iteration 300 (1611.09 iter/s, 0.0620696s/100 iters), loss = 0.531965
I0428 19:31:46.521849 22660 solver.cpp:238]     Train net output #0: loss = 0.531965 (* 1 = 0.531965 loss)
I0428 19:31:46.521855 22660 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:46.584678 22660 solver.cpp:219] Iteration 400 (1591.81 iter/s, 0.0628214s/100 iters), loss = 0.439164
I0428 19:31:46.584717 22660 solver.cpp:238]     Train net output #0: loss = 0.439164 (* 1 = 0.439164 loss)
I0428 19:31:46.584722 22660 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:46.647243 22660 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:46.700573 22667 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:46.701120 22660 solver.cpp:398]     Test net output #0: accuracy = 0.8116
I0428 19:31:46.701170 22660 solver.cpp:398]     Test net output #1: loss = 0.53025 (* 1 = 0.53025 loss)
I0428 19:31:46.701864 22660 solver.cpp:219] Iteration 500 (853.587 iter/s, 0.117153s/100 iters), loss = 0.53809
I0428 19:31:46.701889 22660 solver.cpp:238]     Train net output #0: loss = 0.53809 (* 1 = 0.53809 loss)
I0428 19:31:46.701895 22660 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:46.764644 22660 solver.cpp:219] Iteration 600 (1593.71 iter/s, 0.0627466s/100 iters), loss = 0.622718
I0428 19:31:46.764683 22660 solver.cpp:238]     Train net output #0: loss = 0.622718 (* 1 = 0.622718 loss)
I0428 19:31:46.764688 22660 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:46.826314 22660 solver.cpp:219] Iteration 700 (1622.39 iter/s, 0.0616376s/100 iters), loss = 0.463627
I0428 19:31:46.826352 22660 solver.cpp:238]     Train net output #0: loss = 0.463627 (* 1 = 0.463627 loss)
I0428 19:31:46.826359 22660 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:46.894691 22660 solver.cpp:219] Iteration 800 (1463.19 iter/s, 0.0683438s/100 iters), loss = 0.420127
I0428 19:31:46.894719 22660 solver.cpp:238]     Train net output #0: loss = 0.420127 (* 1 = 0.420127 loss)
I0428 19:31:46.894727 22660 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:46.964836 22660 solver.cpp:219] Iteration 900 (1426.37 iter/s, 0.0701079s/100 iters), loss = 0.622106
I0428 19:31:46.964879 22660 solver.cpp:238]     Train net output #0: loss = 0.622106 (* 1 = 0.622106 loss)
I0428 19:31:46.964887 22660 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:46.989096 22666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:47.036504 22660 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:47.037474 22660 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:47.038166 22660 solver.cpp:311] Iteration 1000, loss = 0.46562
I0428 19:31:47.038183 22660 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:47.088225 22667 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:47.088783 22660 solver.cpp:398]     Test net output #0: accuracy = 0.83
I0428 19:31:47.088815 22660 solver.cpp:398]     Test net output #1: loss = 0.451136 (* 1 = 0.451136 loss)
I0428 19:31:47.088820 22660 solver.cpp:316] Optimization Done.
I0428 19:31:47.088840 22660 caffe.cpp:259] Optimization Done.
