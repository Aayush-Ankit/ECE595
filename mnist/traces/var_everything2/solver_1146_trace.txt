I0428 20:10:54.235067 31966 caffe.cpp:218] Using GPUs 0
I0428 20:10:54.271070 31966 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:54.726078 31966 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1146.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:54.726225 31966 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1146.prototxt
I0428 20:10:54.726586 31966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:54.726618 31966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:54.726694 31966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:54.726768 31966 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:54.726848 31966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:54.726867 31966 net.cpp:86] Creating Layer mnist
I0428 20:10:54.726873 31966 net.cpp:382] mnist -> data
I0428 20:10:54.726891 31966 net.cpp:382] mnist -> label
I0428 20:10:54.727865 31966 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:54.730108 31966 net.cpp:124] Setting up mnist
I0428 20:10:54.730154 31966 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:54.730159 31966 net.cpp:131] Top shape: 64 (64)
I0428 20:10:54.730161 31966 net.cpp:139] Memory required for data: 200960
I0428 20:10:54.730167 31966 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:54.730180 31966 net.cpp:86] Creating Layer conv0
I0428 20:10:54.730197 31966 net.cpp:408] conv0 <- data
I0428 20:10:54.730206 31966 net.cpp:382] conv0 -> conv0
I0428 20:10:54.961058 31966 net.cpp:124] Setting up conv0
I0428 20:10:54.961100 31966 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:54.961105 31966 net.cpp:139] Memory required for data: 3887360
I0428 20:10:54.961119 31966 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:54.961133 31966 net.cpp:86] Creating Layer pool0
I0428 20:10:54.961151 31966 net.cpp:408] pool0 <- conv0
I0428 20:10:54.961158 31966 net.cpp:382] pool0 -> pool0
I0428 20:10:54.961213 31966 net.cpp:124] Setting up pool0
I0428 20:10:54.961220 31966 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:54.961222 31966 net.cpp:139] Memory required for data: 4808960
I0428 20:10:54.961225 31966 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:54.961236 31966 net.cpp:86] Creating Layer conv1
I0428 20:10:54.961239 31966 net.cpp:408] conv1 <- pool0
I0428 20:10:54.961244 31966 net.cpp:382] conv1 -> conv1
I0428 20:10:54.963296 31966 net.cpp:124] Setting up conv1
I0428 20:10:54.963310 31966 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:54.963315 31966 net.cpp:139] Memory required for data: 5628160
I0428 20:10:54.963323 31966 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:54.963330 31966 net.cpp:86] Creating Layer pool1
I0428 20:10:54.963333 31966 net.cpp:408] pool1 <- conv1
I0428 20:10:54.963338 31966 net.cpp:382] pool1 -> pool1
I0428 20:10:54.963373 31966 net.cpp:124] Setting up pool1
I0428 20:10:54.963378 31966 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:54.963382 31966 net.cpp:139] Memory required for data: 5832960
I0428 20:10:54.963384 31966 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:54.963392 31966 net.cpp:86] Creating Layer ip1
I0428 20:10:54.963394 31966 net.cpp:408] ip1 <- pool1
I0428 20:10:54.963398 31966 net.cpp:382] ip1 -> ip1
I0428 20:10:54.964442 31966 net.cpp:124] Setting up ip1
I0428 20:10:54.964453 31966 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:54.964457 31966 net.cpp:139] Memory required for data: 5835520
I0428 20:10:54.964465 31966 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:54.964471 31966 net.cpp:86] Creating Layer relu1
I0428 20:10:54.964474 31966 net.cpp:408] relu1 <- ip1
I0428 20:10:54.964479 31966 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:54.964666 31966 net.cpp:124] Setting up relu1
I0428 20:10:54.964674 31966 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:54.964679 31966 net.cpp:139] Memory required for data: 5838080
I0428 20:10:54.964681 31966 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:54.964687 31966 net.cpp:86] Creating Layer ip2
I0428 20:10:54.964690 31966 net.cpp:408] ip2 <- ip1
I0428 20:10:54.964695 31966 net.cpp:382] ip2 -> ip2
I0428 20:10:54.964787 31966 net.cpp:124] Setting up ip2
I0428 20:10:54.964794 31966 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:54.964797 31966 net.cpp:139] Memory required for data: 5844480
I0428 20:10:54.964802 31966 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:54.964826 31966 net.cpp:86] Creating Layer relu2
I0428 20:10:54.964831 31966 net.cpp:408] relu2 <- ip2
I0428 20:10:54.964835 31966 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:54.965728 31966 net.cpp:124] Setting up relu2
I0428 20:10:54.965740 31966 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:54.965759 31966 net.cpp:139] Memory required for data: 5850880
I0428 20:10:54.965762 31966 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:54.965770 31966 net.cpp:86] Creating Layer ip3
I0428 20:10:54.965773 31966 net.cpp:408] ip3 <- ip2
I0428 20:10:54.965778 31966 net.cpp:382] ip3 -> ip3
I0428 20:10:54.965872 31966 net.cpp:124] Setting up ip3
I0428 20:10:54.965878 31966 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:54.965881 31966 net.cpp:139] Memory required for data: 5853440
I0428 20:10:54.965889 31966 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:54.965894 31966 net.cpp:86] Creating Layer relu3
I0428 20:10:54.965898 31966 net.cpp:408] relu3 <- ip3
I0428 20:10:54.965901 31966 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:54.966071 31966 net.cpp:124] Setting up relu3
I0428 20:10:54.966079 31966 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:54.966083 31966 net.cpp:139] Memory required for data: 5856000
I0428 20:10:54.966085 31966 layer_factory.hpp:77] Creating layer loss
I0428 20:10:54.966090 31966 net.cpp:86] Creating Layer loss
I0428 20:10:54.966094 31966 net.cpp:408] loss <- ip3
I0428 20:10:54.966097 31966 net.cpp:408] loss <- label
I0428 20:10:54.966102 31966 net.cpp:382] loss -> loss
I0428 20:10:54.966120 31966 layer_factory.hpp:77] Creating layer loss
I0428 20:10:54.966322 31966 net.cpp:124] Setting up loss
I0428 20:10:54.966331 31966 net.cpp:131] Top shape: (1)
I0428 20:10:54.966336 31966 net.cpp:134]     with loss weight 1
I0428 20:10:54.966365 31966 net.cpp:139] Memory required for data: 5856004
I0428 20:10:54.966368 31966 net.cpp:200] loss needs backward computation.
I0428 20:10:54.966372 31966 net.cpp:200] relu3 needs backward computation.
I0428 20:10:54.966375 31966 net.cpp:200] ip3 needs backward computation.
I0428 20:10:54.966377 31966 net.cpp:200] relu2 needs backward computation.
I0428 20:10:54.966380 31966 net.cpp:200] ip2 needs backward computation.
I0428 20:10:54.966383 31966 net.cpp:200] relu1 needs backward computation.
I0428 20:10:54.966385 31966 net.cpp:200] ip1 needs backward computation.
I0428 20:10:54.966388 31966 net.cpp:200] pool1 needs backward computation.
I0428 20:10:54.966392 31966 net.cpp:200] conv1 needs backward computation.
I0428 20:10:54.966394 31966 net.cpp:200] pool0 needs backward computation.
I0428 20:10:54.966398 31966 net.cpp:200] conv0 needs backward computation.
I0428 20:10:54.966400 31966 net.cpp:202] mnist does not need backward computation.
I0428 20:10:54.966403 31966 net.cpp:244] This network produces output loss
I0428 20:10:54.966411 31966 net.cpp:257] Network initialization done.
I0428 20:10:54.966821 31966 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1146.prototxt
I0428 20:10:54.966866 31966 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:54.966969 31966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:54.967044 31966 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:54.967087 31966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:54.967113 31966 net.cpp:86] Creating Layer mnist
I0428 20:10:54.967118 31966 net.cpp:382] mnist -> data
I0428 20:10:54.967125 31966 net.cpp:382] mnist -> label
I0428 20:10:54.967202 31966 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:54.969362 31966 net.cpp:124] Setting up mnist
I0428 20:10:54.969404 31966 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:54.969409 31966 net.cpp:131] Top shape: 100 (100)
I0428 20:10:54.969413 31966 net.cpp:139] Memory required for data: 314000
I0428 20:10:54.969416 31966 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:54.969437 31966 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:54.969441 31966 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:54.969446 31966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:54.969452 31966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:54.969501 31966 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:54.969506 31966 net.cpp:131] Top shape: 100 (100)
I0428 20:10:54.969509 31966 net.cpp:131] Top shape: 100 (100)
I0428 20:10:54.969512 31966 net.cpp:139] Memory required for data: 314800
I0428 20:10:54.969516 31966 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:54.969522 31966 net.cpp:86] Creating Layer conv0
I0428 20:10:54.969525 31966 net.cpp:408] conv0 <- data
I0428 20:10:54.969530 31966 net.cpp:382] conv0 -> conv0
I0428 20:10:54.971114 31966 net.cpp:124] Setting up conv0
I0428 20:10:54.971127 31966 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:54.971146 31966 net.cpp:139] Memory required for data: 6074800
I0428 20:10:54.971155 31966 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:54.971163 31966 net.cpp:86] Creating Layer pool0
I0428 20:10:54.971165 31966 net.cpp:408] pool0 <- conv0
I0428 20:10:54.971170 31966 net.cpp:382] pool0 -> pool0
I0428 20:10:54.971206 31966 net.cpp:124] Setting up pool0
I0428 20:10:54.971211 31966 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:54.971213 31966 net.cpp:139] Memory required for data: 7514800
I0428 20:10:54.971216 31966 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:54.971225 31966 net.cpp:86] Creating Layer conv1
I0428 20:10:54.971228 31966 net.cpp:408] conv1 <- pool0
I0428 20:10:54.971235 31966 net.cpp:382] conv1 -> conv1
I0428 20:10:54.973019 31966 net.cpp:124] Setting up conv1
I0428 20:10:54.973033 31966 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:54.973038 31966 net.cpp:139] Memory required for data: 8794800
I0428 20:10:54.973047 31966 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:54.973053 31966 net.cpp:86] Creating Layer pool1
I0428 20:10:54.973057 31966 net.cpp:408] pool1 <- conv1
I0428 20:10:54.973067 31966 net.cpp:382] pool1 -> pool1
I0428 20:10:54.973104 31966 net.cpp:124] Setting up pool1
I0428 20:10:54.973109 31966 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:54.973111 31966 net.cpp:139] Memory required for data: 9114800
I0428 20:10:54.973120 31966 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:54.973127 31966 net.cpp:86] Creating Layer ip1
I0428 20:10:54.973131 31966 net.cpp:408] ip1 <- pool1
I0428 20:10:54.973137 31966 net.cpp:382] ip1 -> ip1
I0428 20:10:54.973284 31966 net.cpp:124] Setting up ip1
I0428 20:10:54.973294 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.973322 31966 net.cpp:139] Memory required for data: 9118800
I0428 20:10:54.973330 31966 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:54.973336 31966 net.cpp:86] Creating Layer relu1
I0428 20:10:54.973340 31966 net.cpp:408] relu1 <- ip1
I0428 20:10:54.973345 31966 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:54.973520 31966 net.cpp:124] Setting up relu1
I0428 20:10:54.973527 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.973531 31966 net.cpp:139] Memory required for data: 9122800
I0428 20:10:54.973539 31966 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:54.973546 31966 net.cpp:86] Creating Layer ip2
I0428 20:10:54.973551 31966 net.cpp:408] ip2 <- ip1
I0428 20:10:54.973562 31966 net.cpp:382] ip2 -> ip2
I0428 20:10:54.973661 31966 net.cpp:124] Setting up ip2
I0428 20:10:54.973668 31966 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:54.973670 31966 net.cpp:139] Memory required for data: 9132800
I0428 20:10:54.973676 31966 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:54.973681 31966 net.cpp:86] Creating Layer relu2
I0428 20:10:54.973685 31966 net.cpp:408] relu2 <- ip2
I0428 20:10:54.973690 31966 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:54.973882 31966 net.cpp:124] Setting up relu2
I0428 20:10:54.973891 31966 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:54.973893 31966 net.cpp:139] Memory required for data: 9142800
I0428 20:10:54.973896 31966 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:54.973902 31966 net.cpp:86] Creating Layer ip3
I0428 20:10:54.973906 31966 net.cpp:408] ip3 <- ip2
I0428 20:10:54.973911 31966 net.cpp:382] ip3 -> ip3
I0428 20:10:54.974040 31966 net.cpp:124] Setting up ip3
I0428 20:10:54.974045 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.974048 31966 net.cpp:139] Memory required for data: 9146800
I0428 20:10:54.974056 31966 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:54.974061 31966 net.cpp:86] Creating Layer relu3
I0428 20:10:54.974062 31966 net.cpp:408] relu3 <- ip3
I0428 20:10:54.974067 31966 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:54.974866 31966 net.cpp:124] Setting up relu3
I0428 20:10:54.974879 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.974884 31966 net.cpp:139] Memory required for data: 9150800
I0428 20:10:54.974887 31966 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:54.974895 31966 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:54.974897 31966 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:54.974903 31966 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:54.974916 31966 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:54.974956 31966 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:54.974985 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.974989 31966 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:54.974992 31966 net.cpp:139] Memory required for data: 9158800
I0428 20:10:54.974994 31966 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:54.975000 31966 net.cpp:86] Creating Layer accuracy
I0428 20:10:54.975003 31966 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:54.975008 31966 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:54.975013 31966 net.cpp:382] accuracy -> accuracy
I0428 20:10:54.975019 31966 net.cpp:124] Setting up accuracy
I0428 20:10:54.975024 31966 net.cpp:131] Top shape: (1)
I0428 20:10:54.975028 31966 net.cpp:139] Memory required for data: 9158804
I0428 20:10:54.975029 31966 layer_factory.hpp:77] Creating layer loss
I0428 20:10:54.975034 31966 net.cpp:86] Creating Layer loss
I0428 20:10:54.975038 31966 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:54.975041 31966 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:54.975046 31966 net.cpp:382] loss -> loss
I0428 20:10:54.975059 31966 layer_factory.hpp:77] Creating layer loss
I0428 20:10:54.975291 31966 net.cpp:124] Setting up loss
I0428 20:10:54.975301 31966 net.cpp:131] Top shape: (1)
I0428 20:10:54.975303 31966 net.cpp:134]     with loss weight 1
I0428 20:10:54.975318 31966 net.cpp:139] Memory required for data: 9158808
I0428 20:10:54.975322 31966 net.cpp:200] loss needs backward computation.
I0428 20:10:54.975327 31966 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:54.975330 31966 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:54.975333 31966 net.cpp:200] relu3 needs backward computation.
I0428 20:10:54.975337 31966 net.cpp:200] ip3 needs backward computation.
I0428 20:10:54.975339 31966 net.cpp:200] relu2 needs backward computation.
I0428 20:10:54.975342 31966 net.cpp:200] ip2 needs backward computation.
I0428 20:10:54.975344 31966 net.cpp:200] relu1 needs backward computation.
I0428 20:10:54.975347 31966 net.cpp:200] ip1 needs backward computation.
I0428 20:10:54.975350 31966 net.cpp:200] pool1 needs backward computation.
I0428 20:10:54.975353 31966 net.cpp:200] conv1 needs backward computation.
I0428 20:10:54.975363 31966 net.cpp:200] pool0 needs backward computation.
I0428 20:10:54.975366 31966 net.cpp:200] conv0 needs backward computation.
I0428 20:10:54.975370 31966 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:54.975373 31966 net.cpp:202] mnist does not need backward computation.
I0428 20:10:54.975376 31966 net.cpp:244] This network produces output accuracy
I0428 20:10:54.975380 31966 net.cpp:244] This network produces output loss
I0428 20:10:54.975391 31966 net.cpp:257] Network initialization done.
I0428 20:10:54.975453 31966 solver.cpp:56] Solver scaffolding done.
I0428 20:10:54.975831 31966 caffe.cpp:248] Starting Optimization
I0428 20:10:54.975837 31966 solver.cpp:273] Solving LeNet
I0428 20:10:54.975839 31966 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:54.976629 31966 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:54.982518 31966 blocking_queue.cpp:49] Waiting for data
I0428 20:10:55.053412 31973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:55.054049 31966 solver.cpp:398]     Test net output #0: accuracy = 0.0925
I0428 20:10:55.054082 31966 solver.cpp:398]     Test net output #1: loss = 2.36434 (* 1 = 2.36434 loss)
I0428 20:10:55.057890 31966 solver.cpp:219] Iteration 0 (0 iter/s, 0.082005s/100 iters), loss = 2.41652
I0428 20:10:55.057929 31966 solver.cpp:238]     Train net output #0: loss = 2.41652 (* 1 = 2.41652 loss)
I0428 20:10:55.057940 31966 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:55.177695 31966 solver.cpp:219] Iteration 100 (835.069 iter/s, 0.119751s/100 iters), loss = 1.09367
I0428 20:10:55.177734 31966 solver.cpp:238]     Train net output #0: loss = 1.09367 (* 1 = 1.09367 loss)
I0428 20:10:55.177741 31966 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:55.295147 31966 solver.cpp:219] Iteration 200 (851.658 iter/s, 0.117418s/100 iters), loss = 0.56319
I0428 20:10:55.295186 31966 solver.cpp:238]     Train net output #0: loss = 0.56319 (* 1 = 0.56319 loss)
I0428 20:10:55.295192 31966 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:55.414392 31966 solver.cpp:219] Iteration 300 (838.849 iter/s, 0.119211s/100 iters), loss = 0.2344
I0428 20:10:55.414432 31966 solver.cpp:238]     Train net output #0: loss = 0.2344 (* 1 = 0.2344 loss)
I0428 20:10:55.414438 31966 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:55.532011 31966 solver.cpp:219] Iteration 400 (850.457 iter/s, 0.117584s/100 iters), loss = 0.11985
I0428 20:10:55.532065 31966 solver.cpp:238]     Train net output #0: loss = 0.11985 (* 1 = 0.11985 loss)
I0428 20:10:55.532071 31966 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:55.658174 31966 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:55.722965 31973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:55.725487 31966 solver.cpp:398]     Test net output #0: accuracy = 0.9599
I0428 20:10:55.725531 31966 solver.cpp:398]     Test net output #1: loss = 0.133496 (* 1 = 0.133496 loss)
I0428 20:10:55.727020 31966 solver.cpp:219] Iteration 500 (512.949 iter/s, 0.194951s/100 iters), loss = 0.18282
I0428 20:10:55.727066 31966 solver.cpp:238]     Train net output #0: loss = 0.18282 (* 1 = 0.18282 loss)
I0428 20:10:55.727108 31966 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:55.868981 31966 solver.cpp:219] Iteration 600 (704.707 iter/s, 0.141903s/100 iters), loss = 0.112106
I0428 20:10:55.869037 31966 solver.cpp:238]     Train net output #0: loss = 0.112106 (* 1 = 0.112106 loss)
I0428 20:10:55.869047 31966 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:56.000226 31966 solver.cpp:219] Iteration 700 (762.321 iter/s, 0.131178s/100 iters), loss = 0.131628
I0428 20:10:56.000260 31966 solver.cpp:238]     Train net output #0: loss = 0.131628 (* 1 = 0.131628 loss)
I0428 20:10:56.000268 31966 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:56.126896 31966 solver.cpp:219] Iteration 800 (789.741 iter/s, 0.126624s/100 iters), loss = 0.372682
I0428 20:10:56.126929 31966 solver.cpp:238]     Train net output #0: loss = 0.372682 (* 1 = 0.372682 loss)
I0428 20:10:56.126938 31966 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:56.261811 31966 solver.cpp:219] Iteration 900 (741.488 iter/s, 0.134864s/100 iters), loss = 0.163315
I0428 20:10:56.261863 31966 solver.cpp:238]     Train net output #0: loss = 0.163315 (* 1 = 0.163315 loss)
I0428 20:10:56.261878 31966 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:56.311067 31972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:56.403197 31966 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:56.404974 31966 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:56.406009 31966 solver.cpp:311] Iteration 1000, loss = 0.0979139
I0428 20:10:56.406033 31966 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:56.466902 31973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:56.468884 31966 solver.cpp:398]     Test net output #0: accuracy = 0.9775
I0428 20:10:56.468907 31966 solver.cpp:398]     Test net output #1: loss = 0.0732397 (* 1 = 0.0732397 loss)
I0428 20:10:56.468914 31966 solver.cpp:316] Optimization Done.
I0428 20:10:56.468917 31966 caffe.cpp:259] Optimization Done.
