I0428 20:05:01.079566 30515 caffe.cpp:218] Using GPUs 0
I0428 20:05:01.110694 30515 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:01.574669 30515 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test988.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:01.574795 30515 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test988.prototxt
I0428 20:05:01.575109 30515 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:01.575124 30515 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:01.575198 30515 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:01.575260 30515 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:01.575341 30515 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:01.575359 30515 net.cpp:86] Creating Layer mnist
I0428 20:05:01.575366 30515 net.cpp:382] mnist -> data
I0428 20:05:01.575384 30515 net.cpp:382] mnist -> label
I0428 20:05:01.576264 30515 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:01.578593 30515 net.cpp:124] Setting up mnist
I0428 20:05:01.578624 30515 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:01.578644 30515 net.cpp:131] Top shape: 64 (64)
I0428 20:05:01.578647 30515 net.cpp:139] Memory required for data: 200960
I0428 20:05:01.578652 30515 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:01.578666 30515 net.cpp:86] Creating Layer conv0
I0428 20:05:01.578683 30515 net.cpp:408] conv0 <- data
I0428 20:05:01.578693 30515 net.cpp:382] conv0 -> conv0
I0428 20:05:01.807572 30515 net.cpp:124] Setting up conv0
I0428 20:05:01.807600 30515 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:01.807602 30515 net.cpp:139] Memory required for data: 3887360
I0428 20:05:01.807617 30515 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:01.807646 30515 net.cpp:86] Creating Layer pool0
I0428 20:05:01.807649 30515 net.cpp:408] pool0 <- conv0
I0428 20:05:01.807654 30515 net.cpp:382] pool0 -> pool0
I0428 20:05:01.807696 30515 net.cpp:124] Setting up pool0
I0428 20:05:01.807710 30515 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:01.807713 30515 net.cpp:139] Memory required for data: 4808960
I0428 20:05:01.807715 30515 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:01.807725 30515 net.cpp:86] Creating Layer conv1
I0428 20:05:01.807729 30515 net.cpp:408] conv1 <- pool0
I0428 20:05:01.807732 30515 net.cpp:382] conv1 -> conv1
I0428 20:05:01.810570 30515 net.cpp:124] Setting up conv1
I0428 20:05:01.810583 30515 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:01.810586 30515 net.cpp:139] Memory required for data: 4841728
I0428 20:05:01.810595 30515 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:01.810617 30515 net.cpp:86] Creating Layer pool1
I0428 20:05:01.810621 30515 net.cpp:408] pool1 <- conv1
I0428 20:05:01.810626 30515 net.cpp:382] pool1 -> pool1
I0428 20:05:01.810660 30515 net.cpp:124] Setting up pool1
I0428 20:05:01.810667 30515 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:01.810669 30515 net.cpp:139] Memory required for data: 4849920
I0428 20:05:01.810672 30515 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:01.810679 30515 net.cpp:86] Creating Layer ip1
I0428 20:05:01.810683 30515 net.cpp:408] ip1 <- pool1
I0428 20:05:01.810686 30515 net.cpp:382] ip1 -> ip1
I0428 20:05:01.810775 30515 net.cpp:124] Setting up ip1
I0428 20:05:01.810781 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.810784 30515 net.cpp:139] Memory required for data: 4852480
I0428 20:05:01.810791 30515 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:01.810796 30515 net.cpp:86] Creating Layer relu1
I0428 20:05:01.810799 30515 net.cpp:408] relu1 <- ip1
I0428 20:05:01.810803 30515 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:01.810972 30515 net.cpp:124] Setting up relu1
I0428 20:05:01.810981 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.810984 30515 net.cpp:139] Memory required for data: 4855040
I0428 20:05:01.810987 30515 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:01.810993 30515 net.cpp:86] Creating Layer ip2
I0428 20:05:01.810997 30515 net.cpp:408] ip2 <- ip1
I0428 20:05:01.811002 30515 net.cpp:382] ip2 -> ip2
I0428 20:05:01.811108 30515 net.cpp:124] Setting up ip2
I0428 20:05:01.811115 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.811118 30515 net.cpp:139] Memory required for data: 4857600
I0428 20:05:01.811123 30515 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:01.811130 30515 net.cpp:86] Creating Layer relu2
I0428 20:05:01.811132 30515 net.cpp:408] relu2 <- ip2
I0428 20:05:01.811136 30515 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:01.811933 30515 net.cpp:124] Setting up relu2
I0428 20:05:01.811955 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.811959 30515 net.cpp:139] Memory required for data: 4860160
I0428 20:05:01.811961 30515 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:01.811969 30515 net.cpp:86] Creating Layer ip3
I0428 20:05:01.811972 30515 net.cpp:408] ip3 <- ip2
I0428 20:05:01.811978 30515 net.cpp:382] ip3 -> ip3
I0428 20:05:01.812070 30515 net.cpp:124] Setting up ip3
I0428 20:05:01.812077 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.812080 30515 net.cpp:139] Memory required for data: 4862720
I0428 20:05:01.812103 30515 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:01.812108 30515 net.cpp:86] Creating Layer relu3
I0428 20:05:01.812110 30515 net.cpp:408] relu3 <- ip3
I0428 20:05:01.812116 30515 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:01.812283 30515 net.cpp:124] Setting up relu3
I0428 20:05:01.812291 30515 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:01.812294 30515 net.cpp:139] Memory required for data: 4865280
I0428 20:05:01.812297 30515 layer_factory.hpp:77] Creating layer loss
I0428 20:05:01.812302 30515 net.cpp:86] Creating Layer loss
I0428 20:05:01.812305 30515 net.cpp:408] loss <- ip3
I0428 20:05:01.812309 30515 net.cpp:408] loss <- label
I0428 20:05:01.812315 30515 net.cpp:382] loss -> loss
I0428 20:05:01.812328 30515 layer_factory.hpp:77] Creating layer loss
I0428 20:05:01.812571 30515 net.cpp:124] Setting up loss
I0428 20:05:01.812578 30515 net.cpp:131] Top shape: (1)
I0428 20:05:01.812582 30515 net.cpp:134]     with loss weight 1
I0428 20:05:01.812594 30515 net.cpp:139] Memory required for data: 4865284
I0428 20:05:01.812597 30515 net.cpp:200] loss needs backward computation.
I0428 20:05:01.812600 30515 net.cpp:200] relu3 needs backward computation.
I0428 20:05:01.812603 30515 net.cpp:200] ip3 needs backward computation.
I0428 20:05:01.812605 30515 net.cpp:200] relu2 needs backward computation.
I0428 20:05:01.812608 30515 net.cpp:200] ip2 needs backward computation.
I0428 20:05:01.812610 30515 net.cpp:200] relu1 needs backward computation.
I0428 20:05:01.812613 30515 net.cpp:200] ip1 needs backward computation.
I0428 20:05:01.812615 30515 net.cpp:200] pool1 needs backward computation.
I0428 20:05:01.812629 30515 net.cpp:200] conv1 needs backward computation.
I0428 20:05:01.812631 30515 net.cpp:200] pool0 needs backward computation.
I0428 20:05:01.812634 30515 net.cpp:200] conv0 needs backward computation.
I0428 20:05:01.812638 30515 net.cpp:202] mnist does not need backward computation.
I0428 20:05:01.812640 30515 net.cpp:244] This network produces output loss
I0428 20:05:01.812649 30515 net.cpp:257] Network initialization done.
I0428 20:05:01.813057 30515 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test988.prototxt
I0428 20:05:01.813086 30515 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:01.813225 30515 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:01.813335 30515 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:01.813380 30515 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:01.813393 30515 net.cpp:86] Creating Layer mnist
I0428 20:05:01.813398 30515 net.cpp:382] mnist -> data
I0428 20:05:01.813405 30515 net.cpp:382] mnist -> label
I0428 20:05:01.813486 30515 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:01.815490 30515 net.cpp:124] Setting up mnist
I0428 20:05:01.815536 30515 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:01.815541 30515 net.cpp:131] Top shape: 100 (100)
I0428 20:05:01.815558 30515 net.cpp:139] Memory required for data: 314000
I0428 20:05:01.815562 30515 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:01.815583 30515 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:01.815587 30515 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:01.815593 30515 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:01.815598 30515 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:01.815645 30515 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:01.815650 30515 net.cpp:131] Top shape: 100 (100)
I0428 20:05:01.815654 30515 net.cpp:131] Top shape: 100 (100)
I0428 20:05:01.815657 30515 net.cpp:139] Memory required for data: 314800
I0428 20:05:01.815660 30515 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:01.815670 30515 net.cpp:86] Creating Layer conv0
I0428 20:05:01.815672 30515 net.cpp:408] conv0 <- data
I0428 20:05:01.815678 30515 net.cpp:382] conv0 -> conv0
I0428 20:05:01.817456 30515 net.cpp:124] Setting up conv0
I0428 20:05:01.817469 30515 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:01.817488 30515 net.cpp:139] Memory required for data: 6074800
I0428 20:05:01.817497 30515 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:01.817504 30515 net.cpp:86] Creating Layer pool0
I0428 20:05:01.817508 30515 net.cpp:408] pool0 <- conv0
I0428 20:05:01.817513 30515 net.cpp:382] pool0 -> pool0
I0428 20:05:01.817566 30515 net.cpp:124] Setting up pool0
I0428 20:05:01.817571 30515 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:01.817574 30515 net.cpp:139] Memory required for data: 7514800
I0428 20:05:01.817577 30515 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:01.817586 30515 net.cpp:86] Creating Layer conv1
I0428 20:05:01.817589 30515 net.cpp:408] conv1 <- pool0
I0428 20:05:01.817595 30515 net.cpp:382] conv1 -> conv1
I0428 20:05:01.819748 30515 net.cpp:124] Setting up conv1
I0428 20:05:01.819761 30515 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:01.819766 30515 net.cpp:139] Memory required for data: 7566000
I0428 20:05:01.819777 30515 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:01.819782 30515 net.cpp:86] Creating Layer pool1
I0428 20:05:01.819802 30515 net.cpp:408] pool1 <- conv1
I0428 20:05:01.819808 30515 net.cpp:382] pool1 -> pool1
I0428 20:05:01.819847 30515 net.cpp:124] Setting up pool1
I0428 20:05:01.819865 30515 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:01.819869 30515 net.cpp:139] Memory required for data: 7578800
I0428 20:05:01.819871 30515 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:01.819878 30515 net.cpp:86] Creating Layer ip1
I0428 20:05:01.819882 30515 net.cpp:408] ip1 <- pool1
I0428 20:05:01.819886 30515 net.cpp:382] ip1 -> ip1
I0428 20:05:01.820009 30515 net.cpp:124] Setting up ip1
I0428 20:05:01.820017 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.820030 30515 net.cpp:139] Memory required for data: 7582800
I0428 20:05:01.820039 30515 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:01.820044 30515 net.cpp:86] Creating Layer relu1
I0428 20:05:01.820049 30515 net.cpp:408] relu1 <- ip1
I0428 20:05:01.820052 30515 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:01.820341 30515 net.cpp:124] Setting up relu1
I0428 20:05:01.820351 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.820354 30515 net.cpp:139] Memory required for data: 7586800
I0428 20:05:01.820358 30515 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:01.820365 30515 net.cpp:86] Creating Layer ip2
I0428 20:05:01.820369 30515 net.cpp:408] ip2 <- ip1
I0428 20:05:01.820374 30515 net.cpp:382] ip2 -> ip2
I0428 20:05:01.820475 30515 net.cpp:124] Setting up ip2
I0428 20:05:01.820482 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.820485 30515 net.cpp:139] Memory required for data: 7590800
I0428 20:05:01.820490 30515 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:01.820495 30515 net.cpp:86] Creating Layer relu2
I0428 20:05:01.820498 30515 net.cpp:408] relu2 <- ip2
I0428 20:05:01.820502 30515 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:01.820659 30515 net.cpp:124] Setting up relu2
I0428 20:05:01.820667 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.820670 30515 net.cpp:139] Memory required for data: 7594800
I0428 20:05:01.820672 30515 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:01.820678 30515 net.cpp:86] Creating Layer ip3
I0428 20:05:01.820682 30515 net.cpp:408] ip3 <- ip2
I0428 20:05:01.820688 30515 net.cpp:382] ip3 -> ip3
I0428 20:05:01.820804 30515 net.cpp:124] Setting up ip3
I0428 20:05:01.820817 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.820821 30515 net.cpp:139] Memory required for data: 7598800
I0428 20:05:01.820843 30515 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:01.820849 30515 net.cpp:86] Creating Layer relu3
I0428 20:05:01.820852 30515 net.cpp:408] relu3 <- ip3
I0428 20:05:01.820857 30515 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:01.821722 30515 net.cpp:124] Setting up relu3
I0428 20:05:01.821734 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.821738 30515 net.cpp:139] Memory required for data: 7602800
I0428 20:05:01.821741 30515 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:01.821746 30515 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:01.821749 30515 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:01.821755 30515 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:01.821761 30515 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:01.821851 30515 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:01.821857 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.821861 30515 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:01.821869 30515 net.cpp:139] Memory required for data: 7610800
I0428 20:05:01.821872 30515 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:01.821877 30515 net.cpp:86] Creating Layer accuracy
I0428 20:05:01.821880 30515 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:01.821884 30515 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:01.821890 30515 net.cpp:382] accuracy -> accuracy
I0428 20:05:01.821902 30515 net.cpp:124] Setting up accuracy
I0428 20:05:01.821907 30515 net.cpp:131] Top shape: (1)
I0428 20:05:01.821909 30515 net.cpp:139] Memory required for data: 7610804
I0428 20:05:01.821913 30515 layer_factory.hpp:77] Creating layer loss
I0428 20:05:01.821918 30515 net.cpp:86] Creating Layer loss
I0428 20:05:01.821920 30515 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:01.821925 30515 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:01.821929 30515 net.cpp:382] loss -> loss
I0428 20:05:01.821935 30515 layer_factory.hpp:77] Creating layer loss
I0428 20:05:01.822211 30515 net.cpp:124] Setting up loss
I0428 20:05:01.822221 30515 net.cpp:131] Top shape: (1)
I0428 20:05:01.822224 30515 net.cpp:134]     with loss weight 1
I0428 20:05:01.822232 30515 net.cpp:139] Memory required for data: 7610808
I0428 20:05:01.822244 30515 net.cpp:200] loss needs backward computation.
I0428 20:05:01.822248 30515 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:01.822252 30515 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:01.822254 30515 net.cpp:200] relu3 needs backward computation.
I0428 20:05:01.822257 30515 net.cpp:200] ip3 needs backward computation.
I0428 20:05:01.822260 30515 net.cpp:200] relu2 needs backward computation.
I0428 20:05:01.822263 30515 net.cpp:200] ip2 needs backward computation.
I0428 20:05:01.822266 30515 net.cpp:200] relu1 needs backward computation.
I0428 20:05:01.822269 30515 net.cpp:200] ip1 needs backward computation.
I0428 20:05:01.822273 30515 net.cpp:200] pool1 needs backward computation.
I0428 20:05:01.822276 30515 net.cpp:200] conv1 needs backward computation.
I0428 20:05:01.822279 30515 net.cpp:200] pool0 needs backward computation.
I0428 20:05:01.822283 30515 net.cpp:200] conv0 needs backward computation.
I0428 20:05:01.822286 30515 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:01.822290 30515 net.cpp:202] mnist does not need backward computation.
I0428 20:05:01.822293 30515 net.cpp:244] This network produces output accuracy
I0428 20:05:01.822296 30515 net.cpp:244] This network produces output loss
I0428 20:05:01.822309 30515 net.cpp:257] Network initialization done.
I0428 20:05:01.822350 30515 solver.cpp:56] Solver scaffolding done.
I0428 20:05:01.822705 30515 caffe.cpp:248] Starting Optimization
I0428 20:05:01.822711 30515 solver.cpp:273] Solving LeNet
I0428 20:05:01.822715 30515 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:01.823593 30515 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:01.828598 30515 blocking_queue.cpp:49] Waiting for data
I0428 20:05:01.900223 30522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:01.900838 30515 solver.cpp:398]     Test net output #0: accuracy = 0.1027
I0428 20:05:01.900873 30515 solver.cpp:398]     Test net output #1: loss = 2.30631 (* 1 = 2.30631 loss)
I0428 20:05:01.903934 30515 solver.cpp:219] Iteration 0 (0 iter/s, 0.0811776s/100 iters), loss = 2.30358
I0428 20:05:01.903955 30515 solver.cpp:238]     Train net output #0: loss = 2.30358 (* 1 = 2.30358 loss)
I0428 20:05:01.903966 30515 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:02.006155 30515 solver.cpp:219] Iteration 100 (978.647 iter/s, 0.102182s/100 iters), loss = 1.31609
I0428 20:05:02.006196 30515 solver.cpp:238]     Train net output #0: loss = 1.31609 (* 1 = 1.31609 loss)
I0428 20:05:02.006206 30515 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:02.101042 30515 solver.cpp:219] Iteration 200 (1054.47 iter/s, 0.0948347s/100 iters), loss = 0.927813
I0428 20:05:02.101075 30515 solver.cpp:238]     Train net output #0: loss = 0.927813 (* 1 = 0.927813 loss)
I0428 20:05:02.101083 30515 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:02.193222 30515 solver.cpp:219] Iteration 300 (1085.33 iter/s, 0.0921375s/100 iters), loss = 0.918026
I0428 20:05:02.193253 30515 solver.cpp:238]     Train net output #0: loss = 0.918026 (* 1 = 0.918026 loss)
I0428 20:05:02.193260 30515 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:02.284801 30515 solver.cpp:219] Iteration 400 (1092.43 iter/s, 0.0915395s/100 iters), loss = 0.799381
I0428 20:05:02.284838 30515 solver.cpp:238]     Train net output #0: loss = 0.799381 (* 1 = 0.799381 loss)
I0428 20:05:02.284847 30515 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:02.375546 30515 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:02.433241 30522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:02.434768 30515 solver.cpp:398]     Test net output #0: accuracy = 0.786
I0428 20:05:02.434793 30515 solver.cpp:398]     Test net output #1: loss = 0.675065 (* 1 = 0.675065 loss)
I0428 20:05:02.435665 30515 solver.cpp:219] Iteration 500 (663.065 iter/s, 0.150815s/100 iters), loss = 0.639125
I0428 20:05:02.435693 30515 solver.cpp:238]     Train net output #0: loss = 0.639125 (* 1 = 0.639125 loss)
I0428 20:05:02.435719 30515 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:02.529006 30515 solver.cpp:219] Iteration 600 (1071.78 iter/s, 0.0933027s/100 iters), loss = 0.477552
I0428 20:05:02.529037 30515 solver.cpp:238]     Train net output #0: loss = 0.477552 (* 1 = 0.477552 loss)
I0428 20:05:02.529044 30515 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:02.621132 30515 solver.cpp:219] Iteration 700 (1085.95 iter/s, 0.0920851s/100 iters), loss = 0.274754
I0428 20:05:02.621163 30515 solver.cpp:238]     Train net output #0: loss = 0.274754 (* 1 = 0.274754 loss)
I0428 20:05:02.621170 30515 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:02.712913 30515 solver.cpp:219] Iteration 800 (1090.06 iter/s, 0.0917381s/100 iters), loss = 0.546497
I0428 20:05:02.712944 30515 solver.cpp:238]     Train net output #0: loss = 0.546497 (* 1 = 0.546497 loss)
I0428 20:05:02.712950 30515 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:02.802980 30515 solver.cpp:219] Iteration 900 (1110.75 iter/s, 0.0900291s/100 iters), loss = 0.732533
I0428 20:05:02.803005 30515 solver.cpp:238]     Train net output #0: loss = 0.732533 (* 1 = 0.732533 loss)
I0428 20:05:02.803011 30515 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:02.831835 30521 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:02.893635 30515 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:02.894394 30515 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:02.894987 30515 solver.cpp:311] Iteration 1000, loss = 0.326593
I0428 20:05:02.895004 30515 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:02.970041 30522 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:02.970657 30515 solver.cpp:398]     Test net output #0: accuracy = 0.9022
I0428 20:05:02.970693 30515 solver.cpp:398]     Test net output #1: loss = 0.345715 (* 1 = 0.345715 loss)
I0428 20:05:02.970698 30515 solver.cpp:316] Optimization Done.
I0428 20:05:02.970700 30515 caffe.cpp:259] Optimization Done.
