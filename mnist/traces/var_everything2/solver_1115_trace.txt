I0428 20:09:40.248522 31677 caffe.cpp:218] Using GPUs 0
I0428 20:09:40.286249 31677 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:40.793339 31677 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1115.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:40.793479 31677 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1115.prototxt
I0428 20:09:40.793877 31677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:40.793896 31677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:40.793993 31677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:40.794068 31677 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:40.794163 31677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:40.794186 31677 net.cpp:86] Creating Layer mnist
I0428 20:09:40.794194 31677 net.cpp:382] mnist -> data
I0428 20:09:40.794216 31677 net.cpp:382] mnist -> label
I0428 20:09:40.795298 31677 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:40.797742 31677 net.cpp:124] Setting up mnist
I0428 20:09:40.797767 31677 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:40.797782 31677 net.cpp:131] Top shape: 64 (64)
I0428 20:09:40.797785 31677 net.cpp:139] Memory required for data: 200960
I0428 20:09:40.797793 31677 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:40.797808 31677 net.cpp:86] Creating Layer conv0
I0428 20:09:40.797827 31677 net.cpp:408] conv0 <- data
I0428 20:09:40.797839 31677 net.cpp:382] conv0 -> conv0
I0428 20:09:41.079833 31677 net.cpp:124] Setting up conv0
I0428 20:09:41.079859 31677 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:41.079864 31677 net.cpp:139] Memory required for data: 3887360
I0428 20:09:41.079879 31677 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:41.079891 31677 net.cpp:86] Creating Layer pool0
I0428 20:09:41.079895 31677 net.cpp:408] pool0 <- conv0
I0428 20:09:41.079900 31677 net.cpp:382] pool0 -> pool0
I0428 20:09:41.079943 31677 net.cpp:124] Setting up pool0
I0428 20:09:41.079951 31677 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:41.079954 31677 net.cpp:139] Memory required for data: 4808960
I0428 20:09:41.079957 31677 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:41.079968 31677 net.cpp:86] Creating Layer conv1
I0428 20:09:41.079972 31677 net.cpp:408] conv1 <- pool0
I0428 20:09:41.079977 31677 net.cpp:382] conv1 -> conv1
I0428 20:09:41.082886 31677 net.cpp:124] Setting up conv1
I0428 20:09:41.082901 31677 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:41.082904 31677 net.cpp:139] Memory required for data: 5218560
I0428 20:09:41.082913 31677 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:41.082921 31677 net.cpp:86] Creating Layer pool1
I0428 20:09:41.082923 31677 net.cpp:408] pool1 <- conv1
I0428 20:09:41.082928 31677 net.cpp:382] pool1 -> pool1
I0428 20:09:41.082963 31677 net.cpp:124] Setting up pool1
I0428 20:09:41.082969 31677 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:41.082973 31677 net.cpp:139] Memory required for data: 5320960
I0428 20:09:41.082975 31677 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:41.082983 31677 net.cpp:86] Creating Layer ip1
I0428 20:09:41.082985 31677 net.cpp:408] ip1 <- pool1
I0428 20:09:41.082989 31677 net.cpp:382] ip1 -> ip1
I0428 20:09:41.083133 31677 net.cpp:124] Setting up ip1
I0428 20:09:41.083140 31677 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:41.083143 31677 net.cpp:139] Memory required for data: 5327360
I0428 20:09:41.083150 31677 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:41.083155 31677 net.cpp:86] Creating Layer relu1
I0428 20:09:41.083158 31677 net.cpp:408] relu1 <- ip1
I0428 20:09:41.083163 31677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:41.083314 31677 net.cpp:124] Setting up relu1
I0428 20:09:41.083326 31677 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:41.083330 31677 net.cpp:139] Memory required for data: 5333760
I0428 20:09:41.083335 31677 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:41.083344 31677 net.cpp:86] Creating Layer ip2
I0428 20:09:41.083348 31677 net.cpp:408] ip2 <- ip1
I0428 20:09:41.083353 31677 net.cpp:382] ip2 -> ip2
I0428 20:09:41.083441 31677 net.cpp:124] Setting up ip2
I0428 20:09:41.083448 31677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:41.083451 31677 net.cpp:139] Memory required for data: 5336320
I0428 20:09:41.083457 31677 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:41.083462 31677 net.cpp:86] Creating Layer relu2
I0428 20:09:41.083465 31677 net.cpp:408] relu2 <- ip2
I0428 20:09:41.083469 31677 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:41.084187 31677 net.cpp:124] Setting up relu2
I0428 20:09:41.084199 31677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:41.084203 31677 net.cpp:139] Memory required for data: 5338880
I0428 20:09:41.084206 31677 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:41.084225 31677 net.cpp:86] Creating Layer ip3
I0428 20:09:41.084228 31677 net.cpp:408] ip3 <- ip2
I0428 20:09:41.084233 31677 net.cpp:382] ip3 -> ip3
I0428 20:09:41.084338 31677 net.cpp:124] Setting up ip3
I0428 20:09:41.084345 31677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:41.084348 31677 net.cpp:139] Memory required for data: 5341440
I0428 20:09:41.084355 31677 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:41.084360 31677 net.cpp:86] Creating Layer relu3
I0428 20:09:41.084363 31677 net.cpp:408] relu3 <- ip3
I0428 20:09:41.084367 31677 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:41.084532 31677 net.cpp:124] Setting up relu3
I0428 20:09:41.084542 31677 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:41.084544 31677 net.cpp:139] Memory required for data: 5344000
I0428 20:09:41.084547 31677 layer_factory.hpp:77] Creating layer loss
I0428 20:09:41.084553 31677 net.cpp:86] Creating Layer loss
I0428 20:09:41.084555 31677 net.cpp:408] loss <- ip3
I0428 20:09:41.084559 31677 net.cpp:408] loss <- label
I0428 20:09:41.084564 31677 net.cpp:382] loss -> loss
I0428 20:09:41.084578 31677 layer_factory.hpp:77] Creating layer loss
I0428 20:09:41.084844 31677 net.cpp:124] Setting up loss
I0428 20:09:41.084853 31677 net.cpp:131] Top shape: (1)
I0428 20:09:41.084857 31677 net.cpp:134]     with loss weight 1
I0428 20:09:41.084887 31677 net.cpp:139] Memory required for data: 5344004
I0428 20:09:41.084892 31677 net.cpp:200] loss needs backward computation.
I0428 20:09:41.084895 31677 net.cpp:200] relu3 needs backward computation.
I0428 20:09:41.084898 31677 net.cpp:200] ip3 needs backward computation.
I0428 20:09:41.084902 31677 net.cpp:200] relu2 needs backward computation.
I0428 20:09:41.084904 31677 net.cpp:200] ip2 needs backward computation.
I0428 20:09:41.084908 31677 net.cpp:200] relu1 needs backward computation.
I0428 20:09:41.084911 31677 net.cpp:200] ip1 needs backward computation.
I0428 20:09:41.084914 31677 net.cpp:200] pool1 needs backward computation.
I0428 20:09:41.084918 31677 net.cpp:200] conv1 needs backward computation.
I0428 20:09:41.084921 31677 net.cpp:200] pool0 needs backward computation.
I0428 20:09:41.084924 31677 net.cpp:200] conv0 needs backward computation.
I0428 20:09:41.084928 31677 net.cpp:202] mnist does not need backward computation.
I0428 20:09:41.084931 31677 net.cpp:244] This network produces output loss
I0428 20:09:41.084940 31677 net.cpp:257] Network initialization done.
I0428 20:09:41.085316 31677 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1115.prototxt
I0428 20:09:41.085342 31677 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:41.085429 31677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:41.085505 31677 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:41.085546 31677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:41.085556 31677 net.cpp:86] Creating Layer mnist
I0428 20:09:41.085561 31677 net.cpp:382] mnist -> data
I0428 20:09:41.085568 31677 net.cpp:382] mnist -> label
I0428 20:09:41.085645 31677 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:41.087636 31677 net.cpp:124] Setting up mnist
I0428 20:09:41.087666 31677 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:41.087671 31677 net.cpp:131] Top shape: 100 (100)
I0428 20:09:41.087673 31677 net.cpp:139] Memory required for data: 314000
I0428 20:09:41.087677 31677 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:41.087683 31677 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:41.087687 31677 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:41.087692 31677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:41.087698 31677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:41.087806 31677 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:41.087815 31677 net.cpp:131] Top shape: 100 (100)
I0428 20:09:41.087818 31677 net.cpp:131] Top shape: 100 (100)
I0428 20:09:41.087821 31677 net.cpp:139] Memory required for data: 314800
I0428 20:09:41.087824 31677 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:41.087833 31677 net.cpp:86] Creating Layer conv0
I0428 20:09:41.087837 31677 net.cpp:408] conv0 <- data
I0428 20:09:41.087842 31677 net.cpp:382] conv0 -> conv0
I0428 20:09:41.089499 31677 net.cpp:124] Setting up conv0
I0428 20:09:41.089529 31677 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:41.089532 31677 net.cpp:139] Memory required for data: 6074800
I0428 20:09:41.089541 31677 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:41.089550 31677 net.cpp:86] Creating Layer pool0
I0428 20:09:41.089552 31677 net.cpp:408] pool0 <- conv0
I0428 20:09:41.089557 31677 net.cpp:382] pool0 -> pool0
I0428 20:09:41.089607 31677 net.cpp:124] Setting up pool0
I0428 20:09:41.089613 31677 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:41.089617 31677 net.cpp:139] Memory required for data: 7514800
I0428 20:09:41.089619 31677 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:41.089627 31677 net.cpp:86] Creating Layer conv1
I0428 20:09:41.089630 31677 net.cpp:408] conv1 <- pool0
I0428 20:09:41.089635 31677 net.cpp:382] conv1 -> conv1
I0428 20:09:41.091868 31677 net.cpp:124] Setting up conv1
I0428 20:09:41.091897 31677 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:41.091902 31677 net.cpp:139] Memory required for data: 8154800
I0428 20:09:41.091909 31677 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:41.091918 31677 net.cpp:86] Creating Layer pool1
I0428 20:09:41.091922 31677 net.cpp:408] pool1 <- conv1
I0428 20:09:41.091927 31677 net.cpp:382] pool1 -> pool1
I0428 20:09:41.091979 31677 net.cpp:124] Setting up pool1
I0428 20:09:41.091998 31677 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:41.092001 31677 net.cpp:139] Memory required for data: 8314800
I0428 20:09:41.092005 31677 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:41.092010 31677 net.cpp:86] Creating Layer ip1
I0428 20:09:41.092013 31677 net.cpp:408] ip1 <- pool1
I0428 20:09:41.092017 31677 net.cpp:382] ip1 -> ip1
I0428 20:09:41.092219 31677 net.cpp:124] Setting up ip1
I0428 20:09:41.092227 31677 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:41.092242 31677 net.cpp:139] Memory required for data: 8324800
I0428 20:09:41.092249 31677 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:41.092255 31677 net.cpp:86] Creating Layer relu1
I0428 20:09:41.092259 31677 net.cpp:408] relu1 <- ip1
I0428 20:09:41.092268 31677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:41.092466 31677 net.cpp:124] Setting up relu1
I0428 20:09:41.092474 31677 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:41.092478 31677 net.cpp:139] Memory required for data: 8334800
I0428 20:09:41.092483 31677 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:41.092489 31677 net.cpp:86] Creating Layer ip2
I0428 20:09:41.092492 31677 net.cpp:408] ip2 <- ip1
I0428 20:09:41.092497 31677 net.cpp:382] ip2 -> ip2
I0428 20:09:41.092607 31677 net.cpp:124] Setting up ip2
I0428 20:09:41.092613 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.092617 31677 net.cpp:139] Memory required for data: 8338800
I0428 20:09:41.092622 31677 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:41.092628 31677 net.cpp:86] Creating Layer relu2
I0428 20:09:41.092630 31677 net.cpp:408] relu2 <- ip2
I0428 20:09:41.092635 31677 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:41.092772 31677 net.cpp:124] Setting up relu2
I0428 20:09:41.092780 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.092783 31677 net.cpp:139] Memory required for data: 8342800
I0428 20:09:41.092787 31677 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:41.092806 31677 net.cpp:86] Creating Layer ip3
I0428 20:09:41.092816 31677 net.cpp:408] ip3 <- ip2
I0428 20:09:41.092838 31677 net.cpp:382] ip3 -> ip3
I0428 20:09:41.092963 31677 net.cpp:124] Setting up ip3
I0428 20:09:41.092970 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.092973 31677 net.cpp:139] Memory required for data: 8346800
I0428 20:09:41.092981 31677 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:41.092986 31677 net.cpp:86] Creating Layer relu3
I0428 20:09:41.092989 31677 net.cpp:408] relu3 <- ip3
I0428 20:09:41.092993 31677 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:41.093832 31677 net.cpp:124] Setting up relu3
I0428 20:09:41.093844 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.093863 31677 net.cpp:139] Memory required for data: 8350800
I0428 20:09:41.093866 31677 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:41.093871 31677 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:41.093875 31677 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:41.093880 31677 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:41.093888 31677 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:41.093927 31677 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:41.093932 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.093936 31677 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:41.093940 31677 net.cpp:139] Memory required for data: 8358800
I0428 20:09:41.093942 31677 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:41.093946 31677 net.cpp:86] Creating Layer accuracy
I0428 20:09:41.093950 31677 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:41.093955 31677 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:41.093958 31677 net.cpp:382] accuracy -> accuracy
I0428 20:09:41.093966 31677 net.cpp:124] Setting up accuracy
I0428 20:09:41.093969 31677 net.cpp:131] Top shape: (1)
I0428 20:09:41.093972 31677 net.cpp:139] Memory required for data: 8358804
I0428 20:09:41.093974 31677 layer_factory.hpp:77] Creating layer loss
I0428 20:09:41.093979 31677 net.cpp:86] Creating Layer loss
I0428 20:09:41.093982 31677 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:41.093992 31677 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:41.093997 31677 net.cpp:382] loss -> loss
I0428 20:09:41.094003 31677 layer_factory.hpp:77] Creating layer loss
I0428 20:09:41.094251 31677 net.cpp:124] Setting up loss
I0428 20:09:41.094260 31677 net.cpp:131] Top shape: (1)
I0428 20:09:41.094264 31677 net.cpp:134]     with loss weight 1
I0428 20:09:41.094316 31677 net.cpp:139] Memory required for data: 8358808
I0428 20:09:41.094321 31677 net.cpp:200] loss needs backward computation.
I0428 20:09:41.094326 31677 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:41.094329 31677 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:41.094332 31677 net.cpp:200] relu3 needs backward computation.
I0428 20:09:41.094336 31677 net.cpp:200] ip3 needs backward computation.
I0428 20:09:41.094341 31677 net.cpp:200] relu2 needs backward computation.
I0428 20:09:41.094343 31677 net.cpp:200] ip2 needs backward computation.
I0428 20:09:41.094352 31677 net.cpp:200] relu1 needs backward computation.
I0428 20:09:41.094355 31677 net.cpp:200] ip1 needs backward computation.
I0428 20:09:41.094359 31677 net.cpp:200] pool1 needs backward computation.
I0428 20:09:41.094363 31677 net.cpp:200] conv1 needs backward computation.
I0428 20:09:41.094367 31677 net.cpp:200] pool0 needs backward computation.
I0428 20:09:41.094369 31677 net.cpp:200] conv0 needs backward computation.
I0428 20:09:41.094373 31677 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:41.094378 31677 net.cpp:202] mnist does not need backward computation.
I0428 20:09:41.094382 31677 net.cpp:244] This network produces output accuracy
I0428 20:09:41.094385 31677 net.cpp:244] This network produces output loss
I0428 20:09:41.094395 31677 net.cpp:257] Network initialization done.
I0428 20:09:41.094437 31677 solver.cpp:56] Solver scaffolding done.
I0428 20:09:41.094770 31677 caffe.cpp:248] Starting Optimization
I0428 20:09:41.094776 31677 solver.cpp:273] Solving LeNet
I0428 20:09:41.094779 31677 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:41.095564 31677 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:41.101426 31677 blocking_queue.cpp:49] Waiting for data
I0428 20:09:41.171939 31684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:41.172586 31677 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 20:09:41.172621 31677 solver.cpp:398]     Test net output #1: loss = 2.38784 (* 1 = 2.38784 loss)
I0428 20:09:41.176242 31677 solver.cpp:219] Iteration 0 (-7.89356e-39 iter/s, 0.0814397s/100 iters), loss = 2.35645
I0428 20:09:41.176280 31677 solver.cpp:238]     Train net output #0: loss = 2.35645 (* 1 = 2.35645 loss)
I0428 20:09:41.176291 31677 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:41.277237 31677 solver.cpp:219] Iteration 100 (990.479 iter/s, 0.100961s/100 iters), loss = 0.678859
I0428 20:09:41.277276 31677 solver.cpp:238]     Train net output #0: loss = 0.678859 (* 1 = 0.678859 loss)
I0428 20:09:41.277282 31677 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:41.380880 31677 solver.cpp:219] Iteration 200 (965.173 iter/s, 0.103608s/100 iters), loss = 0.318909
I0428 20:09:41.380919 31677 solver.cpp:238]     Train net output #0: loss = 0.318909 (* 1 = 0.318909 loss)
I0428 20:09:41.380925 31677 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:41.486781 31677 solver.cpp:219] Iteration 300 (944.597 iter/s, 0.105865s/100 iters), loss = 0.482618
I0428 20:09:41.486815 31677 solver.cpp:238]     Train net output #0: loss = 0.482618 (* 1 = 0.482618 loss)
I0428 20:09:41.486824 31677 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:41.588918 31677 solver.cpp:219] Iteration 400 (979.491 iter/s, 0.102094s/100 iters), loss = 0.299069
I0428 20:09:41.588943 31677 solver.cpp:238]     Train net output #0: loss = 0.299069 (* 1 = 0.299069 loss)
I0428 20:09:41.588949 31677 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:41.688160 31677 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:41.745136 31684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:41.745821 31677 solver.cpp:398]     Test net output #0: accuracy = 0.8658
I0428 20:09:41.745856 31677 solver.cpp:398]     Test net output #1: loss = 0.349278 (* 1 = 0.349278 loss)
I0428 20:09:41.746825 31677 solver.cpp:219] Iteration 500 (633.432 iter/s, 0.15787s/100 iters), loss = 0.276425
I0428 20:09:41.746883 31677 solver.cpp:238]     Train net output #0: loss = 0.276425 (* 1 = 0.276425 loss)
I0428 20:09:41.746891 31677 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:41.846252 31677 solver.cpp:219] Iteration 600 (1006.44 iter/s, 0.0993599s/100 iters), loss = 0.3172
I0428 20:09:41.846292 31677 solver.cpp:238]     Train net output #0: loss = 0.3172 (* 1 = 0.3172 loss)
I0428 20:09:41.846297 31677 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:41.945237 31677 solver.cpp:219] Iteration 700 (1010.76 iter/s, 0.0989357s/100 iters), loss = 0.456931
I0428 20:09:41.945262 31677 solver.cpp:238]     Train net output #0: loss = 0.456932 (* 1 = 0.456932 loss)
I0428 20:09:41.945268 31677 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:42.051570 31677 solver.cpp:219] Iteration 800 (940.775 iter/s, 0.106295s/100 iters), loss = 0.45676
I0428 20:09:42.051605 31677 solver.cpp:238]     Train net output #0: loss = 0.45676 (* 1 = 0.45676 loss)
I0428 20:09:42.051614 31677 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:42.165727 31677 solver.cpp:219] Iteration 900 (876.358 iter/s, 0.114109s/100 iters), loss = 0.398285
I0428 20:09:42.165771 31677 solver.cpp:238]     Train net output #0: loss = 0.398285 (* 1 = 0.398285 loss)
I0428 20:09:42.165781 31677 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:42.202880 31683 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:42.271689 31677 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:42.272876 31677 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:42.273646 31677 solver.cpp:311] Iteration 1000, loss = 0.355159
I0428 20:09:42.273663 31677 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:42.335794 31684 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:42.338197 31677 solver.cpp:398]     Test net output #0: accuracy = 0.8786
I0428 20:09:42.338234 31677 solver.cpp:398]     Test net output #1: loss = 0.304493 (* 1 = 0.304493 loss)
I0428 20:09:42.338255 31677 solver.cpp:316] Optimization Done.
I0428 20:09:42.338260 31677 caffe.cpp:259] Optimization Done.
