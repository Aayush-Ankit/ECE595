I0428 20:28:00.594739  3279 caffe.cpp:218] Using GPUs 0
I0428 20:28:00.628248  3279 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:01.144472  3279 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1498.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:01.144613  3279 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1498.prototxt
I0428 20:28:01.145031  3279 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:01.145052  3279 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:01.145154  3279 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:01.145234  3279 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:01.145332  3279 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:01.145356  3279 net.cpp:86] Creating Layer mnist
I0428 20:28:01.145365  3279 net.cpp:382] mnist -> data
I0428 20:28:01.145387  3279 net.cpp:382] mnist -> label
I0428 20:28:01.146523  3279 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:01.149128  3279 net.cpp:124] Setting up mnist
I0428 20:28:01.149147  3279 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:01.149153  3279 net.cpp:131] Top shape: 64 (64)
I0428 20:28:01.149157  3279 net.cpp:139] Memory required for data: 200960
I0428 20:28:01.149163  3279 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:01.149212  3279 net.cpp:86] Creating Layer conv0
I0428 20:28:01.149233  3279 net.cpp:408] conv0 <- data
I0428 20:28:01.149247  3279 net.cpp:382] conv0 -> conv0
I0428 20:28:01.395573  3279 net.cpp:124] Setting up conv0
I0428 20:28:01.395614  3279 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:01.395618  3279 net.cpp:139] Memory required for data: 14946560
I0428 20:28:01.395633  3279 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:01.395645  3279 net.cpp:86] Creating Layer pool0
I0428 20:28:01.395649  3279 net.cpp:408] pool0 <- conv0
I0428 20:28:01.395654  3279 net.cpp:382] pool0 -> pool0
I0428 20:28:01.395699  3279 net.cpp:124] Setting up pool0
I0428 20:28:01.395704  3279 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:01.395705  3279 net.cpp:139] Memory required for data: 18632960
I0428 20:28:01.395709  3279 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:01.395720  3279 net.cpp:86] Creating Layer conv1
I0428 20:28:01.395722  3279 net.cpp:408] conv1 <- pool0
I0428 20:28:01.395726  3279 net.cpp:382] conv1 -> conv1
I0428 20:28:01.398519  3279 net.cpp:124] Setting up conv1
I0428 20:28:01.398548  3279 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:01.398552  3279 net.cpp:139] Memory required for data: 18714880
I0428 20:28:01.398574  3279 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:01.398582  3279 net.cpp:86] Creating Layer pool1
I0428 20:28:01.398586  3279 net.cpp:408] pool1 <- conv1
I0428 20:28:01.398591  3279 net.cpp:382] pool1 -> pool1
I0428 20:28:01.398623  3279 net.cpp:124] Setting up pool1
I0428 20:28:01.398628  3279 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:01.398632  3279 net.cpp:139] Memory required for data: 18735360
I0428 20:28:01.398634  3279 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:01.398640  3279 net.cpp:86] Creating Layer ip1
I0428 20:28:01.398644  3279 net.cpp:408] ip1 <- pool1
I0428 20:28:01.398651  3279 net.cpp:382] ip1 -> ip1
I0428 20:28:01.398743  3279 net.cpp:124] Setting up ip1
I0428 20:28:01.398751  3279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:01.398753  3279 net.cpp:139] Memory required for data: 18737920
I0428 20:28:01.398761  3279 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:01.398766  3279 net.cpp:86] Creating Layer relu1
I0428 20:28:01.398768  3279 net.cpp:408] relu1 <- ip1
I0428 20:28:01.398772  3279 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:01.398918  3279 net.cpp:124] Setting up relu1
I0428 20:28:01.398926  3279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:01.398929  3279 net.cpp:139] Memory required for data: 18740480
I0428 20:28:01.398932  3279 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:01.398937  3279 net.cpp:86] Creating Layer ip2
I0428 20:28:01.398941  3279 net.cpp:408] ip2 <- ip1
I0428 20:28:01.398944  3279 net.cpp:382] ip2 -> ip2
I0428 20:28:01.399027  3279 net.cpp:124] Setting up ip2
I0428 20:28:01.399034  3279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:01.399052  3279 net.cpp:139] Memory required for data: 18746880
I0428 20:28:01.399058  3279 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:01.399063  3279 net.cpp:86] Creating Layer relu2
I0428 20:28:01.399066  3279 net.cpp:408] relu2 <- ip2
I0428 20:28:01.399070  3279 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:01.399837  3279 net.cpp:124] Setting up relu2
I0428 20:28:01.399850  3279 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:01.399869  3279 net.cpp:139] Memory required for data: 18753280
I0428 20:28:01.399873  3279 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:01.399879  3279 net.cpp:86] Creating Layer ip3
I0428 20:28:01.399884  3279 net.cpp:408] ip3 <- ip2
I0428 20:28:01.399889  3279 net.cpp:382] ip3 -> ip3
I0428 20:28:01.399981  3279 net.cpp:124] Setting up ip3
I0428 20:28:01.399988  3279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:01.399991  3279 net.cpp:139] Memory required for data: 18755840
I0428 20:28:01.399998  3279 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:01.400003  3279 net.cpp:86] Creating Layer relu3
I0428 20:28:01.400005  3279 net.cpp:408] relu3 <- ip3
I0428 20:28:01.400009  3279 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:01.400177  3279 net.cpp:124] Setting up relu3
I0428 20:28:01.400185  3279 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:01.400189  3279 net.cpp:139] Memory required for data: 18758400
I0428 20:28:01.400192  3279 layer_factory.hpp:77] Creating layer loss
I0428 20:28:01.400202  3279 net.cpp:86] Creating Layer loss
I0428 20:28:01.400207  3279 net.cpp:408] loss <- ip3
I0428 20:28:01.400210  3279 net.cpp:408] loss <- label
I0428 20:28:01.400215  3279 net.cpp:382] loss -> loss
I0428 20:28:01.400233  3279 layer_factory.hpp:77] Creating layer loss
I0428 20:28:01.400465  3279 net.cpp:124] Setting up loss
I0428 20:28:01.400473  3279 net.cpp:131] Top shape: (1)
I0428 20:28:01.400476  3279 net.cpp:134]     with loss weight 1
I0428 20:28:01.400490  3279 net.cpp:139] Memory required for data: 18758404
I0428 20:28:01.400493  3279 net.cpp:200] loss needs backward computation.
I0428 20:28:01.400497  3279 net.cpp:200] relu3 needs backward computation.
I0428 20:28:01.400501  3279 net.cpp:200] ip3 needs backward computation.
I0428 20:28:01.400503  3279 net.cpp:200] relu2 needs backward computation.
I0428 20:28:01.400506  3279 net.cpp:200] ip2 needs backward computation.
I0428 20:28:01.400509  3279 net.cpp:200] relu1 needs backward computation.
I0428 20:28:01.400512  3279 net.cpp:200] ip1 needs backward computation.
I0428 20:28:01.400516  3279 net.cpp:200] pool1 needs backward computation.
I0428 20:28:01.400518  3279 net.cpp:200] conv1 needs backward computation.
I0428 20:28:01.400521  3279 net.cpp:200] pool0 needs backward computation.
I0428 20:28:01.400524  3279 net.cpp:200] conv0 needs backward computation.
I0428 20:28:01.400527  3279 net.cpp:202] mnist does not need backward computation.
I0428 20:28:01.400530  3279 net.cpp:244] This network produces output loss
I0428 20:28:01.400538  3279 net.cpp:257] Network initialization done.
I0428 20:28:01.400885  3279 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1498.prototxt
I0428 20:28:01.400957  3279 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:01.401059  3279 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:01.401144  3279 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:01.401198  3279 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:01.401226  3279 net.cpp:86] Creating Layer mnist
I0428 20:28:01.401229  3279 net.cpp:382] mnist -> data
I0428 20:28:01.401248  3279 net.cpp:382] mnist -> label
I0428 20:28:01.401331  3279 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:01.403261  3279 net.cpp:124] Setting up mnist
I0428 20:28:01.403306  3279 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:01.403311  3279 net.cpp:131] Top shape: 100 (100)
I0428 20:28:01.403328  3279 net.cpp:139] Memory required for data: 314000
I0428 20:28:01.403332  3279 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:01.403355  3279 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:01.403359  3279 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:01.403364  3279 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:01.403370  3279 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:01.403426  3279 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:01.403441  3279 net.cpp:131] Top shape: 100 (100)
I0428 20:28:01.403445  3279 net.cpp:131] Top shape: 100 (100)
I0428 20:28:01.403448  3279 net.cpp:139] Memory required for data: 314800
I0428 20:28:01.403451  3279 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:01.403460  3279 net.cpp:86] Creating Layer conv0
I0428 20:28:01.403462  3279 net.cpp:408] conv0 <- data
I0428 20:28:01.403467  3279 net.cpp:382] conv0 -> conv0
I0428 20:28:01.405047  3279 net.cpp:124] Setting up conv0
I0428 20:28:01.405078  3279 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:01.405082  3279 net.cpp:139] Memory required for data: 23354800
I0428 20:28:01.405092  3279 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:01.405099  3279 net.cpp:86] Creating Layer pool0
I0428 20:28:01.405103  3279 net.cpp:408] pool0 <- conv0
I0428 20:28:01.405108  3279 net.cpp:382] pool0 -> pool0
I0428 20:28:01.405185  3279 net.cpp:124] Setting up pool0
I0428 20:28:01.405211  3279 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:01.405216  3279 net.cpp:139] Memory required for data: 29114800
I0428 20:28:01.405221  3279 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:01.405233  3279 net.cpp:86] Creating Layer conv1
I0428 20:28:01.405241  3279 net.cpp:408] conv1 <- pool0
I0428 20:28:01.405248  3279 net.cpp:382] conv1 -> conv1
I0428 20:28:01.406930  3279 net.cpp:124] Setting up conv1
I0428 20:28:01.406963  3279 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:01.406970  3279 net.cpp:139] Memory required for data: 29242800
I0428 20:28:01.406982  3279 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:01.407007  3279 net.cpp:86] Creating Layer pool1
I0428 20:28:01.407012  3279 net.cpp:408] pool1 <- conv1
I0428 20:28:01.407022  3279 net.cpp:382] pool1 -> pool1
I0428 20:28:01.407061  3279 net.cpp:124] Setting up pool1
I0428 20:28:01.407075  3279 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:01.407079  3279 net.cpp:139] Memory required for data: 29274800
I0428 20:28:01.407083  3279 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:01.407088  3279 net.cpp:86] Creating Layer ip1
I0428 20:28:01.407093  3279 net.cpp:408] ip1 <- pool1
I0428 20:28:01.407099  3279 net.cpp:382] ip1 -> ip1
I0428 20:28:01.407207  3279 net.cpp:124] Setting up ip1
I0428 20:28:01.407214  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.407227  3279 net.cpp:139] Memory required for data: 29278800
I0428 20:28:01.407235  3279 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:01.407240  3279 net.cpp:86] Creating Layer relu1
I0428 20:28:01.407244  3279 net.cpp:408] relu1 <- ip1
I0428 20:28:01.407248  3279 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:01.407408  3279 net.cpp:124] Setting up relu1
I0428 20:28:01.407416  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.407419  3279 net.cpp:139] Memory required for data: 29282800
I0428 20:28:01.407423  3279 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:01.407429  3279 net.cpp:86] Creating Layer ip2
I0428 20:28:01.407433  3279 net.cpp:408] ip2 <- ip1
I0428 20:28:01.407438  3279 net.cpp:382] ip2 -> ip2
I0428 20:28:01.407536  3279 net.cpp:124] Setting up ip2
I0428 20:28:01.407543  3279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:01.407546  3279 net.cpp:139] Memory required for data: 29292800
I0428 20:28:01.407552  3279 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:01.407555  3279 net.cpp:86] Creating Layer relu2
I0428 20:28:01.407558  3279 net.cpp:408] relu2 <- ip2
I0428 20:28:01.407564  3279 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:01.407774  3279 net.cpp:124] Setting up relu2
I0428 20:28:01.407799  3279 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:01.407802  3279 net.cpp:139] Memory required for data: 29302800
I0428 20:28:01.407806  3279 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:01.407812  3279 net.cpp:86] Creating Layer ip3
I0428 20:28:01.407815  3279 net.cpp:408] ip3 <- ip2
I0428 20:28:01.407821  3279 net.cpp:382] ip3 -> ip3
I0428 20:28:01.408021  3279 net.cpp:124] Setting up ip3
I0428 20:28:01.408031  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.408035  3279 net.cpp:139] Memory required for data: 29306800
I0428 20:28:01.408043  3279 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:01.408048  3279 net.cpp:86] Creating Layer relu3
I0428 20:28:01.408051  3279 net.cpp:408] relu3 <- ip3
I0428 20:28:01.408057  3279 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:01.408910  3279 net.cpp:124] Setting up relu3
I0428 20:28:01.408923  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.408926  3279 net.cpp:139] Memory required for data: 29310800
I0428 20:28:01.408929  3279 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:01.408936  3279 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:01.408939  3279 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:01.408944  3279 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:01.408951  3279 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:01.409003  3279 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:01.409011  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.409015  3279 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:01.409018  3279 net.cpp:139] Memory required for data: 29318800
I0428 20:28:01.409021  3279 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:01.409026  3279 net.cpp:86] Creating Layer accuracy
I0428 20:28:01.409029  3279 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:01.409034  3279 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:01.409040  3279 net.cpp:382] accuracy -> accuracy
I0428 20:28:01.409049  3279 net.cpp:124] Setting up accuracy
I0428 20:28:01.409059  3279 net.cpp:131] Top shape: (1)
I0428 20:28:01.409061  3279 net.cpp:139] Memory required for data: 29318804
I0428 20:28:01.409063  3279 layer_factory.hpp:77] Creating layer loss
I0428 20:28:01.409068  3279 net.cpp:86] Creating Layer loss
I0428 20:28:01.409071  3279 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:01.409075  3279 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:01.409080  3279 net.cpp:382] loss -> loss
I0428 20:28:01.409086  3279 layer_factory.hpp:77] Creating layer loss
I0428 20:28:01.409344  3279 net.cpp:124] Setting up loss
I0428 20:28:01.409353  3279 net.cpp:131] Top shape: (1)
I0428 20:28:01.409356  3279 net.cpp:134]     with loss weight 1
I0428 20:28:01.409392  3279 net.cpp:139] Memory required for data: 29318808
I0428 20:28:01.409399  3279 net.cpp:200] loss needs backward computation.
I0428 20:28:01.409405  3279 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:01.409411  3279 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:01.409416  3279 net.cpp:200] relu3 needs backward computation.
I0428 20:28:01.409421  3279 net.cpp:200] ip3 needs backward computation.
I0428 20:28:01.409426  3279 net.cpp:200] relu2 needs backward computation.
I0428 20:28:01.409431  3279 net.cpp:200] ip2 needs backward computation.
I0428 20:28:01.409436  3279 net.cpp:200] relu1 needs backward computation.
I0428 20:28:01.409451  3279 net.cpp:200] ip1 needs backward computation.
I0428 20:28:01.409456  3279 net.cpp:200] pool1 needs backward computation.
I0428 20:28:01.409462  3279 net.cpp:200] conv1 needs backward computation.
I0428 20:28:01.409466  3279 net.cpp:200] pool0 needs backward computation.
I0428 20:28:01.409468  3279 net.cpp:200] conv0 needs backward computation.
I0428 20:28:01.409472  3279 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:01.409476  3279 net.cpp:202] mnist does not need backward computation.
I0428 20:28:01.409479  3279 net.cpp:244] This network produces output accuracy
I0428 20:28:01.409482  3279 net.cpp:244] This network produces output loss
I0428 20:28:01.409495  3279 net.cpp:257] Network initialization done.
I0428 20:28:01.409538  3279 solver.cpp:56] Solver scaffolding done.
I0428 20:28:01.409895  3279 caffe.cpp:248] Starting Optimization
I0428 20:28:01.409900  3279 solver.cpp:273] Solving LeNet
I0428 20:28:01.409904  3279 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:01.410745  3279 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:01.505480  3287 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:01.507987  3279 solver.cpp:398]     Test net output #0: accuracy = 0.1395
I0428 20:28:01.508019  3279 solver.cpp:398]     Test net output #1: loss = 2.29499 (* 1 = 2.29499 loss)
I0428 20:28:01.514457  3279 solver.cpp:219] Iteration 0 (-1.11919e-31 iter/s, 0.104505s/100 iters), loss = 2.30513
I0428 20:28:01.514497  3279 solver.cpp:238]     Train net output #0: loss = 2.30513 (* 1 = 2.30513 loss)
I0428 20:28:01.514508  3279 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:01.727252  3279 solver.cpp:219] Iteration 100 (470.062 iter/s, 0.212738s/100 iters), loss = 1.60867
I0428 20:28:01.727308  3279 solver.cpp:238]     Train net output #0: loss = 1.60867 (* 1 = 1.60867 loss)
I0428 20:28:01.727315  3279 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:01.941761  3279 solver.cpp:219] Iteration 200 (466.309 iter/s, 0.21445s/100 iters), loss = 1.40359
I0428 20:28:01.941792  3279 solver.cpp:238]     Train net output #0: loss = 1.40359 (* 1 = 1.40359 loss)
I0428 20:28:01.941800  3279 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:28:02.155318  3279 solver.cpp:219] Iteration 300 (468.364 iter/s, 0.213509s/100 iters), loss = 1.4122
I0428 20:28:02.155355  3279 solver.cpp:238]     Train net output #0: loss = 1.4122 (* 1 = 1.4122 loss)
I0428 20:28:02.155364  3279 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:28:02.365077  3279 solver.cpp:219] Iteration 400 (476.853 iter/s, 0.209708s/100 iters), loss = 1.61581
I0428 20:28:02.365106  3279 solver.cpp:238]     Train net output #0: loss = 1.61581 (* 1 = 1.61581 loss)
I0428 20:28:02.365114  3279 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:28:02.572026  3279 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:28:02.680053  3287 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:02.682919  3279 solver.cpp:398]     Test net output #0: accuracy = 0.4705
I0428 20:28:02.682947  3279 solver.cpp:398]     Test net output #1: loss = 1.47362 (* 1 = 1.47362 loss)
I0428 20:28:02.684962  3279 solver.cpp:219] Iteration 500 (312.662 iter/s, 0.319834s/100 iters), loss = 1.67504
I0428 20:28:02.685005  3279 solver.cpp:238]     Train net output #0: loss = 1.67504 (* 1 = 1.67504 loss)
I0428 20:28:02.685029  3279 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:28:02.892354  3279 solver.cpp:219] Iteration 600 (482.317 iter/s, 0.207332s/100 iters), loss = 1.33859
I0428 20:28:02.892387  3279 solver.cpp:238]     Train net output #0: loss = 1.33859 (* 1 = 1.33859 loss)
I0428 20:28:02.892395  3279 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:28:03.109056  3279 solver.cpp:219] Iteration 700 (461.575 iter/s, 0.21665s/100 iters), loss = 1.33507
I0428 20:28:03.109099  3279 solver.cpp:238]     Train net output #0: loss = 1.33507 (* 1 = 1.33507 loss)
I0428 20:28:03.109109  3279 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:28:03.317880  3279 solver.cpp:219] Iteration 800 (479.015 iter/s, 0.208762s/100 iters), loss = 1.51795
I0428 20:28:03.317936  3279 solver.cpp:238]     Train net output #0: loss = 1.51795 (* 1 = 1.51795 loss)
I0428 20:28:03.317950  3279 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:28:03.533891  3279 solver.cpp:219] Iteration 900 (463.091 iter/s, 0.21594s/100 iters), loss = 1.39605
I0428 20:28:03.533932  3279 solver.cpp:238]     Train net output #0: loss = 1.39605 (* 1 = 1.39605 loss)
I0428 20:28:03.533941  3279 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:28:03.605574  3285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:03.749701  3279 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:28:03.751799  3279 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:28:03.753118  3279 solver.cpp:311] Iteration 1000, loss = 1.47267
I0428 20:28:03.753151  3279 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:28:03.856451  3287 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:03.859163  3279 solver.cpp:398]     Test net output #0: accuracy = 0.4853
I0428 20:28:03.859190  3279 solver.cpp:398]     Test net output #1: loss = 1.44695 (* 1 = 1.44695 loss)
I0428 20:28:03.859196  3279 solver.cpp:316] Optimization Done.
I0428 20:28:03.859200  3279 caffe.cpp:259] Optimization Done.
