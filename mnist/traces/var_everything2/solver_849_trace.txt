I0428 19:59:29.277261 29252 caffe.cpp:218] Using GPUs 0
I0428 19:59:29.314283 29252 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:29.767290 29252 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test849.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:29.767426 29252 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test849.prototxt
I0428 19:59:29.767763 29252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:29.767794 29252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:29.767874 29252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:29.767935 29252 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:29.768023 29252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:29.768043 29252 net.cpp:86] Creating Layer mnist
I0428 19:59:29.768050 29252 net.cpp:382] mnist -> data
I0428 19:59:29.768069 29252 net.cpp:382] mnist -> label
I0428 19:59:29.769053 29252 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:29.771205 29252 net.cpp:124] Setting up mnist
I0428 19:59:29.771250 29252 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:29.771275 29252 net.cpp:131] Top shape: 64 (64)
I0428 19:59:29.771277 29252 net.cpp:139] Memory required for data: 200960
I0428 19:59:29.771283 29252 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:29.771296 29252 net.cpp:86] Creating Layer conv0
I0428 19:59:29.771311 29252 net.cpp:408] conv0 <- data
I0428 19:59:29.771322 29252 net.cpp:382] conv0 -> conv0
I0428 19:59:29.994793 29252 net.cpp:124] Setting up conv0
I0428 19:59:29.994849 29252 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:29.994853 29252 net.cpp:139] Memory required for data: 1675520
I0428 19:59:29.994869 29252 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:29.994882 29252 net.cpp:86] Creating Layer pool0
I0428 19:59:29.994886 29252 net.cpp:408] pool0 <- conv0
I0428 19:59:29.994891 29252 net.cpp:382] pool0 -> pool0
I0428 19:59:29.994952 29252 net.cpp:124] Setting up pool0
I0428 19:59:29.994958 29252 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:29.994961 29252 net.cpp:139] Memory required for data: 2044160
I0428 19:59:29.994964 29252 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:29.994974 29252 net.cpp:86] Creating Layer conv1
I0428 19:59:29.994977 29252 net.cpp:408] conv1 <- pool0
I0428 19:59:29.994982 29252 net.cpp:382] conv1 -> conv1
I0428 19:59:29.997820 29252 net.cpp:124] Setting up conv1
I0428 19:59:29.997834 29252 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:29.997838 29252 net.cpp:139] Memory required for data: 2208000
I0428 19:59:29.997846 29252 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:29.997853 29252 net.cpp:86] Creating Layer pool1
I0428 19:59:29.997858 29252 net.cpp:408] pool1 <- conv1
I0428 19:59:29.997862 29252 net.cpp:382] pool1 -> pool1
I0428 19:59:29.997896 29252 net.cpp:124] Setting up pool1
I0428 19:59:29.997902 29252 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:29.997905 29252 net.cpp:139] Memory required for data: 2248960
I0428 19:59:29.997907 29252 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:29.997915 29252 net.cpp:86] Creating Layer ip1
I0428 19:59:29.997917 29252 net.cpp:408] ip1 <- pool1
I0428 19:59:29.997921 29252 net.cpp:382] ip1 -> ip1
I0428 19:59:29.998939 29252 net.cpp:124] Setting up ip1
I0428 19:59:29.998950 29252 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:29.998965 29252 net.cpp:139] Memory required for data: 2261760
I0428 19:59:29.998972 29252 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:29.998978 29252 net.cpp:86] Creating Layer relu1
I0428 19:59:29.998981 29252 net.cpp:408] relu1 <- ip1
I0428 19:59:29.998986 29252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:29.999143 29252 net.cpp:124] Setting up relu1
I0428 19:59:29.999152 29252 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:29.999155 29252 net.cpp:139] Memory required for data: 2274560
I0428 19:59:29.999158 29252 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:29.999164 29252 net.cpp:86] Creating Layer ip2
I0428 19:59:29.999167 29252 net.cpp:408] ip2 <- ip1
I0428 19:59:29.999172 29252 net.cpp:382] ip2 -> ip2
I0428 19:59:29.999280 29252 net.cpp:124] Setting up ip2
I0428 19:59:29.999289 29252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:29.999291 29252 net.cpp:139] Memory required for data: 2277120
I0428 19:59:29.999296 29252 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:29.999302 29252 net.cpp:86] Creating Layer relu2
I0428 19:59:29.999306 29252 net.cpp:408] relu2 <- ip2
I0428 19:59:29.999310 29252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:30.000017 29252 net.cpp:124] Setting up relu2
I0428 19:59:30.000030 29252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:30.000032 29252 net.cpp:139] Memory required for data: 2279680
I0428 19:59:30.000036 29252 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:30.000042 29252 net.cpp:86] Creating Layer ip3
I0428 19:59:30.000046 29252 net.cpp:408] ip3 <- ip2
I0428 19:59:30.000051 29252 net.cpp:382] ip3 -> ip3
I0428 19:59:30.000141 29252 net.cpp:124] Setting up ip3
I0428 19:59:30.000149 29252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:30.000152 29252 net.cpp:139] Memory required for data: 2282240
I0428 19:59:30.000159 29252 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:30.000164 29252 net.cpp:86] Creating Layer relu3
I0428 19:59:30.000167 29252 net.cpp:408] relu3 <- ip3
I0428 19:59:30.000171 29252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:30.000347 29252 net.cpp:124] Setting up relu3
I0428 19:59:30.000357 29252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:30.000360 29252 net.cpp:139] Memory required for data: 2284800
I0428 19:59:30.000363 29252 layer_factory.hpp:77] Creating layer loss
I0428 19:59:30.000370 29252 net.cpp:86] Creating Layer loss
I0428 19:59:30.000372 29252 net.cpp:408] loss <- ip3
I0428 19:59:30.000376 29252 net.cpp:408] loss <- label
I0428 19:59:30.000381 29252 net.cpp:382] loss -> loss
I0428 19:59:30.000398 29252 layer_factory.hpp:77] Creating layer loss
I0428 19:59:30.000630 29252 net.cpp:124] Setting up loss
I0428 19:59:30.000639 29252 net.cpp:131] Top shape: (1)
I0428 19:59:30.000643 29252 net.cpp:134]     with loss weight 1
I0428 19:59:30.000656 29252 net.cpp:139] Memory required for data: 2284804
I0428 19:59:30.000659 29252 net.cpp:200] loss needs backward computation.
I0428 19:59:30.000663 29252 net.cpp:200] relu3 needs backward computation.
I0428 19:59:30.000666 29252 net.cpp:200] ip3 needs backward computation.
I0428 19:59:30.000669 29252 net.cpp:200] relu2 needs backward computation.
I0428 19:59:30.000671 29252 net.cpp:200] ip2 needs backward computation.
I0428 19:59:30.000674 29252 net.cpp:200] relu1 needs backward computation.
I0428 19:59:30.000677 29252 net.cpp:200] ip1 needs backward computation.
I0428 19:59:30.000680 29252 net.cpp:200] pool1 needs backward computation.
I0428 19:59:30.000684 29252 net.cpp:200] conv1 needs backward computation.
I0428 19:59:30.000689 29252 net.cpp:200] pool0 needs backward computation.
I0428 19:59:30.000691 29252 net.cpp:200] conv0 needs backward computation.
I0428 19:59:30.000694 29252 net.cpp:202] mnist does not need backward computation.
I0428 19:59:30.000697 29252 net.cpp:244] This network produces output loss
I0428 19:59:30.000705 29252 net.cpp:257] Network initialization done.
I0428 19:59:30.001068 29252 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test849.prototxt
I0428 19:59:30.001096 29252 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:30.001238 29252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:30.001322 29252 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:30.001366 29252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:30.001379 29252 net.cpp:86] Creating Layer mnist
I0428 19:59:30.001384 29252 net.cpp:382] mnist -> data
I0428 19:59:30.001391 29252 net.cpp:382] mnist -> label
I0428 19:59:30.001474 29252 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:30.003635 29252 net.cpp:124] Setting up mnist
I0428 19:59:30.003660 29252 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:30.003666 29252 net.cpp:131] Top shape: 100 (100)
I0428 19:59:30.003670 29252 net.cpp:139] Memory required for data: 314000
I0428 19:59:30.003674 29252 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:30.003684 29252 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:30.003689 29252 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:30.003693 29252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:30.003700 29252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:30.003787 29252 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:30.003794 29252 net.cpp:131] Top shape: 100 (100)
I0428 19:59:30.003798 29252 net.cpp:131] Top shape: 100 (100)
I0428 19:59:30.003801 29252 net.cpp:139] Memory required for data: 314800
I0428 19:59:30.003804 29252 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:30.003813 29252 net.cpp:86] Creating Layer conv0
I0428 19:59:30.003816 29252 net.cpp:408] conv0 <- data
I0428 19:59:30.003821 29252 net.cpp:382] conv0 -> conv0
I0428 19:59:30.005481 29252 net.cpp:124] Setting up conv0
I0428 19:59:30.005504 29252 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:30.005508 29252 net.cpp:139] Memory required for data: 2618800
I0428 19:59:30.005517 29252 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:30.005523 29252 net.cpp:86] Creating Layer pool0
I0428 19:59:30.005527 29252 net.cpp:408] pool0 <- conv0
I0428 19:59:30.005532 29252 net.cpp:382] pool0 -> pool0
I0428 19:59:30.005565 29252 net.cpp:124] Setting up pool0
I0428 19:59:30.005575 29252 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:30.005578 29252 net.cpp:139] Memory required for data: 3194800
I0428 19:59:30.005581 29252 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:30.005589 29252 net.cpp:86] Creating Layer conv1
I0428 19:59:30.005591 29252 net.cpp:408] conv1 <- pool0
I0428 19:59:30.005596 29252 net.cpp:382] conv1 -> conv1
I0428 19:59:30.007800 29252 net.cpp:124] Setting up conv1
I0428 19:59:30.007814 29252 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:30.007818 29252 net.cpp:139] Memory required for data: 3450800
I0428 19:59:30.007841 29252 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:30.007848 29252 net.cpp:86] Creating Layer pool1
I0428 19:59:30.007851 29252 net.cpp:408] pool1 <- conv1
I0428 19:59:30.007858 29252 net.cpp:382] pool1 -> pool1
I0428 19:59:30.007895 29252 net.cpp:124] Setting up pool1
I0428 19:59:30.007918 29252 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:30.007921 29252 net.cpp:139] Memory required for data: 3514800
I0428 19:59:30.007925 29252 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:30.007930 29252 net.cpp:86] Creating Layer ip1
I0428 19:59:30.007933 29252 net.cpp:408] ip1 <- pool1
I0428 19:59:30.007938 29252 net.cpp:382] ip1 -> ip1
I0428 19:59:30.008105 29252 net.cpp:124] Setting up ip1
I0428 19:59:30.008112 29252 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:30.008126 29252 net.cpp:139] Memory required for data: 3534800
I0428 19:59:30.008136 29252 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:30.008141 29252 net.cpp:86] Creating Layer relu1
I0428 19:59:30.008143 29252 net.cpp:408] relu1 <- ip1
I0428 19:59:30.008148 29252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:30.008316 29252 net.cpp:124] Setting up relu1
I0428 19:59:30.008324 29252 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:30.008327 29252 net.cpp:139] Memory required for data: 3554800
I0428 19:59:30.008330 29252 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:30.008337 29252 net.cpp:86] Creating Layer ip2
I0428 19:59:30.008340 29252 net.cpp:408] ip2 <- ip1
I0428 19:59:30.008345 29252 net.cpp:382] ip2 -> ip2
I0428 19:59:30.008440 29252 net.cpp:124] Setting up ip2
I0428 19:59:30.008448 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.008451 29252 net.cpp:139] Memory required for data: 3558800
I0428 19:59:30.008456 29252 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:30.008461 29252 net.cpp:86] Creating Layer relu2
I0428 19:59:30.008464 29252 net.cpp:408] relu2 <- ip2
I0428 19:59:30.008468 29252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:30.008604 29252 net.cpp:124] Setting up relu2
I0428 19:59:30.008611 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.008615 29252 net.cpp:139] Memory required for data: 3562800
I0428 19:59:30.008617 29252 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:30.008622 29252 net.cpp:86] Creating Layer ip3
I0428 19:59:30.008625 29252 net.cpp:408] ip3 <- ip2
I0428 19:59:30.008630 29252 net.cpp:382] ip3 -> ip3
I0428 19:59:30.008733 29252 net.cpp:124] Setting up ip3
I0428 19:59:30.008740 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.008744 29252 net.cpp:139] Memory required for data: 3566800
I0428 19:59:30.008751 29252 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:30.008756 29252 net.cpp:86] Creating Layer relu3
I0428 19:59:30.008759 29252 net.cpp:408] relu3 <- ip3
I0428 19:59:30.008764 29252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:30.009660 29252 net.cpp:124] Setting up relu3
I0428 19:59:30.009671 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.009675 29252 net.cpp:139] Memory required for data: 3570800
I0428 19:59:30.009678 29252 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:30.009683 29252 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:30.009687 29252 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:30.009692 29252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:30.009698 29252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:30.009773 29252 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:30.009781 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.009784 29252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:30.009788 29252 net.cpp:139] Memory required for data: 3578800
I0428 19:59:30.009790 29252 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:30.009795 29252 net.cpp:86] Creating Layer accuracy
I0428 19:59:30.009799 29252 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:30.009802 29252 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:30.009806 29252 net.cpp:382] accuracy -> accuracy
I0428 19:59:30.009814 29252 net.cpp:124] Setting up accuracy
I0428 19:59:30.009817 29252 net.cpp:131] Top shape: (1)
I0428 19:59:30.009819 29252 net.cpp:139] Memory required for data: 3578804
I0428 19:59:30.009824 29252 layer_factory.hpp:77] Creating layer loss
I0428 19:59:30.009827 29252 net.cpp:86] Creating Layer loss
I0428 19:59:30.009830 29252 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:30.009835 29252 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:30.009838 29252 net.cpp:382] loss -> loss
I0428 19:59:30.009843 29252 layer_factory.hpp:77] Creating layer loss
I0428 19:59:30.010068 29252 net.cpp:124] Setting up loss
I0428 19:59:30.010077 29252 net.cpp:131] Top shape: (1)
I0428 19:59:30.010082 29252 net.cpp:134]     with loss weight 1
I0428 19:59:30.010098 29252 net.cpp:139] Memory required for data: 3578808
I0428 19:59:30.010102 29252 net.cpp:200] loss needs backward computation.
I0428 19:59:30.010105 29252 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:30.010109 29252 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:30.010113 29252 net.cpp:200] relu3 needs backward computation.
I0428 19:59:30.010116 29252 net.cpp:200] ip3 needs backward computation.
I0428 19:59:30.010119 29252 net.cpp:200] relu2 needs backward computation.
I0428 19:59:30.010123 29252 net.cpp:200] ip2 needs backward computation.
I0428 19:59:30.010125 29252 net.cpp:200] relu1 needs backward computation.
I0428 19:59:30.010128 29252 net.cpp:200] ip1 needs backward computation.
I0428 19:59:30.010133 29252 net.cpp:200] pool1 needs backward computation.
I0428 19:59:30.010135 29252 net.cpp:200] conv1 needs backward computation.
I0428 19:59:30.010144 29252 net.cpp:200] pool0 needs backward computation.
I0428 19:59:30.010152 29252 net.cpp:200] conv0 needs backward computation.
I0428 19:59:30.010156 29252 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:30.010160 29252 net.cpp:202] mnist does not need backward computation.
I0428 19:59:30.010164 29252 net.cpp:244] This network produces output accuracy
I0428 19:59:30.010166 29252 net.cpp:244] This network produces output loss
I0428 19:59:30.010177 29252 net.cpp:257] Network initialization done.
I0428 19:59:30.010218 29252 solver.cpp:56] Solver scaffolding done.
I0428 19:59:30.010577 29252 caffe.cpp:248] Starting Optimization
I0428 19:59:30.010584 29252 solver.cpp:273] Solving LeNet
I0428 19:59:30.010587 29252 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:30.011410 29252 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:30.015152 29252 blocking_queue.cpp:49] Waiting for data
I0428 19:59:30.086985 29259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:30.087518 29252 solver.cpp:398]     Test net output #0: accuracy = 0.0988
I0428 19:59:30.087554 29252 solver.cpp:398]     Test net output #1: loss = 2.31889 (* 1 = 2.31889 loss)
I0428 19:59:30.090108 29252 solver.cpp:219] Iteration 0 (0 iter/s, 0.0794962s/100 iters), loss = 2.32806
I0428 19:59:30.090145 29252 solver.cpp:238]     Train net output #0: loss = 2.32806 (* 1 = 2.32806 loss)
I0428 19:59:30.090157 29252 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:30.170265 29252 solver.cpp:219] Iteration 100 (1248.29 iter/s, 0.0801097s/100 iters), loss = 1.09586
I0428 19:59:30.170305 29252 solver.cpp:238]     Train net output #0: loss = 1.09586 (* 1 = 1.09586 loss)
I0428 19:59:30.170310 29252 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:30.247989 29252 solver.cpp:219] Iteration 200 (1287.15 iter/s, 0.0776909s/100 iters), loss = 0.690365
I0428 19:59:30.248028 29252 solver.cpp:238]     Train net output #0: loss = 0.690365 (* 1 = 0.690365 loss)
I0428 19:59:30.248034 29252 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:30.325587 29252 solver.cpp:219] Iteration 300 (1289.23 iter/s, 0.0775659s/100 iters), loss = 0.826866
I0428 19:59:30.325626 29252 solver.cpp:238]     Train net output #0: loss = 0.826866 (* 1 = 0.826866 loss)
I0428 19:59:30.325633 29252 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:30.403604 29252 solver.cpp:219] Iteration 400 (1282.32 iter/s, 0.0779836s/100 iters), loss = 0.88148
I0428 19:59:30.403645 29252 solver.cpp:238]     Train net output #0: loss = 0.88148 (* 1 = 0.88148 loss)
I0428 19:59:30.403650 29252 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:30.479475 29252 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:30.524868 29259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:30.525444 29252 solver.cpp:398]     Test net output #0: accuracy = 0.846
I0428 19:59:30.525481 29252 solver.cpp:398]     Test net output #1: loss = 0.604423 (* 1 = 0.604423 loss)
I0428 19:59:30.526352 29252 solver.cpp:219] Iteration 500 (814.916 iter/s, 0.122712s/100 iters), loss = 0.729234
I0428 19:59:30.526396 29252 solver.cpp:238]     Train net output #0: loss = 0.729234 (* 1 = 0.729234 loss)
I0428 19:59:30.526418 29252 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:30.621351 29252 solver.cpp:219] Iteration 600 (1053.24 iter/s, 0.0949447s/100 iters), loss = 0.412034
I0428 19:59:30.621392 29252 solver.cpp:238]     Train net output #0: loss = 0.412034 (* 1 = 0.412034 loss)
I0428 19:59:30.621397 29252 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:30.702692 29252 solver.cpp:219] Iteration 700 (1229.9 iter/s, 0.0813076s/100 iters), loss = 0.584843
I0428 19:59:30.702731 29252 solver.cpp:238]     Train net output #0: loss = 0.584843 (* 1 = 0.584843 loss)
I0428 19:59:30.702738 29252 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:30.780952 29252 solver.cpp:219] Iteration 800 (1278.34 iter/s, 0.0782266s/100 iters), loss = 0.512608
I0428 19:59:30.780992 29252 solver.cpp:238]     Train net output #0: loss = 0.512608 (* 1 = 0.512608 loss)
I0428 19:59:30.780997 29252 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:30.859335 29252 solver.cpp:219] Iteration 900 (1276.57 iter/s, 0.078335s/100 iters), loss = 0.476622
I0428 19:59:30.859375 29252 solver.cpp:238]     Train net output #0: loss = 0.476622 (* 1 = 0.476622 loss)
I0428 19:59:30.859380 29252 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:30.889232 29258 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:30.945422 29252 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:30.946295 29252 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:30.946822 29252 solver.cpp:311] Iteration 1000, loss = 0.511996
I0428 19:59:30.946838 29252 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:31.021669 29259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:31.022200 29252 solver.cpp:398]     Test net output #0: accuracy = 0.8696
I0428 19:59:31.022234 29252 solver.cpp:398]     Test net output #1: loss = 0.551897 (* 1 = 0.551897 loss)
I0428 19:59:31.022239 29252 solver.cpp:316] Optimization Done.
I0428 19:59:31.022241 29252 caffe.cpp:259] Optimization Done.
