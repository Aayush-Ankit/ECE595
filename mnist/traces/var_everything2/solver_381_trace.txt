I0428 19:42:00.273545 24963 caffe.cpp:218] Using GPUs 0
I0428 19:42:00.313299 24963 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:00.831761 24963 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test381.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:00.831935 24963 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test381.prototxt
I0428 19:42:00.832357 24963 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:00.832384 24963 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:00.832500 24963 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:00.832618 24963 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:00.832748 24963 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:00.832784 24963 net.cpp:86] Creating Layer mnist
I0428 19:42:00.832797 24963 net.cpp:382] mnist -> data
I0428 19:42:00.832840 24963 net.cpp:382] mnist -> label
I0428 19:42:00.834128 24963 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:00.836591 24963 net.cpp:124] Setting up mnist
I0428 19:42:00.836611 24963 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:00.836624 24963 net.cpp:131] Top shape: 64 (64)
I0428 19:42:00.836630 24963 net.cpp:139] Memory required for data: 200960
I0428 19:42:00.836642 24963 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:00.836663 24963 net.cpp:86] Creating Layer conv0
I0428 19:42:00.836689 24963 net.cpp:408] conv0 <- data
I0428 19:42:00.836711 24963 net.cpp:382] conv0 -> conv0
I0428 19:42:01.123435 24963 net.cpp:124] Setting up conv0
I0428 19:42:01.123466 24963 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:01.123472 24963 net.cpp:139] Memory required for data: 495872
I0428 19:42:01.123495 24963 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:01.123514 24963 net.cpp:86] Creating Layer pool0
I0428 19:42:01.123522 24963 net.cpp:408] pool0 <- conv0
I0428 19:42:01.123533 24963 net.cpp:382] pool0 -> pool0
I0428 19:42:01.123598 24963 net.cpp:124] Setting up pool0
I0428 19:42:01.123608 24963 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:01.123615 24963 net.cpp:139] Memory required for data: 569600
I0428 19:42:01.123620 24963 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:01.123637 24963 net.cpp:86] Creating Layer conv1
I0428 19:42:01.123646 24963 net.cpp:408] conv1 <- pool0
I0428 19:42:01.123656 24963 net.cpp:382] conv1 -> conv1
I0428 19:42:01.125684 24963 net.cpp:124] Setting up conv1
I0428 19:42:01.125702 24963 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:42:01.125708 24963 net.cpp:139] Memory required for data: 733440
I0428 19:42:01.125723 24963 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:01.125740 24963 net.cpp:86] Creating Layer pool1
I0428 19:42:01.125753 24963 net.cpp:408] pool1 <- conv1
I0428 19:42:01.125762 24963 net.cpp:382] pool1 -> pool1
I0428 19:42:01.125814 24963 net.cpp:124] Setting up pool1
I0428 19:42:01.125824 24963 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:42:01.125829 24963 net.cpp:139] Memory required for data: 774400
I0428 19:42:01.125835 24963 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:01.125847 24963 net.cpp:86] Creating Layer ip1
I0428 19:42:01.125854 24963 net.cpp:408] ip1 <- pool1
I0428 19:42:01.125864 24963 net.cpp:382] ip1 -> ip1
I0428 19:42:01.126941 24963 net.cpp:124] Setting up ip1
I0428 19:42:01.126956 24963 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:01.126968 24963 net.cpp:139] Memory required for data: 787200
I0428 19:42:01.126982 24963 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:01.126992 24963 net.cpp:86] Creating Layer relu1
I0428 19:42:01.126998 24963 net.cpp:408] relu1 <- ip1
I0428 19:42:01.127007 24963 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:01.127213 24963 net.cpp:124] Setting up relu1
I0428 19:42:01.127225 24963 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:01.127231 24963 net.cpp:139] Memory required for data: 800000
I0428 19:42:01.127236 24963 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:01.127249 24963 net.cpp:86] Creating Layer ip2
I0428 19:42:01.127256 24963 net.cpp:408] ip2 <- ip1
I0428 19:42:01.127265 24963 net.cpp:382] ip2 -> ip2
I0428 19:42:01.127388 24963 net.cpp:124] Setting up ip2
I0428 19:42:01.127399 24963 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:01.127404 24963 net.cpp:139] Memory required for data: 802560
I0428 19:42:01.127414 24963 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:01.127425 24963 net.cpp:86] Creating Layer relu2
I0428 19:42:01.127435 24963 net.cpp:408] relu2 <- ip2
I0428 19:42:01.127446 24963 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:01.128268 24963 net.cpp:124] Setting up relu2
I0428 19:42:01.128283 24963 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:01.128288 24963 net.cpp:139] Memory required for data: 805120
I0428 19:42:01.128294 24963 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:01.128309 24963 net.cpp:86] Creating Layer ip3
I0428 19:42:01.128314 24963 net.cpp:408] ip3 <- ip2
I0428 19:42:01.128324 24963 net.cpp:382] ip3 -> ip3
I0428 19:42:01.128448 24963 net.cpp:124] Setting up ip3
I0428 19:42:01.128458 24963 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:01.128463 24963 net.cpp:139] Memory required for data: 807680
I0428 19:42:01.128478 24963 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:01.128489 24963 net.cpp:86] Creating Layer relu3
I0428 19:42:01.128497 24963 net.cpp:408] relu3 <- ip3
I0428 19:42:01.128504 24963 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:01.128705 24963 net.cpp:124] Setting up relu3
I0428 19:42:01.128715 24963 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:01.128721 24963 net.cpp:139] Memory required for data: 810240
I0428 19:42:01.128726 24963 layer_factory.hpp:77] Creating layer loss
I0428 19:42:01.128738 24963 net.cpp:86] Creating Layer loss
I0428 19:42:01.128743 24963 net.cpp:408] loss <- ip3
I0428 19:42:01.128751 24963 net.cpp:408] loss <- label
I0428 19:42:01.128759 24963 net.cpp:382] loss -> loss
I0428 19:42:01.128785 24963 layer_factory.hpp:77] Creating layer loss
I0428 19:42:01.129062 24963 net.cpp:124] Setting up loss
I0428 19:42:01.129076 24963 net.cpp:131] Top shape: (1)
I0428 19:42:01.129081 24963 net.cpp:134]     with loss weight 1
I0428 19:42:01.129101 24963 net.cpp:139] Memory required for data: 810244
I0428 19:42:01.129119 24963 net.cpp:200] loss needs backward computation.
I0428 19:42:01.129125 24963 net.cpp:200] relu3 needs backward computation.
I0428 19:42:01.129130 24963 net.cpp:200] ip3 needs backward computation.
I0428 19:42:01.129135 24963 net.cpp:200] relu2 needs backward computation.
I0428 19:42:01.129140 24963 net.cpp:200] ip2 needs backward computation.
I0428 19:42:01.129145 24963 net.cpp:200] relu1 needs backward computation.
I0428 19:42:01.129150 24963 net.cpp:200] ip1 needs backward computation.
I0428 19:42:01.129158 24963 net.cpp:200] pool1 needs backward computation.
I0428 19:42:01.129163 24963 net.cpp:200] conv1 needs backward computation.
I0428 19:42:01.129168 24963 net.cpp:200] pool0 needs backward computation.
I0428 19:42:01.129173 24963 net.cpp:200] conv0 needs backward computation.
I0428 19:42:01.129179 24963 net.cpp:202] mnist does not need backward computation.
I0428 19:42:01.129184 24963 net.cpp:244] This network produces output loss
I0428 19:42:01.129201 24963 net.cpp:257] Network initialization done.
I0428 19:42:01.129549 24963 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test381.prototxt
I0428 19:42:01.129585 24963 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:01.129693 24963 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:01.129820 24963 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:01.129883 24963 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:01.129900 24963 net.cpp:86] Creating Layer mnist
I0428 19:42:01.129912 24963 net.cpp:382] mnist -> data
I0428 19:42:01.129925 24963 net.cpp:382] mnist -> label
I0428 19:42:01.130055 24963 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:01.132189 24963 net.cpp:124] Setting up mnist
I0428 19:42:01.132221 24963 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:01.132230 24963 net.cpp:131] Top shape: 100 (100)
I0428 19:42:01.132236 24963 net.cpp:139] Memory required for data: 314000
I0428 19:42:01.132241 24963 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:01.132256 24963 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:01.132262 24963 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:01.132273 24963 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:01.132285 24963 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:01.132622 24963 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:01.132632 24963 net.cpp:131] Top shape: 100 (100)
I0428 19:42:01.132638 24963 net.cpp:131] Top shape: 100 (100)
I0428 19:42:01.132643 24963 net.cpp:139] Memory required for data: 314800
I0428 19:42:01.132648 24963 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:01.132666 24963 net.cpp:86] Creating Layer conv0
I0428 19:42:01.132673 24963 net.cpp:408] conv0 <- data
I0428 19:42:01.132683 24963 net.cpp:382] conv0 -> conv0
I0428 19:42:01.134474 24963 net.cpp:124] Setting up conv0
I0428 19:42:01.134491 24963 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:01.134497 24963 net.cpp:139] Memory required for data: 775600
I0428 19:42:01.134515 24963 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:01.134526 24963 net.cpp:86] Creating Layer pool0
I0428 19:42:01.134534 24963 net.cpp:408] pool0 <- conv0
I0428 19:42:01.134544 24963 net.cpp:382] pool0 -> pool0
I0428 19:42:01.134590 24963 net.cpp:124] Setting up pool0
I0428 19:42:01.134600 24963 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:01.134606 24963 net.cpp:139] Memory required for data: 890800
I0428 19:42:01.134620 24963 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:01.134637 24963 net.cpp:86] Creating Layer conv1
I0428 19:42:01.134644 24963 net.cpp:408] conv1 <- pool0
I0428 19:42:01.134654 24963 net.cpp:382] conv1 -> conv1
I0428 19:42:01.136198 24963 net.cpp:124] Setting up conv1
I0428 19:42:01.136214 24963 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:42:01.136221 24963 net.cpp:139] Memory required for data: 1146800
I0428 19:42:01.136235 24963 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:01.136248 24963 net.cpp:86] Creating Layer pool1
I0428 19:42:01.136255 24963 net.cpp:408] pool1 <- conv1
I0428 19:42:01.136265 24963 net.cpp:382] pool1 -> pool1
I0428 19:42:01.136312 24963 net.cpp:124] Setting up pool1
I0428 19:42:01.136320 24963 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:42:01.136325 24963 net.cpp:139] Memory required for data: 1210800
I0428 19:42:01.136330 24963 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:01.136343 24963 net.cpp:86] Creating Layer ip1
I0428 19:42:01.136350 24963 net.cpp:408] ip1 <- pool1
I0428 19:42:01.136358 24963 net.cpp:382] ip1 -> ip1
I0428 19:42:01.136518 24963 net.cpp:124] Setting up ip1
I0428 19:42:01.136528 24963 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:01.136548 24963 net.cpp:139] Memory required for data: 1230800
I0428 19:42:01.136560 24963 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:01.136574 24963 net.cpp:86] Creating Layer relu1
I0428 19:42:01.136581 24963 net.cpp:408] relu1 <- ip1
I0428 19:42:01.136590 24963 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:01.136772 24963 net.cpp:124] Setting up relu1
I0428 19:42:01.136785 24963 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:01.136790 24963 net.cpp:139] Memory required for data: 1250800
I0428 19:42:01.136795 24963 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:01.136831 24963 net.cpp:86] Creating Layer ip2
I0428 19:42:01.136838 24963 net.cpp:408] ip2 <- ip1
I0428 19:42:01.136850 24963 net.cpp:382] ip2 -> ip2
I0428 19:42:01.136989 24963 net.cpp:124] Setting up ip2
I0428 19:42:01.137002 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.137007 24963 net.cpp:139] Memory required for data: 1254800
I0428 19:42:01.137017 24963 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:01.137025 24963 net.cpp:86] Creating Layer relu2
I0428 19:42:01.137030 24963 net.cpp:408] relu2 <- ip2
I0428 19:42:01.137038 24963 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:01.137303 24963 net.cpp:124] Setting up relu2
I0428 19:42:01.137317 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.137322 24963 net.cpp:139] Memory required for data: 1258800
I0428 19:42:01.137328 24963 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:01.137338 24963 net.cpp:86] Creating Layer ip3
I0428 19:42:01.137343 24963 net.cpp:408] ip3 <- ip2
I0428 19:42:01.137354 24963 net.cpp:382] ip3 -> ip3
I0428 19:42:01.137467 24963 net.cpp:124] Setting up ip3
I0428 19:42:01.137476 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.137482 24963 net.cpp:139] Memory required for data: 1262800
I0428 19:42:01.137497 24963 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:01.137506 24963 net.cpp:86] Creating Layer relu3
I0428 19:42:01.137512 24963 net.cpp:408] relu3 <- ip3
I0428 19:42:01.137521 24963 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:01.138386 24963 net.cpp:124] Setting up relu3
I0428 19:42:01.138401 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.138407 24963 net.cpp:139] Memory required for data: 1266800
I0428 19:42:01.138413 24963 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:01.138422 24963 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:01.138428 24963 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:01.138438 24963 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:01.138449 24963 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:01.138499 24963 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:01.138509 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.138516 24963 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:01.138521 24963 net.cpp:139] Memory required for data: 1274800
I0428 19:42:01.138528 24963 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:01.138540 24963 net.cpp:86] Creating Layer accuracy
I0428 19:42:01.138561 24963 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:01.138568 24963 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:01.138576 24963 net.cpp:382] accuracy -> accuracy
I0428 19:42:01.138588 24963 net.cpp:124] Setting up accuracy
I0428 19:42:01.138597 24963 net.cpp:131] Top shape: (1)
I0428 19:42:01.138602 24963 net.cpp:139] Memory required for data: 1274804
I0428 19:42:01.138610 24963 layer_factory.hpp:77] Creating layer loss
I0428 19:42:01.138618 24963 net.cpp:86] Creating Layer loss
I0428 19:42:01.138624 24963 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:01.138631 24963 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:01.138638 24963 net.cpp:382] loss -> loss
I0428 19:42:01.138648 24963 layer_factory.hpp:77] Creating layer loss
I0428 19:42:01.138913 24963 net.cpp:124] Setting up loss
I0428 19:42:01.138926 24963 net.cpp:131] Top shape: (1)
I0428 19:42:01.138931 24963 net.cpp:134]     with loss weight 1
I0428 19:42:01.138939 24963 net.cpp:139] Memory required for data: 1274808
I0428 19:42:01.138957 24963 net.cpp:200] loss needs backward computation.
I0428 19:42:01.138963 24963 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:01.138970 24963 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:01.138978 24963 net.cpp:200] relu3 needs backward computation.
I0428 19:42:01.138981 24963 net.cpp:200] ip3 needs backward computation.
I0428 19:42:01.138988 24963 net.cpp:200] relu2 needs backward computation.
I0428 19:42:01.138993 24963 net.cpp:200] ip2 needs backward computation.
I0428 19:42:01.138998 24963 net.cpp:200] relu1 needs backward computation.
I0428 19:42:01.139003 24963 net.cpp:200] ip1 needs backward computation.
I0428 19:42:01.139009 24963 net.cpp:200] pool1 needs backward computation.
I0428 19:42:01.139014 24963 net.cpp:200] conv1 needs backward computation.
I0428 19:42:01.139022 24963 net.cpp:200] pool0 needs backward computation.
I0428 19:42:01.139027 24963 net.cpp:200] conv0 needs backward computation.
I0428 19:42:01.139034 24963 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:01.139041 24963 net.cpp:202] mnist does not need backward computation.
I0428 19:42:01.139046 24963 net.cpp:244] This network produces output accuracy
I0428 19:42:01.139052 24963 net.cpp:244] This network produces output loss
I0428 19:42:01.139070 24963 net.cpp:257] Network initialization done.
I0428 19:42:01.139122 24963 solver.cpp:56] Solver scaffolding done.
I0428 19:42:01.139508 24963 caffe.cpp:248] Starting Optimization
I0428 19:42:01.139516 24963 solver.cpp:273] Solving LeNet
I0428 19:42:01.139520 24963 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:01.140302 24963 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:01.142962 24963 blocking_queue.cpp:49] Waiting for data
I0428 19:42:01.213174 24970 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:01.213619 24963 solver.cpp:398]     Test net output #0: accuracy = 0.1047
I0428 19:42:01.213645 24963 solver.cpp:398]     Test net output #1: loss = 2.31191 (* 1 = 2.31191 loss)
I0428 19:42:01.215508 24963 solver.cpp:219] Iteration 0 (-1.08881e-42 iter/s, 0.0759501s/100 iters), loss = 2.30671
I0428 19:42:01.215551 24963 solver.cpp:238]     Train net output #0: loss = 2.30671 (* 1 = 2.30671 loss)
I0428 19:42:01.215598 24963 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:01.288202 24963 solver.cpp:219] Iteration 100 (1376.62 iter/s, 0.0726415s/100 iters), loss = 1.02809
I0428 19:42:01.288228 24963 solver.cpp:238]     Train net output #0: loss = 1.02809 (* 1 = 1.02809 loss)
I0428 19:42:01.288254 24963 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:01.360605 24963 solver.cpp:219] Iteration 200 (1381.8 iter/s, 0.0723692s/100 iters), loss = 0.747913
I0428 19:42:01.360630 24963 solver.cpp:238]     Train net output #0: loss = 0.747913 (* 1 = 0.747913 loss)
I0428 19:42:01.360654 24963 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:01.433187 24963 solver.cpp:219] Iteration 300 (1378.41 iter/s, 0.0725473s/100 iters), loss = 0.516236
I0428 19:42:01.433223 24963 solver.cpp:238]     Train net output #0: loss = 0.516236 (* 1 = 0.516236 loss)
I0428 19:42:01.433233 24963 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:01.504483 24963 solver.cpp:219] Iteration 400 (1403.25 iter/s, 0.0712632s/100 iters), loss = 0.488522
I0428 19:42:01.504509 24963 solver.cpp:238]     Train net output #0: loss = 0.488522 (* 1 = 0.488522 loss)
I0428 19:42:01.504519 24963 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:01.574789 24963 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:01.619989 24970 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:01.620427 24963 solver.cpp:398]     Test net output #0: accuracy = 0.9364
I0428 19:42:01.620448 24963 solver.cpp:398]     Test net output #1: loss = 0.216642 (* 1 = 0.216642 loss)
I0428 19:42:01.621279 24963 solver.cpp:219] Iteration 500 (856.454 iter/s, 0.116761s/100 iters), loss = 0.287915
I0428 19:42:01.621315 24963 solver.cpp:238]     Train net output #0: loss = 0.287915 (* 1 = 0.287915 loss)
I0428 19:42:01.621343 24963 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:01.693588 24963 solver.cpp:219] Iteration 600 (1383.76 iter/s, 0.0722668s/100 iters), loss = 0.173177
I0428 19:42:01.693616 24963 solver.cpp:238]     Train net output #0: loss = 0.173177 (* 1 = 0.173177 loss)
I0428 19:42:01.693626 24963 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:01.766285 24963 solver.cpp:219] Iteration 700 (1376.22 iter/s, 0.072663s/100 iters), loss = 0.253363
I0428 19:42:01.766312 24963 solver.cpp:238]     Train net output #0: loss = 0.253363 (* 1 = 0.253363 loss)
I0428 19:42:01.766337 24963 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:01.838863 24963 solver.cpp:219] Iteration 800 (1378.47 iter/s, 0.0725443s/100 iters), loss = 0.294675
I0428 19:42:01.838891 24963 solver.cpp:238]     Train net output #0: loss = 0.294675 (* 1 = 0.294675 loss)
I0428 19:42:01.838915 24963 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:01.909696 24963 solver.cpp:219] Iteration 900 (1412.42 iter/s, 0.0708004s/100 iters), loss = 0.281695
I0428 19:42:01.909723 24963 solver.cpp:238]     Train net output #0: loss = 0.281695 (* 1 = 0.281695 loss)
I0428 19:42:01.909747 24963 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:01.933539 24969 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:01.980350 24963 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:01.981159 24963 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:01.981659 24963 solver.cpp:311] Iteration 1000, loss = 0.285094
I0428 19:42:01.981675 24963 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:02.028925 24970 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:02.029382 24963 solver.cpp:398]     Test net output #0: accuracy = 0.9579
I0428 19:42:02.029407 24963 solver.cpp:398]     Test net output #1: loss = 0.130926 (* 1 = 0.130926 loss)
I0428 19:42:02.029415 24963 solver.cpp:316] Optimization Done.
I0428 19:42:02.029423 24963 caffe.cpp:259] Optimization Done.
