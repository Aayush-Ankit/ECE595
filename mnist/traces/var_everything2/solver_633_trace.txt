I0428 19:51:25.244585 27278 caffe.cpp:218] Using GPUs 0
I0428 19:51:25.281528 27278 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:25.734705 27278 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test633.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:25.734838 27278 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test633.prototxt
I0428 19:51:25.735152 27278 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:25.735182 27278 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:25.735250 27278 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:25.735309 27278 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:25.735388 27278 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:25.735407 27278 net.cpp:86] Creating Layer mnist
I0428 19:51:25.735412 27278 net.cpp:382] mnist -> data
I0428 19:51:25.735432 27278 net.cpp:382] mnist -> label
I0428 19:51:25.736402 27278 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:25.738665 27278 net.cpp:124] Setting up mnist
I0428 19:51:25.738714 27278 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:25.738719 27278 net.cpp:131] Top shape: 64 (64)
I0428 19:51:25.738723 27278 net.cpp:139] Memory required for data: 200960
I0428 19:51:25.738729 27278 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:25.738744 27278 net.cpp:86] Creating Layer conv0
I0428 19:51:25.738749 27278 net.cpp:408] conv0 <- data
I0428 19:51:25.738759 27278 net.cpp:382] conv0 -> conv0
I0428 19:51:25.968032 27278 net.cpp:124] Setting up conv0
I0428 19:51:25.968076 27278 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:25.968080 27278 net.cpp:139] Memory required for data: 938240
I0428 19:51:25.968111 27278 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:25.968123 27278 net.cpp:86] Creating Layer pool0
I0428 19:51:25.968127 27278 net.cpp:408] pool0 <- conv0
I0428 19:51:25.968132 27278 net.cpp:382] pool0 -> pool0
I0428 19:51:25.968178 27278 net.cpp:124] Setting up pool0
I0428 19:51:25.968183 27278 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:25.968185 27278 net.cpp:139] Memory required for data: 1122560
I0428 19:51:25.968189 27278 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:25.968197 27278 net.cpp:86] Creating Layer conv1
I0428 19:51:25.968200 27278 net.cpp:408] conv1 <- pool0
I0428 19:51:25.968205 27278 net.cpp:382] conv1 -> conv1
I0428 19:51:25.971056 27278 net.cpp:124] Setting up conv1
I0428 19:51:25.971087 27278 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:25.971091 27278 net.cpp:139] Memory required for data: 1532160
I0428 19:51:25.971101 27278 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:25.971122 27278 net.cpp:86] Creating Layer pool1
I0428 19:51:25.971125 27278 net.cpp:408] pool1 <- conv1
I0428 19:51:25.971146 27278 net.cpp:382] pool1 -> pool1
I0428 19:51:25.971184 27278 net.cpp:124] Setting up pool1
I0428 19:51:25.971190 27278 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:25.971194 27278 net.cpp:139] Memory required for data: 1634560
I0428 19:51:25.971196 27278 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:25.971204 27278 net.cpp:86] Creating Layer ip1
I0428 19:51:25.971206 27278 net.cpp:408] ip1 <- pool1
I0428 19:51:25.971225 27278 net.cpp:382] ip1 -> ip1
I0428 19:51:25.971441 27278 net.cpp:124] Setting up ip1
I0428 19:51:25.971449 27278 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:25.971452 27278 net.cpp:139] Memory required for data: 1647360
I0428 19:51:25.971459 27278 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:25.971464 27278 net.cpp:86] Creating Layer relu1
I0428 19:51:25.971470 27278 net.cpp:408] relu1 <- ip1
I0428 19:51:25.971474 27278 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:25.971648 27278 net.cpp:124] Setting up relu1
I0428 19:51:25.971657 27278 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:25.971659 27278 net.cpp:139] Memory required for data: 1660160
I0428 19:51:25.971662 27278 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:25.971669 27278 net.cpp:86] Creating Layer ip2
I0428 19:51:25.971673 27278 net.cpp:408] ip2 <- ip1
I0428 19:51:25.971681 27278 net.cpp:382] ip2 -> ip2
I0428 19:51:25.971772 27278 net.cpp:124] Setting up ip2
I0428 19:51:25.971779 27278 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:25.971782 27278 net.cpp:139] Memory required for data: 1662720
I0428 19:51:25.971787 27278 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:25.971792 27278 net.cpp:86] Creating Layer relu2
I0428 19:51:25.971796 27278 net.cpp:408] relu2 <- ip2
I0428 19:51:25.971799 27278 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:25.972625 27278 net.cpp:124] Setting up relu2
I0428 19:51:25.972637 27278 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:25.972640 27278 net.cpp:139] Memory required for data: 1665280
I0428 19:51:25.972645 27278 layer_factory.hpp:77] Creating layer loss
I0428 19:51:25.972651 27278 net.cpp:86] Creating Layer loss
I0428 19:51:25.972654 27278 net.cpp:408] loss <- ip2
I0428 19:51:25.972658 27278 net.cpp:408] loss <- label
I0428 19:51:25.972664 27278 net.cpp:382] loss -> loss
I0428 19:51:25.972685 27278 layer_factory.hpp:77] Creating layer loss
I0428 19:51:25.972980 27278 net.cpp:124] Setting up loss
I0428 19:51:25.972990 27278 net.cpp:131] Top shape: (1)
I0428 19:51:25.973009 27278 net.cpp:134]     with loss weight 1
I0428 19:51:25.973023 27278 net.cpp:139] Memory required for data: 1665284
I0428 19:51:25.973027 27278 net.cpp:200] loss needs backward computation.
I0428 19:51:25.973031 27278 net.cpp:200] relu2 needs backward computation.
I0428 19:51:25.973034 27278 net.cpp:200] ip2 needs backward computation.
I0428 19:51:25.973037 27278 net.cpp:200] relu1 needs backward computation.
I0428 19:51:25.973040 27278 net.cpp:200] ip1 needs backward computation.
I0428 19:51:25.973053 27278 net.cpp:200] pool1 needs backward computation.
I0428 19:51:25.973057 27278 net.cpp:200] conv1 needs backward computation.
I0428 19:51:25.973059 27278 net.cpp:200] pool0 needs backward computation.
I0428 19:51:25.973062 27278 net.cpp:200] conv0 needs backward computation.
I0428 19:51:25.973065 27278 net.cpp:202] mnist does not need backward computation.
I0428 19:51:25.973069 27278 net.cpp:244] This network produces output loss
I0428 19:51:25.973078 27278 net.cpp:257] Network initialization done.
I0428 19:51:25.973485 27278 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test633.prototxt
I0428 19:51:25.973541 27278 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:25.973644 27278 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:25.973729 27278 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:25.973776 27278 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:25.973790 27278 net.cpp:86] Creating Layer mnist
I0428 19:51:25.973795 27278 net.cpp:382] mnist -> data
I0428 19:51:25.973803 27278 net.cpp:382] mnist -> label
I0428 19:51:25.973925 27278 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:25.976258 27278 net.cpp:124] Setting up mnist
I0428 19:51:25.976270 27278 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:25.976291 27278 net.cpp:131] Top shape: 100 (100)
I0428 19:51:25.976294 27278 net.cpp:139] Memory required for data: 314000
I0428 19:51:25.976299 27278 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:25.976346 27278 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:25.976351 27278 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:25.976356 27278 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:25.976364 27278 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:25.976420 27278 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:25.976438 27278 net.cpp:131] Top shape: 100 (100)
I0428 19:51:25.976440 27278 net.cpp:131] Top shape: 100 (100)
I0428 19:51:25.976444 27278 net.cpp:139] Memory required for data: 314800
I0428 19:51:25.976447 27278 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:25.976456 27278 net.cpp:86] Creating Layer conv0
I0428 19:51:25.976476 27278 net.cpp:408] conv0 <- data
I0428 19:51:25.976483 27278 net.cpp:382] conv0 -> conv0
I0428 19:51:25.978149 27278 net.cpp:124] Setting up conv0
I0428 19:51:25.978178 27278 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:25.978184 27278 net.cpp:139] Memory required for data: 1466800
I0428 19:51:25.978193 27278 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:25.978199 27278 net.cpp:86] Creating Layer pool0
I0428 19:51:25.978204 27278 net.cpp:408] pool0 <- conv0
I0428 19:51:25.978207 27278 net.cpp:382] pool0 -> pool0
I0428 19:51:25.978245 27278 net.cpp:124] Setting up pool0
I0428 19:51:25.978251 27278 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:25.978255 27278 net.cpp:139] Memory required for data: 1754800
I0428 19:51:25.978257 27278 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:25.978266 27278 net.cpp:86] Creating Layer conv1
I0428 19:51:25.978271 27278 net.cpp:408] conv1 <- pool0
I0428 19:51:25.978277 27278 net.cpp:382] conv1 -> conv1
I0428 19:51:25.980350 27278 net.cpp:124] Setting up conv1
I0428 19:51:25.980361 27278 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:25.980365 27278 net.cpp:139] Memory required for data: 2394800
I0428 19:51:25.980373 27278 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:25.980378 27278 net.cpp:86] Creating Layer pool1
I0428 19:51:25.980382 27278 net.cpp:408] pool1 <- conv1
I0428 19:51:25.980404 27278 net.cpp:382] pool1 -> pool1
I0428 19:51:25.980459 27278 net.cpp:124] Setting up pool1
I0428 19:51:25.980466 27278 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:25.980469 27278 net.cpp:139] Memory required for data: 2554800
I0428 19:51:25.980473 27278 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:25.980479 27278 net.cpp:86] Creating Layer ip1
I0428 19:51:25.980484 27278 net.cpp:408] ip1 <- pool1
I0428 19:51:25.980489 27278 net.cpp:382] ip1 -> ip1
I0428 19:51:25.980702 27278 net.cpp:124] Setting up ip1
I0428 19:51:25.980711 27278 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:25.980713 27278 net.cpp:139] Memory required for data: 2574800
I0428 19:51:25.980721 27278 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:25.980726 27278 net.cpp:86] Creating Layer relu1
I0428 19:51:25.980729 27278 net.cpp:408] relu1 <- ip1
I0428 19:51:25.980733 27278 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:25.980911 27278 net.cpp:124] Setting up relu1
I0428 19:51:25.980921 27278 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:25.980924 27278 net.cpp:139] Memory required for data: 2594800
I0428 19:51:25.980927 27278 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:25.980934 27278 net.cpp:86] Creating Layer ip2
I0428 19:51:25.980938 27278 net.cpp:408] ip2 <- ip1
I0428 19:51:25.980944 27278 net.cpp:382] ip2 -> ip2
I0428 19:51:25.981047 27278 net.cpp:124] Setting up ip2
I0428 19:51:25.981056 27278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:25.981060 27278 net.cpp:139] Memory required for data: 2598800
I0428 19:51:25.981065 27278 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:25.981070 27278 net.cpp:86] Creating Layer relu2
I0428 19:51:25.981073 27278 net.cpp:408] relu2 <- ip2
I0428 19:51:25.981078 27278 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:25.981264 27278 net.cpp:124] Setting up relu2
I0428 19:51:25.981272 27278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:25.981276 27278 net.cpp:139] Memory required for data: 2602800
I0428 19:51:25.981279 27278 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:25.981283 27278 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:25.981287 27278 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:25.981292 27278 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:25.981307 27278 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:25.981348 27278 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:25.981370 27278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:25.981374 27278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:25.981377 27278 net.cpp:139] Memory required for data: 2610800
I0428 19:51:25.981380 27278 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:25.981384 27278 net.cpp:86] Creating Layer accuracy
I0428 19:51:25.981387 27278 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:25.981391 27278 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:25.981395 27278 net.cpp:382] accuracy -> accuracy
I0428 19:51:25.981401 27278 net.cpp:124] Setting up accuracy
I0428 19:51:25.981405 27278 net.cpp:131] Top shape: (1)
I0428 19:51:25.981407 27278 net.cpp:139] Memory required for data: 2610804
I0428 19:51:25.981410 27278 layer_factory.hpp:77] Creating layer loss
I0428 19:51:25.981415 27278 net.cpp:86] Creating Layer loss
I0428 19:51:25.981418 27278 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:25.981422 27278 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:25.981426 27278 net.cpp:382] loss -> loss
I0428 19:51:25.981431 27278 layer_factory.hpp:77] Creating layer loss
I0428 19:51:25.981695 27278 net.cpp:124] Setting up loss
I0428 19:51:25.981704 27278 net.cpp:131] Top shape: (1)
I0428 19:51:25.981708 27278 net.cpp:134]     with loss weight 1
I0428 19:51:25.981714 27278 net.cpp:139] Memory required for data: 2610808
I0428 19:51:25.981717 27278 net.cpp:200] loss needs backward computation.
I0428 19:51:25.981721 27278 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:25.981725 27278 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:25.981729 27278 net.cpp:200] relu2 needs backward computation.
I0428 19:51:25.981732 27278 net.cpp:200] ip2 needs backward computation.
I0428 19:51:25.981741 27278 net.cpp:200] relu1 needs backward computation.
I0428 19:51:25.981744 27278 net.cpp:200] ip1 needs backward computation.
I0428 19:51:25.981747 27278 net.cpp:200] pool1 needs backward computation.
I0428 19:51:25.981750 27278 net.cpp:200] conv1 needs backward computation.
I0428 19:51:25.981753 27278 net.cpp:200] pool0 needs backward computation.
I0428 19:51:25.981757 27278 net.cpp:200] conv0 needs backward computation.
I0428 19:51:25.981760 27278 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:25.981770 27278 net.cpp:202] mnist does not need backward computation.
I0428 19:51:25.981777 27278 net.cpp:244] This network produces output accuracy
I0428 19:51:25.981781 27278 net.cpp:244] This network produces output loss
I0428 19:51:25.981792 27278 net.cpp:257] Network initialization done.
I0428 19:51:25.981830 27278 solver.cpp:56] Solver scaffolding done.
I0428 19:51:25.982110 27278 caffe.cpp:248] Starting Optimization
I0428 19:51:25.982116 27278 solver.cpp:273] Solving LeNet
I0428 19:51:25.982130 27278 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:25.982869 27278 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:25.986393 27278 blocking_queue.cpp:49] Waiting for data
I0428 19:51:26.052376 27285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:26.052908 27278 solver.cpp:398]     Test net output #0: accuracy = 0.0279
I0428 19:51:26.052932 27278 solver.cpp:398]     Test net output #1: loss = 2.33941 (* 1 = 2.33941 loss)
I0428 19:51:26.055460 27278 solver.cpp:219] Iteration 0 (0 iter/s, 0.0733061s/100 iters), loss = 2.31727
I0428 19:51:26.055483 27278 solver.cpp:238]     Train net output #0: loss = 2.31727 (* 1 = 2.31727 loss)
I0428 19:51:26.055495 27278 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:26.133687 27278 solver.cpp:219] Iteration 100 (1278.98 iter/s, 0.0781875s/100 iters), loss = 1.31221
I0428 19:51:26.133725 27278 solver.cpp:238]     Train net output #0: loss = 1.31221 (* 1 = 1.31221 loss)
I0428 19:51:26.133731 27278 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:26.218945 27278 solver.cpp:219] Iteration 200 (1173.39 iter/s, 0.0852234s/100 iters), loss = 1.03576
I0428 19:51:26.218988 27278 solver.cpp:238]     Train net output #0: loss = 1.03576 (* 1 = 1.03576 loss)
I0428 19:51:26.218997 27278 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:26.300861 27278 solver.cpp:219] Iteration 300 (1221.51 iter/s, 0.0818657s/100 iters), loss = 0.80031
I0428 19:51:26.300889 27278 solver.cpp:238]     Train net output #0: loss = 0.80031 (* 1 = 0.80031 loss)
I0428 19:51:26.300894 27278 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:26.384297 27278 solver.cpp:219] Iteration 400 (1199.05 iter/s, 0.0833997s/100 iters), loss = 1.05022
I0428 19:51:26.384340 27278 solver.cpp:238]     Train net output #0: loss = 1.05022 (* 1 = 1.05022 loss)
I0428 19:51:26.384346 27278 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:26.461328 27278 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:26.507210 27285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:26.507716 27278 solver.cpp:398]     Test net output #0: accuracy = 0.5839
I0428 19:51:26.507735 27278 solver.cpp:398]     Test net output #1: loss = 1.03136 (* 1 = 1.03136 loss)
I0428 19:51:26.508580 27278 solver.cpp:219] Iteration 500 (804.855 iter/s, 0.124246s/100 iters), loss = 1.30092
I0428 19:51:26.508621 27278 solver.cpp:238]     Train net output #0: loss = 1.30092 (* 1 = 1.30092 loss)
I0428 19:51:26.508637 27278 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:26.601742 27278 solver.cpp:219] Iteration 600 (1073.96 iter/s, 0.0931129s/100 iters), loss = 0.985406
I0428 19:51:26.601766 27278 solver.cpp:238]     Train net output #0: loss = 0.985406 (* 1 = 0.985406 loss)
I0428 19:51:26.601773 27278 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:26.691243 27278 solver.cpp:219] Iteration 700 (1117.73 iter/s, 0.0894669s/100 iters), loss = 0.858241
I0428 19:51:26.691269 27278 solver.cpp:238]     Train net output #0: loss = 0.858241 (* 1 = 0.858241 loss)
I0428 19:51:26.691292 27278 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:26.769774 27278 solver.cpp:219] Iteration 800 (1273.95 iter/s, 0.0784957s/100 iters), loss = 0.619574
I0428 19:51:26.769814 27278 solver.cpp:238]     Train net output #0: loss = 0.619574 (* 1 = 0.619574 loss)
I0428 19:51:26.769821 27278 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:26.848197 27278 solver.cpp:219] Iteration 900 (1275.69 iter/s, 0.0783892s/100 iters), loss = 0.345425
I0428 19:51:26.848239 27278 solver.cpp:238]     Train net output #0: loss = 0.345425 (* 1 = 0.345425 loss)
I0428 19:51:26.848245 27278 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:26.874271 27284 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:26.925246 27278 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:26.926249 27278 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:26.926779 27278 solver.cpp:311] Iteration 1000, loss = 0.443542
I0428 19:51:26.926795 27278 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:27.000699 27285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:27.001209 27278 solver.cpp:398]     Test net output #0: accuracy = 0.8866
I0428 19:51:27.001225 27278 solver.cpp:398]     Test net output #1: loss = 0.298584 (* 1 = 0.298584 loss)
I0428 19:51:27.001246 27278 solver.cpp:316] Optimization Done.
I0428 19:51:27.001250 27278 caffe.cpp:259] Optimization Done.
