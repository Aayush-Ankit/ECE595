I0428 20:10:01.132900 31750 caffe.cpp:218] Using GPUs 0
I0428 20:10:01.175338 31750 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:01.774456 31750 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1124.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:01.774629 31750 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1124.prototxt
I0428 20:10:01.775202 31750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:01.775226 31750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:01.775364 31750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:01.775462 31750 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:01.775585 31750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:01.775615 31750 net.cpp:86] Creating Layer mnist
I0428 20:10:01.775625 31750 net.cpp:382] mnist -> data
I0428 20:10:01.775655 31750 net.cpp:382] mnist -> label
I0428 20:10:01.777070 31750 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:01.780478 31750 net.cpp:124] Setting up mnist
I0428 20:10:01.780500 31750 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:01.780508 31750 net.cpp:131] Top shape: 64 (64)
I0428 20:10:01.780514 31750 net.cpp:139] Memory required for data: 200960
I0428 20:10:01.780524 31750 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:01.780546 31750 net.cpp:86] Creating Layer conv0
I0428 20:10:01.780572 31750 net.cpp:408] conv0 <- data
I0428 20:10:01.780589 31750 net.cpp:382] conv0 -> conv0
I0428 20:10:02.113746 31750 net.cpp:124] Setting up conv0
I0428 20:10:02.113795 31750 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:02.113801 31750 net.cpp:139] Memory required for data: 3887360
I0428 20:10:02.113822 31750 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:02.113852 31750 net.cpp:86] Creating Layer pool0
I0428 20:10:02.113858 31750 net.cpp:408] pool0 <- conv0
I0428 20:10:02.113867 31750 net.cpp:382] pool0 -> pool0
I0428 20:10:02.113939 31750 net.cpp:124] Setting up pool0
I0428 20:10:02.113948 31750 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:02.113953 31750 net.cpp:139] Memory required for data: 4808960
I0428 20:10:02.113958 31750 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:02.113973 31750 net.cpp:86] Creating Layer conv1
I0428 20:10:02.113978 31750 net.cpp:408] conv1 <- pool0
I0428 20:10:02.113986 31750 net.cpp:382] conv1 -> conv1
I0428 20:10:02.117849 31750 net.cpp:124] Setting up conv1
I0428 20:10:02.117885 31750 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:10:02.117905 31750 net.cpp:139] Memory required for data: 5218560
I0428 20:10:02.117918 31750 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:02.117928 31750 net.cpp:86] Creating Layer pool1
I0428 20:10:02.117933 31750 net.cpp:408] pool1 <- conv1
I0428 20:10:02.117941 31750 net.cpp:382] pool1 -> pool1
I0428 20:10:02.118005 31750 net.cpp:124] Setting up pool1
I0428 20:10:02.118021 31750 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:10:02.118026 31750 net.cpp:139] Memory required for data: 5320960
I0428 20:10:02.118029 31750 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:02.118041 31750 net.cpp:86] Creating Layer ip1
I0428 20:10:02.118046 31750 net.cpp:408] ip1 <- pool1
I0428 20:10:02.118053 31750 net.cpp:382] ip1 -> ip1
I0428 20:10:02.118413 31750 net.cpp:124] Setting up ip1
I0428 20:10:02.118423 31750 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:02.118443 31750 net.cpp:139] Memory required for data: 5333760
I0428 20:10:02.118453 31750 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:02.118464 31750 net.cpp:86] Creating Layer relu1
I0428 20:10:02.118469 31750 net.cpp:408] relu1 <- ip1
I0428 20:10:02.118489 31750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:02.118705 31750 net.cpp:124] Setting up relu1
I0428 20:10:02.118717 31750 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:02.118722 31750 net.cpp:139] Memory required for data: 5346560
I0428 20:10:02.118726 31750 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:02.118736 31750 net.cpp:86] Creating Layer ip2
I0428 20:10:02.118741 31750 net.cpp:408] ip2 <- ip1
I0428 20:10:02.118748 31750 net.cpp:382] ip2 -> ip2
I0428 20:10:02.118891 31750 net.cpp:124] Setting up ip2
I0428 20:10:02.118916 31750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:02.118921 31750 net.cpp:139] Memory required for data: 5349120
I0428 20:10:02.118929 31750 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:02.118939 31750 net.cpp:86] Creating Layer relu2
I0428 20:10:02.118944 31750 net.cpp:408] relu2 <- ip2
I0428 20:10:02.118950 31750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:02.119985 31750 net.cpp:124] Setting up relu2
I0428 20:10:02.120015 31750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:02.120020 31750 net.cpp:139] Memory required for data: 5351680
I0428 20:10:02.120025 31750 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:02.120036 31750 net.cpp:86] Creating Layer ip3
I0428 20:10:02.120041 31750 net.cpp:408] ip3 <- ip2
I0428 20:10:02.120050 31750 net.cpp:382] ip3 -> ip3
I0428 20:10:02.120201 31750 net.cpp:124] Setting up ip3
I0428 20:10:02.120211 31750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:02.120216 31750 net.cpp:139] Memory required for data: 5354240
I0428 20:10:02.120229 31750 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:02.120235 31750 net.cpp:86] Creating Layer relu3
I0428 20:10:02.120240 31750 net.cpp:408] relu3 <- ip3
I0428 20:10:02.120246 31750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:02.120481 31750 net.cpp:124] Setting up relu3
I0428 20:10:02.120493 31750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:02.120498 31750 net.cpp:139] Memory required for data: 5356800
I0428 20:10:02.120503 31750 layer_factory.hpp:77] Creating layer loss
I0428 20:10:02.120512 31750 net.cpp:86] Creating Layer loss
I0428 20:10:02.120515 31750 net.cpp:408] loss <- ip3
I0428 20:10:02.120522 31750 net.cpp:408] loss <- label
I0428 20:10:02.120530 31750 net.cpp:382] loss -> loss
I0428 20:10:02.120553 31750 layer_factory.hpp:77] Creating layer loss
I0428 20:10:02.120939 31750 net.cpp:124] Setting up loss
I0428 20:10:02.120951 31750 net.cpp:131] Top shape: (1)
I0428 20:10:02.120971 31750 net.cpp:134]     with loss weight 1
I0428 20:10:02.120990 31750 net.cpp:139] Memory required for data: 5356804
I0428 20:10:02.120995 31750 net.cpp:200] loss needs backward computation.
I0428 20:10:02.121000 31750 net.cpp:200] relu3 needs backward computation.
I0428 20:10:02.121004 31750 net.cpp:200] ip3 needs backward computation.
I0428 20:10:02.121008 31750 net.cpp:200] relu2 needs backward computation.
I0428 20:10:02.121013 31750 net.cpp:200] ip2 needs backward computation.
I0428 20:10:02.121017 31750 net.cpp:200] relu1 needs backward computation.
I0428 20:10:02.121022 31750 net.cpp:200] ip1 needs backward computation.
I0428 20:10:02.121026 31750 net.cpp:200] pool1 needs backward computation.
I0428 20:10:02.121031 31750 net.cpp:200] conv1 needs backward computation.
I0428 20:10:02.121037 31750 net.cpp:200] pool0 needs backward computation.
I0428 20:10:02.121040 31750 net.cpp:200] conv0 needs backward computation.
I0428 20:10:02.121045 31750 net.cpp:202] mnist does not need backward computation.
I0428 20:10:02.121050 31750 net.cpp:244] This network produces output loss
I0428 20:10:02.121065 31750 net.cpp:257] Network initialization done.
I0428 20:10:02.121575 31750 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1124.prototxt
I0428 20:10:02.121629 31750 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:02.121791 31750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:02.121903 31750 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:02.121958 31750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:02.121975 31750 net.cpp:86] Creating Layer mnist
I0428 20:10:02.121983 31750 net.cpp:382] mnist -> data
I0428 20:10:02.121991 31750 net.cpp:382] mnist -> label
I0428 20:10:02.122115 31750 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:02.124730 31750 net.cpp:124] Setting up mnist
I0428 20:10:02.124778 31750 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:02.124788 31750 net.cpp:131] Top shape: 100 (100)
I0428 20:10:02.124794 31750 net.cpp:139] Memory required for data: 314000
I0428 20:10:02.124799 31750 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:02.124807 31750 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:02.124833 31750 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:02.124840 31750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:02.124866 31750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:02.124996 31750 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:02.125007 31750 net.cpp:131] Top shape: 100 (100)
I0428 20:10:02.125013 31750 net.cpp:131] Top shape: 100 (100)
I0428 20:10:02.125017 31750 net.cpp:139] Memory required for data: 314800
I0428 20:10:02.125022 31750 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:02.125036 31750 net.cpp:86] Creating Layer conv0
I0428 20:10:02.125041 31750 net.cpp:408] conv0 <- data
I0428 20:10:02.125051 31750 net.cpp:382] conv0 -> conv0
I0428 20:10:02.127305 31750 net.cpp:124] Setting up conv0
I0428 20:10:02.127338 31750 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:02.127344 31750 net.cpp:139] Memory required for data: 6074800
I0428 20:10:02.127358 31750 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:02.127369 31750 net.cpp:86] Creating Layer pool0
I0428 20:10:02.127375 31750 net.cpp:408] pool0 <- conv0
I0428 20:10:02.127382 31750 net.cpp:382] pool0 -> pool0
I0428 20:10:02.127434 31750 net.cpp:124] Setting up pool0
I0428 20:10:02.127445 31750 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:02.127465 31750 net.cpp:139] Memory required for data: 7514800
I0428 20:10:02.127468 31750 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:02.127483 31750 net.cpp:86] Creating Layer conv1
I0428 20:10:02.127488 31750 net.cpp:408] conv1 <- pool0
I0428 20:10:02.127497 31750 net.cpp:382] conv1 -> conv1
I0428 20:10:02.130640 31750 net.cpp:124] Setting up conv1
I0428 20:10:02.130656 31750 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:10:02.130673 31750 net.cpp:139] Memory required for data: 8154800
I0428 20:10:02.130698 31750 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:02.130708 31750 net.cpp:86] Creating Layer pool1
I0428 20:10:02.130713 31750 net.cpp:408] pool1 <- conv1
I0428 20:10:02.130720 31750 net.cpp:382] pool1 -> pool1
I0428 20:10:02.130769 31750 net.cpp:124] Setting up pool1
I0428 20:10:02.130782 31750 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:10:02.130787 31750 net.cpp:139] Memory required for data: 8314800
I0428 20:10:02.130791 31750 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:02.130800 31750 net.cpp:86] Creating Layer ip1
I0428 20:10:02.130803 31750 net.cpp:408] ip1 <- pool1
I0428 20:10:02.130811 31750 net.cpp:382] ip1 -> ip1
I0428 20:10:02.131146 31750 net.cpp:124] Setting up ip1
I0428 20:10:02.131157 31750 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:02.131173 31750 net.cpp:139] Memory required for data: 8334800
I0428 20:10:02.131186 31750 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:02.131194 31750 net.cpp:86] Creating Layer relu1
I0428 20:10:02.131199 31750 net.cpp:408] relu1 <- ip1
I0428 20:10:02.131207 31750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:02.131441 31750 net.cpp:124] Setting up relu1
I0428 20:10:02.131453 31750 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:02.131458 31750 net.cpp:139] Memory required for data: 8354800
I0428 20:10:02.131464 31750 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:02.131474 31750 net.cpp:86] Creating Layer ip2
I0428 20:10:02.131479 31750 net.cpp:408] ip2 <- ip1
I0428 20:10:02.131494 31750 net.cpp:382] ip2 -> ip2
I0428 20:10:02.131639 31750 net.cpp:124] Setting up ip2
I0428 20:10:02.131664 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.131677 31750 net.cpp:139] Memory required for data: 8358800
I0428 20:10:02.131686 31750 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:02.131693 31750 net.cpp:86] Creating Layer relu2
I0428 20:10:02.131698 31750 net.cpp:408] relu2 <- ip2
I0428 20:10:02.131706 31750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:02.131934 31750 net.cpp:124] Setting up relu2
I0428 20:10:02.131945 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.131950 31750 net.cpp:139] Memory required for data: 8362800
I0428 20:10:02.131966 31750 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:02.131975 31750 net.cpp:86] Creating Layer ip3
I0428 20:10:02.131980 31750 net.cpp:408] ip3 <- ip2
I0428 20:10:02.132001 31750 net.cpp:382] ip3 -> ip3
I0428 20:10:02.132186 31750 net.cpp:124] Setting up ip3
I0428 20:10:02.132196 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.132201 31750 net.cpp:139] Memory required for data: 8366800
I0428 20:10:02.132223 31750 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:02.132230 31750 net.cpp:86] Creating Layer relu3
I0428 20:10:02.132236 31750 net.cpp:408] relu3 <- ip3
I0428 20:10:02.132242 31750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:02.133412 31750 net.cpp:124] Setting up relu3
I0428 20:10:02.133429 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.133433 31750 net.cpp:139] Memory required for data: 8370800
I0428 20:10:02.133438 31750 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:02.133446 31750 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:02.133451 31750 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:02.133458 31750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:02.133467 31750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:02.133517 31750 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:02.133525 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.133532 31750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:02.133535 31750 net.cpp:139] Memory required for data: 8378800
I0428 20:10:02.133540 31750 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:02.133548 31750 net.cpp:86] Creating Layer accuracy
I0428 20:10:02.133553 31750 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:02.133559 31750 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:02.133579 31750 net.cpp:382] accuracy -> accuracy
I0428 20:10:02.133589 31750 net.cpp:124] Setting up accuracy
I0428 20:10:02.133595 31750 net.cpp:131] Top shape: (1)
I0428 20:10:02.133599 31750 net.cpp:139] Memory required for data: 8378804
I0428 20:10:02.133604 31750 layer_factory.hpp:77] Creating layer loss
I0428 20:10:02.133610 31750 net.cpp:86] Creating Layer loss
I0428 20:10:02.133615 31750 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:02.133620 31750 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:02.133627 31750 net.cpp:382] loss -> loss
I0428 20:10:02.133635 31750 layer_factory.hpp:77] Creating layer loss
I0428 20:10:02.133950 31750 net.cpp:124] Setting up loss
I0428 20:10:02.133962 31750 net.cpp:131] Top shape: (1)
I0428 20:10:02.133967 31750 net.cpp:134]     with loss weight 1
I0428 20:10:02.133988 31750 net.cpp:139] Memory required for data: 8378808
I0428 20:10:02.133994 31750 net.cpp:200] loss needs backward computation.
I0428 20:10:02.133999 31750 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:02.134006 31750 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:02.134009 31750 net.cpp:200] relu3 needs backward computation.
I0428 20:10:02.134014 31750 net.cpp:200] ip3 needs backward computation.
I0428 20:10:02.134018 31750 net.cpp:200] relu2 needs backward computation.
I0428 20:10:02.134022 31750 net.cpp:200] ip2 needs backward computation.
I0428 20:10:02.134027 31750 net.cpp:200] relu1 needs backward computation.
I0428 20:10:02.134032 31750 net.cpp:200] ip1 needs backward computation.
I0428 20:10:02.134035 31750 net.cpp:200] pool1 needs backward computation.
I0428 20:10:02.134040 31750 net.cpp:200] conv1 needs backward computation.
I0428 20:10:02.134044 31750 net.cpp:200] pool0 needs backward computation.
I0428 20:10:02.134049 31750 net.cpp:200] conv0 needs backward computation.
I0428 20:10:02.134054 31750 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:02.134059 31750 net.cpp:202] mnist does not need backward computation.
I0428 20:10:02.134064 31750 net.cpp:244] This network produces output accuracy
I0428 20:10:02.134069 31750 net.cpp:244] This network produces output loss
I0428 20:10:02.134085 31750 net.cpp:257] Network initialization done.
I0428 20:10:02.134140 31750 solver.cpp:56] Solver scaffolding done.
I0428 20:10:02.134610 31750 caffe.cpp:248] Starting Optimization
I0428 20:10:02.134618 31750 solver.cpp:273] Solving LeNet
I0428 20:10:02.134624 31750 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:02.135681 31750 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:02.143381 31750 blocking_queue.cpp:49] Waiting for data
I0428 20:10:02.211735 31757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:02.212460 31750 solver.cpp:398]     Test net output #0: accuracy = 0.0777
I0428 20:10:02.212483 31750 solver.cpp:398]     Test net output #1: loss = 2.31417 (* 1 = 2.31417 loss)
I0428 20:10:02.217015 31750 solver.cpp:219] Iteration 0 (0 iter/s, 0.0823593s/100 iters), loss = 2.30787
I0428 20:10:02.217046 31750 solver.cpp:238]     Train net output #0: loss = 2.30787 (* 1 = 2.30787 loss)
I0428 20:10:02.217092 31750 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:02.337486 31750 solver.cpp:219] Iteration 100 (830.41 iter/s, 0.120422s/100 iters), loss = 0.850147
I0428 20:10:02.337550 31750 solver.cpp:238]     Train net output #0: loss = 0.850147 (* 1 = 0.850147 loss)
I0428 20:10:02.337563 31750 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:02.445569 31750 solver.cpp:219] Iteration 200 (925.739 iter/s, 0.108022s/100 iters), loss = 0.494605
I0428 20:10:02.445597 31750 solver.cpp:238]     Train net output #0: loss = 0.494605 (* 1 = 0.494605 loss)
I0428 20:10:02.445617 31750 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:02.550566 31750 solver.cpp:219] Iteration 300 (952.753 iter/s, 0.104959s/100 iters), loss = 0.399227
I0428 20:10:02.550595 31750 solver.cpp:238]     Train net output #0: loss = 0.399227 (* 1 = 0.399227 loss)
I0428 20:10:02.550602 31750 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:02.655431 31750 solver.cpp:219] Iteration 400 (953.972 iter/s, 0.104825s/100 iters), loss = 0.326107
I0428 20:10:02.655458 31750 solver.cpp:238]     Train net output #0: loss = 0.326107 (* 1 = 0.326107 loss)
I0428 20:10:02.655465 31750 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:02.759794 31750 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:02.834638 31757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:02.835280 31750 solver.cpp:398]     Test net output #0: accuracy = 0.8736
I0428 20:10:02.835302 31750 solver.cpp:398]     Test net output #1: loss = 0.334076 (* 1 = 0.334076 loss)
I0428 20:10:02.836344 31750 solver.cpp:219] Iteration 500 (552.88 iter/s, 0.180871s/100 iters), loss = 0.349607
I0428 20:10:02.836393 31750 solver.cpp:238]     Train net output #0: loss = 0.349607 (* 1 = 0.349607 loss)
I0428 20:10:02.836402 31750 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:02.947363 31750 solver.cpp:219] Iteration 600 (901.217 iter/s, 0.110961s/100 iters), loss = 0.360913
I0428 20:10:02.947391 31750 solver.cpp:238]     Train net output #0: loss = 0.360913 (* 1 = 0.360913 loss)
I0428 20:10:02.947398 31750 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:03.055932 31750 solver.cpp:219] Iteration 700 (921.407 iter/s, 0.10853s/100 iters), loss = 0.378063
I0428 20:10:03.055961 31750 solver.cpp:238]     Train net output #0: loss = 0.378063 (* 1 = 0.378063 loss)
I0428 20:10:03.055968 31750 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:03.164322 31750 solver.cpp:219] Iteration 800 (922.922 iter/s, 0.108351s/100 iters), loss = 0.482264
I0428 20:10:03.164346 31750 solver.cpp:238]     Train net output #0: loss = 0.482264 (* 1 = 0.482264 loss)
I0428 20:10:03.164352 31750 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:03.270504 31750 solver.cpp:219] Iteration 900 (942.082 iter/s, 0.106148s/100 iters), loss = 0.244132
I0428 20:10:03.270529 31750 solver.cpp:238]     Train net output #0: loss = 0.244132 (* 1 = 0.244132 loss)
I0428 20:10:03.270534 31750 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:03.304102 31756 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:03.370532 31750 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:03.371852 31750 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:03.372673 31750 solver.cpp:311] Iteration 1000, loss = 0.224312
I0428 20:10:03.372689 31750 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:03.447754 31757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:03.448392 31750 solver.cpp:398]     Test net output #0: accuracy = 0.8805
I0428 20:10:03.448412 31750 solver.cpp:398]     Test net output #1: loss = 0.299965 (* 1 = 0.299965 loss)
I0428 20:10:03.448423 31750 solver.cpp:316] Optimization Done.
I0428 20:10:03.448427 31750 caffe.cpp:259] Optimization Done.
