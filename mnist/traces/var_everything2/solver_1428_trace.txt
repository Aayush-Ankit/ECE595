I0428 20:23:51.634636  2325 caffe.cpp:218] Using GPUs 0
I0428 20:23:51.672627  2325 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:52.188632  2325 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1428.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:52.188777  2325 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1428.prototxt
I0428 20:23:52.189206  2325 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:52.189227  2325 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:52.189332  2325 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:52.189410  2325 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:52.189512  2325 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:52.189535  2325 net.cpp:86] Creating Layer mnist
I0428 20:23:52.189544  2325 net.cpp:382] mnist -> data
I0428 20:23:52.189568  2325 net.cpp:382] mnist -> label
I0428 20:23:52.190661  2325 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:52.193143  2325 net.cpp:124] Setting up mnist
I0428 20:23:52.193161  2325 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:52.193168  2325 net.cpp:131] Top shape: 64 (64)
I0428 20:23:52.193172  2325 net.cpp:139] Memory required for data: 200960
I0428 20:23:52.193179  2325 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:52.193197  2325 net.cpp:86] Creating Layer conv0
I0428 20:23:52.193217  2325 net.cpp:408] conv0 <- data
I0428 20:23:52.193231  2325 net.cpp:382] conv0 -> conv0
I0428 20:23:52.509941  2325 net.cpp:124] Setting up conv0
I0428 20:23:52.509974  2325 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:52.509980  2325 net.cpp:139] Memory required for data: 7573760
I0428 20:23:52.509999  2325 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:52.510015  2325 net.cpp:86] Creating Layer pool0
I0428 20:23:52.510020  2325 net.cpp:408] pool0 <- conv0
I0428 20:23:52.510026  2325 net.cpp:382] pool0 -> pool0
I0428 20:23:52.510087  2325 net.cpp:124] Setting up pool0
I0428 20:23:52.510097  2325 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:52.510100  2325 net.cpp:139] Memory required for data: 9416960
I0428 20:23:52.510104  2325 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:52.510118  2325 net.cpp:86] Creating Layer conv1
I0428 20:23:52.510121  2325 net.cpp:408] conv1 <- pool0
I0428 20:23:52.510128  2325 net.cpp:382] conv1 -> conv1
I0428 20:23:52.514078  2325 net.cpp:124] Setting up conv1
I0428 20:23:52.514096  2325 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:52.514101  2325 net.cpp:139] Memory required for data: 11055360
I0428 20:23:52.514111  2325 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:52.514122  2325 net.cpp:86] Creating Layer pool1
I0428 20:23:52.514127  2325 net.cpp:408] pool1 <- conv1
I0428 20:23:52.514132  2325 net.cpp:382] pool1 -> pool1
I0428 20:23:52.514179  2325 net.cpp:124] Setting up pool1
I0428 20:23:52.514186  2325 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:52.514190  2325 net.cpp:139] Memory required for data: 11464960
I0428 20:23:52.514194  2325 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:52.514209  2325 net.cpp:86] Creating Layer ip1
I0428 20:23:52.514214  2325 net.cpp:408] ip1 <- pool1
I0428 20:23:52.514219  2325 net.cpp:382] ip1 -> ip1
I0428 20:23:52.514608  2325 net.cpp:124] Setting up ip1
I0428 20:23:52.514618  2325 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:52.514621  2325 net.cpp:139] Memory required for data: 11471360
I0428 20:23:52.514631  2325 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:52.514636  2325 net.cpp:86] Creating Layer relu1
I0428 20:23:52.514641  2325 net.cpp:408] relu1 <- ip1
I0428 20:23:52.514645  2325 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:52.514845  2325 net.cpp:124] Setting up relu1
I0428 20:23:52.514856  2325 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:52.514860  2325 net.cpp:139] Memory required for data: 11477760
I0428 20:23:52.514864  2325 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:52.514873  2325 net.cpp:86] Creating Layer ip2
I0428 20:23:52.514876  2325 net.cpp:408] ip2 <- ip1
I0428 20:23:52.514881  2325 net.cpp:382] ip2 -> ip2
I0428 20:23:52.514995  2325 net.cpp:124] Setting up ip2
I0428 20:23:52.515003  2325 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:52.515007  2325 net.cpp:139] Memory required for data: 11484160
I0428 20:23:52.515014  2325 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:52.515022  2325 net.cpp:86] Creating Layer relu2
I0428 20:23:52.515025  2325 net.cpp:408] relu2 <- ip2
I0428 20:23:52.515030  2325 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:52.515877  2325 net.cpp:124] Setting up relu2
I0428 20:23:52.515892  2325 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:52.515895  2325 net.cpp:139] Memory required for data: 11490560
I0428 20:23:52.515900  2325 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:52.515908  2325 net.cpp:86] Creating Layer ip3
I0428 20:23:52.515913  2325 net.cpp:408] ip3 <- ip2
I0428 20:23:52.515918  2325 net.cpp:382] ip3 -> ip3
I0428 20:23:52.516036  2325 net.cpp:124] Setting up ip3
I0428 20:23:52.516047  2325 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:52.516050  2325 net.cpp:139] Memory required for data: 11493120
I0428 20:23:52.516059  2325 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:52.516065  2325 net.cpp:86] Creating Layer relu3
I0428 20:23:52.516069  2325 net.cpp:408] relu3 <- ip3
I0428 20:23:52.516074  2325 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:52.516278  2325 net.cpp:124] Setting up relu3
I0428 20:23:52.516289  2325 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:52.516294  2325 net.cpp:139] Memory required for data: 11495680
I0428 20:23:52.516297  2325 layer_factory.hpp:77] Creating layer loss
I0428 20:23:52.516304  2325 net.cpp:86] Creating Layer loss
I0428 20:23:52.516309  2325 net.cpp:408] loss <- ip3
I0428 20:23:52.516312  2325 net.cpp:408] loss <- label
I0428 20:23:52.516319  2325 net.cpp:382] loss -> loss
I0428 20:23:52.516341  2325 layer_factory.hpp:77] Creating layer loss
I0428 20:23:52.516611  2325 net.cpp:124] Setting up loss
I0428 20:23:52.516621  2325 net.cpp:131] Top shape: (1)
I0428 20:23:52.516625  2325 net.cpp:134]     with loss weight 1
I0428 20:23:52.516643  2325 net.cpp:139] Memory required for data: 11495684
I0428 20:23:52.516646  2325 net.cpp:200] loss needs backward computation.
I0428 20:23:52.516654  2325 net.cpp:200] relu3 needs backward computation.
I0428 20:23:52.516657  2325 net.cpp:200] ip3 needs backward computation.
I0428 20:23:52.516661  2325 net.cpp:200] relu2 needs backward computation.
I0428 20:23:52.516664  2325 net.cpp:200] ip2 needs backward computation.
I0428 20:23:52.516669  2325 net.cpp:200] relu1 needs backward computation.
I0428 20:23:52.516671  2325 net.cpp:200] ip1 needs backward computation.
I0428 20:23:52.516674  2325 net.cpp:200] pool1 needs backward computation.
I0428 20:23:52.516679  2325 net.cpp:200] conv1 needs backward computation.
I0428 20:23:52.516682  2325 net.cpp:200] pool0 needs backward computation.
I0428 20:23:52.516685  2325 net.cpp:200] conv0 needs backward computation.
I0428 20:23:52.516690  2325 net.cpp:202] mnist does not need backward computation.
I0428 20:23:52.516693  2325 net.cpp:244] This network produces output loss
I0428 20:23:52.516705  2325 net.cpp:257] Network initialization done.
I0428 20:23:52.517098  2325 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1428.prototxt
I0428 20:23:52.517132  2325 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:52.517246  2325 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:52.517340  2325 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:52.517392  2325 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:52.517411  2325 net.cpp:86] Creating Layer mnist
I0428 20:23:52.517417  2325 net.cpp:382] mnist -> data
I0428 20:23:52.517426  2325 net.cpp:382] mnist -> label
I0428 20:23:52.517526  2325 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:52.518766  2325 net.cpp:124] Setting up mnist
I0428 20:23:52.518782  2325 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:52.518788  2325 net.cpp:131] Top shape: 100 (100)
I0428 20:23:52.518792  2325 net.cpp:139] Memory required for data: 314000
I0428 20:23:52.518796  2325 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:52.518808  2325 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:52.518813  2325 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:52.518820  2325 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:52.518827  2325 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:52.518882  2325 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:52.518889  2325 net.cpp:131] Top shape: 100 (100)
I0428 20:23:52.518894  2325 net.cpp:131] Top shape: 100 (100)
I0428 20:23:52.518898  2325 net.cpp:139] Memory required for data: 314800
I0428 20:23:52.518903  2325 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:52.518913  2325 net.cpp:86] Creating Layer conv0
I0428 20:23:52.518916  2325 net.cpp:408] conv0 <- data
I0428 20:23:52.518921  2325 net.cpp:382] conv0 -> conv0
I0428 20:23:52.520875  2325 net.cpp:124] Setting up conv0
I0428 20:23:52.520892  2325 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:52.520897  2325 net.cpp:139] Memory required for data: 11834800
I0428 20:23:52.520908  2325 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:52.520916  2325 net.cpp:86] Creating Layer pool0
I0428 20:23:52.520920  2325 net.cpp:408] pool0 <- conv0
I0428 20:23:52.520926  2325 net.cpp:382] pool0 -> pool0
I0428 20:23:52.520972  2325 net.cpp:124] Setting up pool0
I0428 20:23:52.520982  2325 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:52.520985  2325 net.cpp:139] Memory required for data: 14714800
I0428 20:23:52.520989  2325 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:52.521000  2325 net.cpp:86] Creating Layer conv1
I0428 20:23:52.521004  2325 net.cpp:408] conv1 <- pool0
I0428 20:23:52.521010  2325 net.cpp:382] conv1 -> conv1
I0428 20:23:52.524603  2325 net.cpp:124] Setting up conv1
I0428 20:23:52.524622  2325 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:52.524627  2325 net.cpp:139] Memory required for data: 17274800
I0428 20:23:52.524637  2325 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:52.524646  2325 net.cpp:86] Creating Layer pool1
I0428 20:23:52.524652  2325 net.cpp:408] pool1 <- conv1
I0428 20:23:52.524657  2325 net.cpp:382] pool1 -> pool1
I0428 20:23:52.524699  2325 net.cpp:124] Setting up pool1
I0428 20:23:52.524708  2325 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:52.524713  2325 net.cpp:139] Memory required for data: 17914800
I0428 20:23:52.524716  2325 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:52.524724  2325 net.cpp:86] Creating Layer ip1
I0428 20:23:52.524729  2325 net.cpp:408] ip1 <- pool1
I0428 20:23:52.524734  2325 net.cpp:382] ip1 -> ip1
I0428 20:23:52.525146  2325 net.cpp:124] Setting up ip1
I0428 20:23:52.525167  2325 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:52.525172  2325 net.cpp:139] Memory required for data: 17924800
I0428 20:23:52.525182  2325 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:52.525187  2325 net.cpp:86] Creating Layer relu1
I0428 20:23:52.525192  2325 net.cpp:408] relu1 <- ip1
I0428 20:23:52.525197  2325 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:52.525478  2325 net.cpp:124] Setting up relu1
I0428 20:23:52.525488  2325 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:52.525493  2325 net.cpp:139] Memory required for data: 17934800
I0428 20:23:52.525497  2325 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:52.525511  2325 net.cpp:86] Creating Layer ip2
I0428 20:23:52.525516  2325 net.cpp:408] ip2 <- ip1
I0428 20:23:52.525521  2325 net.cpp:382] ip2 -> ip2
I0428 20:23:52.525640  2325 net.cpp:124] Setting up ip2
I0428 20:23:52.525650  2325 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:52.525653  2325 net.cpp:139] Memory required for data: 17944800
I0428 20:23:52.525660  2325 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:52.525666  2325 net.cpp:86] Creating Layer relu2
I0428 20:23:52.525671  2325 net.cpp:408] relu2 <- ip2
I0428 20:23:52.525676  2325 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:52.525856  2325 net.cpp:124] Setting up relu2
I0428 20:23:52.525866  2325 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:52.525869  2325 net.cpp:139] Memory required for data: 17954800
I0428 20:23:52.525873  2325 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:52.525879  2325 net.cpp:86] Creating Layer ip3
I0428 20:23:52.525882  2325 net.cpp:408] ip3 <- ip2
I0428 20:23:52.525888  2325 net.cpp:382] ip3 -> ip3
I0428 20:23:52.526000  2325 net.cpp:124] Setting up ip3
I0428 20:23:52.526007  2325 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:52.526011  2325 net.cpp:139] Memory required for data: 17958800
I0428 20:23:52.526021  2325 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:52.526026  2325 net.cpp:86] Creating Layer relu3
I0428 20:23:52.526031  2325 net.cpp:408] relu3 <- ip3
I0428 20:23:52.526036  2325 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:52.526945  2325 net.cpp:124] Setting up relu3
I0428 20:23:52.526959  2325 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:52.526964  2325 net.cpp:139] Memory required for data: 17962800
I0428 20:23:52.526968  2325 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:52.526974  2325 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:52.526978  2325 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:52.526984  2325 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:52.526993  2325 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:52.527035  2325 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:52.527043  2325 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:52.527048  2325 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:52.527051  2325 net.cpp:139] Memory required for data: 17970800
I0428 20:23:52.527055  2325 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:52.527061  2325 net.cpp:86] Creating Layer accuracy
I0428 20:23:52.527065  2325 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:52.527070  2325 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:52.527074  2325 net.cpp:382] accuracy -> accuracy
I0428 20:23:52.527083  2325 net.cpp:124] Setting up accuracy
I0428 20:23:52.527087  2325 net.cpp:131] Top shape: (1)
I0428 20:23:52.527091  2325 net.cpp:139] Memory required for data: 17970804
I0428 20:23:52.527094  2325 layer_factory.hpp:77] Creating layer loss
I0428 20:23:52.527099  2325 net.cpp:86] Creating Layer loss
I0428 20:23:52.527103  2325 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:52.527107  2325 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:52.527112  2325 net.cpp:382] loss -> loss
I0428 20:23:52.527119  2325 layer_factory.hpp:77] Creating layer loss
I0428 20:23:52.527385  2325 net.cpp:124] Setting up loss
I0428 20:23:52.527396  2325 net.cpp:131] Top shape: (1)
I0428 20:23:52.527400  2325 net.cpp:134]     with loss weight 1
I0428 20:23:52.527420  2325 net.cpp:139] Memory required for data: 17970808
I0428 20:23:52.527425  2325 net.cpp:200] loss needs backward computation.
I0428 20:23:52.527428  2325 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:52.527433  2325 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:52.527437  2325 net.cpp:200] relu3 needs backward computation.
I0428 20:23:52.527441  2325 net.cpp:200] ip3 needs backward computation.
I0428 20:23:52.527444  2325 net.cpp:200] relu2 needs backward computation.
I0428 20:23:52.527447  2325 net.cpp:200] ip2 needs backward computation.
I0428 20:23:52.527451  2325 net.cpp:200] relu1 needs backward computation.
I0428 20:23:52.527453  2325 net.cpp:200] ip1 needs backward computation.
I0428 20:23:52.527457  2325 net.cpp:200] pool1 needs backward computation.
I0428 20:23:52.527462  2325 net.cpp:200] conv1 needs backward computation.
I0428 20:23:52.527464  2325 net.cpp:200] pool0 needs backward computation.
I0428 20:23:52.527468  2325 net.cpp:200] conv0 needs backward computation.
I0428 20:23:52.527472  2325 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:52.527477  2325 net.cpp:202] mnist does not need backward computation.
I0428 20:23:52.527480  2325 net.cpp:244] This network produces output accuracy
I0428 20:23:52.527484  2325 net.cpp:244] This network produces output loss
I0428 20:23:52.527496  2325 net.cpp:257] Network initialization done.
I0428 20:23:52.527546  2325 solver.cpp:56] Solver scaffolding done.
I0428 20:23:52.527940  2325 caffe.cpp:248] Starting Optimization
I0428 20:23:52.527946  2325 solver.cpp:273] Solving LeNet
I0428 20:23:52.527951  2325 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:52.528844  2325 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:52.623960  2332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:52.626441  2325 solver.cpp:398]     Test net output #0: accuracy = 0.0965
I0428 20:23:52.626466  2325 solver.cpp:398]     Test net output #1: loss = 2.32474 (* 1 = 2.32474 loss)
I0428 20:23:52.632539  2325 solver.cpp:219] Iteration 0 (-4.50556e-31 iter/s, 0.104561s/100 iters), loss = 2.32036
I0428 20:23:52.632570  2325 solver.cpp:238]     Train net output #0: loss = 2.32036 (* 1 = 2.32036 loss)
I0428 20:23:52.632585  2325 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:52.872191  2325 solver.cpp:219] Iteration 100 (417.361 iter/s, 0.239601s/100 iters), loss = 1.03827
I0428 20:23:52.872236  2325 solver.cpp:238]     Train net output #0: loss = 1.03827 (* 1 = 1.03827 loss)
I0428 20:23:52.872248  2325 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:53.116679  2325 solver.cpp:219] Iteration 200 (409.122 iter/s, 0.244426s/100 iters), loss = 0.336807
I0428 20:23:53.116724  2325 solver.cpp:238]     Train net output #0: loss = 0.336807 (* 1 = 0.336807 loss)
I0428 20:23:53.116734  2325 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:53.363405  2325 solver.cpp:219] Iteration 300 (405.408 iter/s, 0.246665s/100 iters), loss = 0.354702
I0428 20:23:53.363450  2325 solver.cpp:238]     Train net output #0: loss = 0.354702 (* 1 = 0.354702 loss)
I0428 20:23:53.363461  2325 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:53.609088  2325 solver.cpp:219] Iteration 400 (407.132 iter/s, 0.245621s/100 iters), loss = 0.381396
I0428 20:23:53.609136  2325 solver.cpp:238]     Train net output #0: loss = 0.381396 (* 1 = 0.381396 loss)
I0428 20:23:53.609148  2325 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:53.854804  2325 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:53.955096  2332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:53.958344  2325 solver.cpp:398]     Test net output #0: accuracy = 0.8736
I0428 20:23:53.958369  2325 solver.cpp:398]     Test net output #1: loss = 0.334895 (* 1 = 0.334895 loss)
I0428 20:23:53.960587  2325 solver.cpp:219] Iteration 500 (284.549 iter/s, 0.351433s/100 iters), loss = 0.334211
I0428 20:23:53.960613  2325 solver.cpp:238]     Train net output #0: loss = 0.334211 (* 1 = 0.334211 loss)
I0428 20:23:53.960641  2325 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:54.193039  2325 solver.cpp:219] Iteration 600 (430.278 iter/s, 0.232408s/100 iters), loss = 0.352523
I0428 20:23:54.193073  2325 solver.cpp:238]     Train net output #0: loss = 0.352523 (* 1 = 0.352523 loss)
I0428 20:23:54.193081  2325 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:54.423992  2325 solver.cpp:219] Iteration 700 (433.081 iter/s, 0.230904s/100 iters), loss = 0.340684
I0428 20:23:54.424021  2325 solver.cpp:238]     Train net output #0: loss = 0.340684 (* 1 = 0.340684 loss)
I0428 20:23:54.424029  2325 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:54.633219  2325 solver.cpp:219] Iteration 800 (478.056 iter/s, 0.209181s/100 iters), loss = 0.482348
I0428 20:23:54.633251  2325 solver.cpp:238]     Train net output #0: loss = 0.482348 (* 1 = 0.482348 loss)
I0428 20:23:54.633260  2325 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:54.858559  2325 solver.cpp:219] Iteration 900 (443.88 iter/s, 0.225286s/100 iters), loss = 0.208431
I0428 20:23:54.858609  2325 solver.cpp:238]     Train net output #0: loss = 0.208431 (* 1 = 0.208431 loss)
I0428 20:23:54.858621  2325 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:54.939821  2331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:55.093801  2325 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:55.099283  2325 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:55.101667  2325 solver.cpp:311] Iteration 1000, loss = 0.291223
I0428 20:23:55.101688  2325 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:55.190704  2332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:55.193132  2325 solver.cpp:398]     Test net output #0: accuracy = 0.8863
I0428 20:23:55.193155  2325 solver.cpp:398]     Test net output #1: loss = 0.286154 (* 1 = 0.286154 loss)
I0428 20:23:55.193161  2325 solver.cpp:316] Optimization Done.
I0428 20:23:55.193164  2325 caffe.cpp:259] Optimization Done.
