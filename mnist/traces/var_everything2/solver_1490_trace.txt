I0428 20:27:32.378914  3055 caffe.cpp:218] Using GPUs 0
I0428 20:27:32.410596  3055 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:32.921427  3055 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1490.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:32.921567  3055 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1490.prototxt
I0428 20:27:32.921936  3055 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:32.921954  3055 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:32.922039  3055 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:32.922107  3055 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:32.922204  3055 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:32.922227  3055 net.cpp:86] Creating Layer mnist
I0428 20:27:32.922235  3055 net.cpp:382] mnist -> data
I0428 20:27:32.922257  3055 net.cpp:382] mnist -> label
I0428 20:27:32.923343  3055 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:32.925917  3055 net.cpp:124] Setting up mnist
I0428 20:27:32.925935  3055 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:32.925941  3055 net.cpp:131] Top shape: 64 (64)
I0428 20:27:32.925947  3055 net.cpp:139] Memory required for data: 200960
I0428 20:27:32.925958  3055 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:32.925976  3055 net.cpp:86] Creating Layer conv0
I0428 20:27:32.925981  3055 net.cpp:408] conv0 <- data
I0428 20:27:32.925992  3055 net.cpp:382] conv0 -> conv0
I0428 20:27:33.173497  3055 net.cpp:124] Setting up conv0
I0428 20:27:33.173539  3055 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:33.173543  3055 net.cpp:139] Memory required for data: 14946560
I0428 20:27:33.173578  3055 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:33.173606  3055 net.cpp:86] Creating Layer pool0
I0428 20:27:33.173610  3055 net.cpp:408] pool0 <- conv0
I0428 20:27:33.173615  3055 net.cpp:382] pool0 -> pool0
I0428 20:27:33.173662  3055 net.cpp:124] Setting up pool0
I0428 20:27:33.173676  3055 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:33.173678  3055 net.cpp:139] Memory required for data: 18632960
I0428 20:27:33.173681  3055 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:33.173692  3055 net.cpp:86] Creating Layer conv1
I0428 20:27:33.173696  3055 net.cpp:408] conv1 <- pool0
I0428 20:27:33.173701  3055 net.cpp:382] conv1 -> conv1
I0428 20:27:33.176486  3055 net.cpp:124] Setting up conv1
I0428 20:27:33.176514  3055 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:33.176520  3055 net.cpp:139] Memory required for data: 18714880
I0428 20:27:33.176532  3055 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:33.176539  3055 net.cpp:86] Creating Layer pool1
I0428 20:27:33.176558  3055 net.cpp:408] pool1 <- conv1
I0428 20:27:33.176563  3055 net.cpp:382] pool1 -> pool1
I0428 20:27:33.176615  3055 net.cpp:124] Setting up pool1
I0428 20:27:33.176621  3055 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:33.176625  3055 net.cpp:139] Memory required for data: 18735360
I0428 20:27:33.176627  3055 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:33.176635  3055 net.cpp:86] Creating Layer ip1
I0428 20:27:33.176638  3055 net.cpp:408] ip1 <- pool1
I0428 20:27:33.176642  3055 net.cpp:382] ip1 -> ip1
I0428 20:27:33.176751  3055 net.cpp:124] Setting up ip1
I0428 20:27:33.176759  3055 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:27:33.176761  3055 net.cpp:139] Memory required for data: 18741760
I0428 20:27:33.176769  3055 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:33.176774  3055 net.cpp:86] Creating Layer relu1
I0428 20:27:33.176777  3055 net.cpp:408] relu1 <- ip1
I0428 20:27:33.176781  3055 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:33.176988  3055 net.cpp:124] Setting up relu1
I0428 20:27:33.176998  3055 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:27:33.177002  3055 net.cpp:139] Memory required for data: 18748160
I0428 20:27:33.177006  3055 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:33.177012  3055 net.cpp:86] Creating Layer ip2
I0428 20:27:33.177016  3055 net.cpp:408] ip2 <- ip1
I0428 20:27:33.177037  3055 net.cpp:382] ip2 -> ip2
I0428 20:27:33.177157  3055 net.cpp:124] Setting up ip2
I0428 20:27:33.177179  3055 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:33.177182  3055 net.cpp:139] Memory required for data: 18750720
I0428 20:27:33.177202  3055 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:33.177209  3055 net.cpp:86] Creating Layer relu2
I0428 20:27:33.177212  3055 net.cpp:408] relu2 <- ip2
I0428 20:27:33.177217  3055 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:33.177964  3055 net.cpp:124] Setting up relu2
I0428 20:27:33.177976  3055 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:33.177991  3055 net.cpp:139] Memory required for data: 18753280
I0428 20:27:33.177995  3055 layer_factory.hpp:77] Creating layer loss
I0428 20:27:33.178002  3055 net.cpp:86] Creating Layer loss
I0428 20:27:33.178006  3055 net.cpp:408] loss <- ip2
I0428 20:27:33.178010  3055 net.cpp:408] loss <- label
I0428 20:27:33.178015  3055 net.cpp:382] loss -> loss
I0428 20:27:33.178036  3055 layer_factory.hpp:77] Creating layer loss
I0428 20:27:33.178288  3055 net.cpp:124] Setting up loss
I0428 20:27:33.178298  3055 net.cpp:131] Top shape: (1)
I0428 20:27:33.178302  3055 net.cpp:134]     with loss weight 1
I0428 20:27:33.178315  3055 net.cpp:139] Memory required for data: 18753284
I0428 20:27:33.178319  3055 net.cpp:200] loss needs backward computation.
I0428 20:27:33.178323  3055 net.cpp:200] relu2 needs backward computation.
I0428 20:27:33.178326  3055 net.cpp:200] ip2 needs backward computation.
I0428 20:27:33.178329  3055 net.cpp:200] relu1 needs backward computation.
I0428 20:27:33.178333  3055 net.cpp:200] ip1 needs backward computation.
I0428 20:27:33.178345  3055 net.cpp:200] pool1 needs backward computation.
I0428 20:27:33.178349  3055 net.cpp:200] conv1 needs backward computation.
I0428 20:27:33.178352  3055 net.cpp:200] pool0 needs backward computation.
I0428 20:27:33.178355  3055 net.cpp:200] conv0 needs backward computation.
I0428 20:27:33.178359  3055 net.cpp:202] mnist does not need backward computation.
I0428 20:27:33.178361  3055 net.cpp:244] This network produces output loss
I0428 20:27:33.178369  3055 net.cpp:257] Network initialization done.
I0428 20:27:33.178678  3055 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1490.prototxt
I0428 20:27:33.178704  3055 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:33.178783  3055 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:33.178843  3055 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:33.178884  3055 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:33.178896  3055 net.cpp:86] Creating Layer mnist
I0428 20:27:33.178900  3055 net.cpp:382] mnist -> data
I0428 20:27:33.178907  3055 net.cpp:382] mnist -> label
I0428 20:27:33.178989  3055 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:33.180963  3055 net.cpp:124] Setting up mnist
I0428 20:27:33.180976  3055 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:33.180981  3055 net.cpp:131] Top shape: 100 (100)
I0428 20:27:33.180984  3055 net.cpp:139] Memory required for data: 314000
I0428 20:27:33.180987  3055 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:33.180997  3055 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:33.181001  3055 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:33.181005  3055 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:33.181012  3055 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:33.181119  3055 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:33.181128  3055 net.cpp:131] Top shape: 100 (100)
I0428 20:27:33.181131  3055 net.cpp:131] Top shape: 100 (100)
I0428 20:27:33.181133  3055 net.cpp:139] Memory required for data: 314800
I0428 20:27:33.181136  3055 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:33.181144  3055 net.cpp:86] Creating Layer conv0
I0428 20:27:33.181147  3055 net.cpp:408] conv0 <- data
I0428 20:27:33.181152  3055 net.cpp:382] conv0 -> conv0
I0428 20:27:33.182814  3055 net.cpp:124] Setting up conv0
I0428 20:27:33.182831  3055 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:33.182835  3055 net.cpp:139] Memory required for data: 23354800
I0428 20:27:33.182844  3055 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:33.182867  3055 net.cpp:86] Creating Layer pool0
I0428 20:27:33.182870  3055 net.cpp:408] pool0 <- conv0
I0428 20:27:33.182889  3055 net.cpp:382] pool0 -> pool0
I0428 20:27:33.182924  3055 net.cpp:124] Setting up pool0
I0428 20:27:33.182929  3055 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:33.182932  3055 net.cpp:139] Memory required for data: 29114800
I0428 20:27:33.182935  3055 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:33.182942  3055 net.cpp:86] Creating Layer conv1
I0428 20:27:33.182945  3055 net.cpp:408] conv1 <- pool0
I0428 20:27:33.182950  3055 net.cpp:382] conv1 -> conv1
I0428 20:27:33.184496  3055 net.cpp:124] Setting up conv1
I0428 20:27:33.184509  3055 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:33.184514  3055 net.cpp:139] Memory required for data: 29242800
I0428 20:27:33.184521  3055 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:33.184527  3055 net.cpp:86] Creating Layer pool1
I0428 20:27:33.184531  3055 net.cpp:408] pool1 <- conv1
I0428 20:27:33.184535  3055 net.cpp:382] pool1 -> pool1
I0428 20:27:33.184576  3055 net.cpp:124] Setting up pool1
I0428 20:27:33.184582  3055 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:33.184587  3055 net.cpp:139] Memory required for data: 29274800
I0428 20:27:33.184588  3055 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:33.184594  3055 net.cpp:86] Creating Layer ip1
I0428 20:27:33.184598  3055 net.cpp:408] ip1 <- pool1
I0428 20:27:33.184602  3055 net.cpp:382] ip1 -> ip1
I0428 20:27:33.184710  3055 net.cpp:124] Setting up ip1
I0428 20:27:33.184720  3055 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:27:33.184726  3055 net.cpp:139] Memory required for data: 29284800
I0428 20:27:33.184761  3055 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:33.184769  3055 net.cpp:86] Creating Layer relu1
I0428 20:27:33.184774  3055 net.cpp:408] relu1 <- ip1
I0428 20:27:33.184782  3055 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:33.184994  3055 net.cpp:124] Setting up relu1
I0428 20:27:33.185005  3055 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:27:33.185009  3055 net.cpp:139] Memory required for data: 29294800
I0428 20:27:33.185012  3055 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:33.185020  3055 net.cpp:86] Creating Layer ip2
I0428 20:27:33.185024  3055 net.cpp:408] ip2 <- ip1
I0428 20:27:33.185030  3055 net.cpp:382] ip2 -> ip2
I0428 20:27:33.185159  3055 net.cpp:124] Setting up ip2
I0428 20:27:33.185166  3055 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:33.185170  3055 net.cpp:139] Memory required for data: 29298800
I0428 20:27:33.185191  3055 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:33.185212  3055 net.cpp:86] Creating Layer relu2
I0428 20:27:33.185215  3055 net.cpp:408] relu2 <- ip2
I0428 20:27:33.185225  3055 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:33.185367  3055 net.cpp:124] Setting up relu2
I0428 20:27:33.185375  3055 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:33.185379  3055 net.cpp:139] Memory required for data: 29302800
I0428 20:27:33.185381  3055 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:27:33.185392  3055 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:27:33.185395  3055 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:27:33.185400  3055 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:27:33.185420  3055 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:27:33.185464  3055 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:27:33.185470  3055 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:33.185473  3055 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:33.185477  3055 net.cpp:139] Memory required for data: 29310800
I0428 20:27:33.185479  3055 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:33.185489  3055 net.cpp:86] Creating Layer accuracy
I0428 20:27:33.185492  3055 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:27:33.185501  3055 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:33.185505  3055 net.cpp:382] accuracy -> accuracy
I0428 20:27:33.185513  3055 net.cpp:124] Setting up accuracy
I0428 20:27:33.185521  3055 net.cpp:131] Top shape: (1)
I0428 20:27:33.185523  3055 net.cpp:139] Memory required for data: 29310804
I0428 20:27:33.185526  3055 layer_factory.hpp:77] Creating layer loss
I0428 20:27:33.185535  3055 net.cpp:86] Creating Layer loss
I0428 20:27:33.185539  3055 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:27:33.185542  3055 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:33.185546  3055 net.cpp:382] loss -> loss
I0428 20:27:33.185551  3055 layer_factory.hpp:77] Creating layer loss
I0428 20:27:33.185796  3055 net.cpp:124] Setting up loss
I0428 20:27:33.185806  3055 net.cpp:131] Top shape: (1)
I0428 20:27:33.185809  3055 net.cpp:134]     with loss weight 1
I0428 20:27:33.185816  3055 net.cpp:139] Memory required for data: 29310808
I0428 20:27:33.185819  3055 net.cpp:200] loss needs backward computation.
I0428 20:27:33.185822  3055 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:33.185842  3055 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:27:33.185847  3055 net.cpp:200] relu2 needs backward computation.
I0428 20:27:33.185852  3055 net.cpp:200] ip2 needs backward computation.
I0428 20:27:33.185856  3055 net.cpp:200] relu1 needs backward computation.
I0428 20:27:33.185861  3055 net.cpp:200] ip1 needs backward computation.
I0428 20:27:33.185866  3055 net.cpp:200] pool1 needs backward computation.
I0428 20:27:33.185873  3055 net.cpp:200] conv1 needs backward computation.
I0428 20:27:33.185886  3055 net.cpp:200] pool0 needs backward computation.
I0428 20:27:33.185891  3055 net.cpp:200] conv0 needs backward computation.
I0428 20:27:33.185897  3055 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:33.185904  3055 net.cpp:202] mnist does not need backward computation.
I0428 20:27:33.185909  3055 net.cpp:244] This network produces output accuracy
I0428 20:27:33.185914  3055 net.cpp:244] This network produces output loss
I0428 20:27:33.185928  3055 net.cpp:257] Network initialization done.
I0428 20:27:33.185981  3055 solver.cpp:56] Solver scaffolding done.
I0428 20:27:33.186259  3055 caffe.cpp:248] Starting Optimization
I0428 20:27:33.186265  3055 solver.cpp:273] Solving LeNet
I0428 20:27:33.186275  3055 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:33.186434  3055 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:33.220322  3055 blocking_queue.cpp:49] Waiting for data
I0428 20:27:33.282788  3062 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:33.284220  3055 solver.cpp:398]     Test net output #0: accuracy = 0.095
I0428 20:27:33.284256  3055 solver.cpp:398]     Test net output #1: loss = 2.3217 (* 1 = 2.3217 loss)
I0428 20:27:33.288775  3055 solver.cpp:219] Iteration 0 (0 iter/s, 0.102475s/100 iters), loss = 2.3326
I0428 20:27:33.288822  3055 solver.cpp:238]     Train net output #0: loss = 2.3326 (* 1 = 2.3326 loss)
I0428 20:27:33.288849  3055 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:33.496613  3055 solver.cpp:219] Iteration 100 (481.245 iter/s, 0.207794s/100 iters), loss = 0.36828
I0428 20:27:33.496655  3055 solver.cpp:238]     Train net output #0: loss = 0.36828 (* 1 = 0.36828 loss)
I0428 20:27:33.496666  3055 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:33.697393  3055 solver.cpp:219] Iteration 200 (498.221 iter/s, 0.200714s/100 iters), loss = 0.245389
I0428 20:27:33.697459  3055 solver.cpp:238]     Train net output #0: loss = 0.245389 (* 1 = 0.245389 loss)
I0428 20:27:33.697474  3055 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:33.908427  3055 solver.cpp:219] Iteration 300 (474.036 iter/s, 0.210954s/100 iters), loss = 0.205405
I0428 20:27:33.908478  3055 solver.cpp:238]     Train net output #0: loss = 0.205405 (* 1 = 0.205405 loss)
I0428 20:27:33.908489  3055 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:34.119446  3055 solver.cpp:219] Iteration 400 (474.039 iter/s, 0.210953s/100 iters), loss = 0.174707
I0428 20:27:34.119495  3055 solver.cpp:238]     Train net output #0: loss = 0.174707 (* 1 = 0.174707 loss)
I0428 20:27:34.119508  3055 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:34.328351  3055 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:34.431112  3062 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:34.432546  3055 solver.cpp:398]     Test net output #0: accuracy = 0.9527
I0428 20:27:34.432574  3055 solver.cpp:398]     Test net output #1: loss = 0.144407 (* 1 = 0.144407 loss)
I0428 20:27:34.434586  3055 solver.cpp:219] Iteration 500 (317.387 iter/s, 0.315073s/100 iters), loss = 0.126756
I0428 20:27:34.434617  3055 solver.cpp:238]     Train net output #0: loss = 0.126756 (* 1 = 0.126756 loss)
I0428 20:27:34.434624  3055 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:34.646430  3055 solver.cpp:219] Iteration 600 (472.155 iter/s, 0.211795s/100 iters), loss = 0.141165
I0428 20:27:34.646479  3055 solver.cpp:238]     Train net output #0: loss = 0.141165 (* 1 = 0.141165 loss)
I0428 20:27:34.646492  3055 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:34.858739  3055 solver.cpp:219] Iteration 700 (471.155 iter/s, 0.212244s/100 iters), loss = 0.113765
I0428 20:27:34.858785  3055 solver.cpp:238]     Train net output #0: loss = 0.113765 (* 1 = 0.113765 loss)
I0428 20:27:34.858796  3055 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:35.070122  3055 solver.cpp:219] Iteration 800 (473.214 iter/s, 0.211321s/100 iters), loss = 0.199514
I0428 20:27:35.070171  3055 solver.cpp:238]     Train net output #0: loss = 0.199514 (* 1 = 0.199514 loss)
I0428 20:27:35.070183  3055 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:35.282217  3055 solver.cpp:219] Iteration 900 (471.633 iter/s, 0.212029s/100 iters), loss = 0.243659
I0428 20:27:35.282264  3055 solver.cpp:238]     Train net output #0: loss = 0.243659 (* 1 = 0.243659 loss)
I0428 20:27:35.282276  3055 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:35.352958  3061 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:35.490278  3055 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:35.492341  3055 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:35.493773  3055 solver.cpp:311] Iteration 1000, loss = 0.129604
I0428 20:27:35.493805  3055 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:35.596695  3062 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:35.600129  3055 solver.cpp:398]     Test net output #0: accuracy = 0.9729
I0428 20:27:35.600155  3055 solver.cpp:398]     Test net output #1: loss = 0.0878599 (* 1 = 0.0878599 loss)
I0428 20:27:35.600162  3055 solver.cpp:316] Optimization Done.
I0428 20:27:35.600165  3055 caffe.cpp:259] Optimization Done.
