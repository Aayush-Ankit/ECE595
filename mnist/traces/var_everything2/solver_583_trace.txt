I0428 19:49:43.337733 26833 caffe.cpp:218] Using GPUs 0
I0428 19:49:43.372932 26833 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:43.838822 26833 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test583.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:43.838953 26833 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test583.prototxt
I0428 19:49:43.839267 26833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:43.839282 26833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:43.839356 26833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:43.839416 26833 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:43.839496 26833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:43.839515 26833 net.cpp:86] Creating Layer mnist
I0428 19:49:43.839521 26833 net.cpp:382] mnist -> data
I0428 19:49:43.839540 26833 net.cpp:382] mnist -> label
I0428 19:49:43.840510 26833 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:43.842797 26833 net.cpp:124] Setting up mnist
I0428 19:49:43.842826 26833 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:43.842831 26833 net.cpp:131] Top shape: 64 (64)
I0428 19:49:43.842834 26833 net.cpp:139] Memory required for data: 200960
I0428 19:49:43.842840 26833 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:43.842854 26833 net.cpp:86] Creating Layer conv0
I0428 19:49:43.842870 26833 net.cpp:408] conv0 <- data
I0428 19:49:43.842880 26833 net.cpp:382] conv0 -> conv0
I0428 19:49:44.074854 26833 net.cpp:124] Setting up conv0
I0428 19:49:44.074894 26833 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:44.074898 26833 net.cpp:139] Memory required for data: 938240
I0428 19:49:44.074911 26833 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:44.074924 26833 net.cpp:86] Creating Layer pool0
I0428 19:49:44.074928 26833 net.cpp:408] pool0 <- conv0
I0428 19:49:44.074934 26833 net.cpp:382] pool0 -> pool0
I0428 19:49:44.074993 26833 net.cpp:124] Setting up pool0
I0428 19:49:44.075000 26833 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:44.075002 26833 net.cpp:139] Memory required for data: 1122560
I0428 19:49:44.075006 26833 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:44.075016 26833 net.cpp:86] Creating Layer conv1
I0428 19:49:44.075018 26833 net.cpp:408] conv1 <- pool0
I0428 19:49:44.075023 26833 net.cpp:382] conv1 -> conv1
I0428 19:49:44.076920 26833 net.cpp:124] Setting up conv1
I0428 19:49:44.076936 26833 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:44.076939 26833 net.cpp:139] Memory required for data: 1204480
I0428 19:49:44.076949 26833 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:44.076957 26833 net.cpp:86] Creating Layer pool1
I0428 19:49:44.076961 26833 net.cpp:408] pool1 <- conv1
I0428 19:49:44.076967 26833 net.cpp:382] pool1 -> pool1
I0428 19:49:44.077006 26833 net.cpp:124] Setting up pool1
I0428 19:49:44.077019 26833 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:44.077023 26833 net.cpp:139] Memory required for data: 1224960
I0428 19:49:44.077026 26833 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:44.077033 26833 net.cpp:86] Creating Layer ip1
I0428 19:49:44.077036 26833 net.cpp:408] ip1 <- pool1
I0428 19:49:44.077041 26833 net.cpp:382] ip1 -> ip1
I0428 19:49:44.078131 26833 net.cpp:124] Setting up ip1
I0428 19:49:44.078145 26833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:44.078163 26833 net.cpp:139] Memory required for data: 1237760
I0428 19:49:44.078187 26833 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:44.078209 26833 net.cpp:86] Creating Layer relu1
I0428 19:49:44.078213 26833 net.cpp:408] relu1 <- ip1
I0428 19:49:44.078218 26833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:44.078402 26833 net.cpp:124] Setting up relu1
I0428 19:49:44.078411 26833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:44.078415 26833 net.cpp:139] Memory required for data: 1250560
I0428 19:49:44.078418 26833 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:44.078425 26833 net.cpp:86] Creating Layer ip2
I0428 19:49:44.078429 26833 net.cpp:408] ip2 <- ip1
I0428 19:49:44.078434 26833 net.cpp:382] ip2 -> ip2
I0428 19:49:44.078548 26833 net.cpp:124] Setting up ip2
I0428 19:49:44.078555 26833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:44.078558 26833 net.cpp:139] Memory required for data: 1263360
I0428 19:49:44.078564 26833 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:44.078570 26833 net.cpp:86] Creating Layer relu2
I0428 19:49:44.078574 26833 net.cpp:408] relu2 <- ip2
I0428 19:49:44.078578 26833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:44.079453 26833 net.cpp:124] Setting up relu2
I0428 19:49:44.079466 26833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:44.079470 26833 net.cpp:139] Memory required for data: 1276160
I0428 19:49:44.079474 26833 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:44.079481 26833 net.cpp:86] Creating Layer ip3
I0428 19:49:44.079484 26833 net.cpp:408] ip3 <- ip2
I0428 19:49:44.079490 26833 net.cpp:382] ip3 -> ip3
I0428 19:49:44.079602 26833 net.cpp:124] Setting up ip3
I0428 19:49:44.079610 26833 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:44.079613 26833 net.cpp:139] Memory required for data: 1278720
I0428 19:49:44.079622 26833 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:44.079627 26833 net.cpp:86] Creating Layer relu3
I0428 19:49:44.079630 26833 net.cpp:408] relu3 <- ip3
I0428 19:49:44.079635 26833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:44.079831 26833 net.cpp:124] Setting up relu3
I0428 19:49:44.079840 26833 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:44.079843 26833 net.cpp:139] Memory required for data: 1281280
I0428 19:49:44.079846 26833 layer_factory.hpp:77] Creating layer loss
I0428 19:49:44.079866 26833 net.cpp:86] Creating Layer loss
I0428 19:49:44.079869 26833 net.cpp:408] loss <- ip3
I0428 19:49:44.079874 26833 net.cpp:408] loss <- label
I0428 19:49:44.079879 26833 net.cpp:382] loss -> loss
I0428 19:49:44.079892 26833 layer_factory.hpp:77] Creating layer loss
I0428 19:49:44.080106 26833 net.cpp:124] Setting up loss
I0428 19:49:44.080113 26833 net.cpp:131] Top shape: (1)
I0428 19:49:44.080117 26833 net.cpp:134]     with loss weight 1
I0428 19:49:44.080130 26833 net.cpp:139] Memory required for data: 1281284
I0428 19:49:44.080133 26833 net.cpp:200] loss needs backward computation.
I0428 19:49:44.080137 26833 net.cpp:200] relu3 needs backward computation.
I0428 19:49:44.080140 26833 net.cpp:200] ip3 needs backward computation.
I0428 19:49:44.080142 26833 net.cpp:200] relu2 needs backward computation.
I0428 19:49:44.080145 26833 net.cpp:200] ip2 needs backward computation.
I0428 19:49:44.080148 26833 net.cpp:200] relu1 needs backward computation.
I0428 19:49:44.080150 26833 net.cpp:200] ip1 needs backward computation.
I0428 19:49:44.080155 26833 net.cpp:200] pool1 needs backward computation.
I0428 19:49:44.080158 26833 net.cpp:200] conv1 needs backward computation.
I0428 19:49:44.080162 26833 net.cpp:200] pool0 needs backward computation.
I0428 19:49:44.080179 26833 net.cpp:200] conv0 needs backward computation.
I0428 19:49:44.080183 26833 net.cpp:202] mnist does not need backward computation.
I0428 19:49:44.080186 26833 net.cpp:244] This network produces output loss
I0428 19:49:44.080195 26833 net.cpp:257] Network initialization done.
I0428 19:49:44.080597 26833 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test583.prototxt
I0428 19:49:44.080638 26833 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:44.080740 26833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:44.080843 26833 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:44.080905 26833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:44.080919 26833 net.cpp:86] Creating Layer mnist
I0428 19:49:44.080924 26833 net.cpp:382] mnist -> data
I0428 19:49:44.080931 26833 net.cpp:382] mnist -> label
I0428 19:49:44.081023 26833 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:44.083155 26833 net.cpp:124] Setting up mnist
I0428 19:49:44.083168 26833 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:44.083189 26833 net.cpp:131] Top shape: 100 (100)
I0428 19:49:44.083191 26833 net.cpp:139] Memory required for data: 314000
I0428 19:49:44.083194 26833 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:44.083200 26833 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:44.083205 26833 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:44.083209 26833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:44.083215 26833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:44.083253 26833 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:44.083258 26833 net.cpp:131] Top shape: 100 (100)
I0428 19:49:44.083261 26833 net.cpp:131] Top shape: 100 (100)
I0428 19:49:44.083264 26833 net.cpp:139] Memory required for data: 314800
I0428 19:49:44.083267 26833 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:44.083274 26833 net.cpp:86] Creating Layer conv0
I0428 19:49:44.083277 26833 net.cpp:408] conv0 <- data
I0428 19:49:44.083281 26833 net.cpp:382] conv0 -> conv0
I0428 19:49:44.085078 26833 net.cpp:124] Setting up conv0
I0428 19:49:44.085108 26833 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:44.085111 26833 net.cpp:139] Memory required for data: 1466800
I0428 19:49:44.085120 26833 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:44.085129 26833 net.cpp:86] Creating Layer pool0
I0428 19:49:44.085131 26833 net.cpp:408] pool0 <- conv0
I0428 19:49:44.085136 26833 net.cpp:382] pool0 -> pool0
I0428 19:49:44.085171 26833 net.cpp:124] Setting up pool0
I0428 19:49:44.085177 26833 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:44.085180 26833 net.cpp:139] Memory required for data: 1754800
I0428 19:49:44.085183 26833 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:44.085191 26833 net.cpp:86] Creating Layer conv1
I0428 19:49:44.085201 26833 net.cpp:408] conv1 <- pool0
I0428 19:49:44.085206 26833 net.cpp:382] conv1 -> conv1
I0428 19:49:44.087405 26833 net.cpp:124] Setting up conv1
I0428 19:49:44.087435 26833 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:44.087438 26833 net.cpp:139] Memory required for data: 1882800
I0428 19:49:44.087447 26833 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:44.087453 26833 net.cpp:86] Creating Layer pool1
I0428 19:49:44.087457 26833 net.cpp:408] pool1 <- conv1
I0428 19:49:44.087462 26833 net.cpp:382] pool1 -> pool1
I0428 19:49:44.087527 26833 net.cpp:124] Setting up pool1
I0428 19:49:44.087543 26833 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:44.087545 26833 net.cpp:139] Memory required for data: 1914800
I0428 19:49:44.087548 26833 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:44.087554 26833 net.cpp:86] Creating Layer ip1
I0428 19:49:44.087574 26833 net.cpp:408] ip1 <- pool1
I0428 19:49:44.087579 26833 net.cpp:382] ip1 -> ip1
I0428 19:49:44.087709 26833 net.cpp:124] Setting up ip1
I0428 19:49:44.087718 26833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:44.087733 26833 net.cpp:139] Memory required for data: 1934800
I0428 19:49:44.087740 26833 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:44.087745 26833 net.cpp:86] Creating Layer relu1
I0428 19:49:44.087749 26833 net.cpp:408] relu1 <- ip1
I0428 19:49:44.087754 26833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:44.087919 26833 net.cpp:124] Setting up relu1
I0428 19:49:44.087929 26833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:44.087932 26833 net.cpp:139] Memory required for data: 1954800
I0428 19:49:44.087950 26833 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:44.087956 26833 net.cpp:86] Creating Layer ip2
I0428 19:49:44.087960 26833 net.cpp:408] ip2 <- ip1
I0428 19:49:44.087965 26833 net.cpp:382] ip2 -> ip2
I0428 19:49:44.088088 26833 net.cpp:124] Setting up ip2
I0428 19:49:44.088095 26833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:44.088099 26833 net.cpp:139] Memory required for data: 1974800
I0428 19:49:44.088105 26833 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:44.088110 26833 net.cpp:86] Creating Layer relu2
I0428 19:49:44.088114 26833 net.cpp:408] relu2 <- ip2
I0428 19:49:44.088119 26833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:44.088263 26833 net.cpp:124] Setting up relu2
I0428 19:49:44.088271 26833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:44.088275 26833 net.cpp:139] Memory required for data: 1994800
I0428 19:49:44.088279 26833 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:44.088284 26833 net.cpp:86] Creating Layer ip3
I0428 19:49:44.088287 26833 net.cpp:408] ip3 <- ip2
I0428 19:49:44.088292 26833 net.cpp:382] ip3 -> ip3
I0428 19:49:44.088443 26833 net.cpp:124] Setting up ip3
I0428 19:49:44.088450 26833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:44.088454 26833 net.cpp:139] Memory required for data: 1998800
I0428 19:49:44.088461 26833 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:44.088466 26833 net.cpp:86] Creating Layer relu3
I0428 19:49:44.088469 26833 net.cpp:408] relu3 <- ip3
I0428 19:49:44.088474 26833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:44.089494 26833 net.cpp:124] Setting up relu3
I0428 19:49:44.089522 26833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:44.089526 26833 net.cpp:139] Memory required for data: 2002800
I0428 19:49:44.089534 26833 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:44.089540 26833 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:44.089545 26833 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:44.089550 26833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:44.089555 26833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:44.089594 26833 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:44.089601 26833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:44.089604 26833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:44.089608 26833 net.cpp:139] Memory required for data: 2010800
I0428 19:49:44.089612 26833 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:44.089617 26833 net.cpp:86] Creating Layer accuracy
I0428 19:49:44.089619 26833 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:44.089624 26833 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:44.089629 26833 net.cpp:382] accuracy -> accuracy
I0428 19:49:44.089637 26833 net.cpp:124] Setting up accuracy
I0428 19:49:44.089640 26833 net.cpp:131] Top shape: (1)
I0428 19:49:44.089643 26833 net.cpp:139] Memory required for data: 2010804
I0428 19:49:44.089646 26833 layer_factory.hpp:77] Creating layer loss
I0428 19:49:44.089666 26833 net.cpp:86] Creating Layer loss
I0428 19:49:44.089670 26833 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:44.089674 26833 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:44.089679 26833 net.cpp:382] loss -> loss
I0428 19:49:44.089684 26833 layer_factory.hpp:77] Creating layer loss
I0428 19:49:44.089918 26833 net.cpp:124] Setting up loss
I0428 19:49:44.089927 26833 net.cpp:131] Top shape: (1)
I0428 19:49:44.089931 26833 net.cpp:134]     with loss weight 1
I0428 19:49:44.089938 26833 net.cpp:139] Memory required for data: 2010808
I0428 19:49:44.089958 26833 net.cpp:200] loss needs backward computation.
I0428 19:49:44.089962 26833 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:44.089967 26833 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:44.089970 26833 net.cpp:200] relu3 needs backward computation.
I0428 19:49:44.089972 26833 net.cpp:200] ip3 needs backward computation.
I0428 19:49:44.089977 26833 net.cpp:200] relu2 needs backward computation.
I0428 19:49:44.089979 26833 net.cpp:200] ip2 needs backward computation.
I0428 19:49:44.089982 26833 net.cpp:200] relu1 needs backward computation.
I0428 19:49:44.089984 26833 net.cpp:200] ip1 needs backward computation.
I0428 19:49:44.089988 26833 net.cpp:200] pool1 needs backward computation.
I0428 19:49:44.089992 26833 net.cpp:200] conv1 needs backward computation.
I0428 19:49:44.089994 26833 net.cpp:200] pool0 needs backward computation.
I0428 19:49:44.089998 26833 net.cpp:200] conv0 needs backward computation.
I0428 19:49:44.090000 26833 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:44.090005 26833 net.cpp:202] mnist does not need backward computation.
I0428 19:49:44.090008 26833 net.cpp:244] This network produces output accuracy
I0428 19:49:44.090011 26833 net.cpp:244] This network produces output loss
I0428 19:49:44.090021 26833 net.cpp:257] Network initialization done.
I0428 19:49:44.090062 26833 solver.cpp:56] Solver scaffolding done.
I0428 19:49:44.090461 26833 caffe.cpp:248] Starting Optimization
I0428 19:49:44.090467 26833 solver.cpp:273] Solving LeNet
I0428 19:49:44.090471 26833 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:44.091348 26833 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:44.095013 26833 blocking_queue.cpp:49] Waiting for data
I0428 19:49:44.162127 26845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:44.162637 26833 solver.cpp:398]     Test net output #0: accuracy = 0.0888
I0428 19:49:44.162673 26833 solver.cpp:398]     Test net output #1: loss = 2.35367 (* 1 = 2.35367 loss)
I0428 19:49:44.164536 26833 solver.cpp:219] Iteration 0 (-3.91414e-31 iter/s, 0.074022s/100 iters), loss = 2.34128
I0428 19:49:44.164584 26833 solver.cpp:238]     Train net output #0: loss = 2.34128 (* 1 = 2.34128 loss)
I0428 19:49:44.164597 26833 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:44.234751 26833 solver.cpp:219] Iteration 100 (1425.55 iter/s, 0.0701481s/100 iters), loss = 1.07742
I0428 19:49:44.234792 26833 solver.cpp:238]     Train net output #0: loss = 1.07742 (* 1 = 1.07742 loss)
I0428 19:49:44.234798 26833 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:44.305145 26833 solver.cpp:219] Iteration 200 (1421.28 iter/s, 0.070359s/100 iters), loss = 0.333476
I0428 19:49:44.305184 26833 solver.cpp:238]     Train net output #0: loss = 0.333476 (* 1 = 0.333476 loss)
I0428 19:49:44.305191 26833 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:44.375149 26833 solver.cpp:219] Iteration 300 (1429.14 iter/s, 0.069972s/100 iters), loss = 0.30358
I0428 19:49:44.375187 26833 solver.cpp:238]     Train net output #0: loss = 0.30358 (* 1 = 0.30358 loss)
I0428 19:49:44.375193 26833 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:44.462605 26833 solver.cpp:219] Iteration 400 (1143.9 iter/s, 0.0874199s/100 iters), loss = 0.162163
I0428 19:49:44.462659 26833 solver.cpp:238]     Train net output #0: loss = 0.162163 (* 1 = 0.162163 loss)
I0428 19:49:44.462671 26833 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:44.541440 26833 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:44.594100 26845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:44.594614 26833 solver.cpp:398]     Test net output #0: accuracy = 0.9335
I0428 19:49:44.594640 26833 solver.cpp:398]     Test net output #1: loss = 0.207642 (* 1 = 0.207642 loss)
I0428 19:49:44.595468 26833 solver.cpp:219] Iteration 500 (752.957 iter/s, 0.13281s/100 iters), loss = 0.241311
I0428 19:49:44.595497 26833 solver.cpp:238]     Train net output #0: loss = 0.241311 (* 1 = 0.241311 loss)
I0428 19:49:44.595523 26833 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:44.670752 26833 solver.cpp:219] Iteration 600 (1329 iter/s, 0.0752445s/100 iters), loss = 0.139462
I0428 19:49:44.670783 26833 solver.cpp:238]     Train net output #0: loss = 0.139462 (* 1 = 0.139462 loss)
I0428 19:49:44.670790 26833 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:44.746053 26833 solver.cpp:219] Iteration 700 (1328.69 iter/s, 0.075262s/100 iters), loss = 0.276255
I0428 19:49:44.746085 26833 solver.cpp:238]     Train net output #0: loss = 0.276255 (* 1 = 0.276255 loss)
I0428 19:49:44.746093 26833 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:44.821295 26833 solver.cpp:219] Iteration 800 (1329.75 iter/s, 0.0752024s/100 iters), loss = 0.336182
I0428 19:49:44.821327 26833 solver.cpp:238]     Train net output #0: loss = 0.336182 (* 1 = 0.336182 loss)
I0428 19:49:44.821336 26833 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:44.896385 26833 solver.cpp:219] Iteration 900 (1332.45 iter/s, 0.0750498s/100 iters), loss = 0.279025
I0428 19:49:44.896416 26833 solver.cpp:238]     Train net output #0: loss = 0.279025 (* 1 = 0.279025 loss)
I0428 19:49:44.896425 26833 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:44.921623 26839 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:44.970613 26833 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:44.971380 26833 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:44.972105 26833 solver.cpp:311] Iteration 1000, loss = 0.216649
I0428 19:49:44.972139 26833 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:45.029800 26845 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:45.031563 26833 solver.cpp:398]     Test net output #0: accuracy = 0.9641
I0428 19:49:45.031592 26833 solver.cpp:398]     Test net output #1: loss = 0.115562 (* 1 = 0.115562 loss)
I0428 19:49:45.031607 26833 solver.cpp:316] Optimization Done.
I0428 19:49:45.031613 26833 caffe.cpp:259] Optimization Done.
