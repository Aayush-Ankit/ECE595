I0428 20:16:45.159597   724 caffe.cpp:218] Using GPUs 0
I0428 20:16:45.193090   724 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:16:45.718598   724 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1278.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:16:45.718736   724 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1278.prototxt
I0428 20:16:45.719152   724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:16:45.719172   724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:16:45.719272   724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:45.719352   724 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:45.719455   724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:16:45.719480   724 net.cpp:86] Creating Layer mnist
I0428 20:16:45.719488   724 net.cpp:382] mnist -> data
I0428 20:16:45.719509   724 net.cpp:382] mnist -> label
I0428 20:16:45.720599   724 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:16:45.723088   724 net.cpp:124] Setting up mnist
I0428 20:16:45.723106   724 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:16:45.723117   724 net.cpp:131] Top shape: 64 (64)
I0428 20:16:45.723121   724 net.cpp:139] Memory required for data: 200960
I0428 20:16:45.723129   724 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:45.723146   724 net.cpp:86] Creating Layer conv0
I0428 20:16:45.723172   724 net.cpp:408] conv0 <- data
I0428 20:16:45.723186   724 net.cpp:382] conv0 -> conv0
I0428 20:16:46.016651   724 net.cpp:124] Setting up conv0
I0428 20:16:46.016685   724 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:16:46.016690   724 net.cpp:139] Memory required for data: 7573760
I0428 20:16:46.016707   724 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:46.016722   724 net.cpp:86] Creating Layer pool0
I0428 20:16:46.016727   724 net.cpp:408] pool0 <- conv0
I0428 20:16:46.016733   724 net.cpp:382] pool0 -> pool0
I0428 20:16:46.016789   724 net.cpp:124] Setting up pool0
I0428 20:16:46.016798   724 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:16:46.016803   724 net.cpp:139] Memory required for data: 9416960
I0428 20:16:46.016805   724 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:46.016830   724 net.cpp:86] Creating Layer conv1
I0428 20:16:46.016840   724 net.cpp:408] conv1 <- pool0
I0428 20:16:46.016850   724 net.cpp:382] conv1 -> conv1
I0428 20:16:46.020026   724 net.cpp:124] Setting up conv1
I0428 20:16:46.020045   724 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:16:46.020050   724 net.cpp:139] Memory required for data: 9498880
I0428 20:16:46.020061   724 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:46.020069   724 net.cpp:86] Creating Layer pool1
I0428 20:16:46.020074   724 net.cpp:408] pool1 <- conv1
I0428 20:16:46.020081   724 net.cpp:382] pool1 -> pool1
I0428 20:16:46.020123   724 net.cpp:124] Setting up pool1
I0428 20:16:46.020133   724 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:16:46.020135   724 net.cpp:139] Memory required for data: 9519360
I0428 20:16:46.020139   724 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:46.020148   724 net.cpp:86] Creating Layer ip1
I0428 20:16:46.020151   724 net.cpp:408] ip1 <- pool1
I0428 20:16:46.020157   724 net.cpp:382] ip1 -> ip1
I0428 20:16:46.020304   724 net.cpp:124] Setting up ip1
I0428 20:16:46.020313   724 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:46.020316   724 net.cpp:139] Memory required for data: 9532160
I0428 20:16:46.020325   724 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:46.020331   724 net.cpp:86] Creating Layer relu1
I0428 20:16:46.020339   724 net.cpp:408] relu1 <- ip1
I0428 20:16:46.020344   724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:46.020539   724 net.cpp:124] Setting up relu1
I0428 20:16:46.020550   724 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:46.020553   724 net.cpp:139] Memory required for data: 9544960
I0428 20:16:46.020556   724 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:46.020565   724 net.cpp:86] Creating Layer ip2
I0428 20:16:46.020568   724 net.cpp:408] ip2 <- ip1
I0428 20:16:46.020575   724 net.cpp:382] ip2 -> ip2
I0428 20:16:46.020690   724 net.cpp:124] Setting up ip2
I0428 20:16:46.020699   724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:46.020702   724 net.cpp:139] Memory required for data: 9547520
I0428 20:16:46.020709   724 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:46.020715   724 net.cpp:86] Creating Layer relu2
I0428 20:16:46.020720   724 net.cpp:408] relu2 <- ip2
I0428 20:16:46.020725   724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:46.021589   724 net.cpp:124] Setting up relu2
I0428 20:16:46.021605   724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:46.021610   724 net.cpp:139] Memory required for data: 9550080
I0428 20:16:46.021613   724 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:46.021621   724 net.cpp:86] Creating Layer ip3
I0428 20:16:46.021625   724 net.cpp:408] ip3 <- ip2
I0428 20:16:46.021632   724 net.cpp:382] ip3 -> ip3
I0428 20:16:46.021749   724 net.cpp:124] Setting up ip3
I0428 20:16:46.021759   724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:46.021762   724 net.cpp:139] Memory required for data: 9552640
I0428 20:16:46.021772   724 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:46.021780   724 net.cpp:86] Creating Layer relu3
I0428 20:16:46.021783   724 net.cpp:408] relu3 <- ip3
I0428 20:16:46.021788   724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:46.021986   724 net.cpp:124] Setting up relu3
I0428 20:16:46.021996   724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:46.021998   724 net.cpp:139] Memory required for data: 9555200
I0428 20:16:46.022002   724 layer_factory.hpp:77] Creating layer loss
I0428 20:16:46.022011   724 net.cpp:86] Creating Layer loss
I0428 20:16:46.022013   724 net.cpp:408] loss <- ip3
I0428 20:16:46.022018   724 net.cpp:408] loss <- label
I0428 20:16:46.022025   724 net.cpp:382] loss -> loss
I0428 20:16:46.022047   724 layer_factory.hpp:77] Creating layer loss
I0428 20:16:46.022320   724 net.cpp:124] Setting up loss
I0428 20:16:46.022330   724 net.cpp:131] Top shape: (1)
I0428 20:16:46.022333   724 net.cpp:134]     with loss weight 1
I0428 20:16:46.022349   724 net.cpp:139] Memory required for data: 9555204
I0428 20:16:46.022353   724 net.cpp:200] loss needs backward computation.
I0428 20:16:46.022358   724 net.cpp:200] relu3 needs backward computation.
I0428 20:16:46.022361   724 net.cpp:200] ip3 needs backward computation.
I0428 20:16:46.022366   724 net.cpp:200] relu2 needs backward computation.
I0428 20:16:46.022368   724 net.cpp:200] ip2 needs backward computation.
I0428 20:16:46.022372   724 net.cpp:200] relu1 needs backward computation.
I0428 20:16:46.022375   724 net.cpp:200] ip1 needs backward computation.
I0428 20:16:46.022379   724 net.cpp:200] pool1 needs backward computation.
I0428 20:16:46.022382   724 net.cpp:200] conv1 needs backward computation.
I0428 20:16:46.022387   724 net.cpp:200] pool0 needs backward computation.
I0428 20:16:46.022390   724 net.cpp:200] conv0 needs backward computation.
I0428 20:16:46.022394   724 net.cpp:202] mnist does not need backward computation.
I0428 20:16:46.022397   724 net.cpp:244] This network produces output loss
I0428 20:16:46.022408   724 net.cpp:257] Network initialization done.
I0428 20:16:46.022792   724 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1278.prototxt
I0428 20:16:46.022825   724 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:16:46.022934   724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:46.023027   724 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:46.023082   724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:16:46.023097   724 net.cpp:86] Creating Layer mnist
I0428 20:16:46.023103   724 net.cpp:382] mnist -> data
I0428 20:16:46.023113   724 net.cpp:382] mnist -> label
I0428 20:16:46.023212   724 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:16:46.025401   724 net.cpp:124] Setting up mnist
I0428 20:16:46.025418   724 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:16:46.025424   724 net.cpp:131] Top shape: 100 (100)
I0428 20:16:46.025427   724 net.cpp:139] Memory required for data: 314000
I0428 20:16:46.025432   724 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:16:46.025440   724 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:16:46.025445   724 net.cpp:408] label_mnist_1_split <- label
I0428 20:16:46.025450   724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:16:46.025468   724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:16:46.025524   724 net.cpp:124] Setting up label_mnist_1_split
I0428 20:16:46.025532   724 net.cpp:131] Top shape: 100 (100)
I0428 20:16:46.025537   724 net.cpp:131] Top shape: 100 (100)
I0428 20:16:46.025539   724 net.cpp:139] Memory required for data: 314800
I0428 20:16:46.025543   724 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:46.025552   724 net.cpp:86] Creating Layer conv0
I0428 20:16:46.025557   724 net.cpp:408] conv0 <- data
I0428 20:16:46.025563   724 net.cpp:382] conv0 -> conv0
I0428 20:16:46.027361   724 net.cpp:124] Setting up conv0
I0428 20:16:46.027384   724 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:16:46.027389   724 net.cpp:139] Memory required for data: 11834800
I0428 20:16:46.027400   724 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:46.027407   724 net.cpp:86] Creating Layer pool0
I0428 20:16:46.027411   724 net.cpp:408] pool0 <- conv0
I0428 20:16:46.027417   724 net.cpp:382] pool0 -> pool0
I0428 20:16:46.027467   724 net.cpp:124] Setting up pool0
I0428 20:16:46.027473   724 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:16:46.027477   724 net.cpp:139] Memory required for data: 14714800
I0428 20:16:46.027487   724 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:46.027503   724 net.cpp:86] Creating Layer conv1
I0428 20:16:46.027508   724 net.cpp:408] conv1 <- pool0
I0428 20:16:46.027513   724 net.cpp:382] conv1 -> conv1
I0428 20:16:46.029211   724 net.cpp:124] Setting up conv1
I0428 20:16:46.029230   724 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:16:46.029234   724 net.cpp:139] Memory required for data: 14842800
I0428 20:16:46.029245   724 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:46.029254   724 net.cpp:86] Creating Layer pool1
I0428 20:16:46.029258   724 net.cpp:408] pool1 <- conv1
I0428 20:16:46.029264   724 net.cpp:382] pool1 -> pool1
I0428 20:16:46.029307   724 net.cpp:124] Setting up pool1
I0428 20:16:46.029316   724 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:16:46.029320   724 net.cpp:139] Memory required for data: 14874800
I0428 20:16:46.029323   724 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:46.029330   724 net.cpp:86] Creating Layer ip1
I0428 20:16:46.029340   724 net.cpp:408] ip1 <- pool1
I0428 20:16:46.029351   724 net.cpp:382] ip1 -> ip1
I0428 20:16:46.029496   724 net.cpp:124] Setting up ip1
I0428 20:16:46.029505   724 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:46.029521   724 net.cpp:139] Memory required for data: 14894800
I0428 20:16:46.029531   724 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:46.029537   724 net.cpp:86] Creating Layer relu1
I0428 20:16:46.029541   724 net.cpp:408] relu1 <- ip1
I0428 20:16:46.029546   724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:46.029855   724 net.cpp:124] Setting up relu1
I0428 20:16:46.029865   724 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:46.029868   724 net.cpp:139] Memory required for data: 14914800
I0428 20:16:46.029878   724 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:46.029888   724 net.cpp:86] Creating Layer ip2
I0428 20:16:46.029897   724 net.cpp:408] ip2 <- ip1
I0428 20:16:46.029904   724 net.cpp:382] ip2 -> ip2
I0428 20:16:46.030035   724 net.cpp:124] Setting up ip2
I0428 20:16:46.030045   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.030047   724 net.cpp:139] Memory required for data: 14918800
I0428 20:16:46.030055   724 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:46.030059   724 net.cpp:86] Creating Layer relu2
I0428 20:16:46.030063   724 net.cpp:408] relu2 <- ip2
I0428 20:16:46.030067   724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:46.030261   724 net.cpp:124] Setting up relu2
I0428 20:16:46.030272   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.030275   724 net.cpp:139] Memory required for data: 14922800
I0428 20:16:46.030278   724 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:46.030284   724 net.cpp:86] Creating Layer ip3
I0428 20:16:46.030288   724 net.cpp:408] ip3 <- ip2
I0428 20:16:46.030295   724 net.cpp:382] ip3 -> ip3
I0428 20:16:46.030421   724 net.cpp:124] Setting up ip3
I0428 20:16:46.030428   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.030431   724 net.cpp:139] Memory required for data: 14926800
I0428 20:16:46.030441   724 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:46.030445   724 net.cpp:86] Creating Layer relu3
I0428 20:16:46.030449   724 net.cpp:408] relu3 <- ip3
I0428 20:16:46.030455   724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:46.031404   724 net.cpp:124] Setting up relu3
I0428 20:16:46.031419   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.031424   724 net.cpp:139] Memory required for data: 14930800
I0428 20:16:46.031428   724 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:16:46.031435   724 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:16:46.031445   724 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:16:46.031453   724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:16:46.031461   724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:16:46.031507   724 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:16:46.031514   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.031518   724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:46.031522   724 net.cpp:139] Memory required for data: 14938800
I0428 20:16:46.031527   724 layer_factory.hpp:77] Creating layer accuracy
I0428 20:16:46.031533   724 net.cpp:86] Creating Layer accuracy
I0428 20:16:46.031538   724 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:16:46.031548   724 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:16:46.031555   724 net.cpp:382] accuracy -> accuracy
I0428 20:16:46.031563   724 net.cpp:124] Setting up accuracy
I0428 20:16:46.031569   724 net.cpp:131] Top shape: (1)
I0428 20:16:46.031572   724 net.cpp:139] Memory required for data: 14938804
I0428 20:16:46.031575   724 layer_factory.hpp:77] Creating layer loss
I0428 20:16:46.031581   724 net.cpp:86] Creating Layer loss
I0428 20:16:46.031585   724 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:16:46.031594   724 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:16:46.031599   724 net.cpp:382] loss -> loss
I0428 20:16:46.031606   724 layer_factory.hpp:77] Creating layer loss
I0428 20:16:46.031898   724 net.cpp:124] Setting up loss
I0428 20:16:46.031911   724 net.cpp:131] Top shape: (1)
I0428 20:16:46.031915   724 net.cpp:134]     with loss weight 1
I0428 20:16:46.031934   724 net.cpp:139] Memory required for data: 14938808
I0428 20:16:46.031939   724 net.cpp:200] loss needs backward computation.
I0428 20:16:46.031942   724 net.cpp:202] accuracy does not need backward computation.
I0428 20:16:46.031947   724 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:16:46.031950   724 net.cpp:200] relu3 needs backward computation.
I0428 20:16:46.031955   724 net.cpp:200] ip3 needs backward computation.
I0428 20:16:46.031958   724 net.cpp:200] relu2 needs backward computation.
I0428 20:16:46.031962   724 net.cpp:200] ip2 needs backward computation.
I0428 20:16:46.031965   724 net.cpp:200] relu1 needs backward computation.
I0428 20:16:46.031970   724 net.cpp:200] ip1 needs backward computation.
I0428 20:16:46.031972   724 net.cpp:200] pool1 needs backward computation.
I0428 20:16:46.031976   724 net.cpp:200] conv1 needs backward computation.
I0428 20:16:46.031980   724 net.cpp:200] pool0 needs backward computation.
I0428 20:16:46.031983   724 net.cpp:200] conv0 needs backward computation.
I0428 20:16:46.031987   724 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:16:46.031992   724 net.cpp:202] mnist does not need backward computation.
I0428 20:16:46.031996   724 net.cpp:244] This network produces output accuracy
I0428 20:16:46.031999   724 net.cpp:244] This network produces output loss
I0428 20:16:46.032013   724 net.cpp:257] Network initialization done.
I0428 20:16:46.032063   724 solver.cpp:56] Solver scaffolding done.
I0428 20:16:46.032531   724 caffe.cpp:248] Starting Optimization
I0428 20:16:46.032538   724 solver.cpp:273] Solving LeNet
I0428 20:16:46.032541   724 solver.cpp:274] Learning Rate Policy: inv
I0428 20:16:46.033419   724 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:16:46.104750   732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:46.107537   724 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0428 20:16:46.107569   724 solver.cpp:398]     Test net output #1: loss = 2.33033 (* 1 = 2.33033 loss)
I0428 20:16:46.113101   724 solver.cpp:219] Iteration 0 (-1.0965e-30 iter/s, 0.0805294s/100 iters), loss = 2.36431
I0428 20:16:46.113131   724 solver.cpp:238]     Train net output #0: loss = 2.36431 (* 1 = 2.36431 loss)
I0428 20:16:46.113147   724 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:16:46.234787   724 solver.cpp:219] Iteration 100 (822.091 iter/s, 0.121641s/100 iters), loss = 0.950805
I0428 20:16:46.234822   724 solver.cpp:238]     Train net output #0: loss = 0.950805 (* 1 = 0.950805 loss)
I0428 20:16:46.234830   724 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:16:46.355819   724 solver.cpp:219] Iteration 200 (826.545 iter/s, 0.120986s/100 iters), loss = 0.598066
I0428 20:16:46.355851   724 solver.cpp:238]     Train net output #0: loss = 0.598066 (* 1 = 0.598066 loss)
I0428 20:16:46.355859   724 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:16:46.475802   724 solver.cpp:219] Iteration 300 (833.75 iter/s, 0.11994s/100 iters), loss = 0.477995
I0428 20:16:46.475831   724 solver.cpp:238]     Train net output #0: loss = 0.477995 (* 1 = 0.477995 loss)
I0428 20:16:46.475838   724 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:16:46.591122   724 solver.cpp:219] Iteration 400 (867.446 iter/s, 0.115281s/100 iters), loss = 0.28656
I0428 20:16:46.591147   724 solver.cpp:238]     Train net output #0: loss = 0.28656 (* 1 = 0.28656 loss)
I0428 20:16:46.591154   724 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:16:46.705595   724 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:16:46.770238   732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:46.772537   724 solver.cpp:398]     Test net output #0: accuracy = 0.9457
I0428 20:16:46.772558   724 solver.cpp:398]     Test net output #1: loss = 0.170785 (* 1 = 0.170785 loss)
I0428 20:16:46.773715   724 solver.cpp:219] Iteration 500 (547.787 iter/s, 0.182553s/100 iters), loss = 0.119825
I0428 20:16:46.773752   724 solver.cpp:238]     Train net output #0: loss = 0.119825 (* 1 = 0.119825 loss)
I0428 20:16:46.773773   724 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:16:46.887712   724 solver.cpp:219] Iteration 600 (877.58 iter/s, 0.11395s/100 iters), loss = 0.102286
I0428 20:16:46.887737   724 solver.cpp:238]     Train net output #0: loss = 0.102285 (* 1 = 0.102285 loss)
I0428 20:16:46.887742   724 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:16:47.001629   724 solver.cpp:219] Iteration 700 (878.101 iter/s, 0.113882s/100 iters), loss = 0.227746
I0428 20:16:47.001653   724 solver.cpp:238]     Train net output #0: loss = 0.227746 (* 1 = 0.227746 loss)
I0428 20:16:47.001677   724 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:16:47.117586   724 solver.cpp:219] Iteration 800 (862.656 iter/s, 0.115921s/100 iters), loss = 0.36533
I0428 20:16:47.117615   724 solver.cpp:238]     Train net output #0: loss = 0.36533 (* 1 = 0.36533 loss)
I0428 20:16:47.117638   724 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:16:47.233063   724 solver.cpp:219] Iteration 900 (866.269 iter/s, 0.115438s/100 iters), loss = 0.209559
I0428 20:16:47.233088   724 solver.cpp:238]     Train net output #0: loss = 0.209558 (* 1 = 0.209558 loss)
I0428 20:16:47.233093   724 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:16:47.271549   731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:47.347861   724 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:16:47.348929   724 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:16:47.349681   724 solver.cpp:311] Iteration 1000, loss = 0.136702
I0428 20:16:47.349696   724 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:16:47.414805   732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:47.417071   724 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 20:16:47.417091   724 solver.cpp:398]     Test net output #1: loss = 0.0968326 (* 1 = 0.0968326 loss)
I0428 20:16:47.417096   724 solver.cpp:316] Optimization Done.
I0428 20:16:47.417116   724 caffe.cpp:259] Optimization Done.
