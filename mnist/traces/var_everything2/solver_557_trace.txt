I0428 19:48:51.398509 26613 caffe.cpp:218] Using GPUs 0
I0428 19:48:51.436504 26613 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:51.952905 26613 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test557.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:51.953073 26613 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test557.prototxt
I0428 19:48:51.953455 26613 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:51.953480 26613 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:51.953583 26613 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:51.953689 26613 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:51.953816 26613 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:51.953850 26613 net.cpp:86] Creating Layer mnist
I0428 19:48:51.953862 26613 net.cpp:382] mnist -> data
I0428 19:48:51.953903 26613 net.cpp:382] mnist -> label
I0428 19:48:51.955122 26613 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:51.957564 26613 net.cpp:124] Setting up mnist
I0428 19:48:51.957584 26613 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:51.957597 26613 net.cpp:131] Top shape: 64 (64)
I0428 19:48:51.957604 26613 net.cpp:139] Memory required for data: 200960
I0428 19:48:51.957614 26613 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:51.957636 26613 net.cpp:86] Creating Layer conv0
I0428 19:48:51.957646 26613 net.cpp:408] conv0 <- data
I0428 19:48:51.957679 26613 net.cpp:382] conv0 -> conv0
I0428 19:48:52.243203 26613 net.cpp:124] Setting up conv0
I0428 19:48:52.243238 26613 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:52.243245 26613 net.cpp:139] Memory required for data: 938240
I0428 19:48:52.243297 26613 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:52.243320 26613 net.cpp:86] Creating Layer pool0
I0428 19:48:52.243330 26613 net.cpp:408] pool0 <- conv0
I0428 19:48:52.243341 26613 net.cpp:382] pool0 -> pool0
I0428 19:48:52.243405 26613 net.cpp:124] Setting up pool0
I0428 19:48:52.243417 26613 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:52.243424 26613 net.cpp:139] Memory required for data: 1122560
I0428 19:48:52.243430 26613 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:52.243449 26613 net.cpp:86] Creating Layer conv1
I0428 19:48:52.243458 26613 net.cpp:408] conv1 <- pool0
I0428 19:48:52.243468 26613 net.cpp:382] conv1 -> conv1
I0428 19:48:52.245658 26613 net.cpp:124] Setting up conv1
I0428 19:48:52.245679 26613 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:52.245687 26613 net.cpp:139] Memory required for data: 1204480
I0428 19:48:52.245703 26613 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:52.245718 26613 net.cpp:86] Creating Layer pool1
I0428 19:48:52.245724 26613 net.cpp:408] pool1 <- conv1
I0428 19:48:52.245734 26613 net.cpp:382] pool1 -> pool1
I0428 19:48:52.245789 26613 net.cpp:124] Setting up pool1
I0428 19:48:52.245800 26613 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:52.245806 26613 net.cpp:139] Memory required for data: 1224960
I0428 19:48:52.245813 26613 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:52.245826 26613 net.cpp:86] Creating Layer ip1
I0428 19:48:52.245832 26613 net.cpp:408] ip1 <- pool1
I0428 19:48:52.245842 26613 net.cpp:382] ip1 -> ip1
I0428 19:48:52.246971 26613 net.cpp:124] Setting up ip1
I0428 19:48:52.246989 26613 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:52.246996 26613 net.cpp:139] Memory required for data: 1237760
I0428 19:48:52.247012 26613 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:52.247025 26613 net.cpp:86] Creating Layer relu1
I0428 19:48:52.247031 26613 net.cpp:408] relu1 <- ip1
I0428 19:48:52.247041 26613 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:52.247252 26613 net.cpp:124] Setting up relu1
I0428 19:48:52.247267 26613 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:52.247272 26613 net.cpp:139] Memory required for data: 1250560
I0428 19:48:52.247279 26613 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:52.247292 26613 net.cpp:86] Creating Layer ip2
I0428 19:48:52.247298 26613 net.cpp:408] ip2 <- ip1
I0428 19:48:52.247309 26613 net.cpp:382] ip2 -> ip2
I0428 19:48:52.247440 26613 net.cpp:124] Setting up ip2
I0428 19:48:52.247452 26613 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:52.247458 26613 net.cpp:139] Memory required for data: 1253120
I0428 19:48:52.247470 26613 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:52.247481 26613 net.cpp:86] Creating Layer relu2
I0428 19:48:52.247488 26613 net.cpp:408] relu2 <- ip2
I0428 19:48:52.247498 26613 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:52.248364 26613 net.cpp:124] Setting up relu2
I0428 19:48:52.248383 26613 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:52.248389 26613 net.cpp:139] Memory required for data: 1255680
I0428 19:48:52.248396 26613 layer_factory.hpp:77] Creating layer loss
I0428 19:48:52.248409 26613 net.cpp:86] Creating Layer loss
I0428 19:48:52.248415 26613 net.cpp:408] loss <- ip2
I0428 19:48:52.248425 26613 net.cpp:408] loss <- label
I0428 19:48:52.248435 26613 net.cpp:382] loss -> loss
I0428 19:48:52.248466 26613 layer_factory.hpp:77] Creating layer loss
I0428 19:48:52.248764 26613 net.cpp:124] Setting up loss
I0428 19:48:52.248780 26613 net.cpp:131] Top shape: (1)
I0428 19:48:52.248786 26613 net.cpp:134]     with loss weight 1
I0428 19:48:52.248808 26613 net.cpp:139] Memory required for data: 1255684
I0428 19:48:52.248824 26613 net.cpp:200] loss needs backward computation.
I0428 19:48:52.248831 26613 net.cpp:200] relu2 needs backward computation.
I0428 19:48:52.248837 26613 net.cpp:200] ip2 needs backward computation.
I0428 19:48:52.248843 26613 net.cpp:200] relu1 needs backward computation.
I0428 19:48:52.248848 26613 net.cpp:200] ip1 needs backward computation.
I0428 19:48:52.248855 26613 net.cpp:200] pool1 needs backward computation.
I0428 19:48:52.248874 26613 net.cpp:200] conv1 needs backward computation.
I0428 19:48:52.248881 26613 net.cpp:200] pool0 needs backward computation.
I0428 19:48:52.248888 26613 net.cpp:200] conv0 needs backward computation.
I0428 19:48:52.248894 26613 net.cpp:202] mnist does not need backward computation.
I0428 19:48:52.248899 26613 net.cpp:244] This network produces output loss
I0428 19:48:52.248915 26613 net.cpp:257] Network initialization done.
I0428 19:48:52.249274 26613 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test557.prototxt
I0428 19:48:52.249313 26613 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:52.249424 26613 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:52.249547 26613 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:52.249616 26613 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:52.249644 26613 net.cpp:86] Creating Layer mnist
I0428 19:48:52.249655 26613 net.cpp:382] mnist -> data
I0428 19:48:52.249668 26613 net.cpp:382] mnist -> label
I0428 19:48:52.249815 26613 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:52.252168 26613 net.cpp:124] Setting up mnist
I0428 19:48:52.252187 26613 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:52.252199 26613 net.cpp:131] Top shape: 100 (100)
I0428 19:48:52.252205 26613 net.cpp:139] Memory required for data: 314000
I0428 19:48:52.252213 26613 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:52.252229 26613 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:52.252244 26613 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:52.252254 26613 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:52.252267 26613 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:52.252367 26613 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:52.252388 26613 net.cpp:131] Top shape: 100 (100)
I0428 19:48:52.252396 26613 net.cpp:131] Top shape: 100 (100)
I0428 19:48:52.252403 26613 net.cpp:139] Memory required for data: 314800
I0428 19:48:52.252409 26613 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:52.252427 26613 net.cpp:86] Creating Layer conv0
I0428 19:48:52.252435 26613 net.cpp:408] conv0 <- data
I0428 19:48:52.252449 26613 net.cpp:382] conv0 -> conv0
I0428 19:48:52.254426 26613 net.cpp:124] Setting up conv0
I0428 19:48:52.254446 26613 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:52.254452 26613 net.cpp:139] Memory required for data: 1466800
I0428 19:48:52.254470 26613 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:52.254484 26613 net.cpp:86] Creating Layer pool0
I0428 19:48:52.254492 26613 net.cpp:408] pool0 <- conv0
I0428 19:48:52.254501 26613 net.cpp:382] pool0 -> pool0
I0428 19:48:52.254555 26613 net.cpp:124] Setting up pool0
I0428 19:48:52.254567 26613 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:52.254573 26613 net.cpp:139] Memory required for data: 1754800
I0428 19:48:52.254580 26613 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:52.254598 26613 net.cpp:86] Creating Layer conv1
I0428 19:48:52.254606 26613 net.cpp:408] conv1 <- pool0
I0428 19:48:52.254619 26613 net.cpp:382] conv1 -> conv1
I0428 19:48:52.256948 26613 net.cpp:124] Setting up conv1
I0428 19:48:52.256965 26613 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:52.256973 26613 net.cpp:139] Memory required for data: 1882800
I0428 19:48:52.256989 26613 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:52.257002 26613 net.cpp:86] Creating Layer pool1
I0428 19:48:52.257009 26613 net.cpp:408] pool1 <- conv1
I0428 19:48:52.257021 26613 net.cpp:382] pool1 -> pool1
I0428 19:48:52.257081 26613 net.cpp:124] Setting up pool1
I0428 19:48:52.257091 26613 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:52.257097 26613 net.cpp:139] Memory required for data: 1914800
I0428 19:48:52.257102 26613 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:52.257117 26613 net.cpp:86] Creating Layer ip1
I0428 19:48:52.257125 26613 net.cpp:408] ip1 <- pool1
I0428 19:48:52.257134 26613 net.cpp:382] ip1 -> ip1
I0428 19:48:52.257292 26613 net.cpp:124] Setting up ip1
I0428 19:48:52.257304 26613 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:52.257311 26613 net.cpp:139] Memory required for data: 1934800
I0428 19:48:52.257325 26613 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:52.257338 26613 net.cpp:86] Creating Layer relu1
I0428 19:48:52.257354 26613 net.cpp:408] relu1 <- ip1
I0428 19:48:52.257369 26613 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:52.257575 26613 net.cpp:124] Setting up relu1
I0428 19:48:52.257589 26613 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:52.257596 26613 net.cpp:139] Memory required for data: 1954800
I0428 19:48:52.257601 26613 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:52.257616 26613 net.cpp:86] Creating Layer ip2
I0428 19:48:52.257624 26613 net.cpp:408] ip2 <- ip1
I0428 19:48:52.257637 26613 net.cpp:382] ip2 -> ip2
I0428 19:48:52.257766 26613 net.cpp:124] Setting up ip2
I0428 19:48:52.257777 26613 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:52.257784 26613 net.cpp:139] Memory required for data: 1958800
I0428 19:48:52.257797 26613 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:52.257807 26613 net.cpp:86] Creating Layer relu2
I0428 19:48:52.257812 26613 net.cpp:408] relu2 <- ip2
I0428 19:48:52.257820 26613 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:52.258019 26613 net.cpp:124] Setting up relu2
I0428 19:48:52.258031 26613 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:52.258038 26613 net.cpp:139] Memory required for data: 1962800
I0428 19:48:52.258044 26613 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:48:52.258054 26613 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:48:52.258059 26613 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:48:52.258069 26613 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:48:52.258103 26613 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:48:52.258162 26613 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:48:52.258172 26613 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:52.258179 26613 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:52.258186 26613 net.cpp:139] Memory required for data: 1970800
I0428 19:48:52.258193 26613 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:52.258203 26613 net.cpp:86] Creating Layer accuracy
I0428 19:48:52.258210 26613 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:48:52.258225 26613 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:52.258234 26613 net.cpp:382] accuracy -> accuracy
I0428 19:48:52.258249 26613 net.cpp:124] Setting up accuracy
I0428 19:48:52.258257 26613 net.cpp:131] Top shape: (1)
I0428 19:48:52.258263 26613 net.cpp:139] Memory required for data: 1970804
I0428 19:48:52.258270 26613 layer_factory.hpp:77] Creating layer loss
I0428 19:48:52.258280 26613 net.cpp:86] Creating Layer loss
I0428 19:48:52.258288 26613 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:48:52.258296 26613 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:52.258303 26613 net.cpp:382] loss -> loss
I0428 19:48:52.258316 26613 layer_factory.hpp:77] Creating layer loss
I0428 19:48:52.258616 26613 net.cpp:124] Setting up loss
I0428 19:48:52.258628 26613 net.cpp:131] Top shape: (1)
I0428 19:48:52.258635 26613 net.cpp:134]     with loss weight 1
I0428 19:48:52.258644 26613 net.cpp:139] Memory required for data: 1970808
I0428 19:48:52.258651 26613 net.cpp:200] loss needs backward computation.
I0428 19:48:52.258658 26613 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:52.258666 26613 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:48:52.258671 26613 net.cpp:200] relu2 needs backward computation.
I0428 19:48:52.258677 26613 net.cpp:200] ip2 needs backward computation.
I0428 19:48:52.258682 26613 net.cpp:200] relu1 needs backward computation.
I0428 19:48:52.258688 26613 net.cpp:200] ip1 needs backward computation.
I0428 19:48:52.258694 26613 net.cpp:200] pool1 needs backward computation.
I0428 19:48:52.258702 26613 net.cpp:200] conv1 needs backward computation.
I0428 19:48:52.258708 26613 net.cpp:200] pool0 needs backward computation.
I0428 19:48:52.258713 26613 net.cpp:200] conv0 needs backward computation.
I0428 19:48:52.258719 26613 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:52.258731 26613 net.cpp:202] mnist does not need backward computation.
I0428 19:48:52.258738 26613 net.cpp:244] This network produces output accuracy
I0428 19:48:52.258744 26613 net.cpp:244] This network produces output loss
I0428 19:48:52.258760 26613 net.cpp:257] Network initialization done.
I0428 19:48:52.258811 26613 solver.cpp:56] Solver scaffolding done.
I0428 19:48:52.259119 26613 caffe.cpp:248] Starting Optimization
I0428 19:48:52.259126 26613 solver.cpp:273] Solving LeNet
I0428 19:48:52.259131 26613 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:52.259950 26613 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:52.262293 26613 blocking_queue.cpp:49] Waiting for data
I0428 19:48:52.336117 26620 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:52.336602 26613 solver.cpp:398]     Test net output #0: accuracy = 0.0806
I0428 19:48:52.336628 26613 solver.cpp:398]     Test net output #1: loss = 2.34941 (* 1 = 2.34941 loss)
I0428 19:48:52.338208 26613 solver.cpp:219] Iteration 0 (-2.32829e-31 iter/s, 0.0790433s/100 iters), loss = 2.36771
I0428 19:48:52.338248 26613 solver.cpp:238]     Train net output #0: loss = 2.36771 (* 1 = 2.36771 loss)
I0428 19:48:52.338282 26613 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:52.417268 26613 solver.cpp:219] Iteration 100 (1265.62 iter/s, 0.0790125s/100 iters), loss = 0.477696
I0428 19:48:52.417300 26613 solver.cpp:238]     Train net output #0: loss = 0.477696 (* 1 = 0.477696 loss)
I0428 19:48:52.417311 26613 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:52.483579 26613 solver.cpp:219] Iteration 200 (1508.9 iter/s, 0.0662733s/100 iters), loss = 0.394089
I0428 19:48:52.483621 26613 solver.cpp:238]     Train net output #0: loss = 0.394089 (* 1 = 0.394089 loss)
I0428 19:48:52.483633 26613 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:52.548599 26613 solver.cpp:219] Iteration 300 (1539.08 iter/s, 0.0649738s/100 iters), loss = 0.528164
I0428 19:48:52.548627 26613 solver.cpp:238]     Train net output #0: loss = 0.528164 (* 1 = 0.528164 loss)
I0428 19:48:52.548637 26613 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:52.612264 26613 solver.cpp:219] Iteration 400 (1571.53 iter/s, 0.0636324s/100 iters), loss = 0.497071
I0428 19:48:52.612292 26613 solver.cpp:238]     Train net output #0: loss = 0.497071 (* 1 = 0.497071 loss)
I0428 19:48:52.612318 26613 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:52.676729 26613 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:52.752985 26620 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:52.753509 26613 solver.cpp:398]     Test net output #0: accuracy = 0.9247
I0428 19:48:52.753531 26613 solver.cpp:398]     Test net output #1: loss = 0.401129 (* 1 = 0.401129 loss)
I0428 19:48:52.754165 26613 solver.cpp:219] Iteration 500 (704.901 iter/s, 0.141864s/100 iters), loss = 0.445189
I0428 19:48:52.754191 26613 solver.cpp:238]     Train net output #0: loss = 0.445189 (* 1 = 0.445189 loss)
I0428 19:48:52.754209 26613 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:52.829529 26613 solver.cpp:219] Iteration 600 (1327.5 iter/s, 0.0753297s/100 iters), loss = 0.386049
I0428 19:48:52.829557 26613 solver.cpp:238]     Train net output #0: loss = 0.386049 (* 1 = 0.386049 loss)
I0428 19:48:52.829567 26613 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:52.904491 26613 solver.cpp:219] Iteration 700 (1334.69 iter/s, 0.074924s/100 iters), loss = 0.483281
I0428 19:48:52.904541 26613 solver.cpp:238]     Train net output #0: loss = 0.483281 (* 1 = 0.483281 loss)
I0428 19:48:52.904559 26613 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:52.982031 26613 solver.cpp:219] Iteration 800 (1290.52 iter/s, 0.0774882s/100 iters), loss = 0.491671
I0428 19:48:52.982069 26613 solver.cpp:238]     Train net output #0: loss = 0.491671 (* 1 = 0.491671 loss)
I0428 19:48:52.982082 26613 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:53.050061 26613 solver.cpp:219] Iteration 900 (1470.86 iter/s, 0.0679875s/100 iters), loss = 0.491721
I0428 19:48:53.050091 26613 solver.cpp:238]     Train net output #0: loss = 0.491721 (* 1 = 0.491721 loss)
I0428 19:48:53.050102 26613 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:53.076239 26619 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:53.127291 26613 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:53.127943 26613 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:53.128374 26613 solver.cpp:311] Iteration 1000, loss = 0.401862
I0428 19:48:53.128391 26613 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:53.182425 26620 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:53.182916 26613 solver.cpp:398]     Test net output #0: accuracy = 0.9526
I0428 19:48:53.182936 26613 solver.cpp:398]     Test net output #1: loss = 0.343125 (* 1 = 0.343125 loss)
I0428 19:48:53.182943 26613 solver.cpp:316] Optimization Done.
I0428 19:48:53.182948 26613 caffe.cpp:259] Optimization Done.
