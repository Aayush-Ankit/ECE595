I0428 19:55:39.481036 28225 caffe.cpp:218] Using GPUs 0
I0428 19:55:39.510005 28225 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:39.961531 28225 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test737.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:39.961680 28225 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test737.prototxt
I0428 19:55:39.962050 28225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:39.962081 28225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:39.962167 28225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:39.962246 28225 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:39.962327 28225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:39.962347 28225 net.cpp:86] Creating Layer mnist
I0428 19:55:39.962354 28225 net.cpp:382] mnist -> data
I0428 19:55:39.962373 28225 net.cpp:382] mnist -> label
I0428 19:55:39.963380 28225 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:39.965678 28225 net.cpp:124] Setting up mnist
I0428 19:55:39.965693 28225 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:39.965698 28225 net.cpp:131] Top shape: 64 (64)
I0428 19:55:39.965700 28225 net.cpp:139] Memory required for data: 200960
I0428 19:55:39.965706 28225 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:39.965757 28225 net.cpp:86] Creating Layer conv0
I0428 19:55:39.965775 28225 net.cpp:408] conv0 <- data
I0428 19:55:39.965785 28225 net.cpp:382] conv0 -> conv0
I0428 19:55:40.197063 28225 net.cpp:124] Setting up conv0
I0428 19:55:40.197091 28225 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:40.197095 28225 net.cpp:139] Memory required for data: 938240
I0428 19:55:40.197109 28225 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:40.197137 28225 net.cpp:86] Creating Layer pool0
I0428 19:55:40.197141 28225 net.cpp:408] pool0 <- conv0
I0428 19:55:40.197146 28225 net.cpp:382] pool0 -> pool0
I0428 19:55:40.197190 28225 net.cpp:124] Setting up pool0
I0428 19:55:40.197197 28225 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:40.197201 28225 net.cpp:139] Memory required for data: 1122560
I0428 19:55:40.197203 28225 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:40.197213 28225 net.cpp:86] Creating Layer conv1
I0428 19:55:40.197216 28225 net.cpp:408] conv1 <- pool0
I0428 19:55:40.197221 28225 net.cpp:382] conv1 -> conv1
I0428 19:55:40.200054 28225 net.cpp:124] Setting up conv1
I0428 19:55:40.200068 28225 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:40.200088 28225 net.cpp:139] Memory required for data: 2760960
I0428 19:55:40.200096 28225 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:40.200103 28225 net.cpp:86] Creating Layer pool1
I0428 19:55:40.200106 28225 net.cpp:408] pool1 <- conv1
I0428 19:55:40.200111 28225 net.cpp:382] pool1 -> pool1
I0428 19:55:40.200162 28225 net.cpp:124] Setting up pool1
I0428 19:55:40.200168 28225 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:40.200171 28225 net.cpp:139] Memory required for data: 3170560
I0428 19:55:40.200173 28225 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:40.200181 28225 net.cpp:86] Creating Layer ip1
I0428 19:55:40.200184 28225 net.cpp:408] ip1 <- pool1
I0428 19:55:40.200189 28225 net.cpp:382] ip1 -> ip1
I0428 19:55:40.201652 28225 net.cpp:124] Setting up ip1
I0428 19:55:40.201680 28225 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:40.201684 28225 net.cpp:139] Memory required for data: 3183360
I0428 19:55:40.201692 28225 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:40.201699 28225 net.cpp:86] Creating Layer relu1
I0428 19:55:40.201702 28225 net.cpp:408] relu1 <- ip1
I0428 19:55:40.201706 28225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:40.201890 28225 net.cpp:124] Setting up relu1
I0428 19:55:40.201900 28225 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:40.201902 28225 net.cpp:139] Memory required for data: 3196160
I0428 19:55:40.201906 28225 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:40.201912 28225 net.cpp:86] Creating Layer ip2
I0428 19:55:40.201915 28225 net.cpp:408] ip2 <- ip1
I0428 19:55:40.201920 28225 net.cpp:382] ip2 -> ip2
I0428 19:55:40.202937 28225 net.cpp:124] Setting up ip2
I0428 19:55:40.202950 28225 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:40.202968 28225 net.cpp:139] Memory required for data: 3202560
I0428 19:55:40.202975 28225 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:40.202981 28225 net.cpp:86] Creating Layer relu2
I0428 19:55:40.202985 28225 net.cpp:408] relu2 <- ip2
I0428 19:55:40.202989 28225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:40.203793 28225 net.cpp:124] Setting up relu2
I0428 19:55:40.203804 28225 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:40.203822 28225 net.cpp:139] Memory required for data: 3208960
I0428 19:55:40.203826 28225 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:40.203848 28225 net.cpp:86] Creating Layer ip3
I0428 19:55:40.203851 28225 net.cpp:408] ip3 <- ip2
I0428 19:55:40.203857 28225 net.cpp:382] ip3 -> ip3
I0428 19:55:40.203972 28225 net.cpp:124] Setting up ip3
I0428 19:55:40.203980 28225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:40.203984 28225 net.cpp:139] Memory required for data: 3211520
I0428 19:55:40.203991 28225 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:40.203996 28225 net.cpp:86] Creating Layer relu3
I0428 19:55:40.204015 28225 net.cpp:408] relu3 <- ip3
I0428 19:55:40.204018 28225 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:40.204210 28225 net.cpp:124] Setting up relu3
I0428 19:55:40.204218 28225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:40.204221 28225 net.cpp:139] Memory required for data: 3214080
I0428 19:55:40.204224 28225 layer_factory.hpp:77] Creating layer loss
I0428 19:55:40.204231 28225 net.cpp:86] Creating Layer loss
I0428 19:55:40.204233 28225 net.cpp:408] loss <- ip3
I0428 19:55:40.204252 28225 net.cpp:408] loss <- label
I0428 19:55:40.204257 28225 net.cpp:382] loss -> loss
I0428 19:55:40.204272 28225 layer_factory.hpp:77] Creating layer loss
I0428 19:55:40.204509 28225 net.cpp:124] Setting up loss
I0428 19:55:40.204519 28225 net.cpp:131] Top shape: (1)
I0428 19:55:40.204521 28225 net.cpp:134]     with loss weight 1
I0428 19:55:40.204535 28225 net.cpp:139] Memory required for data: 3214084
I0428 19:55:40.204538 28225 net.cpp:200] loss needs backward computation.
I0428 19:55:40.204541 28225 net.cpp:200] relu3 needs backward computation.
I0428 19:55:40.204545 28225 net.cpp:200] ip3 needs backward computation.
I0428 19:55:40.204547 28225 net.cpp:200] relu2 needs backward computation.
I0428 19:55:40.204550 28225 net.cpp:200] ip2 needs backward computation.
I0428 19:55:40.204552 28225 net.cpp:200] relu1 needs backward computation.
I0428 19:55:40.204555 28225 net.cpp:200] ip1 needs backward computation.
I0428 19:55:40.204558 28225 net.cpp:200] pool1 needs backward computation.
I0428 19:55:40.204560 28225 net.cpp:200] conv1 needs backward computation.
I0428 19:55:40.204565 28225 net.cpp:200] pool0 needs backward computation.
I0428 19:55:40.204567 28225 net.cpp:200] conv0 needs backward computation.
I0428 19:55:40.204571 28225 net.cpp:202] mnist does not need backward computation.
I0428 19:55:40.204573 28225 net.cpp:244] This network produces output loss
I0428 19:55:40.204582 28225 net.cpp:257] Network initialization done.
I0428 19:55:40.204985 28225 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test737.prototxt
I0428 19:55:40.205016 28225 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:40.205117 28225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:40.205231 28225 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:40.205328 28225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:40.205340 28225 net.cpp:86] Creating Layer mnist
I0428 19:55:40.205345 28225 net.cpp:382] mnist -> data
I0428 19:55:40.205353 28225 net.cpp:382] mnist -> label
I0428 19:55:40.205452 28225 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:40.206662 28225 net.cpp:124] Setting up mnist
I0428 19:55:40.206691 28225 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:40.206696 28225 net.cpp:131] Top shape: 100 (100)
I0428 19:55:40.206709 28225 net.cpp:139] Memory required for data: 314000
I0428 19:55:40.206713 28225 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:40.206719 28225 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:40.206722 28225 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:40.206727 28225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:40.206732 28225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:40.206785 28225 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:40.206791 28225 net.cpp:131] Top shape: 100 (100)
I0428 19:55:40.206794 28225 net.cpp:131] Top shape: 100 (100)
I0428 19:55:40.206797 28225 net.cpp:139] Memory required for data: 314800
I0428 19:55:40.206800 28225 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:40.206807 28225 net.cpp:86] Creating Layer conv0
I0428 19:55:40.206810 28225 net.cpp:408] conv0 <- data
I0428 19:55:40.206832 28225 net.cpp:382] conv0 -> conv0
I0428 19:55:40.208456 28225 net.cpp:124] Setting up conv0
I0428 19:55:40.208472 28225 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:40.208475 28225 net.cpp:139] Memory required for data: 1466800
I0428 19:55:40.208484 28225 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:40.208492 28225 net.cpp:86] Creating Layer pool0
I0428 19:55:40.208494 28225 net.cpp:408] pool0 <- conv0
I0428 19:55:40.208499 28225 net.cpp:382] pool0 -> pool0
I0428 19:55:40.208536 28225 net.cpp:124] Setting up pool0
I0428 19:55:40.208565 28225 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:40.208570 28225 net.cpp:139] Memory required for data: 1754800
I0428 19:55:40.208571 28225 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:40.208580 28225 net.cpp:86] Creating Layer conv1
I0428 19:55:40.208583 28225 net.cpp:408] conv1 <- pool0
I0428 19:55:40.208588 28225 net.cpp:382] conv1 -> conv1
I0428 19:55:40.210264 28225 net.cpp:124] Setting up conv1
I0428 19:55:40.210280 28225 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:40.210284 28225 net.cpp:139] Memory required for data: 4314800
I0428 19:55:40.210294 28225 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:40.210319 28225 net.cpp:86] Creating Layer pool1
I0428 19:55:40.210324 28225 net.cpp:408] pool1 <- conv1
I0428 19:55:40.210328 28225 net.cpp:382] pool1 -> pool1
I0428 19:55:40.210363 28225 net.cpp:124] Setting up pool1
I0428 19:55:40.210369 28225 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:40.210387 28225 net.cpp:139] Memory required for data: 4954800
I0428 19:55:40.210396 28225 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:40.210402 28225 net.cpp:86] Creating Layer ip1
I0428 19:55:40.210405 28225 net.cpp:408] ip1 <- pool1
I0428 19:55:40.210410 28225 net.cpp:382] ip1 -> ip1
I0428 19:55:40.211024 28225 net.cpp:124] Setting up ip1
I0428 19:55:40.211031 28225 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:40.211045 28225 net.cpp:139] Memory required for data: 4974800
I0428 19:55:40.211052 28225 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:40.211057 28225 net.cpp:86] Creating Layer relu1
I0428 19:55:40.211061 28225 net.cpp:408] relu1 <- ip1
I0428 19:55:40.211064 28225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:40.211359 28225 net.cpp:124] Setting up relu1
I0428 19:55:40.211367 28225 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:40.211371 28225 net.cpp:139] Memory required for data: 4994800
I0428 19:55:40.211374 28225 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:40.211381 28225 net.cpp:86] Creating Layer ip2
I0428 19:55:40.211385 28225 net.cpp:408] ip2 <- ip1
I0428 19:55:40.211390 28225 net.cpp:382] ip2 -> ip2
I0428 19:55:40.211544 28225 net.cpp:124] Setting up ip2
I0428 19:55:40.211552 28225 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:40.211561 28225 net.cpp:139] Memory required for data: 5004800
I0428 19:55:40.211566 28225 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:40.211571 28225 net.cpp:86] Creating Layer relu2
I0428 19:55:40.211575 28225 net.cpp:408] relu2 <- ip2
I0428 19:55:40.211578 28225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:40.211724 28225 net.cpp:124] Setting up relu2
I0428 19:55:40.211747 28225 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:40.211750 28225 net.cpp:139] Memory required for data: 5014800
I0428 19:55:40.211753 28225 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:40.211760 28225 net.cpp:86] Creating Layer ip3
I0428 19:55:40.211762 28225 net.cpp:408] ip3 <- ip2
I0428 19:55:40.211766 28225 net.cpp:382] ip3 -> ip3
I0428 19:55:40.211871 28225 net.cpp:124] Setting up ip3
I0428 19:55:40.211877 28225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:40.211880 28225 net.cpp:139] Memory required for data: 5018800
I0428 19:55:40.211887 28225 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:40.211891 28225 net.cpp:86] Creating Layer relu3
I0428 19:55:40.211894 28225 net.cpp:408] relu3 <- ip3
I0428 19:55:40.211899 28225 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:40.212772 28225 net.cpp:124] Setting up relu3
I0428 19:55:40.212785 28225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:40.212787 28225 net.cpp:139] Memory required for data: 5022800
I0428 19:55:40.212791 28225 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:40.212796 28225 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:40.212800 28225 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:40.212805 28225 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:40.212815 28225 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:40.212898 28225 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:40.212908 28225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:40.212913 28225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:40.212916 28225 net.cpp:139] Memory required for data: 5030800
I0428 19:55:40.212919 28225 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:40.212924 28225 net.cpp:86] Creating Layer accuracy
I0428 19:55:40.212929 28225 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:40.212932 28225 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:40.212936 28225 net.cpp:382] accuracy -> accuracy
I0428 19:55:40.212959 28225 net.cpp:124] Setting up accuracy
I0428 19:55:40.212962 28225 net.cpp:131] Top shape: (1)
I0428 19:55:40.212965 28225 net.cpp:139] Memory required for data: 5030804
I0428 19:55:40.212968 28225 layer_factory.hpp:77] Creating layer loss
I0428 19:55:40.212972 28225 net.cpp:86] Creating Layer loss
I0428 19:55:40.212975 28225 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:40.212978 28225 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:40.212983 28225 net.cpp:382] loss -> loss
I0428 19:55:40.212988 28225 layer_factory.hpp:77] Creating layer loss
I0428 19:55:40.213270 28225 net.cpp:124] Setting up loss
I0428 19:55:40.213279 28225 net.cpp:131] Top shape: (1)
I0428 19:55:40.213284 28225 net.cpp:134]     with loss weight 1
I0428 19:55:40.213299 28225 net.cpp:139] Memory required for data: 5030808
I0428 19:55:40.213310 28225 net.cpp:200] loss needs backward computation.
I0428 19:55:40.213313 28225 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:40.213316 28225 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:40.213320 28225 net.cpp:200] relu3 needs backward computation.
I0428 19:55:40.213322 28225 net.cpp:200] ip3 needs backward computation.
I0428 19:55:40.213325 28225 net.cpp:200] relu2 needs backward computation.
I0428 19:55:40.213328 28225 net.cpp:200] ip2 needs backward computation.
I0428 19:55:40.213330 28225 net.cpp:200] relu1 needs backward computation.
I0428 19:55:40.213343 28225 net.cpp:200] ip1 needs backward computation.
I0428 19:55:40.213346 28225 net.cpp:200] pool1 needs backward computation.
I0428 19:55:40.213348 28225 net.cpp:200] conv1 needs backward computation.
I0428 19:55:40.213356 28225 net.cpp:200] pool0 needs backward computation.
I0428 19:55:40.213359 28225 net.cpp:200] conv0 needs backward computation.
I0428 19:55:40.213363 28225 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:40.213366 28225 net.cpp:202] mnist does not need backward computation.
I0428 19:55:40.213369 28225 net.cpp:244] This network produces output accuracy
I0428 19:55:40.213372 28225 net.cpp:244] This network produces output loss
I0428 19:55:40.213382 28225 net.cpp:257] Network initialization done.
I0428 19:55:40.213425 28225 solver.cpp:56] Solver scaffolding done.
I0428 19:55:40.213766 28225 caffe.cpp:248] Starting Optimization
I0428 19:55:40.213773 28225 solver.cpp:273] Solving LeNet
I0428 19:55:40.213776 28225 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:40.213968 28225 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:40.220139 28225 blocking_queue.cpp:49] Waiting for data
I0428 19:55:40.286711 28234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:40.287322 28225 solver.cpp:398]     Test net output #0: accuracy = 0.1088
I0428 19:55:40.287343 28225 solver.cpp:398]     Test net output #1: loss = 2.31385 (* 1 = 2.31385 loss)
I0428 19:55:40.291056 28225 solver.cpp:219] Iteration 0 (0 iter/s, 0.0772557s/100 iters), loss = 2.30935
I0428 19:55:40.291079 28225 solver.cpp:238]     Train net output #0: loss = 2.30935 (* 1 = 2.30935 loss)
I0428 19:55:40.291105 28225 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:40.442196 28225 solver.cpp:219] Iteration 100 (661.794 iter/s, 0.151104s/100 iters), loss = 1.57938
I0428 19:55:40.442220 28225 solver.cpp:238]     Train net output #0: loss = 1.57938 (* 1 = 1.57938 loss)
I0428 19:55:40.442226 28225 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:40.592439 28225 solver.cpp:219] Iteration 200 (665.754 iter/s, 0.150206s/100 iters), loss = 1.32373
I0428 19:55:40.592463 28225 solver.cpp:238]     Train net output #0: loss = 1.32373 (* 1 = 1.32373 loss)
I0428 19:55:40.592469 28225 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:40.742532 28225 solver.cpp:219] Iteration 300 (666.427 iter/s, 0.150054s/100 iters), loss = 1.37358
I0428 19:55:40.742554 28225 solver.cpp:238]     Train net output #0: loss = 1.37358 (* 1 = 1.37358 loss)
I0428 19:55:40.742559 28225 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:40.894193 28225 solver.cpp:219] Iteration 400 (659.519 iter/s, 0.151626s/100 iters), loss = 0.982996
I0428 19:55:40.894217 28225 solver.cpp:238]     Train net output #0: loss = 0.982996 (* 1 = 0.982996 loss)
I0428 19:55:40.894237 28225 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:41.045131 28225 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:41.098218 28234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:41.099591 28225 solver.cpp:398]     Test net output #0: accuracy = 0.6573
I0428 19:55:41.099609 28225 solver.cpp:398]     Test net output #1: loss = 0.876725 (* 1 = 0.876725 loss)
I0428 19:55:41.101181 28225 solver.cpp:219] Iteration 500 (483.219 iter/s, 0.206945s/100 iters), loss = 0.846974
I0428 19:55:41.101223 28225 solver.cpp:238]     Train net output #0: loss = 0.846974 (* 1 = 0.846974 loss)
I0428 19:55:41.101260 28225 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:41.256206 28225 solver.cpp:219] Iteration 600 (645.217 iter/s, 0.154987s/100 iters), loss = 1.02684
I0428 19:55:41.256232 28225 solver.cpp:238]     Train net output #0: loss = 1.02684 (* 1 = 1.02684 loss)
I0428 19:55:41.256254 28225 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:41.400650 28225 solver.cpp:219] Iteration 700 (692.494 iter/s, 0.144405s/100 iters), loss = 0.815288
I0428 19:55:41.400674 28225 solver.cpp:238]     Train net output #0: loss = 0.815288 (* 1 = 0.815288 loss)
I0428 19:55:41.400696 28225 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:41.543697 28225 solver.cpp:219] Iteration 800 (699.248 iter/s, 0.143011s/100 iters), loss = 0.891426
I0428 19:55:41.543721 28225 solver.cpp:238]     Train net output #0: loss = 0.891426 (* 1 = 0.891426 loss)
I0428 19:55:41.543746 28225 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:41.689354 28225 solver.cpp:219] Iteration 900 (686.72 iter/s, 0.14562s/100 iters), loss = 0.936912
I0428 19:55:41.689379 28225 solver.cpp:238]     Train net output #0: loss = 0.936912 (* 1 = 0.936912 loss)
I0428 19:55:41.689405 28225 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:41.736913 28233 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:41.831467 28225 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:41.833935 28225 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:41.835198 28225 solver.cpp:311] Iteration 1000, loss = 0.746564
I0428 19:55:41.835216 28225 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:41.910010 28234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:41.910627 28225 solver.cpp:398]     Test net output #0: accuracy = 0.6877
I0428 19:55:41.910646 28225 solver.cpp:398]     Test net output #1: loss = 0.750539 (* 1 = 0.750539 loss)
I0428 19:55:41.910651 28225 solver.cpp:316] Optimization Done.
I0428 19:55:41.910655 28225 caffe.cpp:259] Optimization Done.
