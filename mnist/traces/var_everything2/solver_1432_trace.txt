I0428 20:24:06.938139  2360 caffe.cpp:218] Using GPUs 0
I0428 20:24:06.975740  2360 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:07.490515  2360 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1432.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:07.490661  2360 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1432.prototxt
I0428 20:24:07.491080  2360 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:07.491099  2360 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:07.491204  2360 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:07.491286  2360 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:07.491385  2360 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:07.491410  2360 net.cpp:86] Creating Layer mnist
I0428 20:24:07.491417  2360 net.cpp:382] mnist -> data
I0428 20:24:07.491442  2360 net.cpp:382] mnist -> label
I0428 20:24:07.492529  2360 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:07.495000  2360 net.cpp:124] Setting up mnist
I0428 20:24:07.495019  2360 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:07.495025  2360 net.cpp:131] Top shape: 64 (64)
I0428 20:24:07.495028  2360 net.cpp:139] Memory required for data: 200960
I0428 20:24:07.495035  2360 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:07.495055  2360 net.cpp:86] Creating Layer conv0
I0428 20:24:07.495077  2360 net.cpp:408] conv0 <- data
I0428 20:24:07.495090  2360 net.cpp:382] conv0 -> conv0
I0428 20:24:07.781659  2360 net.cpp:124] Setting up conv0
I0428 20:24:07.781685  2360 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:07.781689  2360 net.cpp:139] Memory required for data: 7573760
I0428 20:24:07.781705  2360 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:07.781718  2360 net.cpp:86] Creating Layer pool0
I0428 20:24:07.781723  2360 net.cpp:408] pool0 <- conv0
I0428 20:24:07.781728  2360 net.cpp:382] pool0 -> pool0
I0428 20:24:07.781774  2360 net.cpp:124] Setting up pool0
I0428 20:24:07.781780  2360 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:07.781782  2360 net.cpp:139] Memory required for data: 9416960
I0428 20:24:07.781785  2360 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:07.781796  2360 net.cpp:86] Creating Layer conv1
I0428 20:24:07.781800  2360 net.cpp:408] conv1 <- pool0
I0428 20:24:07.781805  2360 net.cpp:382] conv1 -> conv1
I0428 20:24:07.785166  2360 net.cpp:124] Setting up conv1
I0428 20:24:07.785181  2360 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:07.785184  2360 net.cpp:139] Memory required for data: 11055360
I0428 20:24:07.785192  2360 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:07.785200  2360 net.cpp:86] Creating Layer pool1
I0428 20:24:07.785203  2360 net.cpp:408] pool1 <- conv1
I0428 20:24:07.785208  2360 net.cpp:382] pool1 -> pool1
I0428 20:24:07.785244  2360 net.cpp:124] Setting up pool1
I0428 20:24:07.785250  2360 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:07.785254  2360 net.cpp:139] Memory required for data: 11464960
I0428 20:24:07.785256  2360 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:07.785262  2360 net.cpp:86] Creating Layer ip1
I0428 20:24:07.785265  2360 net.cpp:408] ip1 <- pool1
I0428 20:24:07.785270  2360 net.cpp:382] ip1 -> ip1
I0428 20:24:07.785586  2360 net.cpp:124] Setting up ip1
I0428 20:24:07.785594  2360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:07.785598  2360 net.cpp:139] Memory required for data: 11471360
I0428 20:24:07.785605  2360 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:07.785610  2360 net.cpp:86] Creating Layer relu1
I0428 20:24:07.785614  2360 net.cpp:408] relu1 <- ip1
I0428 20:24:07.785617  2360 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:07.785780  2360 net.cpp:124] Setting up relu1
I0428 20:24:07.785789  2360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:07.785792  2360 net.cpp:139] Memory required for data: 11477760
I0428 20:24:07.785795  2360 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:07.785801  2360 net.cpp:86] Creating Layer ip2
I0428 20:24:07.785804  2360 net.cpp:408] ip2 <- ip1
I0428 20:24:07.785809  2360 net.cpp:382] ip2 -> ip2
I0428 20:24:07.785909  2360 net.cpp:124] Setting up ip2
I0428 20:24:07.785917  2360 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:07.785919  2360 net.cpp:139] Memory required for data: 11490560
I0428 20:24:07.785924  2360 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:07.785930  2360 net.cpp:86] Creating Layer relu2
I0428 20:24:07.785933  2360 net.cpp:408] relu2 <- ip2
I0428 20:24:07.785938  2360 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:07.786643  2360 net.cpp:124] Setting up relu2
I0428 20:24:07.786656  2360 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:07.786659  2360 net.cpp:139] Memory required for data: 11503360
I0428 20:24:07.786664  2360 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:07.786669  2360 net.cpp:86] Creating Layer ip3
I0428 20:24:07.786674  2360 net.cpp:408] ip3 <- ip2
I0428 20:24:07.786679  2360 net.cpp:382] ip3 -> ip3
I0428 20:24:07.786777  2360 net.cpp:124] Setting up ip3
I0428 20:24:07.786784  2360 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:07.786787  2360 net.cpp:139] Memory required for data: 11505920
I0428 20:24:07.786795  2360 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:07.786800  2360 net.cpp:86] Creating Layer relu3
I0428 20:24:07.786803  2360 net.cpp:408] relu3 <- ip3
I0428 20:24:07.786808  2360 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:07.786967  2360 net.cpp:124] Setting up relu3
I0428 20:24:07.786976  2360 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:07.786979  2360 net.cpp:139] Memory required for data: 11508480
I0428 20:24:07.786983  2360 layer_factory.hpp:77] Creating layer loss
I0428 20:24:07.786988  2360 net.cpp:86] Creating Layer loss
I0428 20:24:07.786991  2360 net.cpp:408] loss <- ip3
I0428 20:24:07.786995  2360 net.cpp:408] loss <- label
I0428 20:24:07.787001  2360 net.cpp:382] loss -> loss
I0428 20:24:07.787014  2360 layer_factory.hpp:77] Creating layer loss
I0428 20:24:07.787230  2360 net.cpp:124] Setting up loss
I0428 20:24:07.787238  2360 net.cpp:131] Top shape: (1)
I0428 20:24:07.787241  2360 net.cpp:134]     with loss weight 1
I0428 20:24:07.787256  2360 net.cpp:139] Memory required for data: 11508484
I0428 20:24:07.787259  2360 net.cpp:200] loss needs backward computation.
I0428 20:24:07.787262  2360 net.cpp:200] relu3 needs backward computation.
I0428 20:24:07.787266  2360 net.cpp:200] ip3 needs backward computation.
I0428 20:24:07.787268  2360 net.cpp:200] relu2 needs backward computation.
I0428 20:24:07.787271  2360 net.cpp:200] ip2 needs backward computation.
I0428 20:24:07.787274  2360 net.cpp:200] relu1 needs backward computation.
I0428 20:24:07.787277  2360 net.cpp:200] ip1 needs backward computation.
I0428 20:24:07.787279  2360 net.cpp:200] pool1 needs backward computation.
I0428 20:24:07.787282  2360 net.cpp:200] conv1 needs backward computation.
I0428 20:24:07.787286  2360 net.cpp:200] pool0 needs backward computation.
I0428 20:24:07.787289  2360 net.cpp:200] conv0 needs backward computation.
I0428 20:24:07.787292  2360 net.cpp:202] mnist does not need backward computation.
I0428 20:24:07.787295  2360 net.cpp:244] This network produces output loss
I0428 20:24:07.787304  2360 net.cpp:257] Network initialization done.
I0428 20:24:07.787618  2360 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1432.prototxt
I0428 20:24:07.787644  2360 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:07.787734  2360 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:07.787811  2360 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:07.787854  2360 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:07.787868  2360 net.cpp:86] Creating Layer mnist
I0428 20:24:07.787871  2360 net.cpp:382] mnist -> data
I0428 20:24:07.787879  2360 net.cpp:382] mnist -> label
I0428 20:24:07.787961  2360 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:07.789072  2360 net.cpp:124] Setting up mnist
I0428 20:24:07.789115  2360 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:07.789120  2360 net.cpp:131] Top shape: 100 (100)
I0428 20:24:07.789124  2360 net.cpp:139] Memory required for data: 314000
I0428 20:24:07.789127  2360 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:07.789135  2360 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:07.789139  2360 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:07.789144  2360 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:07.789166  2360 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:07.789223  2360 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:07.789244  2360 net.cpp:131] Top shape: 100 (100)
I0428 20:24:07.789247  2360 net.cpp:131] Top shape: 100 (100)
I0428 20:24:07.789252  2360 net.cpp:139] Memory required for data: 314800
I0428 20:24:07.789253  2360 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:07.789261  2360 net.cpp:86] Creating Layer conv0
I0428 20:24:07.789264  2360 net.cpp:408] conv0 <- data
I0428 20:24:07.789269  2360 net.cpp:382] conv0 -> conv0
I0428 20:24:07.790824  2360 net.cpp:124] Setting up conv0
I0428 20:24:07.790838  2360 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:07.790858  2360 net.cpp:139] Memory required for data: 11834800
I0428 20:24:07.790866  2360 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:07.790873  2360 net.cpp:86] Creating Layer pool0
I0428 20:24:07.790876  2360 net.cpp:408] pool0 <- conv0
I0428 20:24:07.790880  2360 net.cpp:382] pool0 -> pool0
I0428 20:24:07.790916  2360 net.cpp:124] Setting up pool0
I0428 20:24:07.790921  2360 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:07.790925  2360 net.cpp:139] Memory required for data: 14714800
I0428 20:24:07.790927  2360 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:07.790935  2360 net.cpp:86] Creating Layer conv1
I0428 20:24:07.790940  2360 net.cpp:408] conv1 <- pool0
I0428 20:24:07.790943  2360 net.cpp:382] conv1 -> conv1
I0428 20:24:07.793987  2360 net.cpp:124] Setting up conv1
I0428 20:24:07.794000  2360 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:07.794004  2360 net.cpp:139] Memory required for data: 17274800
I0428 20:24:07.794013  2360 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:07.794018  2360 net.cpp:86] Creating Layer pool1
I0428 20:24:07.794023  2360 net.cpp:408] pool1 <- conv1
I0428 20:24:07.794028  2360 net.cpp:382] pool1 -> pool1
I0428 20:24:07.794085  2360 net.cpp:124] Setting up pool1
I0428 20:24:07.794090  2360 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:07.794093  2360 net.cpp:139] Memory required for data: 17914800
I0428 20:24:07.794096  2360 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:07.794103  2360 net.cpp:86] Creating Layer ip1
I0428 20:24:07.794111  2360 net.cpp:408] ip1 <- pool1
I0428 20:24:07.794116  2360 net.cpp:382] ip1 -> ip1
I0428 20:24:07.794450  2360 net.cpp:124] Setting up ip1
I0428 20:24:07.794468  2360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:07.794476  2360 net.cpp:139] Memory required for data: 17924800
I0428 20:24:07.794483  2360 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:07.794488  2360 net.cpp:86] Creating Layer relu1
I0428 20:24:07.794492  2360 net.cpp:408] relu1 <- ip1
I0428 20:24:07.794495  2360 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:07.794643  2360 net.cpp:124] Setting up relu1
I0428 20:24:07.794652  2360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:07.794656  2360 net.cpp:139] Memory required for data: 17934800
I0428 20:24:07.794658  2360 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:07.794665  2360 net.cpp:86] Creating Layer ip2
I0428 20:24:07.794668  2360 net.cpp:408] ip2 <- ip1
I0428 20:24:07.794673  2360 net.cpp:382] ip2 -> ip2
I0428 20:24:07.794782  2360 net.cpp:124] Setting up ip2
I0428 20:24:07.794790  2360 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:07.794792  2360 net.cpp:139] Memory required for data: 17954800
I0428 20:24:07.794797  2360 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:07.794801  2360 net.cpp:86] Creating Layer relu2
I0428 20:24:07.794805  2360 net.cpp:408] relu2 <- ip2
I0428 20:24:07.794807  2360 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:07.795050  2360 net.cpp:124] Setting up relu2
I0428 20:24:07.795059  2360 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:07.795063  2360 net.cpp:139] Memory required for data: 17974800
I0428 20:24:07.795065  2360 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:07.795071  2360 net.cpp:86] Creating Layer ip3
I0428 20:24:07.795074  2360 net.cpp:408] ip3 <- ip2
I0428 20:24:07.795079  2360 net.cpp:382] ip3 -> ip3
I0428 20:24:07.795197  2360 net.cpp:124] Setting up ip3
I0428 20:24:07.795203  2360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:07.795207  2360 net.cpp:139] Memory required for data: 17978800
I0428 20:24:07.795215  2360 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:07.795219  2360 net.cpp:86] Creating Layer relu3
I0428 20:24:07.795222  2360 net.cpp:408] relu3 <- ip3
I0428 20:24:07.795228  2360 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:07.796028  2360 net.cpp:124] Setting up relu3
I0428 20:24:07.796041  2360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:07.796054  2360 net.cpp:139] Memory required for data: 17982800
I0428 20:24:07.796057  2360 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:07.796062  2360 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:07.796066  2360 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:07.796072  2360 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:07.796077  2360 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:07.796128  2360 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:07.796135  2360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:07.796139  2360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:07.796141  2360 net.cpp:139] Memory required for data: 17990800
I0428 20:24:07.796144  2360 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:07.796150  2360 net.cpp:86] Creating Layer accuracy
I0428 20:24:07.796154  2360 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:07.796157  2360 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:07.796162  2360 net.cpp:382] accuracy -> accuracy
I0428 20:24:07.796169  2360 net.cpp:124] Setting up accuracy
I0428 20:24:07.796172  2360 net.cpp:131] Top shape: (1)
I0428 20:24:07.796175  2360 net.cpp:139] Memory required for data: 17990804
I0428 20:24:07.796178  2360 layer_factory.hpp:77] Creating layer loss
I0428 20:24:07.796182  2360 net.cpp:86] Creating Layer loss
I0428 20:24:07.796185  2360 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:07.796188  2360 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:07.796192  2360 net.cpp:382] loss -> loss
I0428 20:24:07.796198  2360 layer_factory.hpp:77] Creating layer loss
I0428 20:24:07.796466  2360 net.cpp:124] Setting up loss
I0428 20:24:07.796476  2360 net.cpp:131] Top shape: (1)
I0428 20:24:07.796495  2360 net.cpp:134]     with loss weight 1
I0428 20:24:07.796514  2360 net.cpp:139] Memory required for data: 17990808
I0428 20:24:07.796517  2360 net.cpp:200] loss needs backward computation.
I0428 20:24:07.796521  2360 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:07.796525  2360 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:07.796528  2360 net.cpp:200] relu3 needs backward computation.
I0428 20:24:07.796531  2360 net.cpp:200] ip3 needs backward computation.
I0428 20:24:07.796535  2360 net.cpp:200] relu2 needs backward computation.
I0428 20:24:07.796538  2360 net.cpp:200] ip2 needs backward computation.
I0428 20:24:07.796541  2360 net.cpp:200] relu1 needs backward computation.
I0428 20:24:07.796560  2360 net.cpp:200] ip1 needs backward computation.
I0428 20:24:07.796562  2360 net.cpp:200] pool1 needs backward computation.
I0428 20:24:07.796566  2360 net.cpp:200] conv1 needs backward computation.
I0428 20:24:07.796569  2360 net.cpp:200] pool0 needs backward computation.
I0428 20:24:07.796572  2360 net.cpp:200] conv0 needs backward computation.
I0428 20:24:07.796577  2360 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:07.796581  2360 net.cpp:202] mnist does not need backward computation.
I0428 20:24:07.796584  2360 net.cpp:244] This network produces output accuracy
I0428 20:24:07.796597  2360 net.cpp:244] This network produces output loss
I0428 20:24:07.796608  2360 net.cpp:257] Network initialization done.
I0428 20:24:07.796651  2360 solver.cpp:56] Solver scaffolding done.
I0428 20:24:07.797067  2360 caffe.cpp:248] Starting Optimization
I0428 20:24:07.797073  2360 solver.cpp:273] Solving LeNet
I0428 20:24:07.797087  2360 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:07.797921  2360 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:07.813555  2360 blocking_queue.cpp:49] Waiting for data
I0428 20:24:07.887831  2368 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:07.889237  2360 solver.cpp:398]     Test net output #0: accuracy = 0.0936
I0428 20:24:07.889272  2360 solver.cpp:398]     Test net output #1: loss = 2.3198 (* 1 = 2.3198 loss)
I0428 20:24:07.896306  2360 solver.cpp:219] Iteration 0 (0 iter/s, 0.0991899s/100 iters), loss = 2.31899
I0428 20:24:07.896328  2360 solver.cpp:238]     Train net output #0: loss = 2.31899 (* 1 = 2.31899 loss)
I0428 20:24:07.896339  2360 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:08.119806  2360 solver.cpp:219] Iteration 100 (447.509 iter/s, 0.223459s/100 iters), loss = 1.28612
I0428 20:24:08.119835  2360 solver.cpp:238]     Train net output #0: loss = 1.28612 (* 1 = 1.28612 loss)
I0428 20:24:08.119843  2360 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:08.342797  2360 solver.cpp:219] Iteration 200 (448.541 iter/s, 0.222945s/100 iters), loss = 0.676924
I0428 20:24:08.342823  2360 solver.cpp:238]     Train net output #0: loss = 0.676924 (* 1 = 0.676924 loss)
I0428 20:24:08.342829  2360 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:08.555567  2360 solver.cpp:219] Iteration 300 (470.111 iter/s, 0.212716s/100 iters), loss = 1.05151
I0428 20:24:08.555606  2360 solver.cpp:238]     Train net output #0: loss = 1.05151 (* 1 = 1.05151 loss)
I0428 20:24:08.555613  2360 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:08.764653  2360 solver.cpp:219] Iteration 400 (478.36 iter/s, 0.209048s/100 iters), loss = 1.01142
I0428 20:24:08.764694  2360 solver.cpp:238]     Train net output #0: loss = 1.01142 (* 1 = 1.01142 loss)
I0428 20:24:08.764700  2360 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:08.984966  2360 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:09.075168  2368 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:09.078321  2360 solver.cpp:398]     Test net output #0: accuracy = 0.6891
I0428 20:24:09.078343  2360 solver.cpp:398]     Test net output #1: loss = 0.795133 (* 1 = 0.795133 loss)
I0428 20:24:09.080528  2360 solver.cpp:219] Iteration 500 (316.626 iter/s, 0.31583s/100 iters), loss = 0.919796
I0428 20:24:09.080579  2360 solver.cpp:238]     Train net output #0: loss = 0.919796 (* 1 = 0.919796 loss)
I0428 20:24:09.080586  2360 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:09.317152  2360 solver.cpp:219] Iteration 600 (422.72 iter/s, 0.236563s/100 iters), loss = 0.607489
I0428 20:24:09.317184  2360 solver.cpp:238]     Train net output #0: loss = 0.607489 (* 1 = 0.607489 loss)
I0428 20:24:09.317193  2360 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:09.548135  2360 solver.cpp:219] Iteration 700 (433.023 iter/s, 0.230934s/100 iters), loss = 0.530503
I0428 20:24:09.548171  2360 solver.cpp:238]     Train net output #0: loss = 0.530503 (* 1 = 0.530503 loss)
I0428 20:24:09.548179  2360 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:09.780656  2360 solver.cpp:219] Iteration 800 (430.179 iter/s, 0.232461s/100 iters), loss = 0.653532
I0428 20:24:09.780689  2360 solver.cpp:238]     Train net output #0: loss = 0.653532 (* 1 = 0.653532 loss)
I0428 20:24:09.780697  2360 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:10.012833  2360 solver.cpp:219] Iteration 900 (430.817 iter/s, 0.232117s/100 iters), loss = 0.53366
I0428 20:24:10.012874  2360 solver.cpp:238]     Train net output #0: loss = 0.53366 (* 1 = 0.53366 loss)
I0428 20:24:10.012883  2360 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:10.090778  2367 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:10.243939  2360 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:10.249219  2360 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:10.251400  2360 solver.cpp:311] Iteration 1000, loss = 0.491213
I0428 20:24:10.251420  2360 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:10.340173  2368 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:10.343466  2360 solver.cpp:398]     Test net output #0: accuracy = 0.7891
I0428 20:24:10.343500  2360 solver.cpp:398]     Test net output #1: loss = 0.527832 (* 1 = 0.527832 loss)
I0428 20:24:10.343507  2360 solver.cpp:316] Optimization Done.
I0428 20:24:10.343509  2360 caffe.cpp:259] Optimization Done.
