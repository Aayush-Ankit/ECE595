I0428 19:51:00.893546 27175 caffe.cpp:218] Using GPUs 0
I0428 19:51:00.930286 27175 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:01.382308 27175 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test621.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:01.382477 27175 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test621.prototxt
I0428 19:51:01.383667 27175 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:01.383705 27175 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:01.383891 27175 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:01.384026 27175 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:01.384181 27175 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:01.384217 27175 net.cpp:86] Creating Layer mnist
I0428 19:51:01.384230 27175 net.cpp:382] mnist -> data
I0428 19:51:01.384265 27175 net.cpp:382] mnist -> label
I0428 19:51:01.385941 27175 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:01.389830 27175 net.cpp:124] Setting up mnist
I0428 19:51:01.389861 27175 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:01.389873 27175 net.cpp:131] Top shape: 64 (64)
I0428 19:51:01.389878 27175 net.cpp:139] Memory required for data: 200960
I0428 19:51:01.389890 27175 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:01.389916 27175 net.cpp:86] Creating Layer conv0
I0428 19:51:01.389951 27175 net.cpp:408] conv0 <- data
I0428 19:51:01.389971 27175 net.cpp:382] conv0 -> conv0
I0428 19:51:01.706034 27175 net.cpp:124] Setting up conv0
I0428 19:51:01.706065 27175 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:01.706070 27175 net.cpp:139] Memory required for data: 938240
I0428 19:51:01.706089 27175 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:01.706104 27175 net.cpp:86] Creating Layer pool0
I0428 19:51:01.706110 27175 net.cpp:408] pool0 <- conv0
I0428 19:51:01.706115 27175 net.cpp:382] pool0 -> pool0
I0428 19:51:01.706171 27175 net.cpp:124] Setting up pool0
I0428 19:51:01.706179 27175 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:01.706182 27175 net.cpp:139] Memory required for data: 1122560
I0428 19:51:01.706187 27175 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:01.706198 27175 net.cpp:86] Creating Layer conv1
I0428 19:51:01.706202 27175 net.cpp:408] conv1 <- pool0
I0428 19:51:01.706208 27175 net.cpp:382] conv1 -> conv1
I0428 19:51:01.709347 27175 net.cpp:124] Setting up conv1
I0428 19:51:01.709365 27175 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:51:01.709370 27175 net.cpp:139] Memory required for data: 1286400
I0428 19:51:01.709380 27175 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:01.709389 27175 net.cpp:86] Creating Layer pool1
I0428 19:51:01.709394 27175 net.cpp:408] pool1 <- conv1
I0428 19:51:01.709399 27175 net.cpp:382] pool1 -> pool1
I0428 19:51:01.709444 27175 net.cpp:124] Setting up pool1
I0428 19:51:01.709452 27175 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:51:01.709456 27175 net.cpp:139] Memory required for data: 1327360
I0428 19:51:01.709460 27175 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:01.709468 27175 net.cpp:86] Creating Layer ip1
I0428 19:51:01.709472 27175 net.cpp:408] ip1 <- pool1
I0428 19:51:01.709477 27175 net.cpp:382] ip1 -> ip1
I0428 19:51:01.710645 27175 net.cpp:124] Setting up ip1
I0428 19:51:01.710660 27175 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:01.710665 27175 net.cpp:139] Memory required for data: 1340160
I0428 19:51:01.710675 27175 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:01.710682 27175 net.cpp:86] Creating Layer relu1
I0428 19:51:01.710686 27175 net.cpp:408] relu1 <- ip1
I0428 19:51:01.710691 27175 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:01.710894 27175 net.cpp:124] Setting up relu1
I0428 19:51:01.710906 27175 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:01.710911 27175 net.cpp:139] Memory required for data: 1352960
I0428 19:51:01.710914 27175 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:01.710922 27175 net.cpp:86] Creating Layer ip2
I0428 19:51:01.710925 27175 net.cpp:408] ip2 <- ip1
I0428 19:51:01.710932 27175 net.cpp:382] ip2 -> ip2
I0428 19:51:01.711064 27175 net.cpp:124] Setting up ip2
I0428 19:51:01.711072 27175 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:01.711076 27175 net.cpp:139] Memory required for data: 1365760
I0428 19:51:01.711082 27175 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:01.711089 27175 net.cpp:86] Creating Layer relu2
I0428 19:51:01.711093 27175 net.cpp:408] relu2 <- ip2
I0428 19:51:01.711098 27175 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:01.711948 27175 net.cpp:124] Setting up relu2
I0428 19:51:01.711964 27175 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:01.711968 27175 net.cpp:139] Memory required for data: 1378560
I0428 19:51:01.711973 27175 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:01.711982 27175 net.cpp:86] Creating Layer ip3
I0428 19:51:01.711985 27175 net.cpp:408] ip3 <- ip2
I0428 19:51:01.711992 27175 net.cpp:382] ip3 -> ip3
I0428 19:51:01.712110 27175 net.cpp:124] Setting up ip3
I0428 19:51:01.712119 27175 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:01.712123 27175 net.cpp:139] Memory required for data: 1381120
I0428 19:51:01.712132 27175 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:01.712139 27175 net.cpp:86] Creating Layer relu3
I0428 19:51:01.712142 27175 net.cpp:408] relu3 <- ip3
I0428 19:51:01.712148 27175 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:01.712348 27175 net.cpp:124] Setting up relu3
I0428 19:51:01.712358 27175 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:01.712363 27175 net.cpp:139] Memory required for data: 1383680
I0428 19:51:01.712366 27175 layer_factory.hpp:77] Creating layer loss
I0428 19:51:01.712373 27175 net.cpp:86] Creating Layer loss
I0428 19:51:01.712376 27175 net.cpp:408] loss <- ip3
I0428 19:51:01.712381 27175 net.cpp:408] loss <- label
I0428 19:51:01.712388 27175 net.cpp:382] loss -> loss
I0428 19:51:01.712409 27175 layer_factory.hpp:77] Creating layer loss
I0428 19:51:01.712678 27175 net.cpp:124] Setting up loss
I0428 19:51:01.712688 27175 net.cpp:131] Top shape: (1)
I0428 19:51:01.712693 27175 net.cpp:134]     with loss weight 1
I0428 19:51:01.712708 27175 net.cpp:139] Memory required for data: 1383684
I0428 19:51:01.712713 27175 net.cpp:200] loss needs backward computation.
I0428 19:51:01.712718 27175 net.cpp:200] relu3 needs backward computation.
I0428 19:51:01.712720 27175 net.cpp:200] ip3 needs backward computation.
I0428 19:51:01.712724 27175 net.cpp:200] relu2 needs backward computation.
I0428 19:51:01.712728 27175 net.cpp:200] ip2 needs backward computation.
I0428 19:51:01.712730 27175 net.cpp:200] relu1 needs backward computation.
I0428 19:51:01.712734 27175 net.cpp:200] ip1 needs backward computation.
I0428 19:51:01.712738 27175 net.cpp:200] pool1 needs backward computation.
I0428 19:51:01.712741 27175 net.cpp:200] conv1 needs backward computation.
I0428 19:51:01.712744 27175 net.cpp:200] pool0 needs backward computation.
I0428 19:51:01.712749 27175 net.cpp:200] conv0 needs backward computation.
I0428 19:51:01.712752 27175 net.cpp:202] mnist does not need backward computation.
I0428 19:51:01.712755 27175 net.cpp:244] This network produces output loss
I0428 19:51:01.712766 27175 net.cpp:257] Network initialization done.
I0428 19:51:01.713158 27175 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test621.prototxt
I0428 19:51:01.713191 27175 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:01.713300 27175 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:01.713394 27175 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:01.713448 27175 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:01.713465 27175 net.cpp:86] Creating Layer mnist
I0428 19:51:01.713471 27175 net.cpp:382] mnist -> data
I0428 19:51:01.713480 27175 net.cpp:382] mnist -> label
I0428 19:51:01.713582 27175 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:01.715772 27175 net.cpp:124] Setting up mnist
I0428 19:51:01.715788 27175 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:01.715795 27175 net.cpp:131] Top shape: 100 (100)
I0428 19:51:01.715798 27175 net.cpp:139] Memory required for data: 314000
I0428 19:51:01.715803 27175 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:01.715816 27175 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:01.715819 27175 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:01.715826 27175 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:01.715833 27175 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:01.715888 27175 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:01.715895 27175 net.cpp:131] Top shape: 100 (100)
I0428 19:51:01.715899 27175 net.cpp:131] Top shape: 100 (100)
I0428 19:51:01.715903 27175 net.cpp:139] Memory required for data: 314800
I0428 19:51:01.715906 27175 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:01.715916 27175 net.cpp:86] Creating Layer conv0
I0428 19:51:01.715920 27175 net.cpp:408] conv0 <- data
I0428 19:51:01.715926 27175 net.cpp:382] conv0 -> conv0
I0428 19:51:01.717845 27175 net.cpp:124] Setting up conv0
I0428 19:51:01.717862 27175 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:01.717867 27175 net.cpp:139] Memory required for data: 1466800
I0428 19:51:01.717878 27175 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:01.717885 27175 net.cpp:86] Creating Layer pool0
I0428 19:51:01.717890 27175 net.cpp:408] pool0 <- conv0
I0428 19:51:01.717895 27175 net.cpp:382] pool0 -> pool0
I0428 19:51:01.717938 27175 net.cpp:124] Setting up pool0
I0428 19:51:01.717947 27175 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:01.717950 27175 net.cpp:139] Memory required for data: 1754800
I0428 19:51:01.717954 27175 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:01.717963 27175 net.cpp:86] Creating Layer conv1
I0428 19:51:01.717967 27175 net.cpp:408] conv1 <- pool0
I0428 19:51:01.717973 27175 net.cpp:382] conv1 -> conv1
I0428 19:51:01.720307 27175 net.cpp:124] Setting up conv1
I0428 19:51:01.720324 27175 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:51:01.720329 27175 net.cpp:139] Memory required for data: 2010800
I0428 19:51:01.720340 27175 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:01.720348 27175 net.cpp:86] Creating Layer pool1
I0428 19:51:01.720352 27175 net.cpp:408] pool1 <- conv1
I0428 19:51:01.720358 27175 net.cpp:382] pool1 -> pool1
I0428 19:51:01.720408 27175 net.cpp:124] Setting up pool1
I0428 19:51:01.720417 27175 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:51:01.720420 27175 net.cpp:139] Memory required for data: 2074800
I0428 19:51:01.720424 27175 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:01.720430 27175 net.cpp:86] Creating Layer ip1
I0428 19:51:01.720434 27175 net.cpp:408] ip1 <- pool1
I0428 19:51:01.720440 27175 net.cpp:382] ip1 -> ip1
I0428 19:51:01.720623 27175 net.cpp:124] Setting up ip1
I0428 19:51:01.720630 27175 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:01.720649 27175 net.cpp:139] Memory required for data: 2094800
I0428 19:51:01.720657 27175 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:01.720664 27175 net.cpp:86] Creating Layer relu1
I0428 19:51:01.720667 27175 net.cpp:408] relu1 <- ip1
I0428 19:51:01.720672 27175 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:01.720877 27175 net.cpp:124] Setting up relu1
I0428 19:51:01.720888 27175 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:01.720892 27175 net.cpp:139] Memory required for data: 2114800
I0428 19:51:01.720897 27175 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:01.720906 27175 net.cpp:86] Creating Layer ip2
I0428 19:51:01.720909 27175 net.cpp:408] ip2 <- ip1
I0428 19:51:01.720916 27175 net.cpp:382] ip2 -> ip2
I0428 19:51:01.721050 27175 net.cpp:124] Setting up ip2
I0428 19:51:01.721058 27175 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:01.721062 27175 net.cpp:139] Memory required for data: 2134800
I0428 19:51:01.721070 27175 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:01.721076 27175 net.cpp:86] Creating Layer relu2
I0428 19:51:01.721079 27175 net.cpp:408] relu2 <- ip2
I0428 19:51:01.721084 27175 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:01.721261 27175 net.cpp:124] Setting up relu2
I0428 19:51:01.721269 27175 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:01.721273 27175 net.cpp:139] Memory required for data: 2154800
I0428 19:51:01.721277 27175 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:01.721284 27175 net.cpp:86] Creating Layer ip3
I0428 19:51:01.721287 27175 net.cpp:408] ip3 <- ip2
I0428 19:51:01.721294 27175 net.cpp:382] ip3 -> ip3
I0428 19:51:01.721411 27175 net.cpp:124] Setting up ip3
I0428 19:51:01.721421 27175 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:01.721424 27175 net.cpp:139] Memory required for data: 2158800
I0428 19:51:01.721433 27175 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:01.721439 27175 net.cpp:86] Creating Layer relu3
I0428 19:51:01.721443 27175 net.cpp:408] relu3 <- ip3
I0428 19:51:01.721448 27175 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:01.722360 27175 net.cpp:124] Setting up relu3
I0428 19:51:01.722374 27175 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:01.722378 27175 net.cpp:139] Memory required for data: 2162800
I0428 19:51:01.722383 27175 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:01.722388 27175 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:01.722393 27175 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:01.722398 27175 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:01.722406 27175 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:01.722450 27175 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:01.722458 27175 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:01.722463 27175 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:01.722467 27175 net.cpp:139] Memory required for data: 2170800
I0428 19:51:01.722470 27175 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:01.722476 27175 net.cpp:86] Creating Layer accuracy
I0428 19:51:01.722482 27175 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:01.722486 27175 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:01.722492 27175 net.cpp:382] accuracy -> accuracy
I0428 19:51:01.722501 27175 net.cpp:124] Setting up accuracy
I0428 19:51:01.722506 27175 net.cpp:131] Top shape: (1)
I0428 19:51:01.722509 27175 net.cpp:139] Memory required for data: 2170804
I0428 19:51:01.722513 27175 layer_factory.hpp:77] Creating layer loss
I0428 19:51:01.722518 27175 net.cpp:86] Creating Layer loss
I0428 19:51:01.722523 27175 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:01.722527 27175 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:01.722532 27175 net.cpp:382] loss -> loss
I0428 19:51:01.722539 27175 layer_factory.hpp:77] Creating layer loss
I0428 19:51:01.722808 27175 net.cpp:124] Setting up loss
I0428 19:51:01.722820 27175 net.cpp:131] Top shape: (1)
I0428 19:51:01.722823 27175 net.cpp:134]     with loss weight 1
I0428 19:51:01.722831 27175 net.cpp:139] Memory required for data: 2170808
I0428 19:51:01.722846 27175 net.cpp:200] loss needs backward computation.
I0428 19:51:01.722851 27175 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:01.722856 27175 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:01.722861 27175 net.cpp:200] relu3 needs backward computation.
I0428 19:51:01.722864 27175 net.cpp:200] ip3 needs backward computation.
I0428 19:51:01.722867 27175 net.cpp:200] relu2 needs backward computation.
I0428 19:51:01.722872 27175 net.cpp:200] ip2 needs backward computation.
I0428 19:51:01.722874 27175 net.cpp:200] relu1 needs backward computation.
I0428 19:51:01.722878 27175 net.cpp:200] ip1 needs backward computation.
I0428 19:51:01.722882 27175 net.cpp:200] pool1 needs backward computation.
I0428 19:51:01.722887 27175 net.cpp:200] conv1 needs backward computation.
I0428 19:51:01.722890 27175 net.cpp:200] pool0 needs backward computation.
I0428 19:51:01.722894 27175 net.cpp:200] conv0 needs backward computation.
I0428 19:51:01.722899 27175 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:01.722903 27175 net.cpp:202] mnist does not need backward computation.
I0428 19:51:01.722908 27175 net.cpp:244] This network produces output accuracy
I0428 19:51:01.722911 27175 net.cpp:244] This network produces output loss
I0428 19:51:01.722924 27175 net.cpp:257] Network initialization done.
I0428 19:51:01.722975 27175 solver.cpp:56] Solver scaffolding done.
I0428 19:51:01.723399 27175 caffe.cpp:248] Starting Optimization
I0428 19:51:01.723407 27175 solver.cpp:273] Solving LeNet
I0428 19:51:01.723409 27175 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:01.724370 27175 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:01.727612 27175 blocking_queue.cpp:49] Waiting for data
I0428 19:51:01.799542 27182 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:01.800089 27175 solver.cpp:398]     Test net output #0: accuracy = 0.0834
I0428 19:51:01.800115 27175 solver.cpp:398]     Test net output #1: loss = 2.32743 (* 1 = 2.32743 loss)
I0428 19:51:01.802153 27175 solver.cpp:219] Iteration 0 (0 iter/s, 0.0787139s/100 iters), loss = 2.34322
I0428 19:51:01.802184 27175 solver.cpp:238]     Train net output #0: loss = 2.34322 (* 1 = 2.34322 loss)
I0428 19:51:01.802201 27175 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:01.882441 27175 solver.cpp:219] Iteration 100 (1246.17 iter/s, 0.0802458s/100 iters), loss = 0.77008
I0428 19:51:01.882472 27175 solver.cpp:238]     Train net output #0: loss = 0.77008 (* 1 = 0.77008 loss)
I0428 19:51:01.882481 27175 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:01.963239 27175 solver.cpp:219] Iteration 200 (1238.29 iter/s, 0.0807567s/100 iters), loss = 0.480265
I0428 19:51:01.963270 27175 solver.cpp:238]     Train net output #0: loss = 0.480265 (* 1 = 0.480265 loss)
I0428 19:51:01.963279 27175 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:02.043324 27175 solver.cpp:219] Iteration 300 (1249.31 iter/s, 0.080044s/100 iters), loss = 0.224442
I0428 19:51:02.043354 27175 solver.cpp:238]     Train net output #0: loss = 0.224442 (* 1 = 0.224442 loss)
I0428 19:51:02.043361 27175 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:02.123281 27175 solver.cpp:219] Iteration 400 (1251.3 iter/s, 0.0799171s/100 iters), loss = 0.161864
I0428 19:51:02.123311 27175 solver.cpp:238]     Train net output #0: loss = 0.161865 (* 1 = 0.161865 loss)
I0428 19:51:02.123318 27175 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:02.202389 27175 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:02.271703 27182 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:02.272235 27175 solver.cpp:398]     Test net output #0: accuracy = 0.9613
I0428 19:51:02.272258 27175 solver.cpp:398]     Test net output #1: loss = 0.127263 (* 1 = 0.127263 loss)
I0428 19:51:02.273118 27175 solver.cpp:219] Iteration 500 (667.58 iter/s, 0.149795s/100 iters), loss = 0.0783333
I0428 19:51:02.273149 27175 solver.cpp:238]     Train net output #0: loss = 0.0783334 (* 1 = 0.0783334 loss)
I0428 19:51:02.273175 27175 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:02.352135 27175 solver.cpp:219] Iteration 600 (1266.21 iter/s, 0.078976s/100 iters), loss = 0.0955197
I0428 19:51:02.352170 27175 solver.cpp:238]     Train net output #0: loss = 0.0955198 (* 1 = 0.0955198 loss)
I0428 19:51:02.352180 27175 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:02.448199 27175 solver.cpp:219] Iteration 700 (1041.46 iter/s, 0.0960186s/100 iters), loss = 0.180144
I0428 19:51:02.448233 27175 solver.cpp:238]     Train net output #0: loss = 0.180144 (* 1 = 0.180144 loss)
I0428 19:51:02.448242 27175 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:02.528712 27175 solver.cpp:219] Iteration 800 (1242.71 iter/s, 0.080469s/100 iters), loss = 0.241784
I0428 19:51:02.528741 27175 solver.cpp:238]     Train net output #0: loss = 0.241784 (* 1 = 0.241784 loss)
I0428 19:51:02.528748 27175 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:02.608094 27175 solver.cpp:219] Iteration 900 (1260.36 iter/s, 0.0793426s/100 iters), loss = 0.168255
I0428 19:51:02.608124 27175 solver.cpp:238]     Train net output #0: loss = 0.168255 (* 1 = 0.168255 loss)
I0428 19:51:02.608131 27175 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:02.634836 27181 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:02.687162 27175 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:02.688036 27175 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:02.688576 27175 solver.cpp:311] Iteration 1000, loss = 0.173135
I0428 19:51:02.688596 27175 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:02.763532 27182 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:02.764061 27175 solver.cpp:398]     Test net output #0: accuracy = 0.9751
I0428 19:51:02.764088 27175 solver.cpp:398]     Test net output #1: loss = 0.0831935 (* 1 = 0.0831935 loss)
I0428 19:51:02.764094 27175 solver.cpp:316] Optimization Done.
I0428 19:51:02.764097 27175 caffe.cpp:259] Optimization Done.
