I0428 19:55:36.655971 28217 caffe.cpp:218] Using GPUs 0
I0428 19:55:36.692970 28217 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:37.203534 28217 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test736.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:37.203672 28217 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test736.prototxt
I0428 19:55:37.204087 28217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:37.204104 28217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:37.204202 28217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:37.204277 28217 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:37.204377 28217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:37.204401 28217 net.cpp:86] Creating Layer mnist
I0428 19:55:37.204409 28217 net.cpp:382] mnist -> data
I0428 19:55:37.204432 28217 net.cpp:382] mnist -> label
I0428 19:55:37.205533 28217 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:37.207991 28217 net.cpp:124] Setting up mnist
I0428 19:55:37.208009 28217 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:37.208015 28217 net.cpp:131] Top shape: 64 (64)
I0428 19:55:37.208019 28217 net.cpp:139] Memory required for data: 200960
I0428 19:55:37.208026 28217 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:37.208042 28217 net.cpp:86] Creating Layer conv0
I0428 19:55:37.208062 28217 net.cpp:408] conv0 <- data
I0428 19:55:37.208079 28217 net.cpp:382] conv0 -> conv0
I0428 19:55:37.490424 28217 net.cpp:124] Setting up conv0
I0428 19:55:37.490452 28217 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:37.490455 28217 net.cpp:139] Memory required for data: 938240
I0428 19:55:37.490470 28217 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:37.490483 28217 net.cpp:86] Creating Layer pool0
I0428 19:55:37.490486 28217 net.cpp:408] pool0 <- conv0
I0428 19:55:37.490492 28217 net.cpp:382] pool0 -> pool0
I0428 19:55:37.490538 28217 net.cpp:124] Setting up pool0
I0428 19:55:37.490545 28217 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:37.490547 28217 net.cpp:139] Memory required for data: 1122560
I0428 19:55:37.490550 28217 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:37.490559 28217 net.cpp:86] Creating Layer conv1
I0428 19:55:37.490562 28217 net.cpp:408] conv1 <- pool0
I0428 19:55:37.490569 28217 net.cpp:382] conv1 -> conv1
I0428 19:55:37.493502 28217 net.cpp:124] Setting up conv1
I0428 19:55:37.493533 28217 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:37.493537 28217 net.cpp:139] Memory required for data: 2760960
I0428 19:55:37.493546 28217 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:37.493568 28217 net.cpp:86] Creating Layer pool1
I0428 19:55:37.493571 28217 net.cpp:408] pool1 <- conv1
I0428 19:55:37.493577 28217 net.cpp:382] pool1 -> pool1
I0428 19:55:37.493638 28217 net.cpp:124] Setting up pool1
I0428 19:55:37.493643 28217 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:37.493660 28217 net.cpp:139] Memory required for data: 3170560
I0428 19:55:37.493664 28217 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:37.493671 28217 net.cpp:86] Creating Layer ip1
I0428 19:55:37.493674 28217 net.cpp:408] ip1 <- pool1
I0428 19:55:37.493680 28217 net.cpp:382] ip1 -> ip1
I0428 19:55:37.495026 28217 net.cpp:124] Setting up ip1
I0428 19:55:37.495038 28217 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:37.495059 28217 net.cpp:139] Memory required for data: 3183360
I0428 19:55:37.495067 28217 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:37.495074 28217 net.cpp:86] Creating Layer relu1
I0428 19:55:37.495077 28217 net.cpp:408] relu1 <- ip1
I0428 19:55:37.495084 28217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:37.495254 28217 net.cpp:124] Setting up relu1
I0428 19:55:37.495263 28217 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:37.495266 28217 net.cpp:139] Memory required for data: 3196160
I0428 19:55:37.495270 28217 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:37.495275 28217 net.cpp:86] Creating Layer ip2
I0428 19:55:37.495278 28217 net.cpp:408] ip2 <- ip1
I0428 19:55:37.495285 28217 net.cpp:382] ip2 -> ip2
I0428 19:55:37.496248 28217 net.cpp:124] Setting up ip2
I0428 19:55:37.496260 28217 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:37.496263 28217 net.cpp:139] Memory required for data: 3202560
I0428 19:55:37.496269 28217 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:37.496275 28217 net.cpp:86] Creating Layer relu2
I0428 19:55:37.496289 28217 net.cpp:408] relu2 <- ip2
I0428 19:55:37.496295 28217 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:37.497160 28217 net.cpp:124] Setting up relu2
I0428 19:55:37.497174 28217 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:37.497192 28217 net.cpp:139] Memory required for data: 3208960
I0428 19:55:37.497196 28217 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:37.497206 28217 net.cpp:86] Creating Layer ip3
I0428 19:55:37.497210 28217 net.cpp:408] ip3 <- ip2
I0428 19:55:37.497215 28217 net.cpp:382] ip3 -> ip3
I0428 19:55:37.497321 28217 net.cpp:124] Setting up ip3
I0428 19:55:37.497329 28217 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:37.497333 28217 net.cpp:139] Memory required for data: 3211520
I0428 19:55:37.497340 28217 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:37.497362 28217 net.cpp:86] Creating Layer relu3
I0428 19:55:37.497365 28217 net.cpp:408] relu3 <- ip3
I0428 19:55:37.497370 28217 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:37.497539 28217 net.cpp:124] Setting up relu3
I0428 19:55:37.497546 28217 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:37.497550 28217 net.cpp:139] Memory required for data: 3214080
I0428 19:55:37.497552 28217 layer_factory.hpp:77] Creating layer loss
I0428 19:55:37.497558 28217 net.cpp:86] Creating Layer loss
I0428 19:55:37.497561 28217 net.cpp:408] loss <- ip3
I0428 19:55:37.497565 28217 net.cpp:408] loss <- label
I0428 19:55:37.497570 28217 net.cpp:382] loss -> loss
I0428 19:55:37.497588 28217 layer_factory.hpp:77] Creating layer loss
I0428 19:55:37.497862 28217 net.cpp:124] Setting up loss
I0428 19:55:37.497871 28217 net.cpp:131] Top shape: (1)
I0428 19:55:37.497874 28217 net.cpp:134]     with loss weight 1
I0428 19:55:37.497889 28217 net.cpp:139] Memory required for data: 3214084
I0428 19:55:37.497892 28217 net.cpp:200] loss needs backward computation.
I0428 19:55:37.497896 28217 net.cpp:200] relu3 needs backward computation.
I0428 19:55:37.497898 28217 net.cpp:200] ip3 needs backward computation.
I0428 19:55:37.497901 28217 net.cpp:200] relu2 needs backward computation.
I0428 19:55:37.497905 28217 net.cpp:200] ip2 needs backward computation.
I0428 19:55:37.497907 28217 net.cpp:200] relu1 needs backward computation.
I0428 19:55:37.497910 28217 net.cpp:200] ip1 needs backward computation.
I0428 19:55:37.497915 28217 net.cpp:200] pool1 needs backward computation.
I0428 19:55:37.497917 28217 net.cpp:200] conv1 needs backward computation.
I0428 19:55:37.497920 28217 net.cpp:200] pool0 needs backward computation.
I0428 19:55:37.497923 28217 net.cpp:200] conv0 needs backward computation.
I0428 19:55:37.497926 28217 net.cpp:202] mnist does not need backward computation.
I0428 19:55:37.497930 28217 net.cpp:244] This network produces output loss
I0428 19:55:37.497953 28217 net.cpp:257] Network initialization done.
I0428 19:55:37.498342 28217 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test736.prototxt
I0428 19:55:37.498400 28217 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:37.498534 28217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:37.498615 28217 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:37.498659 28217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:37.498670 28217 net.cpp:86] Creating Layer mnist
I0428 19:55:37.498677 28217 net.cpp:382] mnist -> data
I0428 19:55:37.498684 28217 net.cpp:382] mnist -> label
I0428 19:55:37.498769 28217 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:37.500123 28217 net.cpp:124] Setting up mnist
I0428 19:55:37.500136 28217 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:37.500140 28217 net.cpp:131] Top shape: 100 (100)
I0428 19:55:37.500144 28217 net.cpp:139] Memory required for data: 314000
I0428 19:55:37.500147 28217 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:37.500180 28217 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:37.500183 28217 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:37.500200 28217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:37.500206 28217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:37.500263 28217 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:37.500277 28217 net.cpp:131] Top shape: 100 (100)
I0428 19:55:37.500279 28217 net.cpp:131] Top shape: 100 (100)
I0428 19:55:37.500283 28217 net.cpp:139] Memory required for data: 314800
I0428 19:55:37.500285 28217 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:37.500294 28217 net.cpp:86] Creating Layer conv0
I0428 19:55:37.500298 28217 net.cpp:408] conv0 <- data
I0428 19:55:37.500303 28217 net.cpp:382] conv0 -> conv0
I0428 19:55:37.501956 28217 net.cpp:124] Setting up conv0
I0428 19:55:37.501971 28217 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:37.501974 28217 net.cpp:139] Memory required for data: 1466800
I0428 19:55:37.501983 28217 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:37.501988 28217 net.cpp:86] Creating Layer pool0
I0428 19:55:37.501992 28217 net.cpp:408] pool0 <- conv0
I0428 19:55:37.501997 28217 net.cpp:382] pool0 -> pool0
I0428 19:55:37.502032 28217 net.cpp:124] Setting up pool0
I0428 19:55:37.502038 28217 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:37.502040 28217 net.cpp:139] Memory required for data: 1754800
I0428 19:55:37.502043 28217 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:37.502053 28217 net.cpp:86] Creating Layer conv1
I0428 19:55:37.502055 28217 net.cpp:408] conv1 <- pool0
I0428 19:55:37.502060 28217 net.cpp:382] conv1 -> conv1
I0428 19:55:37.503686 28217 net.cpp:124] Setting up conv1
I0428 19:55:37.503700 28217 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:37.503708 28217 net.cpp:139] Memory required for data: 4314800
I0428 19:55:37.503721 28217 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:37.503729 28217 net.cpp:86] Creating Layer pool1
I0428 19:55:37.503733 28217 net.cpp:408] pool1 <- conv1
I0428 19:55:37.503738 28217 net.cpp:382] pool1 -> pool1
I0428 19:55:37.503777 28217 net.cpp:124] Setting up pool1
I0428 19:55:37.503782 28217 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:37.503785 28217 net.cpp:139] Memory required for data: 4954800
I0428 19:55:37.503788 28217 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:37.503794 28217 net.cpp:86] Creating Layer ip1
I0428 19:55:37.503798 28217 net.cpp:408] ip1 <- pool1
I0428 19:55:37.503803 28217 net.cpp:382] ip1 -> ip1
I0428 19:55:37.504361 28217 net.cpp:124] Setting up ip1
I0428 19:55:37.504370 28217 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:37.504384 28217 net.cpp:139] Memory required for data: 4974800
I0428 19:55:37.504391 28217 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:37.504396 28217 net.cpp:86] Creating Layer relu1
I0428 19:55:37.504400 28217 net.cpp:408] relu1 <- ip1
I0428 19:55:37.504406 28217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:37.504588 28217 net.cpp:124] Setting up relu1
I0428 19:55:37.504597 28217 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:37.504614 28217 net.cpp:139] Memory required for data: 4994800
I0428 19:55:37.504617 28217 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:37.504626 28217 net.cpp:86] Creating Layer ip2
I0428 19:55:37.504628 28217 net.cpp:408] ip2 <- ip1
I0428 19:55:37.504633 28217 net.cpp:382] ip2 -> ip2
I0428 19:55:37.504760 28217 net.cpp:124] Setting up ip2
I0428 19:55:37.504767 28217 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:37.504770 28217 net.cpp:139] Memory required for data: 5004800
I0428 19:55:37.504776 28217 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:37.504781 28217 net.cpp:86] Creating Layer relu2
I0428 19:55:37.504782 28217 net.cpp:408] relu2 <- ip2
I0428 19:55:37.504787 28217 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:37.505065 28217 net.cpp:124] Setting up relu2
I0428 19:55:37.505075 28217 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:37.505079 28217 net.cpp:139] Memory required for data: 5014800
I0428 19:55:37.505082 28217 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:37.505089 28217 net.cpp:86] Creating Layer ip3
I0428 19:55:37.505092 28217 net.cpp:408] ip3 <- ip2
I0428 19:55:37.505105 28217 net.cpp:382] ip3 -> ip3
I0428 19:55:37.505230 28217 net.cpp:124] Setting up ip3
I0428 19:55:37.505240 28217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:37.505244 28217 net.cpp:139] Memory required for data: 5018800
I0428 19:55:37.505250 28217 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:37.505254 28217 net.cpp:86] Creating Layer relu3
I0428 19:55:37.505264 28217 net.cpp:408] relu3 <- ip3
I0428 19:55:37.505267 28217 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:37.506129 28217 net.cpp:124] Setting up relu3
I0428 19:55:37.506140 28217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:37.506144 28217 net.cpp:139] Memory required for data: 5022800
I0428 19:55:37.506146 28217 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:37.506152 28217 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:37.506155 28217 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:37.506160 28217 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:37.506167 28217 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:37.506219 28217 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:37.506224 28217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:37.506228 28217 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:37.506230 28217 net.cpp:139] Memory required for data: 5030800
I0428 19:55:37.506233 28217 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:37.506239 28217 net.cpp:86] Creating Layer accuracy
I0428 19:55:37.506242 28217 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:37.506253 28217 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:37.506258 28217 net.cpp:382] accuracy -> accuracy
I0428 19:55:37.506269 28217 net.cpp:124] Setting up accuracy
I0428 19:55:37.506273 28217 net.cpp:131] Top shape: (1)
I0428 19:55:37.506275 28217 net.cpp:139] Memory required for data: 5030804
I0428 19:55:37.506278 28217 layer_factory.hpp:77] Creating layer loss
I0428 19:55:37.506284 28217 net.cpp:86] Creating Layer loss
I0428 19:55:37.506288 28217 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:37.506291 28217 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:37.506295 28217 net.cpp:382] loss -> loss
I0428 19:55:37.506306 28217 layer_factory.hpp:77] Creating layer loss
I0428 19:55:37.506567 28217 net.cpp:124] Setting up loss
I0428 19:55:37.506575 28217 net.cpp:131] Top shape: (1)
I0428 19:55:37.506578 28217 net.cpp:134]     with loss weight 1
I0428 19:55:37.506594 28217 net.cpp:139] Memory required for data: 5030808
I0428 19:55:37.506598 28217 net.cpp:200] loss needs backward computation.
I0428 19:55:37.506603 28217 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:37.506605 28217 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:37.506608 28217 net.cpp:200] relu3 needs backward computation.
I0428 19:55:37.506611 28217 net.cpp:200] ip3 needs backward computation.
I0428 19:55:37.506614 28217 net.cpp:200] relu2 needs backward computation.
I0428 19:55:37.506618 28217 net.cpp:200] ip2 needs backward computation.
I0428 19:55:37.506619 28217 net.cpp:200] relu1 needs backward computation.
I0428 19:55:37.506623 28217 net.cpp:200] ip1 needs backward computation.
I0428 19:55:37.506625 28217 net.cpp:200] pool1 needs backward computation.
I0428 19:55:37.506629 28217 net.cpp:200] conv1 needs backward computation.
I0428 19:55:37.506633 28217 net.cpp:200] pool0 needs backward computation.
I0428 19:55:37.506635 28217 net.cpp:200] conv0 needs backward computation.
I0428 19:55:37.506639 28217 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:37.506642 28217 net.cpp:202] mnist does not need backward computation.
I0428 19:55:37.506645 28217 net.cpp:244] This network produces output accuracy
I0428 19:55:37.506649 28217 net.cpp:244] This network produces output loss
I0428 19:55:37.506659 28217 net.cpp:257] Network initialization done.
I0428 19:55:37.506700 28217 solver.cpp:56] Solver scaffolding done.
I0428 19:55:37.507061 28217 caffe.cpp:248] Starting Optimization
I0428 19:55:37.507068 28217 solver.cpp:273] Solving LeNet
I0428 19:55:37.507071 28217 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:37.507247 28217 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:37.512732 28217 blocking_queue.cpp:49] Waiting for data
I0428 19:55:37.583844 28224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:37.584478 28217 solver.cpp:398]     Test net output #0: accuracy = 0.0661
I0428 19:55:37.584496 28217 solver.cpp:398]     Test net output #1: loss = 2.31431 (* 1 = 2.31431 loss)
I0428 19:55:37.588304 28217 solver.cpp:219] Iteration 0 (-8.26386e-31 iter/s, 0.0812072s/100 iters), loss = 2.32177
I0428 19:55:37.588326 28217 solver.cpp:238]     Train net output #0: loss = 2.32177 (* 1 = 2.32177 loss)
I0428 19:55:37.588352 28217 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:37.738781 28217 solver.cpp:219] Iteration 100 (664.722 iter/s, 0.150439s/100 iters), loss = 0.714072
I0428 19:55:37.738806 28217 solver.cpp:238]     Train net output #0: loss = 0.714072 (* 1 = 0.714072 loss)
I0428 19:55:37.738811 28217 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:37.891788 28217 solver.cpp:219] Iteration 200 (653.735 iter/s, 0.152967s/100 iters), loss = 0.775736
I0428 19:55:37.891811 28217 solver.cpp:238]     Train net output #0: loss = 0.775736 (* 1 = 0.775736 loss)
I0428 19:55:37.891816 28217 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:38.041828 28217 solver.cpp:219] Iteration 300 (666.646 iter/s, 0.150005s/100 iters), loss = 0.539834
I0428 19:55:38.041851 28217 solver.cpp:238]     Train net output #0: loss = 0.539834 (* 1 = 0.539834 loss)
I0428 19:55:38.041857 28217 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:38.193338 28217 solver.cpp:219] Iteration 400 (660.179 iter/s, 0.151474s/100 iters), loss = 0.2485
I0428 19:55:38.193361 28217 solver.cpp:238]     Train net output #0: loss = 0.2485 (* 1 = 0.2485 loss)
I0428 19:55:38.193367 28217 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:38.340582 28217 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:38.394877 28224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:38.396436 28217 solver.cpp:398]     Test net output #0: accuracy = 0.872
I0428 19:55:38.396456 28217 solver.cpp:398]     Test net output #1: loss = 0.335072 (* 1 = 0.335072 loss)
I0428 19:55:38.398010 28217 solver.cpp:219] Iteration 500 (488.677 iter/s, 0.204634s/100 iters), loss = 0.197616
I0428 19:55:38.398046 28217 solver.cpp:238]     Train net output #0: loss = 0.197616 (* 1 = 0.197616 loss)
I0428 19:55:38.398072 28217 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:38.554272 28217 solver.cpp:219] Iteration 600 (640.151 iter/s, 0.156213s/100 iters), loss = 0.219585
I0428 19:55:38.554312 28217 solver.cpp:238]     Train net output #0: loss = 0.219585 (* 1 = 0.219585 loss)
I0428 19:55:38.554318 28217 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:38.703176 28217 solver.cpp:219] Iteration 700 (671.74 iter/s, 0.148867s/100 iters), loss = 0.512965
I0428 19:55:38.703200 28217 solver.cpp:238]     Train net output #0: loss = 0.512965 (* 1 = 0.512965 loss)
I0428 19:55:38.703207 28217 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:38.852067 28217 solver.cpp:219] Iteration 800 (671.8 iter/s, 0.148854s/100 iters), loss = 0.355084
I0428 19:55:38.852093 28217 solver.cpp:238]     Train net output #0: loss = 0.355084 (* 1 = 0.355084 loss)
I0428 19:55:38.852099 28217 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:39.004741 28217 solver.cpp:219] Iteration 900 (655.16 iter/s, 0.152634s/100 iters), loss = 0.138114
I0428 19:55:39.004768 28217 solver.cpp:238]     Train net output #0: loss = 0.138114 (* 1 = 0.138114 loss)
I0428 19:55:39.004775 28217 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:39.053400 28223 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:39.150635 28217 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:39.153179 28217 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:39.154443 28217 solver.cpp:311] Iteration 1000, loss = 0.206735
I0428 19:55:39.154458 28217 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:39.229069 28224 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:39.229676 28217 solver.cpp:398]     Test net output #0: accuracy = 0.9677
I0428 19:55:39.229694 28217 solver.cpp:398]     Test net output #1: loss = 0.105445 (* 1 = 0.105445 loss)
I0428 19:55:39.229698 28217 solver.cpp:316] Optimization Done.
I0428 19:55:39.229702 28217 caffe.cpp:259] Optimization Done.
