I0428 20:04:46.682791 30459 caffe.cpp:218] Using GPUs 0
I0428 20:04:46.718493 30459 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:47.175472 30459 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test981.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:47.175632 30459 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test981.prototxt
I0428 20:04:47.175930 30459 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:47.175945 30459 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:47.176013 30459 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:47.176074 30459 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:47.176153 30459 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:47.176172 30459 net.cpp:86] Creating Layer mnist
I0428 20:04:47.176178 30459 net.cpp:382] mnist -> data
I0428 20:04:47.176196 30459 net.cpp:382] mnist -> label
I0428 20:04:47.177270 30459 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:47.179476 30459 net.cpp:124] Setting up mnist
I0428 20:04:47.179489 30459 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:47.179494 30459 net.cpp:131] Top shape: 64 (64)
I0428 20:04:47.179497 30459 net.cpp:139] Memory required for data: 200960
I0428 20:04:47.179503 30459 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:47.179544 30459 net.cpp:86] Creating Layer conv0
I0428 20:04:47.179549 30459 net.cpp:408] conv0 <- data
I0428 20:04:47.179575 30459 net.cpp:382] conv0 -> conv0
I0428 20:04:47.414315 30459 net.cpp:124] Setting up conv0
I0428 20:04:47.414342 30459 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:47.414346 30459 net.cpp:139] Memory required for data: 3887360
I0428 20:04:47.414396 30459 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:47.414409 30459 net.cpp:86] Creating Layer pool0
I0428 20:04:47.414414 30459 net.cpp:408] pool0 <- conv0
I0428 20:04:47.414419 30459 net.cpp:382] pool0 -> pool0
I0428 20:04:47.414463 30459 net.cpp:124] Setting up pool0
I0428 20:04:47.414469 30459 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:47.414471 30459 net.cpp:139] Memory required for data: 4808960
I0428 20:04:47.414474 30459 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:47.414484 30459 net.cpp:86] Creating Layer conv1
I0428 20:04:47.414487 30459 net.cpp:408] conv1 <- pool0
I0428 20:04:47.414492 30459 net.cpp:382] conv1 -> conv1
I0428 20:04:47.417353 30459 net.cpp:124] Setting up conv1
I0428 20:04:47.417367 30459 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:47.417371 30459 net.cpp:139] Memory required for data: 4841728
I0428 20:04:47.417379 30459 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:47.417387 30459 net.cpp:86] Creating Layer pool1
I0428 20:04:47.417390 30459 net.cpp:408] pool1 <- conv1
I0428 20:04:47.417395 30459 net.cpp:382] pool1 -> pool1
I0428 20:04:47.417429 30459 net.cpp:124] Setting up pool1
I0428 20:04:47.417436 30459 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:47.417439 30459 net.cpp:139] Memory required for data: 4849920
I0428 20:04:47.417443 30459 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:47.417448 30459 net.cpp:86] Creating Layer ip1
I0428 20:04:47.417451 30459 net.cpp:408] ip1 <- pool1
I0428 20:04:47.417456 30459 net.cpp:382] ip1 -> ip1
I0428 20:04:47.417556 30459 net.cpp:124] Setting up ip1
I0428 20:04:47.417562 30459 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:47.417565 30459 net.cpp:139] Memory required for data: 4856320
I0428 20:04:47.417572 30459 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:47.417578 30459 net.cpp:86] Creating Layer relu1
I0428 20:04:47.417582 30459 net.cpp:408] relu1 <- ip1
I0428 20:04:47.417585 30459 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:47.417754 30459 net.cpp:124] Setting up relu1
I0428 20:04:47.417763 30459 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:47.417767 30459 net.cpp:139] Memory required for data: 4862720
I0428 20:04:47.417769 30459 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:47.417776 30459 net.cpp:86] Creating Layer ip2
I0428 20:04:47.417780 30459 net.cpp:408] ip2 <- ip1
I0428 20:04:47.417784 30459 net.cpp:382] ip2 -> ip2
I0428 20:04:47.417877 30459 net.cpp:124] Setting up ip2
I0428 20:04:47.417884 30459 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:47.417887 30459 net.cpp:139] Memory required for data: 4865280
I0428 20:04:47.417892 30459 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:47.417899 30459 net.cpp:86] Creating Layer relu2
I0428 20:04:47.417917 30459 net.cpp:408] relu2 <- ip2
I0428 20:04:47.417922 30459 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:47.418756 30459 net.cpp:124] Setting up relu2
I0428 20:04:47.418767 30459 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:47.418771 30459 net.cpp:139] Memory required for data: 4867840
I0428 20:04:47.418774 30459 layer_factory.hpp:77] Creating layer loss
I0428 20:04:47.418782 30459 net.cpp:86] Creating Layer loss
I0428 20:04:47.418786 30459 net.cpp:408] loss <- ip2
I0428 20:04:47.418789 30459 net.cpp:408] loss <- label
I0428 20:04:47.418794 30459 net.cpp:382] loss -> loss
I0428 20:04:47.418812 30459 layer_factory.hpp:77] Creating layer loss
I0428 20:04:47.419062 30459 net.cpp:124] Setting up loss
I0428 20:04:47.419072 30459 net.cpp:131] Top shape: (1)
I0428 20:04:47.419075 30459 net.cpp:134]     with loss weight 1
I0428 20:04:47.419090 30459 net.cpp:139] Memory required for data: 4867844
I0428 20:04:47.419092 30459 net.cpp:200] loss needs backward computation.
I0428 20:04:47.419096 30459 net.cpp:200] relu2 needs backward computation.
I0428 20:04:47.419100 30459 net.cpp:200] ip2 needs backward computation.
I0428 20:04:47.419101 30459 net.cpp:200] relu1 needs backward computation.
I0428 20:04:47.419104 30459 net.cpp:200] ip1 needs backward computation.
I0428 20:04:47.419116 30459 net.cpp:200] pool1 needs backward computation.
I0428 20:04:47.419121 30459 net.cpp:200] conv1 needs backward computation.
I0428 20:04:47.419123 30459 net.cpp:200] pool0 needs backward computation.
I0428 20:04:47.419126 30459 net.cpp:200] conv0 needs backward computation.
I0428 20:04:47.419129 30459 net.cpp:202] mnist does not need backward computation.
I0428 20:04:47.419132 30459 net.cpp:244] This network produces output loss
I0428 20:04:47.419142 30459 net.cpp:257] Network initialization done.
I0428 20:04:47.419451 30459 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test981.prototxt
I0428 20:04:47.419490 30459 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:47.419605 30459 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:47.419688 30459 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:47.419733 30459 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:47.419750 30459 net.cpp:86] Creating Layer mnist
I0428 20:04:47.419755 30459 net.cpp:382] mnist -> data
I0428 20:04:47.419764 30459 net.cpp:382] mnist -> label
I0428 20:04:47.419872 30459 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:47.421905 30459 net.cpp:124] Setting up mnist
I0428 20:04:47.421918 30459 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:47.421926 30459 net.cpp:131] Top shape: 100 (100)
I0428 20:04:47.421928 30459 net.cpp:139] Memory required for data: 314000
I0428 20:04:47.421932 30459 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:47.421941 30459 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:47.421944 30459 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:47.421949 30459 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:47.421955 30459 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:47.422027 30459 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:47.422044 30459 net.cpp:131] Top shape: 100 (100)
I0428 20:04:47.422049 30459 net.cpp:131] Top shape: 100 (100)
I0428 20:04:47.422051 30459 net.cpp:139] Memory required for data: 314800
I0428 20:04:47.422053 30459 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:47.422063 30459 net.cpp:86] Creating Layer conv0
I0428 20:04:47.422066 30459 net.cpp:408] conv0 <- data
I0428 20:04:47.422072 30459 net.cpp:382] conv0 -> conv0
I0428 20:04:47.423872 30459 net.cpp:124] Setting up conv0
I0428 20:04:47.423885 30459 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:47.423904 30459 net.cpp:139] Memory required for data: 6074800
I0428 20:04:47.423913 30459 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:47.423921 30459 net.cpp:86] Creating Layer pool0
I0428 20:04:47.423924 30459 net.cpp:408] pool0 <- conv0
I0428 20:04:47.423928 30459 net.cpp:382] pool0 -> pool0
I0428 20:04:47.423964 30459 net.cpp:124] Setting up pool0
I0428 20:04:47.423969 30459 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:47.423971 30459 net.cpp:139] Memory required for data: 7514800
I0428 20:04:47.423974 30459 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:47.423985 30459 net.cpp:86] Creating Layer conv1
I0428 20:04:47.423987 30459 net.cpp:408] conv1 <- pool0
I0428 20:04:47.423993 30459 net.cpp:382] conv1 -> conv1
I0428 20:04:47.426331 30459 net.cpp:124] Setting up conv1
I0428 20:04:47.426344 30459 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:47.426347 30459 net.cpp:139] Memory required for data: 7566000
I0428 20:04:47.426357 30459 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:47.426364 30459 net.cpp:86] Creating Layer pool1
I0428 20:04:47.426368 30459 net.cpp:408] pool1 <- conv1
I0428 20:04:47.426373 30459 net.cpp:382] pool1 -> pool1
I0428 20:04:47.426414 30459 net.cpp:124] Setting up pool1
I0428 20:04:47.426421 30459 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:47.426424 30459 net.cpp:139] Memory required for data: 7578800
I0428 20:04:47.426427 30459 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:47.426434 30459 net.cpp:86] Creating Layer ip1
I0428 20:04:47.426436 30459 net.cpp:408] ip1 <- pool1
I0428 20:04:47.426441 30459 net.cpp:382] ip1 -> ip1
I0428 20:04:47.426581 30459 net.cpp:124] Setting up ip1
I0428 20:04:47.426589 30459 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:47.426592 30459 net.cpp:139] Memory required for data: 7588800
I0428 20:04:47.426599 30459 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:47.426604 30459 net.cpp:86] Creating Layer relu1
I0428 20:04:47.426607 30459 net.cpp:408] relu1 <- ip1
I0428 20:04:47.426611 30459 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:47.426836 30459 net.cpp:124] Setting up relu1
I0428 20:04:47.426846 30459 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:47.426849 30459 net.cpp:139] Memory required for data: 7598800
I0428 20:04:47.426853 30459 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:47.426862 30459 net.cpp:86] Creating Layer ip2
I0428 20:04:47.426870 30459 net.cpp:408] ip2 <- ip1
I0428 20:04:47.426877 30459 net.cpp:382] ip2 -> ip2
I0428 20:04:47.426980 30459 net.cpp:124] Setting up ip2
I0428 20:04:47.427002 30459 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:47.427006 30459 net.cpp:139] Memory required for data: 7602800
I0428 20:04:47.427011 30459 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:47.427014 30459 net.cpp:86] Creating Layer relu2
I0428 20:04:47.427017 30459 net.cpp:408] relu2 <- ip2
I0428 20:04:47.427021 30459 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:47.427175 30459 net.cpp:124] Setting up relu2
I0428 20:04:47.427186 30459 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:47.427188 30459 net.cpp:139] Memory required for data: 7606800
I0428 20:04:47.427191 30459 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:04:47.427213 30459 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:04:47.427217 30459 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:04:47.427220 30459 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:04:47.427237 30459 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:04:47.427320 30459 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:04:47.427327 30459 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:47.427332 30459 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:47.427335 30459 net.cpp:139] Memory required for data: 7614800
I0428 20:04:47.427340 30459 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:47.427345 30459 net.cpp:86] Creating Layer accuracy
I0428 20:04:47.427357 30459 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:04:47.427361 30459 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:47.427368 30459 net.cpp:382] accuracy -> accuracy
I0428 20:04:47.427376 30459 net.cpp:124] Setting up accuracy
I0428 20:04:47.427379 30459 net.cpp:131] Top shape: (1)
I0428 20:04:47.427383 30459 net.cpp:139] Memory required for data: 7614804
I0428 20:04:47.427386 30459 layer_factory.hpp:77] Creating layer loss
I0428 20:04:47.427392 30459 net.cpp:86] Creating Layer loss
I0428 20:04:47.427395 30459 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:04:47.427399 30459 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:47.427404 30459 net.cpp:382] loss -> loss
I0428 20:04:47.427410 30459 layer_factory.hpp:77] Creating layer loss
I0428 20:04:47.427691 30459 net.cpp:124] Setting up loss
I0428 20:04:47.427700 30459 net.cpp:131] Top shape: (1)
I0428 20:04:47.427702 30459 net.cpp:134]     with loss weight 1
I0428 20:04:47.427709 30459 net.cpp:139] Memory required for data: 7614808
I0428 20:04:47.427712 30459 net.cpp:200] loss needs backward computation.
I0428 20:04:47.427716 30459 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:47.427719 30459 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:04:47.427722 30459 net.cpp:200] relu2 needs backward computation.
I0428 20:04:47.427726 30459 net.cpp:200] ip2 needs backward computation.
I0428 20:04:47.427727 30459 net.cpp:200] relu1 needs backward computation.
I0428 20:04:47.427731 30459 net.cpp:200] ip1 needs backward computation.
I0428 20:04:47.427733 30459 net.cpp:200] pool1 needs backward computation.
I0428 20:04:47.427736 30459 net.cpp:200] conv1 needs backward computation.
I0428 20:04:47.427739 30459 net.cpp:200] pool0 needs backward computation.
I0428 20:04:47.427742 30459 net.cpp:200] conv0 needs backward computation.
I0428 20:04:47.427747 30459 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:47.427749 30459 net.cpp:202] mnist does not need backward computation.
I0428 20:04:47.427752 30459 net.cpp:244] This network produces output accuracy
I0428 20:04:47.427755 30459 net.cpp:244] This network produces output loss
I0428 20:04:47.427767 30459 net.cpp:257] Network initialization done.
I0428 20:04:47.427832 30459 solver.cpp:56] Solver scaffolding done.
I0428 20:04:47.428093 30459 caffe.cpp:248] Starting Optimization
I0428 20:04:47.428099 30459 solver.cpp:273] Solving LeNet
I0428 20:04:47.428117 30459 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:47.429000 30459 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:47.434016 30459 blocking_queue.cpp:49] Waiting for data
I0428 20:04:47.507525 30466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:47.508108 30459 solver.cpp:398]     Test net output #0: accuracy = 0.0603
I0428 20:04:47.508128 30459 solver.cpp:398]     Test net output #1: loss = 2.34581 (* 1 = 2.34581 loss)
I0428 20:04:47.511229 30459 solver.cpp:219] Iteration 0 (0 iter/s, 0.0830858s/100 iters), loss = 2.33935
I0428 20:04:47.511266 30459 solver.cpp:238]     Train net output #0: loss = 2.33935 (* 1 = 2.33935 loss)
I0428 20:04:47.511276 30459 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:47.590806 30459 solver.cpp:219] Iteration 100 (1257.42 iter/s, 0.0795279s/100 iters), loss = 0.877783
I0428 20:04:47.590844 30459 solver.cpp:238]     Train net output #0: loss = 0.877783 (* 1 = 0.877783 loss)
I0428 20:04:47.590850 30459 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:47.670411 30459 solver.cpp:219] Iteration 200 (1256.71 iter/s, 0.0795728s/100 iters), loss = 0.846116
I0428 20:04:47.670462 30459 solver.cpp:238]     Train net output #0: loss = 0.846116 (* 1 = 0.846116 loss)
I0428 20:04:47.670469 30459 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:47.752919 30459 solver.cpp:219] Iteration 300 (1212.93 iter/s, 0.0824453s/100 iters), loss = 0.882355
I0428 20:04:47.752954 30459 solver.cpp:238]     Train net output #0: loss = 0.882355 (* 1 = 0.882355 loss)
I0428 20:04:47.752962 30459 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:47.836088 30459 solver.cpp:219] Iteration 400 (1202.98 iter/s, 0.0831271s/100 iters), loss = 1.14297
I0428 20:04:47.836113 30459 solver.cpp:238]     Train net output #0: loss = 1.14297 (* 1 = 1.14297 loss)
I0428 20:04:47.836120 30459 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:47.913827 30459 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:47.967928 30466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:47.968493 30459 solver.cpp:398]     Test net output #0: accuracy = 0.7469
I0428 20:04:47.968528 30459 solver.cpp:398]     Test net output #1: loss = 0.862383 (* 1 = 0.862383 loss)
I0428 20:04:47.969355 30459 solver.cpp:219] Iteration 500 (750.59 iter/s, 0.133229s/100 iters), loss = 0.877202
I0428 20:04:47.969379 30459 solver.cpp:238]     Train net output #0: loss = 0.877202 (* 1 = 0.877202 loss)
I0428 20:04:47.969401 30459 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:48.048799 30459 solver.cpp:219] Iteration 600 (1259.29 iter/s, 0.0794099s/100 iters), loss = 0.625075
I0428 20:04:48.048844 30459 solver.cpp:238]     Train net output #0: loss = 0.625075 (* 1 = 0.625075 loss)
I0428 20:04:48.048851 30459 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:48.128021 30459 solver.cpp:219] Iteration 700 (1263.14 iter/s, 0.0791675s/100 iters), loss = 0.911873
I0428 20:04:48.128059 30459 solver.cpp:238]     Train net output #0: loss = 0.911873 (* 1 = 0.911873 loss)
I0428 20:04:48.128065 30459 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:48.206539 30459 solver.cpp:219] Iteration 800 (1274.11 iter/s, 0.0784863s/100 iters), loss = 0.811513
I0428 20:04:48.206576 30459 solver.cpp:238]     Train net output #0: loss = 0.811513 (* 1 = 0.811513 loss)
I0428 20:04:48.206583 30459 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:48.285293 30459 solver.cpp:219] Iteration 900 (1270.28 iter/s, 0.0787231s/100 iters), loss = 0.755682
I0428 20:04:48.285315 30459 solver.cpp:238]     Train net output #0: loss = 0.755682 (* 1 = 0.755682 loss)
I0428 20:04:48.285321 30459 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:48.311317 30465 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:48.362702 30459 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:48.363390 30459 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:48.363955 30459 solver.cpp:311] Iteration 1000, loss = 0.851214
I0428 20:04:48.363984 30459 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:48.417470 30466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:48.418051 30459 solver.cpp:398]     Test net output #0: accuracy = 0.7624
I0428 20:04:48.418069 30459 solver.cpp:398]     Test net output #1: loss = 0.819584 (* 1 = 0.819584 loss)
I0428 20:04:48.418092 30459 solver.cpp:316] Optimization Done.
I0428 20:04:48.418094 30459 caffe.cpp:259] Optimization Done.
