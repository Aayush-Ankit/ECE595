I0428 19:59:04.480244 29153 caffe.cpp:218] Using GPUs 0
I0428 19:59:04.512262 29153 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:05.022325 29153 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test837.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:05.022467 29153 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test837.prototxt
I0428 19:59:05.022868 29153 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:05.022887 29153 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:05.022982 29153 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:05.023056 29153 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:05.023156 29153 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:05.023180 29153 net.cpp:86] Creating Layer mnist
I0428 19:59:05.023187 29153 net.cpp:382] mnist -> data
I0428 19:59:05.023211 29153 net.cpp:382] mnist -> label
I0428 19:59:05.024294 29153 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:05.026747 29153 net.cpp:124] Setting up mnist
I0428 19:59:05.026764 29153 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:05.026770 29153 net.cpp:131] Top shape: 64 (64)
I0428 19:59:05.026774 29153 net.cpp:139] Memory required for data: 200960
I0428 19:59:05.026782 29153 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:05.026798 29153 net.cpp:86] Creating Layer conv0
I0428 19:59:05.026819 29153 net.cpp:408] conv0 <- data
I0428 19:59:05.026831 29153 net.cpp:382] conv0 -> conv0
I0428 19:59:05.316129 29153 net.cpp:124] Setting up conv0
I0428 19:59:05.316157 29153 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:05.316162 29153 net.cpp:139] Memory required for data: 1675520
I0428 19:59:05.316177 29153 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:05.316190 29153 net.cpp:86] Creating Layer pool0
I0428 19:59:05.316195 29153 net.cpp:408] pool0 <- conv0
I0428 19:59:05.316200 29153 net.cpp:382] pool0 -> pool0
I0428 19:59:05.316249 29153 net.cpp:124] Setting up pool0
I0428 19:59:05.316256 29153 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:05.316258 29153 net.cpp:139] Memory required for data: 2044160
I0428 19:59:05.316262 29153 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:05.316273 29153 net.cpp:86] Creating Layer conv1
I0428 19:59:05.316277 29153 net.cpp:408] conv1 <- pool0
I0428 19:59:05.316282 29153 net.cpp:382] conv1 -> conv1
I0428 19:59:05.319063 29153 net.cpp:124] Setting up conv1
I0428 19:59:05.319079 29153 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:05.319083 29153 net.cpp:139] Memory required for data: 2208000
I0428 19:59:05.319092 29153 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:05.319099 29153 net.cpp:86] Creating Layer pool1
I0428 19:59:05.319103 29153 net.cpp:408] pool1 <- conv1
I0428 19:59:05.319108 29153 net.cpp:382] pool1 -> pool1
I0428 19:59:05.319149 29153 net.cpp:124] Setting up pool1
I0428 19:59:05.319154 29153 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:05.319157 29153 net.cpp:139] Memory required for data: 2248960
I0428 19:59:05.319160 29153 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:05.319167 29153 net.cpp:86] Creating Layer ip1
I0428 19:59:05.319170 29153 net.cpp:408] ip1 <- pool1
I0428 19:59:05.319175 29153 net.cpp:382] ip1 -> ip1
I0428 19:59:05.319288 29153 net.cpp:124] Setting up ip1
I0428 19:59:05.319296 29153 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:05.319299 29153 net.cpp:139] Memory required for data: 2251520
I0428 19:59:05.319306 29153 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:05.319313 29153 net.cpp:86] Creating Layer relu1
I0428 19:59:05.319315 29153 net.cpp:408] relu1 <- ip1
I0428 19:59:05.319320 29153 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:05.319494 29153 net.cpp:124] Setting up relu1
I0428 19:59:05.319504 29153 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:05.319506 29153 net.cpp:139] Memory required for data: 2254080
I0428 19:59:05.319510 29153 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:05.319516 29153 net.cpp:86] Creating Layer ip2
I0428 19:59:05.319519 29153 net.cpp:408] ip2 <- ip1
I0428 19:59:05.319525 29153 net.cpp:382] ip2 -> ip2
I0428 19:59:05.319629 29153 net.cpp:124] Setting up ip2
I0428 19:59:05.319636 29153 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:05.319639 29153 net.cpp:139] Memory required for data: 2266880
I0428 19:59:05.319645 29153 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:05.319651 29153 net.cpp:86] Creating Layer relu2
I0428 19:59:05.319654 29153 net.cpp:408] relu2 <- ip2
I0428 19:59:05.319658 29153 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:05.320408 29153 net.cpp:124] Setting up relu2
I0428 19:59:05.320421 29153 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:05.320425 29153 net.cpp:139] Memory required for data: 2279680
I0428 19:59:05.320430 29153 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:05.320436 29153 net.cpp:86] Creating Layer ip3
I0428 19:59:05.320439 29153 net.cpp:408] ip3 <- ip2
I0428 19:59:05.320446 29153 net.cpp:382] ip3 -> ip3
I0428 19:59:05.320554 29153 net.cpp:124] Setting up ip3
I0428 19:59:05.320561 29153 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:05.320564 29153 net.cpp:139] Memory required for data: 2282240
I0428 19:59:05.320572 29153 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:05.320577 29153 net.cpp:86] Creating Layer relu3
I0428 19:59:05.320580 29153 net.cpp:408] relu3 <- ip3
I0428 19:59:05.320585 29153 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:05.320761 29153 net.cpp:124] Setting up relu3
I0428 19:59:05.320770 29153 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:05.320775 29153 net.cpp:139] Memory required for data: 2284800
I0428 19:59:05.320777 29153 layer_factory.hpp:77] Creating layer loss
I0428 19:59:05.320783 29153 net.cpp:86] Creating Layer loss
I0428 19:59:05.320786 29153 net.cpp:408] loss <- ip3
I0428 19:59:05.320791 29153 net.cpp:408] loss <- label
I0428 19:59:05.320796 29153 net.cpp:382] loss -> loss
I0428 19:59:05.320822 29153 layer_factory.hpp:77] Creating layer loss
I0428 19:59:05.321089 29153 net.cpp:124] Setting up loss
I0428 19:59:05.321099 29153 net.cpp:131] Top shape: (1)
I0428 19:59:05.321101 29153 net.cpp:134]     with loss weight 1
I0428 19:59:05.321115 29153 net.cpp:139] Memory required for data: 2284804
I0428 19:59:05.321120 29153 net.cpp:200] loss needs backward computation.
I0428 19:59:05.321123 29153 net.cpp:200] relu3 needs backward computation.
I0428 19:59:05.321126 29153 net.cpp:200] ip3 needs backward computation.
I0428 19:59:05.321130 29153 net.cpp:200] relu2 needs backward computation.
I0428 19:59:05.321133 29153 net.cpp:200] ip2 needs backward computation.
I0428 19:59:05.321136 29153 net.cpp:200] relu1 needs backward computation.
I0428 19:59:05.321140 29153 net.cpp:200] ip1 needs backward computation.
I0428 19:59:05.321142 29153 net.cpp:200] pool1 needs backward computation.
I0428 19:59:05.321146 29153 net.cpp:200] conv1 needs backward computation.
I0428 19:59:05.321149 29153 net.cpp:200] pool0 needs backward computation.
I0428 19:59:05.321152 29153 net.cpp:200] conv0 needs backward computation.
I0428 19:59:05.321156 29153 net.cpp:202] mnist does not need backward computation.
I0428 19:59:05.321159 29153 net.cpp:244] This network produces output loss
I0428 19:59:05.321168 29153 net.cpp:257] Network initialization done.
I0428 19:59:05.321507 29153 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test837.prototxt
I0428 19:59:05.321535 29153 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:05.321629 29153 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:05.321713 29153 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:05.321759 29153 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:05.321772 29153 net.cpp:86] Creating Layer mnist
I0428 19:59:05.321777 29153 net.cpp:382] mnist -> data
I0428 19:59:05.321785 29153 net.cpp:382] mnist -> label
I0428 19:59:05.321874 29153 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:05.324040 29153 net.cpp:124] Setting up mnist
I0428 19:59:05.324054 29153 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:05.324059 29153 net.cpp:131] Top shape: 100 (100)
I0428 19:59:05.324064 29153 net.cpp:139] Memory required for data: 314000
I0428 19:59:05.324067 29153 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:05.324074 29153 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:05.324077 29153 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:05.324082 29153 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:05.324091 29153 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:05.324131 29153 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:05.324136 29153 net.cpp:131] Top shape: 100 (100)
I0428 19:59:05.324141 29153 net.cpp:131] Top shape: 100 (100)
I0428 19:59:05.324143 29153 net.cpp:139] Memory required for data: 314800
I0428 19:59:05.324146 29153 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:05.324156 29153 net.cpp:86] Creating Layer conv0
I0428 19:59:05.324158 29153 net.cpp:408] conv0 <- data
I0428 19:59:05.324163 29153 net.cpp:382] conv0 -> conv0
I0428 19:59:05.325883 29153 net.cpp:124] Setting up conv0
I0428 19:59:05.325897 29153 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:05.325901 29153 net.cpp:139] Memory required for data: 2618800
I0428 19:59:05.325911 29153 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:05.325917 29153 net.cpp:86] Creating Layer pool0
I0428 19:59:05.325920 29153 net.cpp:408] pool0 <- conv0
I0428 19:59:05.325925 29153 net.cpp:382] pool0 -> pool0
I0428 19:59:05.325960 29153 net.cpp:124] Setting up pool0
I0428 19:59:05.325965 29153 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:05.325968 29153 net.cpp:139] Memory required for data: 3194800
I0428 19:59:05.325971 29153 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:05.325979 29153 net.cpp:86] Creating Layer conv1
I0428 19:59:05.325983 29153 net.cpp:408] conv1 <- pool0
I0428 19:59:05.325987 29153 net.cpp:382] conv1 -> conv1
I0428 19:59:05.328014 29153 net.cpp:124] Setting up conv1
I0428 19:59:05.328028 29153 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:05.328032 29153 net.cpp:139] Memory required for data: 3450800
I0428 19:59:05.328040 29153 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:05.328048 29153 net.cpp:86] Creating Layer pool1
I0428 19:59:05.328052 29153 net.cpp:408] pool1 <- conv1
I0428 19:59:05.328057 29153 net.cpp:382] pool1 -> pool1
I0428 19:59:05.328099 29153 net.cpp:124] Setting up pool1
I0428 19:59:05.328105 29153 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:05.328107 29153 net.cpp:139] Memory required for data: 3514800
I0428 19:59:05.328110 29153 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:05.328116 29153 net.cpp:86] Creating Layer ip1
I0428 19:59:05.328120 29153 net.cpp:408] ip1 <- pool1
I0428 19:59:05.328125 29153 net.cpp:382] ip1 -> ip1
I0428 19:59:05.328246 29153 net.cpp:124] Setting up ip1
I0428 19:59:05.328253 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.328266 29153 net.cpp:139] Memory required for data: 3518800
I0428 19:59:05.328274 29153 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:05.328279 29153 net.cpp:86] Creating Layer relu1
I0428 19:59:05.328282 29153 net.cpp:408] relu1 <- ip1
I0428 19:59:05.328286 29153 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:05.328461 29153 net.cpp:124] Setting up relu1
I0428 19:59:05.328470 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.328474 29153 net.cpp:139] Memory required for data: 3522800
I0428 19:59:05.328476 29153 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:05.328483 29153 net.cpp:86] Creating Layer ip2
I0428 19:59:05.328486 29153 net.cpp:408] ip2 <- ip1
I0428 19:59:05.328491 29153 net.cpp:382] ip2 -> ip2
I0428 19:59:05.328594 29153 net.cpp:124] Setting up ip2
I0428 19:59:05.328601 29153 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:05.328604 29153 net.cpp:139] Memory required for data: 3542800
I0428 19:59:05.328610 29153 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:05.328614 29153 net.cpp:86] Creating Layer relu2
I0428 19:59:05.328619 29153 net.cpp:408] relu2 <- ip2
I0428 19:59:05.328621 29153 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:05.328773 29153 net.cpp:124] Setting up relu2
I0428 19:59:05.328780 29153 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:05.328784 29153 net.cpp:139] Memory required for data: 3562800
I0428 19:59:05.328788 29153 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:05.328794 29153 net.cpp:86] Creating Layer ip3
I0428 19:59:05.328796 29153 net.cpp:408] ip3 <- ip2
I0428 19:59:05.328806 29153 net.cpp:382] ip3 -> ip3
I0428 19:59:05.328915 29153 net.cpp:124] Setting up ip3
I0428 19:59:05.328922 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.328927 29153 net.cpp:139] Memory required for data: 3566800
I0428 19:59:05.328934 29153 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:05.328938 29153 net.cpp:86] Creating Layer relu3
I0428 19:59:05.328941 29153 net.cpp:408] relu3 <- ip3
I0428 19:59:05.328953 29153 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:05.329848 29153 net.cpp:124] Setting up relu3
I0428 19:59:05.329859 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.329862 29153 net.cpp:139] Memory required for data: 3570800
I0428 19:59:05.329866 29153 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:05.329871 29153 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:05.329874 29153 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:05.329879 29153 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:05.329885 29153 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:05.329926 29153 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:05.329931 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.329936 29153 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:05.329937 29153 net.cpp:139] Memory required for data: 3578800
I0428 19:59:05.329941 29153 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:05.329952 29153 net.cpp:86] Creating Layer accuracy
I0428 19:59:05.329954 29153 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:05.329958 29153 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:05.329962 29153 net.cpp:382] accuracy -> accuracy
I0428 19:59:05.329970 29153 net.cpp:124] Setting up accuracy
I0428 19:59:05.329974 29153 net.cpp:131] Top shape: (1)
I0428 19:59:05.329977 29153 net.cpp:139] Memory required for data: 3578804
I0428 19:59:05.329980 29153 layer_factory.hpp:77] Creating layer loss
I0428 19:59:05.329984 29153 net.cpp:86] Creating Layer loss
I0428 19:59:05.329988 29153 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:05.329993 29153 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:05.329996 29153 net.cpp:382] loss -> loss
I0428 19:59:05.330001 29153 layer_factory.hpp:77] Creating layer loss
I0428 19:59:05.330232 29153 net.cpp:124] Setting up loss
I0428 19:59:05.330242 29153 net.cpp:131] Top shape: (1)
I0428 19:59:05.330245 29153 net.cpp:134]     with loss weight 1
I0428 19:59:05.330262 29153 net.cpp:139] Memory required for data: 3578808
I0428 19:59:05.330266 29153 net.cpp:200] loss needs backward computation.
I0428 19:59:05.330269 29153 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:05.330274 29153 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:05.330277 29153 net.cpp:200] relu3 needs backward computation.
I0428 19:59:05.330279 29153 net.cpp:200] ip3 needs backward computation.
I0428 19:59:05.330289 29153 net.cpp:200] relu2 needs backward computation.
I0428 19:59:05.330296 29153 net.cpp:200] ip2 needs backward computation.
I0428 19:59:05.330299 29153 net.cpp:200] relu1 needs backward computation.
I0428 19:59:05.330303 29153 net.cpp:200] ip1 needs backward computation.
I0428 19:59:05.330307 29153 net.cpp:200] pool1 needs backward computation.
I0428 19:59:05.330309 29153 net.cpp:200] conv1 needs backward computation.
I0428 19:59:05.330312 29153 net.cpp:200] pool0 needs backward computation.
I0428 19:59:05.330317 29153 net.cpp:200] conv0 needs backward computation.
I0428 19:59:05.330320 29153 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:05.330324 29153 net.cpp:202] mnist does not need backward computation.
I0428 19:59:05.330327 29153 net.cpp:244] This network produces output accuracy
I0428 19:59:05.330329 29153 net.cpp:244] This network produces output loss
I0428 19:59:05.330340 29153 net.cpp:257] Network initialization done.
I0428 19:59:05.330382 29153 solver.cpp:56] Solver scaffolding done.
I0428 19:59:05.330775 29153 caffe.cpp:248] Starting Optimization
I0428 19:59:05.330781 29153 solver.cpp:273] Solving LeNet
I0428 19:59:05.330785 29153 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:05.331662 29153 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:05.335238 29153 blocking_queue.cpp:49] Waiting for data
I0428 19:59:05.399415 29160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:05.400357 29153 solver.cpp:398]     Test net output #0: accuracy = 0.1205
I0428 19:59:05.400409 29153 solver.cpp:398]     Test net output #1: loss = 2.3419 (* 1 = 2.3419 loss)
I0428 19:59:05.404657 29153 solver.cpp:219] Iteration 0 (-6.38853e-31 iter/s, 0.0738222s/100 iters), loss = 2.32725
I0428 19:59:05.404716 29153 solver.cpp:238]     Train net output #0: loss = 2.32725 (* 1 = 2.32725 loss)
I0428 19:59:05.404737 29153 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:05.497480 29153 solver.cpp:219] Iteration 100 (1078.09 iter/s, 0.092757s/100 iters), loss = 1.15453
I0428 19:59:05.497514 29153 solver.cpp:238]     Train net output #0: loss = 1.15453 (* 1 = 1.15453 loss)
I0428 19:59:05.497524 29153 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:05.579871 29153 solver.cpp:219] Iteration 200 (1214.37 iter/s, 0.0823471s/100 iters), loss = 0.418536
I0428 19:59:05.579903 29153 solver.cpp:238]     Train net output #0: loss = 0.418536 (* 1 = 0.418536 loss)
I0428 19:59:05.579910 29153 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:05.661399 29153 solver.cpp:219] Iteration 300 (1227.19 iter/s, 0.0814868s/100 iters), loss = 0.447755
I0428 19:59:05.661430 29153 solver.cpp:238]     Train net output #0: loss = 0.447755 (* 1 = 0.447755 loss)
I0428 19:59:05.661437 29153 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:05.742887 29153 solver.cpp:219] Iteration 400 (1227.76 iter/s, 0.081449s/100 iters), loss = 0.319402
I0428 19:59:05.742918 29153 solver.cpp:238]     Train net output #0: loss = 0.319402 (* 1 = 0.319402 loss)
I0428 19:59:05.742925 29153 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:05.823591 29153 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:05.890115 29160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:05.890657 29153 solver.cpp:398]     Test net output #0: accuracy = 0.8502
I0428 19:59:05.890681 29153 solver.cpp:398]     Test net output #1: loss = 0.406964 (* 1 = 0.406964 loss)
I0428 19:59:05.891551 29153 solver.cpp:219] Iteration 500 (672.879 iter/s, 0.148615s/100 iters), loss = 0.260134
I0428 19:59:05.891602 29153 solver.cpp:238]     Train net output #0: loss = 0.260134 (* 1 = 0.260134 loss)
I0428 19:59:05.891609 29153 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:05.975471 29153 solver.cpp:219] Iteration 600 (1192.52 iter/s, 0.0838564s/100 iters), loss = 0.464827
I0428 19:59:05.975502 29153 solver.cpp:238]     Train net output #0: loss = 0.464827 (* 1 = 0.464827 loss)
I0428 19:59:05.975510 29153 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:06.057819 29153 solver.cpp:219] Iteration 700 (1214.93 iter/s, 0.082309s/100 iters), loss = 0.547579
I0428 19:59:06.057850 29153 solver.cpp:238]     Train net output #0: loss = 0.547579 (* 1 = 0.547579 loss)
I0428 19:59:06.057858 29153 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:06.150794 29153 solver.cpp:219] Iteration 800 (1076.08 iter/s, 0.0929301s/100 iters), loss = 0.650334
I0428 19:59:06.150843 29153 solver.cpp:238]     Train net output #0: loss = 0.650334 (* 1 = 0.650334 loss)
I0428 19:59:06.150856 29153 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:06.240303 29153 solver.cpp:219] Iteration 900 (1117.91 iter/s, 0.0894525s/100 iters), loss = 0.518494
I0428 19:59:06.240335 29153 solver.cpp:238]     Train net output #0: loss = 0.518494 (* 1 = 0.518494 loss)
I0428 19:59:06.240342 29153 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:06.267962 29159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:06.321813 29153 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:06.322616 29153 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:06.323099 29153 solver.cpp:311] Iteration 1000, loss = 0.404738
I0428 19:59:06.323118 29153 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:06.376665 29160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:06.377195 29153 solver.cpp:398]     Test net output #0: accuracy = 0.8703
I0428 19:59:06.377220 29153 solver.cpp:398]     Test net output #1: loss = 0.33748 (* 1 = 0.33748 loss)
I0428 19:59:06.377226 29153 solver.cpp:316] Optimization Done.
I0428 19:59:06.377230 29153 caffe.cpp:259] Optimization Done.
