I0428 20:00:28.414458 29485 caffe.cpp:218] Using GPUs 0
I0428 20:00:28.450285 29485 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:28.905750 29485 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test877.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:28.905902 29485 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test877.prototxt
I0428 20:00:28.906253 29485 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:28.906298 29485 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:28.906399 29485 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:28.906464 29485 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:28.906558 29485 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:28.906577 29485 net.cpp:86] Creating Layer mnist
I0428 20:00:28.906584 29485 net.cpp:382] mnist -> data
I0428 20:00:28.906602 29485 net.cpp:382] mnist -> label
I0428 20:00:28.907522 29485 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:28.909682 29485 net.cpp:124] Setting up mnist
I0428 20:00:28.909726 29485 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:28.909747 29485 net.cpp:131] Top shape: 64 (64)
I0428 20:00:28.909750 29485 net.cpp:139] Memory required for data: 200960
I0428 20:00:28.909756 29485 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:28.909770 29485 net.cpp:86] Creating Layer conv0
I0428 20:00:28.909787 29485 net.cpp:408] conv0 <- data
I0428 20:00:28.909797 29485 net.cpp:382] conv0 -> conv0
I0428 20:00:29.141494 29485 net.cpp:124] Setting up conv0
I0428 20:00:29.141536 29485 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:29.141541 29485 net.cpp:139] Memory required for data: 1675520
I0428 20:00:29.141556 29485 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:29.141567 29485 net.cpp:86] Creating Layer pool0
I0428 20:00:29.141571 29485 net.cpp:408] pool0 <- conv0
I0428 20:00:29.141592 29485 net.cpp:382] pool0 -> pool0
I0428 20:00:29.141636 29485 net.cpp:124] Setting up pool0
I0428 20:00:29.141643 29485 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:29.141660 29485 net.cpp:139] Memory required for data: 2044160
I0428 20:00:29.141664 29485 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:29.141674 29485 net.cpp:86] Creating Layer conv1
I0428 20:00:29.141677 29485 net.cpp:408] conv1 <- pool0
I0428 20:00:29.141681 29485 net.cpp:382] conv1 -> conv1
I0428 20:00:29.144522 29485 net.cpp:124] Setting up conv1
I0428 20:00:29.144553 29485 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:29.144557 29485 net.cpp:139] Memory required for data: 2453760
I0428 20:00:29.144580 29485 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:29.144588 29485 net.cpp:86] Creating Layer pool1
I0428 20:00:29.144592 29485 net.cpp:408] pool1 <- conv1
I0428 20:00:29.144596 29485 net.cpp:382] pool1 -> pool1
I0428 20:00:29.144649 29485 net.cpp:124] Setting up pool1
I0428 20:00:29.144654 29485 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:29.144657 29485 net.cpp:139] Memory required for data: 2556160
I0428 20:00:29.144660 29485 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:29.144667 29485 net.cpp:86] Creating Layer ip1
I0428 20:00:29.144670 29485 net.cpp:408] ip1 <- pool1
I0428 20:00:29.144675 29485 net.cpp:382] ip1 -> ip1
I0428 20:00:29.145673 29485 net.cpp:124] Setting up ip1
I0428 20:00:29.145700 29485 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:29.145720 29485 net.cpp:139] Memory required for data: 2558720
I0428 20:00:29.145728 29485 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:29.145735 29485 net.cpp:86] Creating Layer relu1
I0428 20:00:29.145740 29485 net.cpp:408] relu1 <- ip1
I0428 20:00:29.145745 29485 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:29.145910 29485 net.cpp:124] Setting up relu1
I0428 20:00:29.145920 29485 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:29.145923 29485 net.cpp:139] Memory required for data: 2561280
I0428 20:00:29.145926 29485 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:29.145933 29485 net.cpp:86] Creating Layer ip2
I0428 20:00:29.145936 29485 net.cpp:408] ip2 <- ip1
I0428 20:00:29.145941 29485 net.cpp:382] ip2 -> ip2
I0428 20:00:29.146049 29485 net.cpp:124] Setting up ip2
I0428 20:00:29.146056 29485 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:29.146059 29485 net.cpp:139] Memory required for data: 2574080
I0428 20:00:29.146065 29485 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:29.146070 29485 net.cpp:86] Creating Layer relu2
I0428 20:00:29.146073 29485 net.cpp:408] relu2 <- ip2
I0428 20:00:29.146077 29485 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:29.146931 29485 net.cpp:124] Setting up relu2
I0428 20:00:29.146945 29485 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:29.146948 29485 net.cpp:139] Memory required for data: 2586880
I0428 20:00:29.146952 29485 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:29.146960 29485 net.cpp:86] Creating Layer ip3
I0428 20:00:29.146963 29485 net.cpp:408] ip3 <- ip2
I0428 20:00:29.146970 29485 net.cpp:382] ip3 -> ip3
I0428 20:00:29.147069 29485 net.cpp:124] Setting up ip3
I0428 20:00:29.147078 29485 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:29.147081 29485 net.cpp:139] Memory required for data: 2589440
I0428 20:00:29.147089 29485 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:29.147094 29485 net.cpp:86] Creating Layer relu3
I0428 20:00:29.147097 29485 net.cpp:408] relu3 <- ip3
I0428 20:00:29.147101 29485 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:29.147265 29485 net.cpp:124] Setting up relu3
I0428 20:00:29.147274 29485 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:29.147277 29485 net.cpp:139] Memory required for data: 2592000
I0428 20:00:29.147280 29485 layer_factory.hpp:77] Creating layer loss
I0428 20:00:29.147286 29485 net.cpp:86] Creating Layer loss
I0428 20:00:29.147289 29485 net.cpp:408] loss <- ip3
I0428 20:00:29.147294 29485 net.cpp:408] loss <- label
I0428 20:00:29.147299 29485 net.cpp:382] loss -> loss
I0428 20:00:29.147316 29485 layer_factory.hpp:77] Creating layer loss
I0428 20:00:29.147553 29485 net.cpp:124] Setting up loss
I0428 20:00:29.147577 29485 net.cpp:131] Top shape: (1)
I0428 20:00:29.147580 29485 net.cpp:134]     with loss weight 1
I0428 20:00:29.147596 29485 net.cpp:139] Memory required for data: 2592004
I0428 20:00:29.147599 29485 net.cpp:200] loss needs backward computation.
I0428 20:00:29.147603 29485 net.cpp:200] relu3 needs backward computation.
I0428 20:00:29.147606 29485 net.cpp:200] ip3 needs backward computation.
I0428 20:00:29.147609 29485 net.cpp:200] relu2 needs backward computation.
I0428 20:00:29.147613 29485 net.cpp:200] ip2 needs backward computation.
I0428 20:00:29.147615 29485 net.cpp:200] relu1 needs backward computation.
I0428 20:00:29.147619 29485 net.cpp:200] ip1 needs backward computation.
I0428 20:00:29.147621 29485 net.cpp:200] pool1 needs backward computation.
I0428 20:00:29.147624 29485 net.cpp:200] conv1 needs backward computation.
I0428 20:00:29.147627 29485 net.cpp:200] pool0 needs backward computation.
I0428 20:00:29.147630 29485 net.cpp:200] conv0 needs backward computation.
I0428 20:00:29.147634 29485 net.cpp:202] mnist does not need backward computation.
I0428 20:00:29.147636 29485 net.cpp:244] This network produces output loss
I0428 20:00:29.147646 29485 net.cpp:257] Network initialization done.
I0428 20:00:29.148015 29485 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test877.prototxt
I0428 20:00:29.148072 29485 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:29.148160 29485 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:29.148237 29485 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:29.148283 29485 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:29.148294 29485 net.cpp:86] Creating Layer mnist
I0428 20:00:29.148299 29485 net.cpp:382] mnist -> data
I0428 20:00:29.148322 29485 net.cpp:382] mnist -> label
I0428 20:00:29.148404 29485 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:29.150516 29485 net.cpp:124] Setting up mnist
I0428 20:00:29.150559 29485 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:29.150580 29485 net.cpp:131] Top shape: 100 (100)
I0428 20:00:29.150584 29485 net.cpp:139] Memory required for data: 314000
I0428 20:00:29.150588 29485 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:29.150609 29485 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:29.150614 29485 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:29.150619 29485 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:29.150626 29485 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:29.150671 29485 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:29.150676 29485 net.cpp:131] Top shape: 100 (100)
I0428 20:00:29.150681 29485 net.cpp:131] Top shape: 100 (100)
I0428 20:00:29.150683 29485 net.cpp:139] Memory required for data: 314800
I0428 20:00:29.150686 29485 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:29.150696 29485 net.cpp:86] Creating Layer conv0
I0428 20:00:29.150698 29485 net.cpp:408] conv0 <- data
I0428 20:00:29.150703 29485 net.cpp:382] conv0 -> conv0
I0428 20:00:29.152361 29485 net.cpp:124] Setting up conv0
I0428 20:00:29.152375 29485 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:29.152395 29485 net.cpp:139] Memory required for data: 2618800
I0428 20:00:29.152403 29485 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:29.152410 29485 net.cpp:86] Creating Layer pool0
I0428 20:00:29.152413 29485 net.cpp:408] pool0 <- conv0
I0428 20:00:29.152418 29485 net.cpp:382] pool0 -> pool0
I0428 20:00:29.152451 29485 net.cpp:124] Setting up pool0
I0428 20:00:29.152457 29485 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:29.152460 29485 net.cpp:139] Memory required for data: 3194800
I0428 20:00:29.152463 29485 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:29.152472 29485 net.cpp:86] Creating Layer conv1
I0428 20:00:29.152474 29485 net.cpp:408] conv1 <- pool0
I0428 20:00:29.152479 29485 net.cpp:382] conv1 -> conv1
I0428 20:00:29.154763 29485 net.cpp:124] Setting up conv1
I0428 20:00:29.154778 29485 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:29.154783 29485 net.cpp:139] Memory required for data: 3834800
I0428 20:00:29.154793 29485 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:29.154814 29485 net.cpp:86] Creating Layer pool1
I0428 20:00:29.154819 29485 net.cpp:408] pool1 <- conv1
I0428 20:00:29.154824 29485 net.cpp:382] pool1 -> pool1
I0428 20:00:29.154860 29485 net.cpp:124] Setting up pool1
I0428 20:00:29.154866 29485 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:29.154870 29485 net.cpp:139] Memory required for data: 3994800
I0428 20:00:29.154873 29485 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:29.154880 29485 net.cpp:86] Creating Layer ip1
I0428 20:00:29.154882 29485 net.cpp:408] ip1 <- pool1
I0428 20:00:29.154887 29485 net.cpp:382] ip1 -> ip1
I0428 20:00:29.155055 29485 net.cpp:124] Setting up ip1
I0428 20:00:29.155063 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.155077 29485 net.cpp:139] Memory required for data: 3998800
I0428 20:00:29.155086 29485 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:29.155091 29485 net.cpp:86] Creating Layer relu1
I0428 20:00:29.155093 29485 net.cpp:408] relu1 <- ip1
I0428 20:00:29.155098 29485 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:29.155269 29485 net.cpp:124] Setting up relu1
I0428 20:00:29.155278 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.155282 29485 net.cpp:139] Memory required for data: 4002800
I0428 20:00:29.155285 29485 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:29.155298 29485 net.cpp:86] Creating Layer ip2
I0428 20:00:29.155302 29485 net.cpp:408] ip2 <- ip1
I0428 20:00:29.155308 29485 net.cpp:382] ip2 -> ip2
I0428 20:00:29.155400 29485 net.cpp:124] Setting up ip2
I0428 20:00:29.155407 29485 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:29.155411 29485 net.cpp:139] Memory required for data: 4022800
I0428 20:00:29.155416 29485 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:29.155421 29485 net.cpp:86] Creating Layer relu2
I0428 20:00:29.155423 29485 net.cpp:408] relu2 <- ip2
I0428 20:00:29.155427 29485 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:29.155565 29485 net.cpp:124] Setting up relu2
I0428 20:00:29.155573 29485 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:29.155576 29485 net.cpp:139] Memory required for data: 4042800
I0428 20:00:29.155580 29485 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:29.155586 29485 net.cpp:86] Creating Layer ip3
I0428 20:00:29.155589 29485 net.cpp:408] ip3 <- ip2
I0428 20:00:29.155593 29485 net.cpp:382] ip3 -> ip3
I0428 20:00:29.155684 29485 net.cpp:124] Setting up ip3
I0428 20:00:29.155692 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.155695 29485 net.cpp:139] Memory required for data: 4046800
I0428 20:00:29.155702 29485 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:29.155707 29485 net.cpp:86] Creating Layer relu3
I0428 20:00:29.155710 29485 net.cpp:408] relu3 <- ip3
I0428 20:00:29.155714 29485 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:29.156700 29485 net.cpp:124] Setting up relu3
I0428 20:00:29.156713 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.156733 29485 net.cpp:139] Memory required for data: 4050800
I0428 20:00:29.156736 29485 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:29.156741 29485 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:29.156746 29485 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:29.156751 29485 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:29.156759 29485 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:29.156796 29485 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:29.156802 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.156807 29485 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:29.156832 29485 net.cpp:139] Memory required for data: 4058800
I0428 20:00:29.156836 29485 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:29.156841 29485 net.cpp:86] Creating Layer accuracy
I0428 20:00:29.156844 29485 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:29.156850 29485 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:29.156872 29485 net.cpp:382] accuracy -> accuracy
I0428 20:00:29.156882 29485 net.cpp:124] Setting up accuracy
I0428 20:00:29.156885 29485 net.cpp:131] Top shape: (1)
I0428 20:00:29.156888 29485 net.cpp:139] Memory required for data: 4058804
I0428 20:00:29.156893 29485 layer_factory.hpp:77] Creating layer loss
I0428 20:00:29.156896 29485 net.cpp:86] Creating Layer loss
I0428 20:00:29.156900 29485 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:29.156904 29485 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:29.156908 29485 net.cpp:382] loss -> loss
I0428 20:00:29.156914 29485 layer_factory.hpp:77] Creating layer loss
I0428 20:00:29.157167 29485 net.cpp:124] Setting up loss
I0428 20:00:29.157177 29485 net.cpp:131] Top shape: (1)
I0428 20:00:29.157181 29485 net.cpp:134]     with loss weight 1
I0428 20:00:29.157200 29485 net.cpp:139] Memory required for data: 4058808
I0428 20:00:29.157204 29485 net.cpp:200] loss needs backward computation.
I0428 20:00:29.157208 29485 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:29.157212 29485 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:29.157215 29485 net.cpp:200] relu3 needs backward computation.
I0428 20:00:29.157224 29485 net.cpp:200] ip3 needs backward computation.
I0428 20:00:29.157227 29485 net.cpp:200] relu2 needs backward computation.
I0428 20:00:29.157230 29485 net.cpp:200] ip2 needs backward computation.
I0428 20:00:29.157233 29485 net.cpp:200] relu1 needs backward computation.
I0428 20:00:29.157236 29485 net.cpp:200] ip1 needs backward computation.
I0428 20:00:29.157239 29485 net.cpp:200] pool1 needs backward computation.
I0428 20:00:29.157243 29485 net.cpp:200] conv1 needs backward computation.
I0428 20:00:29.157250 29485 net.cpp:200] pool0 needs backward computation.
I0428 20:00:29.157253 29485 net.cpp:200] conv0 needs backward computation.
I0428 20:00:29.157258 29485 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:29.157261 29485 net.cpp:202] mnist does not need backward computation.
I0428 20:00:29.157264 29485 net.cpp:244] This network produces output accuracy
I0428 20:00:29.157268 29485 net.cpp:244] This network produces output loss
I0428 20:00:29.157279 29485 net.cpp:257] Network initialization done.
I0428 20:00:29.157341 29485 solver.cpp:56] Solver scaffolding done.
I0428 20:00:29.157735 29485 caffe.cpp:248] Starting Optimization
I0428 20:00:29.157742 29485 solver.cpp:273] Solving LeNet
I0428 20:00:29.157744 29485 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:29.158610 29485 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:29.162251 29485 blocking_queue.cpp:49] Waiting for data
I0428 20:00:29.229369 29492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:29.229941 29485 solver.cpp:398]     Test net output #0: accuracy = 0.0667
I0428 20:00:29.229975 29485 solver.cpp:398]     Test net output #1: loss = 2.32889 (* 1 = 2.32889 loss)
I0428 20:00:29.232475 29485 solver.cpp:219] Iteration 0 (-1.08949e-30 iter/s, 0.0746865s/100 iters), loss = 2.34737
I0428 20:00:29.232513 29485 solver.cpp:238]     Train net output #0: loss = 2.34737 (* 1 = 2.34737 loss)
I0428 20:00:29.232539 29485 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:29.327343 29485 solver.cpp:219] Iteration 100 (1054.46 iter/s, 0.0948356s/100 iters), loss = 0.442694
I0428 20:00:29.327368 29485 solver.cpp:238]     Train net output #0: loss = 0.442694 (* 1 = 0.442694 loss)
I0428 20:00:29.327374 29485 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:29.421337 29485 solver.cpp:219] Iteration 200 (1064.29 iter/s, 0.0939592s/100 iters), loss = 0.372584
I0428 20:00:29.421362 29485 solver.cpp:238]     Train net output #0: loss = 0.372584 (* 1 = 0.372584 loss)
I0428 20:00:29.421385 29485 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:29.508888 29485 solver.cpp:219] Iteration 300 (1142.65 iter/s, 0.0875162s/100 iters), loss = 0.504243
I0428 20:00:29.508913 29485 solver.cpp:238]     Train net output #0: loss = 0.504243 (* 1 = 0.504243 loss)
I0428 20:00:29.508934 29485 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:29.596355 29485 solver.cpp:219] Iteration 400 (1143.73 iter/s, 0.0874332s/100 iters), loss = 0.368872
I0428 20:00:29.596377 29485 solver.cpp:238]     Train net output #0: loss = 0.368872 (* 1 = 0.368872 loss)
I0428 20:00:29.596400 29485 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:29.682699 29485 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:29.759147 29492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:29.759685 29485 solver.cpp:398]     Test net output #0: accuracy = 0.8715
I0428 20:00:29.759738 29485 solver.cpp:398]     Test net output #1: loss = 0.346787 (* 1 = 0.346787 loss)
I0428 20:00:29.760663 29485 solver.cpp:219] Iteration 500 (608.75 iter/s, 0.164271s/100 iters), loss = 0.323094
I0428 20:00:29.760720 29485 solver.cpp:238]     Train net output #0: loss = 0.323094 (* 1 = 0.323094 loss)
I0428 20:00:29.760727 29485 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:29.851368 29485 solver.cpp:219] Iteration 600 (1103.24 iter/s, 0.0906422s/100 iters), loss = 0.415107
I0428 20:00:29.851408 29485 solver.cpp:238]     Train net output #0: loss = 0.415107 (* 1 = 0.415107 loss)
I0428 20:00:29.851414 29485 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:29.938566 29485 solver.cpp:219] Iteration 700 (1147.25 iter/s, 0.0871649s/100 iters), loss = 0.441229
I0428 20:00:29.938607 29485 solver.cpp:238]     Train net output #0: loss = 0.441229 (* 1 = 0.441229 loss)
I0428 20:00:29.938613 29485 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:30.025264 29485 solver.cpp:219] Iteration 800 (1153.89 iter/s, 0.0866633s/100 iters), loss = 0.575123
I0428 20:00:30.025303 29485 solver.cpp:238]     Train net output #0: loss = 0.575123 (* 1 = 0.575123 loss)
I0428 20:00:30.025310 29485 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:30.111668 29485 solver.cpp:219] Iteration 900 (1157.79 iter/s, 0.0863713s/100 iters), loss = 0.5191
I0428 20:00:30.111708 29485 solver.cpp:238]     Train net output #0: loss = 0.5191 (* 1 = 0.5191 loss)
I0428 20:00:30.111716 29485 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:30.140897 29491 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:30.197463 29485 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:30.198302 29485 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:30.198854 29485 solver.cpp:311] Iteration 1000, loss = 0.44548
I0428 20:00:30.198870 29485 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:30.273711 29492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:30.274353 29485 solver.cpp:398]     Test net output #0: accuracy = 0.8717
I0428 20:00:30.274384 29485 solver.cpp:398]     Test net output #1: loss = 0.336989 (* 1 = 0.336989 loss)
I0428 20:00:30.274392 29485 solver.cpp:316] Optimization Done.
I0428 20:00:30.274397 29485 caffe.cpp:259] Optimization Done.
