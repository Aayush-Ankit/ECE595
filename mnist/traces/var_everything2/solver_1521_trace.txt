I0428 20:29:23.460072  3525 caffe.cpp:218] Using GPUs 0
I0428 20:29:23.501376  3525 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:24.007030  3525 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1521.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:24.007139  3525 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1521.prototxt
I0428 20:29:24.007400  3525 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:24.007411  3525 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:24.007472  3525 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:24.007524  3525 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:24.007604  3525 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:24.007639  3525 net.cpp:86] Creating Layer mnist
I0428 20:29:24.007645  3525 net.cpp:382] mnist -> data
I0428 20:29:24.007664  3525 net.cpp:382] mnist -> label
I0428 20:29:24.008560  3525 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:24.010659  3525 net.cpp:124] Setting up mnist
I0428 20:29:24.010689  3525 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:24.010695  3525 net.cpp:131] Top shape: 64 (64)
I0428 20:29:24.010699  3525 net.cpp:139] Memory required for data: 200960
I0428 20:29:24.010704  3525 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:24.010731  3525 net.cpp:86] Creating Layer conv0
I0428 20:29:24.010736  3525 net.cpp:408] conv0 <- data
I0428 20:29:24.010746  3525 net.cpp:382] conv0 -> conv0
I0428 20:29:24.252341  3525 net.cpp:124] Setting up conv0
I0428 20:29:24.252384  3525 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:24.252388  3525 net.cpp:139] Memory required for data: 14946560
I0428 20:29:24.252404  3525 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:24.252416  3525 net.cpp:86] Creating Layer pool0
I0428 20:29:24.252420  3525 net.cpp:408] pool0 <- conv0
I0428 20:29:24.252425  3525 net.cpp:382] pool0 -> pool0
I0428 20:29:24.252488  3525 net.cpp:124] Setting up pool0
I0428 20:29:24.252495  3525 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:24.252512  3525 net.cpp:139] Memory required for data: 18632960
I0428 20:29:24.252516  3525 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:24.252527  3525 net.cpp:86] Creating Layer conv1
I0428 20:29:24.252532  3525 net.cpp:408] conv1 <- pool0
I0428 20:29:24.252537  3525 net.cpp:382] conv1 -> conv1
I0428 20:29:24.254600  3525 net.cpp:124] Setting up conv1
I0428 20:29:24.254631  3525 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:24.254634  3525 net.cpp:139] Memory required for data: 18796800
I0428 20:29:24.254643  3525 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:24.254652  3525 net.cpp:86] Creating Layer pool1
I0428 20:29:24.254654  3525 net.cpp:408] pool1 <- conv1
I0428 20:29:24.254660  3525 net.cpp:382] pool1 -> pool1
I0428 20:29:24.254714  3525 net.cpp:124] Setting up pool1
I0428 20:29:24.254719  3525 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:24.254722  3525 net.cpp:139] Memory required for data: 18837760
I0428 20:29:24.254725  3525 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:24.254734  3525 net.cpp:86] Creating Layer ip1
I0428 20:29:24.254736  3525 net.cpp:408] ip1 <- pool1
I0428 20:29:24.254741  3525 net.cpp:382] ip1 -> ip1
I0428 20:29:24.254865  3525 net.cpp:124] Setting up ip1
I0428 20:29:24.254874  3525 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:24.254878  3525 net.cpp:139] Memory required for data: 18840320
I0428 20:29:24.254885  3525 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:24.254890  3525 net.cpp:86] Creating Layer relu1
I0428 20:29:24.254901  3525 net.cpp:408] relu1 <- ip1
I0428 20:29:24.254905  3525 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:24.255084  3525 net.cpp:124] Setting up relu1
I0428 20:29:24.255094  3525 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:24.255096  3525 net.cpp:139] Memory required for data: 18842880
I0428 20:29:24.255100  3525 layer_factory.hpp:77] Creating layer loss
I0428 20:29:24.255105  3525 net.cpp:86] Creating Layer loss
I0428 20:29:24.255110  3525 net.cpp:408] loss <- ip1
I0428 20:29:24.255113  3525 net.cpp:408] loss <- label
I0428 20:29:24.255118  3525 net.cpp:382] loss -> loss
I0428 20:29:24.255132  3525 layer_factory.hpp:77] Creating layer loss
I0428 20:29:24.256016  3525 net.cpp:124] Setting up loss
I0428 20:29:24.256028  3525 net.cpp:131] Top shape: (1)
I0428 20:29:24.256032  3525 net.cpp:134]     with loss weight 1
I0428 20:29:24.256047  3525 net.cpp:139] Memory required for data: 18842884
I0428 20:29:24.256050  3525 net.cpp:200] loss needs backward computation.
I0428 20:29:24.256054  3525 net.cpp:200] relu1 needs backward computation.
I0428 20:29:24.256058  3525 net.cpp:200] ip1 needs backward computation.
I0428 20:29:24.256062  3525 net.cpp:200] pool1 needs backward computation.
I0428 20:29:24.256065  3525 net.cpp:200] conv1 needs backward computation.
I0428 20:29:24.256068  3525 net.cpp:200] pool0 needs backward computation.
I0428 20:29:24.256072  3525 net.cpp:200] conv0 needs backward computation.
I0428 20:29:24.256075  3525 net.cpp:202] mnist does not need backward computation.
I0428 20:29:24.256078  3525 net.cpp:244] This network produces output loss
I0428 20:29:24.256086  3525 net.cpp:257] Network initialization done.
I0428 20:29:24.256386  3525 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1521.prototxt
I0428 20:29:24.256412  3525 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:24.256487  3525 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:24.256563  3525 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:24.256608  3525 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:24.256621  3525 net.cpp:86] Creating Layer mnist
I0428 20:29:24.256625  3525 net.cpp:382] mnist -> data
I0428 20:29:24.256634  3525 net.cpp:382] mnist -> label
I0428 20:29:24.256721  3525 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:24.258911  3525 net.cpp:124] Setting up mnist
I0428 20:29:24.258941  3525 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:24.258947  3525 net.cpp:131] Top shape: 100 (100)
I0428 20:29:24.258951  3525 net.cpp:139] Memory required for data: 314000
I0428 20:29:24.258955  3525 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:24.258962  3525 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:24.258965  3525 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:24.258970  3525 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:24.258977  3525 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:24.259029  3525 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:24.259035  3525 net.cpp:131] Top shape: 100 (100)
I0428 20:29:24.259039  3525 net.cpp:131] Top shape: 100 (100)
I0428 20:29:24.259042  3525 net.cpp:139] Memory required for data: 314800
I0428 20:29:24.259045  3525 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:24.259054  3525 net.cpp:86] Creating Layer conv0
I0428 20:29:24.259057  3525 net.cpp:408] conv0 <- data
I0428 20:29:24.259063  3525 net.cpp:382] conv0 -> conv0
I0428 20:29:24.260056  3525 net.cpp:124] Setting up conv0
I0428 20:29:24.260069  3525 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:24.260073  3525 net.cpp:139] Memory required for data: 23354800
I0428 20:29:24.260082  3525 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:24.260104  3525 net.cpp:86] Creating Layer pool0
I0428 20:29:24.260108  3525 net.cpp:408] pool0 <- conv0
I0428 20:29:24.260113  3525 net.cpp:382] pool0 -> pool0
I0428 20:29:24.260150  3525 net.cpp:124] Setting up pool0
I0428 20:29:24.260155  3525 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:24.260159  3525 net.cpp:139] Memory required for data: 29114800
I0428 20:29:24.260162  3525 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:24.260170  3525 net.cpp:86] Creating Layer conv1
I0428 20:29:24.260174  3525 net.cpp:408] conv1 <- pool0
I0428 20:29:24.260193  3525 net.cpp:382] conv1 -> conv1
I0428 20:29:24.261898  3525 net.cpp:124] Setting up conv1
I0428 20:29:24.261911  3525 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:24.261915  3525 net.cpp:139] Memory required for data: 29370800
I0428 20:29:24.261931  3525 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:24.261945  3525 net.cpp:86] Creating Layer pool1
I0428 20:29:24.261958  3525 net.cpp:408] pool1 <- conv1
I0428 20:29:24.261965  3525 net.cpp:382] pool1 -> pool1
I0428 20:29:24.262001  3525 net.cpp:124] Setting up pool1
I0428 20:29:24.262007  3525 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:24.262011  3525 net.cpp:139] Memory required for data: 29434800
I0428 20:29:24.262019  3525 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:24.262025  3525 net.cpp:86] Creating Layer ip1
I0428 20:29:24.262029  3525 net.cpp:408] ip1 <- pool1
I0428 20:29:24.262034  3525 net.cpp:382] ip1 -> ip1
I0428 20:29:24.262157  3525 net.cpp:124] Setting up ip1
I0428 20:29:24.262166  3525 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:24.262169  3525 net.cpp:139] Memory required for data: 29438800
I0428 20:29:24.262177  3525 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:24.262182  3525 net.cpp:86] Creating Layer relu1
I0428 20:29:24.262193  3525 net.cpp:408] relu1 <- ip1
I0428 20:29:24.262197  3525 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:24.263017  3525 net.cpp:124] Setting up relu1
I0428 20:29:24.263031  3525 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:24.263034  3525 net.cpp:139] Memory required for data: 29442800
I0428 20:29:24.263037  3525 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:29:24.263046  3525 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:29:24.263048  3525 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:29:24.263053  3525 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:29:24.263061  3525 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:29:24.263154  3525 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:29:24.263161  3525 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:24.263166  3525 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:24.263170  3525 net.cpp:139] Memory required for data: 29450800
I0428 20:29:24.263172  3525 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:24.263185  3525 net.cpp:86] Creating Layer accuracy
I0428 20:29:24.263188  3525 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:29:24.263192  3525 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:24.263203  3525 net.cpp:382] accuracy -> accuracy
I0428 20:29:24.263211  3525 net.cpp:124] Setting up accuracy
I0428 20:29:24.263216  3525 net.cpp:131] Top shape: (1)
I0428 20:29:24.263218  3525 net.cpp:139] Memory required for data: 29450804
I0428 20:29:24.263221  3525 layer_factory.hpp:77] Creating layer loss
I0428 20:29:24.263226  3525 net.cpp:86] Creating Layer loss
I0428 20:29:24.263229  3525 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:29:24.263233  3525 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:24.263244  3525 net.cpp:382] loss -> loss
I0428 20:29:24.263250  3525 layer_factory.hpp:77] Creating layer loss
I0428 20:29:24.263483  3525 net.cpp:124] Setting up loss
I0428 20:29:24.263491  3525 net.cpp:131] Top shape: (1)
I0428 20:29:24.263495  3525 net.cpp:134]     with loss weight 1
I0428 20:29:24.263501  3525 net.cpp:139] Memory required for data: 29450808
I0428 20:29:24.263506  3525 net.cpp:200] loss needs backward computation.
I0428 20:29:24.263510  3525 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:24.263514  3525 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:29:24.263525  3525 net.cpp:200] relu1 needs backward computation.
I0428 20:29:24.263528  3525 net.cpp:200] ip1 needs backward computation.
I0428 20:29:24.263532  3525 net.cpp:200] pool1 needs backward computation.
I0428 20:29:24.263535  3525 net.cpp:200] conv1 needs backward computation.
I0428 20:29:24.263540  3525 net.cpp:200] pool0 needs backward computation.
I0428 20:29:24.263543  3525 net.cpp:200] conv0 needs backward computation.
I0428 20:29:24.263547  3525 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:24.263551  3525 net.cpp:202] mnist does not need backward computation.
I0428 20:29:24.263555  3525 net.cpp:244] This network produces output accuracy
I0428 20:29:24.263564  3525 net.cpp:244] This network produces output loss
I0428 20:29:24.263584  3525 net.cpp:257] Network initialization done.
I0428 20:29:24.263625  3525 solver.cpp:56] Solver scaffolding done.
I0428 20:29:24.263852  3525 caffe.cpp:248] Starting Optimization
I0428 20:29:24.263859  3525 solver.cpp:273] Solving LeNet
I0428 20:29:24.263864  3525 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:24.263980  3525 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:24.356566  3532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:24.357933  3525 solver.cpp:398]     Test net output #0: accuracy = 0.0972
I0428 20:29:24.357954  3525 solver.cpp:398]     Test net output #1: loss = 2.31668 (* 1 = 2.31668 loss)
I0428 20:29:24.363776  3525 solver.cpp:219] Iteration 0 (0 iter/s, 0.099888s/100 iters), loss = 2.35305
I0428 20:29:24.363801  3525 solver.cpp:238]     Train net output #0: loss = 2.35305 (* 1 = 2.35305 loss)
I0428 20:29:24.363827  3525 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:24.552271  3525 solver.cpp:219] Iteration 100 (530.639 iter/s, 0.188452s/100 iters), loss = 0.809548
I0428 20:29:24.552310  3525 solver.cpp:238]     Train net output #0: loss = 0.809548 (* 1 = 0.809548 loss)
I0428 20:29:24.552319  3525 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:24.741772  3525 solver.cpp:219] Iteration 200 (527.849 iter/s, 0.189448s/100 iters), loss = 0.355811
I0428 20:29:24.741816  3525 solver.cpp:238]     Train net output #0: loss = 0.355811 (* 1 = 0.355811 loss)
I0428 20:29:24.741823  3525 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:24.930435  3525 solver.cpp:219] Iteration 300 (530.207 iter/s, 0.188605s/100 iters), loss = 0.202784
I0428 20:29:24.930462  3525 solver.cpp:238]     Train net output #0: loss = 0.202784 (* 1 = 0.202784 loss)
I0428 20:29:24.930469  3525 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:25.119827  3525 solver.cpp:219] Iteration 400 (528.126 iter/s, 0.189349s/100 iters), loss = 0.0524046
I0428 20:29:25.119863  3525 solver.cpp:238]     Train net output #0: loss = 0.0524045 (* 1 = 0.0524045 loss)
I0428 20:29:25.119871  3525 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:25.316682  3525 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:25.418485  3532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:25.420712  3525 solver.cpp:398]     Test net output #0: accuracy = 0.9623
I0428 20:29:25.420744  3525 solver.cpp:398]     Test net output #1: loss = 0.126931 (* 1 = 0.126931 loss)
I0428 20:29:25.422617  3525 solver.cpp:219] Iteration 500 (330.32 iter/s, 0.302736s/100 iters), loss = 0.14842
I0428 20:29:25.422649  3525 solver.cpp:238]     Train net output #0: loss = 0.14842 (* 1 = 0.14842 loss)
I0428 20:29:25.422659  3525 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:25.621822  3525 solver.cpp:219] Iteration 600 (502.115 iter/s, 0.199158s/100 iters), loss = 0.0644308
I0428 20:29:25.621867  3525 solver.cpp:238]     Train net output #0: loss = 0.0644308 (* 1 = 0.0644308 loss)
I0428 20:29:25.621878  3525 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:25.820838  3525 solver.cpp:219] Iteration 700 (502.62 iter/s, 0.198957s/100 iters), loss = 0.145176
I0428 20:29:25.820871  3525 solver.cpp:238]     Train net output #0: loss = 0.145176 (* 1 = 0.145176 loss)
I0428 20:29:25.820880  3525 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:26.016414  3525 solver.cpp:219] Iteration 800 (511.447 iter/s, 0.195524s/100 iters), loss = 0.21426
I0428 20:29:26.016464  3525 solver.cpp:238]     Train net output #0: loss = 0.21426 (* 1 = 0.21426 loss)
I0428 20:29:26.016477  3525 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:26.215760  3525 solver.cpp:219] Iteration 900 (501.808 iter/s, 0.19928s/100 iters), loss = 0.166487
I0428 20:29:26.215809  3525 solver.cpp:238]     Train net output #0: loss = 0.166487 (* 1 = 0.166487 loss)
I0428 20:29:26.215822  3525 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:26.282050  3531 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:26.418627  3525 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:26.420728  3525 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:26.422139  3525 solver.cpp:311] Iteration 1000, loss = 0.0895374
I0428 20:29:26.422170  3525 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:26.516180  3532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:26.518585  3525 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0428 20:29:26.518610  3525 solver.cpp:398]     Test net output #1: loss = 0.0802916 (* 1 = 0.0802916 loss)
I0428 20:29:26.518616  3525 solver.cpp:316] Optimization Done.
I0428 20:29:26.518622  3525 caffe.cpp:259] Optimization Done.
