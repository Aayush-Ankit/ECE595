I0428 20:23:07.729559  2191 caffe.cpp:218] Using GPUs 0
I0428 20:23:07.768106  2191 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:08.282152  2191 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1416.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:08.282300  2191 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1416.prototxt
I0428 20:23:08.282737  2191 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:08.282757  2191 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:08.282866  2191 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:08.282946  2191 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:08.283047  2191 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:08.283073  2191 net.cpp:86] Creating Layer mnist
I0428 20:23:08.283084  2191 net.cpp:382] mnist -> data
I0428 20:23:08.283109  2191 net.cpp:382] mnist -> label
I0428 20:23:08.284206  2191 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:08.286689  2191 net.cpp:124] Setting up mnist
I0428 20:23:08.286708  2191 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:08.286715  2191 net.cpp:131] Top shape: 64 (64)
I0428 20:23:08.286718  2191 net.cpp:139] Memory required for data: 200960
I0428 20:23:08.286725  2191 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:08.286743  2191 net.cpp:86] Creating Layer conv0
I0428 20:23:08.286764  2191 net.cpp:408] conv0 <- data
I0428 20:23:08.286777  2191 net.cpp:382] conv0 -> conv0
I0428 20:23:08.576632  2191 net.cpp:124] Setting up conv0
I0428 20:23:08.576659  2191 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:08.576664  2191 net.cpp:139] Memory required for data: 7573760
I0428 20:23:08.576680  2191 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:08.576694  2191 net.cpp:86] Creating Layer pool0
I0428 20:23:08.576697  2191 net.cpp:408] pool0 <- conv0
I0428 20:23:08.576704  2191 net.cpp:382] pool0 -> pool0
I0428 20:23:08.576756  2191 net.cpp:124] Setting up pool0
I0428 20:23:08.576764  2191 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:08.576767  2191 net.cpp:139] Memory required for data: 9416960
I0428 20:23:08.576771  2191 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:08.576782  2191 net.cpp:86] Creating Layer conv1
I0428 20:23:08.576787  2191 net.cpp:408] conv1 <- pool0
I0428 20:23:08.576793  2191 net.cpp:382] conv1 -> conv1
I0428 20:23:08.580381  2191 net.cpp:124] Setting up conv1
I0428 20:23:08.580397  2191 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:08.580401  2191 net.cpp:139] Memory required for data: 11055360
I0428 20:23:08.580411  2191 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:08.580420  2191 net.cpp:86] Creating Layer pool1
I0428 20:23:08.580423  2191 net.cpp:408] pool1 <- conv1
I0428 20:23:08.580430  2191 net.cpp:382] pool1 -> pool1
I0428 20:23:08.580468  2191 net.cpp:124] Setting up pool1
I0428 20:23:08.580482  2191 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:08.580485  2191 net.cpp:139] Memory required for data: 11464960
I0428 20:23:08.580488  2191 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:08.580497  2191 net.cpp:86] Creating Layer ip1
I0428 20:23:08.580502  2191 net.cpp:408] ip1 <- pool1
I0428 20:23:08.580505  2191 net.cpp:382] ip1 -> ip1
I0428 20:23:08.581595  2191 net.cpp:124] Setting up ip1
I0428 20:23:08.581609  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.581611  2191 net.cpp:139] Memory required for data: 11467520
I0428 20:23:08.581622  2191 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:08.581629  2191 net.cpp:86] Creating Layer relu1
I0428 20:23:08.581632  2191 net.cpp:408] relu1 <- ip1
I0428 20:23:08.581637  2191 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:08.581818  2191 net.cpp:124] Setting up relu1
I0428 20:23:08.581827  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.581830  2191 net.cpp:139] Memory required for data: 11470080
I0428 20:23:08.581833  2191 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:08.581842  2191 net.cpp:86] Creating Layer ip2
I0428 20:23:08.581845  2191 net.cpp:408] ip2 <- ip1
I0428 20:23:08.581851  2191 net.cpp:382] ip2 -> ip2
I0428 20:23:08.581954  2191 net.cpp:124] Setting up ip2
I0428 20:23:08.581961  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.581964  2191 net.cpp:139] Memory required for data: 11472640
I0428 20:23:08.581970  2191 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:08.581976  2191 net.cpp:86] Creating Layer relu2
I0428 20:23:08.581979  2191 net.cpp:408] relu2 <- ip2
I0428 20:23:08.581984  2191 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:08.582731  2191 net.cpp:124] Setting up relu2
I0428 20:23:08.582743  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.582746  2191 net.cpp:139] Memory required for data: 11475200
I0428 20:23:08.582751  2191 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:08.582759  2191 net.cpp:86] Creating Layer ip3
I0428 20:23:08.582762  2191 net.cpp:408] ip3 <- ip2
I0428 20:23:08.582768  2191 net.cpp:382] ip3 -> ip3
I0428 20:23:08.582875  2191 net.cpp:124] Setting up ip3
I0428 20:23:08.582882  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.582885  2191 net.cpp:139] Memory required for data: 11477760
I0428 20:23:08.582893  2191 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:08.582898  2191 net.cpp:86] Creating Layer relu3
I0428 20:23:08.582901  2191 net.cpp:408] relu3 <- ip3
I0428 20:23:08.582906  2191 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:08.583086  2191 net.cpp:124] Setting up relu3
I0428 20:23:08.583094  2191 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:08.583098  2191 net.cpp:139] Memory required for data: 11480320
I0428 20:23:08.583101  2191 layer_factory.hpp:77] Creating layer loss
I0428 20:23:08.583106  2191 net.cpp:86] Creating Layer loss
I0428 20:23:08.583109  2191 net.cpp:408] loss <- ip3
I0428 20:23:08.583114  2191 net.cpp:408] loss <- label
I0428 20:23:08.583120  2191 net.cpp:382] loss -> loss
I0428 20:23:08.583137  2191 layer_factory.hpp:77] Creating layer loss
I0428 20:23:08.583381  2191 net.cpp:124] Setting up loss
I0428 20:23:08.583390  2191 net.cpp:131] Top shape: (1)
I0428 20:23:08.583394  2191 net.cpp:134]     with loss weight 1
I0428 20:23:08.583407  2191 net.cpp:139] Memory required for data: 11480324
I0428 20:23:08.583410  2191 net.cpp:200] loss needs backward computation.
I0428 20:23:08.583415  2191 net.cpp:200] relu3 needs backward computation.
I0428 20:23:08.583417  2191 net.cpp:200] ip3 needs backward computation.
I0428 20:23:08.583420  2191 net.cpp:200] relu2 needs backward computation.
I0428 20:23:08.583423  2191 net.cpp:200] ip2 needs backward computation.
I0428 20:23:08.583426  2191 net.cpp:200] relu1 needs backward computation.
I0428 20:23:08.583428  2191 net.cpp:200] ip1 needs backward computation.
I0428 20:23:08.583432  2191 net.cpp:200] pool1 needs backward computation.
I0428 20:23:08.583436  2191 net.cpp:200] conv1 needs backward computation.
I0428 20:23:08.583438  2191 net.cpp:200] pool0 needs backward computation.
I0428 20:23:08.583442  2191 net.cpp:200] conv0 needs backward computation.
I0428 20:23:08.583447  2191 net.cpp:202] mnist does not need backward computation.
I0428 20:23:08.583451  2191 net.cpp:244] This network produces output loss
I0428 20:23:08.583465  2191 net.cpp:257] Network initialization done.
I0428 20:23:08.583806  2191 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1416.prototxt
I0428 20:23:08.583849  2191 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:08.583978  2191 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:08.584067  2191 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:08.584128  2191 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:08.584139  2191 net.cpp:86] Creating Layer mnist
I0428 20:23:08.584144  2191 net.cpp:382] mnist -> data
I0428 20:23:08.584152  2191 net.cpp:382] mnist -> label
I0428 20:23:08.584241  2191 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:08.585345  2191 net.cpp:124] Setting up mnist
I0428 20:23:08.585358  2191 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:08.585363  2191 net.cpp:131] Top shape: 100 (100)
I0428 20:23:08.585366  2191 net.cpp:139] Memory required for data: 314000
I0428 20:23:08.585371  2191 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:08.585399  2191 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:08.585403  2191 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:08.585425  2191 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:08.585433  2191 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:08.585481  2191 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:08.585489  2191 net.cpp:131] Top shape: 100 (100)
I0428 20:23:08.585494  2191 net.cpp:131] Top shape: 100 (100)
I0428 20:23:08.585495  2191 net.cpp:139] Memory required for data: 314800
I0428 20:23:08.585499  2191 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:08.585508  2191 net.cpp:86] Creating Layer conv0
I0428 20:23:08.585511  2191 net.cpp:408] conv0 <- data
I0428 20:23:08.585517  2191 net.cpp:382] conv0 -> conv0
I0428 20:23:08.587249  2191 net.cpp:124] Setting up conv0
I0428 20:23:08.587265  2191 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:08.587268  2191 net.cpp:139] Memory required for data: 11834800
I0428 20:23:08.587277  2191 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:08.587283  2191 net.cpp:86] Creating Layer pool0
I0428 20:23:08.587287  2191 net.cpp:408] pool0 <- conv0
I0428 20:23:08.587293  2191 net.cpp:382] pool0 -> pool0
I0428 20:23:08.587330  2191 net.cpp:124] Setting up pool0
I0428 20:23:08.587337  2191 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:08.587338  2191 net.cpp:139] Memory required for data: 14714800
I0428 20:23:08.587342  2191 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:08.587352  2191 net.cpp:86] Creating Layer conv1
I0428 20:23:08.587355  2191 net.cpp:408] conv1 <- pool0
I0428 20:23:08.587360  2191 net.cpp:382] conv1 -> conv1
I0428 20:23:08.590451  2191 net.cpp:124] Setting up conv1
I0428 20:23:08.590466  2191 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:08.590469  2191 net.cpp:139] Memory required for data: 17274800
I0428 20:23:08.590484  2191 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:08.590492  2191 net.cpp:86] Creating Layer pool1
I0428 20:23:08.590497  2191 net.cpp:408] pool1 <- conv1
I0428 20:23:08.590508  2191 net.cpp:382] pool1 -> pool1
I0428 20:23:08.590548  2191 net.cpp:124] Setting up pool1
I0428 20:23:08.590553  2191 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:08.590556  2191 net.cpp:139] Memory required for data: 17914800
I0428 20:23:08.590559  2191 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:08.590571  2191 net.cpp:86] Creating Layer ip1
I0428 20:23:08.590576  2191 net.cpp:408] ip1 <- pool1
I0428 20:23:08.590585  2191 net.cpp:382] ip1 -> ip1
I0428 20:23:08.590777  2191 net.cpp:124] Setting up ip1
I0428 20:23:08.590796  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.590800  2191 net.cpp:139] Memory required for data: 17918800
I0428 20:23:08.590807  2191 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:08.590812  2191 net.cpp:86] Creating Layer relu1
I0428 20:23:08.590822  2191 net.cpp:408] relu1 <- ip1
I0428 20:23:08.590829  2191 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:08.591007  2191 net.cpp:124] Setting up relu1
I0428 20:23:08.591017  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.591020  2191 net.cpp:139] Memory required for data: 17922800
I0428 20:23:08.591024  2191 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:08.591032  2191 net.cpp:86] Creating Layer ip2
I0428 20:23:08.591035  2191 net.cpp:408] ip2 <- ip1
I0428 20:23:08.591040  2191 net.cpp:382] ip2 -> ip2
I0428 20:23:08.591161  2191 net.cpp:124] Setting up ip2
I0428 20:23:08.591168  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.591171  2191 net.cpp:139] Memory required for data: 17926800
I0428 20:23:08.591176  2191 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:08.591181  2191 net.cpp:86] Creating Layer relu2
I0428 20:23:08.591184  2191 net.cpp:408] relu2 <- ip2
I0428 20:23:08.591189  2191 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:08.591392  2191 net.cpp:124] Setting up relu2
I0428 20:23:08.591399  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.591403  2191 net.cpp:139] Memory required for data: 17930800
I0428 20:23:08.591406  2191 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:08.591413  2191 net.cpp:86] Creating Layer ip3
I0428 20:23:08.591416  2191 net.cpp:408] ip3 <- ip2
I0428 20:23:08.591421  2191 net.cpp:382] ip3 -> ip3
I0428 20:23:08.591549  2191 net.cpp:124] Setting up ip3
I0428 20:23:08.591557  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.591559  2191 net.cpp:139] Memory required for data: 17934800
I0428 20:23:08.591567  2191 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:08.591573  2191 net.cpp:86] Creating Layer relu3
I0428 20:23:08.591576  2191 net.cpp:408] relu3 <- ip3
I0428 20:23:08.591580  2191 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:08.592344  2191 net.cpp:124] Setting up relu3
I0428 20:23:08.592356  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.592360  2191 net.cpp:139] Memory required for data: 17938800
I0428 20:23:08.592363  2191 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:08.592370  2191 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:08.592372  2191 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:08.592377  2191 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:08.592383  2191 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:08.592428  2191 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:08.592437  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.592442  2191 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:08.592447  2191 net.cpp:139] Memory required for data: 17946800
I0428 20:23:08.592452  2191 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:08.592458  2191 net.cpp:86] Creating Layer accuracy
I0428 20:23:08.592461  2191 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:08.592465  2191 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:08.592471  2191 net.cpp:382] accuracy -> accuracy
I0428 20:23:08.592478  2191 net.cpp:124] Setting up accuracy
I0428 20:23:08.592483  2191 net.cpp:131] Top shape: (1)
I0428 20:23:08.592485  2191 net.cpp:139] Memory required for data: 17946804
I0428 20:23:08.592489  2191 layer_factory.hpp:77] Creating layer loss
I0428 20:23:08.592494  2191 net.cpp:86] Creating Layer loss
I0428 20:23:08.592496  2191 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:08.592500  2191 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:08.592504  2191 net.cpp:382] loss -> loss
I0428 20:23:08.592510  2191 layer_factory.hpp:77] Creating layer loss
I0428 20:23:08.592761  2191 net.cpp:124] Setting up loss
I0428 20:23:08.592773  2191 net.cpp:131] Top shape: (1)
I0428 20:23:08.592777  2191 net.cpp:134]     with loss weight 1
I0428 20:23:08.592793  2191 net.cpp:139] Memory required for data: 17946808
I0428 20:23:08.592805  2191 net.cpp:200] loss needs backward computation.
I0428 20:23:08.592815  2191 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:08.592826  2191 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:08.592829  2191 net.cpp:200] relu3 needs backward computation.
I0428 20:23:08.592833  2191 net.cpp:200] ip3 needs backward computation.
I0428 20:23:08.592840  2191 net.cpp:200] relu2 needs backward computation.
I0428 20:23:08.592844  2191 net.cpp:200] ip2 needs backward computation.
I0428 20:23:08.592846  2191 net.cpp:200] relu1 needs backward computation.
I0428 20:23:08.592849  2191 net.cpp:200] ip1 needs backward computation.
I0428 20:23:08.592852  2191 net.cpp:200] pool1 needs backward computation.
I0428 20:23:08.592856  2191 net.cpp:200] conv1 needs backward computation.
I0428 20:23:08.592859  2191 net.cpp:200] pool0 needs backward computation.
I0428 20:23:08.592862  2191 net.cpp:200] conv0 needs backward computation.
I0428 20:23:08.592866  2191 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:08.592869  2191 net.cpp:202] mnist does not need backward computation.
I0428 20:23:08.592872  2191 net.cpp:244] This network produces output accuracy
I0428 20:23:08.592875  2191 net.cpp:244] This network produces output loss
I0428 20:23:08.592887  2191 net.cpp:257] Network initialization done.
I0428 20:23:08.592929  2191 solver.cpp:56] Solver scaffolding done.
I0428 20:23:08.593273  2191 caffe.cpp:248] Starting Optimization
I0428 20:23:08.593281  2191 solver.cpp:273] Solving LeNet
I0428 20:23:08.593284  2191 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:08.593483  2191 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:08.605199  2191 blocking_queue.cpp:49] Waiting for data
I0428 20:23:08.686199  2198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:08.687567  2191 solver.cpp:398]     Test net output #0: accuracy = 0.0931
I0428 20:23:08.687604  2191 solver.cpp:398]     Test net output #1: loss = 2.31666 (* 1 = 2.31666 loss)
I0428 20:23:08.693261  2191 solver.cpp:219] Iteration 0 (0 iter/s, 0.0999506s/100 iters), loss = 2.31483
I0428 20:23:08.693300  2191 solver.cpp:238]     Train net output #0: loss = 2.31483 (* 1 = 2.31483 loss)
I0428 20:23:08.693311  2191 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:08.920898  2191 solver.cpp:219] Iteration 100 (439.384 iter/s, 0.227591s/100 iters), loss = 0.755004
I0428 20:23:08.920931  2191 solver.cpp:238]     Train net output #0: loss = 0.755004 (* 1 = 0.755004 loss)
I0428 20:23:08.920939  2191 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:09.146394  2191 solver.cpp:219] Iteration 200 (443.567 iter/s, 0.225445s/100 iters), loss = 0.35625
I0428 20:23:09.146427  2191 solver.cpp:238]     Train net output #0: loss = 0.35625 (* 1 = 0.35625 loss)
I0428 20:23:09.146435  2191 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:09.370522  2191 solver.cpp:219] Iteration 300 (446.274 iter/s, 0.224078s/100 iters), loss = 0.217421
I0428 20:23:09.370554  2191 solver.cpp:238]     Train net output #0: loss = 0.217421 (* 1 = 0.217421 loss)
I0428 20:23:09.370563  2191 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:09.586366  2191 solver.cpp:219] Iteration 400 (463.406 iter/s, 0.215794s/100 iters), loss = 0.221102
I0428 20:23:09.586400  2191 solver.cpp:238]     Train net output #0: loss = 0.221102 (* 1 = 0.221102 loss)
I0428 20:23:09.586405  2191 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:09.805675  2191 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:09.897800  2198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:09.899348  2191 solver.cpp:398]     Test net output #0: accuracy = 0.9507
I0428 20:23:09.899377  2191 solver.cpp:398]     Test net output #1: loss = 0.160128 (* 1 = 0.160128 loss)
I0428 20:23:09.901597  2191 solver.cpp:219] Iteration 500 (317.284 iter/s, 0.315175s/100 iters), loss = 0.179799
I0428 20:23:09.901646  2191 solver.cpp:238]     Train net output #0: loss = 0.179799 (* 1 = 0.179799 loss)
I0428 20:23:09.901655  2191 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:10.127967  2191 solver.cpp:219] Iteration 600 (441.883 iter/s, 0.226304s/100 iters), loss = 0.0804404
I0428 20:23:10.128001  2191 solver.cpp:238]     Train net output #0: loss = 0.0804404 (* 1 = 0.0804404 loss)
I0428 20:23:10.128010  2191 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:10.359593  2191 solver.cpp:219] Iteration 700 (431.825 iter/s, 0.231576s/100 iters), loss = 0.188076
I0428 20:23:10.359628  2191 solver.cpp:238]     Train net output #0: loss = 0.188076 (* 1 = 0.188076 loss)
I0428 20:23:10.359637  2191 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:10.590721  2191 solver.cpp:219] Iteration 800 (432.756 iter/s, 0.231077s/100 iters), loss = 0.353531
I0428 20:23:10.590754  2191 solver.cpp:238]     Train net output #0: loss = 0.353531 (* 1 = 0.353531 loss)
I0428 20:23:10.590762  2191 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:10.808475  2191 solver.cpp:219] Iteration 900 (459.336 iter/s, 0.217705s/100 iters), loss = 0.152055
I0428 20:23:10.808501  2191 solver.cpp:238]     Train net output #0: loss = 0.152055 (* 1 = 0.152055 loss)
I0428 20:23:10.808507  2191 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:10.875030  2197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:11.018779  2191 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:11.025372  2191 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:11.028434  2191 solver.cpp:311] Iteration 1000, loss = 0.0954792
I0428 20:23:11.028457  2191 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:11.116206  2198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:11.119244  2191 solver.cpp:398]     Test net output #0: accuracy = 0.9733
I0428 20:23:11.119264  2191 solver.cpp:398]     Test net output #1: loss = 0.0852102 (* 1 = 0.0852102 loss)
I0428 20:23:11.119269  2191 solver.cpp:316] Optimization Done.
I0428 20:23:11.119272  2191 caffe.cpp:259] Optimization Done.
