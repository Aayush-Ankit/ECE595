I0428 20:11:25.342530 32065 caffe.cpp:218] Using GPUs 0
I0428 20:11:25.370151 32065 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:25.818202 32065 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1158.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:25.818331 32065 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1158.prototxt
I0428 20:11:25.818697 32065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:25.818728 32065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:25.818809 32065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:25.818874 32065 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:25.818970 32065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:25.818991 32065 net.cpp:86] Creating Layer mnist
I0428 20:11:25.819000 32065 net.cpp:382] mnist -> data
I0428 20:11:25.819018 32065 net.cpp:382] mnist -> label
I0428 20:11:25.820006 32065 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:25.822360 32065 net.cpp:124] Setting up mnist
I0428 20:11:25.822391 32065 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:25.822396 32065 net.cpp:131] Top shape: 64 (64)
I0428 20:11:25.822399 32065 net.cpp:139] Memory required for data: 200960
I0428 20:11:25.822405 32065 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:25.822420 32065 net.cpp:86] Creating Layer conv0
I0428 20:11:25.822438 32065 net.cpp:408] conv0 <- data
I0428 20:11:25.822449 32065 net.cpp:382] conv0 -> conv0
I0428 20:11:26.046222 32065 net.cpp:124] Setting up conv0
I0428 20:11:26.046262 32065 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:26.046267 32065 net.cpp:139] Memory required for data: 3887360
I0428 20:11:26.046281 32065 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:26.046293 32065 net.cpp:86] Creating Layer pool0
I0428 20:11:26.046298 32065 net.cpp:408] pool0 <- conv0
I0428 20:11:26.046303 32065 net.cpp:382] pool0 -> pool0
I0428 20:11:26.046362 32065 net.cpp:124] Setting up pool0
I0428 20:11:26.046367 32065 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:26.046370 32065 net.cpp:139] Memory required for data: 4808960
I0428 20:11:26.046373 32065 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:26.046383 32065 net.cpp:86] Creating Layer conv1
I0428 20:11:26.046386 32065 net.cpp:408] conv1 <- pool0
I0428 20:11:26.046391 32065 net.cpp:382] conv1 -> conv1
I0428 20:11:26.048341 32065 net.cpp:124] Setting up conv1
I0428 20:11:26.048354 32065 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:26.048358 32065 net.cpp:139] Memory required for data: 5628160
I0428 20:11:26.048382 32065 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:26.048404 32065 net.cpp:86] Creating Layer pool1
I0428 20:11:26.048408 32065 net.cpp:408] pool1 <- conv1
I0428 20:11:26.048413 32065 net.cpp:382] pool1 -> pool1
I0428 20:11:26.048461 32065 net.cpp:124] Setting up pool1
I0428 20:11:26.048466 32065 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:26.048470 32065 net.cpp:139] Memory required for data: 5832960
I0428 20:11:26.048472 32065 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:26.048480 32065 net.cpp:86] Creating Layer ip1
I0428 20:11:26.048482 32065 net.cpp:408] ip1 <- pool1
I0428 20:11:26.048486 32065 net.cpp:382] ip1 -> ip1
I0428 20:11:26.048691 32065 net.cpp:124] Setting up ip1
I0428 20:11:26.048698 32065 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:26.048702 32065 net.cpp:139] Memory required for data: 5839360
I0428 20:11:26.048707 32065 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:26.048712 32065 net.cpp:86] Creating Layer relu1
I0428 20:11:26.048717 32065 net.cpp:408] relu1 <- ip1
I0428 20:11:26.048720 32065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:26.048918 32065 net.cpp:124] Setting up relu1
I0428 20:11:26.048928 32065 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:26.048930 32065 net.cpp:139] Memory required for data: 5845760
I0428 20:11:26.048933 32065 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:26.048939 32065 net.cpp:86] Creating Layer ip2
I0428 20:11:26.048943 32065 net.cpp:408] ip2 <- ip1
I0428 20:11:26.048948 32065 net.cpp:382] ip2 -> ip2
I0428 20:11:26.049939 32065 net.cpp:124] Setting up ip2
I0428 20:11:26.049950 32065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:26.049969 32065 net.cpp:139] Memory required for data: 5858560
I0428 20:11:26.049975 32065 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:26.049981 32065 net.cpp:86] Creating Layer relu2
I0428 20:11:26.049985 32065 net.cpp:408] relu2 <- ip2
I0428 20:11:26.049989 32065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:26.050698 32065 net.cpp:124] Setting up relu2
I0428 20:11:26.050709 32065 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:26.050727 32065 net.cpp:139] Memory required for data: 5871360
I0428 20:11:26.050731 32065 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:26.050737 32065 net.cpp:86] Creating Layer ip3
I0428 20:11:26.050741 32065 net.cpp:408] ip3 <- ip2
I0428 20:11:26.050746 32065 net.cpp:382] ip3 -> ip3
I0428 20:11:26.050843 32065 net.cpp:124] Setting up ip3
I0428 20:11:26.050849 32065 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:26.050853 32065 net.cpp:139] Memory required for data: 5873920
I0428 20:11:26.050860 32065 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:26.050865 32065 net.cpp:86] Creating Layer relu3
I0428 20:11:26.050868 32065 net.cpp:408] relu3 <- ip3
I0428 20:11:26.050873 32065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:26.051029 32065 net.cpp:124] Setting up relu3
I0428 20:11:26.051038 32065 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:26.051041 32065 net.cpp:139] Memory required for data: 5876480
I0428 20:11:26.051044 32065 layer_factory.hpp:77] Creating layer loss
I0428 20:11:26.051049 32065 net.cpp:86] Creating Layer loss
I0428 20:11:26.051053 32065 net.cpp:408] loss <- ip3
I0428 20:11:26.051056 32065 net.cpp:408] loss <- label
I0428 20:11:26.051061 32065 net.cpp:382] loss -> loss
I0428 20:11:26.051075 32065 layer_factory.hpp:77] Creating layer loss
I0428 20:11:26.051292 32065 net.cpp:124] Setting up loss
I0428 20:11:26.051301 32065 net.cpp:131] Top shape: (1)
I0428 20:11:26.051304 32065 net.cpp:134]     with loss weight 1
I0428 20:11:26.051318 32065 net.cpp:139] Memory required for data: 5876484
I0428 20:11:26.051321 32065 net.cpp:200] loss needs backward computation.
I0428 20:11:26.051326 32065 net.cpp:200] relu3 needs backward computation.
I0428 20:11:26.051328 32065 net.cpp:200] ip3 needs backward computation.
I0428 20:11:26.051331 32065 net.cpp:200] relu2 needs backward computation.
I0428 20:11:26.051333 32065 net.cpp:200] ip2 needs backward computation.
I0428 20:11:26.051337 32065 net.cpp:200] relu1 needs backward computation.
I0428 20:11:26.051338 32065 net.cpp:200] ip1 needs backward computation.
I0428 20:11:26.051342 32065 net.cpp:200] pool1 needs backward computation.
I0428 20:11:26.051344 32065 net.cpp:200] conv1 needs backward computation.
I0428 20:11:26.051347 32065 net.cpp:200] pool0 needs backward computation.
I0428 20:11:26.051350 32065 net.cpp:200] conv0 needs backward computation.
I0428 20:11:26.051353 32065 net.cpp:202] mnist does not need backward computation.
I0428 20:11:26.051357 32065 net.cpp:244] This network produces output loss
I0428 20:11:26.051364 32065 net.cpp:257] Network initialization done.
I0428 20:11:26.051671 32065 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1158.prototxt
I0428 20:11:26.051697 32065 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:26.051781 32065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:26.051856 32065 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:26.051898 32065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:26.051913 32065 net.cpp:86] Creating Layer mnist
I0428 20:11:26.051918 32065 net.cpp:382] mnist -> data
I0428 20:11:26.051925 32065 net.cpp:382] mnist -> label
I0428 20:11:26.052006 32065 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:26.053912 32065 net.cpp:124] Setting up mnist
I0428 20:11:26.053939 32065 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:26.053944 32065 net.cpp:131] Top shape: 100 (100)
I0428 20:11:26.053947 32065 net.cpp:139] Memory required for data: 314000
I0428 20:11:26.053951 32065 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:26.053957 32065 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:26.053961 32065 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:26.053966 32065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:26.053972 32065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:26.054051 32065 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:26.054059 32065 net.cpp:131] Top shape: 100 (100)
I0428 20:11:26.054062 32065 net.cpp:131] Top shape: 100 (100)
I0428 20:11:26.054064 32065 net.cpp:139] Memory required for data: 314800
I0428 20:11:26.054067 32065 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:26.054075 32065 net.cpp:86] Creating Layer conv0
I0428 20:11:26.054078 32065 net.cpp:408] conv0 <- data
I0428 20:11:26.054083 32065 net.cpp:382] conv0 -> conv0
I0428 20:11:26.055748 32065 net.cpp:124] Setting up conv0
I0428 20:11:26.055776 32065 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:26.055780 32065 net.cpp:139] Memory required for data: 6074800
I0428 20:11:26.055789 32065 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:26.055795 32065 net.cpp:86] Creating Layer pool0
I0428 20:11:26.055799 32065 net.cpp:408] pool0 <- conv0
I0428 20:11:26.055819 32065 net.cpp:382] pool0 -> pool0
I0428 20:11:26.055856 32065 net.cpp:124] Setting up pool0
I0428 20:11:26.055862 32065 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:26.055866 32065 net.cpp:139] Memory required for data: 7514800
I0428 20:11:26.055868 32065 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:26.055876 32065 net.cpp:86] Creating Layer conv1
I0428 20:11:26.055879 32065 net.cpp:408] conv1 <- pool0
I0428 20:11:26.055884 32065 net.cpp:382] conv1 -> conv1
I0428 20:11:26.057761 32065 net.cpp:124] Setting up conv1
I0428 20:11:26.057780 32065 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:26.057783 32065 net.cpp:139] Memory required for data: 8794800
I0428 20:11:26.057807 32065 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:26.057814 32065 net.cpp:86] Creating Layer pool1
I0428 20:11:26.057817 32065 net.cpp:408] pool1 <- conv1
I0428 20:11:26.057823 32065 net.cpp:382] pool1 -> pool1
I0428 20:11:26.057862 32065 net.cpp:124] Setting up pool1
I0428 20:11:26.057868 32065 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:26.057871 32065 net.cpp:139] Memory required for data: 9114800
I0428 20:11:26.057874 32065 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:26.057880 32065 net.cpp:86] Creating Layer ip1
I0428 20:11:26.057883 32065 net.cpp:408] ip1 <- pool1
I0428 20:11:26.057889 32065 net.cpp:382] ip1 -> ip1
I0428 20:11:26.058107 32065 net.cpp:124] Setting up ip1
I0428 20:11:26.058115 32065 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:26.058128 32065 net.cpp:139] Memory required for data: 9124800
I0428 20:11:26.058136 32065 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:26.058143 32065 net.cpp:86] Creating Layer relu1
I0428 20:11:26.058147 32065 net.cpp:408] relu1 <- ip1
I0428 20:11:26.058153 32065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:26.058367 32065 net.cpp:124] Setting up relu1
I0428 20:11:26.058377 32065 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:26.058380 32065 net.cpp:139] Memory required for data: 9134800
I0428 20:11:26.058383 32065 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:26.058394 32065 net.cpp:86] Creating Layer ip2
I0428 20:11:26.058398 32065 net.cpp:408] ip2 <- ip1
I0428 20:11:26.058403 32065 net.cpp:382] ip2 -> ip2
I0428 20:11:26.058533 32065 net.cpp:124] Setting up ip2
I0428 20:11:26.058542 32065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:26.058544 32065 net.cpp:139] Memory required for data: 9154800
I0428 20:11:26.058549 32065 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:26.058554 32065 net.cpp:86] Creating Layer relu2
I0428 20:11:26.058558 32065 net.cpp:408] relu2 <- ip2
I0428 20:11:26.058563 32065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:26.058758 32065 net.cpp:124] Setting up relu2
I0428 20:11:26.058765 32065 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:26.058769 32065 net.cpp:139] Memory required for data: 9174800
I0428 20:11:26.058773 32065 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:26.058778 32065 net.cpp:86] Creating Layer ip3
I0428 20:11:26.058781 32065 net.cpp:408] ip3 <- ip2
I0428 20:11:26.058786 32065 net.cpp:382] ip3 -> ip3
I0428 20:11:26.058892 32065 net.cpp:124] Setting up ip3
I0428 20:11:26.058912 32065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:26.058915 32065 net.cpp:139] Memory required for data: 9178800
I0428 20:11:26.058923 32065 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:26.058928 32065 net.cpp:86] Creating Layer relu3
I0428 20:11:26.058931 32065 net.cpp:408] relu3 <- ip3
I0428 20:11:26.058943 32065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:26.059744 32065 net.cpp:124] Setting up relu3
I0428 20:11:26.059756 32065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:26.059759 32065 net.cpp:139] Memory required for data: 9182800
I0428 20:11:26.059763 32065 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:26.059769 32065 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:26.059772 32065 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:26.059777 32065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:26.059783 32065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:26.059828 32065 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:26.059834 32065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:26.059839 32065 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:26.059847 32065 net.cpp:139] Memory required for data: 9190800
I0428 20:11:26.059850 32065 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:26.059855 32065 net.cpp:86] Creating Layer accuracy
I0428 20:11:26.059859 32065 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:26.059862 32065 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:26.059869 32065 net.cpp:382] accuracy -> accuracy
I0428 20:11:26.059875 32065 net.cpp:124] Setting up accuracy
I0428 20:11:26.059878 32065 net.cpp:131] Top shape: (1)
I0428 20:11:26.059881 32065 net.cpp:139] Memory required for data: 9190804
I0428 20:11:26.059885 32065 layer_factory.hpp:77] Creating layer loss
I0428 20:11:26.059888 32065 net.cpp:86] Creating Layer loss
I0428 20:11:26.059891 32065 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:26.059895 32065 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:26.059900 32065 net.cpp:382] loss -> loss
I0428 20:11:26.059906 32065 layer_factory.hpp:77] Creating layer loss
I0428 20:11:26.060173 32065 net.cpp:124] Setting up loss
I0428 20:11:26.060183 32065 net.cpp:131] Top shape: (1)
I0428 20:11:26.060186 32065 net.cpp:134]     with loss weight 1
I0428 20:11:26.060201 32065 net.cpp:139] Memory required for data: 9190808
I0428 20:11:26.060204 32065 net.cpp:200] loss needs backward computation.
I0428 20:11:26.060209 32065 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:26.060212 32065 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:26.060215 32065 net.cpp:200] relu3 needs backward computation.
I0428 20:11:26.060219 32065 net.cpp:200] ip3 needs backward computation.
I0428 20:11:26.060221 32065 net.cpp:200] relu2 needs backward computation.
I0428 20:11:26.060225 32065 net.cpp:200] ip2 needs backward computation.
I0428 20:11:26.060227 32065 net.cpp:200] relu1 needs backward computation.
I0428 20:11:26.060230 32065 net.cpp:200] ip1 needs backward computation.
I0428 20:11:26.060233 32065 net.cpp:200] pool1 needs backward computation.
I0428 20:11:26.060236 32065 net.cpp:200] conv1 needs backward computation.
I0428 20:11:26.060245 32065 net.cpp:200] pool0 needs backward computation.
I0428 20:11:26.060248 32065 net.cpp:200] conv0 needs backward computation.
I0428 20:11:26.060252 32065 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:26.060256 32065 net.cpp:202] mnist does not need backward computation.
I0428 20:11:26.060263 32065 net.cpp:244] This network produces output accuracy
I0428 20:11:26.060267 32065 net.cpp:244] This network produces output loss
I0428 20:11:26.060278 32065 net.cpp:257] Network initialization done.
I0428 20:11:26.060320 32065 solver.cpp:56] Solver scaffolding done.
I0428 20:11:26.060657 32065 caffe.cpp:248] Starting Optimization
I0428 20:11:26.060664 32065 solver.cpp:273] Solving LeNet
I0428 20:11:26.060667 32065 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:26.061645 32065 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:26.068137 32065 blocking_queue.cpp:49] Waiting for data
I0428 20:11:26.141903 32072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:26.142526 32065 solver.cpp:398]     Test net output #0: accuracy = 0.0794
I0428 20:11:26.142562 32065 solver.cpp:398]     Test net output #1: loss = 2.31787 (* 1 = 2.31787 loss)
I0428 20:11:26.146306 32065 solver.cpp:219] Iteration 0 (0 iter/s, 0.0856146s/100 iters), loss = 2.31865
I0428 20:11:26.146330 32065 solver.cpp:238]     Train net output #0: loss = 2.31865 (* 1 = 2.31865 loss)
I0428 20:11:26.146340 32065 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:26.266402 32065 solver.cpp:219] Iteration 100 (832.96 iter/s, 0.120054s/100 iters), loss = 0.428994
I0428 20:11:26.266440 32065 solver.cpp:238]     Train net output #0: loss = 0.428994 (* 1 = 0.428994 loss)
I0428 20:11:26.266446 32065 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:26.386541 32065 solver.cpp:219] Iteration 200 (832.605 iter/s, 0.120105s/100 iters), loss = 0.495337
I0428 20:11:26.386579 32065 solver.cpp:238]     Train net output #0: loss = 0.495337 (* 1 = 0.495337 loss)
I0428 20:11:26.386601 32065 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:26.507406 32065 solver.cpp:219] Iteration 300 (827.707 iter/s, 0.120816s/100 iters), loss = 0.480879
I0428 20:11:26.507432 32065 solver.cpp:238]     Train net output #0: loss = 0.480879 (* 1 = 0.480879 loss)
I0428 20:11:26.507438 32065 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:26.626807 32065 solver.cpp:219] Iteration 400 (837.769 iter/s, 0.119365s/100 iters), loss = 0.294027
I0428 20:11:26.626845 32065 solver.cpp:238]     Train net output #0: loss = 0.294027 (* 1 = 0.294027 loss)
I0428 20:11:26.626852 32065 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:26.747304 32065 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:26.802732 32072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:26.804661 32065 solver.cpp:398]     Test net output #0: accuracy = 0.8717
I0428 20:11:26.804695 32065 solver.cpp:398]     Test net output #1: loss = 0.339091 (* 1 = 0.339091 loss)
I0428 20:11:26.805840 32065 solver.cpp:219] Iteration 500 (558.716 iter/s, 0.178982s/100 iters), loss = 0.181425
I0428 20:11:26.805892 32065 solver.cpp:238]     Train net output #0: loss = 0.181425 (* 1 = 0.181425 loss)
I0428 20:11:26.805899 32065 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:26.925516 32065 solver.cpp:219] Iteration 600 (835.919 iter/s, 0.119629s/100 iters), loss = 0.233278
I0428 20:11:26.925556 32065 solver.cpp:238]     Train net output #0: loss = 0.233278 (* 1 = 0.233278 loss)
I0428 20:11:26.925562 32065 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:27.043915 32065 solver.cpp:219] Iteration 700 (844.865 iter/s, 0.118362s/100 iters), loss = 0.493883
I0428 20:11:27.043951 32065 solver.cpp:238]     Train net output #0: loss = 0.493883 (* 1 = 0.493883 loss)
I0428 20:11:27.043957 32065 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:27.162173 32065 solver.cpp:219] Iteration 800 (845.838 iter/s, 0.118226s/100 iters), loss = 0.358635
I0428 20:11:27.162212 32065 solver.cpp:238]     Train net output #0: loss = 0.358635 (* 1 = 0.358635 loss)
I0428 20:11:27.162219 32065 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:27.282969 32065 solver.cpp:219] Iteration 900 (828.08 iter/s, 0.120761s/100 iters), loss = 0.374712
I0428 20:11:27.282994 32065 solver.cpp:238]     Train net output #0: loss = 0.374712 (* 1 = 0.374712 loss)
I0428 20:11:27.282999 32065 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:27.322369 32071 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:27.402734 32065 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:27.404492 32065 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:27.405465 32065 solver.cpp:311] Iteration 1000, loss = 0.404858
I0428 20:11:27.405480 32065 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:27.466794 32072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:27.469297 32065 solver.cpp:398]     Test net output #0: accuracy = 0.8799
I0428 20:11:27.469341 32065 solver.cpp:398]     Test net output #1: loss = 0.3055 (* 1 = 0.3055 loss)
I0428 20:11:27.469349 32065 solver.cpp:316] Optimization Done.
I0428 20:11:27.469353 32065 caffe.cpp:259] Optimization Done.
