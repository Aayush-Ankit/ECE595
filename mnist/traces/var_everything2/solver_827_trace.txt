I0428 19:58:43.647097 29043 caffe.cpp:218] Using GPUs 0
I0428 19:58:43.683933 29043 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:44.157907 29043 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test827.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:44.158053 29043 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test827.prototxt
I0428 19:58:44.158357 29043 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:44.158371 29043 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:44.158442 29043 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:44.158504 29043 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:44.158601 29043 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:44.158622 29043 net.cpp:86] Creating Layer mnist
I0428 19:58:44.158628 29043 net.cpp:382] mnist -> data
I0428 19:58:44.158646 29043 net.cpp:382] mnist -> label
I0428 19:58:44.159693 29043 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:44.161888 29043 net.cpp:124] Setting up mnist
I0428 19:58:44.161936 29043 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:44.161941 29043 net.cpp:131] Top shape: 64 (64)
I0428 19:58:44.161943 29043 net.cpp:139] Memory required for data: 200960
I0428 19:58:44.161949 29043 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:44.161963 29043 net.cpp:86] Creating Layer conv0
I0428 19:58:44.161968 29043 net.cpp:408] conv0 <- data
I0428 19:58:44.161978 29043 net.cpp:382] conv0 -> conv0
I0428 19:58:44.398061 29043 net.cpp:124] Setting up conv0
I0428 19:58:44.398087 29043 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:44.398092 29043 net.cpp:139] Memory required for data: 1675520
I0428 19:58:44.398123 29043 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:44.398136 29043 net.cpp:86] Creating Layer pool0
I0428 19:58:44.398155 29043 net.cpp:408] pool0 <- conv0
I0428 19:58:44.398160 29043 net.cpp:382] pool0 -> pool0
I0428 19:58:44.398208 29043 net.cpp:124] Setting up pool0
I0428 19:58:44.398222 29043 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:44.398226 29043 net.cpp:139] Memory required for data: 2044160
I0428 19:58:44.398228 29043 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:44.398238 29043 net.cpp:86] Creating Layer conv1
I0428 19:58:44.398242 29043 net.cpp:408] conv1 <- pool0
I0428 19:58:44.398247 29043 net.cpp:382] conv1 -> conv1
I0428 19:58:44.401032 29043 net.cpp:124] Setting up conv1
I0428 19:58:44.401048 29043 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:44.401052 29043 net.cpp:139] Memory required for data: 2208000
I0428 19:58:44.401062 29043 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:44.401068 29043 net.cpp:86] Creating Layer pool1
I0428 19:58:44.401072 29043 net.cpp:408] pool1 <- conv1
I0428 19:58:44.401077 29043 net.cpp:382] pool1 -> pool1
I0428 19:58:44.401118 29043 net.cpp:124] Setting up pool1
I0428 19:58:44.401129 29043 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:44.401132 29043 net.cpp:139] Memory required for data: 2248960
I0428 19:58:44.401135 29043 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:44.401144 29043 net.cpp:86] Creating Layer ip1
I0428 19:58:44.401146 29043 net.cpp:408] ip1 <- pool1
I0428 19:58:44.401150 29043 net.cpp:382] ip1 -> ip1
I0428 19:58:44.401288 29043 net.cpp:124] Setting up ip1
I0428 19:58:44.401295 29043 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:44.401298 29043 net.cpp:139] Memory required for data: 2255360
I0428 19:58:44.401304 29043 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:44.401311 29043 net.cpp:86] Creating Layer relu1
I0428 19:58:44.401314 29043 net.cpp:408] relu1 <- ip1
I0428 19:58:44.401319 29043 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:44.401517 29043 net.cpp:124] Setting up relu1
I0428 19:58:44.401526 29043 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:44.401530 29043 net.cpp:139] Memory required for data: 2261760
I0428 19:58:44.401532 29043 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:44.401540 29043 net.cpp:86] Creating Layer ip2
I0428 19:58:44.401543 29043 net.cpp:408] ip2 <- ip1
I0428 19:58:44.401548 29043 net.cpp:382] ip2 -> ip2
I0428 19:58:44.401660 29043 net.cpp:124] Setting up ip2
I0428 19:58:44.401669 29043 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:44.401672 29043 net.cpp:139] Memory required for data: 2264320
I0428 19:58:44.401677 29043 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:44.401684 29043 net.cpp:86] Creating Layer relu2
I0428 19:58:44.401686 29043 net.cpp:408] relu2 <- ip2
I0428 19:58:44.401690 29043 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:44.402472 29043 net.cpp:124] Setting up relu2
I0428 19:58:44.402483 29043 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:44.402503 29043 net.cpp:139] Memory required for data: 2266880
I0428 19:58:44.402505 29043 layer_factory.hpp:77] Creating layer loss
I0428 19:58:44.402513 29043 net.cpp:86] Creating Layer loss
I0428 19:58:44.402515 29043 net.cpp:408] loss <- ip2
I0428 19:58:44.402519 29043 net.cpp:408] loss <- label
I0428 19:58:44.402525 29043 net.cpp:382] loss -> loss
I0428 19:58:44.402544 29043 layer_factory.hpp:77] Creating layer loss
I0428 19:58:44.402796 29043 net.cpp:124] Setting up loss
I0428 19:58:44.402806 29043 net.cpp:131] Top shape: (1)
I0428 19:58:44.402809 29043 net.cpp:134]     with loss weight 1
I0428 19:58:44.402822 29043 net.cpp:139] Memory required for data: 2266884
I0428 19:58:44.402827 29043 net.cpp:200] loss needs backward computation.
I0428 19:58:44.402829 29043 net.cpp:200] relu2 needs backward computation.
I0428 19:58:44.402832 29043 net.cpp:200] ip2 needs backward computation.
I0428 19:58:44.402835 29043 net.cpp:200] relu1 needs backward computation.
I0428 19:58:44.402838 29043 net.cpp:200] ip1 needs backward computation.
I0428 19:58:44.402853 29043 net.cpp:200] pool1 needs backward computation.
I0428 19:58:44.402855 29043 net.cpp:200] conv1 needs backward computation.
I0428 19:58:44.402858 29043 net.cpp:200] pool0 needs backward computation.
I0428 19:58:44.402860 29043 net.cpp:200] conv0 needs backward computation.
I0428 19:58:44.402864 29043 net.cpp:202] mnist does not need backward computation.
I0428 19:58:44.402868 29043 net.cpp:244] This network produces output loss
I0428 19:58:44.402876 29043 net.cpp:257] Network initialization done.
I0428 19:58:44.403158 29043 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test827.prototxt
I0428 19:58:44.403183 29043 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:44.403270 29043 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:44.403349 29043 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:44.403391 29043 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:44.403419 29043 net.cpp:86] Creating Layer mnist
I0428 19:58:44.403424 29043 net.cpp:382] mnist -> data
I0428 19:58:44.403430 29043 net.cpp:382] mnist -> label
I0428 19:58:44.403535 29043 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:44.405493 29043 net.cpp:124] Setting up mnist
I0428 19:58:44.405531 29043 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:44.405536 29043 net.cpp:131] Top shape: 100 (100)
I0428 19:58:44.405539 29043 net.cpp:139] Memory required for data: 314000
I0428 19:58:44.405542 29043 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:44.405557 29043 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:44.405560 29043 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:44.405565 29043 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:44.405571 29043 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:44.405671 29043 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:44.405689 29043 net.cpp:131] Top shape: 100 (100)
I0428 19:58:44.405692 29043 net.cpp:131] Top shape: 100 (100)
I0428 19:58:44.405694 29043 net.cpp:139] Memory required for data: 314800
I0428 19:58:44.405697 29043 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:44.405707 29043 net.cpp:86] Creating Layer conv0
I0428 19:58:44.405710 29043 net.cpp:408] conv0 <- data
I0428 19:58:44.405716 29043 net.cpp:382] conv0 -> conv0
I0428 19:58:44.407465 29043 net.cpp:124] Setting up conv0
I0428 19:58:44.407479 29043 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:44.407497 29043 net.cpp:139] Memory required for data: 2618800
I0428 19:58:44.407506 29043 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:44.407513 29043 net.cpp:86] Creating Layer pool0
I0428 19:58:44.407517 29043 net.cpp:408] pool0 <- conv0
I0428 19:58:44.407521 29043 net.cpp:382] pool0 -> pool0
I0428 19:58:44.407557 29043 net.cpp:124] Setting up pool0
I0428 19:58:44.407562 29043 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:44.407565 29043 net.cpp:139] Memory required for data: 3194800
I0428 19:58:44.407567 29043 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:44.407577 29043 net.cpp:86] Creating Layer conv1
I0428 19:58:44.407580 29043 net.cpp:408] conv1 <- pool0
I0428 19:58:44.407587 29043 net.cpp:382] conv1 -> conv1
I0428 19:58:44.409785 29043 net.cpp:124] Setting up conv1
I0428 19:58:44.409797 29043 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:44.409816 29043 net.cpp:139] Memory required for data: 3450800
I0428 19:58:44.409826 29043 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:44.409839 29043 net.cpp:86] Creating Layer pool1
I0428 19:58:44.409847 29043 net.cpp:408] pool1 <- conv1
I0428 19:58:44.409853 29043 net.cpp:382] pool1 -> pool1
I0428 19:58:44.409891 29043 net.cpp:124] Setting up pool1
I0428 19:58:44.409896 29043 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:44.409900 29043 net.cpp:139] Memory required for data: 3514800
I0428 19:58:44.409903 29043 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:44.409909 29043 net.cpp:86] Creating Layer ip1
I0428 19:58:44.409912 29043 net.cpp:408] ip1 <- pool1
I0428 19:58:44.409917 29043 net.cpp:382] ip1 -> ip1
I0428 19:58:44.410035 29043 net.cpp:124] Setting up ip1
I0428 19:58:44.410043 29043 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:44.410045 29043 net.cpp:139] Memory required for data: 3524800
I0428 19:58:44.410053 29043 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:44.410058 29043 net.cpp:86] Creating Layer relu1
I0428 19:58:44.410060 29043 net.cpp:408] relu1 <- ip1
I0428 19:58:44.410064 29043 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:44.410351 29043 net.cpp:124] Setting up relu1
I0428 19:58:44.410361 29043 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:44.410363 29043 net.cpp:139] Memory required for data: 3534800
I0428 19:58:44.410372 29043 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:44.410379 29043 net.cpp:86] Creating Layer ip2
I0428 19:58:44.410387 29043 net.cpp:408] ip2 <- ip1
I0428 19:58:44.410393 29043 net.cpp:382] ip2 -> ip2
I0428 19:58:44.410498 29043 net.cpp:124] Setting up ip2
I0428 19:58:44.410506 29043 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:44.410509 29043 net.cpp:139] Memory required for data: 3538800
I0428 19:58:44.410531 29043 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:44.410536 29043 net.cpp:86] Creating Layer relu2
I0428 19:58:44.410538 29043 net.cpp:408] relu2 <- ip2
I0428 19:58:44.410542 29043 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:44.410739 29043 net.cpp:124] Setting up relu2
I0428 19:58:44.410748 29043 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:44.410751 29043 net.cpp:139] Memory required for data: 3542800
I0428 19:58:44.410755 29043 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:44.410760 29043 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:44.410763 29043 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:44.410769 29043 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:44.410786 29043 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:44.410825 29043 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:44.410832 29043 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:44.410836 29043 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:44.410840 29043 net.cpp:139] Memory required for data: 3550800
I0428 19:58:44.410843 29043 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:44.410850 29043 net.cpp:86] Creating Layer accuracy
I0428 19:58:44.410853 29043 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:44.410871 29043 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:44.410876 29043 net.cpp:382] accuracy -> accuracy
I0428 19:58:44.410882 29043 net.cpp:124] Setting up accuracy
I0428 19:58:44.410887 29043 net.cpp:131] Top shape: (1)
I0428 19:58:44.410890 29043 net.cpp:139] Memory required for data: 3550804
I0428 19:58:44.410893 29043 layer_factory.hpp:77] Creating layer loss
I0428 19:58:44.410898 29043 net.cpp:86] Creating Layer loss
I0428 19:58:44.410902 29043 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:44.410905 29043 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:44.410909 29043 net.cpp:382] loss -> loss
I0428 19:58:44.410915 29043 layer_factory.hpp:77] Creating layer loss
I0428 19:58:44.411192 29043 net.cpp:124] Setting up loss
I0428 19:58:44.411201 29043 net.cpp:131] Top shape: (1)
I0428 19:58:44.411203 29043 net.cpp:134]     with loss weight 1
I0428 19:58:44.411209 29043 net.cpp:139] Memory required for data: 3550808
I0428 19:58:44.411213 29043 net.cpp:200] loss needs backward computation.
I0428 19:58:44.411216 29043 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:44.411219 29043 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:44.411222 29043 net.cpp:200] relu2 needs backward computation.
I0428 19:58:44.411226 29043 net.cpp:200] ip2 needs backward computation.
I0428 19:58:44.411228 29043 net.cpp:200] relu1 needs backward computation.
I0428 19:58:44.411231 29043 net.cpp:200] ip1 needs backward computation.
I0428 19:58:44.411234 29043 net.cpp:200] pool1 needs backward computation.
I0428 19:58:44.411237 29043 net.cpp:200] conv1 needs backward computation.
I0428 19:58:44.411242 29043 net.cpp:200] pool0 needs backward computation.
I0428 19:58:44.411244 29043 net.cpp:200] conv0 needs backward computation.
I0428 19:58:44.411248 29043 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:44.411252 29043 net.cpp:202] mnist does not need backward computation.
I0428 19:58:44.411254 29043 net.cpp:244] This network produces output accuracy
I0428 19:58:44.411257 29043 net.cpp:244] This network produces output loss
I0428 19:58:44.411267 29043 net.cpp:257] Network initialization done.
I0428 19:58:44.411303 29043 solver.cpp:56] Solver scaffolding done.
I0428 19:58:44.411584 29043 caffe.cpp:248] Starting Optimization
I0428 19:58:44.411592 29043 solver.cpp:273] Solving LeNet
I0428 19:58:44.411594 29043 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:44.411741 29043 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:44.415678 29043 blocking_queue.cpp:49] Waiting for data
I0428 19:58:44.488976 29050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:44.489466 29043 solver.cpp:398]     Test net output #0: accuracy = 0.1136
I0428 19:58:44.489502 29043 solver.cpp:398]     Test net output #1: loss = 2.3015 (* 1 = 2.3015 loss)
I0428 19:58:44.492116 29043 solver.cpp:219] Iteration 0 (2.82808 iter/s, 0.080496s/100 iters), loss = 2.28109
I0428 19:58:44.492158 29043 solver.cpp:238]     Train net output #0: loss = 2.28109 (* 1 = 2.28109 loss)
I0428 19:58:44.492171 29043 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:44.573143 29043 solver.cpp:219] Iteration 100 (1234.79 iter/s, 0.0809851s/100 iters), loss = 0.918212
I0428 19:58:44.573187 29043 solver.cpp:238]     Train net output #0: loss = 0.918212 (* 1 = 0.918212 loss)
I0428 19:58:44.573195 29043 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:44.647472 29043 solver.cpp:219] Iteration 200 (1346.33 iter/s, 0.0742758s/100 iters), loss = 0.411849
I0428 19:58:44.647533 29043 solver.cpp:238]     Train net output #0: loss = 0.411849 (* 1 = 0.411849 loss)
I0428 19:58:44.647541 29043 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:44.722244 29043 solver.cpp:219] Iteration 300 (1338.69 iter/s, 0.0746998s/100 iters), loss = 0.24894
I0428 19:58:44.722280 29043 solver.cpp:238]     Train net output #0: loss = 0.24894 (* 1 = 0.24894 loss)
I0428 19:58:44.722288 29043 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:44.797449 29043 solver.cpp:219] Iteration 400 (1330.5 iter/s, 0.0751596s/100 iters), loss = 0.156786
I0428 19:58:44.797482 29043 solver.cpp:238]     Train net output #0: loss = 0.156786 (* 1 = 0.156786 loss)
I0428 19:58:44.797489 29043 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:44.872054 29043 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:44.924968 29050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:44.925464 29043 solver.cpp:398]     Test net output #0: accuracy = 0.9576
I0428 19:58:44.925490 29043 solver.cpp:398]     Test net output #1: loss = 0.138921 (* 1 = 0.138921 loss)
I0428 19:58:44.926265 29043 solver.cpp:219] Iteration 500 (776.567 iter/s, 0.128772s/100 iters), loss = 0.140796
I0428 19:58:44.926293 29043 solver.cpp:238]     Train net output #0: loss = 0.140796 (* 1 = 0.140796 loss)
I0428 19:58:44.926302 29043 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:45.001363 29043 solver.cpp:219] Iteration 600 (1332.28 iter/s, 0.0750592s/100 iters), loss = 0.148092
I0428 19:58:45.001394 29043 solver.cpp:238]     Train net output #0: loss = 0.148092 (* 1 = 0.148092 loss)
I0428 19:58:45.001400 29043 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:45.076468 29043 solver.cpp:219] Iteration 700 (1332.15 iter/s, 0.0750664s/100 iters), loss = 0.232396
I0428 19:58:45.076495 29043 solver.cpp:238]     Train net output #0: loss = 0.232396 (* 1 = 0.232396 loss)
I0428 19:58:45.076503 29043 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:45.147444 29043 solver.cpp:219] Iteration 800 (1409.63 iter/s, 0.0709407s/100 iters), loss = 0.242975
I0428 19:58:45.147483 29043 solver.cpp:238]     Train net output #0: loss = 0.242975 (* 1 = 0.242975 loss)
I0428 19:58:45.147490 29043 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:45.218050 29043 solver.cpp:219] Iteration 900 (1416.95 iter/s, 0.0705741s/100 iters), loss = 0.18351
I0428 19:58:45.218088 29043 solver.cpp:238]     Train net output #0: loss = 0.18351 (* 1 = 0.18351 loss)
I0428 19:58:45.218094 29043 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:45.241430 29049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:45.288250 29043 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:45.289063 29043 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:45.289561 29043 solver.cpp:311] Iteration 1000, loss = 0.178343
I0428 19:58:45.289577 29043 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:45.334422 29050 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:45.334905 29043 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 19:58:45.334926 29043 solver.cpp:398]     Test net output #1: loss = 0.10477 (* 1 = 0.10477 loss)
I0428 19:58:45.334931 29043 solver.cpp:316] Optimization Done.
I0428 19:58:45.334934 29043 caffe.cpp:259] Optimization Done.
