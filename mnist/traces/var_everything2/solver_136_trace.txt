I0428 19:31:53.064703 22693 caffe.cpp:218] Using GPUs 0
I0428 19:31:53.100636 22693 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:53.608726 22693 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test136.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:53.608875 22693 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test136.prototxt
I0428 19:31:53.609243 22693 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:53.609261 22693 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:53.609349 22693 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:53.609422 22693 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:53.609521 22693 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:53.609545 22693 net.cpp:86] Creating Layer mnist
I0428 19:31:53.609555 22693 net.cpp:382] mnist -> data
I0428 19:31:53.609575 22693 net.cpp:382] mnist -> label
I0428 19:31:53.610659 22693 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:53.613119 22693 net.cpp:124] Setting up mnist
I0428 19:31:53.613140 22693 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:53.613147 22693 net.cpp:131] Top shape: 64 (64)
I0428 19:31:53.613150 22693 net.cpp:139] Memory required for data: 200960
I0428 19:31:53.613157 22693 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:53.613198 22693 net.cpp:86] Creating Layer conv0
I0428 19:31:53.613204 22693 net.cpp:408] conv0 <- data
I0428 19:31:53.613216 22693 net.cpp:382] conv0 -> conv0
I0428 19:31:53.902168 22693 net.cpp:124] Setting up conv0
I0428 19:31:53.902215 22693 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:53.902220 22693 net.cpp:139] Memory required for data: 1675520
I0428 19:31:53.902237 22693 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:53.902251 22693 net.cpp:86] Creating Layer pool0
I0428 19:31:53.902274 22693 net.cpp:408] pool0 <- conv0
I0428 19:31:53.902281 22693 net.cpp:382] pool0 -> pool0
I0428 19:31:53.902338 22693 net.cpp:124] Setting up pool0
I0428 19:31:53.902346 22693 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:53.902349 22693 net.cpp:139] Memory required for data: 2044160
I0428 19:31:53.902354 22693 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:53.902361 22693 net.cpp:86] Creating Layer ip1
I0428 19:31:53.902365 22693 net.cpp:408] ip1 <- pool0
I0428 19:31:53.902371 22693 net.cpp:382] ip1 -> ip1
I0428 19:31:53.903503 22693 net.cpp:124] Setting up ip1
I0428 19:31:53.903519 22693 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:53.903523 22693 net.cpp:139] Memory required for data: 2046720
I0428 19:31:53.903534 22693 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:53.903542 22693 net.cpp:86] Creating Layer relu1
I0428 19:31:53.903547 22693 net.cpp:408] relu1 <- ip1
I0428 19:31:53.903553 22693 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:53.903743 22693 net.cpp:124] Setting up relu1
I0428 19:31:53.903754 22693 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:53.903758 22693 net.cpp:139] Memory required for data: 2049280
I0428 19:31:53.903761 22693 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:53.903769 22693 net.cpp:86] Creating Layer ip2
I0428 19:31:53.903772 22693 net.cpp:408] ip2 <- ip1
I0428 19:31:53.903779 22693 net.cpp:382] ip2 -> ip2
I0428 19:31:53.903892 22693 net.cpp:124] Setting up ip2
I0428 19:31:53.903899 22693 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:53.903903 22693 net.cpp:139] Memory required for data: 2062080
I0428 19:31:53.903913 22693 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:53.903918 22693 net.cpp:86] Creating Layer relu2
I0428 19:31:53.903921 22693 net.cpp:408] relu2 <- ip2
I0428 19:31:53.903926 22693 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:53.904745 22693 net.cpp:124] Setting up relu2
I0428 19:31:53.904759 22693 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:53.904763 22693 net.cpp:139] Memory required for data: 2074880
I0428 19:31:53.904767 22693 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:53.904778 22693 net.cpp:86] Creating Layer ip3
I0428 19:31:53.904780 22693 net.cpp:408] ip3 <- ip2
I0428 19:31:53.904788 22693 net.cpp:382] ip3 -> ip3
I0428 19:31:53.904913 22693 net.cpp:124] Setting up ip3
I0428 19:31:53.904922 22693 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:53.904927 22693 net.cpp:139] Memory required for data: 2077440
I0428 19:31:53.904933 22693 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:53.904940 22693 net.cpp:86] Creating Layer relu3
I0428 19:31:53.904944 22693 net.cpp:408] relu3 <- ip3
I0428 19:31:53.904949 22693 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:53.905131 22693 net.cpp:124] Setting up relu3
I0428 19:31:53.905141 22693 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:53.905144 22693 net.cpp:139] Memory required for data: 2080000
I0428 19:31:53.905148 22693 layer_factory.hpp:77] Creating layer loss
I0428 19:31:53.905154 22693 net.cpp:86] Creating Layer loss
I0428 19:31:53.905158 22693 net.cpp:408] loss <- ip3
I0428 19:31:53.905163 22693 net.cpp:408] loss <- label
I0428 19:31:53.905169 22693 net.cpp:382] loss -> loss
I0428 19:31:53.905189 22693 layer_factory.hpp:77] Creating layer loss
I0428 19:31:53.905437 22693 net.cpp:124] Setting up loss
I0428 19:31:53.905447 22693 net.cpp:131] Top shape: (1)
I0428 19:31:53.905452 22693 net.cpp:134]     with loss weight 1
I0428 19:31:53.905467 22693 net.cpp:139] Memory required for data: 2080004
I0428 19:31:53.905470 22693 net.cpp:200] loss needs backward computation.
I0428 19:31:53.905474 22693 net.cpp:200] relu3 needs backward computation.
I0428 19:31:53.905478 22693 net.cpp:200] ip3 needs backward computation.
I0428 19:31:53.905481 22693 net.cpp:200] relu2 needs backward computation.
I0428 19:31:53.905484 22693 net.cpp:200] ip2 needs backward computation.
I0428 19:31:53.905488 22693 net.cpp:200] relu1 needs backward computation.
I0428 19:31:53.905490 22693 net.cpp:200] ip1 needs backward computation.
I0428 19:31:53.905506 22693 net.cpp:200] pool0 needs backward computation.
I0428 19:31:53.905509 22693 net.cpp:200] conv0 needs backward computation.
I0428 19:31:53.905514 22693 net.cpp:202] mnist does not need backward computation.
I0428 19:31:53.905516 22693 net.cpp:244] This network produces output loss
I0428 19:31:53.905525 22693 net.cpp:257] Network initialization done.
I0428 19:31:53.905828 22693 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test136.prototxt
I0428 19:31:53.905855 22693 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:53.905946 22693 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:53.906013 22693 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:53.906062 22693 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:53.906077 22693 net.cpp:86] Creating Layer mnist
I0428 19:31:53.906082 22693 net.cpp:382] mnist -> data
I0428 19:31:53.906090 22693 net.cpp:382] mnist -> label
I0428 19:31:53.906184 22693 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:53.908219 22693 net.cpp:124] Setting up mnist
I0428 19:31:53.908234 22693 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:53.908241 22693 net.cpp:131] Top shape: 100 (100)
I0428 19:31:53.908244 22693 net.cpp:139] Memory required for data: 314000
I0428 19:31:53.908248 22693 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:53.908259 22693 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:53.908264 22693 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:53.908269 22693 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:53.908277 22693 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:53.908354 22693 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:53.908362 22693 net.cpp:131] Top shape: 100 (100)
I0428 19:31:53.908367 22693 net.cpp:131] Top shape: 100 (100)
I0428 19:31:53.908370 22693 net.cpp:139] Memory required for data: 314800
I0428 19:31:53.908385 22693 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:53.908394 22693 net.cpp:86] Creating Layer conv0
I0428 19:31:53.908399 22693 net.cpp:408] conv0 <- data
I0428 19:31:53.908406 22693 net.cpp:382] conv0 -> conv0
I0428 19:31:53.910126 22693 net.cpp:124] Setting up conv0
I0428 19:31:53.910143 22693 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:53.910147 22693 net.cpp:139] Memory required for data: 2618800
I0428 19:31:53.910157 22693 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:53.910166 22693 net.cpp:86] Creating Layer pool0
I0428 19:31:53.910171 22693 net.cpp:408] pool0 <- conv0
I0428 19:31:53.910176 22693 net.cpp:382] pool0 -> pool0
I0428 19:31:53.910218 22693 net.cpp:124] Setting up pool0
I0428 19:31:53.910223 22693 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:53.910228 22693 net.cpp:139] Memory required for data: 3194800
I0428 19:31:53.910230 22693 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:53.910238 22693 net.cpp:86] Creating Layer ip1
I0428 19:31:53.910243 22693 net.cpp:408] ip1 <- pool0
I0428 19:31:53.910248 22693 net.cpp:382] ip1 -> ip1
I0428 19:31:53.910444 22693 net.cpp:124] Setting up ip1
I0428 19:31:53.910454 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.910457 22693 net.cpp:139] Memory required for data: 3198800
I0428 19:31:53.910465 22693 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:53.910471 22693 net.cpp:86] Creating Layer relu1
I0428 19:31:53.910475 22693 net.cpp:408] relu1 <- ip1
I0428 19:31:53.910478 22693 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:53.910671 22693 net.cpp:124] Setting up relu1
I0428 19:31:53.910682 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.910686 22693 net.cpp:139] Memory required for data: 3202800
I0428 19:31:53.910689 22693 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:53.910696 22693 net.cpp:86] Creating Layer ip2
I0428 19:31:53.910699 22693 net.cpp:408] ip2 <- ip1
I0428 19:31:53.910706 22693 net.cpp:382] ip2 -> ip2
I0428 19:31:53.910859 22693 net.cpp:124] Setting up ip2
I0428 19:31:53.910874 22693 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:53.910878 22693 net.cpp:139] Memory required for data: 3222800
I0428 19:31:53.910887 22693 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:53.910892 22693 net.cpp:86] Creating Layer relu2
I0428 19:31:53.910898 22693 net.cpp:408] relu2 <- ip2
I0428 19:31:53.910903 22693 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:53.911767 22693 net.cpp:124] Setting up relu2
I0428 19:31:53.911779 22693 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:53.911783 22693 net.cpp:139] Memory required for data: 3242800
I0428 19:31:53.911787 22693 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:53.911798 22693 net.cpp:86] Creating Layer ip3
I0428 19:31:53.911801 22693 net.cpp:408] ip3 <- ip2
I0428 19:31:53.911808 22693 net.cpp:382] ip3 -> ip3
I0428 19:31:53.911928 22693 net.cpp:124] Setting up ip3
I0428 19:31:53.911938 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.911942 22693 net.cpp:139] Memory required for data: 3246800
I0428 19:31:53.911948 22693 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:53.911955 22693 net.cpp:86] Creating Layer relu3
I0428 19:31:53.911958 22693 net.cpp:408] relu3 <- ip3
I0428 19:31:53.911963 22693 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:53.912137 22693 net.cpp:124] Setting up relu3
I0428 19:31:53.912147 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.912150 22693 net.cpp:139] Memory required for data: 3250800
I0428 19:31:53.912154 22693 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:53.912161 22693 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:53.912164 22693 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:53.912169 22693 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:53.912176 22693 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:53.912217 22693 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:53.912225 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.912230 22693 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:53.912243 22693 net.cpp:139] Memory required for data: 3258800
I0428 19:31:53.912246 22693 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:53.912252 22693 net.cpp:86] Creating Layer accuracy
I0428 19:31:53.912256 22693 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:53.912261 22693 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:53.912268 22693 net.cpp:382] accuracy -> accuracy
I0428 19:31:53.912276 22693 net.cpp:124] Setting up accuracy
I0428 19:31:53.912281 22693 net.cpp:131] Top shape: (1)
I0428 19:31:53.912284 22693 net.cpp:139] Memory required for data: 3258804
I0428 19:31:53.912288 22693 layer_factory.hpp:77] Creating layer loss
I0428 19:31:53.912292 22693 net.cpp:86] Creating Layer loss
I0428 19:31:53.912297 22693 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:53.912300 22693 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:53.912307 22693 net.cpp:382] loss -> loss
I0428 19:31:53.912330 22693 layer_factory.hpp:77] Creating layer loss
I0428 19:31:53.912606 22693 net.cpp:124] Setting up loss
I0428 19:31:53.912616 22693 net.cpp:131] Top shape: (1)
I0428 19:31:53.912619 22693 net.cpp:134]     with loss weight 1
I0428 19:31:53.912626 22693 net.cpp:139] Memory required for data: 3258808
I0428 19:31:53.912629 22693 net.cpp:200] loss needs backward computation.
I0428 19:31:53.912633 22693 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:53.912638 22693 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:53.912642 22693 net.cpp:200] relu3 needs backward computation.
I0428 19:31:53.912644 22693 net.cpp:200] ip3 needs backward computation.
I0428 19:31:53.912647 22693 net.cpp:200] relu2 needs backward computation.
I0428 19:31:53.912650 22693 net.cpp:200] ip2 needs backward computation.
I0428 19:31:53.912654 22693 net.cpp:200] relu1 needs backward computation.
I0428 19:31:53.912657 22693 net.cpp:200] ip1 needs backward computation.
I0428 19:31:53.912660 22693 net.cpp:200] pool0 needs backward computation.
I0428 19:31:53.912663 22693 net.cpp:200] conv0 needs backward computation.
I0428 19:31:53.912667 22693 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:53.912672 22693 net.cpp:202] mnist does not need backward computation.
I0428 19:31:53.912674 22693 net.cpp:244] This network produces output accuracy
I0428 19:31:53.912678 22693 net.cpp:244] This network produces output loss
I0428 19:31:53.912689 22693 net.cpp:257] Network initialization done.
I0428 19:31:53.912729 22693 solver.cpp:56] Solver scaffolding done.
I0428 19:31:53.913028 22693 caffe.cpp:248] Starting Optimization
I0428 19:31:53.913035 22693 solver.cpp:273] Solving LeNet
I0428 19:31:53.913038 22693 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:53.913851 22693 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:53.917528 22693 blocking_queue.cpp:49] Waiting for data
I0428 19:31:53.987156 22700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:53.987682 22693 solver.cpp:398]     Test net output #0: accuracy = 0.0991
I0428 19:31:53.987716 22693 solver.cpp:398]     Test net output #1: loss = 2.29701 (* 1 = 2.29701 loss)
I0428 19:31:53.990823 22693 solver.cpp:219] Iteration 0 (0 iter/s, 0.0777564s/100 iters), loss = 2.28896
I0428 19:31:53.990862 22693 solver.cpp:238]     Train net output #0: loss = 2.28896 (* 1 = 2.28896 loss)
I0428 19:31:53.990888 22693 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:54.054194 22693 solver.cpp:219] Iteration 100 (1578.97 iter/s, 0.0633323s/100 iters), loss = 0.91872
I0428 19:31:54.054250 22693 solver.cpp:238]     Train net output #0: loss = 0.91872 (* 1 = 0.91872 loss)
I0428 19:31:54.054257 22693 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:54.116931 22693 solver.cpp:219] Iteration 200 (1595.2 iter/s, 0.0626883s/100 iters), loss = 0.965173
I0428 19:31:54.116955 22693 solver.cpp:238]     Train net output #0: loss = 0.965173 (* 1 = 0.965173 loss)
I0428 19:31:54.116961 22693 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:54.180326 22693 solver.cpp:219] Iteration 300 (1578.18 iter/s, 0.0633642s/100 iters), loss = 0.807961
I0428 19:31:54.180349 22693 solver.cpp:238]     Train net output #0: loss = 0.807961 (* 1 = 0.807961 loss)
I0428 19:31:54.180356 22693 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:54.243425 22693 solver.cpp:219] Iteration 400 (1585.62 iter/s, 0.0630669s/100 iters), loss = 0.657892
I0428 19:31:54.243455 22693 solver.cpp:238]     Train net output #0: loss = 0.657892 (* 1 = 0.657892 loss)
I0428 19:31:54.243463 22693 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:54.306133 22693 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:54.358784 22700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:54.359295 22693 solver.cpp:398]     Test net output #0: accuracy = 0.7501
I0428 19:31:54.359330 22693 solver.cpp:398]     Test net output #1: loss = 0.665384 (* 1 = 0.665384 loss)
I0428 19:31:54.359989 22693 solver.cpp:219] Iteration 500 (858.192 iter/s, 0.116524s/100 iters), loss = 0.670269
I0428 19:31:54.360025 22693 solver.cpp:238]     Train net output #0: loss = 0.670269 (* 1 = 0.670269 loss)
I0428 19:31:54.360031 22693 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:54.422830 22693 solver.cpp:219] Iteration 600 (1592.07 iter/s, 0.0628113s/100 iters), loss = 0.642234
I0428 19:31:54.422868 22693 solver.cpp:238]     Train net output #0: loss = 0.642234 (* 1 = 0.642234 loss)
I0428 19:31:54.422873 22693 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:54.486198 22693 solver.cpp:219] Iteration 700 (1578.84 iter/s, 0.0633375s/100 iters), loss = 0.371626
I0428 19:31:54.486235 22693 solver.cpp:238]     Train net output #0: loss = 0.371626 (* 1 = 0.371626 loss)
I0428 19:31:54.486240 22693 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:54.549713 22693 solver.cpp:219] Iteration 800 (1575.18 iter/s, 0.0634849s/100 iters), loss = 0.808643
I0428 19:31:54.549751 22693 solver.cpp:238]     Train net output #0: loss = 0.808643 (* 1 = 0.808643 loss)
I0428 19:31:54.549757 22693 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:54.612659 22693 solver.cpp:219] Iteration 900 (1589.46 iter/s, 0.0629146s/100 iters), loss = 0.442315
I0428 19:31:54.612699 22693 solver.cpp:238]     Train net output #0: loss = 0.442315 (* 1 = 0.442315 loss)
I0428 19:31:54.612704 22693 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:54.633810 22699 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:54.675205 22693 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:54.675992 22693 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:54.676501 22693 solver.cpp:311] Iteration 1000, loss = 0.253261
I0428 19:31:54.676517 22693 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:54.722856 22700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:54.723403 22693 solver.cpp:398]     Test net output #0: accuracy = 0.9388
I0428 19:31:54.723419 22693 solver.cpp:398]     Test net output #1: loss = 0.199738 (* 1 = 0.199738 loss)
I0428 19:31:54.723439 22693 solver.cpp:316] Optimization Done.
I0428 19:31:54.723443 22693 caffe.cpp:259] Optimization Done.
