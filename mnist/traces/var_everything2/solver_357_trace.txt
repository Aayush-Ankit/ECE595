I0428 19:41:11.058670 24761 caffe.cpp:218] Using GPUs 0
I0428 19:41:11.098552 24761 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:11.614624 24761 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test357.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:11.614790 24761 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test357.prototxt
I0428 19:41:11.615176 24761 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:11.615198 24761 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:11.615298 24761 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:11.615404 24761 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:11.615545 24761 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:11.615576 24761 net.cpp:86] Creating Layer mnist
I0428 19:41:11.615589 24761 net.cpp:382] mnist -> data
I0428 19:41:11.615619 24761 net.cpp:382] mnist -> label
I0428 19:41:11.616868 24761 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:11.619328 24761 net.cpp:124] Setting up mnist
I0428 19:41:11.619349 24761 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:11.619359 24761 net.cpp:131] Top shape: 64 (64)
I0428 19:41:11.619364 24761 net.cpp:139] Memory required for data: 200960
I0428 19:41:11.619374 24761 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:11.619400 24761 net.cpp:86] Creating Layer conv0
I0428 19:41:11.619410 24761 net.cpp:408] conv0 <- data
I0428 19:41:11.619428 24761 net.cpp:382] conv0 -> conv0
I0428 19:41:11.890681 24761 net.cpp:124] Setting up conv0
I0428 19:41:11.890708 24761 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:11.890714 24761 net.cpp:139] Memory required for data: 495872
I0428 19:41:11.890756 24761 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:11.890775 24761 net.cpp:86] Creating Layer pool0
I0428 19:41:11.890782 24761 net.cpp:408] pool0 <- conv0
I0428 19:41:11.890792 24761 net.cpp:382] pool0 -> pool0
I0428 19:41:11.890862 24761 net.cpp:124] Setting up pool0
I0428 19:41:11.890872 24761 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:11.890875 24761 net.cpp:139] Memory required for data: 569600
I0428 19:41:11.890880 24761 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:11.890900 24761 net.cpp:86] Creating Layer conv1
I0428 19:41:11.890905 24761 net.cpp:408] conv1 <- pool0
I0428 19:41:11.890914 24761 net.cpp:382] conv1 -> conv1
I0428 19:41:11.892760 24761 net.cpp:124] Setting up conv1
I0428 19:41:11.892776 24761 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:11.892781 24761 net.cpp:139] Memory required for data: 733440
I0428 19:41:11.892793 24761 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:11.892804 24761 net.cpp:86] Creating Layer pool1
I0428 19:41:11.892815 24761 net.cpp:408] pool1 <- conv1
I0428 19:41:11.892843 24761 net.cpp:382] pool1 -> pool1
I0428 19:41:11.892917 24761 net.cpp:124] Setting up pool1
I0428 19:41:11.892926 24761 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:11.892931 24761 net.cpp:139] Memory required for data: 774400
I0428 19:41:11.892936 24761 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:11.892947 24761 net.cpp:86] Creating Layer ip1
I0428 19:41:11.892952 24761 net.cpp:408] ip1 <- pool1
I0428 19:41:11.892961 24761 net.cpp:382] ip1 -> ip1
I0428 19:41:11.893942 24761 net.cpp:124] Setting up ip1
I0428 19:41:11.893954 24761 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:11.893960 24761 net.cpp:139] Memory required for data: 780800
I0428 19:41:11.893971 24761 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:11.893980 24761 net.cpp:86] Creating Layer relu1
I0428 19:41:11.893986 24761 net.cpp:408] relu1 <- ip1
I0428 19:41:11.893993 24761 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:11.894173 24761 net.cpp:124] Setting up relu1
I0428 19:41:11.894183 24761 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:11.894188 24761 net.cpp:139] Memory required for data: 787200
I0428 19:41:11.894193 24761 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:11.894203 24761 net.cpp:86] Creating Layer ip2
I0428 19:41:11.894208 24761 net.cpp:408] ip2 <- ip1
I0428 19:41:11.894217 24761 net.cpp:382] ip2 -> ip2
I0428 19:41:11.894315 24761 net.cpp:124] Setting up ip2
I0428 19:41:11.894322 24761 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:11.894327 24761 net.cpp:139] Memory required for data: 789760
I0428 19:41:11.894336 24761 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:11.894345 24761 net.cpp:86] Creating Layer relu2
I0428 19:41:11.894354 24761 net.cpp:408] relu2 <- ip2
I0428 19:41:11.894361 24761 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:11.895056 24761 net.cpp:124] Setting up relu2
I0428 19:41:11.895071 24761 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:11.895076 24761 net.cpp:139] Memory required for data: 792320
I0428 19:41:11.895081 24761 layer_factory.hpp:77] Creating layer loss
I0428 19:41:11.895089 24761 net.cpp:86] Creating Layer loss
I0428 19:41:11.895094 24761 net.cpp:408] loss <- ip2
I0428 19:41:11.895102 24761 net.cpp:408] loss <- label
I0428 19:41:11.895109 24761 net.cpp:382] loss -> loss
I0428 19:41:11.895129 24761 layer_factory.hpp:77] Creating layer loss
I0428 19:41:11.895375 24761 net.cpp:124] Setting up loss
I0428 19:41:11.895386 24761 net.cpp:131] Top shape: (1)
I0428 19:41:11.895391 24761 net.cpp:134]     with loss weight 1
I0428 19:41:11.895411 24761 net.cpp:139] Memory required for data: 792324
I0428 19:41:11.895416 24761 net.cpp:200] loss needs backward computation.
I0428 19:41:11.895422 24761 net.cpp:200] relu2 needs backward computation.
I0428 19:41:11.895427 24761 net.cpp:200] ip2 needs backward computation.
I0428 19:41:11.895432 24761 net.cpp:200] relu1 needs backward computation.
I0428 19:41:11.895437 24761 net.cpp:200] ip1 needs backward computation.
I0428 19:41:11.895442 24761 net.cpp:200] pool1 needs backward computation.
I0428 19:41:11.895459 24761 net.cpp:200] conv1 needs backward computation.
I0428 19:41:11.895465 24761 net.cpp:200] pool0 needs backward computation.
I0428 19:41:11.895470 24761 net.cpp:200] conv0 needs backward computation.
I0428 19:41:11.895476 24761 net.cpp:202] mnist does not need backward computation.
I0428 19:41:11.895481 24761 net.cpp:244] This network produces output loss
I0428 19:41:11.895493 24761 net.cpp:257] Network initialization done.
I0428 19:41:11.895783 24761 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test357.prototxt
I0428 19:41:11.895813 24761 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:11.895897 24761 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:11.895987 24761 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:11.896044 24761 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:11.896059 24761 net.cpp:86] Creating Layer mnist
I0428 19:41:11.896067 24761 net.cpp:382] mnist -> data
I0428 19:41:11.896077 24761 net.cpp:382] mnist -> label
I0428 19:41:11.896188 24761 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:11.898416 24761 net.cpp:124] Setting up mnist
I0428 19:41:11.898447 24761 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:11.898454 24761 net.cpp:131] Top shape: 100 (100)
I0428 19:41:11.898459 24761 net.cpp:139] Memory required for data: 314000
I0428 19:41:11.898465 24761 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:11.898474 24761 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:11.898480 24761 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:11.898488 24761 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:11.898514 24761 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:11.898603 24761 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:11.898622 24761 net.cpp:131] Top shape: 100 (100)
I0428 19:41:11.898629 24761 net.cpp:131] Top shape: 100 (100)
I0428 19:41:11.898634 24761 net.cpp:139] Memory required for data: 314800
I0428 19:41:11.898639 24761 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:11.898653 24761 net.cpp:86] Creating Layer conv0
I0428 19:41:11.898659 24761 net.cpp:408] conv0 <- data
I0428 19:41:11.898669 24761 net.cpp:382] conv0 -> conv0
I0428 19:41:11.900264 24761 net.cpp:124] Setting up conv0
I0428 19:41:11.900279 24761 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:11.900285 24761 net.cpp:139] Memory required for data: 775600
I0428 19:41:11.900297 24761 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:11.900306 24761 net.cpp:86] Creating Layer pool0
I0428 19:41:11.900313 24761 net.cpp:408] pool0 <- conv0
I0428 19:41:11.900321 24761 net.cpp:382] pool0 -> pool0
I0428 19:41:11.900359 24761 net.cpp:124] Setting up pool0
I0428 19:41:11.900367 24761 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:11.900372 24761 net.cpp:139] Memory required for data: 890800
I0428 19:41:11.900377 24761 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:11.900388 24761 net.cpp:86] Creating Layer conv1
I0428 19:41:11.900395 24761 net.cpp:408] conv1 <- pool0
I0428 19:41:11.900403 24761 net.cpp:382] conv1 -> conv1
I0428 19:41:11.901950 24761 net.cpp:124] Setting up conv1
I0428 19:41:11.901965 24761 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:11.901971 24761 net.cpp:139] Memory required for data: 1146800
I0428 19:41:11.901986 24761 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:11.901996 24761 net.cpp:86] Creating Layer pool1
I0428 19:41:11.902004 24761 net.cpp:408] pool1 <- conv1
I0428 19:41:11.902014 24761 net.cpp:382] pool1 -> pool1
I0428 19:41:11.902057 24761 net.cpp:124] Setting up pool1
I0428 19:41:11.902066 24761 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:11.902071 24761 net.cpp:139] Memory required for data: 1210800
I0428 19:41:11.902076 24761 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:11.902086 24761 net.cpp:86] Creating Layer ip1
I0428 19:41:11.902091 24761 net.cpp:408] ip1 <- pool1
I0428 19:41:11.902117 24761 net.cpp:382] ip1 -> ip1
I0428 19:41:11.902276 24761 net.cpp:124] Setting up ip1
I0428 19:41:11.902285 24761 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:11.902290 24761 net.cpp:139] Memory required for data: 1220800
I0428 19:41:11.902303 24761 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:11.902312 24761 net.cpp:86] Creating Layer relu1
I0428 19:41:11.902319 24761 net.cpp:408] relu1 <- ip1
I0428 19:41:11.902328 24761 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:11.902513 24761 net.cpp:124] Setting up relu1
I0428 19:41:11.902523 24761 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:11.902529 24761 net.cpp:139] Memory required for data: 1230800
I0428 19:41:11.902534 24761 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:11.902544 24761 net.cpp:86] Creating Layer ip2
I0428 19:41:11.902551 24761 net.cpp:408] ip2 <- ip1
I0428 19:41:11.902560 24761 net.cpp:382] ip2 -> ip2
I0428 19:41:11.902686 24761 net.cpp:124] Setting up ip2
I0428 19:41:11.902698 24761 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:11.902711 24761 net.cpp:139] Memory required for data: 1234800
I0428 19:41:11.902724 24761 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:11.902729 24761 net.cpp:86] Creating Layer relu2
I0428 19:41:11.902731 24761 net.cpp:408] relu2 <- ip2
I0428 19:41:11.902736 24761 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:11.902931 24761 net.cpp:124] Setting up relu2
I0428 19:41:11.902941 24761 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:11.902945 24761 net.cpp:139] Memory required for data: 1238800
I0428 19:41:11.902947 24761 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:41:11.902952 24761 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:41:11.902956 24761 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:41:11.902959 24761 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:41:11.902976 24761 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:41:11.903048 24761 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:41:11.903054 24761 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:11.903059 24761 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:11.903061 24761 net.cpp:139] Memory required for data: 1246800
I0428 19:41:11.903064 24761 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:11.903069 24761 net.cpp:86] Creating Layer accuracy
I0428 19:41:11.903074 24761 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:41:11.903077 24761 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:11.903081 24761 net.cpp:382] accuracy -> accuracy
I0428 19:41:11.903089 24761 net.cpp:124] Setting up accuracy
I0428 19:41:11.903093 24761 net.cpp:131] Top shape: (1)
I0428 19:41:11.903096 24761 net.cpp:139] Memory required for data: 1246804
I0428 19:41:11.903100 24761 layer_factory.hpp:77] Creating layer loss
I0428 19:41:11.903103 24761 net.cpp:86] Creating Layer loss
I0428 19:41:11.903107 24761 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:41:11.903110 24761 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:11.903115 24761 net.cpp:382] loss -> loss
I0428 19:41:11.903120 24761 layer_factory.hpp:77] Creating layer loss
I0428 19:41:11.903353 24761 net.cpp:124] Setting up loss
I0428 19:41:11.903362 24761 net.cpp:131] Top shape: (1)
I0428 19:41:11.903367 24761 net.cpp:134]     with loss weight 1
I0428 19:41:11.903373 24761 net.cpp:139] Memory required for data: 1246808
I0428 19:41:11.903376 24761 net.cpp:200] loss needs backward computation.
I0428 19:41:11.903380 24761 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:11.903384 24761 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:41:11.903388 24761 net.cpp:200] relu2 needs backward computation.
I0428 19:41:11.903391 24761 net.cpp:200] ip2 needs backward computation.
I0428 19:41:11.903394 24761 net.cpp:200] relu1 needs backward computation.
I0428 19:41:11.903398 24761 net.cpp:200] ip1 needs backward computation.
I0428 19:41:11.903401 24761 net.cpp:200] pool1 needs backward computation.
I0428 19:41:11.903404 24761 net.cpp:200] conv1 needs backward computation.
I0428 19:41:11.903408 24761 net.cpp:200] pool0 needs backward computation.
I0428 19:41:11.903410 24761 net.cpp:200] conv0 needs backward computation.
I0428 19:41:11.903415 24761 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:11.903419 24761 net.cpp:202] mnist does not need backward computation.
I0428 19:41:11.903421 24761 net.cpp:244] This network produces output accuracy
I0428 19:41:11.903436 24761 net.cpp:244] This network produces output loss
I0428 19:41:11.903446 24761 net.cpp:257] Network initialization done.
I0428 19:41:11.903489 24761 solver.cpp:56] Solver scaffolding done.
I0428 19:41:11.903764 24761 caffe.cpp:248] Starting Optimization
I0428 19:41:11.903780 24761 solver.cpp:273] Solving LeNet
I0428 19:41:11.903784 24761 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:11.904621 24761 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:11.906460 24761 blocking_queue.cpp:49] Waiting for data
I0428 19:41:11.976320 24768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:11.976814 24761 solver.cpp:398]     Test net output #0: accuracy = 0.0912
I0428 19:41:11.976842 24761 solver.cpp:398]     Test net output #1: loss = 2.30078 (* 1 = 2.30078 loss)
I0428 19:41:11.978885 24761 solver.cpp:219] Iteration 0 (-1.12789e-30 iter/s, 0.0750643s/100 iters), loss = 2.30927
I0428 19:41:11.978917 24761 solver.cpp:238]     Train net output #0: loss = 2.30927 (* 1 = 2.30927 loss)
I0428 19:41:11.978932 24761 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:12.051625 24761 solver.cpp:219] Iteration 100 (1375.54 iter/s, 0.0726989s/100 iters), loss = 0.311147
I0428 19:41:12.051654 24761 solver.cpp:238]     Train net output #0: loss = 0.311147 (* 1 = 0.311147 loss)
I0428 19:41:12.051661 24761 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:12.117673 24761 solver.cpp:219] Iteration 200 (1514.9 iter/s, 0.066011s/100 iters), loss = 0.301926
I0428 19:41:12.117709 24761 solver.cpp:238]     Train net output #0: loss = 0.301926 (* 1 = 0.301926 loss)
I0428 19:41:12.117717 24761 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:12.182404 24761 solver.cpp:219] Iteration 300 (1545.93 iter/s, 0.0646861s/100 iters), loss = 0.252921
I0428 19:41:12.182442 24761 solver.cpp:238]     Train net output #0: loss = 0.252921 (* 1 = 0.252921 loss)
I0428 19:41:12.182448 24761 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:12.246362 24761 solver.cpp:219] Iteration 400 (1564.28 iter/s, 0.0639273s/100 iters), loss = 0.181977
I0428 19:41:12.246402 24761 solver.cpp:238]     Train net output #0: loss = 0.181977 (* 1 = 0.181977 loss)
I0428 19:41:12.246408 24761 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:12.310966 24761 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:12.363566 24768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:12.363999 24761 solver.cpp:398]     Test net output #0: accuracy = 0.9329
I0428 19:41:12.364035 24761 solver.cpp:398]     Test net output #1: loss = 0.222576 (* 1 = 0.222576 loss)
I0428 19:41:12.364756 24761 solver.cpp:219] Iteration 500 (844.997 iter/s, 0.118344s/100 iters), loss = 0.274136
I0428 19:41:12.364794 24761 solver.cpp:238]     Train net output #0: loss = 0.274136 (* 1 = 0.274136 loss)
I0428 19:41:12.364804 24761 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:12.439380 24761 solver.cpp:219] Iteration 600 (1340.62 iter/s, 0.0745923s/100 iters), loss = 0.179758
I0428 19:41:12.439424 24761 solver.cpp:238]     Train net output #0: loss = 0.179758 (* 1 = 0.179758 loss)
I0428 19:41:12.439430 24761 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:12.504849 24761 solver.cpp:219] Iteration 700 (1528.63 iter/s, 0.0654182s/100 iters), loss = 0.340661
I0428 19:41:12.504889 24761 solver.cpp:238]     Train net output #0: loss = 0.340661 (* 1 = 0.340661 loss)
I0428 19:41:12.504896 24761 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:12.573667 24761 solver.cpp:219] Iteration 800 (1453.84 iter/s, 0.0687832s/100 iters), loss = 0.29793
I0428 19:41:12.573707 24761 solver.cpp:238]     Train net output #0: loss = 0.29793 (* 1 = 0.29793 loss)
I0428 19:41:12.573714 24761 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:12.647302 24761 solver.cpp:219] Iteration 900 (1358.66 iter/s, 0.0736021s/100 iters), loss = 0.343441
I0428 19:41:12.647343 24761 solver.cpp:238]     Train net output #0: loss = 0.343441 (* 1 = 0.343441 loss)
I0428 19:41:12.647351 24761 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:12.669582 24767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:12.721292 24761 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:12.722082 24761 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:12.722643 24761 solver.cpp:311] Iteration 1000, loss = 0.180837
I0428 19:41:12.722666 24761 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:12.799547 24768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:12.800127 24761 solver.cpp:398]     Test net output #0: accuracy = 0.9652
I0428 19:41:12.800153 24761 solver.cpp:398]     Test net output #1: loss = 0.112558 (* 1 = 0.112558 loss)
I0428 19:41:12.800163 24761 solver.cpp:316] Optimization Done.
I0428 19:41:12.800168 24761 caffe.cpp:259] Optimization Done.
