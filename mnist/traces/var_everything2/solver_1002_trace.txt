I0428 20:05:31.219846 30635 caffe.cpp:218] Using GPUs 0
I0428 20:05:31.259048 30635 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:31.714529 30635 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1002.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:31.714663 30635 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1002.prototxt
I0428 20:05:31.715011 30635 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:31.715030 30635 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:31.715126 30635 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:31.715188 30635 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:31.715267 30635 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:31.715289 30635 net.cpp:86] Creating Layer mnist
I0428 20:05:31.715296 30635 net.cpp:382] mnist -> data
I0428 20:05:31.715314 30635 net.cpp:382] mnist -> label
I0428 20:05:31.716218 30635 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:31.718426 30635 net.cpp:124] Setting up mnist
I0428 20:05:31.718457 30635 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:31.718463 30635 net.cpp:131] Top shape: 64 (64)
I0428 20:05:31.718466 30635 net.cpp:139] Memory required for data: 200960
I0428 20:05:31.718472 30635 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:31.718499 30635 net.cpp:86] Creating Layer conv0
I0428 20:05:31.718516 30635 net.cpp:408] conv0 <- data
I0428 20:05:31.718528 30635 net.cpp:382] conv0 -> conv0
I0428 20:05:31.948796 30635 net.cpp:124] Setting up conv0
I0428 20:05:31.948844 30635 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:31.948848 30635 net.cpp:139] Memory required for data: 3887360
I0428 20:05:31.948879 30635 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:31.948891 30635 net.cpp:86] Creating Layer pool0
I0428 20:05:31.948895 30635 net.cpp:408] pool0 <- conv0
I0428 20:05:31.948900 30635 net.cpp:382] pool0 -> pool0
I0428 20:05:31.948958 30635 net.cpp:124] Setting up pool0
I0428 20:05:31.948964 30635 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:31.948967 30635 net.cpp:139] Memory required for data: 4808960
I0428 20:05:31.948971 30635 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:31.948981 30635 net.cpp:86] Creating Layer conv1
I0428 20:05:31.948984 30635 net.cpp:408] conv1 <- pool0
I0428 20:05:31.948989 30635 net.cpp:382] conv1 -> conv1
I0428 20:05:31.951685 30635 net.cpp:124] Setting up conv1
I0428 20:05:31.951699 30635 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:31.951704 30635 net.cpp:139] Memory required for data: 4841728
I0428 20:05:31.951711 30635 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:31.951717 30635 net.cpp:86] Creating Layer pool1
I0428 20:05:31.951720 30635 net.cpp:408] pool1 <- conv1
I0428 20:05:31.951742 30635 net.cpp:382] pool1 -> pool1
I0428 20:05:31.951776 30635 net.cpp:124] Setting up pool1
I0428 20:05:31.951781 30635 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:31.951786 30635 net.cpp:139] Memory required for data: 4849920
I0428 20:05:31.951787 30635 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:31.951794 30635 net.cpp:86] Creating Layer ip1
I0428 20:05:31.951797 30635 net.cpp:408] ip1 <- pool1
I0428 20:05:31.951802 30635 net.cpp:382] ip1 -> ip1
I0428 20:05:31.951892 30635 net.cpp:124] Setting up ip1
I0428 20:05:31.951900 30635 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:31.951903 30635 net.cpp:139] Memory required for data: 4856320
I0428 20:05:31.951910 30635 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:31.951915 30635 net.cpp:86] Creating Layer relu1
I0428 20:05:31.951918 30635 net.cpp:408] relu1 <- ip1
I0428 20:05:31.951922 30635 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:31.952072 30635 net.cpp:124] Setting up relu1
I0428 20:05:31.952081 30635 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:31.952083 30635 net.cpp:139] Memory required for data: 4862720
I0428 20:05:31.952086 30635 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:31.952092 30635 net.cpp:86] Creating Layer ip2
I0428 20:05:31.952095 30635 net.cpp:408] ip2 <- ip1
I0428 20:05:31.952100 30635 net.cpp:382] ip2 -> ip2
I0428 20:05:31.952196 30635 net.cpp:124] Setting up ip2
I0428 20:05:31.952203 30635 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:31.952206 30635 net.cpp:139] Memory required for data: 4875520
I0428 20:05:31.952211 30635 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:31.952217 30635 net.cpp:86] Creating Layer relu2
I0428 20:05:31.952220 30635 net.cpp:408] relu2 <- ip2
I0428 20:05:31.952224 30635 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:31.953049 30635 net.cpp:124] Setting up relu2
I0428 20:05:31.953076 30635 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:31.953080 30635 net.cpp:139] Memory required for data: 4888320
I0428 20:05:31.953099 30635 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:31.953105 30635 net.cpp:86] Creating Layer ip3
I0428 20:05:31.953109 30635 net.cpp:408] ip3 <- ip2
I0428 20:05:31.953114 30635 net.cpp:382] ip3 -> ip3
I0428 20:05:31.953227 30635 net.cpp:124] Setting up ip3
I0428 20:05:31.953234 30635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:31.953238 30635 net.cpp:139] Memory required for data: 4890880
I0428 20:05:31.953244 30635 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:31.953249 30635 net.cpp:86] Creating Layer relu3
I0428 20:05:31.953253 30635 net.cpp:408] relu3 <- ip3
I0428 20:05:31.953258 30635 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:31.953435 30635 net.cpp:124] Setting up relu3
I0428 20:05:31.953445 30635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:31.953449 30635 net.cpp:139] Memory required for data: 4893440
I0428 20:05:31.953451 30635 layer_factory.hpp:77] Creating layer loss
I0428 20:05:31.953457 30635 net.cpp:86] Creating Layer loss
I0428 20:05:31.953460 30635 net.cpp:408] loss <- ip3
I0428 20:05:31.953464 30635 net.cpp:408] loss <- label
I0428 20:05:31.953469 30635 net.cpp:382] loss -> loss
I0428 20:05:31.953485 30635 layer_factory.hpp:77] Creating layer loss
I0428 20:05:31.953728 30635 net.cpp:124] Setting up loss
I0428 20:05:31.953738 30635 net.cpp:131] Top shape: (1)
I0428 20:05:31.953742 30635 net.cpp:134]     with loss weight 1
I0428 20:05:31.953754 30635 net.cpp:139] Memory required for data: 4893444
I0428 20:05:31.953758 30635 net.cpp:200] loss needs backward computation.
I0428 20:05:31.953760 30635 net.cpp:200] relu3 needs backward computation.
I0428 20:05:31.953763 30635 net.cpp:200] ip3 needs backward computation.
I0428 20:05:31.953766 30635 net.cpp:200] relu2 needs backward computation.
I0428 20:05:31.953768 30635 net.cpp:200] ip2 needs backward computation.
I0428 20:05:31.953770 30635 net.cpp:200] relu1 needs backward computation.
I0428 20:05:31.953773 30635 net.cpp:200] ip1 needs backward computation.
I0428 20:05:31.953775 30635 net.cpp:200] pool1 needs backward computation.
I0428 20:05:31.953778 30635 net.cpp:200] conv1 needs backward computation.
I0428 20:05:31.953781 30635 net.cpp:200] pool0 needs backward computation.
I0428 20:05:31.953783 30635 net.cpp:200] conv0 needs backward computation.
I0428 20:05:31.953786 30635 net.cpp:202] mnist does not need backward computation.
I0428 20:05:31.953789 30635 net.cpp:244] This network produces output loss
I0428 20:05:31.953797 30635 net.cpp:257] Network initialization done.
I0428 20:05:31.954111 30635 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1002.prototxt
I0428 20:05:31.954169 30635 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:31.954268 30635 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:31.954355 30635 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:31.954401 30635 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:31.954414 30635 net.cpp:86] Creating Layer mnist
I0428 20:05:31.954421 30635 net.cpp:382] mnist -> data
I0428 20:05:31.954428 30635 net.cpp:382] mnist -> label
I0428 20:05:31.954532 30635 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:31.956476 30635 net.cpp:124] Setting up mnist
I0428 20:05:31.956504 30635 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:31.956526 30635 net.cpp:131] Top shape: 100 (100)
I0428 20:05:31.956529 30635 net.cpp:139] Memory required for data: 314000
I0428 20:05:31.956532 30635 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:31.956562 30635 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:31.956565 30635 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:31.956571 30635 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:31.956578 30635 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:31.956650 30635 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:31.956658 30635 net.cpp:131] Top shape: 100 (100)
I0428 20:05:31.956662 30635 net.cpp:131] Top shape: 100 (100)
I0428 20:05:31.956665 30635 net.cpp:139] Memory required for data: 314800
I0428 20:05:31.956667 30635 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:31.956679 30635 net.cpp:86] Creating Layer conv0
I0428 20:05:31.956682 30635 net.cpp:408] conv0 <- data
I0428 20:05:31.956687 30635 net.cpp:382] conv0 -> conv0
I0428 20:05:31.958484 30635 net.cpp:124] Setting up conv0
I0428 20:05:31.958498 30635 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:31.958518 30635 net.cpp:139] Memory required for data: 6074800
I0428 20:05:31.958526 30635 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:31.958533 30635 net.cpp:86] Creating Layer pool0
I0428 20:05:31.958535 30635 net.cpp:408] pool0 <- conv0
I0428 20:05:31.958541 30635 net.cpp:382] pool0 -> pool0
I0428 20:05:31.958577 30635 net.cpp:124] Setting up pool0
I0428 20:05:31.958582 30635 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:31.958585 30635 net.cpp:139] Memory required for data: 7514800
I0428 20:05:31.958588 30635 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:31.958598 30635 net.cpp:86] Creating Layer conv1
I0428 20:05:31.958601 30635 net.cpp:408] conv1 <- pool0
I0428 20:05:31.958606 30635 net.cpp:382] conv1 -> conv1
I0428 20:05:31.960778 30635 net.cpp:124] Setting up conv1
I0428 20:05:31.960808 30635 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:31.960819 30635 net.cpp:139] Memory required for data: 7566000
I0428 20:05:31.960827 30635 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:31.960835 30635 net.cpp:86] Creating Layer pool1
I0428 20:05:31.960839 30635 net.cpp:408] pool1 <- conv1
I0428 20:05:31.960842 30635 net.cpp:382] pool1 -> pool1
I0428 20:05:31.960918 30635 net.cpp:124] Setting up pool1
I0428 20:05:31.960925 30635 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:31.960927 30635 net.cpp:139] Memory required for data: 7578800
I0428 20:05:31.960930 30635 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:31.960937 30635 net.cpp:86] Creating Layer ip1
I0428 20:05:31.960940 30635 net.cpp:408] ip1 <- pool1
I0428 20:05:31.960945 30635 net.cpp:382] ip1 -> ip1
I0428 20:05:31.961089 30635 net.cpp:124] Setting up ip1
I0428 20:05:31.961098 30635 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:31.961112 30635 net.cpp:139] Memory required for data: 7588800
I0428 20:05:31.961120 30635 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:31.961125 30635 net.cpp:86] Creating Layer relu1
I0428 20:05:31.961128 30635 net.cpp:408] relu1 <- ip1
I0428 20:05:31.961150 30635 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:31.961369 30635 net.cpp:124] Setting up relu1
I0428 20:05:31.961379 30635 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:31.961381 30635 net.cpp:139] Memory required for data: 7598800
I0428 20:05:31.961385 30635 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:31.961392 30635 net.cpp:86] Creating Layer ip2
I0428 20:05:31.961395 30635 net.cpp:408] ip2 <- ip1
I0428 20:05:31.961400 30635 net.cpp:382] ip2 -> ip2
I0428 20:05:31.961509 30635 net.cpp:124] Setting up ip2
I0428 20:05:31.961518 30635 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:31.961520 30635 net.cpp:139] Memory required for data: 7618800
I0428 20:05:31.961525 30635 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:31.961532 30635 net.cpp:86] Creating Layer relu2
I0428 20:05:31.961536 30635 net.cpp:408] relu2 <- ip2
I0428 20:05:31.961540 30635 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:31.961695 30635 net.cpp:124] Setting up relu2
I0428 20:05:31.961704 30635 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:31.961707 30635 net.cpp:139] Memory required for data: 7638800
I0428 20:05:31.961710 30635 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:31.961717 30635 net.cpp:86] Creating Layer ip3
I0428 20:05:31.961720 30635 net.cpp:408] ip3 <- ip2
I0428 20:05:31.961740 30635 net.cpp:382] ip3 -> ip3
I0428 20:05:31.961853 30635 net.cpp:124] Setting up ip3
I0428 20:05:31.961859 30635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:31.961863 30635 net.cpp:139] Memory required for data: 7642800
I0428 20:05:31.961886 30635 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:31.961892 30635 net.cpp:86] Creating Layer relu3
I0428 20:05:31.961895 30635 net.cpp:408] relu3 <- ip3
I0428 20:05:31.961906 30635 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:31.962772 30635 net.cpp:124] Setting up relu3
I0428 20:05:31.962785 30635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:31.962803 30635 net.cpp:139] Memory required for data: 7646800
I0428 20:05:31.962806 30635 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:31.962811 30635 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:31.962815 30635 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:31.962819 30635 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:31.962826 30635 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:31.962882 30635 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:31.962888 30635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:31.962891 30635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:31.962894 30635 net.cpp:139] Memory required for data: 7654800
I0428 20:05:31.962898 30635 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:31.962904 30635 net.cpp:86] Creating Layer accuracy
I0428 20:05:31.962908 30635 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:31.962913 30635 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:31.962916 30635 net.cpp:382] accuracy -> accuracy
I0428 20:05:31.962923 30635 net.cpp:124] Setting up accuracy
I0428 20:05:31.962926 30635 net.cpp:131] Top shape: (1)
I0428 20:05:31.962929 30635 net.cpp:139] Memory required for data: 7654804
I0428 20:05:31.962932 30635 layer_factory.hpp:77] Creating layer loss
I0428 20:05:31.962939 30635 net.cpp:86] Creating Layer loss
I0428 20:05:31.962941 30635 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:31.962944 30635 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:31.962949 30635 net.cpp:382] loss -> loss
I0428 20:05:31.962954 30635 layer_factory.hpp:77] Creating layer loss
I0428 20:05:31.963189 30635 net.cpp:124] Setting up loss
I0428 20:05:31.963198 30635 net.cpp:131] Top shape: (1)
I0428 20:05:31.963202 30635 net.cpp:134]     with loss weight 1
I0428 20:05:31.963223 30635 net.cpp:139] Memory required for data: 7654808
I0428 20:05:31.963237 30635 net.cpp:200] loss needs backward computation.
I0428 20:05:31.963240 30635 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:31.963243 30635 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:31.963246 30635 net.cpp:200] relu3 needs backward computation.
I0428 20:05:31.963250 30635 net.cpp:200] ip3 needs backward computation.
I0428 20:05:31.963253 30635 net.cpp:200] relu2 needs backward computation.
I0428 20:05:31.963256 30635 net.cpp:200] ip2 needs backward computation.
I0428 20:05:31.963259 30635 net.cpp:200] relu1 needs backward computation.
I0428 20:05:31.963261 30635 net.cpp:200] ip1 needs backward computation.
I0428 20:05:31.963264 30635 net.cpp:200] pool1 needs backward computation.
I0428 20:05:31.963268 30635 net.cpp:200] conv1 needs backward computation.
I0428 20:05:31.963270 30635 net.cpp:200] pool0 needs backward computation.
I0428 20:05:31.963274 30635 net.cpp:200] conv0 needs backward computation.
I0428 20:05:31.963277 30635 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:31.963281 30635 net.cpp:202] mnist does not need backward computation.
I0428 20:05:31.963284 30635 net.cpp:244] This network produces output accuracy
I0428 20:05:31.963289 30635 net.cpp:244] This network produces output loss
I0428 20:05:31.963299 30635 net.cpp:257] Network initialization done.
I0428 20:05:31.963342 30635 solver.cpp:56] Solver scaffolding done.
I0428 20:05:31.963770 30635 caffe.cpp:248] Starting Optimization
I0428 20:05:31.963776 30635 solver.cpp:273] Solving LeNet
I0428 20:05:31.963779 30635 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:31.964656 30635 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:31.970218 30635 blocking_queue.cpp:49] Waiting for data
I0428 20:05:32.034023 30642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:32.034654 30635 solver.cpp:398]     Test net output #0: accuracy = 0.1213
I0428 20:05:32.034688 30635 solver.cpp:398]     Test net output #1: loss = 2.31449 (* 1 = 2.31449 loss)
I0428 20:05:32.037829 30635 solver.cpp:219] Iteration 0 (-1.09862e-42 iter/s, 0.0740055s/100 iters), loss = 2.3251
I0428 20:05:32.037879 30635 solver.cpp:238]     Train net output #0: loss = 2.3251 (* 1 = 2.3251 loss)
I0428 20:05:32.037890 30635 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:32.124958 30635 solver.cpp:219] Iteration 100 (1148.35 iter/s, 0.0870812s/100 iters), loss = 0.751112
I0428 20:05:32.124997 30635 solver.cpp:238]     Train net output #0: loss = 0.751112 (* 1 = 0.751112 loss)
I0428 20:05:32.125003 30635 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:32.212491 30635 solver.cpp:219] Iteration 200 (1143.03 iter/s, 0.0874865s/100 iters), loss = 0.349021
I0428 20:05:32.212529 30635 solver.cpp:238]     Train net output #0: loss = 0.349021 (* 1 = 0.349021 loss)
I0428 20:05:32.212535 30635 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:32.300829 30635 solver.cpp:219] Iteration 300 (1132.78 iter/s, 0.088278s/100 iters), loss = 0.323687
I0428 20:05:32.300869 30635 solver.cpp:238]     Train net output #0: loss = 0.323687 (* 1 = 0.323687 loss)
I0428 20:05:32.300875 30635 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:32.387694 30635 solver.cpp:219] Iteration 400 (1151.85 iter/s, 0.0868167s/100 iters), loss = 0.291422
I0428 20:05:32.387718 30635 solver.cpp:238]     Train net output #0: loss = 0.291422 (* 1 = 0.291422 loss)
I0428 20:05:32.387724 30635 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:32.473412 30635 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:32.527832 30642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:32.528445 30635 solver.cpp:398]     Test net output #0: accuracy = 0.9333
I0428 20:05:32.528465 30635 solver.cpp:398]     Test net output #1: loss = 0.22126 (* 1 = 0.22126 loss)
I0428 20:05:32.529575 30635 solver.cpp:219] Iteration 500 (704.998 iter/s, 0.141844s/100 iters), loss = 0.209788
I0428 20:05:32.529618 30635 solver.cpp:238]     Train net output #0: loss = 0.209788 (* 1 = 0.209788 loss)
I0428 20:05:32.529624 30635 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:32.624516 30635 solver.cpp:219] Iteration 600 (1053.87 iter/s, 0.0948879s/100 iters), loss = 0.157016
I0428 20:05:32.624541 30635 solver.cpp:238]     Train net output #0: loss = 0.157016 (* 1 = 0.157016 loss)
I0428 20:05:32.624564 30635 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:32.711381 30635 solver.cpp:219] Iteration 700 (1151.66 iter/s, 0.0868311s/100 iters), loss = 0.271881
I0428 20:05:32.711406 30635 solver.cpp:238]     Train net output #0: loss = 0.271881 (* 1 = 0.271881 loss)
I0428 20:05:32.711428 30635 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:32.797412 30635 solver.cpp:219] Iteration 800 (1162.84 iter/s, 0.0859965s/100 iters), loss = 0.247537
I0428 20:05:32.797437 30635 solver.cpp:238]     Train net output #0: loss = 0.247537 (* 1 = 0.247537 loss)
I0428 20:05:32.797443 30635 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:32.883865 30635 solver.cpp:219] Iteration 900 (1157.17 iter/s, 0.0864174s/100 iters), loss = 0.151637
I0428 20:05:32.883890 30635 solver.cpp:238]     Train net output #0: loss = 0.151637 (* 1 = 0.151637 loss)
I0428 20:05:32.883898 30635 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:32.912688 30641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:32.969125 30635 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:32.969876 30635 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:32.970394 30635 solver.cpp:311] Iteration 1000, loss = 0.214248
I0428 20:05:32.970409 30635 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:33.031185 30642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:33.031800 30635 solver.cpp:398]     Test net output #0: accuracy = 0.95
I0428 20:05:33.031821 30635 solver.cpp:398]     Test net output #1: loss = 0.164992 (* 1 = 0.164992 loss)
I0428 20:05:33.031837 30635 solver.cpp:316] Optimization Done.
I0428 20:05:33.031841 30635 caffe.cpp:259] Optimization Done.
