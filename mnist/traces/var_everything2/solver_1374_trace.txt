I0428 20:20:57.508996  1667 caffe.cpp:218] Using GPUs 0
I0428 20:20:57.538774  1667 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:57.981031  1667 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1374.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:57.981225  1667 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1374.prototxt
I0428 20:20:57.981529  1667 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:57.981557  1667 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:57.981624  1667 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:57.981703  1667 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:57.981782  1667 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:57.981802  1667 net.cpp:86] Creating Layer mnist
I0428 20:20:57.981808  1667 net.cpp:382] mnist -> data
I0428 20:20:57.981827  1667 net.cpp:382] mnist -> label
I0428 20:20:57.982727  1667 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:57.984841  1667 net.cpp:124] Setting up mnist
I0428 20:20:57.984866  1667 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:57.984871  1667 net.cpp:131] Top shape: 64 (64)
I0428 20:20:57.984875  1667 net.cpp:139] Memory required for data: 200960
I0428 20:20:57.984881  1667 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:57.984894  1667 net.cpp:86] Creating Layer conv0
I0428 20:20:57.984899  1667 net.cpp:408] conv0 <- data
I0428 20:20:57.984908  1667 net.cpp:382] conv0 -> conv0
I0428 20:20:58.220358  1667 net.cpp:124] Setting up conv0
I0428 20:20:58.220402  1667 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:58.220405  1667 net.cpp:139] Memory required for data: 7573760
I0428 20:20:58.220458  1667 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:58.220469  1667 net.cpp:86] Creating Layer pool0
I0428 20:20:58.220474  1667 net.cpp:408] pool0 <- conv0
I0428 20:20:58.220479  1667 net.cpp:382] pool0 -> pool0
I0428 20:20:58.220527  1667 net.cpp:124] Setting up pool0
I0428 20:20:58.220535  1667 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:58.220538  1667 net.cpp:139] Memory required for data: 9416960
I0428 20:20:58.220541  1667 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:58.220551  1667 net.cpp:86] Creating Layer conv1
I0428 20:20:58.220554  1667 net.cpp:408] conv1 <- pool0
I0428 20:20:58.220577  1667 net.cpp:382] conv1 -> conv1
I0428 20:20:58.222956  1667 net.cpp:124] Setting up conv1
I0428 20:20:58.222970  1667 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:20:58.222973  1667 net.cpp:139] Memory required for data: 10236160
I0428 20:20:58.222981  1667 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:58.223003  1667 net.cpp:86] Creating Layer pool1
I0428 20:20:58.223006  1667 net.cpp:408] pool1 <- conv1
I0428 20:20:58.223011  1667 net.cpp:382] pool1 -> pool1
I0428 20:20:58.223060  1667 net.cpp:124] Setting up pool1
I0428 20:20:58.223067  1667 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:20:58.223070  1667 net.cpp:139] Memory required for data: 10440960
I0428 20:20:58.223073  1667 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:58.223079  1667 net.cpp:86] Creating Layer ip1
I0428 20:20:58.223083  1667 net.cpp:408] ip1 <- pool1
I0428 20:20:58.223088  1667 net.cpp:382] ip1 -> ip1
I0428 20:20:58.223407  1667 net.cpp:124] Setting up ip1
I0428 20:20:58.223414  1667 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:58.223431  1667 net.cpp:139] Memory required for data: 10453760
I0428 20:20:58.223438  1667 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:58.223443  1667 net.cpp:86] Creating Layer relu1
I0428 20:20:58.223446  1667 net.cpp:408] relu1 <- ip1
I0428 20:20:58.223450  1667 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:58.223645  1667 net.cpp:124] Setting up relu1
I0428 20:20:58.223654  1667 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:58.223657  1667 net.cpp:139] Memory required for data: 10466560
I0428 20:20:58.223667  1667 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:58.223673  1667 net.cpp:86] Creating Layer ip2
I0428 20:20:58.223677  1667 net.cpp:408] ip2 <- ip1
I0428 20:20:58.223681  1667 net.cpp:382] ip2 -> ip2
I0428 20:20:58.223778  1667 net.cpp:124] Setting up ip2
I0428 20:20:58.223784  1667 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:58.223788  1667 net.cpp:139] Memory required for data: 10469120
I0428 20:20:58.223809  1667 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:58.223815  1667 net.cpp:86] Creating Layer relu2
I0428 20:20:58.223834  1667 net.cpp:408] relu2 <- ip2
I0428 20:20:58.223839  1667 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:58.224649  1667 net.cpp:124] Setting up relu2
I0428 20:20:58.224661  1667 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:58.224665  1667 net.cpp:139] Memory required for data: 10471680
I0428 20:20:58.224668  1667 layer_factory.hpp:77] Creating layer loss
I0428 20:20:58.224675  1667 net.cpp:86] Creating Layer loss
I0428 20:20:58.224678  1667 net.cpp:408] loss <- ip2
I0428 20:20:58.224683  1667 net.cpp:408] loss <- label
I0428 20:20:58.224687  1667 net.cpp:382] loss -> loss
I0428 20:20:58.224702  1667 layer_factory.hpp:77] Creating layer loss
I0428 20:20:58.224977  1667 net.cpp:124] Setting up loss
I0428 20:20:58.224987  1667 net.cpp:131] Top shape: (1)
I0428 20:20:58.224990  1667 net.cpp:134]     with loss weight 1
I0428 20:20:58.225005  1667 net.cpp:139] Memory required for data: 10471684
I0428 20:20:58.225008  1667 net.cpp:200] loss needs backward computation.
I0428 20:20:58.225013  1667 net.cpp:200] relu2 needs backward computation.
I0428 20:20:58.225015  1667 net.cpp:200] ip2 needs backward computation.
I0428 20:20:58.225018  1667 net.cpp:200] relu1 needs backward computation.
I0428 20:20:58.225021  1667 net.cpp:200] ip1 needs backward computation.
I0428 20:20:58.225034  1667 net.cpp:200] pool1 needs backward computation.
I0428 20:20:58.225038  1667 net.cpp:200] conv1 needs backward computation.
I0428 20:20:58.225041  1667 net.cpp:200] pool0 needs backward computation.
I0428 20:20:58.225044  1667 net.cpp:200] conv0 needs backward computation.
I0428 20:20:58.225049  1667 net.cpp:202] mnist does not need backward computation.
I0428 20:20:58.225050  1667 net.cpp:244] This network produces output loss
I0428 20:20:58.225059  1667 net.cpp:257] Network initialization done.
I0428 20:20:58.225366  1667 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1374.prototxt
I0428 20:20:58.225422  1667 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:58.225502  1667 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:58.225564  1667 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:58.225607  1667 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:58.225622  1667 net.cpp:86] Creating Layer mnist
I0428 20:20:58.225627  1667 net.cpp:382] mnist -> data
I0428 20:20:58.225634  1667 net.cpp:382] mnist -> label
I0428 20:20:58.225745  1667 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:58.227695  1667 net.cpp:124] Setting up mnist
I0428 20:20:58.227725  1667 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:58.227730  1667 net.cpp:131] Top shape: 100 (100)
I0428 20:20:58.227733  1667 net.cpp:139] Memory required for data: 314000
I0428 20:20:58.227737  1667 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:58.227743  1667 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:58.227747  1667 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:58.227751  1667 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:58.227758  1667 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:58.227809  1667 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:58.227816  1667 net.cpp:131] Top shape: 100 (100)
I0428 20:20:58.227819  1667 net.cpp:131] Top shape: 100 (100)
I0428 20:20:58.227823  1667 net.cpp:139] Memory required for data: 314800
I0428 20:20:58.227825  1667 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:58.227833  1667 net.cpp:86] Creating Layer conv0
I0428 20:20:58.227836  1667 net.cpp:408] conv0 <- data
I0428 20:20:58.227841  1667 net.cpp:382] conv0 -> conv0
I0428 20:20:58.229573  1667 net.cpp:124] Setting up conv0
I0428 20:20:58.229602  1667 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:58.229606  1667 net.cpp:139] Memory required for data: 11834800
I0428 20:20:58.229629  1667 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:58.229635  1667 net.cpp:86] Creating Layer pool0
I0428 20:20:58.229638  1667 net.cpp:408] pool0 <- conv0
I0428 20:20:58.229642  1667 net.cpp:382] pool0 -> pool0
I0428 20:20:58.229691  1667 net.cpp:124] Setting up pool0
I0428 20:20:58.229696  1667 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:58.229699  1667 net.cpp:139] Memory required for data: 14714800
I0428 20:20:58.229702  1667 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:58.229712  1667 net.cpp:86] Creating Layer conv1
I0428 20:20:58.229714  1667 net.cpp:408] conv1 <- pool0
I0428 20:20:58.229719  1667 net.cpp:382] conv1 -> conv1
I0428 20:20:58.231552  1667 net.cpp:124] Setting up conv1
I0428 20:20:58.231580  1667 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:20:58.231586  1667 net.cpp:139] Memory required for data: 15994800
I0428 20:20:58.231595  1667 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:58.231601  1667 net.cpp:86] Creating Layer pool1
I0428 20:20:58.231604  1667 net.cpp:408] pool1 <- conv1
I0428 20:20:58.231609  1667 net.cpp:382] pool1 -> pool1
I0428 20:20:58.231660  1667 net.cpp:124] Setting up pool1
I0428 20:20:58.231667  1667 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:20:58.231669  1667 net.cpp:139] Memory required for data: 16314800
I0428 20:20:58.231673  1667 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:58.231678  1667 net.cpp:86] Creating Layer ip1
I0428 20:20:58.231680  1667 net.cpp:408] ip1 <- pool1
I0428 20:20:58.231685  1667 net.cpp:382] ip1 -> ip1
I0428 20:20:58.232089  1667 net.cpp:124] Setting up ip1
I0428 20:20:58.232097  1667 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:58.232116  1667 net.cpp:139] Memory required for data: 16334800
I0428 20:20:58.232123  1667 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:58.232127  1667 net.cpp:86] Creating Layer relu1
I0428 20:20:58.232131  1667 net.cpp:408] relu1 <- ip1
I0428 20:20:58.232136  1667 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:58.232285  1667 net.cpp:124] Setting up relu1
I0428 20:20:58.232292  1667 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:58.232296  1667 net.cpp:139] Memory required for data: 16354800
I0428 20:20:58.232298  1667 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:58.232306  1667 net.cpp:86] Creating Layer ip2
I0428 20:20:58.232308  1667 net.cpp:408] ip2 <- ip1
I0428 20:20:58.232314  1667 net.cpp:382] ip2 -> ip2
I0428 20:20:58.232444  1667 net.cpp:124] Setting up ip2
I0428 20:20:58.232451  1667 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:58.232455  1667 net.cpp:139] Memory required for data: 16358800
I0428 20:20:58.232460  1667 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:58.232465  1667 net.cpp:86] Creating Layer relu2
I0428 20:20:58.232468  1667 net.cpp:408] relu2 <- ip2
I0428 20:20:58.232473  1667 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:58.232702  1667 net.cpp:124] Setting up relu2
I0428 20:20:58.232710  1667 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:58.232714  1667 net.cpp:139] Memory required for data: 16362800
I0428 20:20:58.232717  1667 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:20:58.232722  1667 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:20:58.232724  1667 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:20:58.232731  1667 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:20:58.232748  1667 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:20:58.232784  1667 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:20:58.232808  1667 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:58.232836  1667 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:58.232838  1667 net.cpp:139] Memory required for data: 16370800
I0428 20:20:58.232856  1667 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:58.232862  1667 net.cpp:86] Creating Layer accuracy
I0428 20:20:58.232866  1667 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:20:58.232869  1667 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:58.232874  1667 net.cpp:382] accuracy -> accuracy
I0428 20:20:58.232882  1667 net.cpp:124] Setting up accuracy
I0428 20:20:58.232885  1667 net.cpp:131] Top shape: (1)
I0428 20:20:58.232888  1667 net.cpp:139] Memory required for data: 16370804
I0428 20:20:58.232890  1667 layer_factory.hpp:77] Creating layer loss
I0428 20:20:58.232897  1667 net.cpp:86] Creating Layer loss
I0428 20:20:58.232899  1667 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:20:58.232903  1667 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:58.232908  1667 net.cpp:382] loss -> loss
I0428 20:20:58.232913  1667 layer_factory.hpp:77] Creating layer loss
I0428 20:20:58.233202  1667 net.cpp:124] Setting up loss
I0428 20:20:58.233211  1667 net.cpp:131] Top shape: (1)
I0428 20:20:58.233214  1667 net.cpp:134]     with loss weight 1
I0428 20:20:58.233225  1667 net.cpp:139] Memory required for data: 16370808
I0428 20:20:58.233239  1667 net.cpp:200] loss needs backward computation.
I0428 20:20:58.233243  1667 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:58.233247  1667 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:20:58.233249  1667 net.cpp:200] relu2 needs backward computation.
I0428 20:20:58.233253  1667 net.cpp:200] ip2 needs backward computation.
I0428 20:20:58.233254  1667 net.cpp:200] relu1 needs backward computation.
I0428 20:20:58.233258  1667 net.cpp:200] ip1 needs backward computation.
I0428 20:20:58.233260  1667 net.cpp:200] pool1 needs backward computation.
I0428 20:20:58.233263  1667 net.cpp:200] conv1 needs backward computation.
I0428 20:20:58.233265  1667 net.cpp:200] pool0 needs backward computation.
I0428 20:20:58.233268  1667 net.cpp:200] conv0 needs backward computation.
I0428 20:20:58.233273  1667 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:58.233276  1667 net.cpp:202] mnist does not need backward computation.
I0428 20:20:58.233279  1667 net.cpp:244] This network produces output accuracy
I0428 20:20:58.233283  1667 net.cpp:244] This network produces output loss
I0428 20:20:58.233292  1667 net.cpp:257] Network initialization done.
I0428 20:20:58.233327  1667 solver.cpp:56] Solver scaffolding done.
I0428 20:20:58.233592  1667 caffe.cpp:248] Starting Optimization
I0428 20:20:58.233598  1667 solver.cpp:273] Solving LeNet
I0428 20:20:58.233602  1667 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:58.234381  1667 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:58.304630  1674 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:58.306347  1667 solver.cpp:398]     Test net output #0: accuracy = 0.0814
I0428 20:20:58.306382  1667 solver.cpp:398]     Test net output #1: loss = 2.33122 (* 1 = 2.33122 loss)
I0428 20:20:58.311231  1667 solver.cpp:219] Iteration 0 (2.93339 iter/s, 0.0776061s/100 iters), loss = 2.36698
I0428 20:20:58.311270  1667 solver.cpp:238]     Train net output #0: loss = 2.36698 (* 1 = 2.36698 loss)
I0428 20:20:58.311280  1667 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:58.461402  1667 solver.cpp:219] Iteration 100 (666.077 iter/s, 0.150133s/100 iters), loss = 1.42372
I0428 20:20:58.461426  1667 solver.cpp:238]     Train net output #0: loss = 1.42372 (* 1 = 1.42372 loss)
I0428 20:20:58.461432  1667 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:58.614887  1667 solver.cpp:219] Iteration 200 (651.685 iter/s, 0.153448s/100 iters), loss = 1.45759
I0428 20:20:58.614923  1667 solver.cpp:238]     Train net output #0: loss = 1.45759 (* 1 = 1.45759 loss)
I0428 20:20:58.614929  1667 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:58.764539  1667 solver.cpp:219] Iteration 300 (668.434 iter/s, 0.149603s/100 iters), loss = 1.58734
I0428 20:20:58.764561  1667 solver.cpp:238]     Train net output #0: loss = 1.58734 (* 1 = 1.58734 loss)
I0428 20:20:58.764583  1667 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:58.915164  1667 solver.cpp:219] Iteration 400 (664.054 iter/s, 0.15059s/100 iters), loss = 1.12202
I0428 20:20:58.915190  1667 solver.cpp:238]     Train net output #0: loss = 1.12202 (* 1 = 1.12202 loss)
I0428 20:20:58.915211  1667 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:59.062327  1667 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:59.068729  1667 blocking_queue.cpp:49] Waiting for data
I0428 20:20:59.139684  1674 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:59.140720  1667 solver.cpp:398]     Test net output #0: accuracy = 0.859
I0428 20:20:59.140759  1667 solver.cpp:398]     Test net output #1: loss = 0.412607 (* 1 = 0.412607 loss)
I0428 20:20:59.142336  1667 solver.cpp:219] Iteration 500 (440.274 iter/s, 0.227131s/100 iters), loss = 0.419548
I0428 20:20:59.142375  1667 solver.cpp:238]     Train net output #0: loss = 0.419548 (* 1 = 0.419548 loss)
I0428 20:20:59.142392  1667 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:59.303577  1667 solver.cpp:219] Iteration 600 (620.331 iter/s, 0.161204s/100 iters), loss = 0.211551
I0428 20:20:59.303603  1667 solver.cpp:238]     Train net output #0: loss = 0.211551 (* 1 = 0.211551 loss)
I0428 20:20:59.303609  1667 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:59.453924  1667 solver.cpp:219] Iteration 700 (665.301 iter/s, 0.150308s/100 iters), loss = 0.265627
I0428 20:20:59.453963  1667 solver.cpp:238]     Train net output #0: loss = 0.265626 (* 1 = 0.265626 loss)
I0428 20:20:59.453969  1667 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:59.603112  1667 solver.cpp:219] Iteration 800 (670.454 iter/s, 0.149153s/100 iters), loss = 0.272947
I0428 20:20:59.603137  1667 solver.cpp:238]     Train net output #0: loss = 0.272947 (* 1 = 0.272947 loss)
I0428 20:20:59.603142  1667 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:59.762099  1667 solver.cpp:219] Iteration 900 (629.131 iter/s, 0.158949s/100 iters), loss = 0.136216
I0428 20:20:59.762125  1667 solver.cpp:238]     Train net output #0: loss = 0.136216 (* 1 = 0.136216 loss)
I0428 20:20:59.762131  1667 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:59.812791  1673 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:59.911444  1667 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:59.913976  1667 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:59.915433  1667 solver.cpp:311] Iteration 1000, loss = 0.100659
I0428 20:20:59.915449  1667 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:59.994779  1674 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:59.995658  1667 solver.cpp:398]     Test net output #0: accuracy = 0.9735
I0428 20:20:59.995693  1667 solver.cpp:398]     Test net output #1: loss = 0.0775489 (* 1 = 0.0775489 loss)
I0428 20:20:59.995698  1667 solver.cpp:316] Optimization Done.
I0428 20:20:59.995702  1667 caffe.cpp:259] Optimization Done.
