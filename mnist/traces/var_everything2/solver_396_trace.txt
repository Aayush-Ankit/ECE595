I0428 19:42:31.531896 25087 caffe.cpp:218] Using GPUs 0
I0428 19:42:31.573523 25087 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:32.095732 25087 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test396.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:32.095871 25087 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test396.prototxt
I0428 19:42:32.096252 25087 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:32.096272 25087 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:32.096364 25087 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:32.096441 25087 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:32.096539 25087 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:32.096565 25087 net.cpp:86] Creating Layer mnist
I0428 19:42:32.096571 25087 net.cpp:382] mnist -> data
I0428 19:42:32.096596 25087 net.cpp:382] mnist -> label
I0428 19:42:32.097695 25087 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:32.100152 25087 net.cpp:124] Setting up mnist
I0428 19:42:32.100172 25087 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:32.100178 25087 net.cpp:131] Top shape: 64 (64)
I0428 19:42:32.100181 25087 net.cpp:139] Memory required for data: 200960
I0428 19:42:32.100188 25087 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:32.100224 25087 net.cpp:86] Creating Layer conv0
I0428 19:42:32.100229 25087 net.cpp:408] conv0 <- data
I0428 19:42:32.100240 25087 net.cpp:382] conv0 -> conv0
I0428 19:42:32.382875 25087 net.cpp:124] Setting up conv0
I0428 19:42:32.382902 25087 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:32.382906 25087 net.cpp:139] Memory required for data: 495872
I0428 19:42:32.382941 25087 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:32.382953 25087 net.cpp:86] Creating Layer pool0
I0428 19:42:32.382957 25087 net.cpp:408] pool0 <- conv0
I0428 19:42:32.382962 25087 net.cpp:382] pool0 -> pool0
I0428 19:42:32.383008 25087 net.cpp:124] Setting up pool0
I0428 19:42:32.383013 25087 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:32.383016 25087 net.cpp:139] Memory required for data: 569600
I0428 19:42:32.383019 25087 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:32.383030 25087 net.cpp:86] Creating Layer conv1
I0428 19:42:32.383033 25087 net.cpp:408] conv1 <- pool0
I0428 19:42:32.383038 25087 net.cpp:382] conv1 -> conv1
I0428 19:42:32.385634 25087 net.cpp:124] Setting up conv1
I0428 19:42:32.385648 25087 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:32.385653 25087 net.cpp:139] Memory required for data: 979200
I0428 19:42:32.385660 25087 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:32.385668 25087 net.cpp:86] Creating Layer pool1
I0428 19:42:32.385671 25087 net.cpp:408] pool1 <- conv1
I0428 19:42:32.385675 25087 net.cpp:382] pool1 -> pool1
I0428 19:42:32.385727 25087 net.cpp:124] Setting up pool1
I0428 19:42:32.385732 25087 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:32.385735 25087 net.cpp:139] Memory required for data: 1081600
I0428 19:42:32.385738 25087 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:32.385746 25087 net.cpp:86] Creating Layer ip1
I0428 19:42:32.385748 25087 net.cpp:408] ip1 <- pool1
I0428 19:42:32.385752 25087 net.cpp:382] ip1 -> ip1
I0428 19:42:32.386705 25087 net.cpp:124] Setting up ip1
I0428 19:42:32.386718 25087 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:32.386736 25087 net.cpp:139] Memory required for data: 1088000
I0428 19:42:32.386744 25087 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:32.386751 25087 net.cpp:86] Creating Layer relu1
I0428 19:42:32.386754 25087 net.cpp:408] relu1 <- ip1
I0428 19:42:32.386765 25087 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:32.386960 25087 net.cpp:124] Setting up relu1
I0428 19:42:32.386970 25087 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:32.386973 25087 net.cpp:139] Memory required for data: 1094400
I0428 19:42:32.386976 25087 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:32.386982 25087 net.cpp:86] Creating Layer ip2
I0428 19:42:32.386986 25087 net.cpp:408] ip2 <- ip1
I0428 19:42:32.386991 25087 net.cpp:382] ip2 -> ip2
I0428 19:42:32.387084 25087 net.cpp:124] Setting up ip2
I0428 19:42:32.387105 25087 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:32.387109 25087 net.cpp:139] Memory required for data: 1096960
I0428 19:42:32.387114 25087 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:32.387118 25087 net.cpp:86] Creating Layer relu2
I0428 19:42:32.387121 25087 net.cpp:408] relu2 <- ip2
I0428 19:42:32.387125 25087 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:32.387821 25087 net.cpp:124] Setting up relu2
I0428 19:42:32.387833 25087 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:32.387836 25087 net.cpp:139] Memory required for data: 1099520
I0428 19:42:32.387840 25087 layer_factory.hpp:77] Creating layer loss
I0428 19:42:32.387846 25087 net.cpp:86] Creating Layer loss
I0428 19:42:32.387850 25087 net.cpp:408] loss <- ip2
I0428 19:42:32.387853 25087 net.cpp:408] loss <- label
I0428 19:42:32.387858 25087 net.cpp:382] loss -> loss
I0428 19:42:32.387892 25087 layer_factory.hpp:77] Creating layer loss
I0428 19:42:32.388133 25087 net.cpp:124] Setting up loss
I0428 19:42:32.388141 25087 net.cpp:131] Top shape: (1)
I0428 19:42:32.388144 25087 net.cpp:134]     with loss weight 1
I0428 19:42:32.388157 25087 net.cpp:139] Memory required for data: 1099524
I0428 19:42:32.388160 25087 net.cpp:200] loss needs backward computation.
I0428 19:42:32.388164 25087 net.cpp:200] relu2 needs backward computation.
I0428 19:42:32.388167 25087 net.cpp:200] ip2 needs backward computation.
I0428 19:42:32.388170 25087 net.cpp:200] relu1 needs backward computation.
I0428 19:42:32.388172 25087 net.cpp:200] ip1 needs backward computation.
I0428 19:42:32.388185 25087 net.cpp:200] pool1 needs backward computation.
I0428 19:42:32.388188 25087 net.cpp:200] conv1 needs backward computation.
I0428 19:42:32.388206 25087 net.cpp:200] pool0 needs backward computation.
I0428 19:42:32.388208 25087 net.cpp:200] conv0 needs backward computation.
I0428 19:42:32.388211 25087 net.cpp:202] mnist does not need backward computation.
I0428 19:42:32.388214 25087 net.cpp:244] This network produces output loss
I0428 19:42:32.388224 25087 net.cpp:257] Network initialization done.
I0428 19:42:32.388509 25087 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test396.prototxt
I0428 19:42:32.388533 25087 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:32.388617 25087 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:32.388682 25087 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:32.388728 25087 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:32.388741 25087 net.cpp:86] Creating Layer mnist
I0428 19:42:32.388746 25087 net.cpp:382] mnist -> data
I0428 19:42:32.388753 25087 net.cpp:382] mnist -> label
I0428 19:42:32.388892 25087 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:32.390812 25087 net.cpp:124] Setting up mnist
I0428 19:42:32.390825 25087 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:32.390830 25087 net.cpp:131] Top shape: 100 (100)
I0428 19:42:32.390831 25087 net.cpp:139] Memory required for data: 314000
I0428 19:42:32.390836 25087 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:32.390844 25087 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:32.390848 25087 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:32.390852 25087 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:32.390887 25087 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:32.390925 25087 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:32.390940 25087 net.cpp:131] Top shape: 100 (100)
I0428 19:42:32.390944 25087 net.cpp:131] Top shape: 100 (100)
I0428 19:42:32.390946 25087 net.cpp:139] Memory required for data: 314800
I0428 19:42:32.390949 25087 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:32.390961 25087 net.cpp:86] Creating Layer conv0
I0428 19:42:32.390965 25087 net.cpp:408] conv0 <- data
I0428 19:42:32.390970 25087 net.cpp:382] conv0 -> conv0
I0428 19:42:32.392776 25087 net.cpp:124] Setting up conv0
I0428 19:42:32.392789 25087 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:32.392793 25087 net.cpp:139] Memory required for data: 775600
I0428 19:42:32.392803 25087 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:32.392817 25087 net.cpp:86] Creating Layer pool0
I0428 19:42:32.392819 25087 net.cpp:408] pool0 <- conv0
I0428 19:42:32.392841 25087 net.cpp:382] pool0 -> pool0
I0428 19:42:32.392894 25087 net.cpp:124] Setting up pool0
I0428 19:42:32.392900 25087 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:32.392904 25087 net.cpp:139] Memory required for data: 890800
I0428 19:42:32.392906 25087 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:32.392917 25087 net.cpp:86] Creating Layer conv1
I0428 19:42:32.392920 25087 net.cpp:408] conv1 <- pool0
I0428 19:42:32.392925 25087 net.cpp:382] conv1 -> conv1
I0428 19:42:32.394453 25087 net.cpp:124] Setting up conv1
I0428 19:42:32.394464 25087 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:32.394469 25087 net.cpp:139] Memory required for data: 1530800
I0428 19:42:32.394477 25087 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:32.394484 25087 net.cpp:86] Creating Layer pool1
I0428 19:42:32.394487 25087 net.cpp:408] pool1 <- conv1
I0428 19:42:32.394529 25087 net.cpp:382] pool1 -> pool1
I0428 19:42:32.394567 25087 net.cpp:124] Setting up pool1
I0428 19:42:32.394575 25087 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:32.394579 25087 net.cpp:139] Memory required for data: 1690800
I0428 19:42:32.394587 25087 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:32.394594 25087 net.cpp:86] Creating Layer ip1
I0428 19:42:32.394598 25087 net.cpp:408] ip1 <- pool1
I0428 19:42:32.394609 25087 net.cpp:382] ip1 -> ip1
I0428 19:42:32.394790 25087 net.cpp:124] Setting up ip1
I0428 19:42:32.394798 25087 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:32.394800 25087 net.cpp:139] Memory required for data: 1700800
I0428 19:42:32.394807 25087 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:32.394814 25087 net.cpp:86] Creating Layer relu1
I0428 19:42:32.394816 25087 net.cpp:408] relu1 <- ip1
I0428 19:42:32.394822 25087 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:32.394980 25087 net.cpp:124] Setting up relu1
I0428 19:42:32.394989 25087 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:32.394994 25087 net.cpp:139] Memory required for data: 1710800
I0428 19:42:32.395004 25087 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:32.395011 25087 net.cpp:86] Creating Layer ip2
I0428 19:42:32.395015 25087 net.cpp:408] ip2 <- ip1
I0428 19:42:32.395020 25087 net.cpp:382] ip2 -> ip2
I0428 19:42:32.395133 25087 net.cpp:124] Setting up ip2
I0428 19:42:32.395138 25087 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:32.395143 25087 net.cpp:139] Memory required for data: 1714800
I0428 19:42:32.395148 25087 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:32.395153 25087 net.cpp:86] Creating Layer relu2
I0428 19:42:32.395157 25087 net.cpp:408] relu2 <- ip2
I0428 19:42:32.395161 25087 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:32.395308 25087 net.cpp:124] Setting up relu2
I0428 19:42:32.395332 25087 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:32.395335 25087 net.cpp:139] Memory required for data: 1718800
I0428 19:42:32.395339 25087 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:32.395359 25087 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:32.395364 25087 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:32.395367 25087 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:32.395383 25087 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:32.395437 25087 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:32.395442 25087 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:32.395447 25087 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:32.395457 25087 net.cpp:139] Memory required for data: 1726800
I0428 19:42:32.395460 25087 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:32.395465 25087 net.cpp:86] Creating Layer accuracy
I0428 19:42:32.395468 25087 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:32.395489 25087 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:32.395495 25087 net.cpp:382] accuracy -> accuracy
I0428 19:42:32.395503 25087 net.cpp:124] Setting up accuracy
I0428 19:42:32.395517 25087 net.cpp:131] Top shape: (1)
I0428 19:42:32.395520 25087 net.cpp:139] Memory required for data: 1726804
I0428 19:42:32.395524 25087 layer_factory.hpp:77] Creating layer loss
I0428 19:42:32.395529 25087 net.cpp:86] Creating Layer loss
I0428 19:42:32.395534 25087 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:32.395537 25087 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:32.395543 25087 net.cpp:382] loss -> loss
I0428 19:42:32.395550 25087 layer_factory.hpp:77] Creating layer loss
I0428 19:42:32.395916 25087 net.cpp:124] Setting up loss
I0428 19:42:32.395925 25087 net.cpp:131] Top shape: (1)
I0428 19:42:32.395928 25087 net.cpp:134]     with loss weight 1
I0428 19:42:32.395934 25087 net.cpp:139] Memory required for data: 1726808
I0428 19:42:32.395937 25087 net.cpp:200] loss needs backward computation.
I0428 19:42:32.395941 25087 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:32.395946 25087 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:32.395949 25087 net.cpp:200] relu2 needs backward computation.
I0428 19:42:32.395951 25087 net.cpp:200] ip2 needs backward computation.
I0428 19:42:32.395954 25087 net.cpp:200] relu1 needs backward computation.
I0428 19:42:32.395957 25087 net.cpp:200] ip1 needs backward computation.
I0428 19:42:32.395961 25087 net.cpp:200] pool1 needs backward computation.
I0428 19:42:32.395962 25087 net.cpp:200] conv1 needs backward computation.
I0428 19:42:32.395965 25087 net.cpp:200] pool0 needs backward computation.
I0428 19:42:32.395968 25087 net.cpp:200] conv0 needs backward computation.
I0428 19:42:32.395972 25087 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:32.395975 25087 net.cpp:202] mnist does not need backward computation.
I0428 19:42:32.395978 25087 net.cpp:244] This network produces output accuracy
I0428 19:42:32.395982 25087 net.cpp:244] This network produces output loss
I0428 19:42:32.395992 25087 net.cpp:257] Network initialization done.
I0428 19:42:32.396028 25087 solver.cpp:56] Solver scaffolding done.
I0428 19:42:32.396299 25087 caffe.cpp:248] Starting Optimization
I0428 19:42:32.396306 25087 solver.cpp:273] Solving LeNet
I0428 19:42:32.396308 25087 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:32.396438 25087 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:32.400009 25087 blocking_queue.cpp:49] Waiting for data
I0428 19:42:32.472455 25094 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:32.472892 25087 solver.cpp:398]     Test net output #0: accuracy = 0.07
I0428 19:42:32.472913 25087 solver.cpp:398]     Test net output #1: loss = 2.31341 (* 1 = 2.31341 loss)
I0428 19:42:32.474068 25087 solver.cpp:219] Iteration 0 (-1.04537e-42 iter/s, 0.0777352s/100 iters), loss = 2.29905
I0428 19:42:32.474120 25087 solver.cpp:238]     Train net output #0: loss = 2.29905 (* 1 = 2.29905 loss)
I0428 19:42:32.474133 25087 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:32.562458 25087 solver.cpp:219] Iteration 100 (1132.16 iter/s, 0.0883269s/100 iters), loss = 0.805893
I0428 19:42:32.562484 25087 solver.cpp:238]     Train net output #0: loss = 0.805893 (* 1 = 0.805893 loss)
I0428 19:42:32.562506 25087 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:32.640336 25087 solver.cpp:219] Iteration 200 (1284.7 iter/s, 0.0778394s/100 iters), loss = 0.622309
I0428 19:42:32.640372 25087 solver.cpp:238]     Train net output #0: loss = 0.622309 (* 1 = 0.622309 loss)
I0428 19:42:32.640393 25087 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:32.716526 25087 solver.cpp:219] Iteration 300 (1313.33 iter/s, 0.0761424s/100 iters), loss = 0.269882
I0428 19:42:32.716550 25087 solver.cpp:238]     Train net output #0: loss = 0.269882 (* 1 = 0.269882 loss)
I0428 19:42:32.716557 25087 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:32.793406 25087 solver.cpp:219] Iteration 400 (1301.35 iter/s, 0.0768431s/100 iters), loss = 0.295559
I0428 19:42:32.793447 25087 solver.cpp:238]     Train net output #0: loss = 0.295559 (* 1 = 0.295559 loss)
I0428 19:42:32.793452 25087 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:32.887205 25087 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:32.963150 25094 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:32.963752 25087 solver.cpp:398]     Test net output #0: accuracy = 0.8683
I0428 19:42:32.963779 25087 solver.cpp:398]     Test net output #1: loss = 0.37716 (* 1 = 0.37716 loss)
I0428 19:42:32.964887 25087 solver.cpp:219] Iteration 500 (583.346 iter/s, 0.171425s/100 iters), loss = 0.524859
I0428 19:42:32.964923 25087 solver.cpp:238]     Train net output #0: loss = 0.524859 (* 1 = 0.524859 loss)
I0428 19:42:32.964934 25087 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:33.051244 25087 solver.cpp:219] Iteration 600 (1158.64 iter/s, 0.086308s/100 iters), loss = 0.290256
I0428 19:42:33.051275 25087 solver.cpp:238]     Train net output #0: loss = 0.290256 (* 1 = 0.290256 loss)
I0428 19:42:33.051282 25087 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:33.134205 25087 solver.cpp:219] Iteration 700 (1206.08 iter/s, 0.0829133s/100 iters), loss = 0.357136
I0428 19:42:33.134238 25087 solver.cpp:238]     Train net output #0: loss = 0.357136 (* 1 = 0.357136 loss)
I0428 19:42:33.134245 25087 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:33.229817 25087 solver.cpp:219] Iteration 800 (1046.43 iter/s, 0.0955627s/100 iters), loss = 0.311652
I0428 19:42:33.229861 25087 solver.cpp:238]     Train net output #0: loss = 0.311652 (* 1 = 0.311652 loss)
I0428 19:42:33.229872 25087 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:33.328779 25087 solver.cpp:219] Iteration 900 (1011.1 iter/s, 0.098902s/100 iters), loss = 0.207466
I0428 19:42:33.328840 25087 solver.cpp:238]     Train net output #0: loss = 0.207466 (* 1 = 0.207466 loss)
I0428 19:42:33.328853 25087 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:33.357882 25093 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:33.412858 25087 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:33.413733 25087 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:33.414250 25087 solver.cpp:311] Iteration 1000, loss = 0.174562
I0428 19:42:33.414270 25087 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:33.468482 25094 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:33.468928 25087 solver.cpp:398]     Test net output #0: accuracy = 0.966
I0428 19:42:33.468950 25087 solver.cpp:398]     Test net output #1: loss = 0.108745 (* 1 = 0.108745 loss)
I0428 19:42:33.468956 25087 solver.cpp:316] Optimization Done.
I0428 19:42:33.468960 25087 caffe.cpp:259] Optimization Done.
