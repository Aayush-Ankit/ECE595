I0428 20:15:06.337373   364 caffe.cpp:218] Using GPUs 0
I0428 20:15:06.374966   364 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:15:06.887495   364 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1238.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:15:06.887634   364 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1238.prototxt
I0428 20:15:06.888062   364 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:15:06.888082   364 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:15:06.888185   364 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:06.888265   364 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:06.888370   364 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:15:06.888397   364 net.cpp:86] Creating Layer mnist
I0428 20:15:06.888406   364 net.cpp:382] mnist -> data
I0428 20:15:06.888429   364 net.cpp:382] mnist -> label
I0428 20:15:06.889580   364 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:15:06.892143   364 net.cpp:124] Setting up mnist
I0428 20:15:06.892161   364 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:15:06.892168   364 net.cpp:131] Top shape: 64 (64)
I0428 20:15:06.892170   364 net.cpp:139] Memory required for data: 200960
I0428 20:15:06.892179   364 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:06.892196   364 net.cpp:86] Creating Layer conv0
I0428 20:15:06.892218   364 net.cpp:408] conv0 <- data
I0428 20:15:06.892232   364 net.cpp:382] conv0 -> conv0
I0428 20:15:07.171242   364 net.cpp:124] Setting up conv0
I0428 20:15:07.171270   364 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:15:07.171274   364 net.cpp:139] Memory required for data: 7573760
I0428 20:15:07.171289   364 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:07.171301   364 net.cpp:86] Creating Layer pool0
I0428 20:15:07.171305   364 net.cpp:408] pool0 <- conv0
I0428 20:15:07.171310   364 net.cpp:382] pool0 -> pool0
I0428 20:15:07.171370   364 net.cpp:124] Setting up pool0
I0428 20:15:07.171378   364 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:15:07.171381   364 net.cpp:139] Memory required for data: 9416960
I0428 20:15:07.171385   364 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:07.171396   364 net.cpp:86] Creating Layer conv1
I0428 20:15:07.171401   364 net.cpp:408] conv1 <- pool0
I0428 20:15:07.171406   364 net.cpp:382] conv1 -> conv1
I0428 20:15:07.173336   364 net.cpp:124] Setting up conv1
I0428 20:15:07.173355   364 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:15:07.173362   364 net.cpp:139] Memory required for data: 9449728
I0428 20:15:07.173375   364 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:07.173388   364 net.cpp:86] Creating Layer pool1
I0428 20:15:07.173393   364 net.cpp:408] pool1 <- conv1
I0428 20:15:07.173398   364 net.cpp:382] pool1 -> pool1
I0428 20:15:07.173435   364 net.cpp:124] Setting up pool1
I0428 20:15:07.173442   364 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:15:07.173446   364 net.cpp:139] Memory required for data: 9457920
I0428 20:15:07.173449   364 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:07.173456   364 net.cpp:86] Creating Layer ip1
I0428 20:15:07.173460   364 net.cpp:408] ip1 <- pool1
I0428 20:15:07.173465   364 net.cpp:382] ip1 -> ip1
I0428 20:15:07.173558   364 net.cpp:124] Setting up ip1
I0428 20:15:07.173565   364 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:15:07.173568   364 net.cpp:139] Memory required for data: 9464320
I0428 20:15:07.173576   364 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:07.173581   364 net.cpp:86] Creating Layer relu1
I0428 20:15:07.173584   364 net.cpp:408] relu1 <- ip1
I0428 20:15:07.173589   364 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:07.173766   364 net.cpp:124] Setting up relu1
I0428 20:15:07.173776   364 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:15:07.173779   364 net.cpp:139] Memory required for data: 9470720
I0428 20:15:07.173782   364 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:07.173789   364 net.cpp:86] Creating Layer ip2
I0428 20:15:07.173791   364 net.cpp:408] ip2 <- ip1
I0428 20:15:07.173796   364 net.cpp:382] ip2 -> ip2
I0428 20:15:07.173894   364 net.cpp:124] Setting up ip2
I0428 20:15:07.173902   364 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:07.173904   364 net.cpp:139] Memory required for data: 9483520
I0428 20:15:07.173910   364 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:07.173915   364 net.cpp:86] Creating Layer relu2
I0428 20:15:07.173918   364 net.cpp:408] relu2 <- ip2
I0428 20:15:07.173923   364 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:07.174685   364 net.cpp:124] Setting up relu2
I0428 20:15:07.174698   364 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:07.174717   364 net.cpp:139] Memory required for data: 9496320
I0428 20:15:07.174721   364 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:07.174728   364 net.cpp:86] Creating Layer ip3
I0428 20:15:07.174731   364 net.cpp:408] ip3 <- ip2
I0428 20:15:07.174736   364 net.cpp:382] ip3 -> ip3
I0428 20:15:07.174830   364 net.cpp:124] Setting up ip3
I0428 20:15:07.174839   364 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:07.174841   364 net.cpp:139] Memory required for data: 9498880
I0428 20:15:07.174849   364 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:07.174854   364 net.cpp:86] Creating Layer relu3
I0428 20:15:07.174857   364 net.cpp:408] relu3 <- ip3
I0428 20:15:07.174861   364 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:07.175026   364 net.cpp:124] Setting up relu3
I0428 20:15:07.175035   364 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:07.175038   364 net.cpp:139] Memory required for data: 9501440
I0428 20:15:07.175041   364 layer_factory.hpp:77] Creating layer loss
I0428 20:15:07.175047   364 net.cpp:86] Creating Layer loss
I0428 20:15:07.175050   364 net.cpp:408] loss <- ip3
I0428 20:15:07.175053   364 net.cpp:408] loss <- label
I0428 20:15:07.175058   364 net.cpp:382] loss -> loss
I0428 20:15:07.175076   364 layer_factory.hpp:77] Creating layer loss
I0428 20:15:07.175314   364 net.cpp:124] Setting up loss
I0428 20:15:07.175324   364 net.cpp:131] Top shape: (1)
I0428 20:15:07.175328   364 net.cpp:134]     with loss weight 1
I0428 20:15:07.175341   364 net.cpp:139] Memory required for data: 9501444
I0428 20:15:07.175344   364 net.cpp:200] loss needs backward computation.
I0428 20:15:07.175348   364 net.cpp:200] relu3 needs backward computation.
I0428 20:15:07.175351   364 net.cpp:200] ip3 needs backward computation.
I0428 20:15:07.175354   364 net.cpp:200] relu2 needs backward computation.
I0428 20:15:07.175356   364 net.cpp:200] ip2 needs backward computation.
I0428 20:15:07.175359   364 net.cpp:200] relu1 needs backward computation.
I0428 20:15:07.175362   364 net.cpp:200] ip1 needs backward computation.
I0428 20:15:07.175365   364 net.cpp:200] pool1 needs backward computation.
I0428 20:15:07.175367   364 net.cpp:200] conv1 needs backward computation.
I0428 20:15:07.175371   364 net.cpp:200] pool0 needs backward computation.
I0428 20:15:07.175374   364 net.cpp:200] conv0 needs backward computation.
I0428 20:15:07.175379   364 net.cpp:202] mnist does not need backward computation.
I0428 20:15:07.175380   364 net.cpp:244] This network produces output loss
I0428 20:15:07.175390   364 net.cpp:257] Network initialization done.
I0428 20:15:07.175707   364 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1238.prototxt
I0428 20:15:07.175734   364 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:15:07.175818   364 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:07.175896   364 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:07.175937   364 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:15:07.175950   364 net.cpp:86] Creating Layer mnist
I0428 20:15:07.175954   364 net.cpp:382] mnist -> data
I0428 20:15:07.175961   364 net.cpp:382] mnist -> label
I0428 20:15:07.176041   364 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:15:07.178130   364 net.cpp:124] Setting up mnist
I0428 20:15:07.178175   364 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:15:07.178180   364 net.cpp:131] Top shape: 100 (100)
I0428 20:15:07.178184   364 net.cpp:139] Memory required for data: 314000
I0428 20:15:07.178186   364 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:15:07.178194   364 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:15:07.178196   364 net.cpp:408] label_mnist_1_split <- label
I0428 20:15:07.178202   364 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:15:07.178210   364 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:15:07.178266   364 net.cpp:124] Setting up label_mnist_1_split
I0428 20:15:07.178273   364 net.cpp:131] Top shape: 100 (100)
I0428 20:15:07.178277   364 net.cpp:131] Top shape: 100 (100)
I0428 20:15:07.178279   364 net.cpp:139] Memory required for data: 314800
I0428 20:15:07.178282   364 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:07.178292   364 net.cpp:86] Creating Layer conv0
I0428 20:15:07.178294   364 net.cpp:408] conv0 <- data
I0428 20:15:07.178299   364 net.cpp:382] conv0 -> conv0
I0428 20:15:07.180053   364 net.cpp:124] Setting up conv0
I0428 20:15:07.180083   364 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:15:07.180086   364 net.cpp:139] Memory required for data: 11834800
I0428 20:15:07.180095   364 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:07.180102   364 net.cpp:86] Creating Layer pool0
I0428 20:15:07.180105   364 net.cpp:408] pool0 <- conv0
I0428 20:15:07.180110   364 net.cpp:382] pool0 -> pool0
I0428 20:15:07.180172   364 net.cpp:124] Setting up pool0
I0428 20:15:07.180188   364 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:15:07.180191   364 net.cpp:139] Memory required for data: 14714800
I0428 20:15:07.180193   364 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:07.180202   364 net.cpp:86] Creating Layer conv1
I0428 20:15:07.180205   364 net.cpp:408] conv1 <- pool0
I0428 20:15:07.180212   364 net.cpp:382] conv1 -> conv1
I0428 20:15:07.182468   364 net.cpp:124] Setting up conv1
I0428 20:15:07.182482   364 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:15:07.182502   364 net.cpp:139] Memory required for data: 14766000
I0428 20:15:07.182509   364 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:07.182516   364 net.cpp:86] Creating Layer pool1
I0428 20:15:07.182520   364 net.cpp:408] pool1 <- conv1
I0428 20:15:07.182526   364 net.cpp:382] pool1 -> pool1
I0428 20:15:07.182582   364 net.cpp:124] Setting up pool1
I0428 20:15:07.182588   364 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:15:07.182591   364 net.cpp:139] Memory required for data: 14778800
I0428 20:15:07.182600   364 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:07.182623   364 net.cpp:86] Creating Layer ip1
I0428 20:15:07.182626   364 net.cpp:408] ip1 <- pool1
I0428 20:15:07.182632   364 net.cpp:382] ip1 -> ip1
I0428 20:15:07.182770   364 net.cpp:124] Setting up ip1
I0428 20:15:07.182780   364 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:15:07.182793   364 net.cpp:139] Memory required for data: 14788800
I0428 20:15:07.182801   364 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:07.182807   364 net.cpp:86] Creating Layer relu1
I0428 20:15:07.182811   364 net.cpp:408] relu1 <- ip1
I0428 20:15:07.182814   364 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:07.183012   364 net.cpp:124] Setting up relu1
I0428 20:15:07.183023   364 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:15:07.183046   364 net.cpp:139] Memory required for data: 14798800
I0428 20:15:07.183049   364 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:07.183056   364 net.cpp:86] Creating Layer ip2
I0428 20:15:07.183060   364 net.cpp:408] ip2 <- ip1
I0428 20:15:07.183066   364 net.cpp:382] ip2 -> ip2
I0428 20:15:07.183176   364 net.cpp:124] Setting up ip2
I0428 20:15:07.183182   364 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:07.183185   364 net.cpp:139] Memory required for data: 14818800
I0428 20:15:07.183192   364 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:07.183197   364 net.cpp:86] Creating Layer relu2
I0428 20:15:07.183199   364 net.cpp:408] relu2 <- ip2
I0428 20:15:07.183204   364 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:07.183435   364 net.cpp:124] Setting up relu2
I0428 20:15:07.183445   364 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:07.183450   364 net.cpp:139] Memory required for data: 14838800
I0428 20:15:07.183455   364 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:07.183465   364 net.cpp:86] Creating Layer ip3
I0428 20:15:07.183471   364 net.cpp:408] ip3 <- ip2
I0428 20:15:07.183478   364 net.cpp:382] ip3 -> ip3
I0428 20:15:07.183603   364 net.cpp:124] Setting up ip3
I0428 20:15:07.183611   364 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:07.183614   364 net.cpp:139] Memory required for data: 14842800
I0428 20:15:07.183624   364 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:07.183629   364 net.cpp:86] Creating Layer relu3
I0428 20:15:07.183631   364 net.cpp:408] relu3 <- ip3
I0428 20:15:07.183640   364 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:07.184460   364 net.cpp:124] Setting up relu3
I0428 20:15:07.184473   364 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:07.184491   364 net.cpp:139] Memory required for data: 14846800
I0428 20:15:07.184496   364 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:15:07.184520   364 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:15:07.184528   364 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:15:07.184533   364 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:15:07.184538   364 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:15:07.184609   364 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:15:07.184617   364 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:07.184620   364 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:07.184623   364 net.cpp:139] Memory required for data: 14854800
I0428 20:15:07.184626   364 layer_factory.hpp:77] Creating layer accuracy
I0428 20:15:07.184631   364 net.cpp:86] Creating Layer accuracy
I0428 20:15:07.184635   364 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:15:07.184639   364 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:15:07.184644   364 net.cpp:382] accuracy -> accuracy
I0428 20:15:07.184651   364 net.cpp:124] Setting up accuracy
I0428 20:15:07.184655   364 net.cpp:131] Top shape: (1)
I0428 20:15:07.184659   364 net.cpp:139] Memory required for data: 14854804
I0428 20:15:07.184661   364 layer_factory.hpp:77] Creating layer loss
I0428 20:15:07.184665   364 net.cpp:86] Creating Layer loss
I0428 20:15:07.184669   364 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:15:07.184672   364 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:15:07.184677   364 net.cpp:382] loss -> loss
I0428 20:15:07.184682   364 layer_factory.hpp:77] Creating layer loss
I0428 20:15:07.185009   364 net.cpp:124] Setting up loss
I0428 20:15:07.185036   364 net.cpp:131] Top shape: (1)
I0428 20:15:07.185039   364 net.cpp:134]     with loss weight 1
I0428 20:15:07.185071   364 net.cpp:139] Memory required for data: 14854808
I0428 20:15:07.185076   364 net.cpp:200] loss needs backward computation.
I0428 20:15:07.185081   364 net.cpp:202] accuracy does not need backward computation.
I0428 20:15:07.185084   364 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:15:07.185087   364 net.cpp:200] relu3 needs backward computation.
I0428 20:15:07.185091   364 net.cpp:200] ip3 needs backward computation.
I0428 20:15:07.185093   364 net.cpp:200] relu2 needs backward computation.
I0428 20:15:07.185096   364 net.cpp:200] ip2 needs backward computation.
I0428 20:15:07.185099   364 net.cpp:200] relu1 needs backward computation.
I0428 20:15:07.185102   364 net.cpp:200] ip1 needs backward computation.
I0428 20:15:07.185106   364 net.cpp:200] pool1 needs backward computation.
I0428 20:15:07.185109   364 net.cpp:200] conv1 needs backward computation.
I0428 20:15:07.185112   364 net.cpp:200] pool0 needs backward computation.
I0428 20:15:07.185117   364 net.cpp:200] conv0 needs backward computation.
I0428 20:15:07.185120   364 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:15:07.185124   364 net.cpp:202] mnist does not need backward computation.
I0428 20:15:07.185127   364 net.cpp:244] This network produces output accuracy
I0428 20:15:07.185130   364 net.cpp:244] This network produces output loss
I0428 20:15:07.185143   364 net.cpp:257] Network initialization done.
I0428 20:15:07.185215   364 solver.cpp:56] Solver scaffolding done.
I0428 20:15:07.185614   364 caffe.cpp:248] Starting Optimization
I0428 20:15:07.185622   364 solver.cpp:273] Solving LeNet
I0428 20:15:07.185624   364 solver.cpp:274] Learning Rate Policy: inv
I0428 20:15:07.186553   364 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:15:07.192255   364 blocking_queue.cpp:49] Waiting for data
I0428 20:15:07.263806   371 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:07.264587   364 solver.cpp:398]     Test net output #0: accuracy = 0.1335
I0428 20:15:07.264621   364 solver.cpp:398]     Test net output #1: loss = 2.30858 (* 1 = 2.30858 loss)
I0428 20:15:07.268898   364 solver.cpp:219] Iteration 0 (-1.02671e-30 iter/s, 0.0832225s/100 iters), loss = 2.32554
I0428 20:15:07.268936   364 solver.cpp:238]     Train net output #0: loss = 2.32554 (* 1 = 2.32554 loss)
I0428 20:15:07.268947   364 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:15:07.383368   364 solver.cpp:219] Iteration 100 (873.881 iter/s, 0.114432s/100 iters), loss = 1.45337
I0428 20:15:07.383407   364 solver.cpp:238]     Train net output #0: loss = 1.45337 (* 1 = 1.45337 loss)
I0428 20:15:07.383414   364 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:15:07.496676   364 solver.cpp:219] Iteration 200 (882.808 iter/s, 0.113275s/100 iters), loss = 0.804059
I0428 20:15:07.496716   364 solver.cpp:238]     Train net output #0: loss = 0.804059 (* 1 = 0.804059 loss)
I0428 20:15:07.496723   364 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:15:07.607687   364 solver.cpp:219] Iteration 300 (901.097 iter/s, 0.110976s/100 iters), loss = 1.03524
I0428 20:15:07.607728   364 solver.cpp:238]     Train net output #0: loss = 1.03524 (* 1 = 1.03524 loss)
I0428 20:15:07.607734   364 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:15:07.718906   364 solver.cpp:219] Iteration 400 (899.411 iter/s, 0.111184s/100 iters), loss = 1.2232
I0428 20:15:07.718930   364 solver.cpp:238]     Train net output #0: loss = 1.2232 (* 1 = 1.2232 loss)
I0428 20:15:07.718935   364 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:15:07.831872   364 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:15:07.896373   371 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:07.898103   364 solver.cpp:398]     Test net output #0: accuracy = 0.7333
I0428 20:15:07.898125   364 solver.cpp:398]     Test net output #1: loss = 0.892277 (* 1 = 0.892277 loss)
I0428 20:15:07.899240   364 solver.cpp:219] Iteration 500 (554.648 iter/s, 0.180294s/100 iters), loss = 1.06764
I0428 20:15:07.899298   364 solver.cpp:238]     Train net output #0: loss = 1.06764 (* 1 = 1.06764 loss)
I0428 20:15:07.899307   364 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:15:08.024485   364 solver.cpp:219] Iteration 600 (798.87 iter/s, 0.125177s/100 iters), loss = 0.622722
I0428 20:15:08.024510   364 solver.cpp:238]     Train net output #0: loss = 0.622722 (* 1 = 0.622722 loss)
I0428 20:15:08.024518   364 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:15:08.143278   364 solver.cpp:219] Iteration 700 (842.059 iter/s, 0.118757s/100 iters), loss = 0.79035
I0428 20:15:08.143318   364 solver.cpp:238]     Train net output #0: loss = 0.79035 (* 1 = 0.79035 loss)
I0428 20:15:08.143324   364 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:15:08.255308   364 solver.cpp:219] Iteration 800 (892.89 iter/s, 0.111996s/100 iters), loss = 0.962575
I0428 20:15:08.255349   364 solver.cpp:238]     Train net output #0: loss = 0.962575 (* 1 = 0.962575 loss)
I0428 20:15:08.255357   364 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:15:08.366207   364 solver.cpp:219] Iteration 900 (902.027 iter/s, 0.110861s/100 iters), loss = 0.733275
I0428 20:15:08.366246   364 solver.cpp:238]     Train net output #0: loss = 0.733275 (* 1 = 0.733275 loss)
I0428 20:15:08.366252   364 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:15:08.403242   370 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:08.475391   364 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:15:08.476310   364 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:15:08.477025   364 solver.cpp:311] Iteration 1000, loss = 0.794604
I0428 20:15:08.477041   364 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:15:08.541553   371 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:08.543352   364 solver.cpp:398]     Test net output #0: accuracy = 0.762
I0428 20:15:08.543371   364 solver.cpp:398]     Test net output #1: loss = 0.812319 (* 1 = 0.812319 loss)
I0428 20:15:08.543377   364 solver.cpp:316] Optimization Done.
I0428 20:15:08.543383   364 caffe.cpp:259] Optimization Done.
