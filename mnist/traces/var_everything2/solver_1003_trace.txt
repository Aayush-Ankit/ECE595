I0428 20:05:33.284871 30643 caffe.cpp:218] Using GPUs 0
I0428 20:05:33.322382 30643 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:33.779119 30643 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1003.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:33.779247 30643 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1003.prototxt
I0428 20:05:33.779575 30643 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:33.779603 30643 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:33.779677 30643 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:33.779736 30643 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:33.779834 30643 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:33.779855 30643 net.cpp:86] Creating Layer mnist
I0428 20:05:33.779862 30643 net.cpp:382] mnist -> data
I0428 20:05:33.779881 30643 net.cpp:382] mnist -> label
I0428 20:05:33.780923 30643 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:33.783144 30643 net.cpp:124] Setting up mnist
I0428 20:05:33.783174 30643 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:33.783179 30643 net.cpp:131] Top shape: 64 (64)
I0428 20:05:33.783181 30643 net.cpp:139] Memory required for data: 200960
I0428 20:05:33.783187 30643 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:33.783200 30643 net.cpp:86] Creating Layer conv0
I0428 20:05:33.783219 30643 net.cpp:408] conv0 <- data
I0428 20:05:33.783228 30643 net.cpp:382] conv0 -> conv0
I0428 20:05:34.019578 30643 net.cpp:124] Setting up conv0
I0428 20:05:34.019604 30643 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:34.019608 30643 net.cpp:139] Memory required for data: 3887360
I0428 20:05:34.019623 30643 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:34.019634 30643 net.cpp:86] Creating Layer pool0
I0428 20:05:34.019639 30643 net.cpp:408] pool0 <- conv0
I0428 20:05:34.019644 30643 net.cpp:382] pool0 -> pool0
I0428 20:05:34.019702 30643 net.cpp:124] Setting up pool0
I0428 20:05:34.019711 30643 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:34.019713 30643 net.cpp:139] Memory required for data: 4808960
I0428 20:05:34.019716 30643 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:34.019726 30643 net.cpp:86] Creating Layer conv1
I0428 20:05:34.019731 30643 net.cpp:408] conv1 <- pool0
I0428 20:05:34.019752 30643 net.cpp:382] conv1 -> conv1
I0428 20:05:34.022549 30643 net.cpp:124] Setting up conv1
I0428 20:05:34.022563 30643 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:34.022567 30643 net.cpp:139] Memory required for data: 4841728
I0428 20:05:34.022575 30643 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:34.022583 30643 net.cpp:86] Creating Layer pool1
I0428 20:05:34.022586 30643 net.cpp:408] pool1 <- conv1
I0428 20:05:34.022591 30643 net.cpp:382] pool1 -> pool1
I0428 20:05:34.022626 30643 net.cpp:124] Setting up pool1
I0428 20:05:34.022632 30643 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:34.022635 30643 net.cpp:139] Memory required for data: 4849920
I0428 20:05:34.022639 30643 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:34.022646 30643 net.cpp:86] Creating Layer ip1
I0428 20:05:34.022650 30643 net.cpp:408] ip1 <- pool1
I0428 20:05:34.022655 30643 net.cpp:382] ip1 -> ip1
I0428 20:05:34.022753 30643 net.cpp:124] Setting up ip1
I0428 20:05:34.022761 30643 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:34.022764 30643 net.cpp:139] Memory required for data: 4856320
I0428 20:05:34.022770 30643 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:34.022776 30643 net.cpp:86] Creating Layer relu1
I0428 20:05:34.022779 30643 net.cpp:408] relu1 <- ip1
I0428 20:05:34.022783 30643 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:34.022945 30643 net.cpp:124] Setting up relu1
I0428 20:05:34.022954 30643 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:34.022958 30643 net.cpp:139] Memory required for data: 4862720
I0428 20:05:34.022960 30643 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:34.022967 30643 net.cpp:86] Creating Layer ip2
I0428 20:05:34.022970 30643 net.cpp:408] ip2 <- ip1
I0428 20:05:34.022975 30643 net.cpp:382] ip2 -> ip2
I0428 20:05:34.023079 30643 net.cpp:124] Setting up ip2
I0428 20:05:34.023087 30643 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:34.023089 30643 net.cpp:139] Memory required for data: 4875520
I0428 20:05:34.023094 30643 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:34.023099 30643 net.cpp:86] Creating Layer relu2
I0428 20:05:34.023102 30643 net.cpp:408] relu2 <- ip2
I0428 20:05:34.023108 30643 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:34.023846 30643 net.cpp:124] Setting up relu2
I0428 20:05:34.023859 30643 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:34.023864 30643 net.cpp:139] Memory required for data: 4888320
I0428 20:05:34.023903 30643 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:34.023911 30643 net.cpp:86] Creating Layer ip3
I0428 20:05:34.023916 30643 net.cpp:408] ip3 <- ip2
I0428 20:05:34.023921 30643 net.cpp:382] ip3 -> ip3
I0428 20:05:34.024024 30643 net.cpp:124] Setting up ip3
I0428 20:05:34.024031 30643 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:34.024034 30643 net.cpp:139] Memory required for data: 4890880
I0428 20:05:34.024041 30643 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:34.024046 30643 net.cpp:86] Creating Layer relu3
I0428 20:05:34.024049 30643 net.cpp:408] relu3 <- ip3
I0428 20:05:34.024054 30643 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:34.024232 30643 net.cpp:124] Setting up relu3
I0428 20:05:34.024242 30643 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:34.024245 30643 net.cpp:139] Memory required for data: 4893440
I0428 20:05:34.024248 30643 layer_factory.hpp:77] Creating layer loss
I0428 20:05:34.024253 30643 net.cpp:86] Creating Layer loss
I0428 20:05:34.024257 30643 net.cpp:408] loss <- ip3
I0428 20:05:34.024260 30643 net.cpp:408] loss <- label
I0428 20:05:34.024266 30643 net.cpp:382] loss -> loss
I0428 20:05:34.024283 30643 layer_factory.hpp:77] Creating layer loss
I0428 20:05:34.024498 30643 net.cpp:124] Setting up loss
I0428 20:05:34.024507 30643 net.cpp:131] Top shape: (1)
I0428 20:05:34.024511 30643 net.cpp:134]     with loss weight 1
I0428 20:05:34.024524 30643 net.cpp:139] Memory required for data: 4893444
I0428 20:05:34.024528 30643 net.cpp:200] loss needs backward computation.
I0428 20:05:34.024530 30643 net.cpp:200] relu3 needs backward computation.
I0428 20:05:34.024533 30643 net.cpp:200] ip3 needs backward computation.
I0428 20:05:34.024536 30643 net.cpp:200] relu2 needs backward computation.
I0428 20:05:34.024538 30643 net.cpp:200] ip2 needs backward computation.
I0428 20:05:34.024541 30643 net.cpp:200] relu1 needs backward computation.
I0428 20:05:34.024544 30643 net.cpp:200] ip1 needs backward computation.
I0428 20:05:34.024547 30643 net.cpp:200] pool1 needs backward computation.
I0428 20:05:34.024550 30643 net.cpp:200] conv1 needs backward computation.
I0428 20:05:34.024554 30643 net.cpp:200] pool0 needs backward computation.
I0428 20:05:34.024555 30643 net.cpp:200] conv0 needs backward computation.
I0428 20:05:34.024559 30643 net.cpp:202] mnist does not need backward computation.
I0428 20:05:34.024561 30643 net.cpp:244] This network produces output loss
I0428 20:05:34.024569 30643 net.cpp:257] Network initialization done.
I0428 20:05:34.024910 30643 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1003.prototxt
I0428 20:05:34.024953 30643 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:34.025058 30643 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:34.025149 30643 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:34.025192 30643 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:34.025214 30643 net.cpp:86] Creating Layer mnist
I0428 20:05:34.025219 30643 net.cpp:382] mnist -> data
I0428 20:05:34.025228 30643 net.cpp:382] mnist -> label
I0428 20:05:34.025319 30643 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:34.027217 30643 net.cpp:124] Setting up mnist
I0428 20:05:34.027230 30643 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:34.027248 30643 net.cpp:131] Top shape: 100 (100)
I0428 20:05:34.027252 30643 net.cpp:139] Memory required for data: 314000
I0428 20:05:34.027256 30643 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:34.027262 30643 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:34.027266 30643 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:34.027271 30643 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:34.027276 30643 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:34.027318 30643 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:34.027323 30643 net.cpp:131] Top shape: 100 (100)
I0428 20:05:34.027328 30643 net.cpp:131] Top shape: 100 (100)
I0428 20:05:34.027331 30643 net.cpp:139] Memory required for data: 314800
I0428 20:05:34.027334 30643 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:34.027341 30643 net.cpp:86] Creating Layer conv0
I0428 20:05:34.027344 30643 net.cpp:408] conv0 <- data
I0428 20:05:34.027349 30643 net.cpp:382] conv0 -> conv0
I0428 20:05:34.029203 30643 net.cpp:124] Setting up conv0
I0428 20:05:34.029232 30643 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:34.029235 30643 net.cpp:139] Memory required for data: 6074800
I0428 20:05:34.029259 30643 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:34.029265 30643 net.cpp:86] Creating Layer pool0
I0428 20:05:34.029268 30643 net.cpp:408] pool0 <- conv0
I0428 20:05:34.029273 30643 net.cpp:382] pool0 -> pool0
I0428 20:05:34.029320 30643 net.cpp:124] Setting up pool0
I0428 20:05:34.029326 30643 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:34.029330 30643 net.cpp:139] Memory required for data: 7514800
I0428 20:05:34.029332 30643 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:34.029355 30643 net.cpp:86] Creating Layer conv1
I0428 20:05:34.029357 30643 net.cpp:408] conv1 <- pool0
I0428 20:05:34.029362 30643 net.cpp:382] conv1 -> conv1
I0428 20:05:34.031554 30643 net.cpp:124] Setting up conv1
I0428 20:05:34.031568 30643 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:34.031571 30643 net.cpp:139] Memory required for data: 7566000
I0428 20:05:34.031580 30643 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:34.031586 30643 net.cpp:86] Creating Layer pool1
I0428 20:05:34.031590 30643 net.cpp:408] pool1 <- conv1
I0428 20:05:34.031595 30643 net.cpp:382] pool1 -> pool1
I0428 20:05:34.031646 30643 net.cpp:124] Setting up pool1
I0428 20:05:34.031651 30643 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:34.031653 30643 net.cpp:139] Memory required for data: 7578800
I0428 20:05:34.031656 30643 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:34.031662 30643 net.cpp:86] Creating Layer ip1
I0428 20:05:34.031666 30643 net.cpp:408] ip1 <- pool1
I0428 20:05:34.031671 30643 net.cpp:382] ip1 -> ip1
I0428 20:05:34.031775 30643 net.cpp:124] Setting up ip1
I0428 20:05:34.031783 30643 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:34.031796 30643 net.cpp:139] Memory required for data: 7588800
I0428 20:05:34.031803 30643 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:34.031808 30643 net.cpp:86] Creating Layer relu1
I0428 20:05:34.031811 30643 net.cpp:408] relu1 <- ip1
I0428 20:05:34.031816 30643 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:34.032059 30643 net.cpp:124] Setting up relu1
I0428 20:05:34.032068 30643 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:34.032071 30643 net.cpp:139] Memory required for data: 7598800
I0428 20:05:34.032079 30643 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:34.032086 30643 net.cpp:86] Creating Layer ip2
I0428 20:05:34.032090 30643 net.cpp:408] ip2 <- ip1
I0428 20:05:34.032095 30643 net.cpp:382] ip2 -> ip2
I0428 20:05:34.032198 30643 net.cpp:124] Setting up ip2
I0428 20:05:34.032207 30643 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:34.032222 30643 net.cpp:139] Memory required for data: 7618800
I0428 20:05:34.032227 30643 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:34.032232 30643 net.cpp:86] Creating Layer relu2
I0428 20:05:34.032235 30643 net.cpp:408] relu2 <- ip2
I0428 20:05:34.032240 30643 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:34.032400 30643 net.cpp:124] Setting up relu2
I0428 20:05:34.032409 30643 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:34.032413 30643 net.cpp:139] Memory required for data: 7638800
I0428 20:05:34.032415 30643 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:34.032420 30643 net.cpp:86] Creating Layer ip3
I0428 20:05:34.032424 30643 net.cpp:408] ip3 <- ip2
I0428 20:05:34.032429 30643 net.cpp:382] ip3 -> ip3
I0428 20:05:34.032526 30643 net.cpp:124] Setting up ip3
I0428 20:05:34.032534 30643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:34.032537 30643 net.cpp:139] Memory required for data: 7642800
I0428 20:05:34.032552 30643 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:34.032557 30643 net.cpp:86] Creating Layer relu3
I0428 20:05:34.032559 30643 net.cpp:408] relu3 <- ip3
I0428 20:05:34.032563 30643 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:34.033373 30643 net.cpp:124] Setting up relu3
I0428 20:05:34.033385 30643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:34.033403 30643 net.cpp:139] Memory required for data: 7646800
I0428 20:05:34.033406 30643 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:34.033427 30643 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:34.033430 30643 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:34.033445 30643 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:34.033452 30643 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:34.033527 30643 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:34.033536 30643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:34.033541 30643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:34.033545 30643 net.cpp:139] Memory required for data: 7654800
I0428 20:05:34.033547 30643 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:34.033552 30643 net.cpp:86] Creating Layer accuracy
I0428 20:05:34.033556 30643 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:34.033560 30643 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:34.033565 30643 net.cpp:382] accuracy -> accuracy
I0428 20:05:34.033573 30643 net.cpp:124] Setting up accuracy
I0428 20:05:34.033577 30643 net.cpp:131] Top shape: (1)
I0428 20:05:34.033581 30643 net.cpp:139] Memory required for data: 7654804
I0428 20:05:34.033584 30643 layer_factory.hpp:77] Creating layer loss
I0428 20:05:34.033589 30643 net.cpp:86] Creating Layer loss
I0428 20:05:34.033592 30643 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:34.033596 30643 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:34.033601 30643 net.cpp:382] loss -> loss
I0428 20:05:34.033607 30643 layer_factory.hpp:77] Creating layer loss
I0428 20:05:34.033881 30643 net.cpp:124] Setting up loss
I0428 20:05:34.033891 30643 net.cpp:131] Top shape: (1)
I0428 20:05:34.033895 30643 net.cpp:134]     with loss weight 1
I0428 20:05:34.033902 30643 net.cpp:139] Memory required for data: 7654808
I0428 20:05:34.033922 30643 net.cpp:200] loss needs backward computation.
I0428 20:05:34.033931 30643 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:34.033936 30643 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:34.033938 30643 net.cpp:200] relu3 needs backward computation.
I0428 20:05:34.033941 30643 net.cpp:200] ip3 needs backward computation.
I0428 20:05:34.033948 30643 net.cpp:200] relu2 needs backward computation.
I0428 20:05:34.033951 30643 net.cpp:200] ip2 needs backward computation.
I0428 20:05:34.033954 30643 net.cpp:200] relu1 needs backward computation.
I0428 20:05:34.033957 30643 net.cpp:200] ip1 needs backward computation.
I0428 20:05:34.033960 30643 net.cpp:200] pool1 needs backward computation.
I0428 20:05:34.033963 30643 net.cpp:200] conv1 needs backward computation.
I0428 20:05:34.033967 30643 net.cpp:200] pool0 needs backward computation.
I0428 20:05:34.033970 30643 net.cpp:200] conv0 needs backward computation.
I0428 20:05:34.033973 30643 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:34.033977 30643 net.cpp:202] mnist does not need backward computation.
I0428 20:05:34.033980 30643 net.cpp:244] This network produces output accuracy
I0428 20:05:34.033983 30643 net.cpp:244] This network produces output loss
I0428 20:05:34.033993 30643 net.cpp:257] Network initialization done.
I0428 20:05:34.034034 30643 solver.cpp:56] Solver scaffolding done.
I0428 20:05:34.034381 30643 caffe.cpp:248] Starting Optimization
I0428 20:05:34.034387 30643 solver.cpp:273] Solving LeNet
I0428 20:05:34.034390 30643 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:34.035254 30643 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:34.039960 30643 blocking_queue.cpp:49] Waiting for data
I0428 20:05:34.110945 30650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:34.111551 30643 solver.cpp:398]     Test net output #0: accuracy = 0.157
I0428 20:05:34.111585 30643 solver.cpp:398]     Test net output #1: loss = 2.33691 (* 1 = 2.33691 loss)
I0428 20:05:34.114660 30643 solver.cpp:219] Iteration 0 (-1.01314e-42 iter/s, 0.0802304s/100 iters), loss = 2.30961
I0428 20:05:34.114697 30643 solver.cpp:238]     Train net output #0: loss = 2.30961 (* 1 = 2.30961 loss)
I0428 20:05:34.114708 30643 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:34.204430 30643 solver.cpp:219] Iteration 100 (1114.36 iter/s, 0.0897372s/100 iters), loss = 1.23023
I0428 20:05:34.204468 30643 solver.cpp:238]     Train net output #0: loss = 1.23023 (* 1 = 1.23023 loss)
I0428 20:05:34.204474 30643 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:34.291793 30643 solver.cpp:219] Iteration 200 (1145.28 iter/s, 0.0873146s/100 iters), loss = 0.87542
I0428 20:05:34.291844 30643 solver.cpp:238]     Train net output #0: loss = 0.87542 (* 1 = 0.87542 loss)
I0428 20:05:34.291851 30643 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:34.379117 30643 solver.cpp:219] Iteration 300 (1145.78 iter/s, 0.0872767s/100 iters), loss = 0.741404
I0428 20:05:34.379140 30643 solver.cpp:238]     Train net output #0: loss = 0.741404 (* 1 = 0.741404 loss)
I0428 20:05:34.379148 30643 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:34.464951 30643 solver.cpp:219] Iteration 400 (1165.5 iter/s, 0.0857999s/100 iters), loss = 1.02391
I0428 20:05:34.464974 30643 solver.cpp:238]     Train net output #0: loss = 1.02391 (* 1 = 1.02391 loss)
I0428 20:05:34.464980 30643 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:34.549787 30643 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:34.603499 30650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:34.604071 30643 solver.cpp:398]     Test net output #0: accuracy = 0.7569
I0428 20:05:34.604090 30643 solver.cpp:398]     Test net output #1: loss = 0.706599 (* 1 = 0.706599 loss)
I0428 20:05:34.604982 30643 solver.cpp:219] Iteration 500 (714.315 iter/s, 0.139994s/100 iters), loss = 0.957127
I0428 20:05:34.605041 30643 solver.cpp:238]     Train net output #0: loss = 0.957127 (* 1 = 0.957127 loss)
I0428 20:05:34.605049 30643 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:34.700368 30643 solver.cpp:219] Iteration 600 (1049.01 iter/s, 0.0953283s/100 iters), loss = 0.739984
I0428 20:05:34.700393 30643 solver.cpp:238]     Train net output #0: loss = 0.739984 (* 1 = 0.739984 loss)
I0428 20:05:34.700399 30643 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:34.787129 30643 solver.cpp:219] Iteration 700 (1153.05 iter/s, 0.0867267s/100 iters), loss = 0.89772
I0428 20:05:34.787153 30643 solver.cpp:238]     Train net output #0: loss = 0.89772 (* 1 = 0.89772 loss)
I0428 20:05:34.787159 30643 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:34.872289 30643 solver.cpp:219] Iteration 800 (1174.73 iter/s, 0.0851261s/100 iters), loss = 0.660989
I0428 20:05:34.872315 30643 solver.cpp:238]     Train net output #0: loss = 0.660989 (* 1 = 0.660989 loss)
I0428 20:05:34.872321 30643 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:34.958318 30643 solver.cpp:219] Iteration 900 (1162.88 iter/s, 0.0859933s/100 iters), loss = 0.320976
I0428 20:05:34.958343 30643 solver.cpp:238]     Train net output #0: loss = 0.320976 (* 1 = 0.320976 loss)
I0428 20:05:34.958349 30643 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:34.986876 30649 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:35.044149 30643 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:35.044893 30643 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:35.045418 30643 solver.cpp:311] Iteration 1000, loss = 0.288273
I0428 20:05:35.045438 30643 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:35.099504 30650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:35.100088 30643 solver.cpp:398]     Test net output #0: accuracy = 0.9318
I0428 20:05:35.100106 30643 solver.cpp:398]     Test net output #1: loss = 0.224232 (* 1 = 0.224232 loss)
I0428 20:05:35.100111 30643 solver.cpp:316] Optimization Done.
I0428 20:05:35.100114 30643 caffe.cpp:259] Optimization Done.
