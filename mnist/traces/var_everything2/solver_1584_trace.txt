I0428 20:33:11.160130  4253 caffe.cpp:218] Using GPUs 0
I0428 20:33:11.196856  4253 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:11.706027  4253 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1584.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:11.706177  4253 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1584.prototxt
I0428 20:33:11.706596  4253 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:11.706614  4253 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:11.706718  4253 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:11.706799  4253 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:11.706898  4253 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:11.706921  4253 net.cpp:86] Creating Layer mnist
I0428 20:33:11.706928  4253 net.cpp:382] mnist -> data
I0428 20:33:11.706953  4253 net.cpp:382] mnist -> label
I0428 20:33:11.708045  4253 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:11.710520  4253 net.cpp:124] Setting up mnist
I0428 20:33:11.710549  4253 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:11.710556  4253 net.cpp:131] Top shape: 64 (64)
I0428 20:33:11.710559  4253 net.cpp:139] Memory required for data: 200960
I0428 20:33:11.710566  4253 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:11.710583  4253 net.cpp:86] Creating Layer conv0
I0428 20:33:11.710604  4253 net.cpp:408] conv0 <- data
I0428 20:33:11.710616  4253 net.cpp:382] conv0 -> conv0
I0428 20:33:11.986778  4253 net.cpp:124] Setting up conv0
I0428 20:33:11.986804  4253 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:11.986809  4253 net.cpp:139] Memory required for data: 14946560
I0428 20:33:11.986822  4253 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:11.986835  4253 net.cpp:86] Creating Layer pool0
I0428 20:33:11.986838  4253 net.cpp:408] pool0 <- conv0
I0428 20:33:11.986843  4253 net.cpp:382] pool0 -> pool0
I0428 20:33:11.986905  4253 net.cpp:124] Setting up pool0
I0428 20:33:11.986912  4253 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:11.986915  4253 net.cpp:139] Memory required for data: 18632960
I0428 20:33:11.986918  4253 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:11.986928  4253 net.cpp:86] Creating Layer conv1
I0428 20:33:11.986934  4253 net.cpp:408] conv1 <- pool0
I0428 20:33:11.986954  4253 net.cpp:382] conv1 -> conv1
I0428 20:33:11.989200  4253 net.cpp:124] Setting up conv1
I0428 20:33:11.989230  4253 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:11.989234  4253 net.cpp:139] Memory required for data: 19042560
I0428 20:33:11.989243  4253 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:11.989249  4253 net.cpp:86] Creating Layer pool1
I0428 20:33:11.989253  4253 net.cpp:408] pool1 <- conv1
I0428 20:33:11.989258  4253 net.cpp:382] pool1 -> pool1
I0428 20:33:11.989308  4253 net.cpp:124] Setting up pool1
I0428 20:33:11.989315  4253 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:11.989317  4253 net.cpp:139] Memory required for data: 19144960
I0428 20:33:11.989320  4253 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:11.989331  4253 net.cpp:86] Creating Layer ip1
I0428 20:33:11.989334  4253 net.cpp:408] ip1 <- pool1
I0428 20:33:11.989338  4253 net.cpp:382] ip1 -> ip1
I0428 20:33:11.990372  4253 net.cpp:124] Setting up ip1
I0428 20:33:11.990384  4253 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:11.990404  4253 net.cpp:139] Memory required for data: 19151360
I0428 20:33:11.990412  4253 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:11.990418  4253 net.cpp:86] Creating Layer relu1
I0428 20:33:11.990422  4253 net.cpp:408] relu1 <- ip1
I0428 20:33:11.990427  4253 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:11.990615  4253 net.cpp:124] Setting up relu1
I0428 20:33:11.990623  4253 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:11.990627  4253 net.cpp:139] Memory required for data: 19157760
I0428 20:33:11.990630  4253 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:11.990636  4253 net.cpp:86] Creating Layer ip2
I0428 20:33:11.990639  4253 net.cpp:408] ip2 <- ip1
I0428 20:33:11.990643  4253 net.cpp:382] ip2 -> ip2
I0428 20:33:11.990732  4253 net.cpp:124] Setting up ip2
I0428 20:33:11.990738  4253 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:11.990741  4253 net.cpp:139] Memory required for data: 19164160
I0428 20:33:11.990747  4253 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:11.990752  4253 net.cpp:86] Creating Layer relu2
I0428 20:33:11.990756  4253 net.cpp:408] relu2 <- ip2
I0428 20:33:11.990759  4253 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:11.991569  4253 net.cpp:124] Setting up relu2
I0428 20:33:11.991597  4253 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:11.991600  4253 net.cpp:139] Memory required for data: 19170560
I0428 20:33:11.991605  4253 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:11.991612  4253 net.cpp:86] Creating Layer ip3
I0428 20:33:11.991616  4253 net.cpp:408] ip3 <- ip2
I0428 20:33:11.991622  4253 net.cpp:382] ip3 -> ip3
I0428 20:33:11.991765  4253 net.cpp:124] Setting up ip3
I0428 20:33:11.991772  4253 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:11.991775  4253 net.cpp:139] Memory required for data: 19173120
I0428 20:33:11.991783  4253 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:11.991788  4253 net.cpp:86] Creating Layer relu3
I0428 20:33:11.991791  4253 net.cpp:408] relu3 <- ip3
I0428 20:33:11.991809  4253 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:11.991969  4253 net.cpp:124] Setting up relu3
I0428 20:33:11.991977  4253 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:11.991981  4253 net.cpp:139] Memory required for data: 19175680
I0428 20:33:11.991984  4253 layer_factory.hpp:77] Creating layer loss
I0428 20:33:11.991989  4253 net.cpp:86] Creating Layer loss
I0428 20:33:11.991993  4253 net.cpp:408] loss <- ip3
I0428 20:33:11.991997  4253 net.cpp:408] loss <- label
I0428 20:33:11.992002  4253 net.cpp:382] loss -> loss
I0428 20:33:11.992019  4253 layer_factory.hpp:77] Creating layer loss
I0428 20:33:11.992244  4253 net.cpp:124] Setting up loss
I0428 20:33:11.992254  4253 net.cpp:131] Top shape: (1)
I0428 20:33:11.992256  4253 net.cpp:134]     with loss weight 1
I0428 20:33:11.992271  4253 net.cpp:139] Memory required for data: 19175684
I0428 20:33:11.992274  4253 net.cpp:200] loss needs backward computation.
I0428 20:33:11.992278  4253 net.cpp:200] relu3 needs backward computation.
I0428 20:33:11.992281  4253 net.cpp:200] ip3 needs backward computation.
I0428 20:33:11.992285  4253 net.cpp:200] relu2 needs backward computation.
I0428 20:33:11.992286  4253 net.cpp:200] ip2 needs backward computation.
I0428 20:33:11.992290  4253 net.cpp:200] relu1 needs backward computation.
I0428 20:33:11.992292  4253 net.cpp:200] ip1 needs backward computation.
I0428 20:33:11.992295  4253 net.cpp:200] pool1 needs backward computation.
I0428 20:33:11.992297  4253 net.cpp:200] conv1 needs backward computation.
I0428 20:33:11.992301  4253 net.cpp:200] pool0 needs backward computation.
I0428 20:33:11.992305  4253 net.cpp:200] conv0 needs backward computation.
I0428 20:33:11.992307  4253 net.cpp:202] mnist does not need backward computation.
I0428 20:33:11.992311  4253 net.cpp:244] This network produces output loss
I0428 20:33:11.992319  4253 net.cpp:257] Network initialization done.
I0428 20:33:11.992642  4253 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1584.prototxt
I0428 20:33:11.992698  4253 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:11.992784  4253 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:11.992918  4253 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:11.992964  4253 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:11.992980  4253 net.cpp:86] Creating Layer mnist
I0428 20:33:11.992983  4253 net.cpp:382] mnist -> data
I0428 20:33:11.992992  4253 net.cpp:382] mnist -> label
I0428 20:33:11.993084  4253 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:11.995111  4253 net.cpp:124] Setting up mnist
I0428 20:33:11.995141  4253 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:11.995146  4253 net.cpp:131] Top shape: 100 (100)
I0428 20:33:11.995149  4253 net.cpp:139] Memory required for data: 314000
I0428 20:33:11.995152  4253 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:11.995185  4253 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:11.995189  4253 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:11.995194  4253 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:11.995200  4253 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:11.995247  4253 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:11.995254  4253 net.cpp:131] Top shape: 100 (100)
I0428 20:33:11.995256  4253 net.cpp:131] Top shape: 100 (100)
I0428 20:33:11.995260  4253 net.cpp:139] Memory required for data: 314800
I0428 20:33:11.995262  4253 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:11.995270  4253 net.cpp:86] Creating Layer conv0
I0428 20:33:11.995273  4253 net.cpp:408] conv0 <- data
I0428 20:33:11.995292  4253 net.cpp:382] conv0 -> conv0
I0428 20:33:11.996995  4253 net.cpp:124] Setting up conv0
I0428 20:33:11.997009  4253 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:11.997012  4253 net.cpp:139] Memory required for data: 23354800
I0428 20:33:11.997021  4253 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:11.997027  4253 net.cpp:86] Creating Layer pool0
I0428 20:33:11.997046  4253 net.cpp:408] pool0 <- conv0
I0428 20:33:11.997051  4253 net.cpp:382] pool0 -> pool0
I0428 20:33:11.997084  4253 net.cpp:124] Setting up pool0
I0428 20:33:11.997089  4253 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:11.997092  4253 net.cpp:139] Memory required for data: 29114800
I0428 20:33:11.997095  4253 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:11.997118  4253 net.cpp:86] Creating Layer conv1
I0428 20:33:11.997122  4253 net.cpp:408] conv1 <- pool0
I0428 20:33:11.997126  4253 net.cpp:382] conv1 -> conv1
I0428 20:33:11.999202  4253 net.cpp:124] Setting up conv1
I0428 20:33:11.999215  4253 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:11.999219  4253 net.cpp:139] Memory required for data: 29754800
I0428 20:33:11.999228  4253 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:11.999249  4253 net.cpp:86] Creating Layer pool1
I0428 20:33:11.999259  4253 net.cpp:408] pool1 <- conv1
I0428 20:33:11.999264  4253 net.cpp:382] pool1 -> pool1
I0428 20:33:11.999305  4253 net.cpp:124] Setting up pool1
I0428 20:33:11.999310  4253 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:11.999313  4253 net.cpp:139] Memory required for data: 29914800
I0428 20:33:11.999317  4253 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:11.999328  4253 net.cpp:86] Creating Layer ip1
I0428 20:33:11.999331  4253 net.cpp:408] ip1 <- pool1
I0428 20:33:11.999336  4253 net.cpp:382] ip1 -> ip1
I0428 20:33:11.999480  4253 net.cpp:124] Setting up ip1
I0428 20:33:11.999502  4253 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:11.999506  4253 net.cpp:139] Memory required for data: 29924800
I0428 20:33:11.999513  4253 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:11.999518  4253 net.cpp:86] Creating Layer relu1
I0428 20:33:11.999528  4253 net.cpp:408] relu1 <- ip1
I0428 20:33:11.999532  4253 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:11.999713  4253 net.cpp:124] Setting up relu1
I0428 20:33:11.999722  4253 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:11.999725  4253 net.cpp:139] Memory required for data: 29934800
I0428 20:33:11.999728  4253 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:11.999735  4253 net.cpp:86] Creating Layer ip2
I0428 20:33:11.999738  4253 net.cpp:408] ip2 <- ip1
I0428 20:33:11.999743  4253 net.cpp:382] ip2 -> ip2
I0428 20:33:11.999840  4253 net.cpp:124] Setting up ip2
I0428 20:33:11.999845  4253 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:11.999848  4253 net.cpp:139] Memory required for data: 29944800
I0428 20:33:11.999855  4253 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:11.999858  4253 net.cpp:86] Creating Layer relu2
I0428 20:33:11.999861  4253 net.cpp:408] relu2 <- ip2
I0428 20:33:11.999866  4253 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:12.000010  4253 net.cpp:124] Setting up relu2
I0428 20:33:12.000016  4253 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:12.000020  4253 net.cpp:139] Memory required for data: 29954800
I0428 20:33:12.000022  4253 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:12.000027  4253 net.cpp:86] Creating Layer ip3
I0428 20:33:12.000038  4253 net.cpp:408] ip3 <- ip2
I0428 20:33:12.000042  4253 net.cpp:382] ip3 -> ip3
I0428 20:33:12.000166  4253 net.cpp:124] Setting up ip3
I0428 20:33:12.000174  4253 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:12.000177  4253 net.cpp:139] Memory required for data: 29958800
I0428 20:33:12.000185  4253 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:12.000190  4253 net.cpp:86] Creating Layer relu3
I0428 20:33:12.000193  4253 net.cpp:408] relu3 <- ip3
I0428 20:33:12.000197  4253 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:12.001147  4253 net.cpp:124] Setting up relu3
I0428 20:33:12.001160  4253 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:12.001165  4253 net.cpp:139] Memory required for data: 29962800
I0428 20:33:12.001168  4253 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:12.001174  4253 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:12.001178  4253 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:12.001183  4253 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:12.001204  4253 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:12.001279  4253 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:12.001284  4253 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:12.001287  4253 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:12.001318  4253 net.cpp:139] Memory required for data: 29970800
I0428 20:33:12.001327  4253 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:12.001332  4253 net.cpp:86] Creating Layer accuracy
I0428 20:33:12.001335  4253 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:12.001339  4253 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:12.001344  4253 net.cpp:382] accuracy -> accuracy
I0428 20:33:12.001350  4253 net.cpp:124] Setting up accuracy
I0428 20:33:12.001354  4253 net.cpp:131] Top shape: (1)
I0428 20:33:12.001358  4253 net.cpp:139] Memory required for data: 29970804
I0428 20:33:12.001361  4253 layer_factory.hpp:77] Creating layer loss
I0428 20:33:12.001365  4253 net.cpp:86] Creating Layer loss
I0428 20:33:12.001368  4253 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:12.001371  4253 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:12.001375  4253 net.cpp:382] loss -> loss
I0428 20:33:12.001381  4253 layer_factory.hpp:77] Creating layer loss
I0428 20:33:12.001592  4253 net.cpp:124] Setting up loss
I0428 20:33:12.001601  4253 net.cpp:131] Top shape: (1)
I0428 20:33:12.001605  4253 net.cpp:134]     with loss weight 1
I0428 20:33:12.001628  4253 net.cpp:139] Memory required for data: 29970808
I0428 20:33:12.001632  4253 net.cpp:200] loss needs backward computation.
I0428 20:33:12.001636  4253 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:12.001641  4253 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:12.001648  4253 net.cpp:200] relu3 needs backward computation.
I0428 20:33:12.001652  4253 net.cpp:200] ip3 needs backward computation.
I0428 20:33:12.001654  4253 net.cpp:200] relu2 needs backward computation.
I0428 20:33:12.001662  4253 net.cpp:200] ip2 needs backward computation.
I0428 20:33:12.001665  4253 net.cpp:200] relu1 needs backward computation.
I0428 20:33:12.001667  4253 net.cpp:200] ip1 needs backward computation.
I0428 20:33:12.001670  4253 net.cpp:200] pool1 needs backward computation.
I0428 20:33:12.001673  4253 net.cpp:200] conv1 needs backward computation.
I0428 20:33:12.001682  4253 net.cpp:200] pool0 needs backward computation.
I0428 20:33:12.001685  4253 net.cpp:200] conv0 needs backward computation.
I0428 20:33:12.001689  4253 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:12.001693  4253 net.cpp:202] mnist does not need backward computation.
I0428 20:33:12.001695  4253 net.cpp:244] This network produces output accuracy
I0428 20:33:12.001699  4253 net.cpp:244] This network produces output loss
I0428 20:33:12.001710  4253 net.cpp:257] Network initialization done.
I0428 20:33:12.001765  4253 solver.cpp:56] Solver scaffolding done.
I0428 20:33:12.002161  4253 caffe.cpp:248] Starting Optimization
I0428 20:33:12.002168  4253 solver.cpp:273] Solving LeNet
I0428 20:33:12.002173  4253 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:12.003116  4253 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:12.100674  4260 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:12.103132  4253 solver.cpp:398]     Test net output #0: accuracy = 0.0819
I0428 20:33:12.103152  4253 solver.cpp:398]     Test net output #1: loss = 2.32285 (* 1 = 2.32285 loss)
I0428 20:33:12.108484  4253 solver.cpp:219] Iteration 0 (-7.77721e-43 iter/s, 0.106285s/100 iters), loss = 2.33575
I0428 20:33:12.108506  4253 solver.cpp:238]     Train net output #0: loss = 2.33575 (* 1 = 2.33575 loss)
I0428 20:33:12.108517  4253 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:12.316917  4253 solver.cpp:219] Iteration 100 (479.86 iter/s, 0.208394s/100 iters), loss = 1.52793
I0428 20:33:12.316944  4253 solver.cpp:238]     Train net output #0: loss = 1.52793 (* 1 = 1.52793 loss)
I0428 20:33:12.316951  4253 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:12.530377  4253 solver.cpp:219] Iteration 200 (468.569 iter/s, 0.213416s/100 iters), loss = 1.30151
I0428 20:33:12.530416  4253 solver.cpp:238]     Train net output #0: loss = 1.30151 (* 1 = 1.30151 loss)
I0428 20:33:12.530426  4253 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:12.747429  4253 solver.cpp:219] Iteration 300 (460.838 iter/s, 0.216996s/100 iters), loss = 1.31686
I0428 20:33:12.747472  4253 solver.cpp:238]     Train net output #0: loss = 1.31686 (* 1 = 1.31686 loss)
I0428 20:33:12.747481  4253 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:12.959481  4253 solver.cpp:219] Iteration 400 (471.708 iter/s, 0.211996s/100 iters), loss = 1.17867
I0428 20:33:12.959509  4253 solver.cpp:238]     Train net output #0: loss = 1.17867 (* 1 = 1.17867 loss)
I0428 20:33:12.959517  4253 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:13.173522  4253 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:13.273397  4260 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:13.276998  4253 solver.cpp:398]     Test net output #0: accuracy = 0.6585
I0428 20:33:13.277024  4253 solver.cpp:398]     Test net output #1: loss = 0.878141 (* 1 = 0.878141 loss)
I0428 20:33:13.279011  4253 solver.cpp:219] Iteration 500 (313.008 iter/s, 0.319481s/100 iters), loss = 0.973537
I0428 20:33:13.279038  4253 solver.cpp:238]     Train net output #0: loss = 0.973537 (* 1 = 0.973537 loss)
I0428 20:33:13.279064  4253 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:13.489302  4253 solver.cpp:219] Iteration 600 (475.63 iter/s, 0.210248s/100 iters), loss = 0.729383
I0428 20:33:13.489337  4253 solver.cpp:238]     Train net output #0: loss = 0.729383 (* 1 = 0.729383 loss)
I0428 20:33:13.489347  4253 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:13.709025  4253 solver.cpp:219] Iteration 700 (455.225 iter/s, 0.219671s/100 iters), loss = 0.855437
I0428 20:33:13.709066  4253 solver.cpp:238]     Train net output #0: loss = 0.855437 (* 1 = 0.855437 loss)
I0428 20:33:13.709076  4253 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:13.932770  4253 solver.cpp:219] Iteration 800 (447.062 iter/s, 0.223683s/100 iters), loss = 0.689433
I0428 20:33:13.932832  4253 solver.cpp:238]     Train net output #0: loss = 0.689433 (* 1 = 0.689433 loss)
I0428 20:33:13.932852  4253 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:14.157639  4253 solver.cpp:219] Iteration 900 (444.853 iter/s, 0.224794s/100 iters), loss = 0.774936
I0428 20:33:14.157678  4253 solver.cpp:238]     Train net output #0: loss = 0.774936 (* 1 = 0.774936 loss)
I0428 20:33:14.157687  4253 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:14.228003  4259 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:14.368789  4253 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:14.371315  4253 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:14.372882  4253 solver.cpp:311] Iteration 1000, loss = 0.802851
I0428 20:33:14.372903  4253 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:14.472808  4260 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:14.476466  4253 solver.cpp:398]     Test net output #0: accuracy = 0.6737
I0428 20:33:14.476490  4253 solver.cpp:398]     Test net output #1: loss = 0.782704 (* 1 = 0.782704 loss)
I0428 20:33:14.476496  4253 solver.cpp:316] Optimization Done.
I0428 20:33:14.476500  4253 caffe.cpp:259] Optimization Done.
