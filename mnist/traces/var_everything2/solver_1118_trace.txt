I0428 20:09:47.215960 31701 caffe.cpp:218] Using GPUs 0
I0428 20:09:47.253418 31701 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:47.762167 31701 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1118.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:47.762306 31701 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1118.prototxt
I0428 20:09:47.762712 31701 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:47.762729 31701 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:47.762826 31701 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:47.762902 31701 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:47.763000 31701 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:47.763022 31701 net.cpp:86] Creating Layer mnist
I0428 20:09:47.763029 31701 net.cpp:382] mnist -> data
I0428 20:09:47.763051 31701 net.cpp:382] mnist -> label
I0428 20:09:47.764137 31701 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:47.766599 31701 net.cpp:124] Setting up mnist
I0428 20:09:47.766618 31701 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:47.766624 31701 net.cpp:131] Top shape: 64 (64)
I0428 20:09:47.766628 31701 net.cpp:139] Memory required for data: 200960
I0428 20:09:47.766635 31701 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:47.766651 31701 net.cpp:86] Creating Layer conv0
I0428 20:09:47.766674 31701 net.cpp:408] conv0 <- data
I0428 20:09:47.766685 31701 net.cpp:382] conv0 -> conv0
I0428 20:09:48.049223 31701 net.cpp:124] Setting up conv0
I0428 20:09:48.049248 31701 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:48.049253 31701 net.cpp:139] Memory required for data: 3887360
I0428 20:09:48.049268 31701 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:48.049281 31701 net.cpp:86] Creating Layer pool0
I0428 20:09:48.049285 31701 net.cpp:408] pool0 <- conv0
I0428 20:09:48.049299 31701 net.cpp:382] pool0 -> pool0
I0428 20:09:48.049342 31701 net.cpp:124] Setting up pool0
I0428 20:09:48.049348 31701 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:48.049351 31701 net.cpp:139] Memory required for data: 4808960
I0428 20:09:48.049355 31701 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:48.049365 31701 net.cpp:86] Creating Layer conv1
I0428 20:09:48.049368 31701 net.cpp:408] conv1 <- pool0
I0428 20:09:48.049372 31701 net.cpp:382] conv1 -> conv1
I0428 20:09:48.052182 31701 net.cpp:124] Setting up conv1
I0428 20:09:48.052197 31701 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:48.052201 31701 net.cpp:139] Memory required for data: 5218560
I0428 20:09:48.052209 31701 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:48.052217 31701 net.cpp:86] Creating Layer pool1
I0428 20:09:48.052220 31701 net.cpp:408] pool1 <- conv1
I0428 20:09:48.052225 31701 net.cpp:382] pool1 -> pool1
I0428 20:09:48.052263 31701 net.cpp:124] Setting up pool1
I0428 20:09:48.052268 31701 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:48.052270 31701 net.cpp:139] Memory required for data: 5320960
I0428 20:09:48.052273 31701 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:48.052280 31701 net.cpp:86] Creating Layer ip1
I0428 20:09:48.052284 31701 net.cpp:408] ip1 <- pool1
I0428 20:09:48.052287 31701 net.cpp:382] ip1 -> ip1
I0428 20:09:48.052431 31701 net.cpp:124] Setting up ip1
I0428 20:09:48.052439 31701 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:48.052443 31701 net.cpp:139] Memory required for data: 5327360
I0428 20:09:48.052449 31701 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:48.052455 31701 net.cpp:86] Creating Layer relu1
I0428 20:09:48.052459 31701 net.cpp:408] relu1 <- ip1
I0428 20:09:48.052462 31701 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:48.052623 31701 net.cpp:124] Setting up relu1
I0428 20:09:48.052633 31701 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:48.052635 31701 net.cpp:139] Memory required for data: 5333760
I0428 20:09:48.052639 31701 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:48.052644 31701 net.cpp:86] Creating Layer ip2
I0428 20:09:48.052647 31701 net.cpp:408] ip2 <- ip1
I0428 20:09:48.052652 31701 net.cpp:382] ip2 -> ip2
I0428 20:09:48.052744 31701 net.cpp:124] Setting up ip2
I0428 20:09:48.052752 31701 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:48.052755 31701 net.cpp:139] Memory required for data: 5340160
I0428 20:09:48.052760 31701 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:48.052767 31701 net.cpp:86] Creating Layer relu2
I0428 20:09:48.052769 31701 net.cpp:408] relu2 <- ip2
I0428 20:09:48.052773 31701 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:48.053504 31701 net.cpp:124] Setting up relu2
I0428 20:09:48.053517 31701 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:48.053536 31701 net.cpp:139] Memory required for data: 5346560
I0428 20:09:48.053540 31701 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:48.053561 31701 net.cpp:86] Creating Layer ip3
I0428 20:09:48.053565 31701 net.cpp:408] ip3 <- ip2
I0428 20:09:48.053570 31701 net.cpp:382] ip3 -> ip3
I0428 20:09:48.053668 31701 net.cpp:124] Setting up ip3
I0428 20:09:48.053675 31701 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:48.053678 31701 net.cpp:139] Memory required for data: 5349120
I0428 20:09:48.053700 31701 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:48.053707 31701 net.cpp:86] Creating Layer relu3
I0428 20:09:48.053711 31701 net.cpp:408] relu3 <- ip3
I0428 20:09:48.053715 31701 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:48.053889 31701 net.cpp:124] Setting up relu3
I0428 20:09:48.053897 31701 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:48.053900 31701 net.cpp:139] Memory required for data: 5351680
I0428 20:09:48.053905 31701 layer_factory.hpp:77] Creating layer loss
I0428 20:09:48.053910 31701 net.cpp:86] Creating Layer loss
I0428 20:09:48.053912 31701 net.cpp:408] loss <- ip3
I0428 20:09:48.053916 31701 net.cpp:408] loss <- label
I0428 20:09:48.053922 31701 net.cpp:382] loss -> loss
I0428 20:09:48.053941 31701 layer_factory.hpp:77] Creating layer loss
I0428 20:09:48.054157 31701 net.cpp:124] Setting up loss
I0428 20:09:48.054167 31701 net.cpp:131] Top shape: (1)
I0428 20:09:48.054170 31701 net.cpp:134]     with loss weight 1
I0428 20:09:48.054184 31701 net.cpp:139] Memory required for data: 5351684
I0428 20:09:48.054188 31701 net.cpp:200] loss needs backward computation.
I0428 20:09:48.054191 31701 net.cpp:200] relu3 needs backward computation.
I0428 20:09:48.054195 31701 net.cpp:200] ip3 needs backward computation.
I0428 20:09:48.054198 31701 net.cpp:200] relu2 needs backward computation.
I0428 20:09:48.054200 31701 net.cpp:200] ip2 needs backward computation.
I0428 20:09:48.054203 31701 net.cpp:200] relu1 needs backward computation.
I0428 20:09:48.054206 31701 net.cpp:200] ip1 needs backward computation.
I0428 20:09:48.054209 31701 net.cpp:200] pool1 needs backward computation.
I0428 20:09:48.054213 31701 net.cpp:200] conv1 needs backward computation.
I0428 20:09:48.054215 31701 net.cpp:200] pool0 needs backward computation.
I0428 20:09:48.054219 31701 net.cpp:200] conv0 needs backward computation.
I0428 20:09:48.054222 31701 net.cpp:202] mnist does not need backward computation.
I0428 20:09:48.054225 31701 net.cpp:244] This network produces output loss
I0428 20:09:48.054234 31701 net.cpp:257] Network initialization done.
I0428 20:09:48.054586 31701 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1118.prototxt
I0428 20:09:48.054646 31701 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:48.054759 31701 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:48.054855 31701 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:48.054916 31701 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:48.054929 31701 net.cpp:86] Creating Layer mnist
I0428 20:09:48.054934 31701 net.cpp:382] mnist -> data
I0428 20:09:48.054940 31701 net.cpp:382] mnist -> label
I0428 20:09:48.055034 31701 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:48.057210 31701 net.cpp:124] Setting up mnist
I0428 20:09:48.057240 31701 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:48.057245 31701 net.cpp:131] Top shape: 100 (100)
I0428 20:09:48.057248 31701 net.cpp:139] Memory required for data: 314000
I0428 20:09:48.057252 31701 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:48.057298 31701 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:48.057303 31701 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:48.057308 31701 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:48.057315 31701 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:48.057354 31701 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:48.057360 31701 net.cpp:131] Top shape: 100 (100)
I0428 20:09:48.057364 31701 net.cpp:131] Top shape: 100 (100)
I0428 20:09:48.057368 31701 net.cpp:139] Memory required for data: 314800
I0428 20:09:48.057370 31701 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:48.057379 31701 net.cpp:86] Creating Layer conv0
I0428 20:09:48.057381 31701 net.cpp:408] conv0 <- data
I0428 20:09:48.057386 31701 net.cpp:382] conv0 -> conv0
I0428 20:09:48.059166 31701 net.cpp:124] Setting up conv0
I0428 20:09:48.059180 31701 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:48.059183 31701 net.cpp:139] Memory required for data: 6074800
I0428 20:09:48.059192 31701 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:48.059198 31701 net.cpp:86] Creating Layer pool0
I0428 20:09:48.059201 31701 net.cpp:408] pool0 <- conv0
I0428 20:09:48.059206 31701 net.cpp:382] pool0 -> pool0
I0428 20:09:48.059240 31701 net.cpp:124] Setting up pool0
I0428 20:09:48.059247 31701 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:48.059248 31701 net.cpp:139] Memory required for data: 7514800
I0428 20:09:48.059252 31701 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:48.059259 31701 net.cpp:86] Creating Layer conv1
I0428 20:09:48.059262 31701 net.cpp:408] conv1 <- pool0
I0428 20:09:48.059267 31701 net.cpp:382] conv1 -> conv1
I0428 20:09:48.061489 31701 net.cpp:124] Setting up conv1
I0428 20:09:48.061502 31701 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:48.061506 31701 net.cpp:139] Memory required for data: 8154800
I0428 20:09:48.061517 31701 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:48.061537 31701 net.cpp:86] Creating Layer pool1
I0428 20:09:48.061542 31701 net.cpp:408] pool1 <- conv1
I0428 20:09:48.061547 31701 net.cpp:382] pool1 -> pool1
I0428 20:09:48.061583 31701 net.cpp:124] Setting up pool1
I0428 20:09:48.061589 31701 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:48.061592 31701 net.cpp:139] Memory required for data: 8314800
I0428 20:09:48.061595 31701 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:48.061600 31701 net.cpp:86] Creating Layer ip1
I0428 20:09:48.061612 31701 net.cpp:408] ip1 <- pool1
I0428 20:09:48.061616 31701 net.cpp:382] ip1 -> ip1
I0428 20:09:48.061784 31701 net.cpp:124] Setting up ip1
I0428 20:09:48.061792 31701 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:48.061807 31701 net.cpp:139] Memory required for data: 8324800
I0428 20:09:48.061815 31701 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:48.061820 31701 net.cpp:86] Creating Layer relu1
I0428 20:09:48.061823 31701 net.cpp:408] relu1 <- ip1
I0428 20:09:48.061827 31701 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:48.062031 31701 net.cpp:124] Setting up relu1
I0428 20:09:48.062039 31701 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:48.062042 31701 net.cpp:139] Memory required for data: 8334800
I0428 20:09:48.062046 31701 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:48.062052 31701 net.cpp:86] Creating Layer ip2
I0428 20:09:48.062057 31701 net.cpp:408] ip2 <- ip1
I0428 20:09:48.062062 31701 net.cpp:382] ip2 -> ip2
I0428 20:09:48.062186 31701 net.cpp:124] Setting up ip2
I0428 20:09:48.062194 31701 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:48.062198 31701 net.cpp:139] Memory required for data: 8344800
I0428 20:09:48.062204 31701 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:48.062208 31701 net.cpp:86] Creating Layer relu2
I0428 20:09:48.062212 31701 net.cpp:408] relu2 <- ip2
I0428 20:09:48.062223 31701 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:48.062374 31701 net.cpp:124] Setting up relu2
I0428 20:09:48.062398 31701 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:48.062424 31701 net.cpp:139] Memory required for data: 8354800
I0428 20:09:48.062428 31701 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:48.062433 31701 net.cpp:86] Creating Layer ip3
I0428 20:09:48.062436 31701 net.cpp:408] ip3 <- ip2
I0428 20:09:48.062443 31701 net.cpp:382] ip3 -> ip3
I0428 20:09:48.062562 31701 net.cpp:124] Setting up ip3
I0428 20:09:48.062569 31701 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:48.062573 31701 net.cpp:139] Memory required for data: 8358800
I0428 20:09:48.062580 31701 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:48.062585 31701 net.cpp:86] Creating Layer relu3
I0428 20:09:48.062588 31701 net.cpp:408] relu3 <- ip3
I0428 20:09:48.062598 31701 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:48.063421 31701 net.cpp:124] Setting up relu3
I0428 20:09:48.063437 31701 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:48.063441 31701 net.cpp:139] Memory required for data: 8362800
I0428 20:09:48.063446 31701 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:48.063450 31701 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:48.063453 31701 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:48.063459 31701 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:48.063465 31701 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:48.063520 31701 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:48.063525 31701 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:48.063529 31701 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:48.063532 31701 net.cpp:139] Memory required for data: 8370800
I0428 20:09:48.063535 31701 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:48.063539 31701 net.cpp:86] Creating Layer accuracy
I0428 20:09:48.063544 31701 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:48.063554 31701 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:48.063557 31701 net.cpp:382] accuracy -> accuracy
I0428 20:09:48.063570 31701 net.cpp:124] Setting up accuracy
I0428 20:09:48.063585 31701 net.cpp:131] Top shape: (1)
I0428 20:09:48.063593 31701 net.cpp:139] Memory required for data: 8370804
I0428 20:09:48.063596 31701 layer_factory.hpp:77] Creating layer loss
I0428 20:09:48.063601 31701 net.cpp:86] Creating Layer loss
I0428 20:09:48.063603 31701 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:48.063607 31701 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:48.063611 31701 net.cpp:382] loss -> loss
I0428 20:09:48.063616 31701 layer_factory.hpp:77] Creating layer loss
I0428 20:09:48.063830 31701 net.cpp:124] Setting up loss
I0428 20:09:48.063839 31701 net.cpp:131] Top shape: (1)
I0428 20:09:48.063843 31701 net.cpp:134]     with loss weight 1
I0428 20:09:48.063865 31701 net.cpp:139] Memory required for data: 8370808
I0428 20:09:48.063870 31701 net.cpp:200] loss needs backward computation.
I0428 20:09:48.063874 31701 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:48.063877 31701 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:48.063880 31701 net.cpp:200] relu3 needs backward computation.
I0428 20:09:48.063884 31701 net.cpp:200] ip3 needs backward computation.
I0428 20:09:48.063886 31701 net.cpp:200] relu2 needs backward computation.
I0428 20:09:48.063889 31701 net.cpp:200] ip2 needs backward computation.
I0428 20:09:48.063892 31701 net.cpp:200] relu1 needs backward computation.
I0428 20:09:48.063900 31701 net.cpp:200] ip1 needs backward computation.
I0428 20:09:48.063905 31701 net.cpp:200] pool1 needs backward computation.
I0428 20:09:48.063906 31701 net.cpp:200] conv1 needs backward computation.
I0428 20:09:48.063910 31701 net.cpp:200] pool0 needs backward computation.
I0428 20:09:48.063913 31701 net.cpp:200] conv0 needs backward computation.
I0428 20:09:48.063917 31701 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:48.063921 31701 net.cpp:202] mnist does not need backward computation.
I0428 20:09:48.063930 31701 net.cpp:244] This network produces output accuracy
I0428 20:09:48.063933 31701 net.cpp:244] This network produces output loss
I0428 20:09:48.063942 31701 net.cpp:257] Network initialization done.
I0428 20:09:48.063982 31701 solver.cpp:56] Solver scaffolding done.
I0428 20:09:48.064369 31701 caffe.cpp:248] Starting Optimization
I0428 20:09:48.064376 31701 solver.cpp:273] Solving LeNet
I0428 20:09:48.064385 31701 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:48.065366 31701 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:48.071271 31701 blocking_queue.cpp:49] Waiting for data
I0428 20:09:48.137745 31709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:48.138360 31701 solver.cpp:398]     Test net output #0: accuracy = 0.1183
I0428 20:09:48.138381 31701 solver.cpp:398]     Test net output #1: loss = 2.29836 (* 1 = 2.29836 loss)
I0428 20:09:48.142037 31701 solver.cpp:219] Iteration 0 (-4.41469e-31 iter/s, 0.077611s/100 iters), loss = 2.29653
I0428 20:09:48.142060 31701 solver.cpp:238]     Train net output #0: loss = 2.29653 (* 1 = 2.29653 loss)
I0428 20:09:48.142071 31701 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:48.242234 31701 solver.cpp:219] Iteration 100 (998.367 iter/s, 0.100164s/100 iters), loss = 1.39005
I0428 20:09:48.242259 31701 solver.cpp:238]     Train net output #0: loss = 1.39005 (* 1 = 1.39005 loss)
I0428 20:09:48.242280 31701 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:48.345495 31701 solver.cpp:219] Iteration 200 (968.753 iter/s, 0.103226s/100 iters), loss = 1.09146
I0428 20:09:48.345535 31701 solver.cpp:238]     Train net output #0: loss = 1.09146 (* 1 = 1.09146 loss)
I0428 20:09:48.345540 31701 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:48.449331 31701 solver.cpp:219] Iteration 300 (963.528 iter/s, 0.103785s/100 iters), loss = 0.970052
I0428 20:09:48.449371 31701 solver.cpp:238]     Train net output #0: loss = 0.970052 (* 1 = 0.970052 loss)
I0428 20:09:48.449378 31701 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:48.556017 31701 solver.cpp:219] Iteration 400 (937.65 iter/s, 0.10665s/100 iters), loss = 1.04114
I0428 20:09:48.556051 31701 solver.cpp:238]     Train net output #0: loss = 1.04114 (* 1 = 1.04114 loss)
I0428 20:09:48.556059 31701 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:48.657052 31701 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:48.729199 31709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:48.729840 31701 solver.cpp:398]     Test net output #0: accuracy = 0.6412
I0428 20:09:48.729861 31701 solver.cpp:398]     Test net output #1: loss = 1.04856 (* 1 = 1.04856 loss)
I0428 20:09:48.730906 31701 solver.cpp:219] Iteration 500 (571.942 iter/s, 0.174843s/100 iters), loss = 1.00651
I0428 20:09:48.730955 31701 solver.cpp:238]     Train net output #0: loss = 1.00651 (* 1 = 1.00651 loss)
I0428 20:09:48.730964 31701 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:48.828614 31701 solver.cpp:219] Iteration 600 (1024.05 iter/s, 0.0976515s/100 iters), loss = 1.25053
I0428 20:09:48.828655 31701 solver.cpp:238]     Train net output #0: loss = 1.25053 (* 1 = 1.25053 loss)
I0428 20:09:48.828660 31701 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:48.926092 31701 solver.cpp:219] Iteration 700 (1026.39 iter/s, 0.0974286s/100 iters), loss = 0.99166
I0428 20:09:48.926131 31701 solver.cpp:238]     Train net output #0: loss = 0.99166 (* 1 = 0.99166 loss)
I0428 20:09:48.926136 31701 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:49.024600 31701 solver.cpp:219] Iteration 800 (1015.51 iter/s, 0.098473s/100 iters), loss = 0.956752
I0428 20:09:49.024639 31701 solver.cpp:238]     Train net output #0: loss = 0.956752 (* 1 = 0.956752 loss)
I0428 20:09:49.024662 31701 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:49.122373 31701 solver.cpp:219] Iteration 900 (1023.12 iter/s, 0.0977398s/100 iters), loss = 0.95084
I0428 20:09:49.122413 31701 solver.cpp:238]     Train net output #0: loss = 0.95084 (* 1 = 0.95084 loss)
I0428 20:09:49.122419 31701 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:49.155052 31708 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:49.219306 31701 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:49.220464 31701 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:49.221235 31701 solver.cpp:311] Iteration 1000, loss = 0.914448
I0428 20:09:49.221251 31701 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:49.297816 31709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:49.298460 31701 solver.cpp:398]     Test net output #0: accuracy = 0.76
I0428 20:09:49.298477 31701 solver.cpp:398]     Test net output #1: loss = 0.798809 (* 1 = 0.798809 loss)
I0428 20:09:49.298482 31701 solver.cpp:316] Optimization Done.
I0428 20:09:49.298485 31701 caffe.cpp:259] Optimization Done.
