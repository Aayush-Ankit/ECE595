I0428 20:06:52.897737 30976 caffe.cpp:218] Using GPUs 0
I0428 20:06:52.926312 30976 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:53.375203 30976 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1040.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:53.375354 30976 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1040.prototxt
I0428 20:06:53.375725 30976 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:53.375756 30976 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:53.375854 30976 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:53.375918 30976 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:53.375998 30976 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:53.376016 30976 net.cpp:86] Creating Layer mnist
I0428 20:06:53.376024 30976 net.cpp:382] mnist -> data
I0428 20:06:53.376042 30976 net.cpp:382] mnist -> label
I0428 20:06:53.376986 30976 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:53.379206 30976 net.cpp:124] Setting up mnist
I0428 20:06:53.379246 30976 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:53.379252 30976 net.cpp:131] Top shape: 64 (64)
I0428 20:06:53.379254 30976 net.cpp:139] Memory required for data: 200960
I0428 20:06:53.379261 30976 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:53.379272 30976 net.cpp:86] Creating Layer conv0
I0428 20:06:53.379290 30976 net.cpp:408] conv0 <- data
I0428 20:06:53.379302 30976 net.cpp:382] conv0 -> conv0
I0428 20:06:53.608472 30976 net.cpp:124] Setting up conv0
I0428 20:06:53.608497 30976 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:53.608501 30976 net.cpp:139] Memory required for data: 3887360
I0428 20:06:53.608515 30976 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:53.608527 30976 net.cpp:86] Creating Layer pool0
I0428 20:06:53.608531 30976 net.cpp:408] pool0 <- conv0
I0428 20:06:53.608536 30976 net.cpp:382] pool0 -> pool0
I0428 20:06:53.608595 30976 net.cpp:124] Setting up pool0
I0428 20:06:53.608602 30976 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:53.608603 30976 net.cpp:139] Memory required for data: 4808960
I0428 20:06:53.608606 30976 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:53.608616 30976 net.cpp:86] Creating Layer conv1
I0428 20:06:53.608619 30976 net.cpp:408] conv1 <- pool0
I0428 20:06:53.608624 30976 net.cpp:382] conv1 -> conv1
I0428 20:06:53.611485 30976 net.cpp:124] Setting up conv1
I0428 20:06:53.611515 30976 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:53.611518 30976 net.cpp:139] Memory required for data: 4890880
I0428 20:06:53.611526 30976 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:53.611534 30976 net.cpp:86] Creating Layer pool1
I0428 20:06:53.611538 30976 net.cpp:408] pool1 <- conv1
I0428 20:06:53.611543 30976 net.cpp:382] pool1 -> pool1
I0428 20:06:53.611610 30976 net.cpp:124] Setting up pool1
I0428 20:06:53.611615 30976 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:53.611618 30976 net.cpp:139] Memory required for data: 4911360
I0428 20:06:53.611620 30976 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:53.611629 30976 net.cpp:86] Creating Layer ip1
I0428 20:06:53.611631 30976 net.cpp:408] ip1 <- pool1
I0428 20:06:53.611636 30976 net.cpp:382] ip1 -> ip1
I0428 20:06:53.611734 30976 net.cpp:124] Setting up ip1
I0428 20:06:53.611742 30976 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:53.611745 30976 net.cpp:139] Memory required for data: 4917760
I0428 20:06:53.611752 30976 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:53.611758 30976 net.cpp:86] Creating Layer relu1
I0428 20:06:53.611762 30976 net.cpp:408] relu1 <- ip1
I0428 20:06:53.611765 30976 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:53.611925 30976 net.cpp:124] Setting up relu1
I0428 20:06:53.611933 30976 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:53.611937 30976 net.cpp:139] Memory required for data: 4924160
I0428 20:06:53.611938 30976 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:53.611945 30976 net.cpp:86] Creating Layer ip2
I0428 20:06:53.611948 30976 net.cpp:408] ip2 <- ip1
I0428 20:06:53.611953 30976 net.cpp:382] ip2 -> ip2
I0428 20:06:53.612089 30976 net.cpp:124] Setting up ip2
I0428 20:06:53.612098 30976 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:53.612102 30976 net.cpp:139] Memory required for data: 4930560
I0428 20:06:53.612107 30976 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:53.612113 30976 net.cpp:86] Creating Layer relu2
I0428 20:06:53.612116 30976 net.cpp:408] relu2 <- ip2
I0428 20:06:53.612120 30976 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:53.612942 30976 net.cpp:124] Setting up relu2
I0428 20:06:53.612972 30976 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:53.612975 30976 net.cpp:139] Memory required for data: 4936960
I0428 20:06:53.612979 30976 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:53.612987 30976 net.cpp:86] Creating Layer ip3
I0428 20:06:53.612989 30976 net.cpp:408] ip3 <- ip2
I0428 20:06:53.612995 30976 net.cpp:382] ip3 -> ip3
I0428 20:06:53.613127 30976 net.cpp:124] Setting up ip3
I0428 20:06:53.613152 30976 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:53.613155 30976 net.cpp:139] Memory required for data: 4939520
I0428 20:06:53.613163 30976 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:53.613168 30976 net.cpp:86] Creating Layer relu3
I0428 20:06:53.613171 30976 net.cpp:408] relu3 <- ip3
I0428 20:06:53.613176 30976 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:53.613348 30976 net.cpp:124] Setting up relu3
I0428 20:06:53.613358 30976 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:53.613360 30976 net.cpp:139] Memory required for data: 4942080
I0428 20:06:53.613363 30976 layer_factory.hpp:77] Creating layer loss
I0428 20:06:53.613369 30976 net.cpp:86] Creating Layer loss
I0428 20:06:53.613373 30976 net.cpp:408] loss <- ip3
I0428 20:06:53.613376 30976 net.cpp:408] loss <- label
I0428 20:06:53.613381 30976 net.cpp:382] loss -> loss
I0428 20:06:53.613399 30976 layer_factory.hpp:77] Creating layer loss
I0428 20:06:53.613677 30976 net.cpp:124] Setting up loss
I0428 20:06:53.613687 30976 net.cpp:131] Top shape: (1)
I0428 20:06:53.613690 30976 net.cpp:134]     with loss weight 1
I0428 20:06:53.613704 30976 net.cpp:139] Memory required for data: 4942084
I0428 20:06:53.613708 30976 net.cpp:200] loss needs backward computation.
I0428 20:06:53.613711 30976 net.cpp:200] relu3 needs backward computation.
I0428 20:06:53.613713 30976 net.cpp:200] ip3 needs backward computation.
I0428 20:06:53.613716 30976 net.cpp:200] relu2 needs backward computation.
I0428 20:06:53.613719 30976 net.cpp:200] ip2 needs backward computation.
I0428 20:06:53.613721 30976 net.cpp:200] relu1 needs backward computation.
I0428 20:06:53.613724 30976 net.cpp:200] ip1 needs backward computation.
I0428 20:06:53.613728 30976 net.cpp:200] pool1 needs backward computation.
I0428 20:06:53.613730 30976 net.cpp:200] conv1 needs backward computation.
I0428 20:06:53.613732 30976 net.cpp:200] pool0 needs backward computation.
I0428 20:06:53.613735 30976 net.cpp:200] conv0 needs backward computation.
I0428 20:06:53.613739 30976 net.cpp:202] mnist does not need backward computation.
I0428 20:06:53.613741 30976 net.cpp:244] This network produces output loss
I0428 20:06:53.613767 30976 net.cpp:257] Network initialization done.
I0428 20:06:53.614114 30976 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1040.prototxt
I0428 20:06:53.614141 30976 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:53.614230 30976 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:53.614316 30976 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:53.614361 30976 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:53.614372 30976 net.cpp:86] Creating Layer mnist
I0428 20:06:53.614377 30976 net.cpp:382] mnist -> data
I0428 20:06:53.614383 30976 net.cpp:382] mnist -> label
I0428 20:06:53.614464 30976 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:53.616587 30976 net.cpp:124] Setting up mnist
I0428 20:06:53.616600 30976 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:53.616605 30976 net.cpp:131] Top shape: 100 (100)
I0428 20:06:53.616608 30976 net.cpp:139] Memory required for data: 314000
I0428 20:06:53.616611 30976 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:53.616647 30976 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:53.616650 30976 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:53.616654 30976 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:53.616667 30976 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:53.616711 30976 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:53.616735 30976 net.cpp:131] Top shape: 100 (100)
I0428 20:06:53.616739 30976 net.cpp:131] Top shape: 100 (100)
I0428 20:06:53.616741 30976 net.cpp:139] Memory required for data: 314800
I0428 20:06:53.616744 30976 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:53.616755 30976 net.cpp:86] Creating Layer conv0
I0428 20:06:53.616758 30976 net.cpp:408] conv0 <- data
I0428 20:06:53.616763 30976 net.cpp:382] conv0 -> conv0
I0428 20:06:53.618470 30976 net.cpp:124] Setting up conv0
I0428 20:06:53.618484 30976 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:53.618489 30976 net.cpp:139] Memory required for data: 6074800
I0428 20:06:53.618497 30976 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:53.618505 30976 net.cpp:86] Creating Layer pool0
I0428 20:06:53.618508 30976 net.cpp:408] pool0 <- conv0
I0428 20:06:53.618515 30976 net.cpp:382] pool0 -> pool0
I0428 20:06:53.618554 30976 net.cpp:124] Setting up pool0
I0428 20:06:53.618564 30976 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:53.618568 30976 net.cpp:139] Memory required for data: 7514800
I0428 20:06:53.618572 30976 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:53.618582 30976 net.cpp:86] Creating Layer conv1
I0428 20:06:53.618585 30976 net.cpp:408] conv1 <- pool0
I0428 20:06:53.618592 30976 net.cpp:382] conv1 -> conv1
I0428 20:06:53.620748 30976 net.cpp:124] Setting up conv1
I0428 20:06:53.620762 30976 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:53.620766 30976 net.cpp:139] Memory required for data: 7642800
I0428 20:06:53.620774 30976 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:53.620781 30976 net.cpp:86] Creating Layer pool1
I0428 20:06:53.620800 30976 net.cpp:408] pool1 <- conv1
I0428 20:06:53.620834 30976 net.cpp:382] pool1 -> pool1
I0428 20:06:53.620888 30976 net.cpp:124] Setting up pool1
I0428 20:06:53.620898 30976 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:53.620903 30976 net.cpp:139] Memory required for data: 7674800
I0428 20:06:53.620905 30976 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:53.620911 30976 net.cpp:86] Creating Layer ip1
I0428 20:06:53.620926 30976 net.cpp:408] ip1 <- pool1
I0428 20:06:53.620934 30976 net.cpp:382] ip1 -> ip1
I0428 20:06:53.621052 30976 net.cpp:124] Setting up ip1
I0428 20:06:53.621059 30976 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:53.621071 30976 net.cpp:139] Memory required for data: 7684800
I0428 20:06:53.621079 30976 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:53.621084 30976 net.cpp:86] Creating Layer relu1
I0428 20:06:53.621088 30976 net.cpp:408] relu1 <- ip1
I0428 20:06:53.621093 30976 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:53.621423 30976 net.cpp:124] Setting up relu1
I0428 20:06:53.621434 30976 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:53.621438 30976 net.cpp:139] Memory required for data: 7694800
I0428 20:06:53.621441 30976 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:53.621450 30976 net.cpp:86] Creating Layer ip2
I0428 20:06:53.621469 30976 net.cpp:408] ip2 <- ip1
I0428 20:06:53.621474 30976 net.cpp:382] ip2 -> ip2
I0428 20:06:53.621582 30976 net.cpp:124] Setting up ip2
I0428 20:06:53.621589 30976 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:53.621592 30976 net.cpp:139] Memory required for data: 7704800
I0428 20:06:53.621598 30976 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:53.621608 30976 net.cpp:86] Creating Layer relu2
I0428 20:06:53.621626 30976 net.cpp:408] relu2 <- ip2
I0428 20:06:53.621631 30976 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:53.621778 30976 net.cpp:124] Setting up relu2
I0428 20:06:53.621788 30976 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:53.621790 30976 net.cpp:139] Memory required for data: 7714800
I0428 20:06:53.621793 30976 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:53.621799 30976 net.cpp:86] Creating Layer ip3
I0428 20:06:53.621803 30976 net.cpp:408] ip3 <- ip2
I0428 20:06:53.621806 30976 net.cpp:382] ip3 -> ip3
I0428 20:06:53.621901 30976 net.cpp:124] Setting up ip3
I0428 20:06:53.621908 30976 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:53.621912 30976 net.cpp:139] Memory required for data: 7718800
I0428 20:06:53.621919 30976 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:53.621924 30976 net.cpp:86] Creating Layer relu3
I0428 20:06:53.621928 30976 net.cpp:408] relu3 <- ip3
I0428 20:06:53.621932 30976 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:53.622812 30976 net.cpp:124] Setting up relu3
I0428 20:06:53.622824 30976 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:53.622828 30976 net.cpp:139] Memory required for data: 7722800
I0428 20:06:53.622831 30976 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:53.622838 30976 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:53.622841 30976 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:53.622860 30976 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:53.622866 30976 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:53.622932 30976 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:53.622943 30976 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:53.622951 30976 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:53.622956 30976 net.cpp:139] Memory required for data: 7730800
I0428 20:06:53.622961 30976 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:53.622969 30976 net.cpp:86] Creating Layer accuracy
I0428 20:06:53.622974 30976 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:53.622979 30976 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:53.622984 30976 net.cpp:382] accuracy -> accuracy
I0428 20:06:53.622992 30976 net.cpp:124] Setting up accuracy
I0428 20:06:53.622997 30976 net.cpp:131] Top shape: (1)
I0428 20:06:53.622999 30976 net.cpp:139] Memory required for data: 7730804
I0428 20:06:53.623003 30976 layer_factory.hpp:77] Creating layer loss
I0428 20:06:53.623008 30976 net.cpp:86] Creating Layer loss
I0428 20:06:53.623010 30976 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:53.623013 30976 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:53.623018 30976 net.cpp:382] loss -> loss
I0428 20:06:53.623031 30976 layer_factory.hpp:77] Creating layer loss
I0428 20:06:53.623287 30976 net.cpp:124] Setting up loss
I0428 20:06:53.623297 30976 net.cpp:131] Top shape: (1)
I0428 20:06:53.623301 30976 net.cpp:134]     with loss weight 1
I0428 20:06:53.623306 30976 net.cpp:139] Memory required for data: 7730808
I0428 20:06:53.623318 30976 net.cpp:200] loss needs backward computation.
I0428 20:06:53.623322 30976 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:53.623327 30976 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:53.623353 30976 net.cpp:200] relu3 needs backward computation.
I0428 20:06:53.623379 30976 net.cpp:200] ip3 needs backward computation.
I0428 20:06:53.623384 30976 net.cpp:200] relu2 needs backward computation.
I0428 20:06:53.623389 30976 net.cpp:200] ip2 needs backward computation.
I0428 20:06:53.623394 30976 net.cpp:200] relu1 needs backward computation.
I0428 20:06:53.623399 30976 net.cpp:200] ip1 needs backward computation.
I0428 20:06:53.623404 30976 net.cpp:200] pool1 needs backward computation.
I0428 20:06:53.623409 30976 net.cpp:200] conv1 needs backward computation.
I0428 20:06:53.623414 30976 net.cpp:200] pool0 needs backward computation.
I0428 20:06:53.623420 30976 net.cpp:200] conv0 needs backward computation.
I0428 20:06:53.623432 30976 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:53.623435 30976 net.cpp:202] mnist does not need backward computation.
I0428 20:06:53.623438 30976 net.cpp:244] This network produces output accuracy
I0428 20:06:53.623441 30976 net.cpp:244] This network produces output loss
I0428 20:06:53.623455 30976 net.cpp:257] Network initialization done.
I0428 20:06:53.623497 30976 solver.cpp:56] Solver scaffolding done.
I0428 20:06:53.623849 30976 caffe.cpp:248] Starting Optimization
I0428 20:06:53.623857 30976 solver.cpp:273] Solving LeNet
I0428 20:06:53.623859 30976 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:53.624799 30976 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:53.629848 30976 blocking_queue.cpp:49] Waiting for data
I0428 20:06:53.700526 30983 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:53.701146 30976 solver.cpp:398]     Test net output #0: accuracy = 0.1381
I0428 20:06:53.701165 30976 solver.cpp:398]     Test net output #1: loss = 2.31094 (* 1 = 2.31094 loss)
I0428 20:06:53.704836 30976 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809247s/100 iters), loss = 2.30813
I0428 20:06:53.704861 30976 solver.cpp:238]     Train net output #0: loss = 2.30813 (* 1 = 2.30813 loss)
I0428 20:06:53.704890 30976 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:53.794288 30976 solver.cpp:219] Iteration 100 (1118.37 iter/s, 0.0894157s/100 iters), loss = 1.0395
I0428 20:06:53.794312 30976 solver.cpp:238]     Train net output #0: loss = 1.0395 (* 1 = 1.0395 loss)
I0428 20:06:53.794317 30976 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:53.882423 30976 solver.cpp:219] Iteration 200 (1135.06 iter/s, 0.0881011s/100 iters), loss = 0.572378
I0428 20:06:53.882447 30976 solver.cpp:238]     Train net output #0: loss = 0.572378 (* 1 = 0.572378 loss)
I0428 20:06:53.882452 30976 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:53.971385 30976 solver.cpp:219] Iteration 300 (1124.5 iter/s, 0.0889283s/100 iters), loss = 1.02323
I0428 20:06:53.971410 30976 solver.cpp:238]     Train net output #0: loss = 1.02323 (* 1 = 1.02323 loss)
I0428 20:06:53.971416 30976 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:54.058668 30976 solver.cpp:219] Iteration 400 (1146.15 iter/s, 0.0872489s/100 iters), loss = 0.60207
I0428 20:06:54.058692 30976 solver.cpp:238]     Train net output #0: loss = 0.60207 (* 1 = 0.60207 loss)
I0428 20:06:54.058698 30976 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:54.153867 30976 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:54.228938 30983 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:54.229521 30976 solver.cpp:398]     Test net output #0: accuracy = 0.7609
I0428 20:06:54.229539 30976 solver.cpp:398]     Test net output #1: loss = 0.624129 (* 1 = 0.624129 loss)
I0428 20:06:54.230547 30976 solver.cpp:219] Iteration 500 (581.99 iter/s, 0.171824s/100 iters), loss = 0.50624
I0428 20:06:54.230597 30976 solver.cpp:238]     Train net output #0: loss = 0.50624 (* 1 = 0.50624 loss)
I0428 20:06:54.230618 30976 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:54.327092 30976 solver.cpp:219] Iteration 600 (1036.42 iter/s, 0.0964857s/100 iters), loss = 0.490075
I0428 20:06:54.327117 30976 solver.cpp:238]     Train net output #0: loss = 0.490075 (* 1 = 0.490075 loss)
I0428 20:06:54.327123 30976 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:54.415694 30976 solver.cpp:219] Iteration 700 (1129.09 iter/s, 0.0885668s/100 iters), loss = 0.608216
I0428 20:06:54.415750 30976 solver.cpp:238]     Train net output #0: loss = 0.608216 (* 1 = 0.608216 loss)
I0428 20:06:54.415755 30976 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:54.512781 30976 solver.cpp:219] Iteration 800 (1030.54 iter/s, 0.0970363s/100 iters), loss = 0.849756
I0428 20:06:54.512846 30976 solver.cpp:238]     Train net output #0: loss = 0.849756 (* 1 = 0.849756 loss)
I0428 20:06:54.512853 30976 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:54.603087 30976 solver.cpp:219] Iteration 900 (1107.81 iter/s, 0.0902685s/100 iters), loss = 0.756807
I0428 20:06:54.603128 30976 solver.cpp:238]     Train net output #0: loss = 0.756807 (* 1 = 0.756807 loss)
I0428 20:06:54.603134 30976 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:54.632339 30982 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:54.690033 30976 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:54.690815 30976 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:54.691408 30976 solver.cpp:311] Iteration 1000, loss = 0.715791
I0428 20:06:54.691423 30976 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:54.768748 30983 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:54.769351 30976 solver.cpp:398]     Test net output #0: accuracy = 0.7761
I0428 20:06:54.769369 30976 solver.cpp:398]     Test net output #1: loss = 0.56932 (* 1 = 0.56932 loss)
I0428 20:06:54.769374 30976 solver.cpp:316] Optimization Done.
I0428 20:06:54.769378 30976 caffe.cpp:259] Optimization Done.
