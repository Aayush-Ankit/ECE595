I0428 20:30:38.695363  3790 caffe.cpp:218] Using GPUs 0
I0428 20:30:38.736497  3790 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:39.256981  3790 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1542.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:39.257145  3790 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1542.prototxt
I0428 20:30:39.257568  3790 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:39.257594  3790 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:39.257710  3790 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:39.257825  3790 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:39.257964  3790 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:39.257997  3790 net.cpp:86] Creating Layer mnist
I0428 20:30:39.258009  3790 net.cpp:382] mnist -> data
I0428 20:30:39.258040  3790 net.cpp:382] mnist -> label
I0428 20:30:39.259311  3790 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:39.261797  3790 net.cpp:124] Setting up mnist
I0428 20:30:39.261818  3790 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:39.261828  3790 net.cpp:131] Top shape: 64 (64)
I0428 20:30:39.261834  3790 net.cpp:139] Memory required for data: 200960
I0428 20:30:39.261845  3790 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:39.261873  3790 net.cpp:86] Creating Layer conv0
I0428 20:30:39.261899  3790 net.cpp:408] conv0 <- data
I0428 20:30:39.261919  3790 net.cpp:382] conv0 -> conv0
I0428 20:30:39.555322  3790 net.cpp:124] Setting up conv0
I0428 20:30:39.555357  3790 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:39.555364  3790 net.cpp:139] Memory required for data: 14946560
I0428 20:30:39.555388  3790 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:39.555410  3790 net.cpp:86] Creating Layer pool0
I0428 20:30:39.555428  3790 net.cpp:408] pool0 <- conv0
I0428 20:30:39.555438  3790 net.cpp:382] pool0 -> pool0
I0428 20:30:39.555512  3790 net.cpp:124] Setting up pool0
I0428 20:30:39.555523  3790 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:39.555528  3790 net.cpp:139] Memory required for data: 18632960
I0428 20:30:39.555536  3790 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:39.555555  3790 net.cpp:86] Creating Layer conv1
I0428 20:30:39.555564  3790 net.cpp:408] conv1 <- pool0
I0428 20:30:39.555575  3790 net.cpp:382] conv1 -> conv1
I0428 20:30:39.557982  3790 net.cpp:124] Setting up conv1
I0428 20:30:39.558004  3790 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:39.558012  3790 net.cpp:139] Memory required for data: 18796800
I0428 20:30:39.558028  3790 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:39.558044  3790 net.cpp:86] Creating Layer pool1
I0428 20:30:39.558058  3790 net.cpp:408] pool1 <- conv1
I0428 20:30:39.558070  3790 net.cpp:382] pool1 -> pool1
I0428 20:30:39.558125  3790 net.cpp:124] Setting up pool1
I0428 20:30:39.558135  3790 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:39.558141  3790 net.cpp:139] Memory required for data: 18837760
I0428 20:30:39.558147  3790 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:39.558162  3790 net.cpp:86] Creating Layer ip1
I0428 20:30:39.558172  3790 net.cpp:408] ip1 <- pool1
I0428 20:30:39.558182  3790 net.cpp:382] ip1 -> ip1
I0428 20:30:39.558349  3790 net.cpp:124] Setting up ip1
I0428 20:30:39.558360  3790 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:39.558367  3790 net.cpp:139] Memory required for data: 18844160
I0428 20:30:39.558382  3790 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:39.558399  3790 net.cpp:86] Creating Layer relu1
I0428 20:30:39.558408  3790 net.cpp:408] relu1 <- ip1
I0428 20:30:39.558416  3790 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:39.558635  3790 net.cpp:124] Setting up relu1
I0428 20:30:39.558648  3790 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:39.558658  3790 net.cpp:139] Memory required for data: 18850560
I0428 20:30:39.558665  3790 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:39.558676  3790 net.cpp:86] Creating Layer ip2
I0428 20:30:39.558683  3790 net.cpp:408] ip2 <- ip1
I0428 20:30:39.558696  3790 net.cpp:382] ip2 -> ip2
I0428 20:30:39.558823  3790 net.cpp:124] Setting up ip2
I0428 20:30:39.558835  3790 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:39.558840  3790 net.cpp:139] Memory required for data: 18853120
I0428 20:30:39.558851  3790 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:39.558866  3790 net.cpp:86] Creating Layer relu2
I0428 20:30:39.558872  3790 net.cpp:408] relu2 <- ip2
I0428 20:30:39.558881  3790 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:39.559753  3790 net.cpp:124] Setting up relu2
I0428 20:30:39.559772  3790 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:39.559778  3790 net.cpp:139] Memory required for data: 18855680
I0428 20:30:39.559785  3790 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:39.559798  3790 net.cpp:86] Creating Layer ip3
I0428 20:30:39.559804  3790 net.cpp:408] ip3 <- ip2
I0428 20:30:39.559818  3790 net.cpp:382] ip3 -> ip3
I0428 20:30:39.559952  3790 net.cpp:124] Setting up ip3
I0428 20:30:39.559962  3790 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:39.559968  3790 net.cpp:139] Memory required for data: 18858240
I0428 20:30:39.559983  3790 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:39.559994  3790 net.cpp:86] Creating Layer relu3
I0428 20:30:39.560001  3790 net.cpp:408] relu3 <- ip3
I0428 20:30:39.560012  3790 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:39.560226  3790 net.cpp:124] Setting up relu3
I0428 20:30:39.560238  3790 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:39.560245  3790 net.cpp:139] Memory required for data: 18860800
I0428 20:30:39.560251  3790 layer_factory.hpp:77] Creating layer loss
I0428 20:30:39.560267  3790 net.cpp:86] Creating Layer loss
I0428 20:30:39.560276  3790 net.cpp:408] loss <- ip3
I0428 20:30:39.560283  3790 net.cpp:408] loss <- label
I0428 20:30:39.560293  3790 net.cpp:382] loss -> loss
I0428 20:30:39.560319  3790 layer_factory.hpp:77] Creating layer loss
I0428 20:30:39.560619  3790 net.cpp:124] Setting up loss
I0428 20:30:39.560632  3790 net.cpp:131] Top shape: (1)
I0428 20:30:39.560638  3790 net.cpp:134]     with loss weight 1
I0428 20:30:39.560662  3790 net.cpp:139] Memory required for data: 18860804
I0428 20:30:39.560668  3790 net.cpp:200] loss needs backward computation.
I0428 20:30:39.560677  3790 net.cpp:200] relu3 needs backward computation.
I0428 20:30:39.560683  3790 net.cpp:200] ip3 needs backward computation.
I0428 20:30:39.560689  3790 net.cpp:200] relu2 needs backward computation.
I0428 20:30:39.560695  3790 net.cpp:200] ip2 needs backward computation.
I0428 20:30:39.560701  3790 net.cpp:200] relu1 needs backward computation.
I0428 20:30:39.560708  3790 net.cpp:200] ip1 needs backward computation.
I0428 20:30:39.560714  3790 net.cpp:200] pool1 needs backward computation.
I0428 20:30:39.560719  3790 net.cpp:200] conv1 needs backward computation.
I0428 20:30:39.560726  3790 net.cpp:200] pool0 needs backward computation.
I0428 20:30:39.560732  3790 net.cpp:200] conv0 needs backward computation.
I0428 20:30:39.560739  3790 net.cpp:202] mnist does not need backward computation.
I0428 20:30:39.560745  3790 net.cpp:244] This network produces output loss
I0428 20:30:39.560766  3790 net.cpp:257] Network initialization done.
I0428 20:30:39.561173  3790 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1542.prototxt
I0428 20:30:39.561216  3790 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:39.561338  3790 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:39.561484  3790 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:39.561553  3790 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:39.561575  3790 net.cpp:86] Creating Layer mnist
I0428 20:30:39.561585  3790 net.cpp:382] mnist -> data
I0428 20:30:39.561600  3790 net.cpp:382] mnist -> label
I0428 20:30:39.561749  3790 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:39.564131  3790 net.cpp:124] Setting up mnist
I0428 20:30:39.564148  3790 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:39.564158  3790 net.cpp:131] Top shape: 100 (100)
I0428 20:30:39.564164  3790 net.cpp:139] Memory required for data: 314000
I0428 20:30:39.564170  3790 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:39.564204  3790 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:39.564211  3790 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:39.564221  3790 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:39.564236  3790 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:39.564335  3790 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:39.564347  3790 net.cpp:131] Top shape: 100 (100)
I0428 20:30:39.564353  3790 net.cpp:131] Top shape: 100 (100)
I0428 20:30:39.564359  3790 net.cpp:139] Memory required for data: 314800
I0428 20:30:39.564365  3790 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:39.564383  3790 net.cpp:86] Creating Layer conv0
I0428 20:30:39.564391  3790 net.cpp:408] conv0 <- data
I0428 20:30:39.564404  3790 net.cpp:382] conv0 -> conv0
I0428 20:30:39.566241  3790 net.cpp:124] Setting up conv0
I0428 20:30:39.566268  3790 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:39.566275  3790 net.cpp:139] Memory required for data: 23354800
I0428 20:30:39.566293  3790 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:39.566304  3790 net.cpp:86] Creating Layer pool0
I0428 20:30:39.566313  3790 net.cpp:408] pool0 <- conv0
I0428 20:30:39.566323  3790 net.cpp:382] pool0 -> pool0
I0428 20:30:39.566375  3790 net.cpp:124] Setting up pool0
I0428 20:30:39.566386  3790 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:39.566391  3790 net.cpp:139] Memory required for data: 29114800
I0428 20:30:39.566397  3790 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:39.566416  3790 net.cpp:86] Creating Layer conv1
I0428 20:30:39.566424  3790 net.cpp:408] conv1 <- pool0
I0428 20:30:39.566435  3790 net.cpp:382] conv1 -> conv1
I0428 20:30:39.568465  3790 net.cpp:124] Setting up conv1
I0428 20:30:39.568483  3790 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:39.568490  3790 net.cpp:139] Memory required for data: 29370800
I0428 20:30:39.568506  3790 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:39.568521  3790 net.cpp:86] Creating Layer pool1
I0428 20:30:39.568531  3790 net.cpp:408] pool1 <- conv1
I0428 20:30:39.568539  3790 net.cpp:382] pool1 -> pool1
I0428 20:30:39.568593  3790 net.cpp:124] Setting up pool1
I0428 20:30:39.568603  3790 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:39.568608  3790 net.cpp:139] Memory required for data: 29434800
I0428 20:30:39.568614  3790 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:39.568626  3790 net.cpp:86] Creating Layer ip1
I0428 20:30:39.568634  3790 net.cpp:408] ip1 <- pool1
I0428 20:30:39.568645  3790 net.cpp:382] ip1 -> ip1
I0428 20:30:39.568809  3790 net.cpp:124] Setting up ip1
I0428 20:30:39.568840  3790 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:39.568847  3790 net.cpp:139] Memory required for data: 29444800
I0428 20:30:39.568862  3790 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:39.568882  3790 net.cpp:86] Creating Layer relu1
I0428 20:30:39.568889  3790 net.cpp:408] relu1 <- ip1
I0428 20:30:39.568902  3790 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:39.569111  3790 net.cpp:124] Setting up relu1
I0428 20:30:39.569124  3790 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:39.569133  3790 net.cpp:139] Memory required for data: 29454800
I0428 20:30:39.569139  3790 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:39.569154  3790 net.cpp:86] Creating Layer ip2
I0428 20:30:39.569161  3790 net.cpp:408] ip2 <- ip1
I0428 20:30:39.569172  3790 net.cpp:382] ip2 -> ip2
I0428 20:30:39.569331  3790 net.cpp:124] Setting up ip2
I0428 20:30:39.569341  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.569347  3790 net.cpp:139] Memory required for data: 29458800
I0428 20:30:39.569358  3790 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:39.569368  3790 net.cpp:86] Creating Layer relu2
I0428 20:30:39.569375  3790 net.cpp:408] relu2 <- ip2
I0428 20:30:39.569386  3790 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:39.569589  3790 net.cpp:124] Setting up relu2
I0428 20:30:39.569602  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.569608  3790 net.cpp:139] Memory required for data: 29462800
I0428 20:30:39.569614  3790 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:39.569628  3790 net.cpp:86] Creating Layer ip3
I0428 20:30:39.569634  3790 net.cpp:408] ip3 <- ip2
I0428 20:30:39.569648  3790 net.cpp:382] ip3 -> ip3
I0428 20:30:39.569780  3790 net.cpp:124] Setting up ip3
I0428 20:30:39.569792  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.569799  3790 net.cpp:139] Memory required for data: 29466800
I0428 20:30:39.569814  3790 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:39.569824  3790 net.cpp:86] Creating Layer relu3
I0428 20:30:39.569831  3790 net.cpp:408] relu3 <- ip3
I0428 20:30:39.569839  3790 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:39.570783  3790 net.cpp:124] Setting up relu3
I0428 20:30:39.570799  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.570806  3790 net.cpp:139] Memory required for data: 29470800
I0428 20:30:39.570812  3790 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:39.570824  3790 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:39.570832  3790 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:39.570842  3790 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:39.570855  3790 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:39.570909  3790 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:39.570919  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.570927  3790 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:39.570933  3790 net.cpp:139] Memory required for data: 29478800
I0428 20:30:39.570940  3790 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:39.570952  3790 net.cpp:86] Creating Layer accuracy
I0428 20:30:39.570964  3790 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:39.570972  3790 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:39.570982  3790 net.cpp:382] accuracy -> accuracy
I0428 20:30:39.570996  3790 net.cpp:124] Setting up accuracy
I0428 20:30:39.571005  3790 net.cpp:131] Top shape: (1)
I0428 20:30:39.571012  3790 net.cpp:139] Memory required for data: 29478804
I0428 20:30:39.571017  3790 layer_factory.hpp:77] Creating layer loss
I0428 20:30:39.571028  3790 net.cpp:86] Creating Layer loss
I0428 20:30:39.571035  3790 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:39.571043  3790 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:39.571051  3790 net.cpp:382] loss -> loss
I0428 20:30:39.571063  3790 layer_factory.hpp:77] Creating layer loss
I0428 20:30:39.571364  3790 net.cpp:124] Setting up loss
I0428 20:30:39.571378  3790 net.cpp:131] Top shape: (1)
I0428 20:30:39.571384  3790 net.cpp:134]     with loss weight 1
I0428 20:30:39.571410  3790 net.cpp:139] Memory required for data: 29478808
I0428 20:30:39.571418  3790 net.cpp:200] loss needs backward computation.
I0428 20:30:39.571426  3790 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:39.571434  3790 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:39.571442  3790 net.cpp:200] relu3 needs backward computation.
I0428 20:30:39.571449  3790 net.cpp:200] ip3 needs backward computation.
I0428 20:30:39.571455  3790 net.cpp:200] relu2 needs backward computation.
I0428 20:30:39.571460  3790 net.cpp:200] ip2 needs backward computation.
I0428 20:30:39.571467  3790 net.cpp:200] relu1 needs backward computation.
I0428 20:30:39.571475  3790 net.cpp:200] ip1 needs backward computation.
I0428 20:30:39.571480  3790 net.cpp:200] pool1 needs backward computation.
I0428 20:30:39.571487  3790 net.cpp:200] conv1 needs backward computation.
I0428 20:30:39.571493  3790 net.cpp:200] pool0 needs backward computation.
I0428 20:30:39.571499  3790 net.cpp:200] conv0 needs backward computation.
I0428 20:30:39.571507  3790 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:39.571514  3790 net.cpp:202] mnist does not need backward computation.
I0428 20:30:39.571521  3790 net.cpp:244] This network produces output accuracy
I0428 20:30:39.571527  3790 net.cpp:244] This network produces output loss
I0428 20:30:39.571548  3790 net.cpp:257] Network initialization done.
I0428 20:30:39.571610  3790 solver.cpp:56] Solver scaffolding done.
I0428 20:30:39.572077  3790 caffe.cpp:248] Starting Optimization
I0428 20:30:39.572087  3790 solver.cpp:273] Solving LeNet
I0428 20:30:39.572091  3790 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:39.572310  3790 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:39.672109  3797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:39.674497  3790 solver.cpp:398]     Test net output #0: accuracy = 0.0918
I0428 20:30:39.674527  3790 solver.cpp:398]     Test net output #1: loss = 2.30925 (* 1 = 2.30925 loss)
I0428 20:30:39.679461  3790 solver.cpp:219] Iteration 0 (0 iter/s, 0.107329s/100 iters), loss = 2.31872
I0428 20:30:39.679498  3790 solver.cpp:238]     Train net output #0: loss = 2.31872 (* 1 = 2.31872 loss)
I0428 20:30:39.679518  3790 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:39.907240  3790 solver.cpp:219] Iteration 100 (439.138 iter/s, 0.227719s/100 iters), loss = 0.523335
I0428 20:30:39.907305  3790 solver.cpp:238]     Train net output #0: loss = 0.523335 (* 1 = 0.523335 loss)
I0428 20:30:39.907327  3790 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:40.135037  3790 solver.cpp:219] Iteration 200 (439.133 iter/s, 0.227721s/100 iters), loss = 0.17997
I0428 20:30:40.135097  3790 solver.cpp:238]     Train net output #0: loss = 0.17997 (* 1 = 0.17997 loss)
I0428 20:30:40.135118  3790 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:40.365129  3790 solver.cpp:219] Iteration 300 (434.747 iter/s, 0.230019s/100 iters), loss = 0.143678
I0428 20:30:40.365190  3790 solver.cpp:238]     Train net output #0: loss = 0.143678 (* 1 = 0.143678 loss)
I0428 20:30:40.365209  3790 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:40.595254  3790 solver.cpp:219] Iteration 400 (434.683 iter/s, 0.230053s/100 iters), loss = 0.0864876
I0428 20:30:40.595314  3790 solver.cpp:238]     Train net output #0: loss = 0.0864876 (* 1 = 0.0864876 loss)
I0428 20:30:40.595335  3790 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:40.820504  3790 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:40.843611  3790 blocking_queue.cpp:49] Waiting for data
I0428 20:30:40.928153  3797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:40.929707  3790 solver.cpp:398]     Test net output #0: accuracy = 0.9556
I0428 20:30:40.929736  3790 solver.cpp:398]     Test net output #1: loss = 0.151278 (* 1 = 0.151278 loss)
I0428 20:30:40.931831  3790 solver.cpp:219] Iteration 500 (297.173 iter/s, 0.336505s/100 iters), loss = 0.175137
I0428 20:30:40.931884  3790 solver.cpp:238]     Train net output #0: loss = 0.175137 (* 1 = 0.175137 loss)
I0428 20:30:40.931897  3790 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:41.148979  3790 solver.cpp:219] Iteration 600 (460.664 iter/s, 0.217078s/100 iters), loss = 0.14851
I0428 20:30:41.149040  3790 solver.cpp:238]     Train net output #0: loss = 0.14851 (* 1 = 0.14851 loss)
I0428 20:30:41.149061  3790 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:41.378536  3790 solver.cpp:219] Iteration 700 (435.761 iter/s, 0.229484s/100 iters), loss = 0.166565
I0428 20:30:41.378597  3790 solver.cpp:238]     Train net output #0: loss = 0.166565 (* 1 = 0.166565 loss)
I0428 20:30:41.378617  3790 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:41.607273  3790 solver.cpp:219] Iteration 800 (437.321 iter/s, 0.228665s/100 iters), loss = 0.326115
I0428 20:30:41.607332  3790 solver.cpp:238]     Train net output #0: loss = 0.326115 (* 1 = 0.326115 loss)
I0428 20:30:41.607353  3790 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:41.834096  3790 solver.cpp:219] Iteration 900 (441.011 iter/s, 0.226751s/100 iters), loss = 0.169592
I0428 20:30:41.834152  3790 solver.cpp:238]     Train net output #0: loss = 0.169591 (* 1 = 0.169591 loss)
I0428 20:30:41.834172  3790 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:41.908695  3796 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:42.056088  3790 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:42.058382  3790 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:42.059801  3790 solver.cpp:311] Iteration 1000, loss = 0.130823
I0428 20:30:42.059829  3790 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:42.162364  3797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:42.165146  3790 solver.cpp:398]     Test net output #0: accuracy = 0.9732
I0428 20:30:42.165175  3790 solver.cpp:398]     Test net output #1: loss = 0.0849553 (* 1 = 0.0849553 loss)
I0428 20:30:42.165186  3790 solver.cpp:316] Optimization Done.
I0428 20:30:42.165192  3790 caffe.cpp:259] Optimization Done.
