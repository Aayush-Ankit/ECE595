I0428 19:49:31.011005 26782 caffe.cpp:218] Using GPUs 0
I0428 19:49:31.040659 26782 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:31.484350 26782 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test577.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:31.484479 26782 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test577.prototxt
I0428 19:49:31.484832 26782 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:31.484861 26782 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:31.484973 26782 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:31.485038 26782 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:31.485122 26782 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:31.485172 26782 net.cpp:86] Creating Layer mnist
I0428 19:49:31.485179 26782 net.cpp:382] mnist -> data
I0428 19:49:31.485213 26782 net.cpp:382] mnist -> label
I0428 19:49:31.486142 26782 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:31.488309 26782 net.cpp:124] Setting up mnist
I0428 19:49:31.488339 26782 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:31.488345 26782 net.cpp:131] Top shape: 64 (64)
I0428 19:49:31.488348 26782 net.cpp:139] Memory required for data: 200960
I0428 19:49:31.488354 26782 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:31.488368 26782 net.cpp:86] Creating Layer conv0
I0428 19:49:31.488384 26782 net.cpp:408] conv0 <- data
I0428 19:49:31.488394 26782 net.cpp:382] conv0 -> conv0
I0428 19:49:31.716334 26782 net.cpp:124] Setting up conv0
I0428 19:49:31.716361 26782 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:31.716365 26782 net.cpp:139] Memory required for data: 938240
I0428 19:49:31.716379 26782 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:31.716392 26782 net.cpp:86] Creating Layer pool0
I0428 19:49:31.716397 26782 net.cpp:408] pool0 <- conv0
I0428 19:49:31.716401 26782 net.cpp:382] pool0 -> pool0
I0428 19:49:31.716460 26782 net.cpp:124] Setting up pool0
I0428 19:49:31.716467 26782 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:31.716471 26782 net.cpp:139] Memory required for data: 1122560
I0428 19:49:31.716475 26782 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:31.716485 26782 net.cpp:86] Creating Layer conv1
I0428 19:49:31.716491 26782 net.cpp:408] conv1 <- pool0
I0428 19:49:31.716496 26782 net.cpp:382] conv1 -> conv1
I0428 19:49:31.718354 26782 net.cpp:124] Setting up conv1
I0428 19:49:31.718384 26782 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:31.718389 26782 net.cpp:139] Memory required for data: 1204480
I0428 19:49:31.718396 26782 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:31.718407 26782 net.cpp:86] Creating Layer pool1
I0428 19:49:31.718413 26782 net.cpp:408] pool1 <- conv1
I0428 19:49:31.718418 26782 net.cpp:382] pool1 -> pool1
I0428 19:49:31.718456 26782 net.cpp:124] Setting up pool1
I0428 19:49:31.718463 26782 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:31.718466 26782 net.cpp:139] Memory required for data: 1224960
I0428 19:49:31.718471 26782 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:31.718477 26782 net.cpp:86] Creating Layer ip1
I0428 19:49:31.718480 26782 net.cpp:408] ip1 <- pool1
I0428 19:49:31.718485 26782 net.cpp:382] ip1 -> ip1
I0428 19:49:31.719530 26782 net.cpp:124] Setting up ip1
I0428 19:49:31.719559 26782 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:31.719563 26782 net.cpp:139] Memory required for data: 1237760
I0428 19:49:31.719571 26782 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:31.719578 26782 net.cpp:86] Creating Layer relu1
I0428 19:49:31.719580 26782 net.cpp:408] relu1 <- ip1
I0428 19:49:31.719585 26782 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:31.719799 26782 net.cpp:124] Setting up relu1
I0428 19:49:31.719807 26782 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:31.719810 26782 net.cpp:139] Memory required for data: 1250560
I0428 19:49:31.719815 26782 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:31.719820 26782 net.cpp:86] Creating Layer ip2
I0428 19:49:31.719825 26782 net.cpp:408] ip2 <- ip1
I0428 19:49:31.719830 26782 net.cpp:382] ip2 -> ip2
I0428 19:49:31.719943 26782 net.cpp:124] Setting up ip2
I0428 19:49:31.719949 26782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:31.719952 26782 net.cpp:139] Memory required for data: 1253120
I0428 19:49:31.719957 26782 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:31.719964 26782 net.cpp:86] Creating Layer relu2
I0428 19:49:31.719966 26782 net.cpp:408] relu2 <- ip2
I0428 19:49:31.719971 26782 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:31.720767 26782 net.cpp:124] Setting up relu2
I0428 19:49:31.720779 26782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:31.720799 26782 net.cpp:139] Memory required for data: 1255680
I0428 19:49:31.720803 26782 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:31.720815 26782 net.cpp:86] Creating Layer ip3
I0428 19:49:31.720829 26782 net.cpp:408] ip3 <- ip2
I0428 19:49:31.720850 26782 net.cpp:382] ip3 -> ip3
I0428 19:49:31.720981 26782 net.cpp:124] Setting up ip3
I0428 19:49:31.720990 26782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:31.720993 26782 net.cpp:139] Memory required for data: 1258240
I0428 19:49:31.721002 26782 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:31.721007 26782 net.cpp:86] Creating Layer relu3
I0428 19:49:31.721010 26782 net.cpp:408] relu3 <- ip3
I0428 19:49:31.721014 26782 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:31.721220 26782 net.cpp:124] Setting up relu3
I0428 19:49:31.721242 26782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:31.721246 26782 net.cpp:139] Memory required for data: 1260800
I0428 19:49:31.721249 26782 layer_factory.hpp:77] Creating layer loss
I0428 19:49:31.721254 26782 net.cpp:86] Creating Layer loss
I0428 19:49:31.721257 26782 net.cpp:408] loss <- ip3
I0428 19:49:31.721261 26782 net.cpp:408] loss <- label
I0428 19:49:31.721267 26782 net.cpp:382] loss -> loss
I0428 19:49:31.721284 26782 layer_factory.hpp:77] Creating layer loss
I0428 19:49:31.721523 26782 net.cpp:124] Setting up loss
I0428 19:49:31.721532 26782 net.cpp:131] Top shape: (1)
I0428 19:49:31.721535 26782 net.cpp:134]     with loss weight 1
I0428 19:49:31.721549 26782 net.cpp:139] Memory required for data: 1260804
I0428 19:49:31.721554 26782 net.cpp:200] loss needs backward computation.
I0428 19:49:31.721556 26782 net.cpp:200] relu3 needs backward computation.
I0428 19:49:31.721560 26782 net.cpp:200] ip3 needs backward computation.
I0428 19:49:31.721562 26782 net.cpp:200] relu2 needs backward computation.
I0428 19:49:31.721565 26782 net.cpp:200] ip2 needs backward computation.
I0428 19:49:31.721568 26782 net.cpp:200] relu1 needs backward computation.
I0428 19:49:31.721571 26782 net.cpp:200] ip1 needs backward computation.
I0428 19:49:31.721575 26782 net.cpp:200] pool1 needs backward computation.
I0428 19:49:31.721577 26782 net.cpp:200] conv1 needs backward computation.
I0428 19:49:31.721580 26782 net.cpp:200] pool0 needs backward computation.
I0428 19:49:31.721583 26782 net.cpp:200] conv0 needs backward computation.
I0428 19:49:31.721586 26782 net.cpp:202] mnist does not need backward computation.
I0428 19:49:31.721590 26782 net.cpp:244] This network produces output loss
I0428 19:49:31.721598 26782 net.cpp:257] Network initialization done.
I0428 19:49:31.721907 26782 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test577.prototxt
I0428 19:49:31.721932 26782 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:31.722029 26782 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:31.722101 26782 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:31.722146 26782 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:31.722158 26782 net.cpp:86] Creating Layer mnist
I0428 19:49:31.722162 26782 net.cpp:382] mnist -> data
I0428 19:49:31.722169 26782 net.cpp:382] mnist -> label
I0428 19:49:31.722264 26782 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:31.724184 26782 net.cpp:124] Setting up mnist
I0428 19:49:31.724197 26782 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:31.724202 26782 net.cpp:131] Top shape: 100 (100)
I0428 19:49:31.724205 26782 net.cpp:139] Memory required for data: 314000
I0428 19:49:31.724208 26782 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:31.724238 26782 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:31.724242 26782 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:31.724246 26782 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:31.724253 26782 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:31.724301 26782 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:31.724308 26782 net.cpp:131] Top shape: 100 (100)
I0428 19:49:31.724313 26782 net.cpp:131] Top shape: 100 (100)
I0428 19:49:31.724314 26782 net.cpp:139] Memory required for data: 314800
I0428 19:49:31.724318 26782 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:31.724325 26782 net.cpp:86] Creating Layer conv0
I0428 19:49:31.724344 26782 net.cpp:408] conv0 <- data
I0428 19:49:31.724349 26782 net.cpp:382] conv0 -> conv0
I0428 19:49:31.726192 26782 net.cpp:124] Setting up conv0
I0428 19:49:31.726207 26782 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:31.726212 26782 net.cpp:139] Memory required for data: 1466800
I0428 19:49:31.726220 26782 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:31.726227 26782 net.cpp:86] Creating Layer pool0
I0428 19:49:31.726230 26782 net.cpp:408] pool0 <- conv0
I0428 19:49:31.726235 26782 net.cpp:382] pool0 -> pool0
I0428 19:49:31.726272 26782 net.cpp:124] Setting up pool0
I0428 19:49:31.726277 26782 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:31.726280 26782 net.cpp:139] Memory required for data: 1754800
I0428 19:49:31.726284 26782 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:31.726292 26782 net.cpp:86] Creating Layer conv1
I0428 19:49:31.726295 26782 net.cpp:408] conv1 <- pool0
I0428 19:49:31.726300 26782 net.cpp:382] conv1 -> conv1
I0428 19:49:31.728394 26782 net.cpp:124] Setting up conv1
I0428 19:49:31.728411 26782 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:31.728428 26782 net.cpp:139] Memory required for data: 1882800
I0428 19:49:31.728437 26782 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:31.728444 26782 net.cpp:86] Creating Layer pool1
I0428 19:49:31.728447 26782 net.cpp:408] pool1 <- conv1
I0428 19:49:31.728453 26782 net.cpp:382] pool1 -> pool1
I0428 19:49:31.728492 26782 net.cpp:124] Setting up pool1
I0428 19:49:31.728498 26782 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:31.728508 26782 net.cpp:139] Memory required for data: 1914800
I0428 19:49:31.728513 26782 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:31.728518 26782 net.cpp:86] Creating Layer ip1
I0428 19:49:31.728528 26782 net.cpp:408] ip1 <- pool1
I0428 19:49:31.728533 26782 net.cpp:382] ip1 -> ip1
I0428 19:49:31.728700 26782 net.cpp:124] Setting up ip1
I0428 19:49:31.728708 26782 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:31.728723 26782 net.cpp:139] Memory required for data: 1934800
I0428 19:49:31.728730 26782 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:31.728735 26782 net.cpp:86] Creating Layer relu1
I0428 19:49:31.728739 26782 net.cpp:408] relu1 <- ip1
I0428 19:49:31.728744 26782 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:31.729027 26782 net.cpp:124] Setting up relu1
I0428 19:49:31.729038 26782 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:31.729043 26782 net.cpp:139] Memory required for data: 1954800
I0428 19:49:31.729046 26782 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:31.729053 26782 net.cpp:86] Creating Layer ip2
I0428 19:49:31.729058 26782 net.cpp:408] ip2 <- ip1
I0428 19:49:31.729063 26782 net.cpp:382] ip2 -> ip2
I0428 19:49:31.729179 26782 net.cpp:124] Setting up ip2
I0428 19:49:31.729187 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.729192 26782 net.cpp:139] Memory required for data: 1958800
I0428 19:49:31.729197 26782 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:31.729202 26782 net.cpp:86] Creating Layer relu2
I0428 19:49:31.729204 26782 net.cpp:408] relu2 <- ip2
I0428 19:49:31.729209 26782 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:31.729367 26782 net.cpp:124] Setting up relu2
I0428 19:49:31.729375 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.729378 26782 net.cpp:139] Memory required for data: 1962800
I0428 19:49:31.729382 26782 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:31.729387 26782 net.cpp:86] Creating Layer ip3
I0428 19:49:31.729398 26782 net.cpp:408] ip3 <- ip2
I0428 19:49:31.729403 26782 net.cpp:382] ip3 -> ip3
I0428 19:49:31.729493 26782 net.cpp:124] Setting up ip3
I0428 19:49:31.729501 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.729509 26782 net.cpp:139] Memory required for data: 1966800
I0428 19:49:31.729517 26782 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:31.729522 26782 net.cpp:86] Creating Layer relu3
I0428 19:49:31.729526 26782 net.cpp:408] relu3 <- ip3
I0428 19:49:31.729529 26782 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:31.730339 26782 net.cpp:124] Setting up relu3
I0428 19:49:31.730350 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.730355 26782 net.cpp:139] Memory required for data: 1970800
I0428 19:49:31.730357 26782 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:31.730365 26782 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:31.730367 26782 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:31.730372 26782 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:31.730378 26782 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:31.730440 26782 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:31.730446 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.730450 26782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:31.730453 26782 net.cpp:139] Memory required for data: 1978800
I0428 19:49:31.730456 26782 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:31.730461 26782 net.cpp:86] Creating Layer accuracy
I0428 19:49:31.730480 26782 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:31.730485 26782 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:31.730489 26782 net.cpp:382] accuracy -> accuracy
I0428 19:49:31.730497 26782 net.cpp:124] Setting up accuracy
I0428 19:49:31.730501 26782 net.cpp:131] Top shape: (1)
I0428 19:49:31.730504 26782 net.cpp:139] Memory required for data: 1978804
I0428 19:49:31.730507 26782 layer_factory.hpp:77] Creating layer loss
I0428 19:49:31.730518 26782 net.cpp:86] Creating Layer loss
I0428 19:49:31.730521 26782 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:31.730525 26782 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:31.730530 26782 net.cpp:382] loss -> loss
I0428 19:49:31.730535 26782 layer_factory.hpp:77] Creating layer loss
I0428 19:49:31.730774 26782 net.cpp:124] Setting up loss
I0428 19:49:31.730784 26782 net.cpp:131] Top shape: (1)
I0428 19:49:31.730788 26782 net.cpp:134]     with loss weight 1
I0428 19:49:31.730794 26782 net.cpp:139] Memory required for data: 1978808
I0428 19:49:31.730821 26782 net.cpp:200] loss needs backward computation.
I0428 19:49:31.730825 26782 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:31.730829 26782 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:31.730839 26782 net.cpp:200] relu3 needs backward computation.
I0428 19:49:31.730842 26782 net.cpp:200] ip3 needs backward computation.
I0428 19:49:31.730845 26782 net.cpp:200] relu2 needs backward computation.
I0428 19:49:31.730849 26782 net.cpp:200] ip2 needs backward computation.
I0428 19:49:31.730851 26782 net.cpp:200] relu1 needs backward computation.
I0428 19:49:31.730854 26782 net.cpp:200] ip1 needs backward computation.
I0428 19:49:31.730859 26782 net.cpp:200] pool1 needs backward computation.
I0428 19:49:31.730861 26782 net.cpp:200] conv1 needs backward computation.
I0428 19:49:31.730865 26782 net.cpp:200] pool0 needs backward computation.
I0428 19:49:31.730875 26782 net.cpp:200] conv0 needs backward computation.
I0428 19:49:31.730878 26782 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:31.730882 26782 net.cpp:202] mnist does not need backward computation.
I0428 19:49:31.730885 26782 net.cpp:244] This network produces output accuracy
I0428 19:49:31.730904 26782 net.cpp:244] This network produces output loss
I0428 19:49:31.730916 26782 net.cpp:257] Network initialization done.
I0428 19:49:31.730957 26782 solver.cpp:56] Solver scaffolding done.
I0428 19:49:31.731293 26782 caffe.cpp:248] Starting Optimization
I0428 19:49:31.731300 26782 solver.cpp:273] Solving LeNet
I0428 19:49:31.731304 26782 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:31.732108 26782 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:31.735648 26782 blocking_queue.cpp:49] Waiting for data
I0428 19:49:31.806658 26789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:31.807168 26782 solver.cpp:398]     Test net output #0: accuracy = 0.0752
I0428 19:49:31.807189 26782 solver.cpp:398]     Test net output #1: loss = 2.29928 (* 1 = 2.29928 loss)
I0428 19:49:31.808909 26782 solver.cpp:219] Iteration 0 (2.93436 iter/s, 0.0775803s/100 iters), loss = 2.30369
I0428 19:49:31.808946 26782 solver.cpp:238]     Train net output #0: loss = 2.30369 (* 1 = 2.30369 loss)
I0428 19:49:31.808961 26782 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:31.886867 26782 solver.cpp:219] Iteration 100 (1283.49 iter/s, 0.0779125s/100 iters), loss = 1.05546
I0428 19:49:31.886905 26782 solver.cpp:238]     Train net output #0: loss = 1.05546 (* 1 = 1.05546 loss)
I0428 19:49:31.886926 26782 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:31.959507 26782 solver.cpp:219] Iteration 200 (1377.24 iter/s, 0.0726088s/100 iters), loss = 0.749514
I0428 19:49:31.959561 26782 solver.cpp:238]     Train net output #0: loss = 0.749514 (* 1 = 0.749514 loss)
I0428 19:49:31.959568 26782 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:32.032606 26782 solver.cpp:219] Iteration 300 (1368.9 iter/s, 0.0730511s/100 iters), loss = 0.253024
I0428 19:49:32.032661 26782 solver.cpp:238]     Train net output #0: loss = 0.253024 (* 1 = 0.253024 loss)
I0428 19:49:32.032668 26782 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:32.105064 26782 solver.cpp:219] Iteration 400 (1381.04 iter/s, 0.0724091s/100 iters), loss = 0.366528
I0428 19:49:32.105100 26782 solver.cpp:238]     Train net output #0: loss = 0.366528 (* 1 = 0.366528 loss)
I0428 19:49:32.105108 26782 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:32.175544 26782 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:32.251761 26789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:32.252254 26782 solver.cpp:398]     Test net output #0: accuracy = 0.858
I0428 19:49:32.252272 26782 solver.cpp:398]     Test net output #1: loss = 0.408412 (* 1 = 0.408412 loss)
I0428 19:49:32.253073 26782 solver.cpp:219] Iteration 500 (675.855 iter/s, 0.147961s/100 iters), loss = 0.477661
I0428 19:49:32.253098 26782 solver.cpp:238]     Train net output #0: loss = 0.477661 (* 1 = 0.477661 loss)
I0428 19:49:32.253118 26782 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:32.331045 26782 solver.cpp:219] Iteration 600 (1283.06 iter/s, 0.0779387s/100 iters), loss = 0.243773
I0428 19:49:32.331086 26782 solver.cpp:238]     Train net output #0: loss = 0.243773 (* 1 = 0.243773 loss)
I0428 19:49:32.331092 26782 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:32.404541 26782 solver.cpp:219] Iteration 700 (1361.23 iter/s, 0.0734628s/100 iters), loss = 0.340549
I0428 19:49:32.404583 26782 solver.cpp:238]     Train net output #0: loss = 0.340549 (* 1 = 0.340549 loss)
I0428 19:49:32.404597 26782 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:32.479980 26782 solver.cpp:219] Iteration 800 (1326.47 iter/s, 0.075388s/100 iters), loss = 0.366536
I0428 19:49:32.480022 26782 solver.cpp:238]     Train net output #0: loss = 0.366536 (* 1 = 0.366536 loss)
I0428 19:49:32.480029 26782 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:32.557657 26782 solver.cpp:219] Iteration 900 (1287.97 iter/s, 0.0776417s/100 iters), loss = 0.224579
I0428 19:49:32.557682 26782 solver.cpp:238]     Train net output #0: loss = 0.224579 (* 1 = 0.224579 loss)
I0428 19:49:32.557688 26782 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:32.582427 26788 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:32.628026 26782 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:32.628710 26782 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:32.629205 26782 solver.cpp:311] Iteration 1000, loss = 0.162145
I0428 19:49:32.629235 26782 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:32.706089 26789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:32.706580 26782 solver.cpp:398]     Test net output #0: accuracy = 0.9601
I0428 19:49:32.706601 26782 solver.cpp:398]     Test net output #1: loss = 0.129679 (* 1 = 0.129679 loss)
I0428 19:49:32.706607 26782 solver.cpp:316] Optimization Done.
I0428 19:49:32.706610 26782 caffe.cpp:259] Optimization Done.
