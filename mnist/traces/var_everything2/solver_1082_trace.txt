I0428 20:08:24.018785 31373 caffe.cpp:218] Using GPUs 0
I0428 20:08:24.055202 31373 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:24.521193 31373 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1082.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:24.521320 31373 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1082.prototxt
I0428 20:08:24.521658 31373 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:24.521687 31373 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:24.521761 31373 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:24.521821 31373 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:24.521903 31373 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:24.521921 31373 net.cpp:86] Creating Layer mnist
I0428 20:08:24.521927 31373 net.cpp:382] mnist -> data
I0428 20:08:24.521945 31373 net.cpp:382] mnist -> label
I0428 20:08:24.522861 31373 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:24.525141 31373 net.cpp:124] Setting up mnist
I0428 20:08:24.525187 31373 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:24.525236 31373 net.cpp:131] Top shape: 64 (64)
I0428 20:08:24.525240 31373 net.cpp:139] Memory required for data: 200960
I0428 20:08:24.525246 31373 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:24.525259 31373 net.cpp:86] Creating Layer conv0
I0428 20:08:24.525277 31373 net.cpp:408] conv0 <- data
I0428 20:08:24.525290 31373 net.cpp:382] conv0 -> conv0
I0428 20:08:24.747779 31373 net.cpp:124] Setting up conv0
I0428 20:08:24.747805 31373 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:24.747809 31373 net.cpp:139] Memory required for data: 3887360
I0428 20:08:24.747822 31373 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:24.747834 31373 net.cpp:86] Creating Layer pool0
I0428 20:08:24.747838 31373 net.cpp:408] pool0 <- conv0
I0428 20:08:24.747843 31373 net.cpp:382] pool0 -> pool0
I0428 20:08:24.747901 31373 net.cpp:124] Setting up pool0
I0428 20:08:24.747907 31373 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:24.747910 31373 net.cpp:139] Memory required for data: 4808960
I0428 20:08:24.747912 31373 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:24.747923 31373 net.cpp:86] Creating Layer conv1
I0428 20:08:24.747926 31373 net.cpp:408] conv1 <- pool0
I0428 20:08:24.747931 31373 net.cpp:382] conv1 -> conv1
I0428 20:08:24.750744 31373 net.cpp:124] Setting up conv1
I0428 20:08:24.750758 31373 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:24.750762 31373 net.cpp:139] Memory required for data: 4972800
I0428 20:08:24.750771 31373 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:24.750794 31373 net.cpp:86] Creating Layer pool1
I0428 20:08:24.750797 31373 net.cpp:408] pool1 <- conv1
I0428 20:08:24.750802 31373 net.cpp:382] pool1 -> pool1
I0428 20:08:24.750839 31373 net.cpp:124] Setting up pool1
I0428 20:08:24.750845 31373 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:24.750849 31373 net.cpp:139] Memory required for data: 5013760
I0428 20:08:24.750851 31373 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:24.750859 31373 net.cpp:86] Creating Layer ip1
I0428 20:08:24.750875 31373 net.cpp:408] ip1 <- pool1
I0428 20:08:24.750880 31373 net.cpp:382] ip1 -> ip1
I0428 20:08:24.751938 31373 net.cpp:124] Setting up ip1
I0428 20:08:24.751953 31373 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:24.751957 31373 net.cpp:139] Memory required for data: 5020160
I0428 20:08:24.751969 31373 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:24.751979 31373 net.cpp:86] Creating Layer relu1
I0428 20:08:24.751986 31373 net.cpp:408] relu1 <- ip1
I0428 20:08:24.751993 31373 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:24.752185 31373 net.cpp:124] Setting up relu1
I0428 20:08:24.752195 31373 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:24.752199 31373 net.cpp:139] Memory required for data: 5026560
I0428 20:08:24.752202 31373 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:24.752210 31373 net.cpp:86] Creating Layer ip2
I0428 20:08:24.752213 31373 net.cpp:408] ip2 <- ip1
I0428 20:08:24.752219 31373 net.cpp:382] ip2 -> ip2
I0428 20:08:24.752360 31373 net.cpp:124] Setting up ip2
I0428 20:08:24.752368 31373 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:24.752372 31373 net.cpp:139] Memory required for data: 5039360
I0428 20:08:24.752377 31373 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:24.752383 31373 net.cpp:86] Creating Layer relu2
I0428 20:08:24.752387 31373 net.cpp:408] relu2 <- ip2
I0428 20:08:24.752391 31373 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:24.753227 31373 net.cpp:124] Setting up relu2
I0428 20:08:24.753257 31373 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:24.753260 31373 net.cpp:139] Memory required for data: 5052160
I0428 20:08:24.753264 31373 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:24.753271 31373 net.cpp:86] Creating Layer ip3
I0428 20:08:24.753274 31373 net.cpp:408] ip3 <- ip2
I0428 20:08:24.753280 31373 net.cpp:382] ip3 -> ip3
I0428 20:08:24.753384 31373 net.cpp:124] Setting up ip3
I0428 20:08:24.753392 31373 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:24.753396 31373 net.cpp:139] Memory required for data: 5054720
I0428 20:08:24.753420 31373 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:24.753427 31373 net.cpp:86] Creating Layer relu3
I0428 20:08:24.753430 31373 net.cpp:408] relu3 <- ip3
I0428 20:08:24.753435 31373 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:24.753615 31373 net.cpp:124] Setting up relu3
I0428 20:08:24.753625 31373 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:24.753628 31373 net.cpp:139] Memory required for data: 5057280
I0428 20:08:24.753633 31373 layer_factory.hpp:77] Creating layer loss
I0428 20:08:24.753638 31373 net.cpp:86] Creating Layer loss
I0428 20:08:24.753643 31373 net.cpp:408] loss <- ip3
I0428 20:08:24.753646 31373 net.cpp:408] loss <- label
I0428 20:08:24.753653 31373 net.cpp:382] loss -> loss
I0428 20:08:24.753667 31373 layer_factory.hpp:77] Creating layer loss
I0428 20:08:24.753926 31373 net.cpp:124] Setting up loss
I0428 20:08:24.753937 31373 net.cpp:131] Top shape: (1)
I0428 20:08:24.753955 31373 net.cpp:134]     with loss weight 1
I0428 20:08:24.753999 31373 net.cpp:139] Memory required for data: 5057284
I0428 20:08:24.754004 31373 net.cpp:200] loss needs backward computation.
I0428 20:08:24.754009 31373 net.cpp:200] relu3 needs backward computation.
I0428 20:08:24.754011 31373 net.cpp:200] ip3 needs backward computation.
I0428 20:08:24.754015 31373 net.cpp:200] relu2 needs backward computation.
I0428 20:08:24.754019 31373 net.cpp:200] ip2 needs backward computation.
I0428 20:08:24.754021 31373 net.cpp:200] relu1 needs backward computation.
I0428 20:08:24.754024 31373 net.cpp:200] ip1 needs backward computation.
I0428 20:08:24.754029 31373 net.cpp:200] pool1 needs backward computation.
I0428 20:08:24.754031 31373 net.cpp:200] conv1 needs backward computation.
I0428 20:08:24.754035 31373 net.cpp:200] pool0 needs backward computation.
I0428 20:08:24.754039 31373 net.cpp:200] conv0 needs backward computation.
I0428 20:08:24.754042 31373 net.cpp:202] mnist does not need backward computation.
I0428 20:08:24.754045 31373 net.cpp:244] This network produces output loss
I0428 20:08:24.754055 31373 net.cpp:257] Network initialization done.
I0428 20:08:24.754443 31373 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1082.prototxt
I0428 20:08:24.754487 31373 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:24.754577 31373 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:24.754674 31373 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:24.754716 31373 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:24.754732 31373 net.cpp:86] Creating Layer mnist
I0428 20:08:24.754737 31373 net.cpp:382] mnist -> data
I0428 20:08:24.754745 31373 net.cpp:382] mnist -> label
I0428 20:08:24.754849 31373 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:24.756855 31373 net.cpp:124] Setting up mnist
I0428 20:08:24.756870 31373 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:24.756876 31373 net.cpp:131] Top shape: 100 (100)
I0428 20:08:24.756880 31373 net.cpp:139] Memory required for data: 314000
I0428 20:08:24.756884 31373 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:24.756891 31373 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:24.756896 31373 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:24.756911 31373 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:24.756918 31373 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:24.756997 31373 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:24.757025 31373 net.cpp:131] Top shape: 100 (100)
I0428 20:08:24.757030 31373 net.cpp:131] Top shape: 100 (100)
I0428 20:08:24.757033 31373 net.cpp:139] Memory required for data: 314800
I0428 20:08:24.757036 31373 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:24.757045 31373 net.cpp:86] Creating Layer conv0
I0428 20:08:24.757050 31373 net.cpp:408] conv0 <- data
I0428 20:08:24.757055 31373 net.cpp:382] conv0 -> conv0
I0428 20:08:24.758749 31373 net.cpp:124] Setting up conv0
I0428 20:08:24.758762 31373 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:24.758782 31373 net.cpp:139] Memory required for data: 6074800
I0428 20:08:24.758791 31373 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:24.758797 31373 net.cpp:86] Creating Layer pool0
I0428 20:08:24.758801 31373 net.cpp:408] pool0 <- conv0
I0428 20:08:24.758806 31373 net.cpp:382] pool0 -> pool0
I0428 20:08:24.758842 31373 net.cpp:124] Setting up pool0
I0428 20:08:24.758848 31373 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:24.758852 31373 net.cpp:139] Memory required for data: 7514800
I0428 20:08:24.758854 31373 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:24.758862 31373 net.cpp:86] Creating Layer conv1
I0428 20:08:24.758865 31373 net.cpp:408] conv1 <- pool0
I0428 20:08:24.758870 31373 net.cpp:382] conv1 -> conv1
I0428 20:08:24.761137 31373 net.cpp:124] Setting up conv1
I0428 20:08:24.761152 31373 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:24.761173 31373 net.cpp:139] Memory required for data: 7770800
I0428 20:08:24.761196 31373 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:24.761204 31373 net.cpp:86] Creating Layer pool1
I0428 20:08:24.761209 31373 net.cpp:408] pool1 <- conv1
I0428 20:08:24.761214 31373 net.cpp:382] pool1 -> pool1
I0428 20:08:24.761272 31373 net.cpp:124] Setting up pool1
I0428 20:08:24.761279 31373 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:24.761282 31373 net.cpp:139] Memory required for data: 7834800
I0428 20:08:24.761286 31373 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:24.761292 31373 net.cpp:86] Creating Layer ip1
I0428 20:08:24.761296 31373 net.cpp:408] ip1 <- pool1
I0428 20:08:24.761301 31373 net.cpp:382] ip1 -> ip1
I0428 20:08:24.761492 31373 net.cpp:124] Setting up ip1
I0428 20:08:24.761502 31373 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:24.761518 31373 net.cpp:139] Memory required for data: 7844800
I0428 20:08:24.761526 31373 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:24.761533 31373 net.cpp:86] Creating Layer relu1
I0428 20:08:24.761544 31373 net.cpp:408] relu1 <- ip1
I0428 20:08:24.761549 31373 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:24.761731 31373 net.cpp:124] Setting up relu1
I0428 20:08:24.761741 31373 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:24.761745 31373 net.cpp:139] Memory required for data: 7854800
I0428 20:08:24.761749 31373 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:24.761756 31373 net.cpp:86] Creating Layer ip2
I0428 20:08:24.761760 31373 net.cpp:408] ip2 <- ip1
I0428 20:08:24.761765 31373 net.cpp:382] ip2 -> ip2
I0428 20:08:24.761893 31373 net.cpp:124] Setting up ip2
I0428 20:08:24.761900 31373 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:24.761904 31373 net.cpp:139] Memory required for data: 7874800
I0428 20:08:24.761909 31373 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:24.761914 31373 net.cpp:86] Creating Layer relu2
I0428 20:08:24.761917 31373 net.cpp:408] relu2 <- ip2
I0428 20:08:24.761921 31373 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:24.762082 31373 net.cpp:124] Setting up relu2
I0428 20:08:24.762090 31373 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:24.762094 31373 net.cpp:139] Memory required for data: 7894800
I0428 20:08:24.762097 31373 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:24.762104 31373 net.cpp:86] Creating Layer ip3
I0428 20:08:24.762106 31373 net.cpp:408] ip3 <- ip2
I0428 20:08:24.762110 31373 net.cpp:382] ip3 -> ip3
I0428 20:08:24.762212 31373 net.cpp:124] Setting up ip3
I0428 20:08:24.762235 31373 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:24.762239 31373 net.cpp:139] Memory required for data: 7898800
I0428 20:08:24.762248 31373 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:24.762254 31373 net.cpp:86] Creating Layer relu3
I0428 20:08:24.762257 31373 net.cpp:408] relu3 <- ip3
I0428 20:08:24.762261 31373 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:24.763069 31373 net.cpp:124] Setting up relu3
I0428 20:08:24.763093 31373 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:24.763098 31373 net.cpp:139] Memory required for data: 7902800
I0428 20:08:24.763111 31373 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:24.763118 31373 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:24.763120 31373 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:24.763126 31373 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:24.763133 31373 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:24.763203 31373 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:24.763211 31373 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:24.763216 31373 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:24.763218 31373 net.cpp:139] Memory required for data: 7910800
I0428 20:08:24.763221 31373 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:24.763226 31373 net.cpp:86] Creating Layer accuracy
I0428 20:08:24.763231 31373 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:24.763234 31373 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:24.763240 31373 net.cpp:382] accuracy -> accuracy
I0428 20:08:24.763248 31373 net.cpp:124] Setting up accuracy
I0428 20:08:24.763252 31373 net.cpp:131] Top shape: (1)
I0428 20:08:24.763255 31373 net.cpp:139] Memory required for data: 7910804
I0428 20:08:24.763258 31373 layer_factory.hpp:77] Creating layer loss
I0428 20:08:24.763263 31373 net.cpp:86] Creating Layer loss
I0428 20:08:24.763267 31373 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:24.763272 31373 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:24.763275 31373 net.cpp:382] loss -> loss
I0428 20:08:24.763281 31373 layer_factory.hpp:77] Creating layer loss
I0428 20:08:24.763541 31373 net.cpp:124] Setting up loss
I0428 20:08:24.763551 31373 net.cpp:131] Top shape: (1)
I0428 20:08:24.763556 31373 net.cpp:134]     with loss weight 1
I0428 20:08:24.763573 31373 net.cpp:139] Memory required for data: 7910808
I0428 20:08:24.763578 31373 net.cpp:200] loss needs backward computation.
I0428 20:08:24.763583 31373 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:24.763587 31373 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:24.763591 31373 net.cpp:200] relu3 needs backward computation.
I0428 20:08:24.763593 31373 net.cpp:200] ip3 needs backward computation.
I0428 20:08:24.763597 31373 net.cpp:200] relu2 needs backward computation.
I0428 20:08:24.763600 31373 net.cpp:200] ip2 needs backward computation.
I0428 20:08:24.763603 31373 net.cpp:200] relu1 needs backward computation.
I0428 20:08:24.763617 31373 net.cpp:200] ip1 needs backward computation.
I0428 20:08:24.763625 31373 net.cpp:200] pool1 needs backward computation.
I0428 20:08:24.763629 31373 net.cpp:200] conv1 needs backward computation.
I0428 20:08:24.763633 31373 net.cpp:200] pool0 needs backward computation.
I0428 20:08:24.763636 31373 net.cpp:200] conv0 needs backward computation.
I0428 20:08:24.763640 31373 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:24.763644 31373 net.cpp:202] mnist does not need backward computation.
I0428 20:08:24.763648 31373 net.cpp:244] This network produces output accuracy
I0428 20:08:24.763650 31373 net.cpp:244] This network produces output loss
I0428 20:08:24.763664 31373 net.cpp:257] Network initialization done.
I0428 20:08:24.763727 31373 solver.cpp:56] Solver scaffolding done.
I0428 20:08:24.764096 31373 caffe.cpp:248] Starting Optimization
I0428 20:08:24.764101 31373 solver.cpp:273] Solving LeNet
I0428 20:08:24.764104 31373 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:24.765038 31373 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:24.769628 31373 blocking_queue.cpp:49] Waiting for data
I0428 20:08:24.841581 31380 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:24.842200 31373 solver.cpp:398]     Test net output #0: accuracy = 0.1072
I0428 20:08:24.842237 31373 solver.cpp:398]     Test net output #1: loss = 2.31093 (* 1 = 2.31093 loss)
I0428 20:08:24.846015 31373 solver.cpp:219] Iteration 0 (0 iter/s, 0.0818678s/100 iters), loss = 2.31652
I0428 20:08:24.846053 31373 solver.cpp:238]     Train net output #0: loss = 2.31652 (* 1 = 2.31652 loss)
I0428 20:08:24.846065 31373 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:24.942860 31373 solver.cpp:219] Iteration 100 (1032.99 iter/s, 0.0968059s/100 iters), loss = 0.704029
I0428 20:08:24.942903 31373 solver.cpp:238]     Train net output #0: loss = 0.704029 (* 1 = 0.704029 loss)
I0428 20:08:24.942909 31373 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:25.035382 31373 solver.cpp:219] Iteration 200 (1081.43 iter/s, 0.0924703s/100 iters), loss = 0.394335
I0428 20:08:25.035419 31373 solver.cpp:238]     Train net output #0: loss = 0.394335 (* 1 = 0.394335 loss)
I0428 20:08:25.035425 31373 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:25.126076 31373 solver.cpp:219] Iteration 300 (1102.99 iter/s, 0.0906628s/100 iters), loss = 0.478471
I0428 20:08:25.126116 31373 solver.cpp:238]     Train net output #0: loss = 0.478471 (* 1 = 0.478471 loss)
I0428 20:08:25.126122 31373 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:25.216882 31373 solver.cpp:219] Iteration 400 (1101.67 iter/s, 0.0907715s/100 iters), loss = 0.563598
I0428 20:08:25.216922 31373 solver.cpp:238]     Train net output #0: loss = 0.563598 (* 1 = 0.563598 loss)
I0428 20:08:25.216928 31373 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:25.306658 31373 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:25.361708 31380 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:25.362298 31373 solver.cpp:398]     Test net output #0: accuracy = 0.927
I0428 20:08:25.362331 31373 solver.cpp:398]     Test net output #1: loss = 0.368748 (* 1 = 0.368748 loss)
I0428 20:08:25.363426 31373 solver.cpp:219] Iteration 500 (682.558 iter/s, 0.146508s/100 iters), loss = 0.317553
I0428 20:08:25.363478 31373 solver.cpp:238]     Train net output #0: loss = 0.317553 (* 1 = 0.317553 loss)
I0428 20:08:25.363487 31373 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:25.461865 31373 solver.cpp:219] Iteration 600 (1016.33 iter/s, 0.0983929s/100 iters), loss = 0.262183
I0428 20:08:25.461904 31373 solver.cpp:238]     Train net output #0: loss = 0.262183 (* 1 = 0.262183 loss)
I0428 20:08:25.461910 31373 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:25.553923 31373 solver.cpp:219] Iteration 700 (1086.66 iter/s, 0.0920248s/100 iters), loss = 0.374266
I0428 20:08:25.553979 31373 solver.cpp:238]     Train net output #0: loss = 0.374266 (* 1 = 0.374266 loss)
I0428 20:08:25.553987 31373 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:25.643589 31373 solver.cpp:219] Iteration 800 (1115.88 iter/s, 0.0896154s/100 iters), loss = 0.46901
I0428 20:08:25.643627 31373 solver.cpp:238]     Train net output #0: loss = 0.46901 (* 1 = 0.46901 loss)
I0428 20:08:25.643633 31373 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:25.733158 31373 solver.cpp:219] Iteration 900 (1116.86 iter/s, 0.0895365s/100 iters), loss = 0.323442
I0428 20:08:25.733214 31373 solver.cpp:238]     Train net output #0: loss = 0.323442 (* 1 = 0.323442 loss)
I0428 20:08:25.733220 31373 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:25.763386 31379 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:25.822468 31373 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:25.823360 31373 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:25.823971 31373 solver.cpp:311] Iteration 1000, loss = 0.538706
I0428 20:08:25.824004 31373 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:25.895694 31380 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:25.896271 31373 solver.cpp:398]     Test net output #0: accuracy = 0.9635
I0428 20:08:25.896307 31373 solver.cpp:398]     Test net output #1: loss = 0.324516 (* 1 = 0.324516 loss)
I0428 20:08:25.896312 31373 solver.cpp:316] Optimization Done.
I0428 20:08:25.896316 31373 caffe.cpp:259] Optimization Done.
