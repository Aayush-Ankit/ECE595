I0428 19:56:02.465021 28334 caffe.cpp:218] Using GPUs 0
I0428 19:56:02.494604 28334 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:02.942598 28334 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test747.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:02.942728 28334 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test747.prototxt
I0428 19:56:02.943177 28334 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:02.943213 28334 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:02.943321 28334 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:02.943408 28334 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:02.943545 28334 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:02.943577 28334 net.cpp:86] Creating Layer mnist
I0428 19:56:02.943588 28334 net.cpp:382] mnist -> data
I0428 19:56:02.943629 28334 net.cpp:382] mnist -> label
I0428 19:56:02.945024 28334 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:02.947357 28334 net.cpp:124] Setting up mnist
I0428 19:56:02.947372 28334 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:02.947377 28334 net.cpp:131] Top shape: 64 (64)
I0428 19:56:02.947381 28334 net.cpp:139] Memory required for data: 200960
I0428 19:56:02.947388 28334 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:02.947407 28334 net.cpp:86] Creating Layer conv0
I0428 19:56:02.947414 28334 net.cpp:408] conv0 <- data
I0428 19:56:02.947428 28334 net.cpp:382] conv0 -> conv0
I0428 19:56:03.178536 28334 net.cpp:124] Setting up conv0
I0428 19:56:03.178561 28334 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:03.178565 28334 net.cpp:139] Memory required for data: 1675520
I0428 19:56:03.178596 28334 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:03.178613 28334 net.cpp:86] Creating Layer pool0
I0428 19:56:03.178618 28334 net.cpp:408] pool0 <- conv0
I0428 19:56:03.178627 28334 net.cpp:382] pool0 -> pool0
I0428 19:56:03.178688 28334 net.cpp:124] Setting up pool0
I0428 19:56:03.178699 28334 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:03.178702 28334 net.cpp:139] Memory required for data: 2044160
I0428 19:56:03.178707 28334 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:03.178721 28334 net.cpp:86] Creating Layer conv1
I0428 19:56:03.178728 28334 net.cpp:408] conv1 <- pool0
I0428 19:56:03.178735 28334 net.cpp:382] conv1 -> conv1
I0428 19:56:03.180991 28334 net.cpp:124] Setting up conv1
I0428 19:56:03.181021 28334 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:03.181025 28334 net.cpp:139] Memory required for data: 2076928
I0428 19:56:03.181035 28334 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:03.181042 28334 net.cpp:86] Creating Layer pool1
I0428 19:56:03.181048 28334 net.cpp:408] pool1 <- conv1
I0428 19:56:03.181056 28334 net.cpp:382] pool1 -> pool1
I0428 19:56:03.181107 28334 net.cpp:124] Setting up pool1
I0428 19:56:03.181118 28334 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:03.181123 28334 net.cpp:139] Memory required for data: 2085120
I0428 19:56:03.181143 28334 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:03.181155 28334 net.cpp:86] Creating Layer ip1
I0428 19:56:03.181162 28334 net.cpp:408] ip1 <- pool1
I0428 19:56:03.181171 28334 net.cpp:382] ip1 -> ip1
I0428 19:56:03.181313 28334 net.cpp:124] Setting up ip1
I0428 19:56:03.181324 28334 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:03.181331 28334 net.cpp:139] Memory required for data: 2091520
I0428 19:56:03.181342 28334 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:03.181352 28334 net.cpp:86] Creating Layer relu1
I0428 19:56:03.181360 28334 net.cpp:408] relu1 <- ip1
I0428 19:56:03.181365 28334 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:03.181596 28334 net.cpp:124] Setting up relu1
I0428 19:56:03.181608 28334 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:03.181614 28334 net.cpp:139] Memory required for data: 2097920
I0428 19:56:03.181620 28334 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:03.181629 28334 net.cpp:86] Creating Layer ip2
I0428 19:56:03.181635 28334 net.cpp:408] ip2 <- ip1
I0428 19:56:03.181643 28334 net.cpp:382] ip2 -> ip2
I0428 19:56:03.181779 28334 net.cpp:124] Setting up ip2
I0428 19:56:03.181792 28334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:03.181799 28334 net.cpp:139] Memory required for data: 2100480
I0428 19:56:03.181824 28334 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:03.181835 28334 net.cpp:86] Creating Layer relu2
I0428 19:56:03.181843 28334 net.cpp:408] relu2 <- ip2
I0428 19:56:03.181849 28334 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:03.182871 28334 net.cpp:124] Setting up relu2
I0428 19:56:03.182888 28334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:03.182909 28334 net.cpp:139] Memory required for data: 2103040
I0428 19:56:03.182914 28334 layer_factory.hpp:77] Creating layer loss
I0428 19:56:03.182924 28334 net.cpp:86] Creating Layer loss
I0428 19:56:03.182929 28334 net.cpp:408] loss <- ip2
I0428 19:56:03.182936 28334 net.cpp:408] loss <- label
I0428 19:56:03.182946 28334 net.cpp:382] loss -> loss
I0428 19:56:03.182986 28334 layer_factory.hpp:77] Creating layer loss
I0428 19:56:03.183357 28334 net.cpp:124] Setting up loss
I0428 19:56:03.183369 28334 net.cpp:131] Top shape: (1)
I0428 19:56:03.183377 28334 net.cpp:134]     with loss weight 1
I0428 19:56:03.183395 28334 net.cpp:139] Memory required for data: 2103044
I0428 19:56:03.183400 28334 net.cpp:200] loss needs backward computation.
I0428 19:56:03.183406 28334 net.cpp:200] relu2 needs backward computation.
I0428 19:56:03.183413 28334 net.cpp:200] ip2 needs backward computation.
I0428 19:56:03.183418 28334 net.cpp:200] relu1 needs backward computation.
I0428 19:56:03.183423 28334 net.cpp:200] ip1 needs backward computation.
I0428 19:56:03.183441 28334 net.cpp:200] pool1 needs backward computation.
I0428 19:56:03.183446 28334 net.cpp:200] conv1 needs backward computation.
I0428 19:56:03.183452 28334 net.cpp:200] pool0 needs backward computation.
I0428 19:56:03.183457 28334 net.cpp:200] conv0 needs backward computation.
I0428 19:56:03.183464 28334 net.cpp:202] mnist does not need backward computation.
I0428 19:56:03.183468 28334 net.cpp:244] This network produces output loss
I0428 19:56:03.183481 28334 net.cpp:257] Network initialization done.
I0428 19:56:03.183920 28334 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test747.prototxt
I0428 19:56:03.183957 28334 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:03.184135 28334 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:03.184233 28334 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:03.184293 28334 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:03.184324 28334 net.cpp:86] Creating Layer mnist
I0428 19:56:03.184331 28334 net.cpp:382] mnist -> data
I0428 19:56:03.184357 28334 net.cpp:382] mnist -> label
I0428 19:56:03.184463 28334 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:03.187233 28334 net.cpp:124] Setting up mnist
I0428 19:56:03.187261 28334 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:03.187268 28334 net.cpp:131] Top shape: 100 (100)
I0428 19:56:03.187273 28334 net.cpp:139] Memory required for data: 314000
I0428 19:56:03.187278 28334 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:03.187286 28334 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:03.187292 28334 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:03.187299 28334 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:03.187309 28334 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:03.187402 28334 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:03.187425 28334 net.cpp:131] Top shape: 100 (100)
I0428 19:56:03.187433 28334 net.cpp:131] Top shape: 100 (100)
I0428 19:56:03.187438 28334 net.cpp:139] Memory required for data: 314800
I0428 19:56:03.187443 28334 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:03.187454 28334 net.cpp:86] Creating Layer conv0
I0428 19:56:03.187461 28334 net.cpp:408] conv0 <- data
I0428 19:56:03.187469 28334 net.cpp:382] conv0 -> conv0
I0428 19:56:03.189489 28334 net.cpp:124] Setting up conv0
I0428 19:56:03.189505 28334 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:03.189517 28334 net.cpp:139] Memory required for data: 2618800
I0428 19:56:03.189540 28334 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:03.189551 28334 net.cpp:86] Creating Layer pool0
I0428 19:56:03.189558 28334 net.cpp:408] pool0 <- conv0
I0428 19:56:03.189566 28334 net.cpp:382] pool0 -> pool0
I0428 19:56:03.189615 28334 net.cpp:124] Setting up pool0
I0428 19:56:03.189627 28334 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:03.189642 28334 net.cpp:139] Memory required for data: 3194800
I0428 19:56:03.189647 28334 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:03.189663 28334 net.cpp:86] Creating Layer conv1
I0428 19:56:03.189671 28334 net.cpp:408] conv1 <- pool0
I0428 19:56:03.189679 28334 net.cpp:382] conv1 -> conv1
I0428 19:56:03.192231 28334 net.cpp:124] Setting up conv1
I0428 19:56:03.192243 28334 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:03.192247 28334 net.cpp:139] Memory required for data: 3246000
I0428 19:56:03.192260 28334 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:03.192275 28334 net.cpp:86] Creating Layer pool1
I0428 19:56:03.192284 28334 net.cpp:408] pool1 <- conv1
I0428 19:56:03.192293 28334 net.cpp:382] pool1 -> pool1
I0428 19:56:03.192349 28334 net.cpp:124] Setting up pool1
I0428 19:56:03.192361 28334 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:03.192366 28334 net.cpp:139] Memory required for data: 3258800
I0428 19:56:03.192373 28334 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:03.192383 28334 net.cpp:86] Creating Layer ip1
I0428 19:56:03.192387 28334 net.cpp:408] ip1 <- pool1
I0428 19:56:03.192399 28334 net.cpp:382] ip1 -> ip1
I0428 19:56:03.192545 28334 net.cpp:124] Setting up ip1
I0428 19:56:03.192556 28334 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:03.192562 28334 net.cpp:139] Memory required for data: 3268800
I0428 19:56:03.192589 28334 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:03.192597 28334 net.cpp:86] Creating Layer relu1
I0428 19:56:03.192603 28334 net.cpp:408] relu1 <- ip1
I0428 19:56:03.192622 28334 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:03.192960 28334 net.cpp:124] Setting up relu1
I0428 19:56:03.192973 28334 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:03.192978 28334 net.cpp:139] Memory required for data: 3278800
I0428 19:56:03.192983 28334 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:03.193006 28334 net.cpp:86] Creating Layer ip2
I0428 19:56:03.193014 28334 net.cpp:408] ip2 <- ip1
I0428 19:56:03.193025 28334 net.cpp:382] ip2 -> ip2
I0428 19:56:03.193205 28334 net.cpp:124] Setting up ip2
I0428 19:56:03.193218 28334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:03.193224 28334 net.cpp:139] Memory required for data: 3282800
I0428 19:56:03.193233 28334 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:03.193241 28334 net.cpp:86] Creating Layer relu2
I0428 19:56:03.193246 28334 net.cpp:408] relu2 <- ip2
I0428 19:56:03.193253 28334 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:03.193529 28334 net.cpp:124] Setting up relu2
I0428 19:56:03.193542 28334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:03.193552 28334 net.cpp:139] Memory required for data: 3286800
I0428 19:56:03.193557 28334 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:56:03.193563 28334 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:56:03.193570 28334 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:56:03.193577 28334 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:56:03.193598 28334 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:56:03.193645 28334 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:56:03.193655 28334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:03.193661 28334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:03.193667 28334 net.cpp:139] Memory required for data: 3294800
I0428 19:56:03.193671 28334 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:03.193680 28334 net.cpp:86] Creating Layer accuracy
I0428 19:56:03.193686 28334 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:56:03.193691 28334 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:03.193699 28334 net.cpp:382] accuracy -> accuracy
I0428 19:56:03.193711 28334 net.cpp:124] Setting up accuracy
I0428 19:56:03.193718 28334 net.cpp:131] Top shape: (1)
I0428 19:56:03.193722 28334 net.cpp:139] Memory required for data: 3294804
I0428 19:56:03.193727 28334 layer_factory.hpp:77] Creating layer loss
I0428 19:56:03.193734 28334 net.cpp:86] Creating Layer loss
I0428 19:56:03.193740 28334 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:56:03.193747 28334 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:03.193754 28334 net.cpp:382] loss -> loss
I0428 19:56:03.193764 28334 layer_factory.hpp:77] Creating layer loss
I0428 19:56:03.194089 28334 net.cpp:124] Setting up loss
I0428 19:56:03.194102 28334 net.cpp:131] Top shape: (1)
I0428 19:56:03.194108 28334 net.cpp:134]     with loss weight 1
I0428 19:56:03.194118 28334 net.cpp:139] Memory required for data: 3294808
I0428 19:56:03.194123 28334 net.cpp:200] loss needs backward computation.
I0428 19:56:03.194129 28334 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:03.194136 28334 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:56:03.194141 28334 net.cpp:200] relu2 needs backward computation.
I0428 19:56:03.194164 28334 net.cpp:200] ip2 needs backward computation.
I0428 19:56:03.194169 28334 net.cpp:200] relu1 needs backward computation.
I0428 19:56:03.194175 28334 net.cpp:200] ip1 needs backward computation.
I0428 19:56:03.194180 28334 net.cpp:200] pool1 needs backward computation.
I0428 19:56:03.194186 28334 net.cpp:200] conv1 needs backward computation.
I0428 19:56:03.194192 28334 net.cpp:200] pool0 needs backward computation.
I0428 19:56:03.194197 28334 net.cpp:200] conv0 needs backward computation.
I0428 19:56:03.194205 28334 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:03.194211 28334 net.cpp:202] mnist does not need backward computation.
I0428 19:56:03.194217 28334 net.cpp:244] This network produces output accuracy
I0428 19:56:03.194223 28334 net.cpp:244] This network produces output loss
I0428 19:56:03.194241 28334 net.cpp:257] Network initialization done.
I0428 19:56:03.194294 28334 solver.cpp:56] Solver scaffolding done.
I0428 19:56:03.194682 28334 caffe.cpp:248] Starting Optimization
I0428 19:56:03.194691 28334 solver.cpp:273] Solving LeNet
I0428 19:56:03.194695 28334 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:03.195767 28334 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:03.200693 28334 blocking_queue.cpp:49] Waiting for data
I0428 19:56:03.241554 28341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:03.242175 28334 solver.cpp:398]     Test net output #0: accuracy = 0.0796
I0428 19:56:03.242198 28334 solver.cpp:398]     Test net output #1: loss = 2.32435 (* 1 = 2.32435 loss)
I0428 19:56:03.244699 28334 solver.cpp:219] Iteration 0 (-1.62691e-42 iter/s, 0.0499732s/100 iters), loss = 2.32493
I0428 19:56:03.244722 28334 solver.cpp:238]     Train net output #0: loss = 2.32493 (* 1 = 2.32493 loss)
I0428 19:56:03.244740 28334 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:03.324820 28334 solver.cpp:219] Iteration 100 (1248.77 iter/s, 0.0800788s/100 iters), loss = 1.55904
I0428 19:56:03.324847 28334 solver.cpp:238]     Train net output #0: loss = 1.55904 (* 1 = 1.55904 loss)
I0428 19:56:03.324858 28334 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:03.392701 28334 solver.cpp:219] Iteration 200 (1473.95 iter/s, 0.0678451s/100 iters), loss = 1.16978
I0428 19:56:03.392760 28334 solver.cpp:238]     Train net output #0: loss = 1.16978 (* 1 = 1.16978 loss)
I0428 19:56:03.392771 28334 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:03.460069 28334 solver.cpp:219] Iteration 300 (1485.49 iter/s, 0.0673178s/100 iters), loss = 1.30205
I0428 19:56:03.460094 28334 solver.cpp:238]     Train net output #0: loss = 1.30205 (* 1 = 1.30205 loss)
I0428 19:56:03.460105 28334 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:03.537178 28334 solver.cpp:219] Iteration 400 (1297.43 iter/s, 0.0770755s/100 iters), loss = 1.34261
I0428 19:56:03.537205 28334 solver.cpp:238]     Train net output #0: loss = 1.34261 (* 1 = 1.34261 loss)
I0428 19:56:03.537216 28334 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:03.604243 28334 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:03.649454 28341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:03.650090 28334 solver.cpp:398]     Test net output #0: accuracy = 0.5572
I0428 19:56:03.650115 28334 solver.cpp:398]     Test net output #1: loss = 1.14652 (* 1 = 1.14652 loss)
I0428 19:56:03.651015 28334 solver.cpp:219] Iteration 500 (878.741 iter/s, 0.113799s/100 iters), loss = 1.09398
I0428 19:56:03.651046 28334 solver.cpp:238]     Train net output #0: loss = 1.09398 (* 1 = 1.09398 loss)
I0428 19:56:03.651057 28334 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:03.730077 28334 solver.cpp:219] Iteration 600 (1265.47 iter/s, 0.0790223s/100 iters), loss = 1.01042
I0428 19:56:03.730103 28334 solver.cpp:238]     Train net output #0: loss = 1.01042 (* 1 = 1.01042 loss)
I0428 19:56:03.730114 28334 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:03.797071 28334 solver.cpp:219] Iteration 700 (1493.4 iter/s, 0.0669614s/100 iters), loss = 1.19825
I0428 19:56:03.797096 28334 solver.cpp:238]     Train net output #0: loss = 1.19825 (* 1 = 1.19825 loss)
I0428 19:56:03.797107 28334 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:03.864608 28334 solver.cpp:219] Iteration 800 (1481.41 iter/s, 0.0675031s/100 iters), loss = 1.08738
I0428 19:56:03.864632 28334 solver.cpp:238]     Train net output #0: loss = 1.08738 (* 1 = 1.08738 loss)
I0428 19:56:03.864644 28334 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:03.932624 28334 solver.cpp:219] Iteration 900 (1470.95 iter/s, 0.0679834s/100 iters), loss = 0.978744
I0428 19:56:03.932651 28334 solver.cpp:238]     Train net output #0: loss = 0.978744 (* 1 = 0.978744 loss)
I0428 19:56:03.932662 28334 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:03.955682 28340 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:03.999496 28334 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:04.000236 28334 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:04.000799 28334 solver.cpp:311] Iteration 1000, loss = 1.12392
I0428 19:56:04.000825 28334 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:04.046111 28341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:04.046820 28334 solver.cpp:398]     Test net output #0: accuracy = 0.5719
I0428 19:56:04.046861 28334 solver.cpp:398]     Test net output #1: loss = 1.08286 (* 1 = 1.08286 loss)
I0428 19:56:04.046869 28334 solver.cpp:316] Optimization Done.
I0428 19:56:04.046875 28334 caffe.cpp:259] Optimization Done.
