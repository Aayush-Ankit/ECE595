I0428 20:00:39.508855 29527 caffe.cpp:218] Using GPUs 0
I0428 20:00:39.550487 29527 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:40.065475 29527 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test882.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:40.065614 29527 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test882.prototxt
I0428 20:00:40.066016 29527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:40.066033 29527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:40.066129 29527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:40.066203 29527 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:40.066303 29527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:40.066329 29527 net.cpp:86] Creating Layer mnist
I0428 20:00:40.066337 29527 net.cpp:382] mnist -> data
I0428 20:00:40.066360 29527 net.cpp:382] mnist -> label
I0428 20:00:40.067466 29527 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:40.069923 29527 net.cpp:124] Setting up mnist
I0428 20:00:40.069941 29527 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:40.069947 29527 net.cpp:131] Top shape: 64 (64)
I0428 20:00:40.069952 29527 net.cpp:139] Memory required for data: 200960
I0428 20:00:40.069959 29527 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:40.069975 29527 net.cpp:86] Creating Layer conv0
I0428 20:00:40.069995 29527 net.cpp:408] conv0 <- data
I0428 20:00:40.070008 29527 net.cpp:382] conv0 -> conv0
I0428 20:00:40.360988 29527 net.cpp:124] Setting up conv0
I0428 20:00:40.361021 29527 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:40.361026 29527 net.cpp:139] Memory required for data: 1675520
I0428 20:00:40.361043 29527 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:40.361058 29527 net.cpp:86] Creating Layer pool0
I0428 20:00:40.361063 29527 net.cpp:408] pool0 <- conv0
I0428 20:00:40.361070 29527 net.cpp:382] pool0 -> pool0
I0428 20:00:40.361130 29527 net.cpp:124] Setting up pool0
I0428 20:00:40.361138 29527 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:40.361142 29527 net.cpp:139] Memory required for data: 2044160
I0428 20:00:40.361146 29527 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:40.361160 29527 net.cpp:86] Creating Layer conv1
I0428 20:00:40.361166 29527 net.cpp:408] conv1 <- pool0
I0428 20:00:40.361172 29527 net.cpp:382] conv1 -> conv1
I0428 20:00:40.364264 29527 net.cpp:124] Setting up conv1
I0428 20:00:40.364281 29527 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:40.364286 29527 net.cpp:139] Memory required for data: 2453760
I0428 20:00:40.364295 29527 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:40.364305 29527 net.cpp:86] Creating Layer pool1
I0428 20:00:40.364308 29527 net.cpp:408] pool1 <- conv1
I0428 20:00:40.364315 29527 net.cpp:382] pool1 -> pool1
I0428 20:00:40.364359 29527 net.cpp:124] Setting up pool1
I0428 20:00:40.364367 29527 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:40.364372 29527 net.cpp:139] Memory required for data: 2556160
I0428 20:00:40.364374 29527 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:40.364382 29527 net.cpp:86] Creating Layer ip1
I0428 20:00:40.364387 29527 net.cpp:408] ip1 <- pool1
I0428 20:00:40.364392 29527 net.cpp:382] ip1 -> ip1
I0428 20:00:40.364565 29527 net.cpp:124] Setting up ip1
I0428 20:00:40.364573 29527 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:40.364576 29527 net.cpp:139] Memory required for data: 2562560
I0428 20:00:40.364585 29527 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:40.364593 29527 net.cpp:86] Creating Layer relu1
I0428 20:00:40.364598 29527 net.cpp:408] relu1 <- ip1
I0428 20:00:40.364603 29527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:40.364792 29527 net.cpp:124] Setting up relu1
I0428 20:00:40.364802 29527 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:40.364806 29527 net.cpp:139] Memory required for data: 2568960
I0428 20:00:40.364816 29527 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:40.364823 29527 net.cpp:86] Creating Layer ip2
I0428 20:00:40.364827 29527 net.cpp:408] ip2 <- ip1
I0428 20:00:40.364833 29527 net.cpp:382] ip2 -> ip2
I0428 20:00:40.364948 29527 net.cpp:124] Setting up ip2
I0428 20:00:40.364955 29527 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:40.364959 29527 net.cpp:139] Memory required for data: 2575360
I0428 20:00:40.364965 29527 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:40.364974 29527 net.cpp:86] Creating Layer relu2
I0428 20:00:40.364979 29527 net.cpp:408] relu2 <- ip2
I0428 20:00:40.364984 29527 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:40.365795 29527 net.cpp:124] Setting up relu2
I0428 20:00:40.365809 29527 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:40.365813 29527 net.cpp:139] Memory required for data: 2581760
I0428 20:00:40.365818 29527 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:40.365826 29527 net.cpp:86] Creating Layer ip3
I0428 20:00:40.365830 29527 net.cpp:408] ip3 <- ip2
I0428 20:00:40.365836 29527 net.cpp:382] ip3 -> ip3
I0428 20:00:40.365953 29527 net.cpp:124] Setting up ip3
I0428 20:00:40.365962 29527 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:40.365967 29527 net.cpp:139] Memory required for data: 2584320
I0428 20:00:40.365975 29527 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:40.365983 29527 net.cpp:86] Creating Layer relu3
I0428 20:00:40.365986 29527 net.cpp:408] relu3 <- ip3
I0428 20:00:40.365991 29527 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:40.366180 29527 net.cpp:124] Setting up relu3
I0428 20:00:40.366190 29527 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:40.366194 29527 net.cpp:139] Memory required for data: 2586880
I0428 20:00:40.366199 29527 layer_factory.hpp:77] Creating layer loss
I0428 20:00:40.366204 29527 net.cpp:86] Creating Layer loss
I0428 20:00:40.366209 29527 net.cpp:408] loss <- ip3
I0428 20:00:40.366214 29527 net.cpp:408] loss <- label
I0428 20:00:40.366219 29527 net.cpp:382] loss -> loss
I0428 20:00:40.366240 29527 layer_factory.hpp:77] Creating layer loss
I0428 20:00:40.366504 29527 net.cpp:124] Setting up loss
I0428 20:00:40.366514 29527 net.cpp:131] Top shape: (1)
I0428 20:00:40.366518 29527 net.cpp:134]     with loss weight 1
I0428 20:00:40.366534 29527 net.cpp:139] Memory required for data: 2586884
I0428 20:00:40.366539 29527 net.cpp:200] loss needs backward computation.
I0428 20:00:40.366542 29527 net.cpp:200] relu3 needs backward computation.
I0428 20:00:40.366546 29527 net.cpp:200] ip3 needs backward computation.
I0428 20:00:40.366549 29527 net.cpp:200] relu2 needs backward computation.
I0428 20:00:40.366552 29527 net.cpp:200] ip2 needs backward computation.
I0428 20:00:40.366556 29527 net.cpp:200] relu1 needs backward computation.
I0428 20:00:40.366559 29527 net.cpp:200] ip1 needs backward computation.
I0428 20:00:40.366564 29527 net.cpp:200] pool1 needs backward computation.
I0428 20:00:40.366566 29527 net.cpp:200] conv1 needs backward computation.
I0428 20:00:40.366570 29527 net.cpp:200] pool0 needs backward computation.
I0428 20:00:40.366574 29527 net.cpp:200] conv0 needs backward computation.
I0428 20:00:40.366577 29527 net.cpp:202] mnist does not need backward computation.
I0428 20:00:40.366580 29527 net.cpp:244] This network produces output loss
I0428 20:00:40.366591 29527 net.cpp:257] Network initialization done.
I0428 20:00:40.366956 29527 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test882.prototxt
I0428 20:00:40.366988 29527 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:40.367089 29527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:40.367187 29527 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:40.367236 29527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:40.367250 29527 net.cpp:86] Creating Layer mnist
I0428 20:00:40.367257 29527 net.cpp:382] mnist -> data
I0428 20:00:40.367265 29527 net.cpp:382] mnist -> label
I0428 20:00:40.367368 29527 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:40.369706 29527 net.cpp:124] Setting up mnist
I0428 20:00:40.369721 29527 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:40.369727 29527 net.cpp:131] Top shape: 100 (100)
I0428 20:00:40.369730 29527 net.cpp:139] Memory required for data: 314000
I0428 20:00:40.369735 29527 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:40.369746 29527 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:40.369750 29527 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:40.369787 29527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:40.369796 29527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:40.369848 29527 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:40.369853 29527 net.cpp:131] Top shape: 100 (100)
I0428 20:00:40.369858 29527 net.cpp:131] Top shape: 100 (100)
I0428 20:00:40.369861 29527 net.cpp:139] Memory required for data: 314800
I0428 20:00:40.369864 29527 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:40.369875 29527 net.cpp:86] Creating Layer conv0
I0428 20:00:40.369879 29527 net.cpp:408] conv0 <- data
I0428 20:00:40.369886 29527 net.cpp:382] conv0 -> conv0
I0428 20:00:40.371807 29527 net.cpp:124] Setting up conv0
I0428 20:00:40.371824 29527 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:40.371827 29527 net.cpp:139] Memory required for data: 2618800
I0428 20:00:40.371839 29527 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:40.371845 29527 net.cpp:86] Creating Layer pool0
I0428 20:00:40.371850 29527 net.cpp:408] pool0 <- conv0
I0428 20:00:40.371858 29527 net.cpp:382] pool0 -> pool0
I0428 20:00:40.371901 29527 net.cpp:124] Setting up pool0
I0428 20:00:40.371907 29527 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:40.371911 29527 net.cpp:139] Memory required for data: 3194800
I0428 20:00:40.371914 29527 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:40.371927 29527 net.cpp:86] Creating Layer conv1
I0428 20:00:40.371929 29527 net.cpp:408] conv1 <- pool0
I0428 20:00:40.371935 29527 net.cpp:382] conv1 -> conv1
I0428 20:00:40.374251 29527 net.cpp:124] Setting up conv1
I0428 20:00:40.374267 29527 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:40.374272 29527 net.cpp:139] Memory required for data: 3834800
I0428 20:00:40.374282 29527 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:40.374290 29527 net.cpp:86] Creating Layer pool1
I0428 20:00:40.374296 29527 net.cpp:408] pool1 <- conv1
I0428 20:00:40.374311 29527 net.cpp:382] pool1 -> pool1
I0428 20:00:40.374358 29527 net.cpp:124] Setting up pool1
I0428 20:00:40.374379 29527 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:40.374383 29527 net.cpp:139] Memory required for data: 3994800
I0428 20:00:40.374387 29527 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:40.374394 29527 net.cpp:86] Creating Layer ip1
I0428 20:00:40.374399 29527 net.cpp:408] ip1 <- pool1
I0428 20:00:40.374404 29527 net.cpp:382] ip1 -> ip1
I0428 20:00:40.374608 29527 net.cpp:124] Setting up ip1
I0428 20:00:40.374615 29527 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:40.374630 29527 net.cpp:139] Memory required for data: 4004800
I0428 20:00:40.374639 29527 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:40.374644 29527 net.cpp:86] Creating Layer relu1
I0428 20:00:40.374649 29527 net.cpp:408] relu1 <- ip1
I0428 20:00:40.374655 29527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:40.374871 29527 net.cpp:124] Setting up relu1
I0428 20:00:40.374882 29527 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:40.374886 29527 net.cpp:139] Memory required for data: 4014800
I0428 20:00:40.374897 29527 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:40.374907 29527 net.cpp:86] Creating Layer ip2
I0428 20:00:40.374917 29527 net.cpp:408] ip2 <- ip1
I0428 20:00:40.374923 29527 net.cpp:382] ip2 -> ip2
I0428 20:00:40.375046 29527 net.cpp:124] Setting up ip2
I0428 20:00:40.375057 29527 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:40.375061 29527 net.cpp:139] Memory required for data: 4024800
I0428 20:00:40.375067 29527 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:40.375072 29527 net.cpp:86] Creating Layer relu2
I0428 20:00:40.375077 29527 net.cpp:408] relu2 <- ip2
I0428 20:00:40.375082 29527 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:40.375262 29527 net.cpp:124] Setting up relu2
I0428 20:00:40.375272 29527 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:40.375277 29527 net.cpp:139] Memory required for data: 4034800
I0428 20:00:40.375282 29527 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:40.375288 29527 net.cpp:86] Creating Layer ip3
I0428 20:00:40.375291 29527 net.cpp:408] ip3 <- ip2
I0428 20:00:40.375298 29527 net.cpp:382] ip3 -> ip3
I0428 20:00:40.375412 29527 net.cpp:124] Setting up ip3
I0428 20:00:40.375419 29527 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:40.375423 29527 net.cpp:139] Memory required for data: 4038800
I0428 20:00:40.375432 29527 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:40.375445 29527 net.cpp:86] Creating Layer relu3
I0428 20:00:40.375448 29527 net.cpp:408] relu3 <- ip3
I0428 20:00:40.375454 29527 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:40.376351 29527 net.cpp:124] Setting up relu3
I0428 20:00:40.376365 29527 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:40.376369 29527 net.cpp:139] Memory required for data: 4042800
I0428 20:00:40.376374 29527 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:40.376379 29527 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:40.376382 29527 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:40.376389 29527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:40.376396 29527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:40.376459 29527 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:40.376472 29527 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:40.376477 29527 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:40.376480 29527 net.cpp:139] Memory required for data: 4050800
I0428 20:00:40.376484 29527 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:40.376503 29527 net.cpp:86] Creating Layer accuracy
I0428 20:00:40.376507 29527 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:40.376512 29527 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:40.376516 29527 net.cpp:382] accuracy -> accuracy
I0428 20:00:40.376524 29527 net.cpp:124] Setting up accuracy
I0428 20:00:40.376529 29527 net.cpp:131] Top shape: (1)
I0428 20:00:40.376533 29527 net.cpp:139] Memory required for data: 4050804
I0428 20:00:40.376535 29527 layer_factory.hpp:77] Creating layer loss
I0428 20:00:40.376541 29527 net.cpp:86] Creating Layer loss
I0428 20:00:40.376545 29527 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:40.376549 29527 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:40.376554 29527 net.cpp:382] loss -> loss
I0428 20:00:40.376566 29527 layer_factory.hpp:77] Creating layer loss
I0428 20:00:40.376852 29527 net.cpp:124] Setting up loss
I0428 20:00:40.376863 29527 net.cpp:131] Top shape: (1)
I0428 20:00:40.376881 29527 net.cpp:134]     with loss weight 1
I0428 20:00:40.376899 29527 net.cpp:139] Memory required for data: 4050808
I0428 20:00:40.376904 29527 net.cpp:200] loss needs backward computation.
I0428 20:00:40.376907 29527 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:40.376911 29527 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:40.376915 29527 net.cpp:200] relu3 needs backward computation.
I0428 20:00:40.376919 29527 net.cpp:200] ip3 needs backward computation.
I0428 20:00:40.376922 29527 net.cpp:200] relu2 needs backward computation.
I0428 20:00:40.376926 29527 net.cpp:200] ip2 needs backward computation.
I0428 20:00:40.376929 29527 net.cpp:200] relu1 needs backward computation.
I0428 20:00:40.376932 29527 net.cpp:200] ip1 needs backward computation.
I0428 20:00:40.376936 29527 net.cpp:200] pool1 needs backward computation.
I0428 20:00:40.376940 29527 net.cpp:200] conv1 needs backward computation.
I0428 20:00:40.376943 29527 net.cpp:200] pool0 needs backward computation.
I0428 20:00:40.376947 29527 net.cpp:200] conv0 needs backward computation.
I0428 20:00:40.376953 29527 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:40.376957 29527 net.cpp:202] mnist does not need backward computation.
I0428 20:00:40.376960 29527 net.cpp:244] This network produces output accuracy
I0428 20:00:40.376965 29527 net.cpp:244] This network produces output loss
I0428 20:00:40.376976 29527 net.cpp:257] Network initialization done.
I0428 20:00:40.377032 29527 solver.cpp:56] Solver scaffolding done.
I0428 20:00:40.377416 29527 caffe.cpp:248] Starting Optimization
I0428 20:00:40.377424 29527 solver.cpp:273] Solving LeNet
I0428 20:00:40.377427 29527 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:40.378336 29527 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:40.382258 29527 blocking_queue.cpp:49] Waiting for data
I0428 20:00:40.453635 29534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:40.454162 29527 solver.cpp:398]     Test net output #0: accuracy = 0.1292
I0428 20:00:40.454182 29527 solver.cpp:398]     Test net output #1: loss = 2.29184 (* 1 = 2.29184 loss)
I0428 20:00:40.456944 29527 solver.cpp:219] Iteration 0 (-1.12629e-30 iter/s, 0.079489s/100 iters), loss = 2.28293
I0428 20:00:40.456969 29527 solver.cpp:238]     Train net output #0: loss = 2.28293 (* 1 = 2.28293 loss)
I0428 20:00:40.456979 29527 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:40.557112 29527 solver.cpp:219] Iteration 100 (998.683 iter/s, 0.100132s/100 iters), loss = 0.502497
I0428 20:00:40.557153 29527 solver.cpp:238]     Train net output #0: loss = 0.502497 (* 1 = 0.502497 loss)
I0428 20:00:40.557173 29527 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:40.649502 29527 solver.cpp:219] Iteration 200 (1082.78 iter/s, 0.0923546s/100 iters), loss = 0.209668
I0428 20:00:40.649528 29527 solver.cpp:238]     Train net output #0: loss = 0.209668 (* 1 = 0.209668 loss)
I0428 20:00:40.649533 29527 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:40.738276 29527 solver.cpp:219] Iteration 300 (1126.89 iter/s, 0.0887399s/100 iters), loss = 0.259556
I0428 20:00:40.738299 29527 solver.cpp:238]     Train net output #0: loss = 0.259556 (* 1 = 0.259556 loss)
I0428 20:00:40.738306 29527 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:40.828816 29527 solver.cpp:219] Iteration 400 (1104.96 iter/s, 0.0905011s/100 iters), loss = 0.110298
I0428 20:00:40.828855 29527 solver.cpp:238]     Train net output #0: loss = 0.110298 (* 1 = 0.110298 loss)
I0428 20:00:40.828861 29527 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:40.920985 29527 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:40.996068 29534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:40.996606 29527 solver.cpp:398]     Test net output #0: accuracy = 0.9562
I0428 20:00:40.996624 29527 solver.cpp:398]     Test net output #1: loss = 0.141933 (* 1 = 0.141933 loss)
I0428 20:00:40.997597 29527 solver.cpp:219] Iteration 500 (592.61 iter/s, 0.168745s/100 iters), loss = 0.145053
I0428 20:00:40.997637 29527 solver.cpp:238]     Train net output #0: loss = 0.145053 (* 1 = 0.145053 loss)
I0428 20:00:40.997644 29527 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:41.097182 29527 solver.cpp:219] Iteration 600 (1004.65 iter/s, 0.0995369s/100 iters), loss = 0.0881941
I0428 20:00:41.097205 29527 solver.cpp:238]     Train net output #0: loss = 0.0881941 (* 1 = 0.0881941 loss)
I0428 20:00:41.097226 29527 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:41.196594 29527 solver.cpp:219] Iteration 700 (1006.24 iter/s, 0.09938s/100 iters), loss = 0.140962
I0428 20:00:41.196635 29527 solver.cpp:238]     Train net output #0: loss = 0.140962 (* 1 = 0.140962 loss)
I0428 20:00:41.196641 29527 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:41.291074 29527 solver.cpp:219] Iteration 800 (1058.98 iter/s, 0.0944302s/100 iters), loss = 0.301812
I0428 20:00:41.291113 29527 solver.cpp:238]     Train net output #0: loss = 0.301812 (* 1 = 0.301812 loss)
I0428 20:00:41.291118 29527 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:41.380103 29527 solver.cpp:219] Iteration 900 (1123.64 iter/s, 0.0889969s/100 iters), loss = 0.183934
I0428 20:00:41.380143 29527 solver.cpp:238]     Train net output #0: loss = 0.183934 (* 1 = 0.183934 loss)
I0428 20:00:41.380148 29527 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:41.409606 29533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:41.467165 29527 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:41.468216 29527 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:41.468796 29527 solver.cpp:311] Iteration 1000, loss = 0.111165
I0428 20:00:41.468832 29527 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:41.543817 29534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:41.544378 29527 solver.cpp:398]     Test net output #0: accuracy = 0.9683
I0428 20:00:41.544395 29527 solver.cpp:398]     Test net output #1: loss = 0.0958865 (* 1 = 0.0958865 loss)
I0428 20:00:41.544400 29527 solver.cpp:316] Optimization Done.
I0428 20:00:41.544409 29527 caffe.cpp:259] Optimization Done.
