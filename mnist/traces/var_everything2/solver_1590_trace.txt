I0428 20:33:32.423455  4308 caffe.cpp:218] Using GPUs 0
I0428 20:33:32.460160  4308 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:32.974836  4308 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1590.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:32.974978  4308 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1590.prototxt
I0428 20:33:32.975385  4308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:32.975404  4308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:32.975503  4308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:32.975576  4308 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:32.975677  4308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:32.975700  4308 net.cpp:86] Creating Layer mnist
I0428 20:33:32.975708  4308 net.cpp:382] mnist -> data
I0428 20:33:32.975731  4308 net.cpp:382] mnist -> label
I0428 20:33:32.976838  4308 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:32.979326  4308 net.cpp:124] Setting up mnist
I0428 20:33:32.979346  4308 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:32.979351  4308 net.cpp:131] Top shape: 64 (64)
I0428 20:33:32.979356  4308 net.cpp:139] Memory required for data: 200960
I0428 20:33:32.979363  4308 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:32.979378  4308 net.cpp:86] Creating Layer conv0
I0428 20:33:32.979399  4308 net.cpp:408] conv0 <- data
I0428 20:33:32.979411  4308 net.cpp:382] conv0 -> conv0
I0428 20:33:33.248268  4308 net.cpp:124] Setting up conv0
I0428 20:33:33.248294  4308 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:33.248298  4308 net.cpp:139] Memory required for data: 14946560
I0428 20:33:33.248313  4308 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:33.248324  4308 net.cpp:86] Creating Layer pool0
I0428 20:33:33.248345  4308 net.cpp:408] pool0 <- conv0
I0428 20:33:33.248350  4308 net.cpp:382] pool0 -> pool0
I0428 20:33:33.248411  4308 net.cpp:124] Setting up pool0
I0428 20:33:33.248417  4308 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:33.248420  4308 net.cpp:139] Memory required for data: 18632960
I0428 20:33:33.248423  4308 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:33.248435  4308 net.cpp:86] Creating Layer conv1
I0428 20:33:33.248437  4308 net.cpp:408] conv1 <- pool0
I0428 20:33:33.248441  4308 net.cpp:382] conv1 -> conv1
I0428 20:33:33.250797  4308 net.cpp:124] Setting up conv1
I0428 20:33:33.250826  4308 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:33.250830  4308 net.cpp:139] Memory required for data: 19042560
I0428 20:33:33.250838  4308 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:33.250847  4308 net.cpp:86] Creating Layer pool1
I0428 20:33:33.250850  4308 net.cpp:408] pool1 <- conv1
I0428 20:33:33.250855  4308 net.cpp:382] pool1 -> pool1
I0428 20:33:33.250922  4308 net.cpp:124] Setting up pool1
I0428 20:33:33.250927  4308 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:33.250931  4308 net.cpp:139] Memory required for data: 19144960
I0428 20:33:33.250933  4308 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:33.250941  4308 net.cpp:86] Creating Layer ip1
I0428 20:33:33.250943  4308 net.cpp:408] ip1 <- pool1
I0428 20:33:33.250948  4308 net.cpp:382] ip1 -> ip1
I0428 20:33:33.251194  4308 net.cpp:124] Setting up ip1
I0428 20:33:33.251200  4308 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:33.251204  4308 net.cpp:139] Memory required for data: 19157760
I0428 20:33:33.251225  4308 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:33.251231  4308 net.cpp:86] Creating Layer relu1
I0428 20:33:33.251235  4308 net.cpp:408] relu1 <- ip1
I0428 20:33:33.251238  4308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:33.251413  4308 net.cpp:124] Setting up relu1
I0428 20:33:33.251422  4308 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:33.251425  4308 net.cpp:139] Memory required for data: 19170560
I0428 20:33:33.251428  4308 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:33.251433  4308 net.cpp:86] Creating Layer ip2
I0428 20:33:33.251436  4308 net.cpp:408] ip2 <- ip1
I0428 20:33:33.251441  4308 net.cpp:382] ip2 -> ip2
I0428 20:33:33.251531  4308 net.cpp:124] Setting up ip2
I0428 20:33:33.251538  4308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:33.251541  4308 net.cpp:139] Memory required for data: 19173120
I0428 20:33:33.251546  4308 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:33.251552  4308 net.cpp:86] Creating Layer relu2
I0428 20:33:33.251555  4308 net.cpp:408] relu2 <- ip2
I0428 20:33:33.251559  4308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:33.252302  4308 net.cpp:124] Setting up relu2
I0428 20:33:33.252315  4308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:33.252333  4308 net.cpp:139] Memory required for data: 19175680
I0428 20:33:33.252337  4308 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:33.252343  4308 net.cpp:86] Creating Layer ip3
I0428 20:33:33.252347  4308 net.cpp:408] ip3 <- ip2
I0428 20:33:33.252353  4308 net.cpp:382] ip3 -> ip3
I0428 20:33:33.252447  4308 net.cpp:124] Setting up ip3
I0428 20:33:33.252454  4308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:33.252457  4308 net.cpp:139] Memory required for data: 19178240
I0428 20:33:33.252465  4308 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:33.252470  4308 net.cpp:86] Creating Layer relu3
I0428 20:33:33.252473  4308 net.cpp:408] relu3 <- ip3
I0428 20:33:33.252477  4308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:33.252668  4308 net.cpp:124] Setting up relu3
I0428 20:33:33.252677  4308 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:33.252681  4308 net.cpp:139] Memory required for data: 19180800
I0428 20:33:33.252683  4308 layer_factory.hpp:77] Creating layer loss
I0428 20:33:33.252689  4308 net.cpp:86] Creating Layer loss
I0428 20:33:33.252692  4308 net.cpp:408] loss <- ip3
I0428 20:33:33.252696  4308 net.cpp:408] loss <- label
I0428 20:33:33.252701  4308 net.cpp:382] loss -> loss
I0428 20:33:33.252718  4308 layer_factory.hpp:77] Creating layer loss
I0428 20:33:33.253000  4308 net.cpp:124] Setting up loss
I0428 20:33:33.253010  4308 net.cpp:131] Top shape: (1)
I0428 20:33:33.253013  4308 net.cpp:134]     with loss weight 1
I0428 20:33:33.253027  4308 net.cpp:139] Memory required for data: 19180804
I0428 20:33:33.253031  4308 net.cpp:200] loss needs backward computation.
I0428 20:33:33.253034  4308 net.cpp:200] relu3 needs backward computation.
I0428 20:33:33.253037  4308 net.cpp:200] ip3 needs backward computation.
I0428 20:33:33.253041  4308 net.cpp:200] relu2 needs backward computation.
I0428 20:33:33.253043  4308 net.cpp:200] ip2 needs backward computation.
I0428 20:33:33.253046  4308 net.cpp:200] relu1 needs backward computation.
I0428 20:33:33.253048  4308 net.cpp:200] ip1 needs backward computation.
I0428 20:33:33.253051  4308 net.cpp:200] pool1 needs backward computation.
I0428 20:33:33.253054  4308 net.cpp:200] conv1 needs backward computation.
I0428 20:33:33.253057  4308 net.cpp:200] pool0 needs backward computation.
I0428 20:33:33.253060  4308 net.cpp:200] conv0 needs backward computation.
I0428 20:33:33.253063  4308 net.cpp:202] mnist does not need backward computation.
I0428 20:33:33.253067  4308 net.cpp:244] This network produces output loss
I0428 20:33:33.253075  4308 net.cpp:257] Network initialization done.
I0428 20:33:33.253474  4308 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1590.prototxt
I0428 20:33:33.253518  4308 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:33.253653  4308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:33.253727  4308 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:33.253769  4308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:33.253784  4308 net.cpp:86] Creating Layer mnist
I0428 20:33:33.253788  4308 net.cpp:382] mnist -> data
I0428 20:33:33.253796  4308 net.cpp:382] mnist -> label
I0428 20:33:33.253875  4308 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:33.255897  4308 net.cpp:124] Setting up mnist
I0428 20:33:33.255942  4308 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:33.255947  4308 net.cpp:131] Top shape: 100 (100)
I0428 20:33:33.255950  4308 net.cpp:139] Memory required for data: 314000
I0428 20:33:33.255954  4308 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:33.255975  4308 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:33.255978  4308 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:33.255983  4308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:33.255990  4308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:33.256088  4308 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:33.256095  4308 net.cpp:131] Top shape: 100 (100)
I0428 20:33:33.256098  4308 net.cpp:131] Top shape: 100 (100)
I0428 20:33:33.256101  4308 net.cpp:139] Memory required for data: 314800
I0428 20:33:33.256104  4308 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:33.256112  4308 net.cpp:86] Creating Layer conv0
I0428 20:33:33.256115  4308 net.cpp:408] conv0 <- data
I0428 20:33:33.256120  4308 net.cpp:382] conv0 -> conv0
I0428 20:33:33.257881  4308 net.cpp:124] Setting up conv0
I0428 20:33:33.257911  4308 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:33.257915  4308 net.cpp:139] Memory required for data: 23354800
I0428 20:33:33.257923  4308 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:33.257930  4308 net.cpp:86] Creating Layer pool0
I0428 20:33:33.257933  4308 net.cpp:408] pool0 <- conv0
I0428 20:33:33.257938  4308 net.cpp:382] pool0 -> pool0
I0428 20:33:33.258016  4308 net.cpp:124] Setting up pool0
I0428 20:33:33.258021  4308 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:33.258024  4308 net.cpp:139] Memory required for data: 29114800
I0428 20:33:33.258028  4308 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:33.258035  4308 net.cpp:86] Creating Layer conv1
I0428 20:33:33.258038  4308 net.cpp:408] conv1 <- pool0
I0428 20:33:33.258043  4308 net.cpp:382] conv1 -> conv1
I0428 20:33:33.259927  4308 net.cpp:124] Setting up conv1
I0428 20:33:33.259956  4308 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:33.259960  4308 net.cpp:139] Memory required for data: 29754800
I0428 20:33:33.259970  4308 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:33.259979  4308 net.cpp:86] Creating Layer pool1
I0428 20:33:33.259982  4308 net.cpp:408] pool1 <- conv1
I0428 20:33:33.259987  4308 net.cpp:382] pool1 -> pool1
I0428 20:33:33.260025  4308 net.cpp:124] Setting up pool1
I0428 20:33:33.260030  4308 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:33.260033  4308 net.cpp:139] Memory required for data: 29914800
I0428 20:33:33.260037  4308 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:33.260043  4308 net.cpp:86] Creating Layer ip1
I0428 20:33:33.260053  4308 net.cpp:408] ip1 <- pool1
I0428 20:33:33.260059  4308 net.cpp:382] ip1 -> ip1
I0428 20:33:33.260315  4308 net.cpp:124] Setting up ip1
I0428 20:33:33.260339  4308 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:33.260342  4308 net.cpp:139] Memory required for data: 29934800
I0428 20:33:33.260350  4308 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:33.260355  4308 net.cpp:86] Creating Layer relu1
I0428 20:33:33.260359  4308 net.cpp:408] relu1 <- ip1
I0428 20:33:33.260362  4308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:33.260527  4308 net.cpp:124] Setting up relu1
I0428 20:33:33.260536  4308 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:33.260540  4308 net.cpp:139] Memory required for data: 29954800
I0428 20:33:33.260542  4308 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:33.260550  4308 net.cpp:86] Creating Layer ip2
I0428 20:33:33.260552  4308 net.cpp:408] ip2 <- ip1
I0428 20:33:33.260558  4308 net.cpp:382] ip2 -> ip2
I0428 20:33:33.260660  4308 net.cpp:124] Setting up ip2
I0428 20:33:33.260684  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.260687  4308 net.cpp:139] Memory required for data: 29958800
I0428 20:33:33.260699  4308 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:33.260704  4308 net.cpp:86] Creating Layer relu2
I0428 20:33:33.260707  4308 net.cpp:408] relu2 <- ip2
I0428 20:33:33.260712  4308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:33.261036  4308 net.cpp:124] Setting up relu2
I0428 20:33:33.261050  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.261070  4308 net.cpp:139] Memory required for data: 29962800
I0428 20:33:33.261073  4308 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:33.261080  4308 net.cpp:86] Creating Layer ip3
I0428 20:33:33.261086  4308 net.cpp:408] ip3 <- ip2
I0428 20:33:33.261092  4308 net.cpp:382] ip3 -> ip3
I0428 20:33:33.261211  4308 net.cpp:124] Setting up ip3
I0428 20:33:33.261219  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.261224  4308 net.cpp:139] Memory required for data: 29966800
I0428 20:33:33.261231  4308 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:33.261236  4308 net.cpp:86] Creating Layer relu3
I0428 20:33:33.261245  4308 net.cpp:408] relu3 <- ip3
I0428 20:33:33.261265  4308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:33.262111  4308 net.cpp:124] Setting up relu3
I0428 20:33:33.262135  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.262153  4308 net.cpp:139] Memory required for data: 29970800
I0428 20:33:33.262156  4308 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:33.262163  4308 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:33.262166  4308 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:33.262171  4308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:33.262177  4308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:33.262217  4308 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:33.262238  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.262243  4308 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:33.262245  4308 net.cpp:139] Memory required for data: 29978800
I0428 20:33:33.262248  4308 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:33.262253  4308 net.cpp:86] Creating Layer accuracy
I0428 20:33:33.262256  4308 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:33.262260  4308 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:33.262265  4308 net.cpp:382] accuracy -> accuracy
I0428 20:33:33.262272  4308 net.cpp:124] Setting up accuracy
I0428 20:33:33.262275  4308 net.cpp:131] Top shape: (1)
I0428 20:33:33.262279  4308 net.cpp:139] Memory required for data: 29978804
I0428 20:33:33.262281  4308 layer_factory.hpp:77] Creating layer loss
I0428 20:33:33.262286  4308 net.cpp:86] Creating Layer loss
I0428 20:33:33.262289  4308 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:33.262292  4308 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:33.262297  4308 net.cpp:382] loss -> loss
I0428 20:33:33.262303  4308 layer_factory.hpp:77] Creating layer loss
I0428 20:33:33.262580  4308 net.cpp:124] Setting up loss
I0428 20:33:33.262589  4308 net.cpp:131] Top shape: (1)
I0428 20:33:33.262593  4308 net.cpp:134]     with loss weight 1
I0428 20:33:33.262609  4308 net.cpp:139] Memory required for data: 29978808
I0428 20:33:33.262612  4308 net.cpp:200] loss needs backward computation.
I0428 20:33:33.262617  4308 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:33.262622  4308 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:33.262625  4308 net.cpp:200] relu3 needs backward computation.
I0428 20:33:33.262629  4308 net.cpp:200] ip3 needs backward computation.
I0428 20:33:33.262631  4308 net.cpp:200] relu2 needs backward computation.
I0428 20:33:33.262634  4308 net.cpp:200] ip2 needs backward computation.
I0428 20:33:33.262636  4308 net.cpp:200] relu1 needs backward computation.
I0428 20:33:33.262639  4308 net.cpp:200] ip1 needs backward computation.
I0428 20:33:33.262642  4308 net.cpp:200] pool1 needs backward computation.
I0428 20:33:33.262645  4308 net.cpp:200] conv1 needs backward computation.
I0428 20:33:33.262648  4308 net.cpp:200] pool0 needs backward computation.
I0428 20:33:33.262651  4308 net.cpp:200] conv0 needs backward computation.
I0428 20:33:33.262655  4308 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:33.262660  4308 net.cpp:202] mnist does not need backward computation.
I0428 20:33:33.262662  4308 net.cpp:244] This network produces output accuracy
I0428 20:33:33.262665  4308 net.cpp:244] This network produces output loss
I0428 20:33:33.262677  4308 net.cpp:257] Network initialization done.
I0428 20:33:33.262737  4308 solver.cpp:56] Solver scaffolding done.
I0428 20:33:33.263141  4308 caffe.cpp:248] Starting Optimization
I0428 20:33:33.263147  4308 solver.cpp:273] Solving LeNet
I0428 20:33:33.263149  4308 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:33.263979  4308 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:33.361240  4317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:33.363705  4308 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0428 20:33:33.363725  4308 solver.cpp:398]     Test net output #1: loss = 2.30444 (* 1 = 2.30444 loss)
I0428 20:33:33.370098  4308 solver.cpp:219] Iteration 0 (2.12976 iter/s, 0.106889s/100 iters), loss = 2.29179
I0428 20:33:33.370123  4308 solver.cpp:238]     Train net output #0: loss = 2.29179 (* 1 = 2.29179 loss)
I0428 20:33:33.370149  4308 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:33.585855  4308 solver.cpp:219] Iteration 100 (463.593 iter/s, 0.215707s/100 iters), loss = 0.464445
I0428 20:33:33.585898  4308 solver.cpp:238]     Train net output #0: loss = 0.464445 (* 1 = 0.464445 loss)
I0428 20:33:33.585908  4308 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:33.798162  4308 solver.cpp:219] Iteration 200 (471.143 iter/s, 0.21225s/100 iters), loss = 0.232946
I0428 20:33:33.798195  4308 solver.cpp:238]     Train net output #0: loss = 0.232946 (* 1 = 0.232946 loss)
I0428 20:33:33.798203  4308 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:34.016228  4308 solver.cpp:219] Iteration 300 (458.682 iter/s, 0.218016s/100 iters), loss = 0.186224
I0428 20:33:34.016271  4308 solver.cpp:238]     Train net output #0: loss = 0.186224 (* 1 = 0.186224 loss)
I0428 20:33:34.016283  4308 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:34.238025  4308 solver.cpp:219] Iteration 400 (450.981 iter/s, 0.221739s/100 iters), loss = 0.125906
I0428 20:33:34.238061  4308 solver.cpp:238]     Train net output #0: loss = 0.125906 (* 1 = 0.125906 loss)
I0428 20:33:34.238070  4308 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:34.450822  4308 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:34.551751  4317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:34.554538  4308 solver.cpp:398]     Test net output #0: accuracy = 0.9602
I0428 20:33:34.554564  4308 solver.cpp:398]     Test net output #1: loss = 0.131067 (* 1 = 0.131067 loss)
I0428 20:33:34.556615  4308 solver.cpp:219] Iteration 500 (313.939 iter/s, 0.318534s/100 iters), loss = 0.196688
I0428 20:33:34.556643  4308 solver.cpp:238]     Train net output #0: loss = 0.196688 (* 1 = 0.196688 loss)
I0428 20:33:34.556668  4308 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:34.773285  4308 solver.cpp:219] Iteration 600 (461.627 iter/s, 0.216625s/100 iters), loss = 0.0757277
I0428 20:33:34.773319  4308 solver.cpp:238]     Train net output #0: loss = 0.0757279 (* 1 = 0.0757279 loss)
I0428 20:33:34.773327  4308 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:34.991616  4308 solver.cpp:219] Iteration 700 (458.125 iter/s, 0.218281s/100 iters), loss = 0.19337
I0428 20:33:34.991653  4308 solver.cpp:238]     Train net output #0: loss = 0.19337 (* 1 = 0.19337 loss)
I0428 20:33:34.991662  4308 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:35.209461  4308 solver.cpp:219] Iteration 800 (459.153 iter/s, 0.217793s/100 iters), loss = 0.286124
I0428 20:33:35.209496  4308 solver.cpp:238]     Train net output #0: loss = 0.286124 (* 1 = 0.286124 loss)
I0428 20:33:35.209503  4308 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:35.429302  4308 solver.cpp:219] Iteration 900 (454.99 iter/s, 0.219785s/100 iters), loss = 0.227693
I0428 20:33:35.429350  4308 solver.cpp:238]     Train net output #0: loss = 0.227693 (* 1 = 0.227693 loss)
I0428 20:33:35.429364  4308 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:35.504227  4314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:35.645440  4308 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:35.648264  4308 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:35.649888  4308 solver.cpp:311] Iteration 1000, loss = 0.142045
I0428 20:33:35.649906  4308 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:35.748311  4317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:35.750962  4308 solver.cpp:398]     Test net output #0: accuracy = 0.9735
I0428 20:33:35.750986  4308 solver.cpp:398]     Test net output #1: loss = 0.0809414 (* 1 = 0.0809414 loss)
I0428 20:33:35.750993  4308 solver.cpp:316] Optimization Done.
I0428 20:33:35.750995  4308 caffe.cpp:259] Optimization Done.
