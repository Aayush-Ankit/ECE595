I0428 20:18:24.866281  1125 caffe.cpp:218] Using GPUs 0
I0428 20:18:24.896004  1125 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:25.344741  1125 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1318.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:25.344909  1125 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1318.prototxt
I0428 20:18:25.345309  1125 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:25.345340  1125 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:25.345418  1125 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:25.345481  1125 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:25.345561  1125 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:25.345582  1125 net.cpp:86] Creating Layer mnist
I0428 20:18:25.345587  1125 net.cpp:382] mnist -> data
I0428 20:18:25.345604  1125 net.cpp:382] mnist -> label
I0428 20:18:25.346662  1125 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:25.348923  1125 net.cpp:124] Setting up mnist
I0428 20:18:25.348953  1125 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:25.348960  1125 net.cpp:131] Top shape: 64 (64)
I0428 20:18:25.348963  1125 net.cpp:139] Memory required for data: 200960
I0428 20:18:25.348969  1125 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:25.348981  1125 net.cpp:86] Creating Layer conv0
I0428 20:18:25.348997  1125 net.cpp:408] conv0 <- data
I0428 20:18:25.349009  1125 net.cpp:382] conv0 -> conv0
I0428 20:18:25.583442  1125 net.cpp:124] Setting up conv0
I0428 20:18:25.583469  1125 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:25.583473  1125 net.cpp:139] Memory required for data: 7573760
I0428 20:18:25.583487  1125 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:25.583499  1125 net.cpp:86] Creating Layer pool0
I0428 20:18:25.583503  1125 net.cpp:408] pool0 <- conv0
I0428 20:18:25.583508  1125 net.cpp:382] pool0 -> pool0
I0428 20:18:25.583567  1125 net.cpp:124] Setting up pool0
I0428 20:18:25.583572  1125 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:25.583575  1125 net.cpp:139] Memory required for data: 9416960
I0428 20:18:25.583578  1125 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:25.583588  1125 net.cpp:86] Creating Layer conv1
I0428 20:18:25.583591  1125 net.cpp:408] conv1 <- pool0
I0428 20:18:25.583595  1125 net.cpp:382] conv1 -> conv1
I0428 20:18:25.586508  1125 net.cpp:124] Setting up conv1
I0428 20:18:25.586537  1125 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:25.586541  1125 net.cpp:139] Memory required for data: 9580800
I0428 20:18:25.586549  1125 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:25.586556  1125 net.cpp:86] Creating Layer pool1
I0428 20:18:25.586560  1125 net.cpp:408] pool1 <- conv1
I0428 20:18:25.586565  1125 net.cpp:382] pool1 -> pool1
I0428 20:18:25.586614  1125 net.cpp:124] Setting up pool1
I0428 20:18:25.586619  1125 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:25.586622  1125 net.cpp:139] Memory required for data: 9621760
I0428 20:18:25.586625  1125 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:25.586632  1125 net.cpp:86] Creating Layer ip1
I0428 20:18:25.586634  1125 net.cpp:408] ip1 <- pool1
I0428 20:18:25.586639  1125 net.cpp:382] ip1 -> ip1
I0428 20:18:25.586786  1125 net.cpp:124] Setting up ip1
I0428 20:18:25.586793  1125 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:25.586796  1125 net.cpp:139] Memory required for data: 9634560
I0428 20:18:25.586802  1125 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:25.586808  1125 net.cpp:86] Creating Layer relu1
I0428 20:18:25.586812  1125 net.cpp:408] relu1 <- ip1
I0428 20:18:25.586814  1125 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:25.586962  1125 net.cpp:124] Setting up relu1
I0428 20:18:25.586971  1125 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:25.586973  1125 net.cpp:139] Memory required for data: 9647360
I0428 20:18:25.586977  1125 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:25.586982  1125 net.cpp:86] Creating Layer ip2
I0428 20:18:25.586985  1125 net.cpp:408] ip2 <- ip1
I0428 20:18:25.586990  1125 net.cpp:382] ip2 -> ip2
I0428 20:18:25.587076  1125 net.cpp:124] Setting up ip2
I0428 20:18:25.587098  1125 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:25.587101  1125 net.cpp:139] Memory required for data: 9649920
I0428 20:18:25.587106  1125 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:25.587112  1125 net.cpp:86] Creating Layer relu2
I0428 20:18:25.587116  1125 net.cpp:408] relu2 <- ip2
I0428 20:18:25.587118  1125 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:25.587890  1125 net.cpp:124] Setting up relu2
I0428 20:18:25.587903  1125 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:25.587923  1125 net.cpp:139] Memory required for data: 9652480
I0428 20:18:25.587925  1125 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:25.587947  1125 net.cpp:86] Creating Layer ip3
I0428 20:18:25.587950  1125 net.cpp:408] ip3 <- ip2
I0428 20:18:25.587955  1125 net.cpp:382] ip3 -> ip3
I0428 20:18:25.588048  1125 net.cpp:124] Setting up ip3
I0428 20:18:25.588057  1125 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:25.588059  1125 net.cpp:139] Memory required for data: 9655040
I0428 20:18:25.588066  1125 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:25.588071  1125 net.cpp:86] Creating Layer relu3
I0428 20:18:25.588074  1125 net.cpp:408] relu3 <- ip3
I0428 20:18:25.588078  1125 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:25.588251  1125 net.cpp:124] Setting up relu3
I0428 20:18:25.588260  1125 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:25.588263  1125 net.cpp:139] Memory required for data: 9657600
I0428 20:18:25.588266  1125 layer_factory.hpp:77] Creating layer loss
I0428 20:18:25.588273  1125 net.cpp:86] Creating Layer loss
I0428 20:18:25.588275  1125 net.cpp:408] loss <- ip3
I0428 20:18:25.588279  1125 net.cpp:408] loss <- label
I0428 20:18:25.588284  1125 net.cpp:382] loss -> loss
I0428 20:18:25.588301  1125 layer_factory.hpp:77] Creating layer loss
I0428 20:18:25.588552  1125 net.cpp:124] Setting up loss
I0428 20:18:25.588562  1125 net.cpp:131] Top shape: (1)
I0428 20:18:25.588565  1125 net.cpp:134]     with loss weight 1
I0428 20:18:25.588578  1125 net.cpp:139] Memory required for data: 9657604
I0428 20:18:25.588582  1125 net.cpp:200] loss needs backward computation.
I0428 20:18:25.588585  1125 net.cpp:200] relu3 needs backward computation.
I0428 20:18:25.588588  1125 net.cpp:200] ip3 needs backward computation.
I0428 20:18:25.588591  1125 net.cpp:200] relu2 needs backward computation.
I0428 20:18:25.588593  1125 net.cpp:200] ip2 needs backward computation.
I0428 20:18:25.588596  1125 net.cpp:200] relu1 needs backward computation.
I0428 20:18:25.588599  1125 net.cpp:200] ip1 needs backward computation.
I0428 20:18:25.588603  1125 net.cpp:200] pool1 needs backward computation.
I0428 20:18:25.588605  1125 net.cpp:200] conv1 needs backward computation.
I0428 20:18:25.588608  1125 net.cpp:200] pool0 needs backward computation.
I0428 20:18:25.588611  1125 net.cpp:200] conv0 needs backward computation.
I0428 20:18:25.588614  1125 net.cpp:202] mnist does not need backward computation.
I0428 20:18:25.588618  1125 net.cpp:244] This network produces output loss
I0428 20:18:25.588626  1125 net.cpp:257] Network initialization done.
I0428 20:18:25.589048  1125 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1318.prototxt
I0428 20:18:25.589103  1125 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:25.589217  1125 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:25.589324  1125 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:25.589385  1125 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:25.589397  1125 net.cpp:86] Creating Layer mnist
I0428 20:18:25.589401  1125 net.cpp:382] mnist -> data
I0428 20:18:25.589409  1125 net.cpp:382] mnist -> label
I0428 20:18:25.589493  1125 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:25.591563  1125 net.cpp:124] Setting up mnist
I0428 20:18:25.591591  1125 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:25.591596  1125 net.cpp:131] Top shape: 100 (100)
I0428 20:18:25.591599  1125 net.cpp:139] Memory required for data: 314000
I0428 20:18:25.591603  1125 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:25.591653  1125 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:25.591658  1125 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:25.591680  1125 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:25.591686  1125 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:25.591730  1125 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:25.591737  1125 net.cpp:131] Top shape: 100 (100)
I0428 20:18:25.591740  1125 net.cpp:131] Top shape: 100 (100)
I0428 20:18:25.591742  1125 net.cpp:139] Memory required for data: 314800
I0428 20:18:25.591760  1125 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:25.591769  1125 net.cpp:86] Creating Layer conv0
I0428 20:18:25.591787  1125 net.cpp:408] conv0 <- data
I0428 20:18:25.591792  1125 net.cpp:382] conv0 -> conv0
I0428 20:18:25.593472  1125 net.cpp:124] Setting up conv0
I0428 20:18:25.593485  1125 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:25.593489  1125 net.cpp:139] Memory required for data: 11834800
I0428 20:18:25.593497  1125 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:25.593519  1125 net.cpp:86] Creating Layer pool0
I0428 20:18:25.593523  1125 net.cpp:408] pool0 <- conv0
I0428 20:18:25.593528  1125 net.cpp:382] pool0 -> pool0
I0428 20:18:25.593564  1125 net.cpp:124] Setting up pool0
I0428 20:18:25.593569  1125 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:25.593572  1125 net.cpp:139] Memory required for data: 14714800
I0428 20:18:25.593575  1125 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:25.593583  1125 net.cpp:86] Creating Layer conv1
I0428 20:18:25.593586  1125 net.cpp:408] conv1 <- pool0
I0428 20:18:25.593591  1125 net.cpp:382] conv1 -> conv1
I0428 20:18:25.595299  1125 net.cpp:124] Setting up conv1
I0428 20:18:25.595312  1125 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:25.595317  1125 net.cpp:139] Memory required for data: 14970800
I0428 20:18:25.595326  1125 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:25.595332  1125 net.cpp:86] Creating Layer pool1
I0428 20:18:25.595335  1125 net.cpp:408] pool1 <- conv1
I0428 20:18:25.595340  1125 net.cpp:382] pool1 -> pool1
I0428 20:18:25.595376  1125 net.cpp:124] Setting up pool1
I0428 20:18:25.595381  1125 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:25.595384  1125 net.cpp:139] Memory required for data: 15034800
I0428 20:18:25.595387  1125 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:25.595401  1125 net.cpp:86] Creating Layer ip1
I0428 20:18:25.595403  1125 net.cpp:408] ip1 <- pool1
I0428 20:18:25.595423  1125 net.cpp:382] ip1 -> ip1
I0428 20:18:25.595573  1125 net.cpp:124] Setting up ip1
I0428 20:18:25.595582  1125 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:25.595602  1125 net.cpp:139] Memory required for data: 15054800
I0428 20:18:25.595610  1125 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:25.595621  1125 net.cpp:86] Creating Layer relu1
I0428 20:18:25.595624  1125 net.cpp:408] relu1 <- ip1
I0428 20:18:25.595628  1125 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:25.595820  1125 net.cpp:124] Setting up relu1
I0428 20:18:25.595829  1125 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:25.595832  1125 net.cpp:139] Memory required for data: 15074800
I0428 20:18:25.595835  1125 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:25.595865  1125 net.cpp:86] Creating Layer ip2
I0428 20:18:25.595873  1125 net.cpp:408] ip2 <- ip1
I0428 20:18:25.595878  1125 net.cpp:382] ip2 -> ip2
I0428 20:18:25.595978  1125 net.cpp:124] Setting up ip2
I0428 20:18:25.595985  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.595988  1125 net.cpp:139] Memory required for data: 15078800
I0428 20:18:25.595993  1125 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:25.595999  1125 net.cpp:86] Creating Layer relu2
I0428 20:18:25.596001  1125 net.cpp:408] relu2 <- ip2
I0428 20:18:25.596005  1125 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:25.596184  1125 net.cpp:124] Setting up relu2
I0428 20:18:25.596192  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.596195  1125 net.cpp:139] Memory required for data: 15082800
I0428 20:18:25.596199  1125 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:25.596204  1125 net.cpp:86] Creating Layer ip3
I0428 20:18:25.596206  1125 net.cpp:408] ip3 <- ip2
I0428 20:18:25.596211  1125 net.cpp:382] ip3 -> ip3
I0428 20:18:25.596320  1125 net.cpp:124] Setting up ip3
I0428 20:18:25.596328  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.596338  1125 net.cpp:139] Memory required for data: 15086800
I0428 20:18:25.596345  1125 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:25.596350  1125 net.cpp:86] Creating Layer relu3
I0428 20:18:25.596359  1125 net.cpp:408] relu3 <- ip3
I0428 20:18:25.596364  1125 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:25.597292  1125 net.cpp:124] Setting up relu3
I0428 20:18:25.597306  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.597316  1125 net.cpp:139] Memory required for data: 15090800
I0428 20:18:25.597319  1125 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:25.597326  1125 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:25.597328  1125 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:25.597333  1125 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:25.597339  1125 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:25.597405  1125 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:25.597415  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.597419  1125 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:25.597421  1125 net.cpp:139] Memory required for data: 15098800
I0428 20:18:25.597424  1125 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:25.597429  1125 net.cpp:86] Creating Layer accuracy
I0428 20:18:25.597434  1125 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:25.597443  1125 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:25.597447  1125 net.cpp:382] accuracy -> accuracy
I0428 20:18:25.597460  1125 net.cpp:124] Setting up accuracy
I0428 20:18:25.597463  1125 net.cpp:131] Top shape: (1)
I0428 20:18:25.597466  1125 net.cpp:139] Memory required for data: 15098804
I0428 20:18:25.597476  1125 layer_factory.hpp:77] Creating layer loss
I0428 20:18:25.597479  1125 net.cpp:86] Creating Layer loss
I0428 20:18:25.597482  1125 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:25.597486  1125 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:25.597496  1125 net.cpp:382] loss -> loss
I0428 20:18:25.597501  1125 layer_factory.hpp:77] Creating layer loss
I0428 20:18:25.597751  1125 net.cpp:124] Setting up loss
I0428 20:18:25.597760  1125 net.cpp:131] Top shape: (1)
I0428 20:18:25.597764  1125 net.cpp:134]     with loss weight 1
I0428 20:18:25.597779  1125 net.cpp:139] Memory required for data: 15098808
I0428 20:18:25.597781  1125 net.cpp:200] loss needs backward computation.
I0428 20:18:25.597786  1125 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:25.597796  1125 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:25.597800  1125 net.cpp:200] relu3 needs backward computation.
I0428 20:18:25.597802  1125 net.cpp:200] ip3 needs backward computation.
I0428 20:18:25.597805  1125 net.cpp:200] relu2 needs backward computation.
I0428 20:18:25.597808  1125 net.cpp:200] ip2 needs backward computation.
I0428 20:18:25.597811  1125 net.cpp:200] relu1 needs backward computation.
I0428 20:18:25.597813  1125 net.cpp:200] ip1 needs backward computation.
I0428 20:18:25.597816  1125 net.cpp:200] pool1 needs backward computation.
I0428 20:18:25.597820  1125 net.cpp:200] conv1 needs backward computation.
I0428 20:18:25.597832  1125 net.cpp:200] pool0 needs backward computation.
I0428 20:18:25.597836  1125 net.cpp:200] conv0 needs backward computation.
I0428 20:18:25.597854  1125 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:25.597864  1125 net.cpp:202] mnist does not need backward computation.
I0428 20:18:25.597867  1125 net.cpp:244] This network produces output accuracy
I0428 20:18:25.597869  1125 net.cpp:244] This network produces output loss
I0428 20:18:25.597882  1125 net.cpp:257] Network initialization done.
I0428 20:18:25.597939  1125 solver.cpp:56] Solver scaffolding done.
I0428 20:18:25.598333  1125 caffe.cpp:248] Starting Optimization
I0428 20:18:25.598340  1125 solver.cpp:273] Solving LeNet
I0428 20:18:25.598342  1125 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:25.599129  1125 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:25.605016  1125 blocking_queue.cpp:49] Waiting for data
I0428 20:18:25.680286  1139 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:25.681262  1125 solver.cpp:398]     Test net output #0: accuracy = 0.0659
I0428 20:18:25.681287  1125 solver.cpp:398]     Test net output #1: loss = 2.32425 (* 1 = 2.32425 loss)
I0428 20:18:25.685875  1125 solver.cpp:219] Iteration 0 (-9.29061e-43 iter/s, 0.087508s/100 iters), loss = 2.30855
I0428 20:18:25.685899  1125 solver.cpp:238]     Train net output #0: loss = 2.30855 (* 1 = 2.30855 loss)
I0428 20:18:25.685927  1125 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:25.817529  1125 solver.cpp:219] Iteration 100 (759.782 iter/s, 0.131617s/100 iters), loss = 0.624785
I0428 20:18:25.817569  1125 solver.cpp:238]     Train net output #0: loss = 0.624785 (* 1 = 0.624785 loss)
I0428 20:18:25.817591  1125 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:25.941859  1125 solver.cpp:219] Iteration 200 (804.689 iter/s, 0.124272s/100 iters), loss = 0.41553
I0428 20:18:25.941927  1125 solver.cpp:238]     Train net output #0: loss = 0.41553 (* 1 = 0.41553 loss)
I0428 20:18:25.941944  1125 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:26.077847  1125 solver.cpp:219] Iteration 300 (735.723 iter/s, 0.135921s/100 iters), loss = 0.570318
I0428 20:18:26.077885  1125 solver.cpp:238]     Train net output #0: loss = 0.570318 (* 1 = 0.570318 loss)
I0428 20:18:26.077908  1125 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:26.206105  1125 solver.cpp:219] Iteration 400 (779.971 iter/s, 0.12821s/100 iters), loss = 0.529374
I0428 20:18:26.206140  1125 solver.cpp:238]     Train net output #0: loss = 0.529374 (* 1 = 0.529374 loss)
I0428 20:18:26.206147  1125 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:26.340029  1125 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:26.410923  1139 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:26.412972  1125 solver.cpp:398]     Test net output #0: accuracy = 0.9306
I0428 20:18:26.413009  1125 solver.cpp:398]     Test net output #1: loss = 0.376009 (* 1 = 0.376009 loss)
I0428 20:18:26.414225  1125 solver.cpp:219] Iteration 500 (480.608 iter/s, 0.20807s/100 iters), loss = 0.478368
I0428 20:18:26.414286  1125 solver.cpp:238]     Train net output #0: loss = 0.478368 (* 1 = 0.478368 loss)
I0428 20:18:26.414295  1125 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:26.549353  1125 solver.cpp:219] Iteration 600 (740.409 iter/s, 0.13506s/100 iters), loss = 0.332311
I0428 20:18:26.549388  1125 solver.cpp:238]     Train net output #0: loss = 0.332311 (* 1 = 0.332311 loss)
I0428 20:18:26.549398  1125 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:26.683400  1125 solver.cpp:219] Iteration 700 (746.282 iter/s, 0.133998s/100 iters), loss = 0.407751
I0428 20:18:26.683449  1125 solver.cpp:238]     Train net output #0: loss = 0.407751 (* 1 = 0.407751 loss)
I0428 20:18:26.683461  1125 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:26.817154  1125 solver.cpp:219] Iteration 800 (747.962 iter/s, 0.133697s/100 iters), loss = 0.485572
I0428 20:18:26.817188  1125 solver.cpp:238]     Train net output #0: loss = 0.485572 (* 1 = 0.485572 loss)
I0428 20:18:26.817195  1125 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:26.951606  1125 solver.cpp:219] Iteration 900 (744.019 iter/s, 0.134405s/100 iters), loss = 0.395312
I0428 20:18:26.951642  1125 solver.cpp:238]     Train net output #0: loss = 0.395312 (* 1 = 0.395312 loss)
I0428 20:18:26.951652  1125 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:26.996330  1138 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:27.083395  1125 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:27.084703  1125 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:27.085593  1125 solver.cpp:311] Iteration 1000, loss = 0.384083
I0428 20:18:27.085613  1125 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:27.161850  1139 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:27.162788  1125 solver.cpp:398]     Test net output #0: accuracy = 0.963
I0428 20:18:27.162811  1125 solver.cpp:398]     Test net output #1: loss = 0.327428 (* 1 = 0.327428 loss)
I0428 20:18:27.162817  1125 solver.cpp:316] Optimization Done.
I0428 20:18:27.162822  1125 caffe.cpp:259] Optimization Done.
