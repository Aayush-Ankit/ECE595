I0428 20:07:50.886217 31244 caffe.cpp:218] Using GPUs 0
I0428 20:07:50.913612 31244 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:51.360507 31244 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1067.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:51.360637 31244 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1067.prototxt
I0428 20:07:51.361011 31244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:51.361027 31244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:51.361114 31244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:51.361194 31244 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:51.361276 31244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:51.361310 31244 net.cpp:86] Creating Layer mnist
I0428 20:07:51.361315 31244 net.cpp:382] mnist -> data
I0428 20:07:51.361335 31244 net.cpp:382] mnist -> label
I0428 20:07:51.362321 31244 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:51.364760 31244 net.cpp:124] Setting up mnist
I0428 20:07:51.364789 31244 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:51.364795 31244 net.cpp:131] Top shape: 64 (64)
I0428 20:07:51.364799 31244 net.cpp:139] Memory required for data: 200960
I0428 20:07:51.364804 31244 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:51.364864 31244 net.cpp:86] Creating Layer conv0
I0428 20:07:51.364884 31244 net.cpp:408] conv0 <- data
I0428 20:07:51.364894 31244 net.cpp:382] conv0 -> conv0
I0428 20:07:51.599201 31244 net.cpp:124] Setting up conv0
I0428 20:07:51.599242 31244 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:51.599247 31244 net.cpp:139] Memory required for data: 3887360
I0428 20:07:51.599261 31244 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:51.599274 31244 net.cpp:86] Creating Layer pool0
I0428 20:07:51.599278 31244 net.cpp:408] pool0 <- conv0
I0428 20:07:51.599283 31244 net.cpp:382] pool0 -> pool0
I0428 20:07:51.599342 31244 net.cpp:124] Setting up pool0
I0428 20:07:51.599347 31244 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:51.599350 31244 net.cpp:139] Memory required for data: 4808960
I0428 20:07:51.599354 31244 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:51.599364 31244 net.cpp:86] Creating Layer conv1
I0428 20:07:51.599366 31244 net.cpp:408] conv1 <- pool0
I0428 20:07:51.599371 31244 net.cpp:382] conv1 -> conv1
I0428 20:07:51.602208 31244 net.cpp:124] Setting up conv1
I0428 20:07:51.602223 31244 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:51.602227 31244 net.cpp:139] Memory required for data: 4972800
I0428 20:07:51.602236 31244 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:51.602243 31244 net.cpp:86] Creating Layer pool1
I0428 20:07:51.602246 31244 net.cpp:408] pool1 <- conv1
I0428 20:07:51.602267 31244 net.cpp:382] pool1 -> pool1
I0428 20:07:51.602304 31244 net.cpp:124] Setting up pool1
I0428 20:07:51.602309 31244 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:51.602313 31244 net.cpp:139] Memory required for data: 5013760
I0428 20:07:51.602315 31244 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:51.602322 31244 net.cpp:86] Creating Layer ip1
I0428 20:07:51.602325 31244 net.cpp:408] ip1 <- pool1
I0428 20:07:51.602329 31244 net.cpp:382] ip1 -> ip1
I0428 20:07:51.603314 31244 net.cpp:124] Setting up ip1
I0428 20:07:51.603327 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.603332 31244 net.cpp:139] Memory required for data: 5016320
I0428 20:07:51.603340 31244 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:51.603346 31244 net.cpp:86] Creating Layer relu1
I0428 20:07:51.603349 31244 net.cpp:408] relu1 <- ip1
I0428 20:07:51.603354 31244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:51.603521 31244 net.cpp:124] Setting up relu1
I0428 20:07:51.603530 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.603533 31244 net.cpp:139] Memory required for data: 5018880
I0428 20:07:51.603536 31244 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:51.603543 31244 net.cpp:86] Creating Layer ip2
I0428 20:07:51.603546 31244 net.cpp:408] ip2 <- ip1
I0428 20:07:51.603551 31244 net.cpp:382] ip2 -> ip2
I0428 20:07:51.603653 31244 net.cpp:124] Setting up ip2
I0428 20:07:51.603660 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.603663 31244 net.cpp:139] Memory required for data: 5021440
I0428 20:07:51.603668 31244 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:51.603674 31244 net.cpp:86] Creating Layer relu2
I0428 20:07:51.603677 31244 net.cpp:408] relu2 <- ip2
I0428 20:07:51.603682 31244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:51.604456 31244 net.cpp:124] Setting up relu2
I0428 20:07:51.604498 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.604502 31244 net.cpp:139] Memory required for data: 5024000
I0428 20:07:51.604521 31244 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:51.604528 31244 net.cpp:86] Creating Layer ip3
I0428 20:07:51.604532 31244 net.cpp:408] ip3 <- ip2
I0428 20:07:51.604537 31244 net.cpp:382] ip3 -> ip3
I0428 20:07:51.604640 31244 net.cpp:124] Setting up ip3
I0428 20:07:51.604647 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.604651 31244 net.cpp:139] Memory required for data: 5026560
I0428 20:07:51.604660 31244 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:51.604678 31244 net.cpp:86] Creating Layer relu3
I0428 20:07:51.604682 31244 net.cpp:408] relu3 <- ip3
I0428 20:07:51.604686 31244 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:51.604918 31244 net.cpp:124] Setting up relu3
I0428 20:07:51.604928 31244 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:51.604931 31244 net.cpp:139] Memory required for data: 5029120
I0428 20:07:51.604934 31244 layer_factory.hpp:77] Creating layer loss
I0428 20:07:51.604940 31244 net.cpp:86] Creating Layer loss
I0428 20:07:51.604943 31244 net.cpp:408] loss <- ip3
I0428 20:07:51.604948 31244 net.cpp:408] loss <- label
I0428 20:07:51.604954 31244 net.cpp:382] loss -> loss
I0428 20:07:51.604984 31244 layer_factory.hpp:77] Creating layer loss
I0428 20:07:51.605264 31244 net.cpp:124] Setting up loss
I0428 20:07:51.605274 31244 net.cpp:131] Top shape: (1)
I0428 20:07:51.605278 31244 net.cpp:134]     with loss weight 1
I0428 20:07:51.605293 31244 net.cpp:139] Memory required for data: 5029124
I0428 20:07:51.605296 31244 net.cpp:200] loss needs backward computation.
I0428 20:07:51.605299 31244 net.cpp:200] relu3 needs backward computation.
I0428 20:07:51.605303 31244 net.cpp:200] ip3 needs backward computation.
I0428 20:07:51.605304 31244 net.cpp:200] relu2 needs backward computation.
I0428 20:07:51.605307 31244 net.cpp:200] ip2 needs backward computation.
I0428 20:07:51.605310 31244 net.cpp:200] relu1 needs backward computation.
I0428 20:07:51.605312 31244 net.cpp:200] ip1 needs backward computation.
I0428 20:07:51.605315 31244 net.cpp:200] pool1 needs backward computation.
I0428 20:07:51.605319 31244 net.cpp:200] conv1 needs backward computation.
I0428 20:07:51.605321 31244 net.cpp:200] pool0 needs backward computation.
I0428 20:07:51.605324 31244 net.cpp:200] conv0 needs backward computation.
I0428 20:07:51.605327 31244 net.cpp:202] mnist does not need backward computation.
I0428 20:07:51.605329 31244 net.cpp:244] This network produces output loss
I0428 20:07:51.605340 31244 net.cpp:257] Network initialization done.
I0428 20:07:51.605659 31244 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1067.prototxt
I0428 20:07:51.605684 31244 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:51.605792 31244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:51.605872 31244 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:51.605917 31244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:51.605929 31244 net.cpp:86] Creating Layer mnist
I0428 20:07:51.605934 31244 net.cpp:382] mnist -> data
I0428 20:07:51.605942 31244 net.cpp:382] mnist -> label
I0428 20:07:51.606022 31244 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:51.607923 31244 net.cpp:124] Setting up mnist
I0428 20:07:51.607969 31244 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:51.607973 31244 net.cpp:131] Top shape: 100 (100)
I0428 20:07:51.607976 31244 net.cpp:139] Memory required for data: 314000
I0428 20:07:51.607980 31244 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:51.607987 31244 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:51.607990 31244 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:51.607997 31244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:51.608003 31244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:51.608047 31244 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:51.608053 31244 net.cpp:131] Top shape: 100 (100)
I0428 20:07:51.608057 31244 net.cpp:131] Top shape: 100 (100)
I0428 20:07:51.608060 31244 net.cpp:139] Memory required for data: 314800
I0428 20:07:51.608063 31244 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:51.608072 31244 net.cpp:86] Creating Layer conv0
I0428 20:07:51.608074 31244 net.cpp:408] conv0 <- data
I0428 20:07:51.608080 31244 net.cpp:382] conv0 -> conv0
I0428 20:07:51.609840 31244 net.cpp:124] Setting up conv0
I0428 20:07:51.609869 31244 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:51.609874 31244 net.cpp:139] Memory required for data: 6074800
I0428 20:07:51.609882 31244 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:51.609889 31244 net.cpp:86] Creating Layer pool0
I0428 20:07:51.609894 31244 net.cpp:408] pool0 <- conv0
I0428 20:07:51.609899 31244 net.cpp:382] pool0 -> pool0
I0428 20:07:51.609952 31244 net.cpp:124] Setting up pool0
I0428 20:07:51.609957 31244 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:51.609961 31244 net.cpp:139] Memory required for data: 7514800
I0428 20:07:51.609963 31244 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:51.609973 31244 net.cpp:86] Creating Layer conv1
I0428 20:07:51.609977 31244 net.cpp:408] conv1 <- pool0
I0428 20:07:51.609982 31244 net.cpp:382] conv1 -> conv1
I0428 20:07:51.612110 31244 net.cpp:124] Setting up conv1
I0428 20:07:51.612139 31244 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:51.612143 31244 net.cpp:139] Memory required for data: 7770800
I0428 20:07:51.612151 31244 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:51.612171 31244 net.cpp:86] Creating Layer pool1
I0428 20:07:51.612175 31244 net.cpp:408] pool1 <- conv1
I0428 20:07:51.612181 31244 net.cpp:382] pool1 -> pool1
I0428 20:07:51.612234 31244 net.cpp:124] Setting up pool1
I0428 20:07:51.612239 31244 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:51.612243 31244 net.cpp:139] Memory required for data: 7834800
I0428 20:07:51.612246 31244 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:51.612252 31244 net.cpp:86] Creating Layer ip1
I0428 20:07:51.612256 31244 net.cpp:408] ip1 <- pool1
I0428 20:07:51.612262 31244 net.cpp:382] ip1 -> ip1
I0428 20:07:51.612380 31244 net.cpp:124] Setting up ip1
I0428 20:07:51.612388 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.612401 31244 net.cpp:139] Memory required for data: 7838800
I0428 20:07:51.612408 31244 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:51.612413 31244 net.cpp:86] Creating Layer relu1
I0428 20:07:51.612417 31244 net.cpp:408] relu1 <- ip1
I0428 20:07:51.612422 31244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:51.612690 31244 net.cpp:124] Setting up relu1
I0428 20:07:51.612700 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.612704 31244 net.cpp:139] Memory required for data: 7842800
I0428 20:07:51.612706 31244 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:51.612715 31244 net.cpp:86] Creating Layer ip2
I0428 20:07:51.612718 31244 net.cpp:408] ip2 <- ip1
I0428 20:07:51.612723 31244 net.cpp:382] ip2 -> ip2
I0428 20:07:51.612848 31244 net.cpp:124] Setting up ip2
I0428 20:07:51.612856 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.612860 31244 net.cpp:139] Memory required for data: 7846800
I0428 20:07:51.612881 31244 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:51.612887 31244 net.cpp:86] Creating Layer relu2
I0428 20:07:51.612891 31244 net.cpp:408] relu2 <- ip2
I0428 20:07:51.612895 31244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:51.613065 31244 net.cpp:124] Setting up relu2
I0428 20:07:51.613075 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.613077 31244 net.cpp:139] Memory required for data: 7850800
I0428 20:07:51.613081 31244 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:51.613088 31244 net.cpp:86] Creating Layer ip3
I0428 20:07:51.613091 31244 net.cpp:408] ip3 <- ip2
I0428 20:07:51.613096 31244 net.cpp:382] ip3 -> ip3
I0428 20:07:51.613231 31244 net.cpp:124] Setting up ip3
I0428 20:07:51.613239 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.613241 31244 net.cpp:139] Memory required for data: 7854800
I0428 20:07:51.613248 31244 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:51.613255 31244 net.cpp:86] Creating Layer relu3
I0428 20:07:51.613257 31244 net.cpp:408] relu3 <- ip3
I0428 20:07:51.613261 31244 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:51.614037 31244 net.cpp:124] Setting up relu3
I0428 20:07:51.614064 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.614068 31244 net.cpp:139] Memory required for data: 7858800
I0428 20:07:51.614071 31244 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:51.614092 31244 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:51.614095 31244 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:51.614100 31244 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:51.614109 31244 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:51.614197 31244 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:51.614205 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.614209 31244 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:51.614212 31244 net.cpp:139] Memory required for data: 7866800
I0428 20:07:51.614215 31244 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:51.614222 31244 net.cpp:86] Creating Layer accuracy
I0428 20:07:51.614225 31244 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:51.614229 31244 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:51.614235 31244 net.cpp:382] accuracy -> accuracy
I0428 20:07:51.614243 31244 net.cpp:124] Setting up accuracy
I0428 20:07:51.614248 31244 net.cpp:131] Top shape: (1)
I0428 20:07:51.614250 31244 net.cpp:139] Memory required for data: 7866804
I0428 20:07:51.614253 31244 layer_factory.hpp:77] Creating layer loss
I0428 20:07:51.614259 31244 net.cpp:86] Creating Layer loss
I0428 20:07:51.614262 31244 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:51.614266 31244 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:51.614270 31244 net.cpp:382] loss -> loss
I0428 20:07:51.614277 31244 layer_factory.hpp:77] Creating layer loss
I0428 20:07:51.614528 31244 net.cpp:124] Setting up loss
I0428 20:07:51.614538 31244 net.cpp:131] Top shape: (1)
I0428 20:07:51.614542 31244 net.cpp:134]     with loss weight 1
I0428 20:07:51.614573 31244 net.cpp:139] Memory required for data: 7866808
I0428 20:07:51.614578 31244 net.cpp:200] loss needs backward computation.
I0428 20:07:51.614580 31244 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:51.614584 31244 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:51.614588 31244 net.cpp:200] relu3 needs backward computation.
I0428 20:07:51.614590 31244 net.cpp:200] ip3 needs backward computation.
I0428 20:07:51.614593 31244 net.cpp:200] relu2 needs backward computation.
I0428 20:07:51.614596 31244 net.cpp:200] ip2 needs backward computation.
I0428 20:07:51.614598 31244 net.cpp:200] relu1 needs backward computation.
I0428 20:07:51.614608 31244 net.cpp:200] ip1 needs backward computation.
I0428 20:07:51.614626 31244 net.cpp:200] pool1 needs backward computation.
I0428 20:07:51.614629 31244 net.cpp:200] conv1 needs backward computation.
I0428 20:07:51.614634 31244 net.cpp:200] pool0 needs backward computation.
I0428 20:07:51.614636 31244 net.cpp:200] conv0 needs backward computation.
I0428 20:07:51.614640 31244 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:51.614644 31244 net.cpp:202] mnist does not need backward computation.
I0428 20:07:51.614646 31244 net.cpp:244] This network produces output accuracy
I0428 20:07:51.614650 31244 net.cpp:244] This network produces output loss
I0428 20:07:51.614663 31244 net.cpp:257] Network initialization done.
I0428 20:07:51.614706 31244 solver.cpp:56] Solver scaffolding done.
I0428 20:07:51.615082 31244 caffe.cpp:248] Starting Optimization
I0428 20:07:51.615088 31244 solver.cpp:273] Solving LeNet
I0428 20:07:51.615090 31244 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:51.615898 31244 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:51.620324 31244 blocking_queue.cpp:49] Waiting for data
I0428 20:07:51.691262 31251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:51.691884 31244 solver.cpp:398]     Test net output #0: accuracy = 0.1133
I0428 20:07:51.691920 31244 solver.cpp:398]     Test net output #1: loss = 2.29757 (* 1 = 2.29757 loss)
I0428 20:07:51.695601 31244 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804639s/100 iters), loss = 2.28253
I0428 20:07:51.695641 31244 solver.cpp:238]     Train net output #0: loss = 2.28253 (* 1 = 2.28253 loss)
I0428 20:07:51.695652 31244 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:51.790395 31244 solver.cpp:219] Iteration 100 (1055.52 iter/s, 0.0947405s/100 iters), loss = 1.22387
I0428 20:07:51.790434 31244 solver.cpp:238]     Train net output #0: loss = 1.22387 (* 1 = 1.22387 loss)
I0428 20:07:51.790441 31244 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:51.884948 31244 solver.cpp:219] Iteration 200 (1058.18 iter/s, 0.0945019s/100 iters), loss = 1.66717
I0428 20:07:51.884973 31244 solver.cpp:238]     Train net output #0: loss = 1.66717 (* 1 = 1.66717 loss)
I0428 20:07:51.884979 31244 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:51.979902 31244 solver.cpp:219] Iteration 300 (1053.53 iter/s, 0.0949187s/100 iters), loss = 1.20542
I0428 20:07:51.979945 31244 solver.cpp:238]     Train net output #0: loss = 1.20542 (* 1 = 1.20542 loss)
I0428 20:07:51.979954 31244 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:52.077639 31244 solver.cpp:219] Iteration 400 (1023.71 iter/s, 0.0976835s/100 iters), loss = 1.23596
I0428 20:07:52.077682 31244 solver.cpp:238]     Train net output #0: loss = 1.23596 (* 1 = 1.23596 loss)
I0428 20:07:52.077689 31244 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:52.171968 31244 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:52.247278 31251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:52.247879 31244 solver.cpp:398]     Test net output #0: accuracy = 0.6719
I0428 20:07:52.247898 31244 solver.cpp:398]     Test net output #1: loss = 1.0041 (* 1 = 1.0041 loss)
I0428 20:07:52.248889 31244 solver.cpp:219] Iteration 500 (584.135 iter/s, 0.171193s/100 iters), loss = 1.03035
I0428 20:07:52.248914 31244 solver.cpp:238]     Train net output #0: loss = 1.03035 (* 1 = 1.03035 loss)
I0428 20:07:52.248934 31244 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:52.350121 31244 solver.cpp:219] Iteration 600 (988.164 iter/s, 0.101198s/100 iters), loss = 0.53693
I0428 20:07:52.350145 31244 solver.cpp:238]     Train net output #0: loss = 0.53693 (* 1 = 0.53693 loss)
I0428 20:07:52.350167 31244 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:52.445247 31244 solver.cpp:219] Iteration 700 (1051.62 iter/s, 0.0950917s/100 iters), loss = 1.16627
I0428 20:07:52.445286 31244 solver.cpp:238]     Train net output #0: loss = 1.16627 (* 1 = 1.16627 loss)
I0428 20:07:52.445294 31244 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:52.539738 31244 solver.cpp:219] Iteration 800 (1058.86 iter/s, 0.0944415s/100 iters), loss = 0.801302
I0428 20:07:52.539777 31244 solver.cpp:238]     Train net output #0: loss = 0.801302 (* 1 = 0.801302 loss)
I0428 20:07:52.539784 31244 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:52.634399 31244 solver.cpp:219] Iteration 900 (1056.77 iter/s, 0.0946278s/100 iters), loss = 0.644271
I0428 20:07:52.634438 31244 solver.cpp:238]     Train net output #0: loss = 0.644271 (* 1 = 0.644271 loss)
I0428 20:07:52.634445 31244 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:52.666153 31250 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:52.726953 31244 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:52.727816 31244 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:52.728444 31244 solver.cpp:311] Iteration 1000, loss = 0.883837
I0428 20:07:52.728474 31244 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:52.784746 31251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:52.785398 31244 solver.cpp:398]     Test net output #0: accuracy = 0.6849
I0428 20:07:52.785418 31244 solver.cpp:398]     Test net output #1: loss = 0.834679 (* 1 = 0.834679 loss)
I0428 20:07:52.785423 31244 solver.cpp:316] Optimization Done.
I0428 20:07:52.785428 31244 caffe.cpp:259] Optimization Done.
