I0428 20:28:11.275666  3316 caffe.cpp:218] Using GPUs 0
I0428 20:28:11.307045  3316 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:11.807421  3316 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1501.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:11.807539  3316 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1501.prototxt
I0428 20:28:11.807906  3316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:11.807924  3316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:11.808007  3316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:11.808073  3316 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:11.808156  3316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:11.808176  3316 net.cpp:86] Creating Layer mnist
I0428 20:28:11.808182  3316 net.cpp:382] mnist -> data
I0428 20:28:11.808200  3316 net.cpp:382] mnist -> label
I0428 20:28:11.809206  3316 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:11.811276  3316 net.cpp:124] Setting up mnist
I0428 20:28:11.811291  3316 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:11.811296  3316 net.cpp:131] Top shape: 64 (64)
I0428 20:28:11.811300  3316 net.cpp:139] Memory required for data: 200960
I0428 20:28:11.811305  3316 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:11.811344  3316 net.cpp:86] Creating Layer conv0
I0428 20:28:11.811362  3316 net.cpp:408] conv0 <- data
I0428 20:28:11.811372  3316 net.cpp:382] conv0 -> conv0
I0428 20:28:12.040607  3316 net.cpp:124] Setting up conv0
I0428 20:28:12.040633  3316 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:12.040637  3316 net.cpp:139] Memory required for data: 14946560
I0428 20:28:12.040652  3316 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:12.040663  3316 net.cpp:86] Creating Layer pool0
I0428 20:28:12.040668  3316 net.cpp:408] pool0 <- conv0
I0428 20:28:12.040673  3316 net.cpp:382] pool0 -> pool0
I0428 20:28:12.040732  3316 net.cpp:124] Setting up pool0
I0428 20:28:12.040737  3316 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:12.040740  3316 net.cpp:139] Memory required for data: 18632960
I0428 20:28:12.040742  3316 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:12.040753  3316 net.cpp:86] Creating Layer conv1
I0428 20:28:12.040756  3316 net.cpp:408] conv1 <- pool0
I0428 20:28:12.040761  3316 net.cpp:382] conv1 -> conv1
I0428 20:28:12.043576  3316 net.cpp:124] Setting up conv1
I0428 20:28:12.043606  3316 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:12.043609  3316 net.cpp:139] Memory required for data: 18714880
I0428 20:28:12.043632  3316 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:12.043639  3316 net.cpp:86] Creating Layer pool1
I0428 20:28:12.043642  3316 net.cpp:408] pool1 <- conv1
I0428 20:28:12.043648  3316 net.cpp:382] pool1 -> pool1
I0428 20:28:12.043704  3316 net.cpp:124] Setting up pool1
I0428 20:28:12.043709  3316 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:12.043712  3316 net.cpp:139] Memory required for data: 18735360
I0428 20:28:12.043715  3316 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:12.043721  3316 net.cpp:86] Creating Layer ip1
I0428 20:28:12.043725  3316 net.cpp:408] ip1 <- pool1
I0428 20:28:12.043730  3316 net.cpp:382] ip1 -> ip1
I0428 20:28:12.043835  3316 net.cpp:124] Setting up ip1
I0428 20:28:12.043843  3316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:12.043844  3316 net.cpp:139] Memory required for data: 18737920
I0428 20:28:12.043851  3316 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:12.043856  3316 net.cpp:86] Creating Layer relu1
I0428 20:28:12.043859  3316 net.cpp:408] relu1 <- ip1
I0428 20:28:12.043864  3316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:12.044015  3316 net.cpp:124] Setting up relu1
I0428 20:28:12.044023  3316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:12.044026  3316 net.cpp:139] Memory required for data: 18740480
I0428 20:28:12.044029  3316 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:12.044036  3316 net.cpp:86] Creating Layer ip2
I0428 20:28:12.044039  3316 net.cpp:408] ip2 <- ip1
I0428 20:28:12.044044  3316 net.cpp:382] ip2 -> ip2
I0428 20:28:12.044132  3316 net.cpp:124] Setting up ip2
I0428 20:28:12.044138  3316 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:12.044142  3316 net.cpp:139] Memory required for data: 18753280
I0428 20:28:12.044147  3316 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:12.044152  3316 net.cpp:86] Creating Layer relu2
I0428 20:28:12.044154  3316 net.cpp:408] relu2 <- ip2
I0428 20:28:12.044158  3316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:12.044970  3316 net.cpp:124] Setting up relu2
I0428 20:28:12.044997  3316 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:28:12.045001  3316 net.cpp:139] Memory required for data: 18766080
I0428 20:28:12.045004  3316 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:12.045012  3316 net.cpp:86] Creating Layer ip3
I0428 20:28:12.045016  3316 net.cpp:408] ip3 <- ip2
I0428 20:28:12.045022  3316 net.cpp:382] ip3 -> ip3
I0428 20:28:12.045122  3316 net.cpp:124] Setting up ip3
I0428 20:28:12.045130  3316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:12.045132  3316 net.cpp:139] Memory required for data: 18768640
I0428 20:28:12.045155  3316 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:12.045159  3316 net.cpp:86] Creating Layer relu3
I0428 20:28:12.045162  3316 net.cpp:408] relu3 <- ip3
I0428 20:28:12.045166  3316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:12.045331  3316 net.cpp:124] Setting up relu3
I0428 20:28:12.045341  3316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:12.045343  3316 net.cpp:139] Memory required for data: 18771200
I0428 20:28:12.045346  3316 layer_factory.hpp:77] Creating layer loss
I0428 20:28:12.045352  3316 net.cpp:86] Creating Layer loss
I0428 20:28:12.045354  3316 net.cpp:408] loss <- ip3
I0428 20:28:12.045358  3316 net.cpp:408] loss <- label
I0428 20:28:12.045363  3316 net.cpp:382] loss -> loss
I0428 20:28:12.045380  3316 layer_factory.hpp:77] Creating layer loss
I0428 20:28:12.045608  3316 net.cpp:124] Setting up loss
I0428 20:28:12.045616  3316 net.cpp:131] Top shape: (1)
I0428 20:28:12.045620  3316 net.cpp:134]     with loss weight 1
I0428 20:28:12.045650  3316 net.cpp:139] Memory required for data: 18771204
I0428 20:28:12.045653  3316 net.cpp:200] loss needs backward computation.
I0428 20:28:12.045657  3316 net.cpp:200] relu3 needs backward computation.
I0428 20:28:12.045660  3316 net.cpp:200] ip3 needs backward computation.
I0428 20:28:12.045663  3316 net.cpp:200] relu2 needs backward computation.
I0428 20:28:12.045665  3316 net.cpp:200] ip2 needs backward computation.
I0428 20:28:12.045668  3316 net.cpp:200] relu1 needs backward computation.
I0428 20:28:12.045671  3316 net.cpp:200] ip1 needs backward computation.
I0428 20:28:12.045675  3316 net.cpp:200] pool1 needs backward computation.
I0428 20:28:12.045677  3316 net.cpp:200] conv1 needs backward computation.
I0428 20:28:12.045680  3316 net.cpp:200] pool0 needs backward computation.
I0428 20:28:12.045683  3316 net.cpp:200] conv0 needs backward computation.
I0428 20:28:12.045686  3316 net.cpp:202] mnist does not need backward computation.
I0428 20:28:12.045689  3316 net.cpp:244] This network produces output loss
I0428 20:28:12.045697  3316 net.cpp:257] Network initialization done.
I0428 20:28:12.046092  3316 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1501.prototxt
I0428 20:28:12.046136  3316 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:12.046224  3316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:12.046303  3316 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:12.046347  3316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:12.046360  3316 net.cpp:86] Creating Layer mnist
I0428 20:28:12.046365  3316 net.cpp:382] mnist -> data
I0428 20:28:12.046371  3316 net.cpp:382] mnist -> label
I0428 20:28:12.046468  3316 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:12.048478  3316 net.cpp:124] Setting up mnist
I0428 20:28:12.048506  3316 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:12.048511  3316 net.cpp:131] Top shape: 100 (100)
I0428 20:28:12.048514  3316 net.cpp:139] Memory required for data: 314000
I0428 20:28:12.048517  3316 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:12.048557  3316 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:12.048562  3316 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:12.048566  3316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:12.048573  3316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:12.048609  3316 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:12.048612  3316 net.cpp:131] Top shape: 100 (100)
I0428 20:28:12.048616  3316 net.cpp:131] Top shape: 100 (100)
I0428 20:28:12.048619  3316 net.cpp:139] Memory required for data: 314800
I0428 20:28:12.048621  3316 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:12.048629  3316 net.cpp:86] Creating Layer conv0
I0428 20:28:12.048631  3316 net.cpp:408] conv0 <- data
I0428 20:28:12.048636  3316 net.cpp:382] conv0 -> conv0
I0428 20:28:12.050462  3316 net.cpp:124] Setting up conv0
I0428 20:28:12.050475  3316 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:12.050478  3316 net.cpp:139] Memory required for data: 23354800
I0428 20:28:12.050487  3316 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:12.050493  3316 net.cpp:86] Creating Layer pool0
I0428 20:28:12.050511  3316 net.cpp:408] pool0 <- conv0
I0428 20:28:12.050516  3316 net.cpp:382] pool0 -> pool0
I0428 20:28:12.050577  3316 net.cpp:124] Setting up pool0
I0428 20:28:12.050587  3316 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:12.050590  3316 net.cpp:139] Memory required for data: 29114800
I0428 20:28:12.050595  3316 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:12.050602  3316 net.cpp:86] Creating Layer conv1
I0428 20:28:12.050606  3316 net.cpp:408] conv1 <- pool0
I0428 20:28:12.050611  3316 net.cpp:382] conv1 -> conv1
I0428 20:28:12.052139  3316 net.cpp:124] Setting up conv1
I0428 20:28:12.052152  3316 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:12.052155  3316 net.cpp:139] Memory required for data: 29242800
I0428 20:28:12.052165  3316 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:12.052171  3316 net.cpp:86] Creating Layer pool1
I0428 20:28:12.052179  3316 net.cpp:408] pool1 <- conv1
I0428 20:28:12.052186  3316 net.cpp:382] pool1 -> pool1
I0428 20:28:12.052243  3316 net.cpp:124] Setting up pool1
I0428 20:28:12.052249  3316 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:12.052253  3316 net.cpp:139] Memory required for data: 29274800
I0428 20:28:12.052256  3316 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:12.052261  3316 net.cpp:86] Creating Layer ip1
I0428 20:28:12.052264  3316 net.cpp:408] ip1 <- pool1
I0428 20:28:12.052269  3316 net.cpp:382] ip1 -> ip1
I0428 20:28:12.052390  3316 net.cpp:124] Setting up ip1
I0428 20:28:12.052400  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.052414  3316 net.cpp:139] Memory required for data: 29278800
I0428 20:28:12.052428  3316 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:12.052433  3316 net.cpp:86] Creating Layer relu1
I0428 20:28:12.052436  3316 net.cpp:408] relu1 <- ip1
I0428 20:28:12.052440  3316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:12.052604  3316 net.cpp:124] Setting up relu1
I0428 20:28:12.052626  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.052636  3316 net.cpp:139] Memory required for data: 29282800
I0428 20:28:12.052639  3316 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:12.052647  3316 net.cpp:86] Creating Layer ip2
I0428 20:28:12.052651  3316 net.cpp:408] ip2 <- ip1
I0428 20:28:12.052656  3316 net.cpp:382] ip2 -> ip2
I0428 20:28:12.052755  3316 net.cpp:124] Setting up ip2
I0428 20:28:12.052764  3316 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:12.052767  3316 net.cpp:139] Memory required for data: 29302800
I0428 20:28:12.052772  3316 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:12.052776  3316 net.cpp:86] Creating Layer relu2
I0428 20:28:12.052779  3316 net.cpp:408] relu2 <- ip2
I0428 20:28:12.052783  3316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:12.052960  3316 net.cpp:124] Setting up relu2
I0428 20:28:12.052973  3316 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:28:12.052979  3316 net.cpp:139] Memory required for data: 29322800
I0428 20:28:12.052983  3316 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:12.052989  3316 net.cpp:86] Creating Layer ip3
I0428 20:28:12.052991  3316 net.cpp:408] ip3 <- ip2
I0428 20:28:12.052997  3316 net.cpp:382] ip3 -> ip3
I0428 20:28:12.053100  3316 net.cpp:124] Setting up ip3
I0428 20:28:12.053107  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.053112  3316 net.cpp:139] Memory required for data: 29326800
I0428 20:28:12.053118  3316 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:12.053124  3316 net.cpp:86] Creating Layer relu3
I0428 20:28:12.053128  3316 net.cpp:408] relu3 <- ip3
I0428 20:28:12.053131  3316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:12.053983  3316 net.cpp:124] Setting up relu3
I0428 20:28:12.053995  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.053999  3316 net.cpp:139] Memory required for data: 29330800
I0428 20:28:12.054003  3316 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:12.054008  3316 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:12.054011  3316 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:12.054016  3316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:12.054023  3316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:12.054097  3316 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:12.054105  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.054107  3316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:12.054111  3316 net.cpp:139] Memory required for data: 29338800
I0428 20:28:12.054113  3316 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:12.054118  3316 net.cpp:86] Creating Layer accuracy
I0428 20:28:12.054128  3316 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:12.054132  3316 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:12.054136  3316 net.cpp:382] accuracy -> accuracy
I0428 20:28:12.054143  3316 net.cpp:124] Setting up accuracy
I0428 20:28:12.054147  3316 net.cpp:131] Top shape: (1)
I0428 20:28:12.054149  3316 net.cpp:139] Memory required for data: 29338804
I0428 20:28:12.054158  3316 layer_factory.hpp:77] Creating layer loss
I0428 20:28:12.054164  3316 net.cpp:86] Creating Layer loss
I0428 20:28:12.054167  3316 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:12.054170  3316 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:12.054179  3316 net.cpp:382] loss -> loss
I0428 20:28:12.054186  3316 layer_factory.hpp:77] Creating layer loss
I0428 20:28:12.054432  3316 net.cpp:124] Setting up loss
I0428 20:28:12.054446  3316 net.cpp:131] Top shape: (1)
I0428 20:28:12.054450  3316 net.cpp:134]     with loss weight 1
I0428 20:28:12.054466  3316 net.cpp:139] Memory required for data: 29338808
I0428 20:28:12.054476  3316 net.cpp:200] loss needs backward computation.
I0428 20:28:12.054491  3316 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:12.054500  3316 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:12.054503  3316 net.cpp:200] relu3 needs backward computation.
I0428 20:28:12.054505  3316 net.cpp:200] ip3 needs backward computation.
I0428 20:28:12.054509  3316 net.cpp:200] relu2 needs backward computation.
I0428 20:28:12.054512  3316 net.cpp:200] ip2 needs backward computation.
I0428 20:28:12.054514  3316 net.cpp:200] relu1 needs backward computation.
I0428 20:28:12.054517  3316 net.cpp:200] ip1 needs backward computation.
I0428 20:28:12.054519  3316 net.cpp:200] pool1 needs backward computation.
I0428 20:28:12.054522  3316 net.cpp:200] conv1 needs backward computation.
I0428 20:28:12.054525  3316 net.cpp:200] pool0 needs backward computation.
I0428 20:28:12.054528  3316 net.cpp:200] conv0 needs backward computation.
I0428 20:28:12.054533  3316 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:12.054538  3316 net.cpp:202] mnist does not need backward computation.
I0428 20:28:12.054539  3316 net.cpp:244] This network produces output accuracy
I0428 20:28:12.054543  3316 net.cpp:244] This network produces output loss
I0428 20:28:12.054553  3316 net.cpp:257] Network initialization done.
I0428 20:28:12.054599  3316 solver.cpp:56] Solver scaffolding done.
I0428 20:28:12.054980  3316 caffe.cpp:248] Starting Optimization
I0428 20:28:12.054987  3316 solver.cpp:273] Solving LeNet
I0428 20:28:12.054991  3316 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:12.055809  3316 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:12.152102  3323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:12.154577  3316 solver.cpp:398]     Test net output #0: accuracy = 0.082
I0428 20:28:12.154597  3316 solver.cpp:398]     Test net output #1: loss = 2.31594 (* 1 = 2.31594 loss)
I0428 20:28:12.158948  3316 solver.cpp:219] Iteration 0 (0 iter/s, 0.103931s/100 iters), loss = 2.31417
I0428 20:28:12.158972  3316 solver.cpp:238]     Train net output #0: loss = 2.31417 (* 1 = 2.31417 loss)
I0428 20:28:12.158998  3316 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:12.365667  3316 solver.cpp:219] Iteration 100 (483.846 iter/s, 0.206677s/100 iters), loss = 1.02226
I0428 20:28:12.365695  3316 solver.cpp:238]     Train net output #0: loss = 1.02226 (* 1 = 1.02226 loss)
I0428 20:28:12.365702  3316 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:12.570559  3316 solver.cpp:219] Iteration 200 (488.196 iter/s, 0.204836s/100 iters), loss = 1.11364
I0428 20:28:12.570613  3316 solver.cpp:238]     Train net output #0: loss = 1.11364 (* 1 = 1.11364 loss)
I0428 20:28:12.570626  3316 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:28:12.785923  3316 solver.cpp:219] Iteration 300 (464.486 iter/s, 0.215292s/100 iters), loss = 0.705303
I0428 20:28:12.785979  3316 solver.cpp:238]     Train net output #0: loss = 0.705303 (* 1 = 0.705303 loss)
I0428 20:28:12.785993  3316 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:28:13.006364  3316 solver.cpp:219] Iteration 400 (453.774 iter/s, 0.220374s/100 iters), loss = 0.958034
I0428 20:28:13.006403  3316 solver.cpp:238]     Train net output #0: loss = 0.958034 (* 1 = 0.958034 loss)
I0428 20:28:13.006413  3316 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:28:13.221041  3316 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:28:13.322975  3323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:13.324519  3316 solver.cpp:398]     Test net output #0: accuracy = 0.8309
I0428 20:28:13.324548  3316 solver.cpp:398]     Test net output #1: loss = 0.602288 (* 1 = 0.602288 loss)
I0428 20:28:13.326571  3316 solver.cpp:219] Iteration 500 (312.358 iter/s, 0.320145s/100 iters), loss = 0.709794
I0428 20:28:13.326601  3316 solver.cpp:238]     Train net output #0: loss = 0.709794 (* 1 = 0.709794 loss)
I0428 20:28:13.326627  3316 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:28:13.535254  3316 solver.cpp:219] Iteration 600 (479.302 iter/s, 0.208637s/100 iters), loss = 0.409219
I0428 20:28:13.535290  3316 solver.cpp:238]     Train net output #0: loss = 0.409219 (* 1 = 0.409219 loss)
I0428 20:28:13.535298  3316 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:28:13.761701  3316 solver.cpp:219] Iteration 700 (441.714 iter/s, 0.226391s/100 iters), loss = 0.545815
I0428 20:28:13.761767  3316 solver.cpp:238]     Train net output #0: loss = 0.545815 (* 1 = 0.545815 loss)
I0428 20:28:13.761788  3316 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:28:13.990326  3316 solver.cpp:219] Iteration 800 (437.544 iter/s, 0.228549s/100 iters), loss = 0.71981
I0428 20:28:13.990386  3316 solver.cpp:238]     Train net output #0: loss = 0.71981 (* 1 = 0.71981 loss)
I0428 20:28:13.990406  3316 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:28:14.218026  3316 solver.cpp:219] Iteration 900 (439.315 iter/s, 0.227627s/100 iters), loss = 0.444933
I0428 20:28:14.218089  3316 solver.cpp:238]     Train net output #0: loss = 0.444933 (* 1 = 0.444933 loss)
I0428 20:28:14.218111  3316 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:28:14.293043  3322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:14.446933  3316 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:28:14.449056  3316 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:28:14.450472  3316 solver.cpp:311] Iteration 1000, loss = 0.474359
I0428 20:28:14.450512  3316 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:28:14.556370  3323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:14.559077  3316 solver.cpp:398]     Test net output #0: accuracy = 0.8694
I0428 20:28:14.559104  3316 solver.cpp:398]     Test net output #1: loss = 0.559479 (* 1 = 0.559479 loss)
I0428 20:28:14.559110  3316 solver.cpp:316] Optimization Done.
I0428 20:28:14.559115  3316 caffe.cpp:259] Optimization Done.
