I0428 20:09:35.564754 31657 caffe.cpp:218] Using GPUs 0
I0428 20:09:35.593796 31657 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:36.037466 31657 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1113.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:36.037592 31657 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1113.prototxt
I0428 20:09:36.037916 31657 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:36.037933 31657 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:36.038012 31657 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:36.038077 31657 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:36.038157 31657 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:36.038177 31657 net.cpp:86] Creating Layer mnist
I0428 20:09:36.038185 31657 net.cpp:382] mnist -> data
I0428 20:09:36.038204 31657 net.cpp:382] mnist -> label
I0428 20:09:36.039075 31657 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:36.041198 31657 net.cpp:124] Setting up mnist
I0428 20:09:36.041229 31657 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:36.041234 31657 net.cpp:131] Top shape: 64 (64)
I0428 20:09:36.041236 31657 net.cpp:139] Memory required for data: 200960
I0428 20:09:36.041241 31657 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:36.041256 31657 net.cpp:86] Creating Layer conv0
I0428 20:09:36.041273 31657 net.cpp:408] conv0 <- data
I0428 20:09:36.041285 31657 net.cpp:382] conv0 -> conv0
I0428 20:09:36.276214 31657 net.cpp:124] Setting up conv0
I0428 20:09:36.276257 31657 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:36.276262 31657 net.cpp:139] Memory required for data: 3887360
I0428 20:09:36.276276 31657 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:36.276305 31657 net.cpp:86] Creating Layer pool0
I0428 20:09:36.276312 31657 net.cpp:408] pool0 <- conv0
I0428 20:09:36.276334 31657 net.cpp:382] pool0 -> pool0
I0428 20:09:36.276396 31657 net.cpp:124] Setting up pool0
I0428 20:09:36.276404 31657 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:36.276423 31657 net.cpp:139] Memory required for data: 4808960
I0428 20:09:36.276427 31657 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:36.276438 31657 net.cpp:86] Creating Layer conv1
I0428 20:09:36.276443 31657 net.cpp:408] conv1 <- pool0
I0428 20:09:36.276448 31657 net.cpp:382] conv1 -> conv1
I0428 20:09:36.279578 31657 net.cpp:124] Setting up conv1
I0428 20:09:36.279608 31657 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:36.279613 31657 net.cpp:139] Memory required for data: 5218560
I0428 20:09:36.279636 31657 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:36.279644 31657 net.cpp:86] Creating Layer pool1
I0428 20:09:36.279649 31657 net.cpp:408] pool1 <- conv1
I0428 20:09:36.279654 31657 net.cpp:382] pool1 -> pool1
I0428 20:09:36.279708 31657 net.cpp:124] Setting up pool1
I0428 20:09:36.279717 31657 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:36.279721 31657 net.cpp:139] Memory required for data: 5320960
I0428 20:09:36.279723 31657 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:36.279731 31657 net.cpp:86] Creating Layer ip1
I0428 20:09:36.279734 31657 net.cpp:408] ip1 <- pool1
I0428 20:09:36.279739 31657 net.cpp:382] ip1 -> ip1
I0428 20:09:36.279901 31657 net.cpp:124] Setting up ip1
I0428 20:09:36.279909 31657 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:36.279927 31657 net.cpp:139] Memory required for data: 5327360
I0428 20:09:36.279935 31657 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:36.279943 31657 net.cpp:86] Creating Layer relu1
I0428 20:09:36.279947 31657 net.cpp:408] relu1 <- ip1
I0428 20:09:36.279952 31657 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:36.280118 31657 net.cpp:124] Setting up relu1
I0428 20:09:36.280128 31657 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:36.280130 31657 net.cpp:139] Memory required for data: 5333760
I0428 20:09:36.280134 31657 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:36.280140 31657 net.cpp:86] Creating Layer ip2
I0428 20:09:36.280145 31657 net.cpp:408] ip2 <- ip1
I0428 20:09:36.280150 31657 net.cpp:382] ip2 -> ip2
I0428 20:09:36.280258 31657 net.cpp:124] Setting up ip2
I0428 20:09:36.280267 31657 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:36.280269 31657 net.cpp:139] Memory required for data: 5336320
I0428 20:09:36.280275 31657 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:36.280280 31657 net.cpp:86] Creating Layer relu2
I0428 20:09:36.280284 31657 net.cpp:408] relu2 <- ip2
I0428 20:09:36.280288 31657 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:36.281046 31657 net.cpp:124] Setting up relu2
I0428 20:09:36.281059 31657 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:36.281064 31657 net.cpp:139] Memory required for data: 5338880
I0428 20:09:36.281067 31657 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:36.281075 31657 net.cpp:86] Creating Layer ip3
I0428 20:09:36.281082 31657 net.cpp:408] ip3 <- ip2
I0428 20:09:36.281088 31657 net.cpp:382] ip3 -> ip3
I0428 20:09:36.281193 31657 net.cpp:124] Setting up ip3
I0428 20:09:36.281201 31657 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:36.281204 31657 net.cpp:139] Memory required for data: 5341440
I0428 20:09:36.281213 31657 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:36.281221 31657 net.cpp:86] Creating Layer relu3
I0428 20:09:36.281240 31657 net.cpp:408] relu3 <- ip3
I0428 20:09:36.281245 31657 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:36.281425 31657 net.cpp:124] Setting up relu3
I0428 20:09:36.281448 31657 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:36.281451 31657 net.cpp:139] Memory required for data: 5344000
I0428 20:09:36.281455 31657 layer_factory.hpp:77] Creating layer loss
I0428 20:09:36.281461 31657 net.cpp:86] Creating Layer loss
I0428 20:09:36.281464 31657 net.cpp:408] loss <- ip3
I0428 20:09:36.281469 31657 net.cpp:408] loss <- label
I0428 20:09:36.281476 31657 net.cpp:382] loss -> loss
I0428 20:09:36.281505 31657 layer_factory.hpp:77] Creating layer loss
I0428 20:09:36.281734 31657 net.cpp:124] Setting up loss
I0428 20:09:36.281744 31657 net.cpp:131] Top shape: (1)
I0428 20:09:36.281747 31657 net.cpp:134]     with loss weight 1
I0428 20:09:36.281779 31657 net.cpp:139] Memory required for data: 5344004
I0428 20:09:36.281782 31657 net.cpp:200] loss needs backward computation.
I0428 20:09:36.281802 31657 net.cpp:200] relu3 needs backward computation.
I0428 20:09:36.281805 31657 net.cpp:200] ip3 needs backward computation.
I0428 20:09:36.281808 31657 net.cpp:200] relu2 needs backward computation.
I0428 20:09:36.281822 31657 net.cpp:200] ip2 needs backward computation.
I0428 20:09:36.281826 31657 net.cpp:200] relu1 needs backward computation.
I0428 20:09:36.281829 31657 net.cpp:200] ip1 needs backward computation.
I0428 20:09:36.281832 31657 net.cpp:200] pool1 needs backward computation.
I0428 20:09:36.281836 31657 net.cpp:200] conv1 needs backward computation.
I0428 20:09:36.281839 31657 net.cpp:200] pool0 needs backward computation.
I0428 20:09:36.281846 31657 net.cpp:200] conv0 needs backward computation.
I0428 20:09:36.281849 31657 net.cpp:202] mnist does not need backward computation.
I0428 20:09:36.281868 31657 net.cpp:244] This network produces output loss
I0428 20:09:36.281878 31657 net.cpp:257] Network initialization done.
I0428 20:09:36.282254 31657 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1113.prototxt
I0428 20:09:36.282299 31657 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:36.282392 31657 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:36.282474 31657 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:36.282519 31657 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:36.282534 31657 net.cpp:86] Creating Layer mnist
I0428 20:09:36.282541 31657 net.cpp:382] mnist -> data
I0428 20:09:36.282551 31657 net.cpp:382] mnist -> label
I0428 20:09:36.282650 31657 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:36.285058 31657 net.cpp:124] Setting up mnist
I0428 20:09:36.285073 31657 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:36.285079 31657 net.cpp:131] Top shape: 100 (100)
I0428 20:09:36.285082 31657 net.cpp:139] Memory required for data: 314000
I0428 20:09:36.285086 31657 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:36.285094 31657 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:36.285099 31657 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:36.285104 31657 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:36.285111 31657 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:36.285198 31657 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:36.285207 31657 net.cpp:131] Top shape: 100 (100)
I0428 20:09:36.285210 31657 net.cpp:131] Top shape: 100 (100)
I0428 20:09:36.285215 31657 net.cpp:139] Memory required for data: 314800
I0428 20:09:36.285219 31657 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:36.285228 31657 net.cpp:86] Creating Layer conv0
I0428 20:09:36.285233 31657 net.cpp:408] conv0 <- data
I0428 20:09:36.285238 31657 net.cpp:382] conv0 -> conv0
I0428 20:09:36.286945 31657 net.cpp:124] Setting up conv0
I0428 20:09:36.286974 31657 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:36.286978 31657 net.cpp:139] Memory required for data: 6074800
I0428 20:09:36.286988 31657 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:36.286993 31657 net.cpp:86] Creating Layer pool0
I0428 20:09:36.286998 31657 net.cpp:408] pool0 <- conv0
I0428 20:09:36.287003 31657 net.cpp:382] pool0 -> pool0
I0428 20:09:36.287039 31657 net.cpp:124] Setting up pool0
I0428 20:09:36.287045 31657 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:36.287048 31657 net.cpp:139] Memory required for data: 7514800
I0428 20:09:36.287051 31657 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:36.287060 31657 net.cpp:86] Creating Layer conv1
I0428 20:09:36.287065 31657 net.cpp:408] conv1 <- pool0
I0428 20:09:36.287070 31657 net.cpp:382] conv1 -> conv1
I0428 20:09:36.289439 31657 net.cpp:124] Setting up conv1
I0428 20:09:36.289453 31657 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:36.289476 31657 net.cpp:139] Memory required for data: 8154800
I0428 20:09:36.289485 31657 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:36.289492 31657 net.cpp:86] Creating Layer pool1
I0428 20:09:36.289496 31657 net.cpp:408] pool1 <- conv1
I0428 20:09:36.289501 31657 net.cpp:382] pool1 -> pool1
I0428 20:09:36.289556 31657 net.cpp:124] Setting up pool1
I0428 20:09:36.289564 31657 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:36.289568 31657 net.cpp:139] Memory required for data: 8314800
I0428 20:09:36.289572 31657 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:36.289578 31657 net.cpp:86] Creating Layer ip1
I0428 20:09:36.289582 31657 net.cpp:408] ip1 <- pool1
I0428 20:09:36.289587 31657 net.cpp:382] ip1 -> ip1
I0428 20:09:36.289805 31657 net.cpp:124] Setting up ip1
I0428 20:09:36.289813 31657 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:36.289836 31657 net.cpp:139] Memory required for data: 8324800
I0428 20:09:36.289845 31657 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:36.289850 31657 net.cpp:86] Creating Layer relu1
I0428 20:09:36.289855 31657 net.cpp:408] relu1 <- ip1
I0428 20:09:36.289860 31657 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:36.290086 31657 net.cpp:124] Setting up relu1
I0428 20:09:36.290097 31657 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:36.290102 31657 net.cpp:139] Memory required for data: 8334800
I0428 20:09:36.290105 31657 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:36.290129 31657 net.cpp:86] Creating Layer ip2
I0428 20:09:36.290143 31657 net.cpp:408] ip2 <- ip1
I0428 20:09:36.290148 31657 net.cpp:382] ip2 -> ip2
I0428 20:09:36.290254 31657 net.cpp:124] Setting up ip2
I0428 20:09:36.290262 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.290266 31657 net.cpp:139] Memory required for data: 8338800
I0428 20:09:36.290271 31657 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:36.290277 31657 net.cpp:86] Creating Layer relu2
I0428 20:09:36.290279 31657 net.cpp:408] relu2 <- ip2
I0428 20:09:36.290284 31657 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:36.290462 31657 net.cpp:124] Setting up relu2
I0428 20:09:36.290470 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.290473 31657 net.cpp:139] Memory required for data: 8342800
I0428 20:09:36.290477 31657 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:36.290482 31657 net.cpp:86] Creating Layer ip3
I0428 20:09:36.290503 31657 net.cpp:408] ip3 <- ip2
I0428 20:09:36.290518 31657 net.cpp:382] ip3 -> ip3
I0428 20:09:36.290632 31657 net.cpp:124] Setting up ip3
I0428 20:09:36.290640 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.290644 31657 net.cpp:139] Memory required for data: 8346800
I0428 20:09:36.290653 31657 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:36.290659 31657 net.cpp:86] Creating Layer relu3
I0428 20:09:36.290663 31657 net.cpp:408] relu3 <- ip3
I0428 20:09:36.290668 31657 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:36.291503 31657 net.cpp:124] Setting up relu3
I0428 20:09:36.291514 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.291529 31657 net.cpp:139] Memory required for data: 8350800
I0428 20:09:36.291533 31657 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:36.291538 31657 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:36.291543 31657 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:36.291548 31657 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:36.291554 31657 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:36.291656 31657 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:36.291663 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.291667 31657 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:36.291671 31657 net.cpp:139] Memory required for data: 8358800
I0428 20:09:36.291673 31657 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:36.291684 31657 net.cpp:86] Creating Layer accuracy
I0428 20:09:36.291690 31657 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:36.291694 31657 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:36.291700 31657 net.cpp:382] accuracy -> accuracy
I0428 20:09:36.291708 31657 net.cpp:124] Setting up accuracy
I0428 20:09:36.291712 31657 net.cpp:131] Top shape: (1)
I0428 20:09:36.291715 31657 net.cpp:139] Memory required for data: 8358804
I0428 20:09:36.291718 31657 layer_factory.hpp:77] Creating layer loss
I0428 20:09:36.291723 31657 net.cpp:86] Creating Layer loss
I0428 20:09:36.291744 31657 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:36.291749 31657 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:36.291754 31657 net.cpp:382] loss -> loss
I0428 20:09:36.291760 31657 layer_factory.hpp:77] Creating layer loss
I0428 20:09:36.292016 31657 net.cpp:124] Setting up loss
I0428 20:09:36.292026 31657 net.cpp:131] Top shape: (1)
I0428 20:09:36.292031 31657 net.cpp:134]     with loss weight 1
I0428 20:09:36.292064 31657 net.cpp:139] Memory required for data: 8358808
I0428 20:09:36.292068 31657 net.cpp:200] loss needs backward computation.
I0428 20:09:36.292073 31657 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:36.292078 31657 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:36.292083 31657 net.cpp:200] relu3 needs backward computation.
I0428 20:09:36.292085 31657 net.cpp:200] ip3 needs backward computation.
I0428 20:09:36.292105 31657 net.cpp:200] relu2 needs backward computation.
I0428 20:09:36.292109 31657 net.cpp:200] ip2 needs backward computation.
I0428 20:09:36.292114 31657 net.cpp:200] relu1 needs backward computation.
I0428 20:09:36.292116 31657 net.cpp:200] ip1 needs backward computation.
I0428 20:09:36.292121 31657 net.cpp:200] pool1 needs backward computation.
I0428 20:09:36.292124 31657 net.cpp:200] conv1 needs backward computation.
I0428 20:09:36.292129 31657 net.cpp:200] pool0 needs backward computation.
I0428 20:09:36.292132 31657 net.cpp:200] conv0 needs backward computation.
I0428 20:09:36.292137 31657 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:36.292141 31657 net.cpp:202] mnist does not need backward computation.
I0428 20:09:36.292145 31657 net.cpp:244] This network produces output accuracy
I0428 20:09:36.292148 31657 net.cpp:244] This network produces output loss
I0428 20:09:36.292160 31657 net.cpp:257] Network initialization done.
I0428 20:09:36.292207 31657 solver.cpp:56] Solver scaffolding done.
I0428 20:09:36.292600 31657 caffe.cpp:248] Starting Optimization
I0428 20:09:36.292608 31657 solver.cpp:273] Solving LeNet
I0428 20:09:36.292610 31657 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:36.293468 31657 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:36.299509 31657 blocking_queue.cpp:49] Waiting for data
I0428 20:09:36.369834 31664 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:36.370473 31657 solver.cpp:398]     Test net output #0: accuracy = 0.1283
I0428 20:09:36.370508 31657 solver.cpp:398]     Test net output #1: loss = 2.32156 (* 1 = 2.32156 loss)
I0428 20:09:36.374241 31657 solver.cpp:219] Iteration 0 (0 iter/s, 0.0816036s/100 iters), loss = 2.32768
I0428 20:09:36.374295 31657 solver.cpp:238]     Train net output #0: loss = 2.32768 (* 1 = 2.32768 loss)
I0428 20:09:36.374307 31657 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:36.482467 31657 solver.cpp:219] Iteration 100 (924.442 iter/s, 0.108173s/100 iters), loss = 0.427066
I0428 20:09:36.482499 31657 solver.cpp:238]     Train net output #0: loss = 0.427066 (* 1 = 0.427066 loss)
I0428 20:09:36.482506 31657 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:36.585160 31657 solver.cpp:219] Iteration 200 (974.176 iter/s, 0.102651s/100 iters), loss = 0.257829
I0428 20:09:36.585185 31657 solver.cpp:238]     Train net output #0: loss = 0.257829 (* 1 = 0.257829 loss)
I0428 20:09:36.585206 31657 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:36.690554 31657 solver.cpp:219] Iteration 300 (949.133 iter/s, 0.105359s/100 iters), loss = 0.321008
I0428 20:09:36.690595 31657 solver.cpp:238]     Train net output #0: loss = 0.321008 (* 1 = 0.321008 loss)
I0428 20:09:36.690603 31657 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:36.793884 31657 solver.cpp:219] Iteration 400 (968.111 iter/s, 0.103294s/100 iters), loss = 0.125803
I0428 20:09:36.793923 31657 solver.cpp:238]     Train net output #0: loss = 0.125803 (* 1 = 0.125803 loss)
I0428 20:09:36.793944 31657 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:36.890743 31657 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:36.967213 31664 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:36.967852 31657 solver.cpp:398]     Test net output #0: accuracy = 0.9536
I0428 20:09:36.967890 31657 solver.cpp:398]     Test net output #1: loss = 0.153067 (* 1 = 0.153067 loss)
I0428 20:09:36.969002 31657 solver.cpp:219] Iteration 500 (571.166 iter/s, 0.17508s/100 iters), loss = 0.120017
I0428 20:09:36.969058 31657 solver.cpp:238]     Train net output #0: loss = 0.120017 (* 1 = 0.120017 loss)
I0428 20:09:36.969069 31657 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:37.075572 31657 solver.cpp:219] Iteration 600 (938.918 iter/s, 0.106506s/100 iters), loss = 0.111356
I0428 20:09:37.075613 31657 solver.cpp:238]     Train net output #0: loss = 0.111356 (* 1 = 0.111356 loss)
I0428 20:09:37.075619 31657 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:37.183799 31657 solver.cpp:219] Iteration 700 (924.416 iter/s, 0.108176s/100 iters), loss = 0.193989
I0428 20:09:37.183838 31657 solver.cpp:238]     Train net output #0: loss = 0.193989 (* 1 = 0.193989 loss)
I0428 20:09:37.183845 31657 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:37.287911 31657 solver.cpp:219] Iteration 800 (960.985 iter/s, 0.10406s/100 iters), loss = 0.285599
I0428 20:09:37.287962 31657 solver.cpp:238]     Train net output #0: loss = 0.285599 (* 1 = 0.285599 loss)
I0428 20:09:37.287973 31657 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:37.396031 31657 solver.cpp:219] Iteration 900 (925.318 iter/s, 0.108071s/100 iters), loss = 0.179036
I0428 20:09:37.396072 31657 solver.cpp:238]     Train net output #0: loss = 0.179036 (* 1 = 0.179036 loss)
I0428 20:09:37.396080 31657 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:37.432119 31663 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:37.500679 31657 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:37.502418 31657 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:37.503419 31657 solver.cpp:311] Iteration 1000, loss = 0.138923
I0428 20:09:37.503453 31657 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:37.566859 31664 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:37.568938 31657 solver.cpp:398]     Test net output #0: accuracy = 0.9733
I0428 20:09:37.568964 31657 solver.cpp:398]     Test net output #1: loss = 0.0836708 (* 1 = 0.0836708 loss)
I0428 20:09:37.568971 31657 solver.cpp:316] Optimization Done.
I0428 20:09:37.568976 31657 caffe.cpp:259] Optimization Done.
