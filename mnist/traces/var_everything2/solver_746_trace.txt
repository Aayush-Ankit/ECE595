I0428 19:56:00.574462 28326 caffe.cpp:218] Using GPUs 0
I0428 19:56:00.603981 28326 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:01.052780 28326 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test746.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:01.052986 28326 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test746.prototxt
I0428 19:56:01.053513 28326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:01.053550 28326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:01.053685 28326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:01.053781 28326 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:01.053900 28326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:01.053930 28326 net.cpp:86] Creating Layer mnist
I0428 19:56:01.053958 28326 net.cpp:382] mnist -> data
I0428 19:56:01.053983 28326 net.cpp:382] mnist -> label
I0428 19:56:01.055423 28326 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:01.057991 28326 net.cpp:124] Setting up mnist
I0428 19:56:01.058025 28326 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:01.058035 28326 net.cpp:131] Top shape: 64 (64)
I0428 19:56:01.058040 28326 net.cpp:139] Memory required for data: 200960
I0428 19:56:01.058048 28326 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:01.058066 28326 net.cpp:86] Creating Layer conv0
I0428 19:56:01.058073 28326 net.cpp:408] conv0 <- data
I0428 19:56:01.058087 28326 net.cpp:382] conv0 -> conv0
I0428 19:56:01.281718 28326 net.cpp:124] Setting up conv0
I0428 19:56:01.281743 28326 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:01.281745 28326 net.cpp:139] Memory required for data: 1675520
I0428 19:56:01.281776 28326 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:01.281790 28326 net.cpp:86] Creating Layer pool0
I0428 19:56:01.281792 28326 net.cpp:408] pool0 <- conv0
I0428 19:56:01.281800 28326 net.cpp:382] pool0 -> pool0
I0428 19:56:01.281854 28326 net.cpp:124] Setting up pool0
I0428 19:56:01.281862 28326 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:01.281867 28326 net.cpp:139] Memory required for data: 2044160
I0428 19:56:01.281872 28326 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:01.281885 28326 net.cpp:86] Creating Layer conv1
I0428 19:56:01.281889 28326 net.cpp:408] conv1 <- pool0
I0428 19:56:01.281898 28326 net.cpp:382] conv1 -> conv1
I0428 19:56:01.284171 28326 net.cpp:124] Setting up conv1
I0428 19:56:01.284201 28326 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:01.284204 28326 net.cpp:139] Memory required for data: 2076928
I0428 19:56:01.284214 28326 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:01.284220 28326 net.cpp:86] Creating Layer pool1
I0428 19:56:01.284240 28326 net.cpp:408] pool1 <- conv1
I0428 19:56:01.284246 28326 net.cpp:382] pool1 -> pool1
I0428 19:56:01.284299 28326 net.cpp:124] Setting up pool1
I0428 19:56:01.284325 28326 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:01.284330 28326 net.cpp:139] Memory required for data: 2085120
I0428 19:56:01.284337 28326 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:01.284346 28326 net.cpp:86] Creating Layer ip1
I0428 19:56:01.284353 28326 net.cpp:408] ip1 <- pool1
I0428 19:56:01.284360 28326 net.cpp:382] ip1 -> ip1
I0428 19:56:01.284492 28326 net.cpp:124] Setting up ip1
I0428 19:56:01.284503 28326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:01.284508 28326 net.cpp:139] Memory required for data: 2087680
I0428 19:56:01.284520 28326 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:01.284528 28326 net.cpp:86] Creating Layer relu1
I0428 19:56:01.284551 28326 net.cpp:408] relu1 <- ip1
I0428 19:56:01.284559 28326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:01.284806 28326 net.cpp:124] Setting up relu1
I0428 19:56:01.284843 28326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:01.284849 28326 net.cpp:139] Memory required for data: 2090240
I0428 19:56:01.284854 28326 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:01.284878 28326 net.cpp:86] Creating Layer ip2
I0428 19:56:01.284883 28326 net.cpp:408] ip2 <- ip1
I0428 19:56:01.284905 28326 net.cpp:382] ip2 -> ip2
I0428 19:56:01.285040 28326 net.cpp:124] Setting up ip2
I0428 19:56:01.285053 28326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:01.285058 28326 net.cpp:139] Memory required for data: 2092800
I0428 19:56:01.285066 28326 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:01.285078 28326 net.cpp:86] Creating Layer relu2
I0428 19:56:01.285082 28326 net.cpp:408] relu2 <- ip2
I0428 19:56:01.285089 28326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:01.286201 28326 net.cpp:124] Setting up relu2
I0428 19:56:01.286231 28326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:01.286237 28326 net.cpp:139] Memory required for data: 2095360
I0428 19:56:01.286242 28326 layer_factory.hpp:77] Creating layer loss
I0428 19:56:01.286250 28326 net.cpp:86] Creating Layer loss
I0428 19:56:01.286255 28326 net.cpp:408] loss <- ip2
I0428 19:56:01.286278 28326 net.cpp:408] loss <- label
I0428 19:56:01.286285 28326 net.cpp:382] loss -> loss
I0428 19:56:01.286311 28326 layer_factory.hpp:77] Creating layer loss
I0428 19:56:01.286686 28326 net.cpp:124] Setting up loss
I0428 19:56:01.286700 28326 net.cpp:131] Top shape: (1)
I0428 19:56:01.286718 28326 net.cpp:134]     with loss weight 1
I0428 19:56:01.286751 28326 net.cpp:139] Memory required for data: 2095364
I0428 19:56:01.286757 28326 net.cpp:200] loss needs backward computation.
I0428 19:56:01.286762 28326 net.cpp:200] relu2 needs backward computation.
I0428 19:56:01.286767 28326 net.cpp:200] ip2 needs backward computation.
I0428 19:56:01.286772 28326 net.cpp:200] relu1 needs backward computation.
I0428 19:56:01.286777 28326 net.cpp:200] ip1 needs backward computation.
I0428 19:56:01.286793 28326 net.cpp:200] pool1 needs backward computation.
I0428 19:56:01.286798 28326 net.cpp:200] conv1 needs backward computation.
I0428 19:56:01.286803 28326 net.cpp:200] pool0 needs backward computation.
I0428 19:56:01.286808 28326 net.cpp:200] conv0 needs backward computation.
I0428 19:56:01.286814 28326 net.cpp:202] mnist does not need backward computation.
I0428 19:56:01.286818 28326 net.cpp:244] This network produces output loss
I0428 19:56:01.286831 28326 net.cpp:257] Network initialization done.
I0428 19:56:01.287319 28326 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test746.prototxt
I0428 19:56:01.287386 28326 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:01.287513 28326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:56:01.287621 28326 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:01.287673 28326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:01.287701 28326 net.cpp:86] Creating Layer mnist
I0428 19:56:01.287709 28326 net.cpp:382] mnist -> data
I0428 19:56:01.287721 28326 net.cpp:382] mnist -> label
I0428 19:56:01.287884 28326 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:01.290591 28326 net.cpp:124] Setting up mnist
I0428 19:56:01.290637 28326 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:01.290642 28326 net.cpp:131] Top shape: 100 (100)
I0428 19:56:01.290645 28326 net.cpp:139] Memory required for data: 314000
I0428 19:56:01.290649 28326 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:01.290675 28326 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:01.290679 28326 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:01.290700 28326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:01.290712 28326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:01.290858 28326 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:01.290882 28326 net.cpp:131] Top shape: 100 (100)
I0428 19:56:01.290889 28326 net.cpp:131] Top shape: 100 (100)
I0428 19:56:01.290895 28326 net.cpp:139] Memory required for data: 314800
I0428 19:56:01.290900 28326 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:01.290915 28326 net.cpp:86] Creating Layer conv0
I0428 19:56:01.290920 28326 net.cpp:408] conv0 <- data
I0428 19:56:01.290930 28326 net.cpp:382] conv0 -> conv0
I0428 19:56:01.293085 28326 net.cpp:124] Setting up conv0
I0428 19:56:01.293114 28326 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:01.293124 28326 net.cpp:139] Memory required for data: 2618800
I0428 19:56:01.293133 28326 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:01.293140 28326 net.cpp:86] Creating Layer pool0
I0428 19:56:01.293143 28326 net.cpp:408] pool0 <- conv0
I0428 19:56:01.293148 28326 net.cpp:382] pool0 -> pool0
I0428 19:56:01.293202 28326 net.cpp:124] Setting up pool0
I0428 19:56:01.293220 28326 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:01.293225 28326 net.cpp:139] Memory required for data: 3194800
I0428 19:56:01.293228 28326 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:01.293247 28326 net.cpp:86] Creating Layer conv1
I0428 19:56:01.293253 28326 net.cpp:408] conv1 <- pool0
I0428 19:56:01.293262 28326 net.cpp:382] conv1 -> conv1
I0428 19:56:01.295822 28326 net.cpp:124] Setting up conv1
I0428 19:56:01.295850 28326 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:01.295868 28326 net.cpp:139] Memory required for data: 3246000
I0428 19:56:01.295877 28326 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:01.295886 28326 net.cpp:86] Creating Layer pool1
I0428 19:56:01.295888 28326 net.cpp:408] pool1 <- conv1
I0428 19:56:01.295893 28326 net.cpp:382] pool1 -> pool1
I0428 19:56:01.295958 28326 net.cpp:124] Setting up pool1
I0428 19:56:01.295976 28326 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:01.295981 28326 net.cpp:139] Memory required for data: 3258800
I0428 19:56:01.295986 28326 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:01.295995 28326 net.cpp:86] Creating Layer ip1
I0428 19:56:01.296000 28326 net.cpp:408] ip1 <- pool1
I0428 19:56:01.296010 28326 net.cpp:382] ip1 -> ip1
I0428 19:56:01.296174 28326 net.cpp:124] Setting up ip1
I0428 19:56:01.296185 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.296190 28326 net.cpp:139] Memory required for data: 3262800
I0428 19:56:01.296201 28326 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:01.296210 28326 net.cpp:86] Creating Layer relu1
I0428 19:56:01.296214 28326 net.cpp:408] relu1 <- ip1
I0428 19:56:01.296222 28326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:01.296519 28326 net.cpp:124] Setting up relu1
I0428 19:56:01.296545 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.296564 28326 net.cpp:139] Memory required for data: 3266800
I0428 19:56:01.296569 28326 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:01.296581 28326 net.cpp:86] Creating Layer ip2
I0428 19:56:01.296586 28326 net.cpp:408] ip2 <- ip1
I0428 19:56:01.296594 28326 net.cpp:382] ip2 -> ip2
I0428 19:56:01.296797 28326 net.cpp:124] Setting up ip2
I0428 19:56:01.296818 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.296826 28326 net.cpp:139] Memory required for data: 3270800
I0428 19:56:01.296836 28326 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:01.296847 28326 net.cpp:86] Creating Layer relu2
I0428 19:56:01.296854 28326 net.cpp:408] relu2 <- ip2
I0428 19:56:01.296861 28326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:01.297148 28326 net.cpp:124] Setting up relu2
I0428 19:56:01.297174 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.297179 28326 net.cpp:139] Memory required for data: 3274800
I0428 19:56:01.297199 28326 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:56:01.297209 28326 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:56:01.297214 28326 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:56:01.297220 28326 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:56:01.297240 28326 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:56:01.297291 28326 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:56:01.297309 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.297315 28326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:01.297319 28326 net.cpp:139] Memory required for data: 3282800
I0428 19:56:01.297333 28326 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:01.297339 28326 net.cpp:86] Creating Layer accuracy
I0428 19:56:01.297345 28326 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:56:01.297351 28326 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:01.297359 28326 net.cpp:382] accuracy -> accuracy
I0428 19:56:01.297369 28326 net.cpp:124] Setting up accuracy
I0428 19:56:01.297375 28326 net.cpp:131] Top shape: (1)
I0428 19:56:01.297380 28326 net.cpp:139] Memory required for data: 3282804
I0428 19:56:01.297385 28326 layer_factory.hpp:77] Creating layer loss
I0428 19:56:01.297392 28326 net.cpp:86] Creating Layer loss
I0428 19:56:01.297396 28326 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:56:01.297402 28326 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:01.297410 28326 net.cpp:382] loss -> loss
I0428 19:56:01.297420 28326 layer_factory.hpp:77] Creating layer loss
I0428 19:56:01.297857 28326 net.cpp:124] Setting up loss
I0428 19:56:01.297885 28326 net.cpp:131] Top shape: (1)
I0428 19:56:01.297890 28326 net.cpp:134]     with loss weight 1
I0428 19:56:01.297899 28326 net.cpp:139] Memory required for data: 3282808
I0428 19:56:01.297904 28326 net.cpp:200] loss needs backward computation.
I0428 19:56:01.297910 28326 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:01.297916 28326 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:56:01.297921 28326 net.cpp:200] relu2 needs backward computation.
I0428 19:56:01.297926 28326 net.cpp:200] ip2 needs backward computation.
I0428 19:56:01.297930 28326 net.cpp:200] relu1 needs backward computation.
I0428 19:56:01.297935 28326 net.cpp:200] ip1 needs backward computation.
I0428 19:56:01.297956 28326 net.cpp:200] pool1 needs backward computation.
I0428 19:56:01.297961 28326 net.cpp:200] conv1 needs backward computation.
I0428 19:56:01.297966 28326 net.cpp:200] pool0 needs backward computation.
I0428 19:56:01.297972 28326 net.cpp:200] conv0 needs backward computation.
I0428 19:56:01.297978 28326 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:01.297984 28326 net.cpp:202] mnist does not need backward computation.
I0428 19:56:01.297988 28326 net.cpp:244] This network produces output accuracy
I0428 19:56:01.297994 28326 net.cpp:244] This network produces output loss
I0428 19:56:01.298012 28326 net.cpp:257] Network initialization done.
I0428 19:56:01.298091 28326 solver.cpp:56] Solver scaffolding done.
I0428 19:56:01.298508 28326 caffe.cpp:248] Starting Optimization
I0428 19:56:01.298516 28326 solver.cpp:273] Solving LeNet
I0428 19:56:01.298537 28326 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:01.299649 28326 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:01.303541 28326 blocking_queue.cpp:49] Waiting for data
I0428 19:56:01.374367 28333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:01.374963 28326 solver.cpp:398]     Test net output #0: accuracy = 0.1225
I0428 19:56:01.375005 28326 solver.cpp:398]     Test net output #1: loss = 2.31612 (* 1 = 2.31612 loss)
I0428 19:56:01.377701 28326 solver.cpp:219] Iteration 0 (0 iter/s, 0.0791286s/100 iters), loss = 2.32256
I0428 19:56:01.377739 28326 solver.cpp:238]     Train net output #0: loss = 2.32256 (* 1 = 2.32256 loss)
I0428 19:56:01.377750 28326 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:01.446693 28326 solver.cpp:219] Iteration 100 (1450.48 iter/s, 0.0689428s/100 iters), loss = 1.43055
I0428 19:56:01.446732 28326 solver.cpp:238]     Train net output #0: loss = 1.43055 (* 1 = 1.43055 loss)
I0428 19:56:01.446754 28326 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:01.515913 28326 solver.cpp:219] Iteration 200 (1445.65 iter/s, 0.0691731s/100 iters), loss = 1.43247
I0428 19:56:01.515951 28326 solver.cpp:238]     Train net output #0: loss = 1.43247 (* 1 = 1.43247 loss)
I0428 19:56:01.515957 28326 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:01.585034 28326 solver.cpp:219] Iteration 300 (1447.7 iter/s, 0.0690749s/100 iters), loss = 1.26546
I0428 19:56:01.585074 28326 solver.cpp:238]     Train net output #0: loss = 1.26546 (* 1 = 1.26546 loss)
I0428 19:56:01.585080 28326 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:01.653730 28326 solver.cpp:219] Iteration 400 (1456.71 iter/s, 0.0686479s/100 iters), loss = 0.993168
I0428 19:56:01.653770 28326 solver.cpp:238]     Train net output #0: loss = 0.993168 (* 1 = 0.993168 loss)
I0428 19:56:01.653776 28326 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:01.721585 28326 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:01.774806 28333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:01.775385 28326 solver.cpp:398]     Test net output #0: accuracy = 0.5735
I0428 19:56:01.775425 28326 solver.cpp:398]     Test net output #1: loss = 1.13561 (* 1 = 1.13561 loss)
I0428 19:56:01.776396 28326 solver.cpp:219] Iteration 500 (815.475 iter/s, 0.122628s/100 iters), loss = 1.1308
I0428 19:56:01.776448 28326 solver.cpp:238]     Train net output #0: loss = 1.1308 (* 1 = 1.1308 loss)
I0428 19:56:01.776461 28326 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:01.852923 28326 solver.cpp:219] Iteration 600 (1307.72 iter/s, 0.076469s/100 iters), loss = 1.01746
I0428 19:56:01.852962 28326 solver.cpp:238]     Train net output #0: loss = 1.01746 (* 1 = 1.01746 loss)
I0428 19:56:01.852968 28326 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:01.921567 28326 solver.cpp:219] Iteration 700 (1457.47 iter/s, 0.0686121s/100 iters), loss = 1.3233
I0428 19:56:01.921607 28326 solver.cpp:238]     Train net output #0: loss = 1.3233 (* 1 = 1.3233 loss)
I0428 19:56:01.921612 28326 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:01.989907 28326 solver.cpp:219] Iteration 800 (1463.98 iter/s, 0.0683069s/100 iters), loss = 1.21511
I0428 19:56:01.989945 28326 solver.cpp:238]     Train net output #0: loss = 1.21511 (* 1 = 1.21511 loss)
I0428 19:56:01.989951 28326 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:02.058302 28326 solver.cpp:219] Iteration 900 (1462.75 iter/s, 0.0683643s/100 iters), loss = 0.938294
I0428 19:56:02.058356 28326 solver.cpp:238]     Train net output #0: loss = 0.938294 (* 1 = 0.938294 loss)
I0428 19:56:02.058362 28326 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:02.081746 28332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:02.127068 28326 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:02.127717 28326 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:02.128167 28326 solver.cpp:311] Iteration 1000, loss = 1.12281
I0428 19:56:02.128197 28326 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:02.204236 28333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:02.204883 28326 solver.cpp:398]     Test net output #0: accuracy = 0.6593
I0428 19:56:02.204911 28326 solver.cpp:398]     Test net output #1: loss = 0.943781 (* 1 = 0.943781 loss)
I0428 19:56:02.204921 28326 solver.cpp:316] Optimization Done.
I0428 19:56:02.204926 28326 caffe.cpp:259] Optimization Done.
