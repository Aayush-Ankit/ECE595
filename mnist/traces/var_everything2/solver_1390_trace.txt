I0428 20:21:43.692956  1817 caffe.cpp:218] Using GPUs 0
I0428 20:21:43.721963  1817 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:44.176404  1817 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1390.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:44.176553  1817 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1390.prototxt
I0428 20:21:44.176972  1817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:44.177004  1817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:44.177096  1817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:44.177170  1817 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:44.177292  1817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:44.177315  1817 net.cpp:86] Creating Layer mnist
I0428 20:21:44.177322  1817 net.cpp:382] mnist -> data
I0428 20:21:44.177340  1817 net.cpp:382] mnist -> label
I0428 20:21:44.178283  1817 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:44.180536  1817 net.cpp:124] Setting up mnist
I0428 20:21:44.180568  1817 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:44.180575  1817 net.cpp:131] Top shape: 64 (64)
I0428 20:21:44.180578  1817 net.cpp:139] Memory required for data: 200960
I0428 20:21:44.180585  1817 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:44.180603  1817 net.cpp:86] Creating Layer conv0
I0428 20:21:44.180634  1817 net.cpp:408] conv0 <- data
I0428 20:21:44.180645  1817 net.cpp:382] conv0 -> conv0
I0428 20:21:44.421598  1817 net.cpp:124] Setting up conv0
I0428 20:21:44.421641  1817 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:44.421645  1817 net.cpp:139] Memory required for data: 7573760
I0428 20:21:44.421675  1817 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:44.421689  1817 net.cpp:86] Creating Layer pool0
I0428 20:21:44.421694  1817 net.cpp:408] pool0 <- conv0
I0428 20:21:44.421713  1817 net.cpp:382] pool0 -> pool0
I0428 20:21:44.421779  1817 net.cpp:124] Setting up pool0
I0428 20:21:44.421792  1817 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:44.421795  1817 net.cpp:139] Memory required for data: 9416960
I0428 20:21:44.421799  1817 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:44.421809  1817 net.cpp:86] Creating Layer conv1
I0428 20:21:44.421813  1817 net.cpp:408] conv1 <- pool0
I0428 20:21:44.421818  1817 net.cpp:382] conv1 -> conv1
I0428 20:21:44.424173  1817 net.cpp:124] Setting up conv1
I0428 20:21:44.424204  1817 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:44.424208  1817 net.cpp:139] Memory required for data: 10236160
I0428 20:21:44.424216  1817 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:44.424240  1817 net.cpp:86] Creating Layer pool1
I0428 20:21:44.424243  1817 net.cpp:408] pool1 <- conv1
I0428 20:21:44.424249  1817 net.cpp:382] pool1 -> pool1
I0428 20:21:44.424300  1817 net.cpp:124] Setting up pool1
I0428 20:21:44.424306  1817 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:44.424309  1817 net.cpp:139] Memory required for data: 10440960
I0428 20:21:44.424311  1817 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:44.424319  1817 net.cpp:86] Creating Layer ip1
I0428 20:21:44.424322  1817 net.cpp:408] ip1 <- pool1
I0428 20:21:44.424327  1817 net.cpp:382] ip1 -> ip1
I0428 20:21:44.424540  1817 net.cpp:124] Setting up ip1
I0428 20:21:44.424546  1817 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:44.424551  1817 net.cpp:139] Memory required for data: 10447360
I0428 20:21:44.424557  1817 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:44.424563  1817 net.cpp:86] Creating Layer relu1
I0428 20:21:44.424567  1817 net.cpp:408] relu1 <- ip1
I0428 20:21:44.424571  1817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:44.424760  1817 net.cpp:124] Setting up relu1
I0428 20:21:44.424770  1817 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:44.424773  1817 net.cpp:139] Memory required for data: 10453760
I0428 20:21:44.424777  1817 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:44.424783  1817 net.cpp:86] Creating Layer ip2
I0428 20:21:44.424787  1817 net.cpp:408] ip2 <- ip1
I0428 20:21:44.424793  1817 net.cpp:382] ip2 -> ip2
I0428 20:21:44.424938  1817 net.cpp:124] Setting up ip2
I0428 20:21:44.424947  1817 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:44.424950  1817 net.cpp:139] Memory required for data: 10460160
I0428 20:21:44.424955  1817 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:44.424964  1817 net.cpp:86] Creating Layer relu2
I0428 20:21:44.424968  1817 net.cpp:408] relu2 <- ip2
I0428 20:21:44.424971  1817 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:44.425761  1817 net.cpp:124] Setting up relu2
I0428 20:21:44.425772  1817 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:44.425791  1817 net.cpp:139] Memory required for data: 10466560
I0428 20:21:44.425794  1817 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:44.425801  1817 net.cpp:86] Creating Layer ip3
I0428 20:21:44.425804  1817 net.cpp:408] ip3 <- ip2
I0428 20:21:44.425812  1817 net.cpp:382] ip3 -> ip3
I0428 20:21:44.425912  1817 net.cpp:124] Setting up ip3
I0428 20:21:44.425920  1817 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:44.425922  1817 net.cpp:139] Memory required for data: 10469120
I0428 20:21:44.425930  1817 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:44.425935  1817 net.cpp:86] Creating Layer relu3
I0428 20:21:44.425938  1817 net.cpp:408] relu3 <- ip3
I0428 20:21:44.425943  1817 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:44.426132  1817 net.cpp:124] Setting up relu3
I0428 20:21:44.426141  1817 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:44.426144  1817 net.cpp:139] Memory required for data: 10471680
I0428 20:21:44.426147  1817 layer_factory.hpp:77] Creating layer loss
I0428 20:21:44.426154  1817 net.cpp:86] Creating Layer loss
I0428 20:21:44.426157  1817 net.cpp:408] loss <- ip3
I0428 20:21:44.426162  1817 net.cpp:408] loss <- label
I0428 20:21:44.426167  1817 net.cpp:382] loss -> loss
I0428 20:21:44.426184  1817 layer_factory.hpp:77] Creating layer loss
I0428 20:21:44.426440  1817 net.cpp:124] Setting up loss
I0428 20:21:44.426448  1817 net.cpp:131] Top shape: (1)
I0428 20:21:44.426451  1817 net.cpp:134]     with loss weight 1
I0428 20:21:44.426465  1817 net.cpp:139] Memory required for data: 10471684
I0428 20:21:44.426467  1817 net.cpp:200] loss needs backward computation.
I0428 20:21:44.426471  1817 net.cpp:200] relu3 needs backward computation.
I0428 20:21:44.426475  1817 net.cpp:200] ip3 needs backward computation.
I0428 20:21:44.426477  1817 net.cpp:200] relu2 needs backward computation.
I0428 20:21:44.426481  1817 net.cpp:200] ip2 needs backward computation.
I0428 20:21:44.426484  1817 net.cpp:200] relu1 needs backward computation.
I0428 20:21:44.426486  1817 net.cpp:200] ip1 needs backward computation.
I0428 20:21:44.426489  1817 net.cpp:200] pool1 needs backward computation.
I0428 20:21:44.426492  1817 net.cpp:200] conv1 needs backward computation.
I0428 20:21:44.426496  1817 net.cpp:200] pool0 needs backward computation.
I0428 20:21:44.426498  1817 net.cpp:200] conv0 needs backward computation.
I0428 20:21:44.426502  1817 net.cpp:202] mnist does not need backward computation.
I0428 20:21:44.426504  1817 net.cpp:244] This network produces output loss
I0428 20:21:44.426515  1817 net.cpp:257] Network initialization done.
I0428 20:21:44.426868  1817 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1390.prototxt
I0428 20:21:44.426910  1817 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:44.427008  1817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:44.427093  1817 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:44.427137  1817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:44.427152  1817 net.cpp:86] Creating Layer mnist
I0428 20:21:44.427157  1817 net.cpp:382] mnist -> data
I0428 20:21:44.427166  1817 net.cpp:382] mnist -> label
I0428 20:21:44.427284  1817 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:44.429488  1817 net.cpp:124] Setting up mnist
I0428 20:21:44.429517  1817 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:44.429522  1817 net.cpp:131] Top shape: 100 (100)
I0428 20:21:44.429524  1817 net.cpp:139] Memory required for data: 314000
I0428 20:21:44.429528  1817 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:44.429539  1817 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:44.429543  1817 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:44.429548  1817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:44.429555  1817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:44.429636  1817 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:44.429646  1817 net.cpp:131] Top shape: 100 (100)
I0428 20:21:44.429648  1817 net.cpp:131] Top shape: 100 (100)
I0428 20:21:44.429651  1817 net.cpp:139] Memory required for data: 314800
I0428 20:21:44.429654  1817 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:44.429666  1817 net.cpp:86] Creating Layer conv0
I0428 20:21:44.429668  1817 net.cpp:408] conv0 <- data
I0428 20:21:44.429674  1817 net.cpp:382] conv0 -> conv0
I0428 20:21:44.431366  1817 net.cpp:124] Setting up conv0
I0428 20:21:44.431380  1817 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:44.431399  1817 net.cpp:139] Memory required for data: 11834800
I0428 20:21:44.431408  1817 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:44.431414  1817 net.cpp:86] Creating Layer pool0
I0428 20:21:44.431417  1817 net.cpp:408] pool0 <- conv0
I0428 20:21:44.431437  1817 net.cpp:382] pool0 -> pool0
I0428 20:21:44.431474  1817 net.cpp:124] Setting up pool0
I0428 20:21:44.431479  1817 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:44.431483  1817 net.cpp:139] Memory required for data: 14714800
I0428 20:21:44.431485  1817 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:44.431496  1817 net.cpp:86] Creating Layer conv1
I0428 20:21:44.431499  1817 net.cpp:408] conv1 <- pool0
I0428 20:21:44.431504  1817 net.cpp:382] conv1 -> conv1
I0428 20:21:44.433684  1817 net.cpp:124] Setting up conv1
I0428 20:21:44.433698  1817 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:44.433701  1817 net.cpp:139] Memory required for data: 15994800
I0428 20:21:44.433725  1817 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:44.433732  1817 net.cpp:86] Creating Layer pool1
I0428 20:21:44.433749  1817 net.cpp:408] pool1 <- conv1
I0428 20:21:44.433754  1817 net.cpp:382] pool1 -> pool1
I0428 20:21:44.433794  1817 net.cpp:124] Setting up pool1
I0428 20:21:44.433800  1817 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:44.433804  1817 net.cpp:139] Memory required for data: 16314800
I0428 20:21:44.433806  1817 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:44.433814  1817 net.cpp:86] Creating Layer ip1
I0428 20:21:44.433817  1817 net.cpp:408] ip1 <- pool1
I0428 20:21:44.433823  1817 net.cpp:382] ip1 -> ip1
I0428 20:21:44.434065  1817 net.cpp:124] Setting up ip1
I0428 20:21:44.434073  1817 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:44.434087  1817 net.cpp:139] Memory required for data: 16324800
I0428 20:21:44.434094  1817 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:44.434100  1817 net.cpp:86] Creating Layer relu1
I0428 20:21:44.434103  1817 net.cpp:408] relu1 <- ip1
I0428 20:21:44.434108  1817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:44.434293  1817 net.cpp:124] Setting up relu1
I0428 20:21:44.434301  1817 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:44.434304  1817 net.cpp:139] Memory required for data: 16334800
I0428 20:21:44.434307  1817 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:44.434315  1817 net.cpp:86] Creating Layer ip2
I0428 20:21:44.434319  1817 net.cpp:408] ip2 <- ip1
I0428 20:21:44.434324  1817 net.cpp:382] ip2 -> ip2
I0428 20:21:44.434437  1817 net.cpp:124] Setting up ip2
I0428 20:21:44.434458  1817 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:44.434460  1817 net.cpp:139] Memory required for data: 16344800
I0428 20:21:44.434465  1817 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:44.434470  1817 net.cpp:86] Creating Layer relu2
I0428 20:21:44.434473  1817 net.cpp:408] relu2 <- ip2
I0428 20:21:44.434479  1817 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:44.434692  1817 net.cpp:124] Setting up relu2
I0428 20:21:44.434700  1817 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:44.434703  1817 net.cpp:139] Memory required for data: 16354800
I0428 20:21:44.434707  1817 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:44.434713  1817 net.cpp:86] Creating Layer ip3
I0428 20:21:44.434716  1817 net.cpp:408] ip3 <- ip2
I0428 20:21:44.434722  1817 net.cpp:382] ip3 -> ip3
I0428 20:21:44.434870  1817 net.cpp:124] Setting up ip3
I0428 20:21:44.434880  1817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:44.434883  1817 net.cpp:139] Memory required for data: 16358800
I0428 20:21:44.434890  1817 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:44.434895  1817 net.cpp:86] Creating Layer relu3
I0428 20:21:44.434898  1817 net.cpp:408] relu3 <- ip3
I0428 20:21:44.434908  1817 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:44.435780  1817 net.cpp:124] Setting up relu3
I0428 20:21:44.435791  1817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:44.435807  1817 net.cpp:139] Memory required for data: 16362800
I0428 20:21:44.435811  1817 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:44.435817  1817 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:44.435820  1817 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:44.435827  1817 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:44.435832  1817 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:44.435887  1817 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:44.435894  1817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:44.435899  1817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:44.435905  1817 net.cpp:139] Memory required for data: 16370800
I0428 20:21:44.435909  1817 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:44.435914  1817 net.cpp:86] Creating Layer accuracy
I0428 20:21:44.435917  1817 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:44.435922  1817 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:44.435937  1817 net.cpp:382] accuracy -> accuracy
I0428 20:21:44.435945  1817 net.cpp:124] Setting up accuracy
I0428 20:21:44.435948  1817 net.cpp:131] Top shape: (1)
I0428 20:21:44.435951  1817 net.cpp:139] Memory required for data: 16370804
I0428 20:21:44.435959  1817 layer_factory.hpp:77] Creating layer loss
I0428 20:21:44.435966  1817 net.cpp:86] Creating Layer loss
I0428 20:21:44.435968  1817 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:44.435971  1817 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:44.435976  1817 net.cpp:382] loss -> loss
I0428 20:21:44.435982  1817 layer_factory.hpp:77] Creating layer loss
I0428 20:21:44.436245  1817 net.cpp:124] Setting up loss
I0428 20:21:44.436254  1817 net.cpp:131] Top shape: (1)
I0428 20:21:44.436257  1817 net.cpp:134]     with loss weight 1
I0428 20:21:44.436272  1817 net.cpp:139] Memory required for data: 16370808
I0428 20:21:44.436276  1817 net.cpp:200] loss needs backward computation.
I0428 20:21:44.436280  1817 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:44.436285  1817 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:44.436287  1817 net.cpp:200] relu3 needs backward computation.
I0428 20:21:44.436290  1817 net.cpp:200] ip3 needs backward computation.
I0428 20:21:44.436293  1817 net.cpp:200] relu2 needs backward computation.
I0428 20:21:44.436296  1817 net.cpp:200] ip2 needs backward computation.
I0428 20:21:44.436300  1817 net.cpp:200] relu1 needs backward computation.
I0428 20:21:44.436307  1817 net.cpp:200] ip1 needs backward computation.
I0428 20:21:44.436311  1817 net.cpp:200] pool1 needs backward computation.
I0428 20:21:44.436318  1817 net.cpp:200] conv1 needs backward computation.
I0428 20:21:44.436326  1817 net.cpp:200] pool0 needs backward computation.
I0428 20:21:44.436331  1817 net.cpp:200] conv0 needs backward computation.
I0428 20:21:44.436334  1817 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:44.436338  1817 net.cpp:202] mnist does not need backward computation.
I0428 20:21:44.436342  1817 net.cpp:244] This network produces output accuracy
I0428 20:21:44.436345  1817 net.cpp:244] This network produces output loss
I0428 20:21:44.436357  1817 net.cpp:257] Network initialization done.
I0428 20:21:44.436398  1817 solver.cpp:56] Solver scaffolding done.
I0428 20:21:44.436734  1817 caffe.cpp:248] Starting Optimization
I0428 20:21:44.436739  1817 solver.cpp:273] Solving LeNet
I0428 20:21:44.436743  1817 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:44.437654  1817 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:44.445212  1817 blocking_queue.cpp:49] Waiting for data
I0428 20:21:44.528875  1824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:44.530344  1817 solver.cpp:398]     Test net output #0: accuracy = 0.0654
I0428 20:21:44.530378  1817 solver.cpp:398]     Test net output #1: loss = 2.31802 (* 1 = 2.31802 loss)
I0428 20:21:44.536166  1817 solver.cpp:219] Iteration 0 (-9.92281e-32 iter/s, 0.0993771s/100 iters), loss = 2.31126
I0428 20:21:44.536203  1817 solver.cpp:238]     Train net output #0: loss = 2.31126 (* 1 = 2.31126 loss)
I0428 20:21:44.536218  1817 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:44.699765  1817 solver.cpp:219] Iteration 100 (611.445 iter/s, 0.163547s/100 iters), loss = 0.816613
I0428 20:21:44.699800  1817 solver.cpp:238]     Train net output #0: loss = 0.816613 (* 1 = 0.816613 loss)
I0428 20:21:44.699808  1817 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:44.887837  1817 solver.cpp:219] Iteration 200 (531.879 iter/s, 0.188013s/100 iters), loss = 0.204367
I0428 20:21:44.887892  1817 solver.cpp:238]     Train net output #0: loss = 0.204367 (* 1 = 0.204367 loss)
I0428 20:21:44.887905  1817 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:45.076318  1817 solver.cpp:219] Iteration 300 (530.752 iter/s, 0.188412s/100 iters), loss = 0.211444
I0428 20:21:45.076370  1817 solver.cpp:238]     Train net output #0: loss = 0.211444 (* 1 = 0.211444 loss)
I0428 20:21:45.076383  1817 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:45.262245  1817 solver.cpp:219] Iteration 400 (538.039 iter/s, 0.18586s/100 iters), loss = 0.103611
I0428 20:21:45.262296  1817 solver.cpp:238]     Train net output #0: loss = 0.103611 (* 1 = 0.103611 loss)
I0428 20:21:45.262310  1817 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:45.446902  1817 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:45.533851  1824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:45.534920  1817 solver.cpp:398]     Test net output #0: accuracy = 0.9605
I0428 20:21:45.534953  1817 solver.cpp:398]     Test net output #1: loss = 0.125994 (* 1 = 0.125994 loss)
I0428 20:21:45.536609  1817 solver.cpp:219] Iteration 500 (364.568 iter/s, 0.274297s/100 iters), loss = 0.075175
I0428 20:21:45.536665  1817 solver.cpp:238]     Train net output #0: loss = 0.0751749 (* 1 = 0.0751749 loss)
I0428 20:21:45.536675  1817 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:45.699213  1817 solver.cpp:219] Iteration 600 (615.25 iter/s, 0.162535s/100 iters), loss = 0.0888603
I0428 20:21:45.699245  1817 solver.cpp:238]     Train net output #0: loss = 0.0888603 (* 1 = 0.0888603 loss)
I0428 20:21:45.699254  1817 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:45.860442  1817 solver.cpp:219] Iteration 700 (620.406 iter/s, 0.161185s/100 iters), loss = 0.184861
I0428 20:21:45.860472  1817 solver.cpp:238]     Train net output #0: loss = 0.184861 (* 1 = 0.184861 loss)
I0428 20:21:45.860481  1817 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:46.030215  1817 solver.cpp:219] Iteration 800 (589.185 iter/s, 0.169726s/100 iters), loss = 0.232369
I0428 20:21:46.030253  1817 solver.cpp:238]     Train net output #0: loss = 0.232369 (* 1 = 0.232369 loss)
I0428 20:21:46.030263  1817 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:46.208652  1817 solver.cpp:219] Iteration 900 (560.589 iter/s, 0.178384s/100 iters), loss = 0.155823
I0428 20:21:46.208691  1817 solver.cpp:238]     Train net output #0: loss = 0.155823 (* 1 = 0.155823 loss)
I0428 20:21:46.208701  1817 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:46.268875  1823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:46.386775  1817 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:46.389884  1817 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:46.391628  1817 solver.cpp:311] Iteration 1000, loss = 0.0639748
I0428 20:21:46.391651  1817 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:46.472849  1824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:46.474056  1817 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0428 20:21:46.474078  1817 solver.cpp:398]     Test net output #1: loss = 0.0683224 (* 1 = 0.0683224 loss)
I0428 20:21:46.474086  1817 solver.cpp:316] Optimization Done.
I0428 20:21:46.474089  1817 caffe.cpp:259] Optimization Done.
