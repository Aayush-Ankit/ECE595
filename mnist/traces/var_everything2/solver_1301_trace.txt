I0428 20:17:42.351986   932 caffe.cpp:218] Using GPUs 0
I0428 20:17:42.391376   932 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:42.848388   932 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1301.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:42.848526   932 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1301.prototxt
I0428 20:17:42.848922   932 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:42.848953   932 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:42.849040   932 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:42.849133   932 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:42.849231   932 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:42.849251   932 net.cpp:86] Creating Layer mnist
I0428 20:17:42.849257   932 net.cpp:382] mnist -> data
I0428 20:17:42.849277   932 net.cpp:382] mnist -> label
I0428 20:17:42.850208   932 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:42.852393   932 net.cpp:124] Setting up mnist
I0428 20:17:42.852438   932 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:42.852445   932 net.cpp:131] Top shape: 64 (64)
I0428 20:17:42.852447   932 net.cpp:139] Memory required for data: 200960
I0428 20:17:42.852453   932 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:42.852468   932 net.cpp:86] Creating Layer conv0
I0428 20:17:42.852484   932 net.cpp:408] conv0 <- data
I0428 20:17:42.852495   932 net.cpp:382] conv0 -> conv0
I0428 20:17:43.084537   932 net.cpp:124] Setting up conv0
I0428 20:17:43.084563   932 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:43.084566   932 net.cpp:139] Memory required for data: 7573760
I0428 20:17:43.084583   932 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:43.084594   932 net.cpp:86] Creating Layer pool0
I0428 20:17:43.084599   932 net.cpp:408] pool0 <- conv0
I0428 20:17:43.084604   932 net.cpp:382] pool0 -> pool0
I0428 20:17:43.084662   932 net.cpp:124] Setting up pool0
I0428 20:17:43.084668   932 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:43.084671   932 net.cpp:139] Memory required for data: 9416960
I0428 20:17:43.084673   932 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:43.084684   932 net.cpp:86] Creating Layer conv1
I0428 20:17:43.084687   932 net.cpp:408] conv1 <- pool0
I0428 20:17:43.084692   932 net.cpp:382] conv1 -> conv1
I0428 20:17:43.087555   932 net.cpp:124] Setting up conv1
I0428 20:17:43.087569   932 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:43.087589   932 net.cpp:139] Memory required for data: 9580800
I0428 20:17:43.087596   932 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:43.087604   932 net.cpp:86] Creating Layer pool1
I0428 20:17:43.087606   932 net.cpp:408] pool1 <- conv1
I0428 20:17:43.087612   932 net.cpp:382] pool1 -> pool1
I0428 20:17:43.087666   932 net.cpp:124] Setting up pool1
I0428 20:17:43.087671   932 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:43.087673   932 net.cpp:139] Memory required for data: 9621760
I0428 20:17:43.087676   932 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:43.087684   932 net.cpp:86] Creating Layer ip1
I0428 20:17:43.087687   932 net.cpp:408] ip1 <- pool1
I0428 20:17:43.087692   932 net.cpp:382] ip1 -> ip1
I0428 20:17:43.087813   932 net.cpp:124] Setting up ip1
I0428 20:17:43.087821   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.087824   932 net.cpp:139] Memory required for data: 9624320
I0428 20:17:43.087831   932 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:43.087837   932 net.cpp:86] Creating Layer relu1
I0428 20:17:43.087841   932 net.cpp:408] relu1 <- ip1
I0428 20:17:43.087844   932 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:43.088014   932 net.cpp:124] Setting up relu1
I0428 20:17:43.088023   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.088027   932 net.cpp:139] Memory required for data: 9626880
I0428 20:17:43.088029   932 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:43.088037   932 net.cpp:86] Creating Layer ip2
I0428 20:17:43.088039   932 net.cpp:408] ip2 <- ip1
I0428 20:17:43.088045   932 net.cpp:382] ip2 -> ip2
I0428 20:17:43.088142   932 net.cpp:124] Setting up ip2
I0428 20:17:43.088150   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.088152   932 net.cpp:139] Memory required for data: 9629440
I0428 20:17:43.088157   932 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:43.088163   932 net.cpp:86] Creating Layer relu2
I0428 20:17:43.088182   932 net.cpp:408] relu2 <- ip2
I0428 20:17:43.088187   932 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:43.089040   932 net.cpp:124] Setting up relu2
I0428 20:17:43.089052   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.089071   932 net.cpp:139] Memory required for data: 9632000
I0428 20:17:43.089074   932 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:43.089083   932 net.cpp:86] Creating Layer ip3
I0428 20:17:43.089088   932 net.cpp:408] ip3 <- ip2
I0428 20:17:43.089093   932 net.cpp:382] ip3 -> ip3
I0428 20:17:43.089215   932 net.cpp:124] Setting up ip3
I0428 20:17:43.089222   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.089226   932 net.cpp:139] Memory required for data: 9634560
I0428 20:17:43.089232   932 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:43.089256   932 net.cpp:86] Creating Layer relu3
I0428 20:17:43.089258   932 net.cpp:408] relu3 <- ip3
I0428 20:17:43.089278   932 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:43.089498   932 net.cpp:124] Setting up relu3
I0428 20:17:43.089507   932 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:43.089510   932 net.cpp:139] Memory required for data: 9637120
I0428 20:17:43.089514   932 layer_factory.hpp:77] Creating layer loss
I0428 20:17:43.089519   932 net.cpp:86] Creating Layer loss
I0428 20:17:43.089522   932 net.cpp:408] loss <- ip3
I0428 20:17:43.089526   932 net.cpp:408] loss <- label
I0428 20:17:43.089531   932 net.cpp:382] loss -> loss
I0428 20:17:43.089548   932 layer_factory.hpp:77] Creating layer loss
I0428 20:17:43.089787   932 net.cpp:124] Setting up loss
I0428 20:17:43.089795   932 net.cpp:131] Top shape: (1)
I0428 20:17:43.089798   932 net.cpp:134]     with loss weight 1
I0428 20:17:43.089812   932 net.cpp:139] Memory required for data: 9637124
I0428 20:17:43.089814   932 net.cpp:200] loss needs backward computation.
I0428 20:17:43.089818   932 net.cpp:200] relu3 needs backward computation.
I0428 20:17:43.089820   932 net.cpp:200] ip3 needs backward computation.
I0428 20:17:43.089823   932 net.cpp:200] relu2 needs backward computation.
I0428 20:17:43.089826   932 net.cpp:200] ip2 needs backward computation.
I0428 20:17:43.089829   932 net.cpp:200] relu1 needs backward computation.
I0428 20:17:43.089831   932 net.cpp:200] ip1 needs backward computation.
I0428 20:17:43.089834   932 net.cpp:200] pool1 needs backward computation.
I0428 20:17:43.089838   932 net.cpp:200] conv1 needs backward computation.
I0428 20:17:43.089840   932 net.cpp:200] pool0 needs backward computation.
I0428 20:17:43.089843   932 net.cpp:200] conv0 needs backward computation.
I0428 20:17:43.089846   932 net.cpp:202] mnist does not need backward computation.
I0428 20:17:43.089848   932 net.cpp:244] This network produces output loss
I0428 20:17:43.089859   932 net.cpp:257] Network initialization done.
I0428 20:17:43.090234   932 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1301.prototxt
I0428 20:17:43.090261   932 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:43.090354   932 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:43.090482   932 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:43.090526   932 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:43.090539   932 net.cpp:86] Creating Layer mnist
I0428 20:17:43.090545   932 net.cpp:382] mnist -> data
I0428 20:17:43.090553   932 net.cpp:382] mnist -> label
I0428 20:17:43.090636   932 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:43.092696   932 net.cpp:124] Setting up mnist
I0428 20:17:43.092725   932 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:43.092730   932 net.cpp:131] Top shape: 100 (100)
I0428 20:17:43.092733   932 net.cpp:139] Memory required for data: 314000
I0428 20:17:43.092736   932 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:43.092749   932 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:43.092753   932 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:43.092759   932 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:43.092767   932 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:43.092831   932 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:43.092839   932 net.cpp:131] Top shape: 100 (100)
I0428 20:17:43.092842   932 net.cpp:131] Top shape: 100 (100)
I0428 20:17:43.092845   932 net.cpp:139] Memory required for data: 314800
I0428 20:17:43.092849   932 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:43.092859   932 net.cpp:86] Creating Layer conv0
I0428 20:17:43.092864   932 net.cpp:408] conv0 <- data
I0428 20:17:43.092869   932 net.cpp:382] conv0 -> conv0
I0428 20:17:43.094686   932 net.cpp:124] Setting up conv0
I0428 20:17:43.094715   932 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:43.094719   932 net.cpp:139] Memory required for data: 11834800
I0428 20:17:43.094728   932 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:43.094735   932 net.cpp:86] Creating Layer pool0
I0428 20:17:43.094738   932 net.cpp:408] pool0 <- conv0
I0428 20:17:43.094761   932 net.cpp:382] pool0 -> pool0
I0428 20:17:43.094827   932 net.cpp:124] Setting up pool0
I0428 20:17:43.094840   932 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:43.094842   932 net.cpp:139] Memory required for data: 14714800
I0428 20:17:43.094846   932 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:43.094854   932 net.cpp:86] Creating Layer conv1
I0428 20:17:43.094857   932 net.cpp:408] conv1 <- pool0
I0428 20:17:43.094862   932 net.cpp:382] conv1 -> conv1
I0428 20:17:43.096565   932 net.cpp:124] Setting up conv1
I0428 20:17:43.096578   932 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:43.096597   932 net.cpp:139] Memory required for data: 14970800
I0428 20:17:43.096617   932 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:43.096626   932 net.cpp:86] Creating Layer pool1
I0428 20:17:43.096628   932 net.cpp:408] pool1 <- conv1
I0428 20:17:43.096634   932 net.cpp:382] pool1 -> pool1
I0428 20:17:43.096688   932 net.cpp:124] Setting up pool1
I0428 20:17:43.096695   932 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:43.096698   932 net.cpp:139] Memory required for data: 15034800
I0428 20:17:43.096701   932 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:43.096719   932 net.cpp:86] Creating Layer ip1
I0428 20:17:43.096721   932 net.cpp:408] ip1 <- pool1
I0428 20:17:43.096738   932 net.cpp:382] ip1 -> ip1
I0428 20:17:43.096882   932 net.cpp:124] Setting up ip1
I0428 20:17:43.096894   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.096906   932 net.cpp:139] Memory required for data: 15038800
I0428 20:17:43.096915   932 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:43.096921   932 net.cpp:86] Creating Layer relu1
I0428 20:17:43.096925   932 net.cpp:408] relu1 <- ip1
I0428 20:17:43.096931   932 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:43.097115   932 net.cpp:124] Setting up relu1
I0428 20:17:43.097126   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.097129   932 net.cpp:139] Memory required for data: 15042800
I0428 20:17:43.097133   932 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:43.097148   932 net.cpp:86] Creating Layer ip2
I0428 20:17:43.097153   932 net.cpp:408] ip2 <- ip1
I0428 20:17:43.097159   932 net.cpp:382] ip2 -> ip2
I0428 20:17:43.097316   932 net.cpp:124] Setting up ip2
I0428 20:17:43.097324   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.097327   932 net.cpp:139] Memory required for data: 15046800
I0428 20:17:43.097332   932 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:43.097337   932 net.cpp:86] Creating Layer relu2
I0428 20:17:43.097340   932 net.cpp:408] relu2 <- ip2
I0428 20:17:43.097344   932 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:43.097606   932 net.cpp:124] Setting up relu2
I0428 20:17:43.097615   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.097618   932 net.cpp:139] Memory required for data: 15050800
I0428 20:17:43.097622   932 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:43.097628   932 net.cpp:86] Creating Layer ip3
I0428 20:17:43.097631   932 net.cpp:408] ip3 <- ip2
I0428 20:17:43.097636   932 net.cpp:382] ip3 -> ip3
I0428 20:17:43.097735   932 net.cpp:124] Setting up ip3
I0428 20:17:43.097744   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.097748   932 net.cpp:139] Memory required for data: 15054800
I0428 20:17:43.097754   932 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:43.097760   932 net.cpp:86] Creating Layer relu3
I0428 20:17:43.097767   932 net.cpp:408] relu3 <- ip3
I0428 20:17:43.097772   932 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:43.098614   932 net.cpp:124] Setting up relu3
I0428 20:17:43.098625   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.098644   932 net.cpp:139] Memory required for data: 15058800
I0428 20:17:43.098647   932 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:43.098652   932 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:43.098656   932 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:43.098662   932 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:43.098676   932 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:43.098747   932 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:43.098754   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.098758   932 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:43.098760   932 net.cpp:139] Memory required for data: 15066800
I0428 20:17:43.098763   932 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:43.098769   932 net.cpp:86] Creating Layer accuracy
I0428 20:17:43.098773   932 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:43.098778   932 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:43.098781   932 net.cpp:382] accuracy -> accuracy
I0428 20:17:43.098788   932 net.cpp:124] Setting up accuracy
I0428 20:17:43.098798   932 net.cpp:131] Top shape: (1)
I0428 20:17:43.098800   932 net.cpp:139] Memory required for data: 15066804
I0428 20:17:43.098817   932 layer_factory.hpp:77] Creating layer loss
I0428 20:17:43.098824   932 net.cpp:86] Creating Layer loss
I0428 20:17:43.098826   932 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:43.098830   932 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:43.098834   932 net.cpp:382] loss -> loss
I0428 20:17:43.098839   932 layer_factory.hpp:77] Creating layer loss
I0428 20:17:43.099086   932 net.cpp:124] Setting up loss
I0428 20:17:43.099095   932 net.cpp:131] Top shape: (1)
I0428 20:17:43.099098   932 net.cpp:134]     with loss weight 1
I0428 20:17:43.099114   932 net.cpp:139] Memory required for data: 15066808
I0428 20:17:43.099118   932 net.cpp:200] loss needs backward computation.
I0428 20:17:43.099123   932 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:43.099126   932 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:43.099129   932 net.cpp:200] relu3 needs backward computation.
I0428 20:17:43.099133   932 net.cpp:200] ip3 needs backward computation.
I0428 20:17:43.099136   932 net.cpp:200] relu2 needs backward computation.
I0428 20:17:43.099138   932 net.cpp:200] ip2 needs backward computation.
I0428 20:17:43.099143   932 net.cpp:200] relu1 needs backward computation.
I0428 20:17:43.099144   932 net.cpp:200] ip1 needs backward computation.
I0428 20:17:43.099148   932 net.cpp:200] pool1 needs backward computation.
I0428 20:17:43.099150   932 net.cpp:200] conv1 needs backward computation.
I0428 20:17:43.099153   932 net.cpp:200] pool0 needs backward computation.
I0428 20:17:43.099156   932 net.cpp:200] conv0 needs backward computation.
I0428 20:17:43.099166   932 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:43.099170   932 net.cpp:202] mnist does not need backward computation.
I0428 20:17:43.099174   932 net.cpp:244] This network produces output accuracy
I0428 20:17:43.099177   932 net.cpp:244] This network produces output loss
I0428 20:17:43.099202   932 net.cpp:257] Network initialization done.
I0428 20:17:43.099246   932 solver.cpp:56] Solver scaffolding done.
I0428 20:17:43.099658   932 caffe.cpp:248] Starting Optimization
I0428 20:17:43.099664   932 solver.cpp:273] Solving LeNet
I0428 20:17:43.099668   932 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:43.099905   932 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:43.106915   932 blocking_queue.cpp:49] Waiting for data
I0428 20:17:43.177383   940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:43.178169   932 solver.cpp:398]     Test net output #0: accuracy = 0.1221
I0428 20:17:43.178201   932 solver.cpp:398]     Test net output #1: loss = 2.29244 (* 1 = 2.29244 loss)
I0428 20:17:43.182718   932 solver.cpp:219] Iteration 0 (0 iter/s, 0.0830004s/100 iters), loss = 2.33131
I0428 20:17:43.182756   932 solver.cpp:238]     Train net output #0: loss = 2.33131 (* 1 = 2.33131 loss)
I0428 20:17:43.182767   932 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:43.306318   932 solver.cpp:219] Iteration 100 (809.31 iter/s, 0.123562s/100 iters), loss = 0.381917
I0428 20:17:43.306360   932 solver.cpp:238]     Train net output #0: loss = 0.381917 (* 1 = 0.381917 loss)
I0428 20:17:43.306365   932 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:43.429347   932 solver.cpp:219] Iteration 200 (813.158 iter/s, 0.122977s/100 iters), loss = 0.253341
I0428 20:17:43.429388   932 solver.cpp:238]     Train net output #0: loss = 0.253341 (* 1 = 0.253341 loss)
I0428 20:17:43.429394   932 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:43.551872   932 solver.cpp:219] Iteration 300 (816.387 iter/s, 0.122491s/100 iters), loss = 0.280034
I0428 20:17:43.551911   932 solver.cpp:238]     Train net output #0: loss = 0.280033 (* 1 = 0.280033 loss)
I0428 20:17:43.551918   932 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:43.673715   932 solver.cpp:219] Iteration 400 (820.971 iter/s, 0.121807s/100 iters), loss = 0.0929906
I0428 20:17:43.673755   932 solver.cpp:238]     Train net output #0: loss = 0.0929906 (* 1 = 0.0929906 loss)
I0428 20:17:43.673763   932 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:43.795022   932 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:43.858794   940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:43.860435   932 solver.cpp:398]     Test net output #0: accuracy = 0.9409
I0428 20:17:43.860455   932 solver.cpp:398]     Test net output #1: loss = 0.188337 (* 1 = 0.188337 loss)
I0428 20:17:43.861660   932 solver.cpp:219] Iteration 500 (532.227 iter/s, 0.18789s/100 iters), loss = 0.21377
I0428 20:17:43.861711   932 solver.cpp:238]     Train net output #0: loss = 0.21377 (* 1 = 0.21377 loss)
I0428 20:17:43.861718   932 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:43.986469   932 solver.cpp:219] Iteration 600 (801.525 iter/s, 0.124762s/100 iters), loss = 0.0787874
I0428 20:17:43.986508   932 solver.cpp:238]     Train net output #0: loss = 0.0787874 (* 1 = 0.0787874 loss)
I0428 20:17:43.986515   932 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:44.111205   932 solver.cpp:219] Iteration 700 (801.92 iter/s, 0.124701s/100 iters), loss = 0.212594
I0428 20:17:44.111232   932 solver.cpp:238]     Train net output #0: loss = 0.212594 (* 1 = 0.212594 loss)
I0428 20:17:44.111238   932 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:44.233382   932 solver.cpp:219] Iteration 800 (818.735 iter/s, 0.12214s/100 iters), loss = 0.307348
I0428 20:17:44.233423   932 solver.cpp:238]     Train net output #0: loss = 0.307348 (* 1 = 0.307348 loss)
I0428 20:17:44.233444   932 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:44.356488   932 solver.cpp:219] Iteration 900 (812.549 iter/s, 0.123069s/100 iters), loss = 0.266955
I0428 20:17:44.356528   932 solver.cpp:238]     Train net output #0: loss = 0.266955 (* 1 = 0.266955 loss)
I0428 20:17:44.356535   932 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:44.397213   939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:44.475424   932 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:44.476547   932 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:44.477311   932 solver.cpp:311] Iteration 1000, loss = 0.191724
I0428 20:17:44.477327   932 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:44.556288   940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:44.557212   932 solver.cpp:398]     Test net output #0: accuracy = 0.9632
I0428 20:17:44.557242   932 solver.cpp:398]     Test net output #1: loss = 0.12077 (* 1 = 0.12077 loss)
I0428 20:17:44.557248   932 solver.cpp:316] Optimization Done.
I0428 20:17:44.557251   932 caffe.cpp:259] Optimization Done.
