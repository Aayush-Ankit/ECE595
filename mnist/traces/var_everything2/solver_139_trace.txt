I0428 19:31:58.915016 22724 caffe.cpp:218] Using GPUs 0
I0428 19:31:58.958511 22724 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:59.504072 22724 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test139.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:59.504218 22724 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test139.prototxt
I0428 19:31:59.504587 22724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:59.504606 22724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:59.504695 22724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:59.504770 22724 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:59.504906 22724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:59.504936 22724 net.cpp:86] Creating Layer mnist
I0428 19:31:59.504947 22724 net.cpp:382] mnist -> data
I0428 19:31:59.504971 22724 net.cpp:382] mnist -> label
I0428 19:31:59.506094 22724 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:59.508576 22724 net.cpp:124] Setting up mnist
I0428 19:31:59.508594 22724 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:59.508600 22724 net.cpp:131] Top shape: 64 (64)
I0428 19:31:59.508605 22724 net.cpp:139] Memory required for data: 200960
I0428 19:31:59.508611 22724 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:59.508654 22724 net.cpp:86] Creating Layer conv0
I0428 19:31:59.508661 22724 net.cpp:408] conv0 <- data
I0428 19:31:59.508672 22724 net.cpp:382] conv0 -> conv0
I0428 19:31:59.800403 22724 net.cpp:124] Setting up conv0
I0428 19:31:59.800436 22724 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:59.800441 22724 net.cpp:139] Memory required for data: 1675520
I0428 19:31:59.800458 22724 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:59.800473 22724 net.cpp:86] Creating Layer pool0
I0428 19:31:59.800499 22724 net.cpp:408] pool0 <- conv0
I0428 19:31:59.800508 22724 net.cpp:382] pool0 -> pool0
I0428 19:31:59.800565 22724 net.cpp:124] Setting up pool0
I0428 19:31:59.800575 22724 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:59.800580 22724 net.cpp:139] Memory required for data: 2044160
I0428 19:31:59.800582 22724 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:59.800592 22724 net.cpp:86] Creating Layer ip1
I0428 19:31:59.800595 22724 net.cpp:408] ip1 <- pool0
I0428 19:31:59.800601 22724 net.cpp:382] ip1 -> ip1
I0428 19:31:59.800977 22724 net.cpp:124] Setting up ip1
I0428 19:31:59.800987 22724 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:59.800992 22724 net.cpp:139] Memory required for data: 2050560
I0428 19:31:59.801000 22724 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:59.801008 22724 net.cpp:86] Creating Layer relu1
I0428 19:31:59.801013 22724 net.cpp:408] relu1 <- ip1
I0428 19:31:59.801018 22724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:59.801213 22724 net.cpp:124] Setting up relu1
I0428 19:31:59.801223 22724 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:59.801228 22724 net.cpp:139] Memory required for data: 2056960
I0428 19:31:59.801231 22724 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:59.801239 22724 net.cpp:86] Creating Layer ip2
I0428 19:31:59.801242 22724 net.cpp:408] ip2 <- ip1
I0428 19:31:59.801249 22724 net.cpp:382] ip2 -> ip2
I0428 19:31:59.801367 22724 net.cpp:124] Setting up ip2
I0428 19:31:59.801379 22724 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:59.801384 22724 net.cpp:139] Memory required for data: 2059520
I0428 19:31:59.801396 22724 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:59.801403 22724 net.cpp:86] Creating Layer relu2
I0428 19:31:59.801407 22724 net.cpp:408] relu2 <- ip2
I0428 19:31:59.801412 22724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:59.802274 22724 net.cpp:124] Setting up relu2
I0428 19:31:59.802289 22724 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:59.802294 22724 net.cpp:139] Memory required for data: 2062080
I0428 19:31:59.802299 22724 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:59.802306 22724 net.cpp:86] Creating Layer ip3
I0428 19:31:59.802310 22724 net.cpp:408] ip3 <- ip2
I0428 19:31:59.802317 22724 net.cpp:382] ip3 -> ip3
I0428 19:31:59.802436 22724 net.cpp:124] Setting up ip3
I0428 19:31:59.802446 22724 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:59.802450 22724 net.cpp:139] Memory required for data: 2064640
I0428 19:31:59.802458 22724 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:59.802465 22724 net.cpp:86] Creating Layer relu3
I0428 19:31:59.802469 22724 net.cpp:408] relu3 <- ip3
I0428 19:31:59.802474 22724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:59.802651 22724 net.cpp:124] Setting up relu3
I0428 19:31:59.802660 22724 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:59.802664 22724 net.cpp:139] Memory required for data: 2067200
I0428 19:31:59.802667 22724 layer_factory.hpp:77] Creating layer loss
I0428 19:31:59.802675 22724 net.cpp:86] Creating Layer loss
I0428 19:31:59.802678 22724 net.cpp:408] loss <- ip3
I0428 19:31:59.802682 22724 net.cpp:408] loss <- label
I0428 19:31:59.802690 22724 net.cpp:382] loss -> loss
I0428 19:31:59.802711 22724 layer_factory.hpp:77] Creating layer loss
I0428 19:31:59.802986 22724 net.cpp:124] Setting up loss
I0428 19:31:59.802999 22724 net.cpp:131] Top shape: (1)
I0428 19:31:59.803001 22724 net.cpp:134]     with loss weight 1
I0428 19:31:59.803019 22724 net.cpp:139] Memory required for data: 2067204
I0428 19:31:59.803022 22724 net.cpp:200] loss needs backward computation.
I0428 19:31:59.803027 22724 net.cpp:200] relu3 needs backward computation.
I0428 19:31:59.803030 22724 net.cpp:200] ip3 needs backward computation.
I0428 19:31:59.803035 22724 net.cpp:200] relu2 needs backward computation.
I0428 19:31:59.803037 22724 net.cpp:200] ip2 needs backward computation.
I0428 19:31:59.803040 22724 net.cpp:200] relu1 needs backward computation.
I0428 19:31:59.803045 22724 net.cpp:200] ip1 needs backward computation.
I0428 19:31:59.803061 22724 net.cpp:200] pool0 needs backward computation.
I0428 19:31:59.803064 22724 net.cpp:200] conv0 needs backward computation.
I0428 19:31:59.803068 22724 net.cpp:202] mnist does not need backward computation.
I0428 19:31:59.803071 22724 net.cpp:244] This network produces output loss
I0428 19:31:59.803081 22724 net.cpp:257] Network initialization done.
I0428 19:31:59.803412 22724 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test139.prototxt
I0428 19:31:59.803443 22724 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:59.803539 22724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:59.803614 22724 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:59.803668 22724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:59.803689 22724 net.cpp:86] Creating Layer mnist
I0428 19:31:59.803694 22724 net.cpp:382] mnist -> data
I0428 19:31:59.803704 22724 net.cpp:382] mnist -> label
I0428 19:31:59.803802 22724 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:59.806016 22724 net.cpp:124] Setting up mnist
I0428 19:31:59.806032 22724 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:59.806040 22724 net.cpp:131] Top shape: 100 (100)
I0428 19:31:59.806043 22724 net.cpp:139] Memory required for data: 314000
I0428 19:31:59.806047 22724 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:59.806056 22724 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:59.806059 22724 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:59.806066 22724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:59.806073 22724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:59.806118 22724 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:59.806123 22724 net.cpp:131] Top shape: 100 (100)
I0428 19:31:59.806128 22724 net.cpp:131] Top shape: 100 (100)
I0428 19:31:59.806131 22724 net.cpp:139] Memory required for data: 314800
I0428 19:31:59.806147 22724 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:59.806159 22724 net.cpp:86] Creating Layer conv0
I0428 19:31:59.806162 22724 net.cpp:408] conv0 <- data
I0428 19:31:59.806169 22724 net.cpp:382] conv0 -> conv0
I0428 19:31:59.808022 22724 net.cpp:124] Setting up conv0
I0428 19:31:59.808042 22724 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:59.808048 22724 net.cpp:139] Memory required for data: 2618800
I0428 19:31:59.808064 22724 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:59.808076 22724 net.cpp:86] Creating Layer pool0
I0428 19:31:59.808082 22724 net.cpp:408] pool0 <- conv0
I0428 19:31:59.808089 22724 net.cpp:382] pool0 -> pool0
I0428 19:31:59.808132 22724 net.cpp:124] Setting up pool0
I0428 19:31:59.808141 22724 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:59.808145 22724 net.cpp:139] Memory required for data: 3194800
I0428 19:31:59.808148 22724 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:59.808156 22724 net.cpp:86] Creating Layer ip1
I0428 19:31:59.808159 22724 net.cpp:408] ip1 <- pool0
I0428 19:31:59.808166 22724 net.cpp:382] ip1 -> ip1
I0428 19:31:59.808523 22724 net.cpp:124] Setting up ip1
I0428 19:31:59.808532 22724 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:59.808537 22724 net.cpp:139] Memory required for data: 3204800
I0428 19:31:59.808544 22724 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:59.808553 22724 net.cpp:86] Creating Layer relu1
I0428 19:31:59.808558 22724 net.cpp:408] relu1 <- ip1
I0428 19:31:59.808567 22724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:59.808914 22724 net.cpp:124] Setting up relu1
I0428 19:31:59.808925 22724 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:59.808929 22724 net.cpp:139] Memory required for data: 3214800
I0428 19:31:59.808938 22724 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:59.808946 22724 net.cpp:86] Creating Layer ip2
I0428 19:31:59.808949 22724 net.cpp:408] ip2 <- ip1
I0428 19:31:59.808961 22724 net.cpp:382] ip2 -> ip2
I0428 19:31:59.809077 22724 net.cpp:124] Setting up ip2
I0428 19:31:59.809084 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.809088 22724 net.cpp:139] Memory required for data: 3218800
I0428 19:31:59.809098 22724 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:59.809103 22724 net.cpp:86] Creating Layer relu2
I0428 19:31:59.809113 22724 net.cpp:408] relu2 <- ip2
I0428 19:31:59.809118 22724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:59.810045 22724 net.cpp:124] Setting up relu2
I0428 19:31:59.810060 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.810065 22724 net.cpp:139] Memory required for data: 3222800
I0428 19:31:59.810068 22724 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:59.810078 22724 net.cpp:86] Creating Layer ip3
I0428 19:31:59.810082 22724 net.cpp:408] ip3 <- ip2
I0428 19:31:59.810088 22724 net.cpp:382] ip3 -> ip3
I0428 19:31:59.810220 22724 net.cpp:124] Setting up ip3
I0428 19:31:59.810231 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.810235 22724 net.cpp:139] Memory required for data: 3226800
I0428 19:31:59.810241 22724 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:59.810247 22724 net.cpp:86] Creating Layer relu3
I0428 19:31:59.810251 22724 net.cpp:408] relu3 <- ip3
I0428 19:31:59.810256 22724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:59.810431 22724 net.cpp:124] Setting up relu3
I0428 19:31:59.810441 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.810446 22724 net.cpp:139] Memory required for data: 3230800
I0428 19:31:59.810449 22724 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:59.810456 22724 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:59.810459 22724 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:59.810464 22724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:59.810472 22724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:59.810511 22724 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:59.810518 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.810521 22724 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:59.810539 22724 net.cpp:139] Memory required for data: 3238800
I0428 19:31:59.810542 22724 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:59.810552 22724 net.cpp:86] Creating Layer accuracy
I0428 19:31:59.810557 22724 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:59.810561 22724 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:59.810575 22724 net.cpp:382] accuracy -> accuracy
I0428 19:31:59.810585 22724 net.cpp:124] Setting up accuracy
I0428 19:31:59.810590 22724 net.cpp:131] Top shape: (1)
I0428 19:31:59.810592 22724 net.cpp:139] Memory required for data: 3238804
I0428 19:31:59.810601 22724 layer_factory.hpp:77] Creating layer loss
I0428 19:31:59.810606 22724 net.cpp:86] Creating Layer loss
I0428 19:31:59.810611 22724 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:59.810616 22724 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:59.810621 22724 net.cpp:382] loss -> loss
I0428 19:31:59.810628 22724 layer_factory.hpp:77] Creating layer loss
I0428 19:31:59.810904 22724 net.cpp:124] Setting up loss
I0428 19:31:59.810915 22724 net.cpp:131] Top shape: (1)
I0428 19:31:59.810920 22724 net.cpp:134]     with loss weight 1
I0428 19:31:59.810927 22724 net.cpp:139] Memory required for data: 3238808
I0428 19:31:59.810932 22724 net.cpp:200] loss needs backward computation.
I0428 19:31:59.810937 22724 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:59.810941 22724 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:59.810945 22724 net.cpp:200] relu3 needs backward computation.
I0428 19:31:59.810948 22724 net.cpp:200] ip3 needs backward computation.
I0428 19:31:59.810953 22724 net.cpp:200] relu2 needs backward computation.
I0428 19:31:59.810963 22724 net.cpp:200] ip2 needs backward computation.
I0428 19:31:59.810966 22724 net.cpp:200] relu1 needs backward computation.
I0428 19:31:59.810981 22724 net.cpp:200] ip1 needs backward computation.
I0428 19:31:59.810986 22724 net.cpp:200] pool0 needs backward computation.
I0428 19:31:59.810989 22724 net.cpp:200] conv0 needs backward computation.
I0428 19:31:59.810999 22724 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:59.811003 22724 net.cpp:202] mnist does not need backward computation.
I0428 19:31:59.811007 22724 net.cpp:244] This network produces output accuracy
I0428 19:31:59.811012 22724 net.cpp:244] This network produces output loss
I0428 19:31:59.811022 22724 net.cpp:257] Network initialization done.
I0428 19:31:59.811066 22724 solver.cpp:56] Solver scaffolding done.
I0428 19:31:59.811419 22724 caffe.cpp:248] Starting Optimization
I0428 19:31:59.811434 22724 solver.cpp:273] Solving LeNet
I0428 19:31:59.811436 22724 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:59.811656 22724 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:59.817469 22724 blocking_queue.cpp:49] Waiting for data
I0428 19:31:59.879914 22731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:59.880481 22724 solver.cpp:398]     Test net output #0: accuracy = 0.0907
I0428 19:31:59.880506 22724 solver.cpp:398]     Test net output #1: loss = 2.32062 (* 1 = 2.32062 loss)
I0428 19:31:59.883049 22724 solver.cpp:219] Iteration 0 (0 iter/s, 0.071553s/100 iters), loss = 2.31326
I0428 19:31:59.883078 22724 solver.cpp:238]     Train net output #0: loss = 2.31326 (* 1 = 2.31326 loss)
I0428 19:31:59.883092 22724 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:59.954782 22724 solver.cpp:219] Iteration 100 (1394.83 iter/s, 0.0716933s/100 iters), loss = 0.514244
I0428 19:31:59.954816 22724 solver.cpp:238]     Train net output #0: loss = 0.514244 (* 1 = 0.514244 loss)
I0428 19:31:59.954825 22724 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:00.024137 22724 solver.cpp:219] Iteration 200 (1442.76 iter/s, 0.0693115s/100 iters), loss = 0.354889
I0428 19:32:00.024168 22724 solver.cpp:238]     Train net output #0: loss = 0.354889 (* 1 = 0.354889 loss)
I0428 19:32:00.024175 22724 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:00.096527 22724 solver.cpp:219] Iteration 300 (1382.23 iter/s, 0.0723466s/100 iters), loss = 0.235561
I0428 19:32:00.096581 22724 solver.cpp:238]     Train net output #0: loss = 0.235561 (* 1 = 0.235561 loss)
I0428 19:32:00.096597 22724 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:00.180485 22724 solver.cpp:219] Iteration 400 (1191.95 iter/s, 0.0838965s/100 iters), loss = 0.17575
I0428 19:32:00.180519 22724 solver.cpp:238]     Train net output #0: loss = 0.17575 (* 1 = 0.17575 loss)
I0428 19:32:00.180528 22724 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:00.250515 22724 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:00.303607 22731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:00.304139 22724 solver.cpp:398]     Test net output #0: accuracy = 0.9448
I0428 19:32:00.304167 22724 solver.cpp:398]     Test net output #1: loss = 0.189613 (* 1 = 0.189613 loss)
I0428 19:32:00.304868 22724 solver.cpp:219] Iteration 500 (804.258 iter/s, 0.124338s/100 iters), loss = 0.241243
I0428 19:32:00.304896 22724 solver.cpp:238]     Train net output #0: loss = 0.241243 (* 1 = 0.241243 loss)
I0428 19:32:00.304905 22724 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:00.387112 22724 solver.cpp:219] Iteration 600 (1216.51 iter/s, 0.0822026s/100 iters), loss = 0.142624
I0428 19:32:00.387158 22724 solver.cpp:238]     Train net output #0: loss = 0.142624 (* 1 = 0.142624 loss)
I0428 19:32:00.387168 22724 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:00.460587 22724 solver.cpp:219] Iteration 700 (1361.99 iter/s, 0.0734218s/100 iters), loss = 0.192112
I0428 19:32:00.460618 22724 solver.cpp:238]     Train net output #0: loss = 0.192112 (* 1 = 0.192112 loss)
I0428 19:32:00.460625 22724 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:00.529780 22724 solver.cpp:219] Iteration 800 (1446.07 iter/s, 0.0691529s/100 iters), loss = 0.186444
I0428 19:32:00.529810 22724 solver.cpp:238]     Train net output #0: loss = 0.186444 (* 1 = 0.186444 loss)
I0428 19:32:00.529819 22724 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:00.598752 22724 solver.cpp:219] Iteration 900 (1450.69 iter/s, 0.0689326s/100 iters), loss = 0.2101
I0428 19:32:00.598783 22724 solver.cpp:238]     Train net output #0: loss = 0.2101 (* 1 = 0.2101 loss)
I0428 19:32:00.598790 22724 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:00.621894 22730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:00.667122 22724 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:00.668232 22724 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:00.669158 22724 solver.cpp:311] Iteration 1000, loss = 0.16132
I0428 19:32:00.669193 22724 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:00.727985 22731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:00.729667 22724 solver.cpp:398]     Test net output #0: accuracy = 0.9585
I0428 19:32:00.729696 22724 solver.cpp:398]     Test net output #1: loss = 0.134125 (* 1 = 0.134125 loss)
I0428 19:32:00.729702 22724 solver.cpp:316] Optimization Done.
I0428 19:32:00.729707 22724 caffe.cpp:259] Optimization Done.
