I0428 19:38:58.423732 24182 caffe.cpp:218] Using GPUs 0
I0428 19:38:58.464200 24182 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:58.982549 24182 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test290.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:58.982691 24182 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test290.prototxt
I0428 19:38:58.983104 24182 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:58.983124 24182 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:58.983227 24182 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:58.983305 24182 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:58.983403 24182 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:58.983425 24182 net.cpp:86] Creating Layer mnist
I0428 19:38:58.983434 24182 net.cpp:382] mnist -> data
I0428 19:38:58.983456 24182 net.cpp:382] mnist -> label
I0428 19:38:58.984555 24182 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:58.987013 24182 net.cpp:124] Setting up mnist
I0428 19:38:58.987031 24182 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:58.987037 24182 net.cpp:131] Top shape: 64 (64)
I0428 19:38:58.987040 24182 net.cpp:139] Memory required for data: 200960
I0428 19:38:58.987046 24182 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:58.987090 24182 net.cpp:86] Creating Layer conv0
I0428 19:38:58.987112 24182 net.cpp:408] conv0 <- data
I0428 19:38:58.987126 24182 net.cpp:382] conv0 -> conv0
I0428 19:38:59.275374 24182 net.cpp:124] Setting up conv0
I0428 19:38:59.275403 24182 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:59.275408 24182 net.cpp:139] Memory required for data: 495872
I0428 19:38:59.275424 24182 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:59.275439 24182 net.cpp:86] Creating Layer pool0
I0428 19:38:59.275442 24182 net.cpp:408] pool0 <- conv0
I0428 19:38:59.275449 24182 net.cpp:382] pool0 -> pool0
I0428 19:38:59.275497 24182 net.cpp:124] Setting up pool0
I0428 19:38:59.275506 24182 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:59.275508 24182 net.cpp:139] Memory required for data: 569600
I0428 19:38:59.275512 24182 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:59.275523 24182 net.cpp:86] Creating Layer conv1
I0428 19:38:59.275527 24182 net.cpp:408] conv1 <- pool0
I0428 19:38:59.275532 24182 net.cpp:382] conv1 -> conv1
I0428 19:38:59.277477 24182 net.cpp:124] Setting up conv1
I0428 19:38:59.277493 24182 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:59.277496 24182 net.cpp:139] Memory required for data: 602368
I0428 19:38:59.277505 24182 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:59.277514 24182 net.cpp:86] Creating Layer pool1
I0428 19:38:59.277518 24182 net.cpp:408] pool1 <- conv1
I0428 19:38:59.277523 24182 net.cpp:382] pool1 -> pool1
I0428 19:38:59.277561 24182 net.cpp:124] Setting up pool1
I0428 19:38:59.277568 24182 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:59.277572 24182 net.cpp:139] Memory required for data: 610560
I0428 19:38:59.277575 24182 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:59.277582 24182 net.cpp:86] Creating Layer ip1
I0428 19:38:59.277585 24182 net.cpp:408] ip1 <- pool1
I0428 19:38:59.277590 24182 net.cpp:382] ip1 -> ip1
I0428 19:38:59.277688 24182 net.cpp:124] Setting up ip1
I0428 19:38:59.277695 24182 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:59.277699 24182 net.cpp:139] Memory required for data: 613120
I0428 19:38:59.277706 24182 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:59.277712 24182 net.cpp:86] Creating Layer relu1
I0428 19:38:59.277715 24182 net.cpp:408] relu1 <- ip1
I0428 19:38:59.277719 24182 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:59.277889 24182 net.cpp:124] Setting up relu1
I0428 19:38:59.277899 24182 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:59.277901 24182 net.cpp:139] Memory required for data: 615680
I0428 19:38:59.277905 24182 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:59.277912 24182 net.cpp:86] Creating Layer ip2
I0428 19:38:59.277916 24182 net.cpp:408] ip2 <- ip1
I0428 19:38:59.277921 24182 net.cpp:382] ip2 -> ip2
I0428 19:38:59.278020 24182 net.cpp:124] Setting up ip2
I0428 19:38:59.278028 24182 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:59.278030 24182 net.cpp:139] Memory required for data: 622080
I0428 19:38:59.278036 24182 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:59.278043 24182 net.cpp:86] Creating Layer relu2
I0428 19:38:59.278046 24182 net.cpp:408] relu2 <- ip2
I0428 19:38:59.278050 24182 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:59.278801 24182 net.cpp:124] Setting up relu2
I0428 19:38:59.278815 24182 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:59.278817 24182 net.cpp:139] Memory required for data: 628480
I0428 19:38:59.278821 24182 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:59.278828 24182 net.cpp:86] Creating Layer ip3
I0428 19:38:59.278831 24182 net.cpp:408] ip3 <- ip2
I0428 19:38:59.278837 24182 net.cpp:382] ip3 -> ip3
I0428 19:38:59.278939 24182 net.cpp:124] Setting up ip3
I0428 19:38:59.278947 24182 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:59.278950 24182 net.cpp:139] Memory required for data: 631040
I0428 19:38:59.278959 24182 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:59.278964 24182 net.cpp:86] Creating Layer relu3
I0428 19:38:59.278967 24182 net.cpp:408] relu3 <- ip3
I0428 19:38:59.278971 24182 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:59.279181 24182 net.cpp:124] Setting up relu3
I0428 19:38:59.279191 24182 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:59.279193 24182 net.cpp:139] Memory required for data: 633600
I0428 19:38:59.279196 24182 layer_factory.hpp:77] Creating layer loss
I0428 19:38:59.279202 24182 net.cpp:86] Creating Layer loss
I0428 19:38:59.279206 24182 net.cpp:408] loss <- ip3
I0428 19:38:59.279211 24182 net.cpp:408] loss <- label
I0428 19:38:59.279217 24182 net.cpp:382] loss -> loss
I0428 19:38:59.279234 24182 layer_factory.hpp:77] Creating layer loss
I0428 19:38:59.279467 24182 net.cpp:124] Setting up loss
I0428 19:38:59.279477 24182 net.cpp:131] Top shape: (1)
I0428 19:38:59.279480 24182 net.cpp:134]     with loss weight 1
I0428 19:38:59.279495 24182 net.cpp:139] Memory required for data: 633604
I0428 19:38:59.279498 24182 net.cpp:200] loss needs backward computation.
I0428 19:38:59.279502 24182 net.cpp:200] relu3 needs backward computation.
I0428 19:38:59.279505 24182 net.cpp:200] ip3 needs backward computation.
I0428 19:38:59.279510 24182 net.cpp:200] relu2 needs backward computation.
I0428 19:38:59.279511 24182 net.cpp:200] ip2 needs backward computation.
I0428 19:38:59.279515 24182 net.cpp:200] relu1 needs backward computation.
I0428 19:38:59.279517 24182 net.cpp:200] ip1 needs backward computation.
I0428 19:38:59.279520 24182 net.cpp:200] pool1 needs backward computation.
I0428 19:38:59.279525 24182 net.cpp:200] conv1 needs backward computation.
I0428 19:38:59.279528 24182 net.cpp:200] pool0 needs backward computation.
I0428 19:38:59.279531 24182 net.cpp:200] conv0 needs backward computation.
I0428 19:38:59.279534 24182 net.cpp:202] mnist does not need backward computation.
I0428 19:38:59.279537 24182 net.cpp:244] This network produces output loss
I0428 19:38:59.279547 24182 net.cpp:257] Network initialization done.
I0428 19:38:59.279883 24182 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test290.prototxt
I0428 19:38:59.279911 24182 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:59.280006 24182 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:59.280088 24182 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:59.280133 24182 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:59.280146 24182 net.cpp:86] Creating Layer mnist
I0428 19:38:59.280151 24182 net.cpp:382] mnist -> data
I0428 19:38:59.280159 24182 net.cpp:382] mnist -> label
I0428 19:38:59.280247 24182 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:59.282464 24182 net.cpp:124] Setting up mnist
I0428 19:38:59.282477 24182 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:59.282482 24182 net.cpp:131] Top shape: 100 (100)
I0428 19:38:59.282486 24182 net.cpp:139] Memory required for data: 314000
I0428 19:38:59.282490 24182 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:59.282500 24182 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:59.282505 24182 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:59.282510 24182 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:59.282516 24182 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:59.282552 24182 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:59.282557 24182 net.cpp:131] Top shape: 100 (100)
I0428 19:38:59.282562 24182 net.cpp:131] Top shape: 100 (100)
I0428 19:38:59.282564 24182 net.cpp:139] Memory required for data: 314800
I0428 19:38:59.282567 24182 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:59.282575 24182 net.cpp:86] Creating Layer conv0
I0428 19:38:59.282578 24182 net.cpp:408] conv0 <- data
I0428 19:38:59.282582 24182 net.cpp:382] conv0 -> conv0
I0428 19:38:59.284230 24182 net.cpp:124] Setting up conv0
I0428 19:38:59.284245 24182 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:59.284248 24182 net.cpp:139] Memory required for data: 775600
I0428 19:38:59.284257 24182 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:59.284265 24182 net.cpp:86] Creating Layer pool0
I0428 19:38:59.284267 24182 net.cpp:408] pool0 <- conv0
I0428 19:38:59.284272 24182 net.cpp:382] pool0 -> pool0
I0428 19:38:59.284309 24182 net.cpp:124] Setting up pool0
I0428 19:38:59.284315 24182 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:59.284318 24182 net.cpp:139] Memory required for data: 890800
I0428 19:38:59.284322 24182 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:59.284329 24182 net.cpp:86] Creating Layer conv1
I0428 19:38:59.284332 24182 net.cpp:408] conv1 <- pool0
I0428 19:38:59.284337 24182 net.cpp:382] conv1 -> conv1
I0428 19:38:59.285900 24182 net.cpp:124] Setting up conv1
I0428 19:38:59.285914 24182 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:59.285918 24182 net.cpp:139] Memory required for data: 942000
I0428 19:38:59.285926 24182 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:59.285933 24182 net.cpp:86] Creating Layer pool1
I0428 19:38:59.285938 24182 net.cpp:408] pool1 <- conv1
I0428 19:38:59.285943 24182 net.cpp:382] pool1 -> pool1
I0428 19:38:59.285979 24182 net.cpp:124] Setting up pool1
I0428 19:38:59.285984 24182 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:59.285987 24182 net.cpp:139] Memory required for data: 954800
I0428 19:38:59.285990 24182 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:59.285996 24182 net.cpp:86] Creating Layer ip1
I0428 19:38:59.286000 24182 net.cpp:408] ip1 <- pool1
I0428 19:38:59.286003 24182 net.cpp:382] ip1 -> ip1
I0428 19:38:59.286139 24182 net.cpp:124] Setting up ip1
I0428 19:38:59.286146 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.286161 24182 net.cpp:139] Memory required for data: 958800
I0428 19:38:59.286170 24182 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:59.286175 24182 net.cpp:86] Creating Layer relu1
I0428 19:38:59.286178 24182 net.cpp:408] relu1 <- ip1
I0428 19:38:59.286183 24182 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:59.286375 24182 net.cpp:124] Setting up relu1
I0428 19:38:59.286401 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.286403 24182 net.cpp:139] Memory required for data: 962800
I0428 19:38:59.286407 24182 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:59.286415 24182 net.cpp:86] Creating Layer ip2
I0428 19:38:59.286418 24182 net.cpp:408] ip2 <- ip1
I0428 19:38:59.286424 24182 net.cpp:382] ip2 -> ip2
I0428 19:38:59.286543 24182 net.cpp:124] Setting up ip2
I0428 19:38:59.286550 24182 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:59.286554 24182 net.cpp:139] Memory required for data: 972800
I0428 19:38:59.286559 24182 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:59.286566 24182 net.cpp:86] Creating Layer relu2
I0428 19:38:59.286576 24182 net.cpp:408] relu2 <- ip2
I0428 19:38:59.286581 24182 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:59.286739 24182 net.cpp:124] Setting up relu2
I0428 19:38:59.286748 24182 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:59.286758 24182 net.cpp:139] Memory required for data: 982800
I0428 19:38:59.286761 24182 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:59.286768 24182 net.cpp:86] Creating Layer ip3
I0428 19:38:59.286777 24182 net.cpp:408] ip3 <- ip2
I0428 19:38:59.286782 24182 net.cpp:382] ip3 -> ip3
I0428 19:38:59.286883 24182 net.cpp:124] Setting up ip3
I0428 19:38:59.286890 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.286895 24182 net.cpp:139] Memory required for data: 986800
I0428 19:38:59.286908 24182 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:59.286914 24182 net.cpp:86] Creating Layer relu3
I0428 19:38:59.286917 24182 net.cpp:408] relu3 <- ip3
I0428 19:38:59.286921 24182 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:59.287884 24182 net.cpp:124] Setting up relu3
I0428 19:38:59.287897 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.287900 24182 net.cpp:139] Memory required for data: 990800
I0428 19:38:59.287904 24182 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:59.287909 24182 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:59.287914 24182 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:59.287932 24182 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:59.287938 24182 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:59.287992 24182 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:59.287998 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.288002 24182 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:59.288005 24182 net.cpp:139] Memory required for data: 998800
I0428 19:38:59.288008 24182 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:59.288020 24182 net.cpp:86] Creating Layer accuracy
I0428 19:38:59.288023 24182 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:59.288028 24182 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:59.288038 24182 net.cpp:382] accuracy -> accuracy
I0428 19:38:59.288045 24182 net.cpp:124] Setting up accuracy
I0428 19:38:59.288054 24182 net.cpp:131] Top shape: (1)
I0428 19:38:59.288058 24182 net.cpp:139] Memory required for data: 998804
I0428 19:38:59.288060 24182 layer_factory.hpp:77] Creating layer loss
I0428 19:38:59.288065 24182 net.cpp:86] Creating Layer loss
I0428 19:38:59.288069 24182 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:59.288072 24182 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:59.288077 24182 net.cpp:382] loss -> loss
I0428 19:38:59.288089 24182 layer_factory.hpp:77] Creating layer loss
I0428 19:38:59.288331 24182 net.cpp:124] Setting up loss
I0428 19:38:59.288339 24182 net.cpp:131] Top shape: (1)
I0428 19:38:59.288342 24182 net.cpp:134]     with loss weight 1
I0428 19:38:59.288349 24182 net.cpp:139] Memory required for data: 998808
I0428 19:38:59.288362 24182 net.cpp:200] loss needs backward computation.
I0428 19:38:59.288365 24182 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:59.288370 24182 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:59.288373 24182 net.cpp:200] relu3 needs backward computation.
I0428 19:38:59.288375 24182 net.cpp:200] ip3 needs backward computation.
I0428 19:38:59.288378 24182 net.cpp:200] relu2 needs backward computation.
I0428 19:38:59.288381 24182 net.cpp:200] ip2 needs backward computation.
I0428 19:38:59.288384 24182 net.cpp:200] relu1 needs backward computation.
I0428 19:38:59.288393 24182 net.cpp:200] ip1 needs backward computation.
I0428 19:38:59.288395 24182 net.cpp:200] pool1 needs backward computation.
I0428 19:38:59.288398 24182 net.cpp:200] conv1 needs backward computation.
I0428 19:38:59.288403 24182 net.cpp:200] pool0 needs backward computation.
I0428 19:38:59.288405 24182 net.cpp:200] conv0 needs backward computation.
I0428 19:38:59.288409 24182 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:59.288413 24182 net.cpp:202] mnist does not need backward computation.
I0428 19:38:59.288415 24182 net.cpp:244] This network produces output accuracy
I0428 19:38:59.288419 24182 net.cpp:244] This network produces output loss
I0428 19:38:59.288430 24182 net.cpp:257] Network initialization done.
I0428 19:38:59.288472 24182 solver.cpp:56] Solver scaffolding done.
I0428 19:38:59.288858 24182 caffe.cpp:248] Starting Optimization
I0428 19:38:59.288866 24182 solver.cpp:273] Solving LeNet
I0428 19:38:59.288869 24182 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:59.289687 24182 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:59.291739 24182 blocking_queue.cpp:49] Waiting for data
I0428 19:38:59.364743 24189 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:59.365207 24182 solver.cpp:398]     Test net output #0: accuracy = 0.1021
I0428 19:38:59.365231 24182 solver.cpp:398]     Test net output #1: loss = 2.30239 (* 1 = 2.30239 loss)
I0428 19:38:59.367050 24182 solver.cpp:219] Iteration 0 (-5.57879e-31 iter/s, 0.0781527s/100 iters), loss = 2.30752
I0428 19:38:59.367117 24182 solver.cpp:238]     Train net output #0: loss = 2.30752 (* 1 = 2.30752 loss)
I0428 19:38:59.367146 24182 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:59.436028 24182 solver.cpp:219] Iteration 100 (1451.06 iter/s, 0.0689151s/100 iters), loss = 1.97185
I0428 19:38:59.436053 24182 solver.cpp:238]     Train net output #0: loss = 1.97185 (* 1 = 1.97185 loss)
I0428 19:38:59.436074 24182 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:59.504715 24182 solver.cpp:219] Iteration 200 (1456.58 iter/s, 0.0686541s/100 iters), loss = 1.25723
I0428 19:38:59.504756 24182 solver.cpp:238]     Train net output #0: loss = 1.25723 (* 1 = 1.25723 loss)
I0428 19:38:59.504762 24182 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:59.572638 24182 solver.cpp:219] Iteration 300 (1473.32 iter/s, 0.0678738s/100 iters), loss = 1.32603
I0428 19:38:59.572661 24182 solver.cpp:238]     Train net output #0: loss = 1.32603 (* 1 = 1.32603 loss)
I0428 19:38:59.572667 24182 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:59.638700 24182 solver.cpp:219] Iteration 400 (1514.48 iter/s, 0.0660295s/100 iters), loss = 0.978229
I0428 19:38:59.638723 24182 solver.cpp:238]     Train net output #0: loss = 0.978229 (* 1 = 0.978229 loss)
I0428 19:38:59.638730 24182 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:59.703447 24182 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:59.763710 24189 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:59.764137 24182 solver.cpp:398]     Test net output #0: accuracy = 0.6238
I0428 19:38:59.764158 24182 solver.cpp:398]     Test net output #1: loss = 1.08514 (* 1 = 1.08514 loss)
I0428 19:38:59.764896 24182 solver.cpp:219] Iteration 500 (792.645 iter/s, 0.12616s/100 iters), loss = 1.19295
I0428 19:38:59.764932 24182 solver.cpp:238]     Train net output #0: loss = 1.19295 (* 1 = 1.19295 loss)
I0428 19:38:59.764971 24182 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:59.833992 24182 solver.cpp:219] Iteration 600 (1448.65 iter/s, 0.0690299s/100 iters), loss = 0.962178
I0428 19:38:59.834015 24182 solver.cpp:238]     Train net output #0: loss = 0.962178 (* 1 = 0.962178 loss)
I0428 19:38:59.834036 24182 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:59.902581 24182 solver.cpp:219] Iteration 700 (1458.64 iter/s, 0.0685568s/100 iters), loss = 0.981059
I0428 19:38:59.902604 24182 solver.cpp:238]     Train net output #0: loss = 0.981059 (* 1 = 0.981059 loss)
I0428 19:38:59.902609 24182 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:59.971730 24182 solver.cpp:219] Iteration 800 (1446.97 iter/s, 0.0691098s/100 iters), loss = 0.897649
I0428 19:38:59.971771 24182 solver.cpp:238]     Train net output #0: loss = 0.897649 (* 1 = 0.897649 loss)
I0428 19:38:59.971776 24182 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:00.040227 24182 solver.cpp:219] Iteration 900 (1460.59 iter/s, 0.0684657s/100 iters), loss = 0.738899
I0428 19:39:00.040267 24182 solver.cpp:238]     Train net output #0: loss = 0.738899 (* 1 = 0.738899 loss)
I0428 19:39:00.040273 24182 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:00.064378 24188 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:00.108747 24182 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:00.109382 24182 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:00.109856 24182 solver.cpp:311] Iteration 1000, loss = 0.858655
I0428 19:39:00.109872 24182 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:00.185166 24189 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:00.185741 24182 solver.cpp:398]     Test net output #0: accuracy = 0.7083
I0428 19:39:00.185775 24182 solver.cpp:398]     Test net output #1: loss = 0.786608 (* 1 = 0.786608 loss)
I0428 19:39:00.185783 24182 solver.cpp:316] Optimization Done.
I0428 19:39:00.185788 24182 caffe.cpp:259] Optimization Done.
