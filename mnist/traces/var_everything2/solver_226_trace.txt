I0428 19:35:29.851757 23518 caffe.cpp:218] Using GPUs 0
I0428 19:35:29.889374 23518 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:30.395997 23518 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test226.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:30.396126 23518 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test226.prototxt
I0428 19:35:30.396472 23518 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:30.396489 23518 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:30.396571 23518 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:30.396637 23518 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:30.396733 23518 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:30.396755 23518 net.cpp:86] Creating Layer mnist
I0428 19:35:30.396762 23518 net.cpp:382] mnist -> data
I0428 19:35:30.396785 23518 net.cpp:382] mnist -> label
I0428 19:35:30.397904 23518 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:30.400295 23518 net.cpp:124] Setting up mnist
I0428 19:35:30.400312 23518 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:30.400318 23518 net.cpp:131] Top shape: 64 (64)
I0428 19:35:30.400322 23518 net.cpp:139] Memory required for data: 200960
I0428 19:35:30.400329 23518 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:30.400344 23518 net.cpp:86] Creating Layer conv0
I0428 19:35:30.400349 23518 net.cpp:408] conv0 <- data
I0428 19:35:30.400360 23518 net.cpp:382] conv0 -> conv0
I0428 19:35:30.684027 23518 net.cpp:124] Setting up conv0
I0428 19:35:30.684056 23518 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:30.684059 23518 net.cpp:139] Memory required for data: 7573760
I0428 19:35:30.684077 23518 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:30.684090 23518 net.cpp:86] Creating Layer pool0
I0428 19:35:30.684113 23518 net.cpp:408] pool0 <- conv0
I0428 19:35:30.684119 23518 net.cpp:382] pool0 -> pool0
I0428 19:35:30.684168 23518 net.cpp:124] Setting up pool0
I0428 19:35:30.684175 23518 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:30.684177 23518 net.cpp:139] Memory required for data: 9416960
I0428 19:35:30.684181 23518 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:30.684188 23518 net.cpp:86] Creating Layer ip1
I0428 19:35:30.684192 23518 net.cpp:408] ip1 <- pool0
I0428 19:35:30.684197 23518 net.cpp:382] ip1 -> ip1
I0428 19:35:30.687285 23518 net.cpp:124] Setting up ip1
I0428 19:35:30.687299 23518 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:30.687304 23518 net.cpp:139] Memory required for data: 9429760
I0428 19:35:30.687312 23518 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:30.687320 23518 net.cpp:86] Creating Layer relu1
I0428 19:35:30.687324 23518 net.cpp:408] relu1 <- ip1
I0428 19:35:30.687328 23518 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:30.687503 23518 net.cpp:124] Setting up relu1
I0428 19:35:30.687512 23518 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:30.687515 23518 net.cpp:139] Memory required for data: 9442560
I0428 19:35:30.687520 23518 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:30.687525 23518 net.cpp:86] Creating Layer ip2
I0428 19:35:30.687530 23518 net.cpp:408] ip2 <- ip1
I0428 19:35:30.687535 23518 net.cpp:382] ip2 -> ip2
I0428 19:35:30.687633 23518 net.cpp:124] Setting up ip2
I0428 19:35:30.687639 23518 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:30.687643 23518 net.cpp:139] Memory required for data: 9445120
I0428 19:35:30.687650 23518 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:30.687655 23518 net.cpp:86] Creating Layer relu2
I0428 19:35:30.687659 23518 net.cpp:408] relu2 <- ip2
I0428 19:35:30.687662 23518 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:30.688417 23518 net.cpp:124] Setting up relu2
I0428 19:35:30.688431 23518 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:30.688434 23518 net.cpp:139] Memory required for data: 9447680
I0428 19:35:30.688438 23518 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:30.688446 23518 net.cpp:86] Creating Layer ip3
I0428 19:35:30.688448 23518 net.cpp:408] ip3 <- ip2
I0428 19:35:30.688454 23518 net.cpp:382] ip3 -> ip3
I0428 19:35:30.688551 23518 net.cpp:124] Setting up ip3
I0428 19:35:30.688558 23518 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:30.688562 23518 net.cpp:139] Memory required for data: 9450240
I0428 19:35:30.688568 23518 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:30.688575 23518 net.cpp:86] Creating Layer relu3
I0428 19:35:30.688577 23518 net.cpp:408] relu3 <- ip3
I0428 19:35:30.688582 23518 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:30.688735 23518 net.cpp:124] Setting up relu3
I0428 19:35:30.688742 23518 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:30.688745 23518 net.cpp:139] Memory required for data: 9452800
I0428 19:35:30.688748 23518 layer_factory.hpp:77] Creating layer loss
I0428 19:35:30.688753 23518 net.cpp:86] Creating Layer loss
I0428 19:35:30.688757 23518 net.cpp:408] loss <- ip3
I0428 19:35:30.688761 23518 net.cpp:408] loss <- label
I0428 19:35:30.688766 23518 net.cpp:382] loss -> loss
I0428 19:35:30.688784 23518 layer_factory.hpp:77] Creating layer loss
I0428 19:35:30.689059 23518 net.cpp:124] Setting up loss
I0428 19:35:30.689069 23518 net.cpp:131] Top shape: (1)
I0428 19:35:30.689074 23518 net.cpp:134]     with loss weight 1
I0428 19:35:30.689087 23518 net.cpp:139] Memory required for data: 9452804
I0428 19:35:30.689091 23518 net.cpp:200] loss needs backward computation.
I0428 19:35:30.689095 23518 net.cpp:200] relu3 needs backward computation.
I0428 19:35:30.689098 23518 net.cpp:200] ip3 needs backward computation.
I0428 19:35:30.689101 23518 net.cpp:200] relu2 needs backward computation.
I0428 19:35:30.689105 23518 net.cpp:200] ip2 needs backward computation.
I0428 19:35:30.689107 23518 net.cpp:200] relu1 needs backward computation.
I0428 19:35:30.689110 23518 net.cpp:200] ip1 needs backward computation.
I0428 19:35:30.689124 23518 net.cpp:200] pool0 needs backward computation.
I0428 19:35:30.689127 23518 net.cpp:200] conv0 needs backward computation.
I0428 19:35:30.689131 23518 net.cpp:202] mnist does not need backward computation.
I0428 19:35:30.689134 23518 net.cpp:244] This network produces output loss
I0428 19:35:30.689142 23518 net.cpp:257] Network initialization done.
I0428 19:35:30.689435 23518 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test226.prototxt
I0428 19:35:30.689463 23518 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:30.689553 23518 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:30.689616 23518 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:30.689661 23518 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:30.689672 23518 net.cpp:86] Creating Layer mnist
I0428 19:35:30.689677 23518 net.cpp:382] mnist -> data
I0428 19:35:30.689685 23518 net.cpp:382] mnist -> label
I0428 19:35:30.689772 23518 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:30.691717 23518 net.cpp:124] Setting up mnist
I0428 19:35:30.691731 23518 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:30.691737 23518 net.cpp:131] Top shape: 100 (100)
I0428 19:35:30.691740 23518 net.cpp:139] Memory required for data: 314000
I0428 19:35:30.691745 23518 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:30.691756 23518 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:30.691758 23518 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:30.691764 23518 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:30.691771 23518 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:30.691823 23518 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:30.691829 23518 net.cpp:131] Top shape: 100 (100)
I0428 19:35:30.691833 23518 net.cpp:131] Top shape: 100 (100)
I0428 19:35:30.691836 23518 net.cpp:139] Memory required for data: 314800
I0428 19:35:30.691848 23518 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:30.691857 23518 net.cpp:86] Creating Layer conv0
I0428 19:35:30.691861 23518 net.cpp:408] conv0 <- data
I0428 19:35:30.691866 23518 net.cpp:382] conv0 -> conv0
I0428 19:35:30.693516 23518 net.cpp:124] Setting up conv0
I0428 19:35:30.693529 23518 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:30.693533 23518 net.cpp:139] Memory required for data: 11834800
I0428 19:35:30.693543 23518 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:30.693549 23518 net.cpp:86] Creating Layer pool0
I0428 19:35:30.693552 23518 net.cpp:408] pool0 <- conv0
I0428 19:35:30.693557 23518 net.cpp:382] pool0 -> pool0
I0428 19:35:30.693593 23518 net.cpp:124] Setting up pool0
I0428 19:35:30.693598 23518 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:30.693601 23518 net.cpp:139] Memory required for data: 14714800
I0428 19:35:30.693604 23518 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:30.693611 23518 net.cpp:86] Creating Layer ip1
I0428 19:35:30.693614 23518 net.cpp:408] ip1 <- pool0
I0428 19:35:30.693619 23518 net.cpp:382] ip1 -> ip1
I0428 19:35:30.695787 23518 net.cpp:124] Setting up ip1
I0428 19:35:30.695796 23518 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:30.695799 23518 net.cpp:139] Memory required for data: 14734800
I0428 19:35:30.695806 23518 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:30.695811 23518 net.cpp:86] Creating Layer relu1
I0428 19:35:30.695814 23518 net.cpp:408] relu1 <- ip1
I0428 19:35:30.695818 23518 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:30.695994 23518 net.cpp:124] Setting up relu1
I0428 19:35:30.696003 23518 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:30.696007 23518 net.cpp:139] Memory required for data: 14754800
I0428 19:35:30.696010 23518 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:30.696017 23518 net.cpp:86] Creating Layer ip2
I0428 19:35:30.696019 23518 net.cpp:408] ip2 <- ip1
I0428 19:35:30.696024 23518 net.cpp:382] ip2 -> ip2
I0428 19:35:30.696123 23518 net.cpp:124] Setting up ip2
I0428 19:35:30.696130 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.696133 23518 net.cpp:139] Memory required for data: 14758800
I0428 19:35:30.696141 23518 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:30.696146 23518 net.cpp:86] Creating Layer relu2
I0428 19:35:30.696148 23518 net.cpp:408] relu2 <- ip2
I0428 19:35:30.696152 23518 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:30.697031 23518 net.cpp:124] Setting up relu2
I0428 19:35:30.697058 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.697062 23518 net.cpp:139] Memory required for data: 14762800
I0428 19:35:30.697067 23518 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:30.697077 23518 net.cpp:86] Creating Layer ip3
I0428 19:35:30.697080 23518 net.cpp:408] ip3 <- ip2
I0428 19:35:30.697087 23518 net.cpp:382] ip3 -> ip3
I0428 19:35:30.697201 23518 net.cpp:124] Setting up ip3
I0428 19:35:30.697209 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.697213 23518 net.cpp:139] Memory required for data: 14766800
I0428 19:35:30.697219 23518 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:30.697226 23518 net.cpp:86] Creating Layer relu3
I0428 19:35:30.697228 23518 net.cpp:408] relu3 <- ip3
I0428 19:35:30.697233 23518 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:30.697392 23518 net.cpp:124] Setting up relu3
I0428 19:35:30.697401 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.697404 23518 net.cpp:139] Memory required for data: 14770800
I0428 19:35:30.697407 23518 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:30.697412 23518 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:30.697417 23518 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:30.697422 23518 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:30.697427 23518 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:30.697459 23518 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:30.697466 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.697481 23518 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:30.697484 23518 net.cpp:139] Memory required for data: 14778800
I0428 19:35:30.697487 23518 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:30.697492 23518 net.cpp:86] Creating Layer accuracy
I0428 19:35:30.697496 23518 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:30.697500 23518 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:30.697505 23518 net.cpp:382] accuracy -> accuracy
I0428 19:35:30.697512 23518 net.cpp:124] Setting up accuracy
I0428 19:35:30.697516 23518 net.cpp:131] Top shape: (1)
I0428 19:35:30.697518 23518 net.cpp:139] Memory required for data: 14778804
I0428 19:35:30.697521 23518 layer_factory.hpp:77] Creating layer loss
I0428 19:35:30.697525 23518 net.cpp:86] Creating Layer loss
I0428 19:35:30.697535 23518 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:30.697538 23518 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:30.697543 23518 net.cpp:382] loss -> loss
I0428 19:35:30.697548 23518 layer_factory.hpp:77] Creating layer loss
I0428 19:35:30.697834 23518 net.cpp:124] Setting up loss
I0428 19:35:30.697842 23518 net.cpp:131] Top shape: (1)
I0428 19:35:30.697846 23518 net.cpp:134]     with loss weight 1
I0428 19:35:30.697852 23518 net.cpp:139] Memory required for data: 14778808
I0428 19:35:30.697856 23518 net.cpp:200] loss needs backward computation.
I0428 19:35:30.697860 23518 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:30.697865 23518 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:30.697867 23518 net.cpp:200] relu3 needs backward computation.
I0428 19:35:30.697870 23518 net.cpp:200] ip3 needs backward computation.
I0428 19:35:30.697875 23518 net.cpp:200] relu2 needs backward computation.
I0428 19:35:30.697877 23518 net.cpp:200] ip2 needs backward computation.
I0428 19:35:30.697880 23518 net.cpp:200] relu1 needs backward computation.
I0428 19:35:30.697883 23518 net.cpp:200] ip1 needs backward computation.
I0428 19:35:30.697886 23518 net.cpp:200] pool0 needs backward computation.
I0428 19:35:30.697890 23518 net.cpp:200] conv0 needs backward computation.
I0428 19:35:30.697893 23518 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:30.697897 23518 net.cpp:202] mnist does not need backward computation.
I0428 19:35:30.697901 23518 net.cpp:244] This network produces output accuracy
I0428 19:35:30.697904 23518 net.cpp:244] This network produces output loss
I0428 19:35:30.697914 23518 net.cpp:257] Network initialization done.
I0428 19:35:30.697952 23518 solver.cpp:56] Solver scaffolding done.
I0428 19:35:30.698223 23518 caffe.cpp:248] Starting Optimization
I0428 19:35:30.698230 23518 solver.cpp:273] Solving LeNet
I0428 19:35:30.698232 23518 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:30.700073 23518 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:30.797473 23525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:30.800145 23518 solver.cpp:398]     Test net output #0: accuracy = 0.1057
I0428 19:35:30.800164 23518 solver.cpp:398]     Test net output #1: loss = 2.29563 (* 1 = 2.29563 loss)
I0428 19:35:30.804538 23518 solver.cpp:219] Iteration 0 (-7.65109e-43 iter/s, 0.106281s/100 iters), loss = 2.2916
I0428 19:35:30.804579 23518 solver.cpp:238]     Train net output #0: loss = 2.2916 (* 1 = 2.2916 loss)
I0428 19:35:30.804589 23518 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:30.950583 23518 solver.cpp:219] Iteration 100 (684.898 iter/s, 0.146007s/100 iters), loss = 0.494382
I0428 19:35:30.950624 23518 solver.cpp:238]     Train net output #0: loss = 0.494382 (* 1 = 0.494382 loss)
I0428 19:35:30.950630 23518 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:31.097576 23518 solver.cpp:219] Iteration 200 (680.551 iter/s, 0.14694s/100 iters), loss = 0.287577
I0428 19:35:31.097600 23518 solver.cpp:238]     Train net output #0: loss = 0.287577 (* 1 = 0.287577 loss)
I0428 19:35:31.097606 23518 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:31.244222 23518 solver.cpp:219] Iteration 300 (682.081 iter/s, 0.14661s/100 iters), loss = 0.197082
I0428 19:35:31.244273 23518 solver.cpp:238]     Train net output #0: loss = 0.197082 (* 1 = 0.197082 loss)
I0428 19:35:31.244279 23518 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:31.390058 23518 solver.cpp:219] Iteration 400 (686 iter/s, 0.145773s/100 iters), loss = 0.146346
I0428 19:35:31.390112 23518 solver.cpp:238]     Train net output #0: loss = 0.146346 (* 1 = 0.146346 loss)
I0428 19:35:31.390120 23518 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:31.531301 23518 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:31.627558 23525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:31.630887 23518 solver.cpp:398]     Test net output #0: accuracy = 0.9548
I0428 19:35:31.630921 23518 solver.cpp:398]     Test net output #1: loss = 0.152883 (* 1 = 0.152883 loss)
I0428 19:35:31.632290 23518 solver.cpp:219] Iteration 500 (412.949 iter/s, 0.242161s/100 iters), loss = 0.287532
I0428 19:35:31.632328 23518 solver.cpp:238]     Train net output #0: loss = 0.287532 (* 1 = 0.287532 loss)
I0428 19:35:31.632334 23518 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:31.780534 23518 solver.cpp:219] Iteration 600 (674.757 iter/s, 0.148201s/100 iters), loss = 0.0978267
I0428 19:35:31.780596 23518 solver.cpp:238]     Train net output #0: loss = 0.0978266 (* 1 = 0.0978266 loss)
I0428 19:35:31.780611 23518 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:31.936244 23518 solver.cpp:219] Iteration 700 (642.496 iter/s, 0.155643s/100 iters), loss = 0.209975
I0428 19:35:31.936300 23518 solver.cpp:238]     Train net output #0: loss = 0.209975 (* 1 = 0.209975 loss)
I0428 19:35:31.936307 23518 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:32.089285 23518 solver.cpp:219] Iteration 800 (653.683 iter/s, 0.152979s/100 iters), loss = 0.256104
I0428 19:35:32.089339 23518 solver.cpp:238]     Train net output #0: loss = 0.256104 (* 1 = 0.256104 loss)
I0428 19:35:32.089362 23518 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:32.243782 23518 solver.cpp:219] Iteration 900 (647.528 iter/s, 0.154434s/100 iters), loss = 0.191157
I0428 19:35:32.243811 23518 solver.cpp:238]     Train net output #0: loss = 0.191157 (* 1 = 0.191157 loss)
I0428 19:35:32.243819 23518 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:32.296658 23524 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:32.396466 23518 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:32.402652 23518 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:32.406479 23518 solver.cpp:311] Iteration 1000, loss = 0.101522
I0428 19:35:32.406497 23518 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:32.516775 23525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:32.520828 23518 solver.cpp:398]     Test net output #0: accuracy = 0.9708
I0428 19:35:32.520870 23518 solver.cpp:398]     Test net output #1: loss = 0.095226 (* 1 = 0.095226 loss)
I0428 19:35:32.520886 23518 solver.cpp:316] Optimization Done.
I0428 19:35:32.520891 23518 caffe.cpp:259] Optimization Done.
