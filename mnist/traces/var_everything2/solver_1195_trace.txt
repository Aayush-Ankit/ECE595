I0428 20:13:13.455054 32425 caffe.cpp:218] Using GPUs 0
I0428 20:13:13.487442 32425 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:13.941217 32425 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1195.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:13.941368 32425 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1195.prototxt
I0428 20:13:13.941763 32425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:13.941793 32425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:13.941877 32425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:13.941944 32425 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:13.942030 32425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:13.942049 32425 net.cpp:86] Creating Layer mnist
I0428 20:13:13.942055 32425 net.cpp:382] mnist -> data
I0428 20:13:13.942075 32425 net.cpp:382] mnist -> label
I0428 20:13:13.943130 32425 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:13.945441 32425 net.cpp:124] Setting up mnist
I0428 20:13:13.945473 32425 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:13.945478 32425 net.cpp:131] Top shape: 64 (64)
I0428 20:13:13.945482 32425 net.cpp:139] Memory required for data: 200960
I0428 20:13:13.945487 32425 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:13.945500 32425 net.cpp:86] Creating Layer conv0
I0428 20:13:13.945518 32425 net.cpp:408] conv0 <- data
I0428 20:13:13.945528 32425 net.cpp:382] conv0 -> conv0
I0428 20:13:14.182740 32425 net.cpp:124] Setting up conv0
I0428 20:13:14.182785 32425 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:14.182788 32425 net.cpp:139] Memory required for data: 3887360
I0428 20:13:14.182802 32425 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:14.182816 32425 net.cpp:86] Creating Layer pool0
I0428 20:13:14.182819 32425 net.cpp:408] pool0 <- conv0
I0428 20:13:14.182839 32425 net.cpp:382] pool0 -> pool0
I0428 20:13:14.182900 32425 net.cpp:124] Setting up pool0
I0428 20:13:14.182907 32425 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:14.182910 32425 net.cpp:139] Memory required for data: 4808960
I0428 20:13:14.182914 32425 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:14.182924 32425 net.cpp:86] Creating Layer conv1
I0428 20:13:14.182927 32425 net.cpp:408] conv1 <- pool0
I0428 20:13:14.182931 32425 net.cpp:382] conv1 -> conv1
I0428 20:13:14.185297 32425 net.cpp:124] Setting up conv1
I0428 20:13:14.185326 32425 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:14.185330 32425 net.cpp:139] Memory required for data: 6447360
I0428 20:13:14.185338 32425 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:14.185344 32425 net.cpp:86] Creating Layer pool1
I0428 20:13:14.185348 32425 net.cpp:408] pool1 <- conv1
I0428 20:13:14.185353 32425 net.cpp:382] pool1 -> pool1
I0428 20:13:14.185401 32425 net.cpp:124] Setting up pool1
I0428 20:13:14.185407 32425 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:14.185411 32425 net.cpp:139] Memory required for data: 6856960
I0428 20:13:14.185415 32425 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:14.185426 32425 net.cpp:86] Creating Layer ip1
I0428 20:13:14.185430 32425 net.cpp:408] ip1 <- pool1
I0428 20:13:14.185434 32425 net.cpp:382] ip1 -> ip1
I0428 20:13:14.185799 32425 net.cpp:124] Setting up ip1
I0428 20:13:14.185807 32425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:14.185825 32425 net.cpp:139] Memory required for data: 6863360
I0428 20:13:14.185832 32425 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:14.185837 32425 net.cpp:86] Creating Layer relu1
I0428 20:13:14.185840 32425 net.cpp:408] relu1 <- ip1
I0428 20:13:14.185844 32425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:14.186002 32425 net.cpp:124] Setting up relu1
I0428 20:13:14.186010 32425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:14.186013 32425 net.cpp:139] Memory required for data: 6869760
I0428 20:13:14.186017 32425 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:14.186022 32425 net.cpp:86] Creating Layer ip2
I0428 20:13:14.186025 32425 net.cpp:408] ip2 <- ip1
I0428 20:13:14.186030 32425 net.cpp:382] ip2 -> ip2
I0428 20:13:14.186120 32425 net.cpp:124] Setting up ip2
I0428 20:13:14.186127 32425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:14.186131 32425 net.cpp:139] Memory required for data: 6876160
I0428 20:13:14.186136 32425 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:14.186141 32425 net.cpp:86] Creating Layer relu2
I0428 20:13:14.186144 32425 net.cpp:408] relu2 <- ip2
I0428 20:13:14.186148 32425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:14.186874 32425 net.cpp:124] Setting up relu2
I0428 20:13:14.186887 32425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:14.186905 32425 net.cpp:139] Memory required for data: 6882560
I0428 20:13:14.186908 32425 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:14.186915 32425 net.cpp:86] Creating Layer ip3
I0428 20:13:14.186919 32425 net.cpp:408] ip3 <- ip2
I0428 20:13:14.186924 32425 net.cpp:382] ip3 -> ip3
I0428 20:13:14.187017 32425 net.cpp:124] Setting up ip3
I0428 20:13:14.187024 32425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:14.187027 32425 net.cpp:139] Memory required for data: 6885120
I0428 20:13:14.187036 32425 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:14.187041 32425 net.cpp:86] Creating Layer relu3
I0428 20:13:14.187042 32425 net.cpp:408] relu3 <- ip3
I0428 20:13:14.187047 32425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:14.187201 32425 net.cpp:124] Setting up relu3
I0428 20:13:14.187211 32425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:14.187213 32425 net.cpp:139] Memory required for data: 6887680
I0428 20:13:14.187216 32425 layer_factory.hpp:77] Creating layer loss
I0428 20:13:14.187222 32425 net.cpp:86] Creating Layer loss
I0428 20:13:14.187225 32425 net.cpp:408] loss <- ip3
I0428 20:13:14.187228 32425 net.cpp:408] loss <- label
I0428 20:13:14.187233 32425 net.cpp:382] loss -> loss
I0428 20:13:14.187250 32425 layer_factory.hpp:77] Creating layer loss
I0428 20:13:14.187458 32425 net.cpp:124] Setting up loss
I0428 20:13:14.187466 32425 net.cpp:131] Top shape: (1)
I0428 20:13:14.187469 32425 net.cpp:134]     with loss weight 1
I0428 20:13:14.187484 32425 net.cpp:139] Memory required for data: 6887684
I0428 20:13:14.187486 32425 net.cpp:200] loss needs backward computation.
I0428 20:13:14.187489 32425 net.cpp:200] relu3 needs backward computation.
I0428 20:13:14.187492 32425 net.cpp:200] ip3 needs backward computation.
I0428 20:13:14.187495 32425 net.cpp:200] relu2 needs backward computation.
I0428 20:13:14.187499 32425 net.cpp:200] ip2 needs backward computation.
I0428 20:13:14.187500 32425 net.cpp:200] relu1 needs backward computation.
I0428 20:13:14.187503 32425 net.cpp:200] ip1 needs backward computation.
I0428 20:13:14.187506 32425 net.cpp:200] pool1 needs backward computation.
I0428 20:13:14.187508 32425 net.cpp:200] conv1 needs backward computation.
I0428 20:13:14.187511 32425 net.cpp:200] pool0 needs backward computation.
I0428 20:13:14.187515 32425 net.cpp:200] conv0 needs backward computation.
I0428 20:13:14.187517 32425 net.cpp:202] mnist does not need backward computation.
I0428 20:13:14.187520 32425 net.cpp:244] This network produces output loss
I0428 20:13:14.187528 32425 net.cpp:257] Network initialization done.
I0428 20:13:14.187899 32425 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1195.prototxt
I0428 20:13:14.187940 32425 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:14.188060 32425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:14.188138 32425 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:14.188180 32425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:14.188194 32425 net.cpp:86] Creating Layer mnist
I0428 20:13:14.188197 32425 net.cpp:382] mnist -> data
I0428 20:13:14.188205 32425 net.cpp:382] mnist -> label
I0428 20:13:14.188285 32425 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:14.190228 32425 net.cpp:124] Setting up mnist
I0428 20:13:14.190258 32425 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:14.190263 32425 net.cpp:131] Top shape: 100 (100)
I0428 20:13:14.190265 32425 net.cpp:139] Memory required for data: 314000
I0428 20:13:14.190268 32425 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:14.190305 32425 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:14.190310 32425 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:14.190313 32425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:14.190320 32425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:14.190364 32425 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:14.190369 32425 net.cpp:131] Top shape: 100 (100)
I0428 20:13:14.190373 32425 net.cpp:131] Top shape: 100 (100)
I0428 20:13:14.190376 32425 net.cpp:139] Memory required for data: 314800
I0428 20:13:14.190378 32425 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:14.190387 32425 net.cpp:86] Creating Layer conv0
I0428 20:13:14.190389 32425 net.cpp:408] conv0 <- data
I0428 20:13:14.190393 32425 net.cpp:382] conv0 -> conv0
I0428 20:13:14.192044 32425 net.cpp:124] Setting up conv0
I0428 20:13:14.192056 32425 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:14.192060 32425 net.cpp:139] Memory required for data: 6074800
I0428 20:13:14.192068 32425 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:14.192075 32425 net.cpp:86] Creating Layer pool0
I0428 20:13:14.192092 32425 net.cpp:408] pool0 <- conv0
I0428 20:13:14.192097 32425 net.cpp:382] pool0 -> pool0
I0428 20:13:14.192131 32425 net.cpp:124] Setting up pool0
I0428 20:13:14.192137 32425 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:14.192139 32425 net.cpp:139] Memory required for data: 7514800
I0428 20:13:14.192142 32425 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:14.192150 32425 net.cpp:86] Creating Layer conv1
I0428 20:13:14.192153 32425 net.cpp:408] conv1 <- pool0
I0428 20:13:14.192158 32425 net.cpp:382] conv1 -> conv1
I0428 20:13:14.194034 32425 net.cpp:124] Setting up conv1
I0428 20:13:14.194048 32425 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:14.194052 32425 net.cpp:139] Memory required for data: 10074800
I0428 20:13:14.194063 32425 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:14.194070 32425 net.cpp:86] Creating Layer pool1
I0428 20:13:14.194073 32425 net.cpp:408] pool1 <- conv1
I0428 20:13:14.194078 32425 net.cpp:382] pool1 -> pool1
I0428 20:13:14.194113 32425 net.cpp:124] Setting up pool1
I0428 20:13:14.194119 32425 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:14.194123 32425 net.cpp:139] Memory required for data: 10714800
I0428 20:13:14.194125 32425 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:14.194131 32425 net.cpp:86] Creating Layer ip1
I0428 20:13:14.194134 32425 net.cpp:408] ip1 <- pool1
I0428 20:13:14.194139 32425 net.cpp:382] ip1 -> ip1
I0428 20:13:14.194563 32425 net.cpp:124] Setting up ip1
I0428 20:13:14.194572 32425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:14.194586 32425 net.cpp:139] Memory required for data: 10724800
I0428 20:13:14.194595 32425 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:14.194600 32425 net.cpp:86] Creating Layer relu1
I0428 20:13:14.194603 32425 net.cpp:408] relu1 <- ip1
I0428 20:13:14.194608 32425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:14.194820 32425 net.cpp:124] Setting up relu1
I0428 20:13:14.194844 32425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:14.194847 32425 net.cpp:139] Memory required for data: 10734800
I0428 20:13:14.194850 32425 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:14.194856 32425 net.cpp:86] Creating Layer ip2
I0428 20:13:14.194859 32425 net.cpp:408] ip2 <- ip1
I0428 20:13:14.194864 32425 net.cpp:382] ip2 -> ip2
I0428 20:13:14.195021 32425 net.cpp:124] Setting up ip2
I0428 20:13:14.195029 32425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:14.195032 32425 net.cpp:139] Memory required for data: 10744800
I0428 20:13:14.195039 32425 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:14.195044 32425 net.cpp:86] Creating Layer relu2
I0428 20:13:14.195046 32425 net.cpp:408] relu2 <- ip2
I0428 20:13:14.195050 32425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:14.195188 32425 net.cpp:124] Setting up relu2
I0428 20:13:14.195196 32425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:14.195199 32425 net.cpp:139] Memory required for data: 10754800
I0428 20:13:14.195202 32425 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:14.195207 32425 net.cpp:86] Creating Layer ip3
I0428 20:13:14.195210 32425 net.cpp:408] ip3 <- ip2
I0428 20:13:14.195214 32425 net.cpp:382] ip3 -> ip3
I0428 20:13:14.195322 32425 net.cpp:124] Setting up ip3
I0428 20:13:14.195328 32425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:14.195333 32425 net.cpp:139] Memory required for data: 10758800
I0428 20:13:14.195340 32425 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:14.195344 32425 net.cpp:86] Creating Layer relu3
I0428 20:13:14.195354 32425 net.cpp:408] relu3 <- ip3
I0428 20:13:14.195358 32425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:14.196094 32425 net.cpp:124] Setting up relu3
I0428 20:13:14.196105 32425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:14.196108 32425 net.cpp:139] Memory required for data: 10762800
I0428 20:13:14.196112 32425 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:14.196117 32425 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:14.196120 32425 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:14.196125 32425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:14.196131 32425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:14.196174 32425 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:14.196180 32425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:14.196183 32425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:14.196187 32425 net.cpp:139] Memory required for data: 10770800
I0428 20:13:14.196189 32425 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:14.196194 32425 net.cpp:86] Creating Layer accuracy
I0428 20:13:14.196197 32425 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:14.196200 32425 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:14.196204 32425 net.cpp:382] accuracy -> accuracy
I0428 20:13:14.196211 32425 net.cpp:124] Setting up accuracy
I0428 20:13:14.196214 32425 net.cpp:131] Top shape: (1)
I0428 20:13:14.196218 32425 net.cpp:139] Memory required for data: 10770804
I0428 20:13:14.196219 32425 layer_factory.hpp:77] Creating layer loss
I0428 20:13:14.196223 32425 net.cpp:86] Creating Layer loss
I0428 20:13:14.196226 32425 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:14.196229 32425 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:14.196233 32425 net.cpp:382] loss -> loss
I0428 20:13:14.196238 32425 layer_factory.hpp:77] Creating layer loss
I0428 20:13:14.196496 32425 net.cpp:124] Setting up loss
I0428 20:13:14.196506 32425 net.cpp:131] Top shape: (1)
I0428 20:13:14.196509 32425 net.cpp:134]     with loss weight 1
I0428 20:13:14.196526 32425 net.cpp:139] Memory required for data: 10770808
I0428 20:13:14.196529 32425 net.cpp:200] loss needs backward computation.
I0428 20:13:14.196532 32425 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:14.196537 32425 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:14.196539 32425 net.cpp:200] relu3 needs backward computation.
I0428 20:13:14.196542 32425 net.cpp:200] ip3 needs backward computation.
I0428 20:13:14.196544 32425 net.cpp:200] relu2 needs backward computation.
I0428 20:13:14.196547 32425 net.cpp:200] ip2 needs backward computation.
I0428 20:13:14.196550 32425 net.cpp:200] relu1 needs backward computation.
I0428 20:13:14.196553 32425 net.cpp:200] ip1 needs backward computation.
I0428 20:13:14.196557 32425 net.cpp:200] pool1 needs backward computation.
I0428 20:13:14.196560 32425 net.cpp:200] conv1 needs backward computation.
I0428 20:13:14.196563 32425 net.cpp:200] pool0 needs backward computation.
I0428 20:13:14.196568 32425 net.cpp:200] conv0 needs backward computation.
I0428 20:13:14.196573 32425 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:14.196579 32425 net.cpp:202] mnist does not need backward computation.
I0428 20:13:14.196583 32425 net.cpp:244] This network produces output accuracy
I0428 20:13:14.196585 32425 net.cpp:244] This network produces output loss
I0428 20:13:14.196595 32425 net.cpp:257] Network initialization done.
I0428 20:13:14.196645 32425 solver.cpp:56] Solver scaffolding done.
I0428 20:13:14.196982 32425 caffe.cpp:248] Starting Optimization
I0428 20:13:14.196990 32425 solver.cpp:273] Solving LeNet
I0428 20:13:14.196993 32425 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:14.197824 32425 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:14.204871 32425 blocking_queue.cpp:49] Waiting for data
I0428 20:13:14.276901 32432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:14.277690 32425 solver.cpp:398]     Test net output #0: accuracy = 0.1093
I0428 20:13:14.277709 32425 solver.cpp:398]     Test net output #1: loss = 2.29892 (* 1 = 2.29892 loss)
I0428 20:13:14.282475 32425 solver.cpp:219] Iteration 0 (-9.51482e-43 iter/s, 0.0854588s/100 iters), loss = 2.29457
I0428 20:13:14.282500 32425 solver.cpp:238]     Train net output #0: loss = 2.29457 (* 1 = 2.29457 loss)
I0428 20:13:14.282510 32425 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:14.447836 32425 solver.cpp:219] Iteration 100 (604.877 iter/s, 0.165323s/100 iters), loss = 0.718345
I0428 20:13:14.447862 32425 solver.cpp:238]     Train net output #0: loss = 0.718345 (* 1 = 0.718345 loss)
I0428 20:13:14.447868 32425 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:14.609453 32425 solver.cpp:219] Iteration 200 (618.9 iter/s, 0.161577s/100 iters), loss = 0.346289
I0428 20:13:14.609478 32425 solver.cpp:238]     Train net output #0: loss = 0.346289 (* 1 = 0.346289 loss)
I0428 20:13:14.609484 32425 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:14.769999 32425 solver.cpp:219] Iteration 300 (623.022 iter/s, 0.160508s/100 iters), loss = 0.354379
I0428 20:13:14.770021 32425 solver.cpp:238]     Train net output #0: loss = 0.354379 (* 1 = 0.354379 loss)
I0428 20:13:14.770027 32425 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:14.936225 32425 solver.cpp:219] Iteration 400 (601.724 iter/s, 0.166189s/100 iters), loss = 0.634967
I0428 20:13:14.936252 32425 solver.cpp:238]     Train net output #0: loss = 0.634967 (* 1 = 0.634967 loss)
I0428 20:13:14.936259 32425 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:15.096536 32425 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:15.162802 32432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:15.165199 32425 solver.cpp:398]     Test net output #0: accuracy = 0.8662
I0428 20:13:15.165220 32425 solver.cpp:398]     Test net output #1: loss = 0.36251 (* 1 = 0.36251 loss)
I0428 20:13:15.166703 32425 solver.cpp:219] Iteration 500 (433.962 iter/s, 0.230435s/100 iters), loss = 0.500056
I0428 20:13:15.166739 32425 solver.cpp:238]     Train net output #0: loss = 0.500056 (* 1 = 0.500056 loss)
I0428 20:13:15.166765 32425 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:15.340520 32425 solver.cpp:219] Iteration 600 (575.487 iter/s, 0.173766s/100 iters), loss = 0.163636
I0428 20:13:15.340549 32425 solver.cpp:238]     Train net output #0: loss = 0.163636 (* 1 = 0.163636 loss)
I0428 20:13:15.340557 32425 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:15.552511 32425 solver.cpp:219] Iteration 700 (471.831 iter/s, 0.21194s/100 iters), loss = 0.280803
I0428 20:13:15.552567 32425 solver.cpp:238]     Train net output #0: loss = 0.280803 (* 1 = 0.280803 loss)
I0428 20:13:15.552582 32425 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:15.767066 32425 solver.cpp:219] Iteration 800 (466.231 iter/s, 0.214486s/100 iters), loss = 0.373302
I0428 20:13:15.767105 32425 solver.cpp:238]     Train net output #0: loss = 0.373302 (* 1 = 0.373302 loss)
I0428 20:13:15.767114 32425 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:15.982506 32425 solver.cpp:219] Iteration 900 (464.287 iter/s, 0.215384s/100 iters), loss = 0.233609
I0428 20:13:15.982547 32425 solver.cpp:238]     Train net output #0: loss = 0.233609 (* 1 = 0.233609 loss)
I0428 20:13:15.982558 32425 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:16.051381 32431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:16.186285 32425 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:16.190188 32425 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:16.192250 32425 solver.cpp:311] Iteration 1000, loss = 0.235825
I0428 20:13:16.192278 32425 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:16.270117 32432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:16.272651 32425 solver.cpp:398]     Test net output #0: accuracy = 0.8832
I0428 20:13:16.272677 32425 solver.cpp:398]     Test net output #1: loss = 0.292492 (* 1 = 0.292492 loss)
I0428 20:13:16.272685 32425 solver.cpp:316] Optimization Done.
I0428 20:13:16.272688 32425 caffe.cpp:259] Optimization Done.
