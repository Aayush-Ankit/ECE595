I0428 19:48:04.929325 26396 caffe.cpp:218] Using GPUs 0
I0428 19:48:04.965957 26396 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:05.476533 26396 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test534.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:05.476670 26396 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test534.prototxt
I0428 19:48:05.477100 26396 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:05.477121 26396 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:05.477224 26396 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:05.477303 26396 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:05.477403 26396 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:05.477432 26396 net.cpp:86] Creating Layer mnist
I0428 19:48:05.477442 26396 net.cpp:382] mnist -> data
I0428 19:48:05.477463 26396 net.cpp:382] mnist -> label
I0428 19:48:05.478539 26396 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:05.481104 26396 net.cpp:124] Setting up mnist
I0428 19:48:05.481122 26396 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:05.481130 26396 net.cpp:131] Top shape: 64 (64)
I0428 19:48:05.481134 26396 net.cpp:139] Memory required for data: 200960
I0428 19:48:05.481140 26396 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:05.481156 26396 net.cpp:86] Creating Layer conv0
I0428 19:48:05.481185 26396 net.cpp:408] conv0 <- data
I0428 19:48:05.481206 26396 net.cpp:382] conv0 -> conv0
I0428 19:48:05.765365 26396 net.cpp:124] Setting up conv0
I0428 19:48:05.765391 26396 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:05.765395 26396 net.cpp:139] Memory required for data: 938240
I0428 19:48:05.765409 26396 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:05.765422 26396 net.cpp:86] Creating Layer pool0
I0428 19:48:05.765426 26396 net.cpp:408] pool0 <- conv0
I0428 19:48:05.765432 26396 net.cpp:382] pool0 -> pool0
I0428 19:48:05.765478 26396 net.cpp:124] Setting up pool0
I0428 19:48:05.765486 26396 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:05.765488 26396 net.cpp:139] Memory required for data: 1122560
I0428 19:48:05.765491 26396 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:05.765501 26396 net.cpp:86] Creating Layer conv1
I0428 19:48:05.765507 26396 net.cpp:408] conv1 <- pool0
I0428 19:48:05.765512 26396 net.cpp:382] conv1 -> conv1
I0428 19:48:05.767328 26396 net.cpp:124] Setting up conv1
I0428 19:48:05.767346 26396 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:48:05.767352 26396 net.cpp:139] Memory required for data: 1155328
I0428 19:48:05.767361 26396 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:05.767369 26396 net.cpp:86] Creating Layer pool1
I0428 19:48:05.767374 26396 net.cpp:408] pool1 <- conv1
I0428 19:48:05.767379 26396 net.cpp:382] pool1 -> pool1
I0428 19:48:05.767426 26396 net.cpp:124] Setting up pool1
I0428 19:48:05.767431 26396 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:48:05.767432 26396 net.cpp:139] Memory required for data: 1163520
I0428 19:48:05.767436 26396 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:05.767442 26396 net.cpp:86] Creating Layer ip1
I0428 19:48:05.767446 26396 net.cpp:408] ip1 <- pool1
I0428 19:48:05.767449 26396 net.cpp:382] ip1 -> ip1
I0428 19:48:05.767541 26396 net.cpp:124] Setting up ip1
I0428 19:48:05.767549 26396 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:05.767551 26396 net.cpp:139] Memory required for data: 1169920
I0428 19:48:05.767559 26396 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:05.767563 26396 net.cpp:86] Creating Layer relu1
I0428 19:48:05.767566 26396 net.cpp:408] relu1 <- ip1
I0428 19:48:05.767570 26396 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:05.767730 26396 net.cpp:124] Setting up relu1
I0428 19:48:05.767740 26396 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:05.767742 26396 net.cpp:139] Memory required for data: 1176320
I0428 19:48:05.767745 26396 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:05.767751 26396 net.cpp:86] Creating Layer ip2
I0428 19:48:05.767755 26396 net.cpp:408] ip2 <- ip1
I0428 19:48:05.767760 26396 net.cpp:382] ip2 -> ip2
I0428 19:48:05.768707 26396 net.cpp:124] Setting up ip2
I0428 19:48:05.768720 26396 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:05.768723 26396 net.cpp:139] Memory required for data: 1189120
I0428 19:48:05.768729 26396 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:05.768736 26396 net.cpp:86] Creating Layer relu2
I0428 19:48:05.768739 26396 net.cpp:408] relu2 <- ip2
I0428 19:48:05.768743 26396 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:05.769573 26396 net.cpp:124] Setting up relu2
I0428 19:48:05.769587 26396 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:05.769589 26396 net.cpp:139] Memory required for data: 1201920
I0428 19:48:05.769593 26396 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:05.769601 26396 net.cpp:86] Creating Layer ip3
I0428 19:48:05.769605 26396 net.cpp:408] ip3 <- ip2
I0428 19:48:05.769613 26396 net.cpp:382] ip3 -> ip3
I0428 19:48:05.769767 26396 net.cpp:124] Setting up ip3
I0428 19:48:05.769778 26396 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:05.769780 26396 net.cpp:139] Memory required for data: 1204480
I0428 19:48:05.769788 26396 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:05.769793 26396 net.cpp:86] Creating Layer relu3
I0428 19:48:05.769796 26396 net.cpp:408] relu3 <- ip3
I0428 19:48:05.769800 26396 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:05.769973 26396 net.cpp:124] Setting up relu3
I0428 19:48:05.769982 26396 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:05.769985 26396 net.cpp:139] Memory required for data: 1207040
I0428 19:48:05.769989 26396 layer_factory.hpp:77] Creating layer loss
I0428 19:48:05.769994 26396 net.cpp:86] Creating Layer loss
I0428 19:48:05.769997 26396 net.cpp:408] loss <- ip3
I0428 19:48:05.770001 26396 net.cpp:408] loss <- label
I0428 19:48:05.770006 26396 net.cpp:382] loss -> loss
I0428 19:48:05.770023 26396 layer_factory.hpp:77] Creating layer loss
I0428 19:48:05.770253 26396 net.cpp:124] Setting up loss
I0428 19:48:05.770262 26396 net.cpp:131] Top shape: (1)
I0428 19:48:05.770265 26396 net.cpp:134]     with loss weight 1
I0428 19:48:05.770279 26396 net.cpp:139] Memory required for data: 1207044
I0428 19:48:05.770282 26396 net.cpp:200] loss needs backward computation.
I0428 19:48:05.770287 26396 net.cpp:200] relu3 needs backward computation.
I0428 19:48:05.770288 26396 net.cpp:200] ip3 needs backward computation.
I0428 19:48:05.770292 26396 net.cpp:200] relu2 needs backward computation.
I0428 19:48:05.770294 26396 net.cpp:200] ip2 needs backward computation.
I0428 19:48:05.770297 26396 net.cpp:200] relu1 needs backward computation.
I0428 19:48:05.770299 26396 net.cpp:200] ip1 needs backward computation.
I0428 19:48:05.770303 26396 net.cpp:200] pool1 needs backward computation.
I0428 19:48:05.770305 26396 net.cpp:200] conv1 needs backward computation.
I0428 19:48:05.770308 26396 net.cpp:200] pool0 needs backward computation.
I0428 19:48:05.770310 26396 net.cpp:200] conv0 needs backward computation.
I0428 19:48:05.770313 26396 net.cpp:202] mnist does not need backward computation.
I0428 19:48:05.770316 26396 net.cpp:244] This network produces output loss
I0428 19:48:05.770325 26396 net.cpp:257] Network initialization done.
I0428 19:48:05.770675 26396 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test534.prototxt
I0428 19:48:05.770704 26396 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:05.770792 26396 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:05.770891 26396 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:05.770936 26396 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:05.770948 26396 net.cpp:86] Creating Layer mnist
I0428 19:48:05.770952 26396 net.cpp:382] mnist -> data
I0428 19:48:05.770961 26396 net.cpp:382] mnist -> label
I0428 19:48:05.771044 26396 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:05.772920 26396 net.cpp:124] Setting up mnist
I0428 19:48:05.772933 26396 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:05.772954 26396 net.cpp:131] Top shape: 100 (100)
I0428 19:48:05.772958 26396 net.cpp:139] Memory required for data: 314000
I0428 19:48:05.772960 26396 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:05.772966 26396 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:05.772970 26396 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:05.772974 26396 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:05.772990 26396 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:05.773048 26396 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:05.773062 26396 net.cpp:131] Top shape: 100 (100)
I0428 19:48:05.773066 26396 net.cpp:131] Top shape: 100 (100)
I0428 19:48:05.773069 26396 net.cpp:139] Memory required for data: 314800
I0428 19:48:05.773072 26396 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:05.773082 26396 net.cpp:86] Creating Layer conv0
I0428 19:48:05.773085 26396 net.cpp:408] conv0 <- data
I0428 19:48:05.773090 26396 net.cpp:382] conv0 -> conv0
I0428 19:48:05.774871 26396 net.cpp:124] Setting up conv0
I0428 19:48:05.774885 26396 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:05.774888 26396 net.cpp:139] Memory required for data: 1466800
I0428 19:48:05.774899 26396 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:05.774904 26396 net.cpp:86] Creating Layer pool0
I0428 19:48:05.774907 26396 net.cpp:408] pool0 <- conv0
I0428 19:48:05.774914 26396 net.cpp:382] pool0 -> pool0
I0428 19:48:05.774950 26396 net.cpp:124] Setting up pool0
I0428 19:48:05.774962 26396 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:05.774966 26396 net.cpp:139] Memory required for data: 1754800
I0428 19:48:05.774968 26396 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:05.774976 26396 net.cpp:86] Creating Layer conv1
I0428 19:48:05.774979 26396 net.cpp:408] conv1 <- pool0
I0428 19:48:05.774984 26396 net.cpp:382] conv1 -> conv1
I0428 19:48:05.777055 26396 net.cpp:124] Setting up conv1
I0428 19:48:05.777088 26396 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:48:05.777093 26396 net.cpp:139] Memory required for data: 1806000
I0428 19:48:05.777103 26396 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:05.777118 26396 net.cpp:86] Creating Layer pool1
I0428 19:48:05.777122 26396 net.cpp:408] pool1 <- conv1
I0428 19:48:05.777127 26396 net.cpp:382] pool1 -> pool1
I0428 19:48:05.777170 26396 net.cpp:124] Setting up pool1
I0428 19:48:05.777191 26396 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:48:05.777197 26396 net.cpp:139] Memory required for data: 1818800
I0428 19:48:05.777215 26396 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:05.777221 26396 net.cpp:86] Creating Layer ip1
I0428 19:48:05.777225 26396 net.cpp:408] ip1 <- pool1
I0428 19:48:05.777230 26396 net.cpp:382] ip1 -> ip1
I0428 19:48:05.777367 26396 net.cpp:124] Setting up ip1
I0428 19:48:05.777375 26396 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:05.777389 26396 net.cpp:139] Memory required for data: 1828800
I0428 19:48:05.777395 26396 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:05.777400 26396 net.cpp:86] Creating Layer relu1
I0428 19:48:05.777403 26396 net.cpp:408] relu1 <- ip1
I0428 19:48:05.777408 26396 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:05.777601 26396 net.cpp:124] Setting up relu1
I0428 19:48:05.777611 26396 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:05.777614 26396 net.cpp:139] Memory required for data: 1838800
I0428 19:48:05.777617 26396 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:05.777626 26396 net.cpp:86] Creating Layer ip2
I0428 19:48:05.777628 26396 net.cpp:408] ip2 <- ip1
I0428 19:48:05.777633 26396 net.cpp:382] ip2 -> ip2
I0428 19:48:05.777739 26396 net.cpp:124] Setting up ip2
I0428 19:48:05.777745 26396 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:05.777748 26396 net.cpp:139] Memory required for data: 1858800
I0428 19:48:05.777755 26396 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:05.777758 26396 net.cpp:86] Creating Layer relu2
I0428 19:48:05.777761 26396 net.cpp:408] relu2 <- ip2
I0428 19:48:05.777766 26396 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:05.777938 26396 net.cpp:124] Setting up relu2
I0428 19:48:05.777945 26396 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:05.777948 26396 net.cpp:139] Memory required for data: 1878800
I0428 19:48:05.777952 26396 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:05.777958 26396 net.cpp:86] Creating Layer ip3
I0428 19:48:05.777961 26396 net.cpp:408] ip3 <- ip2
I0428 19:48:05.777967 26396 net.cpp:382] ip3 -> ip3
I0428 19:48:05.778110 26396 net.cpp:124] Setting up ip3
I0428 19:48:05.778117 26396 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:05.778120 26396 net.cpp:139] Memory required for data: 1882800
I0428 19:48:05.778129 26396 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:05.778136 26396 net.cpp:86] Creating Layer relu3
I0428 19:48:05.778138 26396 net.cpp:408] relu3 <- ip3
I0428 19:48:05.778141 26396 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:05.778931 26396 net.cpp:124] Setting up relu3
I0428 19:48:05.778944 26396 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:05.778964 26396 net.cpp:139] Memory required for data: 1886800
I0428 19:48:05.778967 26396 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:05.778973 26396 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:05.778976 26396 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:05.778981 26396 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:05.778988 26396 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:05.779037 26396 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:05.779042 26396 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:05.779047 26396 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:05.779050 26396 net.cpp:139] Memory required for data: 1894800
I0428 19:48:05.779053 26396 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:05.779059 26396 net.cpp:86] Creating Layer accuracy
I0428 19:48:05.779062 26396 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:05.779067 26396 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:05.779072 26396 net.cpp:382] accuracy -> accuracy
I0428 19:48:05.779078 26396 net.cpp:124] Setting up accuracy
I0428 19:48:05.779083 26396 net.cpp:131] Top shape: (1)
I0428 19:48:05.779085 26396 net.cpp:139] Memory required for data: 1894804
I0428 19:48:05.779088 26396 layer_factory.hpp:77] Creating layer loss
I0428 19:48:05.779093 26396 net.cpp:86] Creating Layer loss
I0428 19:48:05.779100 26396 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:05.779104 26396 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:05.779109 26396 net.cpp:382] loss -> loss
I0428 19:48:05.779115 26396 layer_factory.hpp:77] Creating layer loss
I0428 19:48:05.779386 26396 net.cpp:124] Setting up loss
I0428 19:48:05.779400 26396 net.cpp:131] Top shape: (1)
I0428 19:48:05.779403 26396 net.cpp:134]     with loss weight 1
I0428 19:48:05.779410 26396 net.cpp:139] Memory required for data: 1894808
I0428 19:48:05.779422 26396 net.cpp:200] loss needs backward computation.
I0428 19:48:05.779427 26396 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:05.779430 26396 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:05.779433 26396 net.cpp:200] relu3 needs backward computation.
I0428 19:48:05.779436 26396 net.cpp:200] ip3 needs backward computation.
I0428 19:48:05.779439 26396 net.cpp:200] relu2 needs backward computation.
I0428 19:48:05.779444 26396 net.cpp:200] ip2 needs backward computation.
I0428 19:48:05.779448 26396 net.cpp:200] relu1 needs backward computation.
I0428 19:48:05.779453 26396 net.cpp:200] ip1 needs backward computation.
I0428 19:48:05.779458 26396 net.cpp:200] pool1 needs backward computation.
I0428 19:48:05.779462 26396 net.cpp:200] conv1 needs backward computation.
I0428 19:48:05.779469 26396 net.cpp:200] pool0 needs backward computation.
I0428 19:48:05.779474 26396 net.cpp:200] conv0 needs backward computation.
I0428 19:48:05.779479 26396 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:05.779485 26396 net.cpp:202] mnist does not need backward computation.
I0428 19:48:05.779489 26396 net.cpp:244] This network produces output accuracy
I0428 19:48:05.779508 26396 net.cpp:244] This network produces output loss
I0428 19:48:05.779525 26396 net.cpp:257] Network initialization done.
I0428 19:48:05.779568 26396 solver.cpp:56] Solver scaffolding done.
I0428 19:48:05.779920 26396 caffe.cpp:248] Starting Optimization
I0428 19:48:05.779925 26396 solver.cpp:273] Solving LeNet
I0428 19:48:05.779928 26396 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:05.780869 26396 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:05.784387 26396 blocking_queue.cpp:49] Waiting for data
I0428 19:48:05.856480 26403 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:05.856989 26396 solver.cpp:398]     Test net output #0: accuracy = 0.1015
I0428 19:48:05.857023 26396 solver.cpp:398]     Test net output #1: loss = 2.3177 (* 1 = 2.3177 loss)
I0428 19:48:05.858934 26396 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789606s/100 iters), loss = 2.33388
I0428 19:48:05.858973 26396 solver.cpp:238]     Train net output #0: loss = 2.33388 (* 1 = 2.33388 loss)
I0428 19:48:05.858984 26396 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:05.928634 26396 solver.cpp:219] Iteration 100 (1435.43 iter/s, 0.0696657s/100 iters), loss = 1.04158
I0428 19:48:05.928676 26396 solver.cpp:238]     Train net output #0: loss = 1.04158 (* 1 = 1.04158 loss)
I0428 19:48:05.928683 26396 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:05.998947 26396 solver.cpp:219] Iteration 200 (1422.92 iter/s, 0.070278s/100 iters), loss = 0.494605
I0428 19:48:05.998988 26396 solver.cpp:238]     Train net output #0: loss = 0.494605 (* 1 = 0.494605 loss)
I0428 19:48:05.998994 26396 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:06.068686 26396 solver.cpp:219] Iteration 300 (1434.94 iter/s, 0.0696893s/100 iters), loss = 0.374324
I0428 19:48:06.068725 26396 solver.cpp:238]     Train net output #0: loss = 0.374324 (* 1 = 0.374324 loss)
I0428 19:48:06.068732 26396 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:06.139240 26396 solver.cpp:219] Iteration 400 (1418.02 iter/s, 0.0705208s/100 iters), loss = 0.364366
I0428 19:48:06.139279 26396 solver.cpp:238]     Train net output #0: loss = 0.364366 (* 1 = 0.364366 loss)
I0428 19:48:06.139302 26396 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:06.211643 26396 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:06.264361 26403 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:06.264883 26396 solver.cpp:398]     Test net output #0: accuracy = 0.8776
I0428 19:48:06.264919 26396 solver.cpp:398]     Test net output #1: loss = 0.36368 (* 1 = 0.36368 loss)
I0428 19:48:06.265806 26396 solver.cpp:219] Iteration 500 (790.317 iter/s, 0.126532s/100 iters), loss = 0.245628
I0428 19:48:06.265871 26396 solver.cpp:238]     Train net output #0: loss = 0.245628 (* 1 = 0.245628 loss)
I0428 19:48:06.265895 26396 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:06.340713 26396 solver.cpp:219] Iteration 600 (1336 iter/s, 0.0748502s/100 iters), loss = 0.301004
I0428 19:48:06.340756 26396 solver.cpp:238]     Train net output #0: loss = 0.301005 (* 1 = 0.301005 loss)
I0428 19:48:06.340778 26396 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:06.412536 26396 solver.cpp:219] Iteration 700 (1393 iter/s, 0.0717873s/100 iters), loss = 0.294621
I0428 19:48:06.412578 26396 solver.cpp:238]     Train net output #0: loss = 0.294622 (* 1 = 0.294622 loss)
I0428 19:48:06.412585 26396 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:06.483165 26396 solver.cpp:219] Iteration 800 (1416.56 iter/s, 0.0705935s/100 iters), loss = 0.316649
I0428 19:48:06.483207 26396 solver.cpp:238]     Train net output #0: loss = 0.316649 (* 1 = 0.316649 loss)
I0428 19:48:06.483214 26396 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:06.553853 26396 solver.cpp:219] Iteration 900 (1415.39 iter/s, 0.070652s/100 iters), loss = 0.297665
I0428 19:48:06.553892 26396 solver.cpp:238]     Train net output #0: loss = 0.297665 (* 1 = 0.297665 loss)
I0428 19:48:06.553899 26396 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:06.578060 26402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:06.624965 26396 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:06.625751 26396 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:06.626237 26396 solver.cpp:311] Iteration 1000, loss = 0.299869
I0428 19:48:06.626256 26396 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:06.700991 26403 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:06.701517 26396 solver.cpp:398]     Test net output #0: accuracy = 0.9412
I0428 19:48:06.701537 26396 solver.cpp:398]     Test net output #1: loss = 0.181002 (* 1 = 0.181002 loss)
I0428 19:48:06.701544 26396 solver.cpp:316] Optimization Done.
I0428 19:48:06.701546 26396 caffe.cpp:259] Optimization Done.
