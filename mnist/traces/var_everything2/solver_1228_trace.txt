I0428 20:14:41.522503 32729 caffe.cpp:218] Using GPUs 0
I0428 20:14:41.552790 32729 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:42.001691 32729 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1228.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:42.001844 32729 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1228.prototxt
I0428 20:14:42.002221 32729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:42.002236 32729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:42.002357 32729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:42.002425 32729 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:42.002508 32729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:42.002529 32729 net.cpp:86] Creating Layer mnist
I0428 20:14:42.002535 32729 net.cpp:382] mnist -> data
I0428 20:14:42.002557 32729 net.cpp:382] mnist -> label
I0428 20:14:42.003522 32729 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:42.005707 32729 net.cpp:124] Setting up mnist
I0428 20:14:42.005754 32729 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:42.005759 32729 net.cpp:131] Top shape: 64 (64)
I0428 20:14:42.005762 32729 net.cpp:139] Memory required for data: 200960
I0428 20:14:42.005769 32729 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:42.005784 32729 net.cpp:86] Creating Layer conv0
I0428 20:14:42.005802 32729 net.cpp:408] conv0 <- data
I0428 20:14:42.005812 32729 net.cpp:382] conv0 -> conv0
I0428 20:14:42.241422 32729 net.cpp:124] Setting up conv0
I0428 20:14:42.241461 32729 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:42.241466 32729 net.cpp:139] Memory required for data: 7573760
I0428 20:14:42.241480 32729 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:42.241493 32729 net.cpp:86] Creating Layer pool0
I0428 20:14:42.241497 32729 net.cpp:408] pool0 <- conv0
I0428 20:14:42.241503 32729 net.cpp:382] pool0 -> pool0
I0428 20:14:42.241565 32729 net.cpp:124] Setting up pool0
I0428 20:14:42.241572 32729 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:42.241575 32729 net.cpp:139] Memory required for data: 9416960
I0428 20:14:42.241578 32729 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:42.241590 32729 net.cpp:86] Creating Layer conv1
I0428 20:14:42.241595 32729 net.cpp:408] conv1 <- pool0
I0428 20:14:42.241614 32729 net.cpp:382] conv1 -> conv1
I0428 20:14:42.243676 32729 net.cpp:124] Setting up conv1
I0428 20:14:42.243706 32729 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:42.243710 32729 net.cpp:139] Memory required for data: 9449728
I0428 20:14:42.243733 32729 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:42.243741 32729 net.cpp:86] Creating Layer pool1
I0428 20:14:42.243752 32729 net.cpp:408] pool1 <- conv1
I0428 20:14:42.243772 32729 net.cpp:382] pool1 -> pool1
I0428 20:14:42.243836 32729 net.cpp:124] Setting up pool1
I0428 20:14:42.243841 32729 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:42.243844 32729 net.cpp:139] Memory required for data: 9457920
I0428 20:14:42.243847 32729 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:42.243860 32729 net.cpp:86] Creating Layer ip1
I0428 20:14:42.243862 32729 net.cpp:408] ip1 <- pool1
I0428 20:14:42.243867 32729 net.cpp:382] ip1 -> ip1
I0428 20:14:42.243959 32729 net.cpp:124] Setting up ip1
I0428 20:14:42.243966 32729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:42.243969 32729 net.cpp:139] Memory required for data: 9460480
I0428 20:14:42.243976 32729 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:42.243983 32729 net.cpp:86] Creating Layer relu1
I0428 20:14:42.243985 32729 net.cpp:408] relu1 <- ip1
I0428 20:14:42.243989 32729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:42.244174 32729 net.cpp:124] Setting up relu1
I0428 20:14:42.244184 32729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:42.244186 32729 net.cpp:139] Memory required for data: 9463040
I0428 20:14:42.244189 32729 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:42.244196 32729 net.cpp:86] Creating Layer ip2
I0428 20:14:42.244200 32729 net.cpp:408] ip2 <- ip1
I0428 20:14:42.244204 32729 net.cpp:382] ip2 -> ip2
I0428 20:14:42.244302 32729 net.cpp:124] Setting up ip2
I0428 20:14:42.244309 32729 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:42.244313 32729 net.cpp:139] Memory required for data: 9475840
I0428 20:14:42.244318 32729 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:42.244323 32729 net.cpp:86] Creating Layer relu2
I0428 20:14:42.244326 32729 net.cpp:408] relu2 <- ip2
I0428 20:14:42.244331 32729 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:42.245172 32729 net.cpp:124] Setting up relu2
I0428 20:14:42.245184 32729 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:42.245203 32729 net.cpp:139] Memory required for data: 9488640
I0428 20:14:42.245208 32729 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:42.245215 32729 net.cpp:86] Creating Layer ip3
I0428 20:14:42.245218 32729 net.cpp:408] ip3 <- ip2
I0428 20:14:42.245223 32729 net.cpp:382] ip3 -> ip3
I0428 20:14:42.245326 32729 net.cpp:124] Setting up ip3
I0428 20:14:42.245334 32729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:42.245337 32729 net.cpp:139] Memory required for data: 9491200
I0428 20:14:42.245344 32729 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:42.245350 32729 net.cpp:86] Creating Layer relu3
I0428 20:14:42.245353 32729 net.cpp:408] relu3 <- ip3
I0428 20:14:42.245357 32729 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:42.245550 32729 net.cpp:124] Setting up relu3
I0428 20:14:42.245559 32729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:42.245563 32729 net.cpp:139] Memory required for data: 9493760
I0428 20:14:42.245565 32729 layer_factory.hpp:77] Creating layer loss
I0428 20:14:42.245571 32729 net.cpp:86] Creating Layer loss
I0428 20:14:42.245575 32729 net.cpp:408] loss <- ip3
I0428 20:14:42.245579 32729 net.cpp:408] loss <- label
I0428 20:14:42.245584 32729 net.cpp:382] loss -> loss
I0428 20:14:42.245601 32729 layer_factory.hpp:77] Creating layer loss
I0428 20:14:42.245822 32729 net.cpp:124] Setting up loss
I0428 20:14:42.245831 32729 net.cpp:131] Top shape: (1)
I0428 20:14:42.245834 32729 net.cpp:134]     with loss weight 1
I0428 20:14:42.245847 32729 net.cpp:139] Memory required for data: 9493764
I0428 20:14:42.245851 32729 net.cpp:200] loss needs backward computation.
I0428 20:14:42.245854 32729 net.cpp:200] relu3 needs backward computation.
I0428 20:14:42.245857 32729 net.cpp:200] ip3 needs backward computation.
I0428 20:14:42.245862 32729 net.cpp:200] relu2 needs backward computation.
I0428 20:14:42.245863 32729 net.cpp:200] ip2 needs backward computation.
I0428 20:14:42.245867 32729 net.cpp:200] relu1 needs backward computation.
I0428 20:14:42.245869 32729 net.cpp:200] ip1 needs backward computation.
I0428 20:14:42.245872 32729 net.cpp:200] pool1 needs backward computation.
I0428 20:14:42.245875 32729 net.cpp:200] conv1 needs backward computation.
I0428 20:14:42.245877 32729 net.cpp:200] pool0 needs backward computation.
I0428 20:14:42.245880 32729 net.cpp:200] conv0 needs backward computation.
I0428 20:14:42.245883 32729 net.cpp:202] mnist does not need backward computation.
I0428 20:14:42.245887 32729 net.cpp:244] This network produces output loss
I0428 20:14:42.245895 32729 net.cpp:257] Network initialization done.
I0428 20:14:42.246202 32729 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1228.prototxt
I0428 20:14:42.246227 32729 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:42.246331 32729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:42.246412 32729 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:42.246454 32729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:42.246466 32729 net.cpp:86] Creating Layer mnist
I0428 20:14:42.246472 32729 net.cpp:382] mnist -> data
I0428 20:14:42.246480 32729 net.cpp:382] mnist -> label
I0428 20:14:42.246580 32729 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:42.248630 32729 net.cpp:124] Setting up mnist
I0428 20:14:42.248642 32729 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:42.248647 32729 net.cpp:131] Top shape: 100 (100)
I0428 20:14:42.248651 32729 net.cpp:139] Memory required for data: 314000
I0428 20:14:42.248653 32729 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:42.248692 32729 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:42.248695 32729 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:42.248716 32729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:42.248723 32729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:42.248764 32729 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:42.248769 32729 net.cpp:131] Top shape: 100 (100)
I0428 20:14:42.248773 32729 net.cpp:131] Top shape: 100 (100)
I0428 20:14:42.248775 32729 net.cpp:139] Memory required for data: 314800
I0428 20:14:42.248778 32729 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:42.248788 32729 net.cpp:86] Creating Layer conv0
I0428 20:14:42.248791 32729 net.cpp:408] conv0 <- data
I0428 20:14:42.248796 32729 net.cpp:382] conv0 -> conv0
I0428 20:14:42.250663 32729 net.cpp:124] Setting up conv0
I0428 20:14:42.250677 32729 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:42.250680 32729 net.cpp:139] Memory required for data: 11834800
I0428 20:14:42.250705 32729 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:42.250713 32729 net.cpp:86] Creating Layer pool0
I0428 20:14:42.250716 32729 net.cpp:408] pool0 <- conv0
I0428 20:14:42.250720 32729 net.cpp:382] pool0 -> pool0
I0428 20:14:42.250756 32729 net.cpp:124] Setting up pool0
I0428 20:14:42.250761 32729 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:42.250763 32729 net.cpp:139] Memory required for data: 14714800
I0428 20:14:42.250766 32729 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:42.250775 32729 net.cpp:86] Creating Layer conv1
I0428 20:14:42.250778 32729 net.cpp:408] conv1 <- pool0
I0428 20:14:42.250784 32729 net.cpp:382] conv1 -> conv1
I0428 20:14:42.252375 32729 net.cpp:124] Setting up conv1
I0428 20:14:42.252388 32729 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:42.252391 32729 net.cpp:139] Memory required for data: 14766000
I0428 20:14:42.252405 32729 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:42.252419 32729 net.cpp:86] Creating Layer pool1
I0428 20:14:42.252423 32729 net.cpp:408] pool1 <- conv1
I0428 20:14:42.252426 32729 net.cpp:382] pool1 -> pool1
I0428 20:14:42.252462 32729 net.cpp:124] Setting up pool1
I0428 20:14:42.252467 32729 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:42.252470 32729 net.cpp:139] Memory required for data: 14778800
I0428 20:14:42.252475 32729 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:42.252480 32729 net.cpp:86] Creating Layer ip1
I0428 20:14:42.252483 32729 net.cpp:408] ip1 <- pool1
I0428 20:14:42.252488 32729 net.cpp:382] ip1 -> ip1
I0428 20:14:42.252610 32729 net.cpp:124] Setting up ip1
I0428 20:14:42.252619 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.252638 32729 net.cpp:139] Memory required for data: 14782800
I0428 20:14:42.252646 32729 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:42.252658 32729 net.cpp:86] Creating Layer relu1
I0428 20:14:42.252661 32729 net.cpp:408] relu1 <- ip1
I0428 20:14:42.252665 32729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:42.252861 32729 net.cpp:124] Setting up relu1
I0428 20:14:42.252871 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.252874 32729 net.cpp:139] Memory required for data: 14786800
I0428 20:14:42.252878 32729 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:42.252887 32729 net.cpp:86] Creating Layer ip2
I0428 20:14:42.252890 32729 net.cpp:408] ip2 <- ip1
I0428 20:14:42.252904 32729 net.cpp:382] ip2 -> ip2
I0428 20:14:42.253036 32729 net.cpp:124] Setting up ip2
I0428 20:14:42.253044 32729 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:42.253046 32729 net.cpp:139] Memory required for data: 14806800
I0428 20:14:42.253067 32729 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:42.253072 32729 net.cpp:86] Creating Layer relu2
I0428 20:14:42.253073 32729 net.cpp:408] relu2 <- ip2
I0428 20:14:42.253077 32729 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:42.253226 32729 net.cpp:124] Setting up relu2
I0428 20:14:42.253237 32729 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:42.253240 32729 net.cpp:139] Memory required for data: 14826800
I0428 20:14:42.253243 32729 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:42.253248 32729 net.cpp:86] Creating Layer ip3
I0428 20:14:42.253252 32729 net.cpp:408] ip3 <- ip2
I0428 20:14:42.253257 32729 net.cpp:382] ip3 -> ip3
I0428 20:14:42.253358 32729 net.cpp:124] Setting up ip3
I0428 20:14:42.253365 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.253370 32729 net.cpp:139] Memory required for data: 14830800
I0428 20:14:42.253383 32729 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:42.253387 32729 net.cpp:86] Creating Layer relu3
I0428 20:14:42.253396 32729 net.cpp:408] relu3 <- ip3
I0428 20:14:42.253401 32729 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:42.254251 32729 net.cpp:124] Setting up relu3
I0428 20:14:42.254261 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.254264 32729 net.cpp:139] Memory required for data: 14834800
I0428 20:14:42.254267 32729 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:14:42.254273 32729 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:14:42.254276 32729 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:14:42.254281 32729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:14:42.254287 32729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:14:42.254324 32729 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:14:42.254329 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.254333 32729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:42.254335 32729 net.cpp:139] Memory required for data: 14842800
I0428 20:14:42.254338 32729 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:42.254343 32729 net.cpp:86] Creating Layer accuracy
I0428 20:14:42.254346 32729 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:14:42.254350 32729 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:42.254354 32729 net.cpp:382] accuracy -> accuracy
I0428 20:14:42.254361 32729 net.cpp:124] Setting up accuracy
I0428 20:14:42.254365 32729 net.cpp:131] Top shape: (1)
I0428 20:14:42.254369 32729 net.cpp:139] Memory required for data: 14842804
I0428 20:14:42.254370 32729 layer_factory.hpp:77] Creating layer loss
I0428 20:14:42.254374 32729 net.cpp:86] Creating Layer loss
I0428 20:14:42.254377 32729 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:14:42.254380 32729 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:42.254384 32729 net.cpp:382] loss -> loss
I0428 20:14:42.254390 32729 layer_factory.hpp:77] Creating layer loss
I0428 20:14:42.254650 32729 net.cpp:124] Setting up loss
I0428 20:14:42.254662 32729 net.cpp:131] Top shape: (1)
I0428 20:14:42.254663 32729 net.cpp:134]     with loss weight 1
I0428 20:14:42.254679 32729 net.cpp:139] Memory required for data: 14842808
I0428 20:14:42.254683 32729 net.cpp:200] loss needs backward computation.
I0428 20:14:42.254686 32729 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:42.254689 32729 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:14:42.254693 32729 net.cpp:200] relu3 needs backward computation.
I0428 20:14:42.254695 32729 net.cpp:200] ip3 needs backward computation.
I0428 20:14:42.254698 32729 net.cpp:200] relu2 needs backward computation.
I0428 20:14:42.254700 32729 net.cpp:200] ip2 needs backward computation.
I0428 20:14:42.254725 32729 net.cpp:200] relu1 needs backward computation.
I0428 20:14:42.254734 32729 net.cpp:200] ip1 needs backward computation.
I0428 20:14:42.254737 32729 net.cpp:200] pool1 needs backward computation.
I0428 20:14:42.254740 32729 net.cpp:200] conv1 needs backward computation.
I0428 20:14:42.254743 32729 net.cpp:200] pool0 needs backward computation.
I0428 20:14:42.254746 32729 net.cpp:200] conv0 needs backward computation.
I0428 20:14:42.254750 32729 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:42.254753 32729 net.cpp:202] mnist does not need backward computation.
I0428 20:14:42.254755 32729 net.cpp:244] This network produces output accuracy
I0428 20:14:42.254760 32729 net.cpp:244] This network produces output loss
I0428 20:14:42.254776 32729 net.cpp:257] Network initialization done.
I0428 20:14:42.254817 32729 solver.cpp:56] Solver scaffolding done.
I0428 20:14:42.255163 32729 caffe.cpp:248] Starting Optimization
I0428 20:14:42.255187 32729 solver.cpp:273] Solving LeNet
I0428 20:14:42.255189 32729 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:42.256042 32729 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:42.261814 32729 blocking_queue.cpp:49] Waiting for data
I0428 20:14:42.334627 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:42.335402 32729 solver.cpp:398]     Test net output #0: accuracy = 0.098
I0428 20:14:42.335438 32729 solver.cpp:398]     Test net output #1: loss = 2.31964 (* 1 = 2.31964 loss)
I0428 20:14:42.339623 32729 solver.cpp:219] Iteration 0 (0 iter/s, 0.0843919s/100 iters), loss = 2.32761
I0428 20:14:42.339661 32729 solver.cpp:238]     Train net output #0: loss = 2.32761 (* 1 = 2.32761 loss)
I0428 20:14:42.339686 32729 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:42.452406 32729 solver.cpp:219] Iteration 100 (886.978 iter/s, 0.112742s/100 iters), loss = 1.26947
I0428 20:14:42.452458 32729 solver.cpp:238]     Train net output #0: loss = 1.26947 (* 1 = 1.26947 loss)
I0428 20:14:42.452471 32729 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:42.568004 32729 solver.cpp:219] Iteration 200 (865.517 iter/s, 0.115538s/100 iters), loss = 0.765303
I0428 20:14:42.568032 32729 solver.cpp:238]     Train net output #0: loss = 0.765303 (* 1 = 0.765303 loss)
I0428 20:14:42.568038 32729 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:42.679703 32729 solver.cpp:219] Iteration 300 (895.576 iter/s, 0.11166s/100 iters), loss = 0.438512
I0428 20:14:42.679729 32729 solver.cpp:238]     Train net output #0: loss = 0.438512 (* 1 = 0.438512 loss)
I0428 20:14:42.679736 32729 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:42.795004 32729 solver.cpp:219] Iteration 400 (867.577 iter/s, 0.115264s/100 iters), loss = 0.496037
I0428 20:14:42.795047 32729 solver.cpp:238]     Train net output #0: loss = 0.496037 (* 1 = 0.496037 loss)
I0428 20:14:42.795053 32729 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:42.906493 32729 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:42.971349 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:42.973541 32729 solver.cpp:398]     Test net output #0: accuracy = 0.8124
I0428 20:14:42.973562 32729 solver.cpp:398]     Test net output #1: loss = 0.506486 (* 1 = 0.506486 loss)
I0428 20:14:42.974642 32729 solver.cpp:219] Iteration 500 (556.798 iter/s, 0.179598s/100 iters), loss = 0.529695
I0428 20:14:42.974714 32729 solver.cpp:238]     Train net output #0: loss = 0.529695 (* 1 = 0.529695 loss)
I0428 20:14:42.974721 32729 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:43.087739 32729 solver.cpp:219] Iteration 600 (884.832 iter/s, 0.113016s/100 iters), loss = 0.518127
I0428 20:14:43.087781 32729 solver.cpp:238]     Train net output #0: loss = 0.518127 (* 1 = 0.518127 loss)
I0428 20:14:43.087788 32729 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:43.198585 32729 solver.cpp:219] Iteration 700 (902.585 iter/s, 0.110793s/100 iters), loss = 0.55999
I0428 20:14:43.198627 32729 solver.cpp:238]     Train net output #0: loss = 0.55999 (* 1 = 0.55999 loss)
I0428 20:14:43.198633 32729 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:43.311666 32729 solver.cpp:219] Iteration 800 (884.744 iter/s, 0.113027s/100 iters), loss = 0.539146
I0428 20:14:43.311707 32729 solver.cpp:238]     Train net output #0: loss = 0.539146 (* 1 = 0.539146 loss)
I0428 20:14:43.311713 32729 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:43.426873 32729 solver.cpp:219] Iteration 900 (868.272 iter/s, 0.115171s/100 iters), loss = 0.491912
I0428 20:14:43.426914 32729 solver.cpp:238]     Train net output #0: loss = 0.491912 (* 1 = 0.491912 loss)
I0428 20:14:43.426920 32729 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:43.465567 32735 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:43.541364 32729 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:43.542301 32729 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:43.542989 32729 solver.cpp:311] Iteration 1000, loss = 0.250748
I0428 20:14:43.543004 32729 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:43.608078 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:43.609922 32729 solver.cpp:398]     Test net output #0: accuracy = 0.9363
I0428 20:14:43.609956 32729 solver.cpp:398]     Test net output #1: loss = 0.215121 (* 1 = 0.215121 loss)
I0428 20:14:43.609961 32729 solver.cpp:316] Optimization Done.
I0428 20:14:43.609966 32729 caffe.cpp:259] Optimization Done.
