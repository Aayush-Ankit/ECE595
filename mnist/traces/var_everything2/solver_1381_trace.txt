I0428 20:21:17.697561  1729 caffe.cpp:218] Using GPUs 0
I0428 20:21:17.734524  1729 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:18.248020  1729 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1381.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:18.248159  1729 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1381.prototxt
I0428 20:21:18.248579  1729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:18.248598  1729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:18.248702  1729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:18.248785  1729 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:18.248904  1729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:18.248929  1729 net.cpp:86] Creating Layer mnist
I0428 20:21:18.248939  1729 net.cpp:382] mnist -> data
I0428 20:21:18.248961  1729 net.cpp:382] mnist -> label
I0428 20:21:18.250051  1729 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:18.252502  1729 net.cpp:124] Setting up mnist
I0428 20:21:18.252521  1729 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:18.252527  1729 net.cpp:131] Top shape: 64 (64)
I0428 20:21:18.252532  1729 net.cpp:139] Memory required for data: 200960
I0428 20:21:18.252537  1729 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:18.252555  1729 net.cpp:86] Creating Layer conv0
I0428 20:21:18.252575  1729 net.cpp:408] conv0 <- data
I0428 20:21:18.252590  1729 net.cpp:382] conv0 -> conv0
I0428 20:21:18.540715  1729 net.cpp:124] Setting up conv0
I0428 20:21:18.540743  1729 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:18.540748  1729 net.cpp:139] Memory required for data: 7573760
I0428 20:21:18.540766  1729 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:18.540779  1729 net.cpp:86] Creating Layer pool0
I0428 20:21:18.540783  1729 net.cpp:408] pool0 <- conv0
I0428 20:21:18.540789  1729 net.cpp:382] pool0 -> pool0
I0428 20:21:18.540856  1729 net.cpp:124] Setting up pool0
I0428 20:21:18.540864  1729 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:18.540877  1729 net.cpp:139] Memory required for data: 9416960
I0428 20:21:18.540881  1729 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:18.540902  1729 net.cpp:86] Creating Layer conv1
I0428 20:21:18.540906  1729 net.cpp:408] conv1 <- pool0
I0428 20:21:18.540911  1729 net.cpp:382] conv1 -> conv1
I0428 20:21:18.543285  1729 net.cpp:124] Setting up conv1
I0428 20:21:18.543300  1729 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:18.543304  1729 net.cpp:139] Memory required for data: 10236160
I0428 20:21:18.543313  1729 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:18.543323  1729 net.cpp:86] Creating Layer pool1
I0428 20:21:18.543328  1729 net.cpp:408] pool1 <- conv1
I0428 20:21:18.543332  1729 net.cpp:382] pool1 -> pool1
I0428 20:21:18.543372  1729 net.cpp:124] Setting up pool1
I0428 20:21:18.543380  1729 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:18.543383  1729 net.cpp:139] Memory required for data: 10440960
I0428 20:21:18.543386  1729 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:18.543393  1729 net.cpp:86] Creating Layer ip1
I0428 20:21:18.543397  1729 net.cpp:408] ip1 <- pool1
I0428 20:21:18.543403  1729 net.cpp:382] ip1 -> ip1
I0428 20:21:18.544440  1729 net.cpp:124] Setting up ip1
I0428 20:21:18.544453  1729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:18.544456  1729 net.cpp:139] Memory required for data: 10443520
I0428 20:21:18.544466  1729 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:18.544472  1729 net.cpp:86] Creating Layer relu1
I0428 20:21:18.544476  1729 net.cpp:408] relu1 <- ip1
I0428 20:21:18.544481  1729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:18.544672  1729 net.cpp:124] Setting up relu1
I0428 20:21:18.544682  1729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:18.544684  1729 net.cpp:139] Memory required for data: 10446080
I0428 20:21:18.544688  1729 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:18.544697  1729 net.cpp:86] Creating Layer ip2
I0428 20:21:18.544700  1729 net.cpp:408] ip2 <- ip1
I0428 20:21:18.544705  1729 net.cpp:382] ip2 -> ip2
I0428 20:21:18.544829  1729 net.cpp:124] Setting up ip2
I0428 20:21:18.544837  1729 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:18.544847  1729 net.cpp:139] Memory required for data: 10452480
I0428 20:21:18.544853  1729 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:18.544859  1729 net.cpp:86] Creating Layer relu2
I0428 20:21:18.544863  1729 net.cpp:408] relu2 <- ip2
I0428 20:21:18.544869  1729 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:18.545644  1729 net.cpp:124] Setting up relu2
I0428 20:21:18.545655  1729 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:18.545660  1729 net.cpp:139] Memory required for data: 10458880
I0428 20:21:18.545662  1729 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:18.545670  1729 net.cpp:86] Creating Layer ip3
I0428 20:21:18.545675  1729 net.cpp:408] ip3 <- ip2
I0428 20:21:18.545680  1729 net.cpp:382] ip3 -> ip3
I0428 20:21:18.545783  1729 net.cpp:124] Setting up ip3
I0428 20:21:18.545801  1729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:18.545804  1729 net.cpp:139] Memory required for data: 10461440
I0428 20:21:18.545812  1729 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:18.545819  1729 net.cpp:86] Creating Layer relu3
I0428 20:21:18.545825  1729 net.cpp:408] relu3 <- ip3
I0428 20:21:18.545828  1729 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:18.546020  1729 net.cpp:124] Setting up relu3
I0428 20:21:18.546028  1729 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:18.546031  1729 net.cpp:139] Memory required for data: 10464000
I0428 20:21:18.546035  1729 layer_factory.hpp:77] Creating layer loss
I0428 20:21:18.546041  1729 net.cpp:86] Creating Layer loss
I0428 20:21:18.546044  1729 net.cpp:408] loss <- ip3
I0428 20:21:18.546048  1729 net.cpp:408] loss <- label
I0428 20:21:18.546053  1729 net.cpp:382] loss -> loss
I0428 20:21:18.546073  1729 layer_factory.hpp:77] Creating layer loss
I0428 20:21:18.546329  1729 net.cpp:124] Setting up loss
I0428 20:21:18.546337  1729 net.cpp:131] Top shape: (1)
I0428 20:21:18.546340  1729 net.cpp:134]     with loss weight 1
I0428 20:21:18.546355  1729 net.cpp:139] Memory required for data: 10464004
I0428 20:21:18.546357  1729 net.cpp:200] loss needs backward computation.
I0428 20:21:18.546361  1729 net.cpp:200] relu3 needs backward computation.
I0428 20:21:18.546365  1729 net.cpp:200] ip3 needs backward computation.
I0428 20:21:18.546366  1729 net.cpp:200] relu2 needs backward computation.
I0428 20:21:18.546370  1729 net.cpp:200] ip2 needs backward computation.
I0428 20:21:18.546373  1729 net.cpp:200] relu1 needs backward computation.
I0428 20:21:18.546376  1729 net.cpp:200] ip1 needs backward computation.
I0428 20:21:18.546380  1729 net.cpp:200] pool1 needs backward computation.
I0428 20:21:18.546382  1729 net.cpp:200] conv1 needs backward computation.
I0428 20:21:18.546386  1729 net.cpp:200] pool0 needs backward computation.
I0428 20:21:18.546388  1729 net.cpp:200] conv0 needs backward computation.
I0428 20:21:18.546391  1729 net.cpp:202] mnist does not need backward computation.
I0428 20:21:18.546394  1729 net.cpp:244] This network produces output loss
I0428 20:21:18.546404  1729 net.cpp:257] Network initialization done.
I0428 20:21:18.546743  1729 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1381.prototxt
I0428 20:21:18.546771  1729 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:18.546864  1729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:18.546948  1729 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:18.546993  1729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:18.547005  1729 net.cpp:86] Creating Layer mnist
I0428 20:21:18.547011  1729 net.cpp:382] mnist -> data
I0428 20:21:18.547019  1729 net.cpp:382] mnist -> label
I0428 20:21:18.547107  1729 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:18.549010  1729 net.cpp:124] Setting up mnist
I0428 20:21:18.549034  1729 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:18.549039  1729 net.cpp:131] Top shape: 100 (100)
I0428 20:21:18.549042  1729 net.cpp:139] Memory required for data: 314000
I0428 20:21:18.549046  1729 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:18.549057  1729 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:18.549059  1729 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:18.549067  1729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:18.549073  1729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:18.549134  1729 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:18.549140  1729 net.cpp:131] Top shape: 100 (100)
I0428 20:21:18.549144  1729 net.cpp:131] Top shape: 100 (100)
I0428 20:21:18.549147  1729 net.cpp:139] Memory required for data: 314800
I0428 20:21:18.549150  1729 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:18.549160  1729 net.cpp:86] Creating Layer conv0
I0428 20:21:18.549165  1729 net.cpp:408] conv0 <- data
I0428 20:21:18.549170  1729 net.cpp:382] conv0 -> conv0
I0428 20:21:18.550818  1729 net.cpp:124] Setting up conv0
I0428 20:21:18.550833  1729 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:18.550837  1729 net.cpp:139] Memory required for data: 11834800
I0428 20:21:18.550846  1729 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:18.550855  1729 net.cpp:86] Creating Layer pool0
I0428 20:21:18.550858  1729 net.cpp:408] pool0 <- conv0
I0428 20:21:18.550863  1729 net.cpp:382] pool0 -> pool0
I0428 20:21:18.550935  1729 net.cpp:124] Setting up pool0
I0428 20:21:18.550942  1729 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:18.550945  1729 net.cpp:139] Memory required for data: 14714800
I0428 20:21:18.550948  1729 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:18.550958  1729 net.cpp:86] Creating Layer conv1
I0428 20:21:18.550962  1729 net.cpp:408] conv1 <- pool0
I0428 20:21:18.550969  1729 net.cpp:382] conv1 -> conv1
I0428 20:21:18.552841  1729 net.cpp:124] Setting up conv1
I0428 20:21:18.552856  1729 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:18.552860  1729 net.cpp:139] Memory required for data: 15994800
I0428 20:21:18.552870  1729 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:18.552877  1729 net.cpp:86] Creating Layer pool1
I0428 20:21:18.552881  1729 net.cpp:408] pool1 <- conv1
I0428 20:21:18.552886  1729 net.cpp:382] pool1 -> pool1
I0428 20:21:18.552924  1729 net.cpp:124] Setting up pool1
I0428 20:21:18.552932  1729 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:18.552934  1729 net.cpp:139] Memory required for data: 16314800
I0428 20:21:18.552937  1729 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:18.552944  1729 net.cpp:86] Creating Layer ip1
I0428 20:21:18.552947  1729 net.cpp:408] ip1 <- pool1
I0428 20:21:18.552953  1729 net.cpp:382] ip1 -> ip1
I0428 20:21:18.553110  1729 net.cpp:124] Setting up ip1
I0428 20:21:18.553117  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.553131  1729 net.cpp:139] Memory required for data: 16318800
I0428 20:21:18.553139  1729 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:18.553158  1729 net.cpp:86] Creating Layer relu1
I0428 20:21:18.553160  1729 net.cpp:408] relu1 <- ip1
I0428 20:21:18.553165  1729 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:18.553395  1729 net.cpp:124] Setting up relu1
I0428 20:21:18.553405  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.553418  1729 net.cpp:139] Memory required for data: 16322800
I0428 20:21:18.553421  1729 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:18.553431  1729 net.cpp:86] Creating Layer ip2
I0428 20:21:18.553434  1729 net.cpp:408] ip2 <- ip1
I0428 20:21:18.553441  1729 net.cpp:382] ip2 -> ip2
I0428 20:21:18.553552  1729 net.cpp:124] Setting up ip2
I0428 20:21:18.553560  1729 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:18.553563  1729 net.cpp:139] Memory required for data: 16332800
I0428 20:21:18.553568  1729 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:18.553573  1729 net.cpp:86] Creating Layer relu2
I0428 20:21:18.553581  1729 net.cpp:408] relu2 <- ip2
I0428 20:21:18.553586  1729 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:18.553768  1729 net.cpp:124] Setting up relu2
I0428 20:21:18.553776  1729 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:18.553781  1729 net.cpp:139] Memory required for data: 16342800
I0428 20:21:18.553783  1729 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:18.553788  1729 net.cpp:86] Creating Layer ip3
I0428 20:21:18.553791  1729 net.cpp:408] ip3 <- ip2
I0428 20:21:18.553798  1729 net.cpp:382] ip3 -> ip3
I0428 20:21:18.553912  1729 net.cpp:124] Setting up ip3
I0428 20:21:18.553918  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.553921  1729 net.cpp:139] Memory required for data: 16346800
I0428 20:21:18.553928  1729 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:18.553933  1729 net.cpp:86] Creating Layer relu3
I0428 20:21:18.553936  1729 net.cpp:408] relu3 <- ip3
I0428 20:21:18.553941  1729 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:18.554692  1729 net.cpp:124] Setting up relu3
I0428 20:21:18.554704  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.554708  1729 net.cpp:139] Memory required for data: 16350800
I0428 20:21:18.554713  1729 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:18.554718  1729 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:18.554721  1729 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:18.554728  1729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:18.554735  1729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:18.554775  1729 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:18.554781  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.554785  1729 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:18.554788  1729 net.cpp:139] Memory required for data: 16358800
I0428 20:21:18.554791  1729 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:18.554797  1729 net.cpp:86] Creating Layer accuracy
I0428 20:21:18.554800  1729 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:18.554805  1729 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:18.554810  1729 net.cpp:382] accuracy -> accuracy
I0428 20:21:18.554817  1729 net.cpp:124] Setting up accuracy
I0428 20:21:18.554822  1729 net.cpp:131] Top shape: (1)
I0428 20:21:18.554826  1729 net.cpp:139] Memory required for data: 16358804
I0428 20:21:18.554828  1729 layer_factory.hpp:77] Creating layer loss
I0428 20:21:18.554832  1729 net.cpp:86] Creating Layer loss
I0428 20:21:18.554836  1729 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:18.554839  1729 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:18.554843  1729 net.cpp:382] loss -> loss
I0428 20:21:18.554849  1729 layer_factory.hpp:77] Creating layer loss
I0428 20:21:18.555094  1729 net.cpp:124] Setting up loss
I0428 20:21:18.555101  1729 net.cpp:131] Top shape: (1)
I0428 20:21:18.555104  1729 net.cpp:134]     with loss weight 1
I0428 20:21:18.555121  1729 net.cpp:139] Memory required for data: 16358808
I0428 20:21:18.555124  1729 net.cpp:200] loss needs backward computation.
I0428 20:21:18.555129  1729 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:18.555132  1729 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:18.555135  1729 net.cpp:200] relu3 needs backward computation.
I0428 20:21:18.555137  1729 net.cpp:200] ip3 needs backward computation.
I0428 20:21:18.555141  1729 net.cpp:200] relu2 needs backward computation.
I0428 20:21:18.555143  1729 net.cpp:200] ip2 needs backward computation.
I0428 20:21:18.555146  1729 net.cpp:200] relu1 needs backward computation.
I0428 20:21:18.555150  1729 net.cpp:200] ip1 needs backward computation.
I0428 20:21:18.555152  1729 net.cpp:200] pool1 needs backward computation.
I0428 20:21:18.555155  1729 net.cpp:200] conv1 needs backward computation.
I0428 20:21:18.555158  1729 net.cpp:200] pool0 needs backward computation.
I0428 20:21:18.555161  1729 net.cpp:200] conv0 needs backward computation.
I0428 20:21:18.555166  1729 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:18.555179  1729 net.cpp:202] mnist does not need backward computation.
I0428 20:21:18.555182  1729 net.cpp:244] This network produces output accuracy
I0428 20:21:18.555186  1729 net.cpp:244] This network produces output loss
I0428 20:21:18.555197  1729 net.cpp:257] Network initialization done.
I0428 20:21:18.555238  1729 solver.cpp:56] Solver scaffolding done.
I0428 20:21:18.555580  1729 caffe.cpp:248] Starting Optimization
I0428 20:21:18.555599  1729 solver.cpp:273] Solving LeNet
I0428 20:21:18.555601  1729 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:18.555775  1729 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:18.631014  1739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:18.633608  1729 solver.cpp:398]     Test net output #0: accuracy = 0.1175
I0428 20:21:18.633626  1729 solver.cpp:398]     Test net output #1: loss = 2.29346 (* 1 = 2.29346 loss)
I0428 20:21:18.637534  1729 solver.cpp:219] Iteration 0 (0 iter/s, 0.0819057s/100 iters), loss = 2.29047
I0428 20:21:18.637557  1729 solver.cpp:238]     Train net output #0: loss = 2.29047 (* 1 = 2.29047 loss)
I0428 20:21:18.637567  1729 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:18.798897  1729 solver.cpp:219] Iteration 100 (619.874 iter/s, 0.161323s/100 iters), loss = 0.925005
I0428 20:21:18.798940  1729 solver.cpp:238]     Train net output #0: loss = 0.925005 (* 1 = 0.925005 loss)
I0428 20:21:18.798946  1729 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:18.954602  1729 solver.cpp:219] Iteration 200 (642.471 iter/s, 0.155649s/100 iters), loss = 0.412564
I0428 20:21:18.954641  1729 solver.cpp:238]     Train net output #0: loss = 0.412564 (* 1 = 0.412564 loss)
I0428 20:21:18.954663  1729 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:19.111582  1729 solver.cpp:219] Iteration 300 (637.239 iter/s, 0.156927s/100 iters), loss = 0.183259
I0428 20:21:19.111606  1729 solver.cpp:238]     Train net output #0: loss = 0.183259 (* 1 = 0.183259 loss)
I0428 20:21:19.111613  1729 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:19.267091  1729 solver.cpp:219] Iteration 400 (643.207 iter/s, 0.155471s/100 iters), loss = 0.120947
I0428 20:21:19.267132  1729 solver.cpp:238]     Train net output #0: loss = 0.120947 (* 1 = 0.120947 loss)
I0428 20:21:19.267138  1729 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:19.418934  1729 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:19.425734  1729 blocking_queue.cpp:49] Waiting for data
I0428 20:21:19.497539  1739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:19.498674  1729 solver.cpp:398]     Test net output #0: accuracy = 0.9628
I0428 20:21:19.498695  1729 solver.cpp:398]     Test net output #1: loss = 0.128301 (* 1 = 0.128301 loss)
I0428 20:21:19.500231  1729 solver.cpp:219] Iteration 500 (429 iter/s, 0.2331s/100 iters), loss = 0.144906
I0428 20:21:19.500285  1729 solver.cpp:238]     Train net output #0: loss = 0.144906 (* 1 = 0.144906 loss)
I0428 20:21:19.500293  1729 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:19.663077  1729 solver.cpp:219] Iteration 600 (614.326 iter/s, 0.16278s/100 iters), loss = 0.119141
I0428 20:21:19.663101  1729 solver.cpp:238]     Train net output #0: loss = 0.119141 (* 1 = 0.119141 loss)
I0428 20:21:19.663107  1729 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:19.817189  1729 solver.cpp:219] Iteration 700 (649.034 iter/s, 0.154075s/100 iters), loss = 0.0778999
I0428 20:21:19.817214  1729 solver.cpp:238]     Train net output #0: loss = 0.0778999 (* 1 = 0.0778999 loss)
I0428 20:21:19.817219  1729 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:19.972116  1729 solver.cpp:219] Iteration 800 (645.614 iter/s, 0.154891s/100 iters), loss = 0.299833
I0428 20:21:19.972141  1729 solver.cpp:238]     Train net output #0: loss = 0.299833 (* 1 = 0.299833 loss)
I0428 20:21:19.972147  1729 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:20.127847  1729 solver.cpp:219] Iteration 900 (642.289 iter/s, 0.155693s/100 iters), loss = 0.129558
I0428 20:21:20.127872  1729 solver.cpp:238]     Train net output #0: loss = 0.129558 (* 1 = 0.129558 loss)
I0428 20:21:20.127878  1729 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:20.179205  1738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:20.280138  1729 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:20.282264  1729 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:20.283470  1729 solver.cpp:311] Iteration 1000, loss = 0.116378
I0428 20:21:20.283485  1729 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:20.362241  1739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:20.363373  1729 solver.cpp:398]     Test net output #0: accuracy = 0.9763
I0428 20:21:20.363391  1729 solver.cpp:398]     Test net output #1: loss = 0.0768844 (* 1 = 0.0768844 loss)
I0428 20:21:20.363396  1729 solver.cpp:316] Optimization Done.
I0428 20:21:20.363399  1729 caffe.cpp:259] Optimization Done.
