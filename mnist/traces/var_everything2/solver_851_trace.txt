I0428 19:59:33.314414 29268 caffe.cpp:218] Using GPUs 0
I0428 19:59:33.355239 29268 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:33.961597 29268 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test851.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:33.961773 29268 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test851.prototxt
I0428 19:59:33.962337 29268 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:33.962363 29268 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:33.962501 29268 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:33.962601 29268 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:33.962736 29268 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:33.962766 29268 net.cpp:86] Creating Layer mnist
I0428 19:59:33.962777 29268 net.cpp:382] mnist -> data
I0428 19:59:33.962807 29268 net.cpp:382] mnist -> label
I0428 19:59:33.964262 29268 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:33.967547 29268 net.cpp:124] Setting up mnist
I0428 19:59:33.967571 29268 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:33.967581 29268 net.cpp:131] Top shape: 64 (64)
I0428 19:59:33.967587 29268 net.cpp:139] Memory required for data: 200960
I0428 19:59:33.967597 29268 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:33.967618 29268 net.cpp:86] Creating Layer conv0
I0428 19:59:33.967658 29268 net.cpp:408] conv0 <- data
I0428 19:59:33.967674 29268 net.cpp:382] conv0 -> conv0
I0428 19:59:34.267860 29268 net.cpp:124] Setting up conv0
I0428 19:59:34.267892 29268 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:34.267897 29268 net.cpp:139] Memory required for data: 1675520
I0428 19:59:34.267915 29268 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:34.267930 29268 net.cpp:86] Creating Layer pool0
I0428 19:59:34.267935 29268 net.cpp:408] pool0 <- conv0
I0428 19:59:34.267941 29268 net.cpp:382] pool0 -> pool0
I0428 19:59:34.267997 29268 net.cpp:124] Setting up pool0
I0428 19:59:34.268007 29268 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:34.268010 29268 net.cpp:139] Memory required for data: 2044160
I0428 19:59:34.268014 29268 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:34.268026 29268 net.cpp:86] Creating Layer conv1
I0428 19:59:34.268033 29268 net.cpp:408] conv1 <- pool0
I0428 19:59:34.268038 29268 net.cpp:382] conv1 -> conv1
I0428 19:59:34.271190 29268 net.cpp:124] Setting up conv1
I0428 19:59:34.271209 29268 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:34.271214 29268 net.cpp:139] Memory required for data: 2208000
I0428 19:59:34.271225 29268 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:34.271236 29268 net.cpp:86] Creating Layer pool1
I0428 19:59:34.271241 29268 net.cpp:408] pool1 <- conv1
I0428 19:59:34.271248 29268 net.cpp:382] pool1 -> pool1
I0428 19:59:34.271293 29268 net.cpp:124] Setting up pool1
I0428 19:59:34.271301 29268 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:34.271306 29268 net.cpp:139] Memory required for data: 2248960
I0428 19:59:34.271309 29268 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:34.271317 29268 net.cpp:86] Creating Layer ip1
I0428 19:59:34.271320 29268 net.cpp:408] ip1 <- pool1
I0428 19:59:34.271327 29268 net.cpp:382] ip1 -> ip1
I0428 19:59:34.272469 29268 net.cpp:124] Setting up ip1
I0428 19:59:34.272485 29268 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:34.272490 29268 net.cpp:139] Memory required for data: 2261760
I0428 19:59:34.272500 29268 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:34.272507 29268 net.cpp:86] Creating Layer relu1
I0428 19:59:34.272511 29268 net.cpp:408] relu1 <- ip1
I0428 19:59:34.272517 29268 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:34.272719 29268 net.cpp:124] Setting up relu1
I0428 19:59:34.272730 29268 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:34.272734 29268 net.cpp:139] Memory required for data: 2274560
I0428 19:59:34.272738 29268 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:34.272747 29268 net.cpp:86] Creating Layer ip2
I0428 19:59:34.272750 29268 net.cpp:408] ip2 <- ip1
I0428 19:59:34.272756 29268 net.cpp:382] ip2 -> ip2
I0428 19:59:34.272884 29268 net.cpp:124] Setting up ip2
I0428 19:59:34.272894 29268 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:34.272899 29268 net.cpp:139] Memory required for data: 2277120
I0428 19:59:34.272907 29268 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:34.272917 29268 net.cpp:86] Creating Layer relu2
I0428 19:59:34.272922 29268 net.cpp:408] relu2 <- ip2
I0428 19:59:34.272927 29268 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:34.273779 29268 net.cpp:124] Setting up relu2
I0428 19:59:34.273794 29268 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:34.273798 29268 net.cpp:139] Memory required for data: 2279680
I0428 19:59:34.273803 29268 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:34.273811 29268 net.cpp:86] Creating Layer ip3
I0428 19:59:34.273815 29268 net.cpp:408] ip3 <- ip2
I0428 19:59:34.273821 29268 net.cpp:382] ip3 -> ip3
I0428 19:59:34.273939 29268 net.cpp:124] Setting up ip3
I0428 19:59:34.273948 29268 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:34.273952 29268 net.cpp:139] Memory required for data: 2282240
I0428 19:59:34.273962 29268 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:34.273969 29268 net.cpp:86] Creating Layer relu3
I0428 19:59:34.273973 29268 net.cpp:408] relu3 <- ip3
I0428 19:59:34.273978 29268 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:34.274178 29268 net.cpp:124] Setting up relu3
I0428 19:59:34.274188 29268 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:34.274193 29268 net.cpp:139] Memory required for data: 2284800
I0428 19:59:34.274196 29268 layer_factory.hpp:77] Creating layer loss
I0428 19:59:34.274204 29268 net.cpp:86] Creating Layer loss
I0428 19:59:34.274209 29268 net.cpp:408] loss <- ip3
I0428 19:59:34.274214 29268 net.cpp:408] loss <- label
I0428 19:59:34.274220 29268 net.cpp:382] loss -> loss
I0428 19:59:34.274242 29268 layer_factory.hpp:77] Creating layer loss
I0428 19:59:34.274513 29268 net.cpp:124] Setting up loss
I0428 19:59:34.274523 29268 net.cpp:131] Top shape: (1)
I0428 19:59:34.274528 29268 net.cpp:134]     with loss weight 1
I0428 19:59:34.274544 29268 net.cpp:139] Memory required for data: 2284804
I0428 19:59:34.274549 29268 net.cpp:200] loss needs backward computation.
I0428 19:59:34.274554 29268 net.cpp:200] relu3 needs backward computation.
I0428 19:59:34.274557 29268 net.cpp:200] ip3 needs backward computation.
I0428 19:59:34.274561 29268 net.cpp:200] relu2 needs backward computation.
I0428 19:59:34.274564 29268 net.cpp:200] ip2 needs backward computation.
I0428 19:59:34.274569 29268 net.cpp:200] relu1 needs backward computation.
I0428 19:59:34.274571 29268 net.cpp:200] ip1 needs backward computation.
I0428 19:59:34.274575 29268 net.cpp:200] pool1 needs backward computation.
I0428 19:59:34.274580 29268 net.cpp:200] conv1 needs backward computation.
I0428 19:59:34.274583 29268 net.cpp:200] pool0 needs backward computation.
I0428 19:59:34.274587 29268 net.cpp:200] conv0 needs backward computation.
I0428 19:59:34.274591 29268 net.cpp:202] mnist does not need backward computation.
I0428 19:59:34.274595 29268 net.cpp:244] This network produces output loss
I0428 19:59:34.274605 29268 net.cpp:257] Network initialization done.
I0428 19:59:34.274986 29268 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test851.prototxt
I0428 19:59:34.275018 29268 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:34.275130 29268 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:34.275224 29268 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:34.275276 29268 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:34.275290 29268 net.cpp:86] Creating Layer mnist
I0428 19:59:34.275296 29268 net.cpp:382] mnist -> data
I0428 19:59:34.275305 29268 net.cpp:382] mnist -> label
I0428 19:59:34.275406 29268 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:34.277603 29268 net.cpp:124] Setting up mnist
I0428 19:59:34.277619 29268 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:34.277626 29268 net.cpp:131] Top shape: 100 (100)
I0428 19:59:34.277629 29268 net.cpp:139] Memory required for data: 314000
I0428 19:59:34.277633 29268 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:34.277671 29268 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:34.277678 29268 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:34.277688 29268 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:34.277696 29268 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:34.277750 29268 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:34.277758 29268 net.cpp:131] Top shape: 100 (100)
I0428 19:59:34.277763 29268 net.cpp:131] Top shape: 100 (100)
I0428 19:59:34.277767 29268 net.cpp:139] Memory required for data: 314800
I0428 19:59:34.277770 29268 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:34.277781 29268 net.cpp:86] Creating Layer conv0
I0428 19:59:34.277786 29268 net.cpp:408] conv0 <- data
I0428 19:59:34.277796 29268 net.cpp:382] conv0 -> conv0
I0428 19:59:34.279772 29268 net.cpp:124] Setting up conv0
I0428 19:59:34.279791 29268 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:34.279796 29268 net.cpp:139] Memory required for data: 2618800
I0428 19:59:34.279808 29268 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:34.279815 29268 net.cpp:86] Creating Layer pool0
I0428 19:59:34.279819 29268 net.cpp:408] pool0 <- conv0
I0428 19:59:34.279826 29268 net.cpp:382] pool0 -> pool0
I0428 19:59:34.279871 29268 net.cpp:124] Setting up pool0
I0428 19:59:34.279881 29268 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:34.279883 29268 net.cpp:139] Memory required for data: 3194800
I0428 19:59:34.279887 29268 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:34.279899 29268 net.cpp:86] Creating Layer conv1
I0428 19:59:34.279906 29268 net.cpp:408] conv1 <- pool0
I0428 19:59:34.279911 29268 net.cpp:382] conv1 -> conv1
I0428 19:59:34.282323 29268 net.cpp:124] Setting up conv1
I0428 19:59:34.282341 29268 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:34.282344 29268 net.cpp:139] Memory required for data: 3450800
I0428 19:59:34.282356 29268 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:34.282364 29268 net.cpp:86] Creating Layer pool1
I0428 19:59:34.282373 29268 net.cpp:408] pool1 <- conv1
I0428 19:59:34.282382 29268 net.cpp:382] pool1 -> pool1
I0428 19:59:34.282475 29268 net.cpp:124] Setting up pool1
I0428 19:59:34.282485 29268 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:34.282490 29268 net.cpp:139] Memory required for data: 3514800
I0428 19:59:34.282492 29268 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:34.282502 29268 net.cpp:86] Creating Layer ip1
I0428 19:59:34.282508 29268 net.cpp:408] ip1 <- pool1
I0428 19:59:34.282524 29268 net.cpp:382] ip1 -> ip1
I0428 19:59:34.282702 29268 net.cpp:124] Setting up ip1
I0428 19:59:34.282712 29268 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:34.282729 29268 net.cpp:139] Memory required for data: 3534800
I0428 19:59:34.282739 29268 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:34.282747 29268 net.cpp:86] Creating Layer relu1
I0428 19:59:34.282752 29268 net.cpp:408] relu1 <- ip1
I0428 19:59:34.282758 29268 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:34.282965 29268 net.cpp:124] Setting up relu1
I0428 19:59:34.282976 29268 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:34.282981 29268 net.cpp:139] Memory required for data: 3554800
I0428 19:59:34.282985 29268 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:34.282994 29268 net.cpp:86] Creating Layer ip2
I0428 19:59:34.282999 29268 net.cpp:408] ip2 <- ip1
I0428 19:59:34.283005 29268 net.cpp:382] ip2 -> ip2
I0428 19:59:34.283133 29268 net.cpp:124] Setting up ip2
I0428 19:59:34.283143 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.283146 29268 net.cpp:139] Memory required for data: 3558800
I0428 19:59:34.283152 29268 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:34.283160 29268 net.cpp:86] Creating Layer relu2
I0428 19:59:34.283164 29268 net.cpp:408] relu2 <- ip2
I0428 19:59:34.283171 29268 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:34.283422 29268 net.cpp:124] Setting up relu2
I0428 19:59:34.283433 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.283437 29268 net.cpp:139] Memory required for data: 3562800
I0428 19:59:34.283442 29268 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:34.283449 29268 net.cpp:86] Creating Layer ip3
I0428 19:59:34.283454 29268 net.cpp:408] ip3 <- ip2
I0428 19:59:34.283460 29268 net.cpp:382] ip3 -> ip3
I0428 19:59:34.283591 29268 net.cpp:124] Setting up ip3
I0428 19:59:34.283601 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.283604 29268 net.cpp:139] Memory required for data: 3566800
I0428 19:59:34.283613 29268 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:34.283622 29268 net.cpp:86] Creating Layer relu3
I0428 19:59:34.283628 29268 net.cpp:408] relu3 <- ip3
I0428 19:59:34.283633 29268 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:34.284561 29268 net.cpp:124] Setting up relu3
I0428 19:59:34.284577 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.284581 29268 net.cpp:139] Memory required for data: 3570800
I0428 19:59:34.284585 29268 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:34.284592 29268 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:34.284596 29268 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:34.284602 29268 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:34.284610 29268 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:34.284656 29268 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:34.284663 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.284667 29268 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:34.284672 29268 net.cpp:139] Memory required for data: 3578800
I0428 19:59:34.284674 29268 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:34.284680 29268 net.cpp:86] Creating Layer accuracy
I0428 19:59:34.284685 29268 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:34.284690 29268 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:34.284698 29268 net.cpp:382] accuracy -> accuracy
I0428 19:59:34.284708 29268 net.cpp:124] Setting up accuracy
I0428 19:59:34.284714 29268 net.cpp:131] Top shape: (1)
I0428 19:59:34.284718 29268 net.cpp:139] Memory required for data: 3578804
I0428 19:59:34.284721 29268 layer_factory.hpp:77] Creating layer loss
I0428 19:59:34.284728 29268 net.cpp:86] Creating Layer loss
I0428 19:59:34.284732 29268 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:34.284737 29268 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:34.284742 29268 net.cpp:382] loss -> loss
I0428 19:59:34.284749 29268 layer_factory.hpp:77] Creating layer loss
I0428 19:59:34.285061 29268 net.cpp:124] Setting up loss
I0428 19:59:34.285073 29268 net.cpp:131] Top shape: (1)
I0428 19:59:34.285079 29268 net.cpp:134]     with loss weight 1
I0428 19:59:34.285099 29268 net.cpp:139] Memory required for data: 3578808
I0428 19:59:34.285105 29268 net.cpp:200] loss needs backward computation.
I0428 19:59:34.285110 29268 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:34.285115 29268 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:34.285120 29268 net.cpp:200] relu3 needs backward computation.
I0428 19:59:34.285123 29268 net.cpp:200] ip3 needs backward computation.
I0428 19:59:34.285127 29268 net.cpp:200] relu2 needs backward computation.
I0428 19:59:34.285130 29268 net.cpp:200] ip2 needs backward computation.
I0428 19:59:34.285135 29268 net.cpp:200] relu1 needs backward computation.
I0428 19:59:34.285138 29268 net.cpp:200] ip1 needs backward computation.
I0428 19:59:34.285141 29268 net.cpp:200] pool1 needs backward computation.
I0428 19:59:34.285145 29268 net.cpp:200] conv1 needs backward computation.
I0428 19:59:34.285150 29268 net.cpp:200] pool0 needs backward computation.
I0428 19:59:34.285153 29268 net.cpp:200] conv0 needs backward computation.
I0428 19:59:34.285158 29268 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:34.285163 29268 net.cpp:202] mnist does not need backward computation.
I0428 19:59:34.285166 29268 net.cpp:244] This network produces output accuracy
I0428 19:59:34.285171 29268 net.cpp:244] This network produces output loss
I0428 19:59:34.285184 29268 net.cpp:257] Network initialization done.
I0428 19:59:34.285234 29268 solver.cpp:56] Solver scaffolding done.
I0428 19:59:34.285665 29268 caffe.cpp:248] Starting Optimization
I0428 19:59:34.285671 29268 solver.cpp:273] Solving LeNet
I0428 19:59:34.285676 29268 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:34.286542 29268 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:34.290967 29268 blocking_queue.cpp:49] Waiting for data
I0428 19:59:34.358294 29277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:34.358826 29268 solver.cpp:398]     Test net output #0: accuracy = 0.1032
I0428 19:59:34.358852 29268 solver.cpp:398]     Test net output #1: loss = 2.4182 (* 1 = 2.4182 loss)
I0428 19:59:34.361548 29268 solver.cpp:219] Iteration 0 (3.00164 iter/s, 0.0758415s/100 iters), loss = 2.4572
I0428 19:59:34.361579 29268 solver.cpp:238]     Train net output #0: loss = 2.4572 (* 1 = 2.4572 loss)
I0428 19:59:34.361593 29268 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:34.443907 29268 solver.cpp:219] Iteration 100 (1214.83 iter/s, 0.0823163s/100 iters), loss = 1.49658
I0428 19:59:34.443938 29268 solver.cpp:238]     Train net output #0: loss = 1.49658 (* 1 = 1.49658 loss)
I0428 19:59:34.443946 29268 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:34.526237 29268 solver.cpp:219] Iteration 200 (1215.22 iter/s, 0.0822895s/100 iters), loss = 1.01057
I0428 19:59:34.526268 29268 solver.cpp:238]     Train net output #0: loss = 1.01057 (* 1 = 1.01057 loss)
I0428 19:59:34.526275 29268 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:34.608392 29268 solver.cpp:219] Iteration 300 (1217.8 iter/s, 0.0821156s/100 iters), loss = 1.02764
I0428 19:59:34.608422 29268 solver.cpp:238]     Train net output #0: loss = 1.02764 (* 1 = 1.02764 loss)
I0428 19:59:34.608429 29268 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:34.691156 29268 solver.cpp:219] Iteration 400 (1208.83 iter/s, 0.0827249s/100 iters), loss = 0.696258
I0428 19:59:34.691186 29268 solver.cpp:238]     Train net output #0: loss = 0.696258 (* 1 = 0.696258 loss)
I0428 19:59:34.691195 29268 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:34.773401 29268 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:34.826890 29277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:34.827389 29268 solver.cpp:398]     Test net output #0: accuracy = 0.7548
I0428 19:59:34.827407 29268 solver.cpp:398]     Test net output #1: loss = 0.641723 (* 1 = 0.641723 loss)
I0428 19:59:34.828191 29268 solver.cpp:219] Iteration 500 (729.96 iter/s, 0.136994s/100 iters), loss = 0.626851
I0428 19:59:34.828230 29268 solver.cpp:238]     Train net output #0: loss = 0.626851 (* 1 = 0.626851 loss)
I0428 19:59:34.828253 29268 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:34.915709 29268 solver.cpp:219] Iteration 600 (1143.05 iter/s, 0.0874855s/100 iters), loss = 0.677441
I0428 19:59:34.915750 29268 solver.cpp:238]     Train net output #0: loss = 0.677441 (* 1 = 0.677441 loss)
I0428 19:59:34.915757 29268 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:34.997057 29268 solver.cpp:219] Iteration 700 (1229.78 iter/s, 0.0813157s/100 iters), loss = 0.743324
I0428 19:59:34.997098 29268 solver.cpp:238]     Train net output #0: loss = 0.743324 (* 1 = 0.743324 loss)
I0428 19:59:34.997105 29268 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:35.092461 29268 solver.cpp:219] Iteration 800 (1048.56 iter/s, 0.0953692s/100 iters), loss = 0.860008
I0428 19:59:35.092485 29268 solver.cpp:238]     Train net output #0: loss = 0.860008 (* 1 = 0.860008 loss)
I0428 19:59:35.092491 29268 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:35.180444 29268 solver.cpp:219] Iteration 900 (1137.01 iter/s, 0.0879503s/100 iters), loss = 0.488303
I0428 19:59:35.180486 29268 solver.cpp:238]     Train net output #0: loss = 0.488303 (* 1 = 0.488303 loss)
I0428 19:59:35.180495 29268 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:35.208966 29276 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:35.260645 29268 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:35.261559 29268 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:35.262127 29268 solver.cpp:311] Iteration 1000, loss = 0.565827
I0428 19:59:35.262142 29268 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:35.336659 29277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:35.337213 29268 solver.cpp:398]     Test net output #0: accuracy = 0.7797
I0428 19:59:35.337249 29268 solver.cpp:398]     Test net output #1: loss = 0.541242 (* 1 = 0.541242 loss)
I0428 19:59:35.337255 29268 solver.cpp:316] Optimization Done.
I0428 19:59:35.337258 29268 caffe.cpp:259] Optimization Done.
