I0428 19:50:01.056090 26911 caffe.cpp:218] Using GPUs 0
I0428 19:50:01.086354 26911 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:01.529711 26911 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test592.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:01.529835 26911 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test592.prototxt
I0428 19:50:01.530303 26911 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:01.530338 26911 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:01.530455 26911 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:01.530530 26911 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:01.530634 26911 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:01.530660 26911 net.cpp:86] Creating Layer mnist
I0428 19:50:01.530670 26911 net.cpp:382] mnist -> data
I0428 19:50:01.530694 26911 net.cpp:382] mnist -> label
I0428 19:50:01.532129 26911 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:01.534546 26911 net.cpp:124] Setting up mnist
I0428 19:50:01.534576 26911 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:01.534596 26911 net.cpp:131] Top shape: 64 (64)
I0428 19:50:01.534600 26911 net.cpp:139] Memory required for data: 200960
I0428 19:50:01.534605 26911 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:01.534620 26911 net.cpp:86] Creating Layer conv0
I0428 19:50:01.534626 26911 net.cpp:408] conv0 <- data
I0428 19:50:01.534641 26911 net.cpp:382] conv0 -> conv0
I0428 19:50:01.759531 26911 net.cpp:124] Setting up conv0
I0428 19:50:01.759555 26911 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:01.759558 26911 net.cpp:139] Memory required for data: 938240
I0428 19:50:01.759590 26911 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:01.759604 26911 net.cpp:86] Creating Layer pool0
I0428 19:50:01.759610 26911 net.cpp:408] pool0 <- conv0
I0428 19:50:01.759616 26911 net.cpp:382] pool0 -> pool0
I0428 19:50:01.759675 26911 net.cpp:124] Setting up pool0
I0428 19:50:01.759687 26911 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:01.759691 26911 net.cpp:139] Memory required for data: 1122560
I0428 19:50:01.759696 26911 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:01.759712 26911 net.cpp:86] Creating Layer conv1
I0428 19:50:01.759721 26911 net.cpp:408] conv1 <- pool0
I0428 19:50:01.759728 26911 net.cpp:382] conv1 -> conv1
I0428 19:50:01.762858 26911 net.cpp:124] Setting up conv1
I0428 19:50:01.762889 26911 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:01.762892 26911 net.cpp:139] Memory required for data: 1286400
I0428 19:50:01.762900 26911 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:01.762908 26911 net.cpp:86] Creating Layer pool1
I0428 19:50:01.762912 26911 net.cpp:408] pool1 <- conv1
I0428 19:50:01.762917 26911 net.cpp:382] pool1 -> pool1
I0428 19:50:01.762966 26911 net.cpp:124] Setting up pool1
I0428 19:50:01.762979 26911 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:01.762982 26911 net.cpp:139] Memory required for data: 1327360
I0428 19:50:01.762987 26911 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:01.763000 26911 net.cpp:86] Creating Layer ip1
I0428 19:50:01.763005 26911 net.cpp:408] ip1 <- pool1
I0428 19:50:01.763012 26911 net.cpp:382] ip1 -> ip1
I0428 19:50:01.763200 26911 net.cpp:124] Setting up ip1
I0428 19:50:01.763212 26911 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:01.763217 26911 net.cpp:139] Memory required for data: 1333760
I0428 19:50:01.763228 26911 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:01.763237 26911 net.cpp:86] Creating Layer relu1
I0428 19:50:01.763247 26911 net.cpp:408] relu1 <- ip1
I0428 19:50:01.763253 26911 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:01.763497 26911 net.cpp:124] Setting up relu1
I0428 19:50:01.763509 26911 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:01.763514 26911 net.cpp:139] Memory required for data: 1340160
I0428 19:50:01.763519 26911 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:01.763530 26911 net.cpp:86] Creating Layer ip2
I0428 19:50:01.763535 26911 net.cpp:408] ip2 <- ip1
I0428 19:50:01.763542 26911 net.cpp:382] ip2 -> ip2
I0428 19:50:01.763690 26911 net.cpp:124] Setting up ip2
I0428 19:50:01.763703 26911 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:01.763708 26911 net.cpp:139] Memory required for data: 1342720
I0428 19:50:01.763717 26911 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:01.763727 26911 net.cpp:86] Creating Layer relu2
I0428 19:50:01.763736 26911 net.cpp:408] relu2 <- ip2
I0428 19:50:01.763743 26911 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:01.764829 26911 net.cpp:124] Setting up relu2
I0428 19:50:01.764873 26911 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:01.764889 26911 net.cpp:139] Memory required for data: 1345280
I0428 19:50:01.764895 26911 layer_factory.hpp:77] Creating layer loss
I0428 19:50:01.764905 26911 net.cpp:86] Creating Layer loss
I0428 19:50:01.764911 26911 net.cpp:408] loss <- ip2
I0428 19:50:01.764919 26911 net.cpp:408] loss <- label
I0428 19:50:01.764931 26911 net.cpp:382] loss -> loss
I0428 19:50:01.764955 26911 layer_factory.hpp:77] Creating layer loss
I0428 19:50:01.765406 26911 net.cpp:124] Setting up loss
I0428 19:50:01.765434 26911 net.cpp:131] Top shape: (1)
I0428 19:50:01.765439 26911 net.cpp:134]     with loss weight 1
I0428 19:50:01.765456 26911 net.cpp:139] Memory required for data: 1345284
I0428 19:50:01.765462 26911 net.cpp:200] loss needs backward computation.
I0428 19:50:01.765467 26911 net.cpp:200] relu2 needs backward computation.
I0428 19:50:01.765472 26911 net.cpp:200] ip2 needs backward computation.
I0428 19:50:01.765477 26911 net.cpp:200] relu1 needs backward computation.
I0428 19:50:01.765482 26911 net.cpp:200] ip1 needs backward computation.
I0428 19:50:01.765501 26911 net.cpp:200] pool1 needs backward computation.
I0428 19:50:01.765506 26911 net.cpp:200] conv1 needs backward computation.
I0428 19:50:01.765511 26911 net.cpp:200] pool0 needs backward computation.
I0428 19:50:01.765514 26911 net.cpp:200] conv0 needs backward computation.
I0428 19:50:01.765521 26911 net.cpp:202] mnist does not need backward computation.
I0428 19:50:01.765524 26911 net.cpp:244] This network produces output loss
I0428 19:50:01.765538 26911 net.cpp:257] Network initialization done.
I0428 19:50:01.766038 26911 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test592.prototxt
I0428 19:50:01.766093 26911 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:01.766243 26911 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:50:01.766350 26911 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:01.766420 26911 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:01.766436 26911 net.cpp:86] Creating Layer mnist
I0428 19:50:01.766443 26911 net.cpp:382] mnist -> data
I0428 19:50:01.766456 26911 net.cpp:382] mnist -> label
I0428 19:50:01.766571 26911 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:01.769361 26911 net.cpp:124] Setting up mnist
I0428 19:50:01.769376 26911 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:01.769381 26911 net.cpp:131] Top shape: 100 (100)
I0428 19:50:01.769383 26911 net.cpp:139] Memory required for data: 314000
I0428 19:50:01.769387 26911 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:01.769392 26911 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:01.769395 26911 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:01.769400 26911 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:01.769423 26911 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:01.769490 26911 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:01.769526 26911 net.cpp:131] Top shape: 100 (100)
I0428 19:50:01.769532 26911 net.cpp:131] Top shape: 100 (100)
I0428 19:50:01.769536 26911 net.cpp:139] Memory required for data: 314800
I0428 19:50:01.769541 26911 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:01.769556 26911 net.cpp:86] Creating Layer conv0
I0428 19:50:01.769562 26911 net.cpp:408] conv0 <- data
I0428 19:50:01.769569 26911 net.cpp:382] conv0 -> conv0
I0428 19:50:01.771715 26911 net.cpp:124] Setting up conv0
I0428 19:50:01.771739 26911 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:01.771742 26911 net.cpp:139] Memory required for data: 1466800
I0428 19:50:01.771754 26911 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:01.771764 26911 net.cpp:86] Creating Layer pool0
I0428 19:50:01.771770 26911 net.cpp:408] pool0 <- conv0
I0428 19:50:01.771778 26911 net.cpp:382] pool0 -> pool0
I0428 19:50:01.771827 26911 net.cpp:124] Setting up pool0
I0428 19:50:01.771838 26911 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:01.771842 26911 net.cpp:139] Memory required for data: 1754800
I0428 19:50:01.771847 26911 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:01.771862 26911 net.cpp:86] Creating Layer conv1
I0428 19:50:01.771867 26911 net.cpp:408] conv1 <- pool0
I0428 19:50:01.771878 26911 net.cpp:382] conv1 -> conv1
I0428 19:50:01.774519 26911 net.cpp:124] Setting up conv1
I0428 19:50:01.774531 26911 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:01.774535 26911 net.cpp:139] Memory required for data: 2010800
I0428 19:50:01.774545 26911 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:01.774554 26911 net.cpp:86] Creating Layer pool1
I0428 19:50:01.774559 26911 net.cpp:408] pool1 <- conv1
I0428 19:50:01.774566 26911 net.cpp:382] pool1 -> pool1
I0428 19:50:01.774619 26911 net.cpp:124] Setting up pool1
I0428 19:50:01.774631 26911 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:01.774636 26911 net.cpp:139] Memory required for data: 2074800
I0428 19:50:01.774641 26911 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:01.774649 26911 net.cpp:86] Creating Layer ip1
I0428 19:50:01.774653 26911 net.cpp:408] ip1 <- pool1
I0428 19:50:01.774677 26911 net.cpp:382] ip1 -> ip1
I0428 19:50:01.774858 26911 net.cpp:124] Setting up ip1
I0428 19:50:01.774868 26911 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:01.774873 26911 net.cpp:139] Memory required for data: 2084800
I0428 19:50:01.774890 26911 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:01.774901 26911 net.cpp:86] Creating Layer relu1
I0428 19:50:01.774911 26911 net.cpp:408] relu1 <- ip1
I0428 19:50:01.774917 26911 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:01.775177 26911 net.cpp:124] Setting up relu1
I0428 19:50:01.775188 26911 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:01.775209 26911 net.cpp:139] Memory required for data: 2094800
I0428 19:50:01.775214 26911 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:01.775229 26911 net.cpp:86] Creating Layer ip2
I0428 19:50:01.775235 26911 net.cpp:408] ip2 <- ip1
I0428 19:50:01.775243 26911 net.cpp:382] ip2 -> ip2
I0428 19:50:01.775466 26911 net.cpp:124] Setting up ip2
I0428 19:50:01.775480 26911 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:01.775485 26911 net.cpp:139] Memory required for data: 2098800
I0428 19:50:01.775494 26911 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:01.775501 26911 net.cpp:86] Creating Layer relu2
I0428 19:50:01.775507 26911 net.cpp:408] relu2 <- ip2
I0428 19:50:01.775530 26911 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:01.775861 26911 net.cpp:124] Setting up relu2
I0428 19:50:01.775872 26911 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:01.775877 26911 net.cpp:139] Memory required for data: 2102800
I0428 19:50:01.775882 26911 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:50:01.775892 26911 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:50:01.775902 26911 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:50:01.775908 26911 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:50:01.775928 26911 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:50:01.775975 26911 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:50:01.775985 26911 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:01.775991 26911 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:01.775995 26911 net.cpp:139] Memory required for data: 2110800
I0428 19:50:01.776000 26911 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:01.776007 26911 net.cpp:86] Creating Layer accuracy
I0428 19:50:01.776023 26911 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:50:01.776029 26911 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:01.776037 26911 net.cpp:382] accuracy -> accuracy
I0428 19:50:01.776046 26911 net.cpp:124] Setting up accuracy
I0428 19:50:01.776052 26911 net.cpp:131] Top shape: (1)
I0428 19:50:01.776057 26911 net.cpp:139] Memory required for data: 2110804
I0428 19:50:01.776062 26911 layer_factory.hpp:77] Creating layer loss
I0428 19:50:01.776067 26911 net.cpp:86] Creating Layer loss
I0428 19:50:01.776072 26911 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:50:01.776078 26911 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:01.776085 26911 net.cpp:382] loss -> loss
I0428 19:50:01.776093 26911 layer_factory.hpp:77] Creating layer loss
I0428 19:50:01.776451 26911 net.cpp:124] Setting up loss
I0428 19:50:01.776466 26911 net.cpp:131] Top shape: (1)
I0428 19:50:01.776470 26911 net.cpp:134]     with loss weight 1
I0428 19:50:01.776485 26911 net.cpp:139] Memory required for data: 2110808
I0428 19:50:01.776496 26911 net.cpp:200] loss needs backward computation.
I0428 19:50:01.776511 26911 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:01.776517 26911 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:50:01.776522 26911 net.cpp:200] relu2 needs backward computation.
I0428 19:50:01.776526 26911 net.cpp:200] ip2 needs backward computation.
I0428 19:50:01.776531 26911 net.cpp:200] relu1 needs backward computation.
I0428 19:50:01.776536 26911 net.cpp:200] ip1 needs backward computation.
I0428 19:50:01.776541 26911 net.cpp:200] pool1 needs backward computation.
I0428 19:50:01.776546 26911 net.cpp:200] conv1 needs backward computation.
I0428 19:50:01.776551 26911 net.cpp:200] pool0 needs backward computation.
I0428 19:50:01.776571 26911 net.cpp:200] conv0 needs backward computation.
I0428 19:50:01.776577 26911 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:01.776583 26911 net.cpp:202] mnist does not need backward computation.
I0428 19:50:01.776594 26911 net.cpp:244] This network produces output accuracy
I0428 19:50:01.776599 26911 net.cpp:244] This network produces output loss
I0428 19:50:01.776638 26911 net.cpp:257] Network initialization done.
I0428 19:50:01.776706 26911 solver.cpp:56] Solver scaffolding done.
I0428 19:50:01.777107 26911 caffe.cpp:248] Starting Optimization
I0428 19:50:01.777117 26911 solver.cpp:273] Solving LeNet
I0428 19:50:01.777120 26911 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:01.777315 26911 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:01.781631 26911 blocking_queue.cpp:49] Waiting for data
I0428 19:50:01.836786 26918 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:01.837515 26911 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 19:50:01.837544 26911 solver.cpp:398]     Test net output #1: loss = 2.31267 (* 1 = 2.31267 loss)
I0428 19:50:01.839560 26911 solver.cpp:219] Iteration 0 (3.64747 iter/s, 0.0624128s/100 iters), loss = 2.29779
I0428 19:50:01.839583 26911 solver.cpp:238]     Train net output #0: loss = 2.29779 (* 1 = 2.29779 loss)
I0428 19:50:01.839603 26911 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:01.907239 26911 solver.cpp:219] Iteration 100 (1478.34 iter/s, 0.0676436s/100 iters), loss = 0.598633
I0428 19:50:01.907263 26911 solver.cpp:238]     Train net output #0: loss = 0.598633 (* 1 = 0.598633 loss)
I0428 19:50:01.907270 26911 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:01.975424 26911 solver.cpp:219] Iteration 200 (1467.63 iter/s, 0.068137s/100 iters), loss = 0.527102
I0428 19:50:01.975461 26911 solver.cpp:238]     Train net output #0: loss = 0.527103 (* 1 = 0.527103 loss)
I0428 19:50:01.975469 26911 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:02.048748 26911 solver.cpp:219] Iteration 300 (1364.68 iter/s, 0.0732774s/100 iters), loss = 0.570048
I0428 19:50:02.048784 26911 solver.cpp:238]     Train net output #0: loss = 0.570048 (* 1 = 0.570048 loss)
I0428 19:50:02.048799 26911 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:02.126083 26911 solver.cpp:219] Iteration 400 (1293.8 iter/s, 0.0772915s/100 iters), loss = 0.35303
I0428 19:50:02.126109 26911 solver.cpp:238]     Train net output #0: loss = 0.35303 (* 1 = 0.35303 loss)
I0428 19:50:02.126117 26911 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:02.194330 26911 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:02.247133 26918 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:02.247740 26911 solver.cpp:398]     Test net output #0: accuracy = 0.8493
I0428 19:50:02.247777 26911 solver.cpp:398]     Test net output #1: loss = 0.407158 (* 1 = 0.407158 loss)
I0428 19:50:02.248906 26911 solver.cpp:219] Iteration 500 (814.535 iter/s, 0.122769s/100 iters), loss = 0.242649
I0428 19:50:02.248934 26911 solver.cpp:238]     Train net output #0: loss = 0.242649 (* 1 = 0.242649 loss)
I0428 19:50:02.248944 26911 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:02.330556 26911 solver.cpp:219] Iteration 600 (1225.28 iter/s, 0.0816138s/100 iters), loss = 0.32377
I0428 19:50:02.330581 26911 solver.cpp:238]     Train net output #0: loss = 0.32377 (* 1 = 0.32377 loss)
I0428 19:50:02.330595 26911 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:02.400367 26911 solver.cpp:219] Iteration 700 (1433.11 iter/s, 0.0697784s/100 iters), loss = 0.600011
I0428 19:50:02.400393 26911 solver.cpp:238]     Train net output #0: loss = 0.600011 (* 1 = 0.600011 loss)
I0428 19:50:02.400420 26911 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:02.468590 26911 solver.cpp:219] Iteration 800 (1466.51 iter/s, 0.0681891s/100 iters), loss = 0.405169
I0428 19:50:02.468616 26911 solver.cpp:238]     Train net output #0: loss = 0.40517 (* 1 = 0.40517 loss)
I0428 19:50:02.468626 26911 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:02.536268 26911 solver.cpp:219] Iteration 900 (1478.32 iter/s, 0.0676444s/100 iters), loss = 0.492654
I0428 19:50:02.536293 26911 solver.cpp:238]     Train net output #0: loss = 0.492654 (* 1 = 0.492654 loss)
I0428 19:50:02.536303 26911 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:02.565462 26917 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:02.616349 26911 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:02.617198 26911 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:02.617833 26911 solver.cpp:311] Iteration 1000, loss = 0.497922
I0428 19:50:02.617852 26911 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:02.684795 26918 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:02.685360 26911 solver.cpp:398]     Test net output #0: accuracy = 0.8704
I0428 19:50:02.685384 26911 solver.cpp:398]     Test net output #1: loss = 0.34156 (* 1 = 0.34156 loss)
I0428 19:50:02.685390 26911 solver.cpp:316] Optimization Done.
I0428 19:50:02.685395 26911 caffe.cpp:259] Optimization Done.
