I0428 19:42:46.439049 25188 caffe.cpp:218] Using GPUs 0
I0428 19:42:46.477020 25188 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:47.009390 25188 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test403.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:47.009526 25188 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test403.prototxt
I0428 19:42:47.009937 25188 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:47.009955 25188 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:47.010057 25188 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:47.010131 25188 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:47.010233 25188 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:47.010257 25188 net.cpp:86] Creating Layer mnist
I0428 19:42:47.010265 25188 net.cpp:382] mnist -> data
I0428 19:42:47.010288 25188 net.cpp:382] mnist -> label
I0428 19:42:47.011384 25188 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:47.014052 25188 net.cpp:124] Setting up mnist
I0428 19:42:47.014071 25188 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:47.014077 25188 net.cpp:131] Top shape: 64 (64)
I0428 19:42:47.014081 25188 net.cpp:139] Memory required for data: 200960
I0428 19:42:47.014098 25188 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:47.014114 25188 net.cpp:86] Creating Layer conv0
I0428 19:42:47.014135 25188 net.cpp:408] conv0 <- data
I0428 19:42:47.014147 25188 net.cpp:382] conv0 -> conv0
I0428 19:42:47.305263 25188 net.cpp:124] Setting up conv0
I0428 19:42:47.305294 25188 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:47.305300 25188 net.cpp:139] Memory required for data: 495872
I0428 19:42:47.305318 25188 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:47.305333 25188 net.cpp:86] Creating Layer pool0
I0428 19:42:47.305338 25188 net.cpp:408] pool0 <- conv0
I0428 19:42:47.305346 25188 net.cpp:382] pool0 -> pool0
I0428 19:42:47.305402 25188 net.cpp:124] Setting up pool0
I0428 19:42:47.305408 25188 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:47.305411 25188 net.cpp:139] Memory required for data: 569600
I0428 19:42:47.305415 25188 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:47.305428 25188 net.cpp:86] Creating Layer conv1
I0428 19:42:47.305431 25188 net.cpp:408] conv1 <- pool0
I0428 19:42:47.305438 25188 net.cpp:382] conv1 -> conv1
I0428 19:42:47.308537 25188 net.cpp:124] Setting up conv1
I0428 19:42:47.308557 25188 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:47.308560 25188 net.cpp:139] Memory required for data: 979200
I0428 19:42:47.308570 25188 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:47.308580 25188 net.cpp:86] Creating Layer pool1
I0428 19:42:47.308584 25188 net.cpp:408] pool1 <- conv1
I0428 19:42:47.308590 25188 net.cpp:382] pool1 -> pool1
I0428 19:42:47.308635 25188 net.cpp:124] Setting up pool1
I0428 19:42:47.308641 25188 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:47.308645 25188 net.cpp:139] Memory required for data: 1081600
I0428 19:42:47.308648 25188 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:47.308657 25188 net.cpp:86] Creating Layer ip1
I0428 19:42:47.308660 25188 net.cpp:408] ip1 <- pool1
I0428 19:42:47.308666 25188 net.cpp:382] ip1 -> ip1
I0428 19:42:47.308822 25188 net.cpp:124] Setting up ip1
I0428 19:42:47.308831 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.308835 25188 net.cpp:139] Memory required for data: 1084160
I0428 19:42:47.308845 25188 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:47.308851 25188 net.cpp:86] Creating Layer relu1
I0428 19:42:47.308856 25188 net.cpp:408] relu1 <- ip1
I0428 19:42:47.308861 25188 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:47.309057 25188 net.cpp:124] Setting up relu1
I0428 19:42:47.309068 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.309072 25188 net.cpp:139] Memory required for data: 1086720
I0428 19:42:47.309077 25188 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:47.309084 25188 net.cpp:86] Creating Layer ip2
I0428 19:42:47.309088 25188 net.cpp:408] ip2 <- ip1
I0428 19:42:47.309093 25188 net.cpp:382] ip2 -> ip2
I0428 19:42:47.309206 25188 net.cpp:124] Setting up ip2
I0428 19:42:47.309214 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.309218 25188 net.cpp:139] Memory required for data: 1089280
I0428 19:42:47.309224 25188 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:47.309232 25188 net.cpp:86] Creating Layer relu2
I0428 19:42:47.309237 25188 net.cpp:408] relu2 <- ip2
I0428 19:42:47.309240 25188 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:47.310078 25188 net.cpp:124] Setting up relu2
I0428 19:42:47.310094 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.310098 25188 net.cpp:139] Memory required for data: 1091840
I0428 19:42:47.310102 25188 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:47.310111 25188 net.cpp:86] Creating Layer ip3
I0428 19:42:47.310115 25188 net.cpp:408] ip3 <- ip2
I0428 19:42:47.310122 25188 net.cpp:382] ip3 -> ip3
I0428 19:42:47.310238 25188 net.cpp:124] Setting up ip3
I0428 19:42:47.310248 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.310251 25188 net.cpp:139] Memory required for data: 1094400
I0428 19:42:47.310261 25188 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:47.310267 25188 net.cpp:86] Creating Layer relu3
I0428 19:42:47.310271 25188 net.cpp:408] relu3 <- ip3
I0428 19:42:47.310276 25188 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:47.310477 25188 net.cpp:124] Setting up relu3
I0428 19:42:47.310487 25188 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:47.310492 25188 net.cpp:139] Memory required for data: 1096960
I0428 19:42:47.310495 25188 layer_factory.hpp:77] Creating layer loss
I0428 19:42:47.310503 25188 net.cpp:86] Creating Layer loss
I0428 19:42:47.310508 25188 net.cpp:408] loss <- ip3
I0428 19:42:47.310511 25188 net.cpp:408] loss <- label
I0428 19:42:47.310518 25188 net.cpp:382] loss -> loss
I0428 19:42:47.310539 25188 layer_factory.hpp:77] Creating layer loss
I0428 19:42:47.310813 25188 net.cpp:124] Setting up loss
I0428 19:42:47.310824 25188 net.cpp:131] Top shape: (1)
I0428 19:42:47.310828 25188 net.cpp:134]     with loss weight 1
I0428 19:42:47.310845 25188 net.cpp:139] Memory required for data: 1096964
I0428 19:42:47.310848 25188 net.cpp:200] loss needs backward computation.
I0428 19:42:47.310853 25188 net.cpp:200] relu3 needs backward computation.
I0428 19:42:47.310856 25188 net.cpp:200] ip3 needs backward computation.
I0428 19:42:47.310860 25188 net.cpp:200] relu2 needs backward computation.
I0428 19:42:47.310863 25188 net.cpp:200] ip2 needs backward computation.
I0428 19:42:47.310866 25188 net.cpp:200] relu1 needs backward computation.
I0428 19:42:47.310869 25188 net.cpp:200] ip1 needs backward computation.
I0428 19:42:47.310873 25188 net.cpp:200] pool1 needs backward computation.
I0428 19:42:47.310878 25188 net.cpp:200] conv1 needs backward computation.
I0428 19:42:47.310880 25188 net.cpp:200] pool0 needs backward computation.
I0428 19:42:47.310884 25188 net.cpp:200] conv0 needs backward computation.
I0428 19:42:47.310889 25188 net.cpp:202] mnist does not need backward computation.
I0428 19:42:47.310892 25188 net.cpp:244] This network produces output loss
I0428 19:42:47.310902 25188 net.cpp:257] Network initialization done.
I0428 19:42:47.311287 25188 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test403.prototxt
I0428 19:42:47.311321 25188 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:47.311434 25188 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:47.311535 25188 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:47.311589 25188 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:47.311605 25188 net.cpp:86] Creating Layer mnist
I0428 19:42:47.311612 25188 net.cpp:382] mnist -> data
I0428 19:42:47.311621 25188 net.cpp:382] mnist -> label
I0428 19:42:47.311725 25188 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:47.313910 25188 net.cpp:124] Setting up mnist
I0428 19:42:47.313926 25188 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:47.313932 25188 net.cpp:131] Top shape: 100 (100)
I0428 19:42:47.313935 25188 net.cpp:139] Memory required for data: 314000
I0428 19:42:47.313941 25188 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:47.313982 25188 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:47.313987 25188 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:47.313992 25188 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:47.314000 25188 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:47.314062 25188 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:47.314071 25188 net.cpp:131] Top shape: 100 (100)
I0428 19:42:47.314076 25188 net.cpp:131] Top shape: 100 (100)
I0428 19:42:47.314080 25188 net.cpp:139] Memory required for data: 314800
I0428 19:42:47.314083 25188 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:47.314095 25188 net.cpp:86] Creating Layer conv0
I0428 19:42:47.314098 25188 net.cpp:408] conv0 <- data
I0428 19:42:47.314106 25188 net.cpp:382] conv0 -> conv0
I0428 19:42:47.316088 25188 net.cpp:124] Setting up conv0
I0428 19:42:47.316105 25188 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:47.316110 25188 net.cpp:139] Memory required for data: 775600
I0428 19:42:47.316123 25188 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:47.316130 25188 net.cpp:86] Creating Layer pool0
I0428 19:42:47.316135 25188 net.cpp:408] pool0 <- conv0
I0428 19:42:47.316140 25188 net.cpp:382] pool0 -> pool0
I0428 19:42:47.316186 25188 net.cpp:124] Setting up pool0
I0428 19:42:47.316192 25188 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:47.316196 25188 net.cpp:139] Memory required for data: 890800
I0428 19:42:47.316200 25188 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:47.316211 25188 net.cpp:86] Creating Layer conv1
I0428 19:42:47.316215 25188 net.cpp:408] conv1 <- pool0
I0428 19:42:47.316221 25188 net.cpp:382] conv1 -> conv1
I0428 19:42:47.318011 25188 net.cpp:124] Setting up conv1
I0428 19:42:47.318027 25188 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:47.318032 25188 net.cpp:139] Memory required for data: 1530800
I0428 19:42:47.318044 25188 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:47.318053 25188 net.cpp:86] Creating Layer pool1
I0428 19:42:47.318058 25188 net.cpp:408] pool1 <- conv1
I0428 19:42:47.318066 25188 net.cpp:382] pool1 -> pool1
I0428 19:42:47.318111 25188 net.cpp:124] Setting up pool1
I0428 19:42:47.318119 25188 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:47.318130 25188 net.cpp:139] Memory required for data: 1690800
I0428 19:42:47.318132 25188 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:47.318141 25188 net.cpp:86] Creating Layer ip1
I0428 19:42:47.318145 25188 net.cpp:408] ip1 <- pool1
I0428 19:42:47.318150 25188 net.cpp:382] ip1 -> ip1
I0428 19:42:47.318300 25188 net.cpp:124] Setting up ip1
I0428 19:42:47.318308 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.318325 25188 net.cpp:139] Memory required for data: 1694800
I0428 19:42:47.318333 25188 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:47.318343 25188 net.cpp:86] Creating Layer relu1
I0428 19:42:47.318348 25188 net.cpp:408] relu1 <- ip1
I0428 19:42:47.318354 25188 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:47.318550 25188 net.cpp:124] Setting up relu1
I0428 19:42:47.318562 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.318565 25188 net.cpp:139] Memory required for data: 1698800
I0428 19:42:47.318570 25188 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:47.318580 25188 net.cpp:86] Creating Layer ip2
I0428 19:42:47.318584 25188 net.cpp:408] ip2 <- ip1
I0428 19:42:47.318591 25188 net.cpp:382] ip2 -> ip2
I0428 19:42:47.318711 25188 net.cpp:124] Setting up ip2
I0428 19:42:47.318720 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.318724 25188 net.cpp:139] Memory required for data: 1702800
I0428 19:42:47.318732 25188 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:47.318737 25188 net.cpp:86] Creating Layer relu2
I0428 19:42:47.318740 25188 net.cpp:408] relu2 <- ip2
I0428 19:42:47.318753 25188 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:47.318964 25188 net.cpp:124] Setting up relu2
I0428 19:42:47.318974 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.318977 25188 net.cpp:139] Memory required for data: 1706800
I0428 19:42:47.318981 25188 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:47.318987 25188 net.cpp:86] Creating Layer ip3
I0428 19:42:47.318991 25188 net.cpp:408] ip3 <- ip2
I0428 19:42:47.318998 25188 net.cpp:382] ip3 -> ip3
I0428 19:42:47.319139 25188 net.cpp:124] Setting up ip3
I0428 19:42:47.319149 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.319159 25188 net.cpp:139] Memory required for data: 1710800
I0428 19:42:47.319167 25188 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:47.319175 25188 net.cpp:86] Creating Layer relu3
I0428 19:42:47.319178 25188 net.cpp:408] relu3 <- ip3
I0428 19:42:47.319183 25188 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:47.320101 25188 net.cpp:124] Setting up relu3
I0428 19:42:47.320117 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.320122 25188 net.cpp:139] Memory required for data: 1714800
I0428 19:42:47.320125 25188 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:47.320132 25188 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:47.320135 25188 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:47.320143 25188 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:47.320152 25188 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:47.320199 25188 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:47.320204 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.320209 25188 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:47.320212 25188 net.cpp:139] Memory required for data: 1722800
I0428 19:42:47.320216 25188 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:47.320230 25188 net.cpp:86] Creating Layer accuracy
I0428 19:42:47.320235 25188 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:47.320240 25188 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:47.320245 25188 net.cpp:382] accuracy -> accuracy
I0428 19:42:47.320253 25188 net.cpp:124] Setting up accuracy
I0428 19:42:47.320258 25188 net.cpp:131] Top shape: (1)
I0428 19:42:47.320261 25188 net.cpp:139] Memory required for data: 1722804
I0428 19:42:47.320266 25188 layer_factory.hpp:77] Creating layer loss
I0428 19:42:47.320271 25188 net.cpp:86] Creating Layer loss
I0428 19:42:47.320274 25188 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:47.320278 25188 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:47.320284 25188 net.cpp:382] loss -> loss
I0428 19:42:47.320291 25188 layer_factory.hpp:77] Creating layer loss
I0428 19:42:47.320590 25188 net.cpp:124] Setting up loss
I0428 19:42:47.320601 25188 net.cpp:131] Top shape: (1)
I0428 19:42:47.320605 25188 net.cpp:134]     with loss weight 1
I0428 19:42:47.320612 25188 net.cpp:139] Memory required for data: 1722808
I0428 19:42:47.320628 25188 net.cpp:200] loss needs backward computation.
I0428 19:42:47.320632 25188 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:47.320637 25188 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:47.320641 25188 net.cpp:200] relu3 needs backward computation.
I0428 19:42:47.320643 25188 net.cpp:200] ip3 needs backward computation.
I0428 19:42:47.320647 25188 net.cpp:200] relu2 needs backward computation.
I0428 19:42:47.320650 25188 net.cpp:200] ip2 needs backward computation.
I0428 19:42:47.320653 25188 net.cpp:200] relu1 needs backward computation.
I0428 19:42:47.320657 25188 net.cpp:200] ip1 needs backward computation.
I0428 19:42:47.320660 25188 net.cpp:200] pool1 needs backward computation.
I0428 19:42:47.320663 25188 net.cpp:200] conv1 needs backward computation.
I0428 19:42:47.320667 25188 net.cpp:200] pool0 needs backward computation.
I0428 19:42:47.320670 25188 net.cpp:200] conv0 needs backward computation.
I0428 19:42:47.320674 25188 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:47.320679 25188 net.cpp:202] mnist does not need backward computation.
I0428 19:42:47.320683 25188 net.cpp:244] This network produces output accuracy
I0428 19:42:47.320686 25188 net.cpp:244] This network produces output loss
I0428 19:42:47.320699 25188 net.cpp:257] Network initialization done.
I0428 19:42:47.320749 25188 solver.cpp:56] Solver scaffolding done.
I0428 19:42:47.321182 25188 caffe.cpp:248] Starting Optimization
I0428 19:42:47.321190 25188 solver.cpp:273] Solving LeNet
I0428 19:42:47.321195 25188 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:47.321521 25188 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:47.325872 25188 blocking_queue.cpp:49] Waiting for data
I0428 19:42:47.394162 25195 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:47.394665 25188 solver.cpp:398]     Test net output #0: accuracy = 0.1246
I0428 19:42:47.394690 25188 solver.cpp:398]     Test net output #1: loss = 2.31481 (* 1 = 2.31481 loss)
I0428 19:42:47.396086 25188 solver.cpp:219] Iteration 0 (-4.12031e-31 iter/s, 0.0748464s/100 iters), loss = 2.31081
I0428 19:42:47.396118 25188 solver.cpp:238]     Train net output #0: loss = 2.31081 (* 1 = 2.31081 loss)
I0428 19:42:47.396133 25188 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:47.484740 25188 solver.cpp:219] Iteration 100 (1128.57 iter/s, 0.0886077s/100 iters), loss = 1.2624
I0428 19:42:47.484772 25188 solver.cpp:238]     Train net output #0: loss = 1.2624 (* 1 = 1.2624 loss)
I0428 19:42:47.484781 25188 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:47.573355 25188 solver.cpp:219] Iteration 200 (1129.01 iter/s, 0.0885729s/100 iters), loss = 0.754138
I0428 19:42:47.573387 25188 solver.cpp:238]     Train net output #0: loss = 0.754138 (* 1 = 0.754138 loss)
I0428 19:42:47.573395 25188 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:47.661821 25188 solver.cpp:219] Iteration 300 (1130.91 iter/s, 0.0884244s/100 iters), loss = 0.527032
I0428 19:42:47.661854 25188 solver.cpp:238]     Train net output #0: loss = 0.527032 (* 1 = 0.527032 loss)
I0428 19:42:47.661861 25188 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:47.750167 25188 solver.cpp:219] Iteration 400 (1132.44 iter/s, 0.0883046s/100 iters), loss = 0.391447
I0428 19:42:47.750200 25188 solver.cpp:238]     Train net output #0: loss = 0.391447 (* 1 = 0.391447 loss)
I0428 19:42:47.750207 25188 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:47.837041 25188 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:47.889479 25195 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:47.889904 25188 solver.cpp:398]     Test net output #0: accuracy = 0.922
I0428 19:42:47.889924 25188 solver.cpp:398]     Test net output #1: loss = 0.259851 (* 1 = 0.259851 loss)
I0428 19:42:47.890771 25188 solver.cpp:219] Iteration 500 (711.434 iter/s, 0.140561s/100 iters), loss = 0.257489
I0428 19:42:47.890795 25188 solver.cpp:238]     Train net output #0: loss = 0.257489 (* 1 = 0.257489 loss)
I0428 19:42:47.890836 25188 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:47.983515 25188 solver.cpp:219] Iteration 600 (1078.67 iter/s, 0.0927068s/100 iters), loss = 0.137878
I0428 19:42:47.983538 25188 solver.cpp:238]     Train net output #0: loss = 0.137878 (* 1 = 0.137878 loss)
I0428 19:42:47.983559 25188 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:48.067955 25188 solver.cpp:219] Iteration 700 (1184.76 iter/s, 0.0844053s/100 iters), loss = 0.348768
I0428 19:42:48.067982 25188 solver.cpp:238]     Train net output #0: loss = 0.348768 (* 1 = 0.348768 loss)
I0428 19:42:48.067991 25188 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:48.150317 25188 solver.cpp:219] Iteration 800 (1214.74 iter/s, 0.0823224s/100 iters), loss = 0.449964
I0428 19:42:48.150342 25188 solver.cpp:238]     Train net output #0: loss = 0.449964 (* 1 = 0.449964 loss)
I0428 19:42:48.150351 25188 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:48.232985 25188 solver.cpp:219] Iteration 900 (1210.19 iter/s, 0.0826317s/100 iters), loss = 0.257457
I0428 19:42:48.233011 25188 solver.cpp:238]     Train net output #0: loss = 0.257457 (* 1 = 0.257457 loss)
I0428 19:42:48.233016 25188 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:48.260541 25194 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:48.316445 25188 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:48.317318 25188 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:48.317826 25188 solver.cpp:311] Iteration 1000, loss = 0.148327
I0428 19:42:48.317843 25188 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:48.385558 25195 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:48.386078 25188 solver.cpp:398]     Test net output #0: accuracy = 0.9595
I0428 19:42:48.386101 25188 solver.cpp:398]     Test net output #1: loss = 0.127986 (* 1 = 0.127986 loss)
I0428 19:42:48.386106 25188 solver.cpp:316] Optimization Done.
I0428 19:42:48.386111 25188 caffe.cpp:259] Optimization Done.
