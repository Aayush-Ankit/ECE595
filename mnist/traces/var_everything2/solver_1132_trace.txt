I0428 20:10:20.252771 31817 caffe.cpp:218] Using GPUs 0
I0428 20:10:20.289149 31817 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:20.743854 31817 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1132.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:20.743988 31817 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1132.prototxt
I0428 20:10:20.744289 31817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:20.744316 31817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:20.744380 31817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:10:20.744436 31817 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:20.744515 31817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:20.744552 31817 net.cpp:86] Creating Layer mnist
I0428 20:10:20.744560 31817 net.cpp:382] mnist -> data
I0428 20:10:20.744582 31817 net.cpp:382] mnist -> label
I0428 20:10:20.745604 31817 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:20.747822 31817 net.cpp:124] Setting up mnist
I0428 20:10:20.747849 31817 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:20.747856 31817 net.cpp:131] Top shape: 64 (64)
I0428 20:10:20.747859 31817 net.cpp:139] Memory required for data: 200960
I0428 20:10:20.747865 31817 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:20.747880 31817 net.cpp:86] Creating Layer conv0
I0428 20:10:20.747885 31817 net.cpp:408] conv0 <- data
I0428 20:10:20.747895 31817 net.cpp:382] conv0 -> conv0
I0428 20:10:20.978174 31817 net.cpp:124] Setting up conv0
I0428 20:10:20.978200 31817 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:20.978204 31817 net.cpp:139] Memory required for data: 3887360
I0428 20:10:20.978219 31817 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:20.978230 31817 net.cpp:86] Creating Layer pool0
I0428 20:10:20.978235 31817 net.cpp:408] pool0 <- conv0
I0428 20:10:20.978240 31817 net.cpp:382] pool0 -> pool0
I0428 20:10:20.978302 31817 net.cpp:124] Setting up pool0
I0428 20:10:20.978308 31817 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:20.978327 31817 net.cpp:139] Memory required for data: 4808960
I0428 20:10:20.978329 31817 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:20.978340 31817 net.cpp:86] Creating Layer conv1
I0428 20:10:20.978343 31817 net.cpp:408] conv1 <- pool0
I0428 20:10:20.978349 31817 net.cpp:382] conv1 -> conv1
I0428 20:10:20.980432 31817 net.cpp:124] Setting up conv1
I0428 20:10:20.980463 31817 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:20.980466 31817 net.cpp:139] Memory required for data: 5628160
I0428 20:10:20.980489 31817 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:20.980497 31817 net.cpp:86] Creating Layer pool1
I0428 20:10:20.980500 31817 net.cpp:408] pool1 <- conv1
I0428 20:10:20.980505 31817 net.cpp:382] pool1 -> pool1
I0428 20:10:20.980577 31817 net.cpp:124] Setting up pool1
I0428 20:10:20.980583 31817 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:20.980587 31817 net.cpp:139] Memory required for data: 5832960
I0428 20:10:20.980589 31817 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:20.980595 31817 net.cpp:86] Creating Layer ip1
I0428 20:10:20.980598 31817 net.cpp:408] ip1 <- pool1
I0428 20:10:20.980603 31817 net.cpp:382] ip1 -> ip1
I0428 20:10:20.981704 31817 net.cpp:124] Setting up ip1
I0428 20:10:20.981734 31817 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:20.981737 31817 net.cpp:139] Memory required for data: 5835520
I0428 20:10:20.981745 31817 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:20.981752 31817 net.cpp:86] Creating Layer relu1
I0428 20:10:20.981756 31817 net.cpp:408] relu1 <- ip1
I0428 20:10:20.981761 31817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:20.981945 31817 net.cpp:124] Setting up relu1
I0428 20:10:20.981955 31817 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:20.981957 31817 net.cpp:139] Memory required for data: 5838080
I0428 20:10:20.981961 31817 layer_factory.hpp:77] Creating layer loss
I0428 20:10:20.981966 31817 net.cpp:86] Creating Layer loss
I0428 20:10:20.981969 31817 net.cpp:408] loss <- ip1
I0428 20:10:20.981973 31817 net.cpp:408] loss <- label
I0428 20:10:20.981979 31817 net.cpp:382] loss -> loss
I0428 20:10:20.981994 31817 layer_factory.hpp:77] Creating layer loss
I0428 20:10:20.982928 31817 net.cpp:124] Setting up loss
I0428 20:10:20.982957 31817 net.cpp:131] Top shape: (1)
I0428 20:10:20.982976 31817 net.cpp:134]     with loss weight 1
I0428 20:10:20.983006 31817 net.cpp:139] Memory required for data: 5838084
I0428 20:10:20.983011 31817 net.cpp:200] loss needs backward computation.
I0428 20:10:20.983014 31817 net.cpp:200] relu1 needs backward computation.
I0428 20:10:20.983017 31817 net.cpp:200] ip1 needs backward computation.
I0428 20:10:20.983031 31817 net.cpp:200] pool1 needs backward computation.
I0428 20:10:20.983036 31817 net.cpp:200] conv1 needs backward computation.
I0428 20:10:20.983038 31817 net.cpp:200] pool0 needs backward computation.
I0428 20:10:20.983042 31817 net.cpp:200] conv0 needs backward computation.
I0428 20:10:20.983045 31817 net.cpp:202] mnist does not need backward computation.
I0428 20:10:20.983048 31817 net.cpp:244] This network produces output loss
I0428 20:10:20.983057 31817 net.cpp:257] Network initialization done.
I0428 20:10:20.983352 31817 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1132.prototxt
I0428 20:10:20.983377 31817 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:20.983481 31817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:10:20.983551 31817 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:20.983623 31817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:20.983635 31817 net.cpp:86] Creating Layer mnist
I0428 20:10:20.983640 31817 net.cpp:382] mnist -> data
I0428 20:10:20.983647 31817 net.cpp:382] mnist -> label
I0428 20:10:20.983727 31817 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:20.985805 31817 net.cpp:124] Setting up mnist
I0428 20:10:20.985833 31817 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:20.985841 31817 net.cpp:131] Top shape: 100 (100)
I0428 20:10:20.985843 31817 net.cpp:139] Memory required for data: 314000
I0428 20:10:20.985847 31817 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:20.985854 31817 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:20.985857 31817 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:20.985862 31817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:20.985869 31817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:20.985915 31817 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:20.985921 31817 net.cpp:131] Top shape: 100 (100)
I0428 20:10:20.985924 31817 net.cpp:131] Top shape: 100 (100)
I0428 20:10:20.985927 31817 net.cpp:139] Memory required for data: 314800
I0428 20:10:20.985930 31817 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:20.985939 31817 net.cpp:86] Creating Layer conv0
I0428 20:10:20.985942 31817 net.cpp:408] conv0 <- data
I0428 20:10:20.985947 31817 net.cpp:382] conv0 -> conv0
I0428 20:10:20.986917 31817 net.cpp:124] Setting up conv0
I0428 20:10:20.986929 31817 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:20.986932 31817 net.cpp:139] Memory required for data: 6074800
I0428 20:10:20.986941 31817 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:20.986963 31817 net.cpp:86] Creating Layer pool0
I0428 20:10:20.986966 31817 net.cpp:408] pool0 <- conv0
I0428 20:10:20.986971 31817 net.cpp:382] pool0 -> pool0
I0428 20:10:20.987006 31817 net.cpp:124] Setting up pool0
I0428 20:10:20.987011 31817 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:20.987015 31817 net.cpp:139] Memory required for data: 7514800
I0428 20:10:20.987017 31817 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:20.987025 31817 net.cpp:86] Creating Layer conv1
I0428 20:10:20.987028 31817 net.cpp:408] conv1 <- pool0
I0428 20:10:20.987033 31817 net.cpp:382] conv1 -> conv1
I0428 20:10:20.988682 31817 net.cpp:124] Setting up conv1
I0428 20:10:20.988694 31817 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:20.988698 31817 net.cpp:139] Memory required for data: 8794800
I0428 20:10:20.988706 31817 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:20.988729 31817 net.cpp:86] Creating Layer pool1
I0428 20:10:20.988742 31817 net.cpp:408] pool1 <- conv1
I0428 20:10:20.988749 31817 net.cpp:382] pool1 -> pool1
I0428 20:10:20.988785 31817 net.cpp:124] Setting up pool1
I0428 20:10:20.988790 31817 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:20.988793 31817 net.cpp:139] Memory required for data: 9114800
I0428 20:10:20.988796 31817 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:20.988802 31817 net.cpp:86] Creating Layer ip1
I0428 20:10:20.988806 31817 net.cpp:408] ip1 <- pool1
I0428 20:10:20.988816 31817 net.cpp:382] ip1 -> ip1
I0428 20:10:20.989043 31817 net.cpp:124] Setting up ip1
I0428 20:10:20.989053 31817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:20.989058 31817 net.cpp:139] Memory required for data: 9118800
I0428 20:10:20.989065 31817 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:20.989071 31817 net.cpp:86] Creating Layer relu1
I0428 20:10:20.989075 31817 net.cpp:408] relu1 <- ip1
I0428 20:10:20.989080 31817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:20.989933 31817 net.cpp:124] Setting up relu1
I0428 20:10:20.989946 31817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:20.989949 31817 net.cpp:139] Memory required for data: 9122800
I0428 20:10:20.989953 31817 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:10:20.989961 31817 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:10:20.989964 31817 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:10:20.989970 31817 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:10:20.989977 31817 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:10:20.990036 31817 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:10:20.990042 31817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:20.990046 31817 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:20.990049 31817 net.cpp:139] Memory required for data: 9130800
I0428 20:10:20.990052 31817 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:20.990057 31817 net.cpp:86] Creating Layer accuracy
I0428 20:10:20.990061 31817 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:10:20.990066 31817 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:20.990069 31817 net.cpp:382] accuracy -> accuracy
I0428 20:10:20.990077 31817 net.cpp:124] Setting up accuracy
I0428 20:10:20.990082 31817 net.cpp:131] Top shape: (1)
I0428 20:10:20.990084 31817 net.cpp:139] Memory required for data: 9130804
I0428 20:10:20.990087 31817 layer_factory.hpp:77] Creating layer loss
I0428 20:10:20.990092 31817 net.cpp:86] Creating Layer loss
I0428 20:10:20.990109 31817 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:10:20.990113 31817 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:20.990118 31817 net.cpp:382] loss -> loss
I0428 20:10:20.990123 31817 layer_factory.hpp:77] Creating layer loss
I0428 20:10:20.990355 31817 net.cpp:124] Setting up loss
I0428 20:10:20.990365 31817 net.cpp:131] Top shape: (1)
I0428 20:10:20.990368 31817 net.cpp:134]     with loss weight 1
I0428 20:10:20.990375 31817 net.cpp:139] Memory required for data: 9130808
I0428 20:10:20.990377 31817 net.cpp:200] loss needs backward computation.
I0428 20:10:20.990381 31817 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:20.990386 31817 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:10:20.990388 31817 net.cpp:200] relu1 needs backward computation.
I0428 20:10:20.990391 31817 net.cpp:200] ip1 needs backward computation.
I0428 20:10:20.990394 31817 net.cpp:200] pool1 needs backward computation.
I0428 20:10:20.990404 31817 net.cpp:200] conv1 needs backward computation.
I0428 20:10:20.990407 31817 net.cpp:200] pool0 needs backward computation.
I0428 20:10:20.990411 31817 net.cpp:200] conv0 needs backward computation.
I0428 20:10:20.990413 31817 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:20.990417 31817 net.cpp:202] mnist does not need backward computation.
I0428 20:10:20.990420 31817 net.cpp:244] This network produces output accuracy
I0428 20:10:20.990423 31817 net.cpp:244] This network produces output loss
I0428 20:10:20.990442 31817 net.cpp:257] Network initialization done.
I0428 20:10:20.990474 31817 solver.cpp:56] Solver scaffolding done.
I0428 20:10:20.990698 31817 caffe.cpp:248] Starting Optimization
I0428 20:10:20.990705 31817 solver.cpp:273] Solving LeNet
I0428 20:10:20.990707 31817 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:20.991439 31817 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:20.997225 31817 blocking_queue.cpp:49] Waiting for data
I0428 20:10:21.066129 31824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:21.066735 31817 solver.cpp:398]     Test net output #0: accuracy = 0.1199
I0428 20:10:21.066752 31817 solver.cpp:398]     Test net output #1: loss = 2.32823 (* 1 = 2.32823 loss)
I0428 20:10:21.070307 31817 solver.cpp:219] Iteration 0 (0 iter/s, 0.079572s/100 iters), loss = 2.33788
I0428 20:10:21.070328 31817 solver.cpp:238]     Train net output #0: loss = 2.33788 (* 1 = 2.33788 loss)
I0428 20:10:21.070355 31817 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:21.178609 31817 solver.cpp:219] Iteration 100 (923.638 iter/s, 0.108268s/100 iters), loss = 0.293471
I0428 20:10:21.178637 31817 solver.cpp:238]     Train net output #0: loss = 0.293471 (* 1 = 0.293471 loss)
I0428 20:10:21.178643 31817 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:21.286008 31817 solver.cpp:219] Iteration 200 (931.435 iter/s, 0.107361s/100 iters), loss = 0.148066
I0428 20:10:21.286033 31817 solver.cpp:238]     Train net output #0: loss = 0.148066 (* 1 = 0.148066 loss)
I0428 20:10:21.286039 31817 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:21.408869 31817 solver.cpp:219] Iteration 300 (814.196 iter/s, 0.122821s/100 iters), loss = 0.174096
I0428 20:10:21.408915 31817 solver.cpp:238]     Train net output #0: loss = 0.174096 (* 1 = 0.174096 loss)
I0428 20:10:21.408933 31817 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:21.530257 31817 solver.cpp:219] Iteration 400 (824.194 iter/s, 0.121331s/100 iters), loss = 0.0634107
I0428 20:10:21.530308 31817 solver.cpp:238]     Train net output #0: loss = 0.0634107 (* 1 = 0.0634107 loss)
I0428 20:10:21.530325 31817 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:21.650581 31817 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:21.709591 31824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:21.710932 31817 solver.cpp:398]     Test net output #0: accuracy = 0.9701
I0428 20:10:21.710958 31817 solver.cpp:398]     Test net output #1: loss = 0.106135 (* 1 = 0.106135 loss)
I0428 20:10:21.712116 31817 solver.cpp:219] Iteration 500 (550.065 iter/s, 0.181797s/100 iters), loss = 0.152868
I0428 20:10:21.712148 31817 solver.cpp:238]     Train net output #0: loss = 0.152868 (* 1 = 0.152868 loss)
I0428 20:10:21.712157 31817 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:21.823712 31817 solver.cpp:219] Iteration 600 (896.431 iter/s, 0.111554s/100 iters), loss = 0.0960921
I0428 20:10:21.823745 31817 solver.cpp:238]     Train net output #0: loss = 0.0960921 (* 1 = 0.0960921 loss)
I0428 20:10:21.823752 31817 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:21.933894 31817 solver.cpp:219] Iteration 700 (907.94 iter/s, 0.110139s/100 iters), loss = 0.123984
I0428 20:10:21.933938 31817 solver.cpp:238]     Train net output #0: loss = 0.123984 (* 1 = 0.123984 loss)
I0428 20:10:21.933946 31817 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:22.046273 31817 solver.cpp:219] Iteration 800 (890.18 iter/s, 0.112337s/100 iters), loss = 0.2233
I0428 20:10:22.046317 31817 solver.cpp:238]     Train net output #0: loss = 0.2233 (* 1 = 0.2233 loss)
I0428 20:10:22.046325 31817 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:22.158437 31817 solver.cpp:219] Iteration 900 (891.895 iter/s, 0.112121s/100 iters), loss = 0.143727
I0428 20:10:22.158480 31817 solver.cpp:238]     Train net output #0: loss = 0.143727 (* 1 = 0.143727 loss)
I0428 20:10:22.158488 31817 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:22.196066 31823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:22.269836 31817 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:22.271276 31817 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:22.272352 31817 solver.cpp:311] Iteration 1000, loss = 0.0965378
I0428 20:10:22.272388 31817 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:22.348078 31824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:22.348752 31817 solver.cpp:398]     Test net output #0: accuracy = 0.9758
I0428 20:10:22.348793 31817 solver.cpp:398]     Test net output #1: loss = 0.0753622 (* 1 = 0.0753622 loss)
I0428 20:10:22.348801 31817 solver.cpp:316] Optimization Done.
I0428 20:10:22.348806 31817 caffe.cpp:259] Optimization Done.
