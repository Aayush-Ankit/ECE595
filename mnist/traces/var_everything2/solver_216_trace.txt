I0428 19:35:01.102880 23433 caffe.cpp:218] Using GPUs 0
I0428 19:35:01.143537 23433 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:01.662940 23433 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test216.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:01.663113 23433 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test216.prototxt
I0428 19:35:01.663486 23433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:01.663509 23433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:01.663612 23433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:01.663722 23433 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:01.663857 23433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:01.663892 23433 net.cpp:86] Creating Layer mnist
I0428 19:35:01.663905 23433 net.cpp:382] mnist -> data
I0428 19:35:01.663936 23433 net.cpp:382] mnist -> label
I0428 19:35:01.665170 23433 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:01.667644 23433 net.cpp:124] Setting up mnist
I0428 19:35:01.667665 23433 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:01.667675 23433 net.cpp:131] Top shape: 64 (64)
I0428 19:35:01.667680 23433 net.cpp:139] Memory required for data: 200960
I0428 19:35:01.667690 23433 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:01.667714 23433 net.cpp:86] Creating Layer conv0
I0428 19:35:01.667726 23433 net.cpp:408] conv0 <- data
I0428 19:35:01.667745 23433 net.cpp:382] conv0 -> conv0
I0428 19:35:01.957222 23433 net.cpp:124] Setting up conv0
I0428 19:35:01.957255 23433 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:01.957262 23433 net.cpp:139] Memory required for data: 7573760
I0428 19:35:01.957285 23433 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:01.957304 23433 net.cpp:86] Creating Layer pool0
I0428 19:35:01.957331 23433 net.cpp:408] pool0 <- conv0
I0428 19:35:01.957343 23433 net.cpp:382] pool0 -> pool0
I0428 19:35:01.957407 23433 net.cpp:124] Setting up pool0
I0428 19:35:01.957418 23433 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:01.957424 23433 net.cpp:139] Memory required for data: 9416960
I0428 19:35:01.957430 23433 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:01.957443 23433 net.cpp:86] Creating Layer ip1
I0428 19:35:01.957454 23433 net.cpp:408] ip1 <- pool0
I0428 19:35:01.957464 23433 net.cpp:382] ip1 -> ip1
I0428 19:35:01.959622 23433 net.cpp:124] Setting up ip1
I0428 19:35:01.959640 23433 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:01.959646 23433 net.cpp:139] Memory required for data: 9423360
I0428 19:35:01.959661 23433 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:01.959672 23433 net.cpp:86] Creating Layer relu1
I0428 19:35:01.959679 23433 net.cpp:408] relu1 <- ip1
I0428 19:35:01.959688 23433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:01.959882 23433 net.cpp:124] Setting up relu1
I0428 19:35:01.959894 23433 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:01.959900 23433 net.cpp:139] Memory required for data: 9429760
I0428 19:35:01.959906 23433 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:01.959918 23433 net.cpp:86] Creating Layer ip2
I0428 19:35:01.959923 23433 net.cpp:408] ip2 <- ip1
I0428 19:35:01.959933 23433 net.cpp:382] ip2 -> ip2
I0428 19:35:01.960047 23433 net.cpp:124] Setting up ip2
I0428 19:35:01.960057 23433 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:01.960062 23433 net.cpp:139] Memory required for data: 9432320
I0428 19:35:01.960075 23433 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:01.960088 23433 net.cpp:86] Creating Layer relu2
I0428 19:35:01.960099 23433 net.cpp:408] relu2 <- ip2
I0428 19:35:01.960108 23433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:01.960929 23433 net.cpp:124] Setting up relu2
I0428 19:35:01.960945 23433 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:01.960952 23433 net.cpp:139] Memory required for data: 9434880
I0428 19:35:01.960958 23433 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:01.960968 23433 net.cpp:86] Creating Layer ip3
I0428 19:35:01.960975 23433 net.cpp:408] ip3 <- ip2
I0428 19:35:01.960985 23433 net.cpp:382] ip3 -> ip3
I0428 19:35:01.961103 23433 net.cpp:124] Setting up ip3
I0428 19:35:01.961114 23433 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:01.961120 23433 net.cpp:139] Memory required for data: 9437440
I0428 19:35:01.961132 23433 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:01.961141 23433 net.cpp:86] Creating Layer relu3
I0428 19:35:01.961148 23433 net.cpp:408] relu3 <- ip3
I0428 19:35:01.961156 23433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:01.961330 23433 net.cpp:124] Setting up relu3
I0428 19:35:01.961341 23433 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:01.961347 23433 net.cpp:139] Memory required for data: 9440000
I0428 19:35:01.961352 23433 layer_factory.hpp:77] Creating layer loss
I0428 19:35:01.961362 23433 net.cpp:86] Creating Layer loss
I0428 19:35:01.961369 23433 net.cpp:408] loss <- ip3
I0428 19:35:01.961376 23433 net.cpp:408] loss <- label
I0428 19:35:01.961386 23433 net.cpp:382] loss -> loss
I0428 19:35:01.961413 23433 layer_factory.hpp:77] Creating layer loss
I0428 19:35:01.961673 23433 net.cpp:124] Setting up loss
I0428 19:35:01.961685 23433 net.cpp:131] Top shape: (1)
I0428 19:35:01.961691 23433 net.cpp:134]     with loss weight 1
I0428 19:35:01.961714 23433 net.cpp:139] Memory required for data: 9440004
I0428 19:35:01.961720 23433 net.cpp:200] loss needs backward computation.
I0428 19:35:01.961727 23433 net.cpp:200] relu3 needs backward computation.
I0428 19:35:01.961733 23433 net.cpp:200] ip3 needs backward computation.
I0428 19:35:01.961740 23433 net.cpp:200] relu2 needs backward computation.
I0428 19:35:01.961745 23433 net.cpp:200] ip2 needs backward computation.
I0428 19:35:01.961750 23433 net.cpp:200] relu1 needs backward computation.
I0428 19:35:01.961756 23433 net.cpp:200] ip1 needs backward computation.
I0428 19:35:01.961774 23433 net.cpp:200] pool0 needs backward computation.
I0428 19:35:01.961781 23433 net.cpp:200] conv0 needs backward computation.
I0428 19:35:01.961788 23433 net.cpp:202] mnist does not need backward computation.
I0428 19:35:01.961793 23433 net.cpp:244] This network produces output loss
I0428 19:35:01.961808 23433 net.cpp:257] Network initialization done.
I0428 19:35:01.962121 23433 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test216.prototxt
I0428 19:35:01.962157 23433 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:01.962255 23433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:01.962358 23433 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:01.962424 23433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:01.962442 23433 net.cpp:86] Creating Layer mnist
I0428 19:35:01.962451 23433 net.cpp:382] mnist -> data
I0428 19:35:01.962465 23433 net.cpp:382] mnist -> label
I0428 19:35:01.962594 23433 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:01.963836 23433 net.cpp:124] Setting up mnist
I0428 19:35:01.963853 23433 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:01.963862 23433 net.cpp:131] Top shape: 100 (100)
I0428 19:35:01.963868 23433 net.cpp:139] Memory required for data: 314000
I0428 19:35:01.963874 23433 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:01.963901 23433 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:01.963907 23433 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:01.963917 23433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:01.963929 23433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:01.964027 23433 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:01.964036 23433 net.cpp:131] Top shape: 100 (100)
I0428 19:35:01.964043 23433 net.cpp:131] Top shape: 100 (100)
I0428 19:35:01.964049 23433 net.cpp:139] Memory required for data: 314800
I0428 19:35:01.964068 23433 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:01.964084 23433 net.cpp:86] Creating Layer conv0
I0428 19:35:01.964092 23433 net.cpp:408] conv0 <- data
I0428 19:35:01.964102 23433 net.cpp:382] conv0 -> conv0
I0428 19:35:01.965731 23433 net.cpp:124] Setting up conv0
I0428 19:35:01.965749 23433 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:01.965755 23433 net.cpp:139] Memory required for data: 11834800
I0428 19:35:01.965770 23433 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:01.965781 23433 net.cpp:86] Creating Layer pool0
I0428 19:35:01.965787 23433 net.cpp:408] pool0 <- conv0
I0428 19:35:01.965796 23433 net.cpp:382] pool0 -> pool0
I0428 19:35:01.965842 23433 net.cpp:124] Setting up pool0
I0428 19:35:01.965850 23433 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:01.965857 23433 net.cpp:139] Memory required for data: 14714800
I0428 19:35:01.965862 23433 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:01.965873 23433 net.cpp:86] Creating Layer ip1
I0428 19:35:01.965879 23433 net.cpp:408] ip1 <- pool0
I0428 19:35:01.965888 23433 net.cpp:382] ip1 -> ip1
I0428 19:35:01.968004 23433 net.cpp:124] Setting up ip1
I0428 19:35:01.968019 23433 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:01.968025 23433 net.cpp:139] Memory required for data: 14724800
I0428 19:35:01.968056 23433 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:01.968065 23433 net.cpp:86] Creating Layer relu1
I0428 19:35:01.968072 23433 net.cpp:408] relu1 <- ip1
I0428 19:35:01.968080 23433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:01.968262 23433 net.cpp:124] Setting up relu1
I0428 19:35:01.968274 23433 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:01.968281 23433 net.cpp:139] Memory required for data: 14734800
I0428 19:35:01.968286 23433 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:01.968297 23433 net.cpp:86] Creating Layer ip2
I0428 19:35:01.968304 23433 net.cpp:408] ip2 <- ip1
I0428 19:35:01.968314 23433 net.cpp:382] ip2 -> ip2
I0428 19:35:01.968425 23433 net.cpp:124] Setting up ip2
I0428 19:35:01.968433 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.968438 23433 net.cpp:139] Memory required for data: 14738800
I0428 19:35:01.968451 23433 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:01.968461 23433 net.cpp:86] Creating Layer relu2
I0428 19:35:01.968468 23433 net.cpp:408] relu2 <- ip2
I0428 19:35:01.968477 23433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:01.969413 23433 net.cpp:124] Setting up relu2
I0428 19:35:01.969429 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.969435 23433 net.cpp:139] Memory required for data: 14742800
I0428 19:35:01.969441 23433 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:01.969455 23433 net.cpp:86] Creating Layer ip3
I0428 19:35:01.969461 23433 net.cpp:408] ip3 <- ip2
I0428 19:35:01.969471 23433 net.cpp:382] ip3 -> ip3
I0428 19:35:01.969606 23433 net.cpp:124] Setting up ip3
I0428 19:35:01.969616 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.969622 23433 net.cpp:139] Memory required for data: 14746800
I0428 19:35:01.969632 23433 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:01.969641 23433 net.cpp:86] Creating Layer relu3
I0428 19:35:01.969647 23433 net.cpp:408] relu3 <- ip3
I0428 19:35:01.969655 23433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:01.969822 23433 net.cpp:124] Setting up relu3
I0428 19:35:01.969833 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.969838 23433 net.cpp:139] Memory required for data: 14750800
I0428 19:35:01.969844 23433 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:01.969852 23433 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:01.969858 23433 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:01.969867 23433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:01.969879 23433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:01.969925 23433 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:01.969933 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.969954 23433 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:01.969960 23433 net.cpp:139] Memory required for data: 14758800
I0428 19:35:01.969966 23433 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:01.969975 23433 net.cpp:86] Creating Layer accuracy
I0428 19:35:01.969981 23433 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:01.969988 23433 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:01.969997 23433 net.cpp:382] accuracy -> accuracy
I0428 19:35:01.970010 23433 net.cpp:124] Setting up accuracy
I0428 19:35:01.970018 23433 net.cpp:131] Top shape: (1)
I0428 19:35:01.970024 23433 net.cpp:139] Memory required for data: 14758804
I0428 19:35:01.970029 23433 layer_factory.hpp:77] Creating layer loss
I0428 19:35:01.970037 23433 net.cpp:86] Creating Layer loss
I0428 19:35:01.970043 23433 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:01.970051 23433 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:01.970058 23433 net.cpp:382] loss -> loss
I0428 19:35:01.970069 23433 layer_factory.hpp:77] Creating layer loss
I0428 19:35:01.970331 23433 net.cpp:124] Setting up loss
I0428 19:35:01.970341 23433 net.cpp:131] Top shape: (1)
I0428 19:35:01.970348 23433 net.cpp:134]     with loss weight 1
I0428 19:35:01.970358 23433 net.cpp:139] Memory required for data: 14758808
I0428 19:35:01.970366 23433 net.cpp:200] loss needs backward computation.
I0428 19:35:01.970372 23433 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:01.970379 23433 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:01.970386 23433 net.cpp:200] relu3 needs backward computation.
I0428 19:35:01.970391 23433 net.cpp:200] ip3 needs backward computation.
I0428 19:35:01.970398 23433 net.cpp:200] relu2 needs backward computation.
I0428 19:35:01.970403 23433 net.cpp:200] ip2 needs backward computation.
I0428 19:35:01.970409 23433 net.cpp:200] relu1 needs backward computation.
I0428 19:35:01.970414 23433 net.cpp:200] ip1 needs backward computation.
I0428 19:35:01.970420 23433 net.cpp:200] pool0 needs backward computation.
I0428 19:35:01.970427 23433 net.cpp:200] conv0 needs backward computation.
I0428 19:35:01.970433 23433 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:01.970439 23433 net.cpp:202] mnist does not need backward computation.
I0428 19:35:01.970444 23433 net.cpp:244] This network produces output accuracy
I0428 19:35:01.970451 23433 net.cpp:244] This network produces output loss
I0428 19:35:01.970468 23433 net.cpp:257] Network initialization done.
I0428 19:35:01.970512 23433 solver.cpp:56] Solver scaffolding done.
I0428 19:35:01.970805 23433 caffe.cpp:248] Starting Optimization
I0428 19:35:01.970813 23433 solver.cpp:273] Solving LeNet
I0428 19:35:01.970818 23433 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:01.971637 23433 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:02.071019 23440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:02.073631 23433 solver.cpp:398]     Test net output #0: accuracy = 0.0965
I0428 19:35:02.073652 23433 solver.cpp:398]     Test net output #1: loss = 2.30845 (* 1 = 2.30845 loss)
I0428 19:35:02.078063 23433 solver.cpp:219] Iteration 0 (0 iter/s, 0.107214s/100 iters), loss = 2.31476
I0428 19:35:02.078089 23433 solver.cpp:238]     Train net output #0: loss = 2.31476 (* 1 = 2.31476 loss)
I0428 19:35:02.078121 23433 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:02.220818 23433 solver.cpp:219] Iteration 100 (700.708 iter/s, 0.142713s/100 iters), loss = 0.405212
I0428 19:35:02.220846 23433 solver.cpp:238]     Train net output #0: loss = 0.405212 (* 1 = 0.405212 loss)
I0428 19:35:02.220872 23433 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:02.363436 23433 solver.cpp:219] Iteration 200 (701.362 iter/s, 0.14258s/100 iters), loss = 0.244678
I0428 19:35:02.363466 23433 solver.cpp:238]     Train net output #0: loss = 0.244678 (* 1 = 0.244678 loss)
I0428 19:35:02.363492 23433 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:02.505472 23433 solver.cpp:219] Iteration 300 (704.24 iter/s, 0.141997s/100 iters), loss = 0.247381
I0428 19:35:02.505514 23433 solver.cpp:238]     Train net output #0: loss = 0.247381 (* 1 = 0.247381 loss)
I0428 19:35:02.505542 23433 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:02.647320 23433 solver.cpp:219] Iteration 400 (705.232 iter/s, 0.141797s/100 iters), loss = 0.104328
I0428 19:35:02.647349 23433 solver.cpp:238]     Train net output #0: loss = 0.104328 (* 1 = 0.104328 loss)
I0428 19:35:02.647375 23433 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:02.789232 23433 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:02.884960 23440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:02.888453 23433 solver.cpp:398]     Test net output #0: accuracy = 0.9523
I0428 19:35:02.888474 23433 solver.cpp:398]     Test net output #1: loss = 0.166028 (* 1 = 0.166028 loss)
I0428 19:35:02.889858 23433 solver.cpp:219] Iteration 500 (412.38 iter/s, 0.242494s/100 iters), loss = 0.236649
I0428 19:35:02.889884 23433 solver.cpp:238]     Train net output #0: loss = 0.236649 (* 1 = 0.236649 loss)
I0428 19:35:02.889909 23433 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:03.036712 23433 solver.cpp:219] Iteration 600 (681.144 iter/s, 0.146812s/100 iters), loss = 0.104046
I0428 19:35:03.036762 23433 solver.cpp:238]     Train net output #0: loss = 0.104046 (* 1 = 0.104046 loss)
I0428 19:35:03.036777 23433 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:03.184831 23433 solver.cpp:219] Iteration 700 (675.462 iter/s, 0.148047s/100 iters), loss = 0.29901
I0428 19:35:03.184864 23433 solver.cpp:238]     Train net output #0: loss = 0.29901 (* 1 = 0.29901 loss)
I0428 19:35:03.184872 23433 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:03.327323 23433 solver.cpp:219] Iteration 800 (702.012 iter/s, 0.142448s/100 iters), loss = 0.252172
I0428 19:35:03.327356 23433 solver.cpp:238]     Train net output #0: loss = 0.252172 (* 1 = 0.252172 loss)
I0428 19:35:03.327364 23433 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:03.469475 23433 solver.cpp:219] Iteration 900 (703.702 iter/s, 0.142106s/100 iters), loss = 0.181507
I0428 19:35:03.469504 23433 solver.cpp:238]     Train net output #0: loss = 0.181507 (* 1 = 0.181507 loss)
I0428 19:35:03.469512 23433 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:03.516537 23439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:03.609287 23433 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:03.613680 23433 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:03.616006 23433 solver.cpp:311] Iteration 1000, loss = 0.0878351
I0428 19:35:03.616025 23433 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:03.714601 23440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:03.718230 23433 solver.cpp:398]     Test net output #0: accuracy = 0.9683
I0428 19:35:03.718252 23433 solver.cpp:398]     Test net output #1: loss = 0.107161 (* 1 = 0.107161 loss)
I0428 19:35:03.718258 23433 solver.cpp:316] Optimization Done.
I0428 19:35:03.718262 23433 caffe.cpp:259] Optimization Done.
