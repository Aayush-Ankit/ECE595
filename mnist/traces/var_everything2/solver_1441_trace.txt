I0428 20:24:40.340073  2443 caffe.cpp:218] Using GPUs 0
I0428 20:24:40.377053  2443 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:40.890177  2443 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1441.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:40.890321  2443 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1441.prototxt
I0428 20:24:40.890738  2443 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:40.890759  2443 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:40.890861  2443 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:40.890944  2443 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:40.891044  2443 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:40.891068  2443 net.cpp:86] Creating Layer mnist
I0428 20:24:40.891079  2443 net.cpp:382] mnist -> data
I0428 20:24:40.891103  2443 net.cpp:382] mnist -> label
I0428 20:24:40.892205  2443 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:40.894701  2443 net.cpp:124] Setting up mnist
I0428 20:24:40.894721  2443 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:40.894726  2443 net.cpp:131] Top shape: 64 (64)
I0428 20:24:40.894731  2443 net.cpp:139] Memory required for data: 200960
I0428 20:24:40.894737  2443 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:40.894765  2443 net.cpp:86] Creating Layer conv0
I0428 20:24:40.894793  2443 net.cpp:408] conv0 <- data
I0428 20:24:40.894807  2443 net.cpp:382] conv0 -> conv0
I0428 20:24:41.160657  2443 net.cpp:124] Setting up conv0
I0428 20:24:41.160699  2443 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:41.160704  2443 net.cpp:139] Memory required for data: 7573760
I0428 20:24:41.160718  2443 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:41.160730  2443 net.cpp:86] Creating Layer pool0
I0428 20:24:41.160734  2443 net.cpp:408] pool0 <- conv0
I0428 20:24:41.160754  2443 net.cpp:382] pool0 -> pool0
I0428 20:24:41.160836  2443 net.cpp:124] Setting up pool0
I0428 20:24:41.160842  2443 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:41.160845  2443 net.cpp:139] Memory required for data: 9416960
I0428 20:24:41.160848  2443 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:41.160859  2443 net.cpp:86] Creating Layer conv1
I0428 20:24:41.160862  2443 net.cpp:408] conv1 <- pool0
I0428 20:24:41.160867  2443 net.cpp:382] conv1 -> conv1
I0428 20:24:41.164321  2443 net.cpp:124] Setting up conv1
I0428 20:24:41.164351  2443 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:41.164355  2443 net.cpp:139] Memory required for data: 11055360
I0428 20:24:41.164366  2443 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:41.164372  2443 net.cpp:86] Creating Layer pool1
I0428 20:24:41.164376  2443 net.cpp:408] pool1 <- conv1
I0428 20:24:41.164381  2443 net.cpp:382] pool1 -> pool1
I0428 20:24:41.164433  2443 net.cpp:124] Setting up pool1
I0428 20:24:41.164438  2443 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:41.164441  2443 net.cpp:139] Memory required for data: 11464960
I0428 20:24:41.164444  2443 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:41.164453  2443 net.cpp:86] Creating Layer ip1
I0428 20:24:41.164455  2443 net.cpp:408] ip1 <- pool1
I0428 20:24:41.164460  2443 net.cpp:382] ip1 -> ip1
I0428 20:24:41.165091  2443 net.cpp:124] Setting up ip1
I0428 20:24:41.165101  2443 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:41.165103  2443 net.cpp:139] Memory required for data: 11477760
I0428 20:24:41.165112  2443 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:41.165119  2443 net.cpp:86] Creating Layer relu1
I0428 20:24:41.165122  2443 net.cpp:408] relu1 <- ip1
I0428 20:24:41.165127  2443 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:41.165381  2443 net.cpp:124] Setting up relu1
I0428 20:24:41.165392  2443 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:41.165395  2443 net.cpp:139] Memory required for data: 11490560
I0428 20:24:41.165398  2443 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:41.165403  2443 net.cpp:86] Creating Layer ip2
I0428 20:24:41.165406  2443 net.cpp:408] ip2 <- ip1
I0428 20:24:41.165412  2443 net.cpp:382] ip2 -> ip2
I0428 20:24:41.165570  2443 net.cpp:124] Setting up ip2
I0428 20:24:41.165578  2443 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:41.165581  2443 net.cpp:139] Memory required for data: 11503360
I0428 20:24:41.165586  2443 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:41.165594  2443 net.cpp:86] Creating Layer relu2
I0428 20:24:41.165597  2443 net.cpp:408] relu2 <- ip2
I0428 20:24:41.165601  2443 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:41.166369  2443 net.cpp:124] Setting up relu2
I0428 20:24:41.166380  2443 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:41.166400  2443 net.cpp:139] Memory required for data: 11516160
I0428 20:24:41.166404  2443 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:41.166410  2443 net.cpp:86] Creating Layer ip3
I0428 20:24:41.166414  2443 net.cpp:408] ip3 <- ip2
I0428 20:24:41.166419  2443 net.cpp:382] ip3 -> ip3
I0428 20:24:41.166539  2443 net.cpp:124] Setting up ip3
I0428 20:24:41.166563  2443 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:41.166565  2443 net.cpp:139] Memory required for data: 11518720
I0428 20:24:41.166573  2443 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:41.166577  2443 net.cpp:86] Creating Layer relu3
I0428 20:24:41.166581  2443 net.cpp:408] relu3 <- ip3
I0428 20:24:41.166585  2443 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:41.166786  2443 net.cpp:124] Setting up relu3
I0428 20:24:41.166795  2443 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:41.166798  2443 net.cpp:139] Memory required for data: 11521280
I0428 20:24:41.166801  2443 layer_factory.hpp:77] Creating layer loss
I0428 20:24:41.166808  2443 net.cpp:86] Creating Layer loss
I0428 20:24:41.166811  2443 net.cpp:408] loss <- ip3
I0428 20:24:41.166815  2443 net.cpp:408] loss <- label
I0428 20:24:41.166821  2443 net.cpp:382] loss -> loss
I0428 20:24:41.166838  2443 layer_factory.hpp:77] Creating layer loss
I0428 20:24:41.167099  2443 net.cpp:124] Setting up loss
I0428 20:24:41.167109  2443 net.cpp:131] Top shape: (1)
I0428 20:24:41.167111  2443 net.cpp:134]     with loss weight 1
I0428 20:24:41.167126  2443 net.cpp:139] Memory required for data: 11521284
I0428 20:24:41.167129  2443 net.cpp:200] loss needs backward computation.
I0428 20:24:41.167134  2443 net.cpp:200] relu3 needs backward computation.
I0428 20:24:41.167136  2443 net.cpp:200] ip3 needs backward computation.
I0428 20:24:41.167140  2443 net.cpp:200] relu2 needs backward computation.
I0428 20:24:41.167142  2443 net.cpp:200] ip2 needs backward computation.
I0428 20:24:41.167145  2443 net.cpp:200] relu1 needs backward computation.
I0428 20:24:41.167147  2443 net.cpp:200] ip1 needs backward computation.
I0428 20:24:41.167150  2443 net.cpp:200] pool1 needs backward computation.
I0428 20:24:41.167153  2443 net.cpp:200] conv1 needs backward computation.
I0428 20:24:41.167156  2443 net.cpp:200] pool0 needs backward computation.
I0428 20:24:41.167160  2443 net.cpp:200] conv0 needs backward computation.
I0428 20:24:41.167163  2443 net.cpp:202] mnist does not need backward computation.
I0428 20:24:41.167165  2443 net.cpp:244] This network produces output loss
I0428 20:24:41.167177  2443 net.cpp:257] Network initialization done.
I0428 20:24:41.167543  2443 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1441.prototxt
I0428 20:24:41.167583  2443 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:41.167686  2443 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:41.167767  2443 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:41.167809  2443 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:41.167824  2443 net.cpp:86] Creating Layer mnist
I0428 20:24:41.167827  2443 net.cpp:382] mnist -> data
I0428 20:24:41.167835  2443 net.cpp:382] mnist -> label
I0428 20:24:41.167918  2443 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:41.169244  2443 net.cpp:124] Setting up mnist
I0428 20:24:41.169271  2443 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:41.169294  2443 net.cpp:131] Top shape: 100 (100)
I0428 20:24:41.169298  2443 net.cpp:139] Memory required for data: 314000
I0428 20:24:41.169301  2443 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:41.169312  2443 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:41.169315  2443 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:41.169319  2443 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:41.169327  2443 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:41.169435  2443 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:41.169441  2443 net.cpp:131] Top shape: 100 (100)
I0428 20:24:41.169445  2443 net.cpp:131] Top shape: 100 (100)
I0428 20:24:41.169448  2443 net.cpp:139] Memory required for data: 314800
I0428 20:24:41.169451  2443 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:41.169461  2443 net.cpp:86] Creating Layer conv0
I0428 20:24:41.169466  2443 net.cpp:408] conv0 <- data
I0428 20:24:41.169471  2443 net.cpp:382] conv0 -> conv0
I0428 20:24:41.171102  2443 net.cpp:124] Setting up conv0
I0428 20:24:41.171130  2443 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:41.171134  2443 net.cpp:139] Memory required for data: 11834800
I0428 20:24:41.171144  2443 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:41.171150  2443 net.cpp:86] Creating Layer pool0
I0428 20:24:41.171154  2443 net.cpp:408] pool0 <- conv0
I0428 20:24:41.171159  2443 net.cpp:382] pool0 -> pool0
I0428 20:24:41.171197  2443 net.cpp:124] Setting up pool0
I0428 20:24:41.171202  2443 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:41.171205  2443 net.cpp:139] Memory required for data: 14714800
I0428 20:24:41.171208  2443 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:41.171217  2443 net.cpp:86] Creating Layer conv1
I0428 20:24:41.171221  2443 net.cpp:408] conv1 <- pool0
I0428 20:24:41.171226  2443 net.cpp:382] conv1 -> conv1
I0428 20:24:41.174495  2443 net.cpp:124] Setting up conv1
I0428 20:24:41.174525  2443 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:41.174530  2443 net.cpp:139] Memory required for data: 17274800
I0428 20:24:41.174537  2443 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:41.174543  2443 net.cpp:86] Creating Layer pool1
I0428 20:24:41.174549  2443 net.cpp:408] pool1 <- conv1
I0428 20:24:41.174554  2443 net.cpp:382] pool1 -> pool1
I0428 20:24:41.174604  2443 net.cpp:124] Setting up pool1
I0428 20:24:41.174612  2443 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:41.174614  2443 net.cpp:139] Memory required for data: 17914800
I0428 20:24:41.174618  2443 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:41.174623  2443 net.cpp:86] Creating Layer ip1
I0428 20:24:41.174643  2443 net.cpp:408] ip1 <- pool1
I0428 20:24:41.174648  2443 net.cpp:382] ip1 -> ip1
I0428 20:24:41.175228  2443 net.cpp:124] Setting up ip1
I0428 20:24:41.175246  2443 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:41.175266  2443 net.cpp:139] Memory required for data: 17934800
I0428 20:24:41.175272  2443 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:41.175277  2443 net.cpp:86] Creating Layer relu1
I0428 20:24:41.175281  2443 net.cpp:408] relu1 <- ip1
I0428 20:24:41.175287  2443 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:41.175536  2443 net.cpp:124] Setting up relu1
I0428 20:24:41.175546  2443 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:41.175549  2443 net.cpp:139] Memory required for data: 17954800
I0428 20:24:41.175552  2443 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:41.175560  2443 net.cpp:86] Creating Layer ip2
I0428 20:24:41.175565  2443 net.cpp:408] ip2 <- ip1
I0428 20:24:41.175570  2443 net.cpp:382] ip2 -> ip2
I0428 20:24:41.175693  2443 net.cpp:124] Setting up ip2
I0428 20:24:41.175701  2443 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:41.175710  2443 net.cpp:139] Memory required for data: 17974800
I0428 20:24:41.175721  2443 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:41.175731  2443 net.cpp:86] Creating Layer relu2
I0428 20:24:41.175734  2443 net.cpp:408] relu2 <- ip2
I0428 20:24:41.175740  2443 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:41.175923  2443 net.cpp:124] Setting up relu2
I0428 20:24:41.175932  2443 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:41.175940  2443 net.cpp:139] Memory required for data: 17994800
I0428 20:24:41.175945  2443 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:41.175951  2443 net.cpp:86] Creating Layer ip3
I0428 20:24:41.175954  2443 net.cpp:408] ip3 <- ip2
I0428 20:24:41.175958  2443 net.cpp:382] ip3 -> ip3
I0428 20:24:41.176072  2443 net.cpp:124] Setting up ip3
I0428 20:24:41.176079  2443 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:41.176082  2443 net.cpp:139] Memory required for data: 17998800
I0428 20:24:41.176090  2443 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:41.176095  2443 net.cpp:86] Creating Layer relu3
I0428 20:24:41.176098  2443 net.cpp:408] relu3 <- ip3
I0428 20:24:41.176101  2443 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:41.176890  2443 net.cpp:124] Setting up relu3
I0428 20:24:41.176903  2443 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:41.176921  2443 net.cpp:139] Memory required for data: 18002800
I0428 20:24:41.176925  2443 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:41.176931  2443 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:41.176935  2443 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:41.176941  2443 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:41.176947  2443 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:41.177017  2443 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:41.177026  2443 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:41.177029  2443 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:41.177031  2443 net.cpp:139] Memory required for data: 18010800
I0428 20:24:41.177034  2443 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:41.177055  2443 net.cpp:86] Creating Layer accuracy
I0428 20:24:41.177075  2443 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:41.177079  2443 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:41.177084  2443 net.cpp:382] accuracy -> accuracy
I0428 20:24:41.177091  2443 net.cpp:124] Setting up accuracy
I0428 20:24:41.177095  2443 net.cpp:131] Top shape: (1)
I0428 20:24:41.177098  2443 net.cpp:139] Memory required for data: 18010804
I0428 20:24:41.177101  2443 layer_factory.hpp:77] Creating layer loss
I0428 20:24:41.177120  2443 net.cpp:86] Creating Layer loss
I0428 20:24:41.177124  2443 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:41.177144  2443 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:41.177148  2443 net.cpp:382] loss -> loss
I0428 20:24:41.177155  2443 layer_factory.hpp:77] Creating layer loss
I0428 20:24:41.177399  2443 net.cpp:124] Setting up loss
I0428 20:24:41.177408  2443 net.cpp:131] Top shape: (1)
I0428 20:24:41.177412  2443 net.cpp:134]     with loss weight 1
I0428 20:24:41.177430  2443 net.cpp:139] Memory required for data: 18010808
I0428 20:24:41.177434  2443 net.cpp:200] loss needs backward computation.
I0428 20:24:41.177438  2443 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:41.177458  2443 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:41.177461  2443 net.cpp:200] relu3 needs backward computation.
I0428 20:24:41.177464  2443 net.cpp:200] ip3 needs backward computation.
I0428 20:24:41.177467  2443 net.cpp:200] relu2 needs backward computation.
I0428 20:24:41.177469  2443 net.cpp:200] ip2 needs backward computation.
I0428 20:24:41.177472  2443 net.cpp:200] relu1 needs backward computation.
I0428 20:24:41.177475  2443 net.cpp:200] ip1 needs backward computation.
I0428 20:24:41.177477  2443 net.cpp:200] pool1 needs backward computation.
I0428 20:24:41.177481  2443 net.cpp:200] conv1 needs backward computation.
I0428 20:24:41.177484  2443 net.cpp:200] pool0 needs backward computation.
I0428 20:24:41.177487  2443 net.cpp:200] conv0 needs backward computation.
I0428 20:24:41.177491  2443 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:41.177510  2443 net.cpp:202] mnist does not need backward computation.
I0428 20:24:41.177511  2443 net.cpp:244] This network produces output accuracy
I0428 20:24:41.177515  2443 net.cpp:244] This network produces output loss
I0428 20:24:41.177526  2443 net.cpp:257] Network initialization done.
I0428 20:24:41.177567  2443 solver.cpp:56] Solver scaffolding done.
I0428 20:24:41.177963  2443 caffe.cpp:248] Starting Optimization
I0428 20:24:41.177970  2443 solver.cpp:273] Solving LeNet
I0428 20:24:41.177973  2443 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:41.178789  2443 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:41.268626  2450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:41.271019  2443 solver.cpp:398]     Test net output #0: accuracy = 0.0998
I0428 20:24:41.271057  2443 solver.cpp:398]     Test net output #1: loss = 2.33344 (* 1 = 2.33344 loss)
I0428 20:24:41.278095  2443 solver.cpp:219] Iteration 0 (-8.54011e-31 iter/s, 0.100073s/100 iters), loss = 2.3341
I0428 20:24:41.278134  2443 solver.cpp:238]     Train net output #0: loss = 2.3341 (* 1 = 2.3341 loss)
I0428 20:24:41.278146  2443 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:41.492833  2443 solver.cpp:219] Iteration 100 (465.808 iter/s, 0.214681s/100 iters), loss = 0.246877
I0428 20:24:41.492877  2443 solver.cpp:238]     Train net output #0: loss = 0.246877 (* 1 = 0.246877 loss)
I0428 20:24:41.492889  2443 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:41.721374  2443 solver.cpp:219] Iteration 200 (437.675 iter/s, 0.22848s/100 iters), loss = 0.1456
I0428 20:24:41.721402  2443 solver.cpp:238]     Train net output #0: loss = 0.1456 (* 1 = 0.1456 loss)
I0428 20:24:41.721410  2443 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:41.945350  2443 solver.cpp:219] Iteration 300 (446.572 iter/s, 0.223928s/100 iters), loss = 0.207133
I0428 20:24:41.945389  2443 solver.cpp:238]     Train net output #0: loss = 0.207133 (* 1 = 0.207133 loss)
I0428 20:24:41.945399  2443 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:42.168521  2443 solver.cpp:219] Iteration 400 (448.192 iter/s, 0.223118s/100 iters), loss = 0.0523206
I0428 20:24:42.168550  2443 solver.cpp:238]     Train net output #0: loss = 0.0523207 (* 1 = 0.0523207 loss)
I0428 20:24:42.168571  2443 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:42.374881  2443 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:42.461417  2450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:42.464426  2443 solver.cpp:398]     Test net output #0: accuracy = 0.966
I0428 20:24:42.464447  2443 solver.cpp:398]     Test net output #1: loss = 0.10669 (* 1 = 0.10669 loss)
I0428 20:24:42.466390  2443 solver.cpp:219] Iteration 500 (335.77 iter/s, 0.297823s/100 iters), loss = 0.0747254
I0428 20:24:42.466414  2443 solver.cpp:238]     Train net output #0: loss = 0.0747254 (* 1 = 0.0747254 loss)
I0428 20:24:42.466459  2443 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:42.679451  2443 solver.cpp:219] Iteration 600 (469.438 iter/s, 0.213021s/100 iters), loss = 0.094178
I0428 20:24:42.679483  2443 solver.cpp:238]     Train net output #0: loss = 0.0941779 (* 1 = 0.0941779 loss)
I0428 20:24:42.679505  2443 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:42.891674  2443 solver.cpp:219] Iteration 700 (471.319 iter/s, 0.212171s/100 iters), loss = 0.126615
I0428 20:24:42.891724  2443 solver.cpp:238]     Train net output #0: loss = 0.126615 (* 1 = 0.126615 loss)
I0428 20:24:42.891743  2443 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:43.106581  2443 solver.cpp:219] Iteration 800 (465.453 iter/s, 0.214844s/100 iters), loss = 0.180644
I0428 20:24:43.106609  2443 solver.cpp:238]     Train net output #0: loss = 0.180644 (* 1 = 0.180644 loss)
I0428 20:24:43.106616  2443 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:43.343257  2443 solver.cpp:219] Iteration 900 (422.599 iter/s, 0.236631s/100 iters), loss = 0.149867
I0428 20:24:43.343291  2443 solver.cpp:238]     Train net output #0: loss = 0.149867 (* 1 = 0.149867 loss)
I0428 20:24:43.343300  2443 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:43.420900  2449 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:43.575557  2443 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:43.584419  2443 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:43.586987  2443 solver.cpp:311] Iteration 1000, loss = 0.0746321
I0428 20:24:43.587008  2443 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:43.678869  2450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:43.682606  2443 solver.cpp:398]     Test net output #0: accuracy = 0.9793
I0428 20:24:43.682648  2443 solver.cpp:398]     Test net output #1: loss = 0.0617081 (* 1 = 0.0617081 loss)
I0428 20:24:43.682659  2443 solver.cpp:316] Optimization Done.
I0428 20:24:43.682665  2443 caffe.cpp:259] Optimization Done.
