I0428 20:10:13.222322 31792 caffe.cpp:218] Using GPUs 0
I0428 20:10:13.260193 31792 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:13.712574 31792 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1129.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:13.712712 31792 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1129.prototxt
I0428 20:10:13.713099 31792 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:13.713146 31792 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:13.713255 31792 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:13.713332 31792 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:13.713414 31792 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:13.713433 31792 net.cpp:86] Creating Layer mnist
I0428 20:10:13.713441 31792 net.cpp:382] mnist -> data
I0428 20:10:13.713459 31792 net.cpp:382] mnist -> label
I0428 20:10:13.714450 31792 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:13.716701 31792 net.cpp:124] Setting up mnist
I0428 20:10:13.716730 31792 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:13.716735 31792 net.cpp:131] Top shape: 64 (64)
I0428 20:10:13.716738 31792 net.cpp:139] Memory required for data: 200960
I0428 20:10:13.716743 31792 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:13.716783 31792 net.cpp:86] Creating Layer conv0
I0428 20:10:13.716800 31792 net.cpp:408] conv0 <- data
I0428 20:10:13.716831 31792 net.cpp:382] conv0 -> conv0
I0428 20:10:13.951766 31792 net.cpp:124] Setting up conv0
I0428 20:10:13.951807 31792 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:13.951812 31792 net.cpp:139] Memory required for data: 3887360
I0428 20:10:13.951841 31792 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:13.951854 31792 net.cpp:86] Creating Layer pool0
I0428 20:10:13.951858 31792 net.cpp:408] pool0 <- conv0
I0428 20:10:13.951864 31792 net.cpp:382] pool0 -> pool0
I0428 20:10:13.951906 31792 net.cpp:124] Setting up pool0
I0428 20:10:13.951911 31792 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:13.951915 31792 net.cpp:139] Memory required for data: 4808960
I0428 20:10:13.951917 31792 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:13.951928 31792 net.cpp:86] Creating Layer conv1
I0428 20:10:13.951931 31792 net.cpp:408] conv1 <- pool0
I0428 20:10:13.951936 31792 net.cpp:382] conv1 -> conv1
I0428 20:10:13.954751 31792 net.cpp:124] Setting up conv1
I0428 20:10:13.954782 31792 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:10:13.954785 31792 net.cpp:139] Memory required for data: 5218560
I0428 20:10:13.954793 31792 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:13.954802 31792 net.cpp:86] Creating Layer pool1
I0428 20:10:13.954805 31792 net.cpp:408] pool1 <- conv1
I0428 20:10:13.954810 31792 net.cpp:382] pool1 -> pool1
I0428 20:10:13.954848 31792 net.cpp:124] Setting up pool1
I0428 20:10:13.954852 31792 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:10:13.954855 31792 net.cpp:139] Memory required for data: 5320960
I0428 20:10:13.954859 31792 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:13.954865 31792 net.cpp:86] Creating Layer ip1
I0428 20:10:13.954869 31792 net.cpp:408] ip1 <- pool1
I0428 20:10:13.954872 31792 net.cpp:382] ip1 -> ip1
I0428 20:10:13.955091 31792 net.cpp:124] Setting up ip1
I0428 20:10:13.955099 31792 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:13.955102 31792 net.cpp:139] Memory required for data: 5333760
I0428 20:10:13.955109 31792 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:13.955116 31792 net.cpp:86] Creating Layer relu1
I0428 20:10:13.955118 31792 net.cpp:408] relu1 <- ip1
I0428 20:10:13.955122 31792 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:13.955298 31792 net.cpp:124] Setting up relu1
I0428 20:10:13.955307 31792 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:13.955310 31792 net.cpp:139] Memory required for data: 5346560
I0428 20:10:13.955313 31792 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:13.955319 31792 net.cpp:86] Creating Layer ip2
I0428 20:10:13.955322 31792 net.cpp:408] ip2 <- ip1
I0428 20:10:13.955327 31792 net.cpp:382] ip2 -> ip2
I0428 20:10:13.956358 31792 net.cpp:124] Setting up ip2
I0428 20:10:13.956385 31792 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:13.956389 31792 net.cpp:139] Memory required for data: 5359360
I0428 20:10:13.956395 31792 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:13.956403 31792 net.cpp:86] Creating Layer relu2
I0428 20:10:13.956405 31792 net.cpp:408] relu2 <- ip2
I0428 20:10:13.956410 31792 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:13.957242 31792 net.cpp:124] Setting up relu2
I0428 20:10:13.957254 31792 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:13.957273 31792 net.cpp:139] Memory required for data: 5372160
I0428 20:10:13.957276 31792 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:13.957298 31792 net.cpp:86] Creating Layer ip3
I0428 20:10:13.957303 31792 net.cpp:408] ip3 <- ip2
I0428 20:10:13.957307 31792 net.cpp:382] ip3 -> ip3
I0428 20:10:13.957406 31792 net.cpp:124] Setting up ip3
I0428 20:10:13.957414 31792 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:13.957417 31792 net.cpp:139] Memory required for data: 5374720
I0428 20:10:13.957425 31792 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:13.957430 31792 net.cpp:86] Creating Layer relu3
I0428 20:10:13.957433 31792 net.cpp:408] relu3 <- ip3
I0428 20:10:13.957437 31792 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:13.957610 31792 net.cpp:124] Setting up relu3
I0428 20:10:13.957618 31792 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:13.957622 31792 net.cpp:139] Memory required for data: 5377280
I0428 20:10:13.957624 31792 layer_factory.hpp:77] Creating layer loss
I0428 20:10:13.957645 31792 net.cpp:86] Creating Layer loss
I0428 20:10:13.957649 31792 net.cpp:408] loss <- ip3
I0428 20:10:13.957653 31792 net.cpp:408] loss <- label
I0428 20:10:13.957659 31792 net.cpp:382] loss -> loss
I0428 20:10:13.957675 31792 layer_factory.hpp:77] Creating layer loss
I0428 20:10:13.957895 31792 net.cpp:124] Setting up loss
I0428 20:10:13.957904 31792 net.cpp:131] Top shape: (1)
I0428 20:10:13.957907 31792 net.cpp:134]     with loss weight 1
I0428 20:10:13.957921 31792 net.cpp:139] Memory required for data: 5377284
I0428 20:10:13.957924 31792 net.cpp:200] loss needs backward computation.
I0428 20:10:13.957927 31792 net.cpp:200] relu3 needs backward computation.
I0428 20:10:13.957931 31792 net.cpp:200] ip3 needs backward computation.
I0428 20:10:13.957933 31792 net.cpp:200] relu2 needs backward computation.
I0428 20:10:13.957937 31792 net.cpp:200] ip2 needs backward computation.
I0428 20:10:13.957939 31792 net.cpp:200] relu1 needs backward computation.
I0428 20:10:13.957942 31792 net.cpp:200] ip1 needs backward computation.
I0428 20:10:13.957944 31792 net.cpp:200] pool1 needs backward computation.
I0428 20:10:13.957947 31792 net.cpp:200] conv1 needs backward computation.
I0428 20:10:13.957950 31792 net.cpp:200] pool0 needs backward computation.
I0428 20:10:13.957953 31792 net.cpp:200] conv0 needs backward computation.
I0428 20:10:13.957957 31792 net.cpp:202] mnist does not need backward computation.
I0428 20:10:13.957959 31792 net.cpp:244] This network produces output loss
I0428 20:10:13.957968 31792 net.cpp:257] Network initialization done.
I0428 20:10:13.958343 31792 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1129.prototxt
I0428 20:10:13.958386 31792 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:13.958508 31792 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:13.958585 31792 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:13.958644 31792 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:13.958657 31792 net.cpp:86] Creating Layer mnist
I0428 20:10:13.958662 31792 net.cpp:382] mnist -> data
I0428 20:10:13.958670 31792 net.cpp:382] mnist -> label
I0428 20:10:13.958767 31792 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:13.960950 31792 net.cpp:124] Setting up mnist
I0428 20:10:13.960980 31792 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:13.960985 31792 net.cpp:131] Top shape: 100 (100)
I0428 20:10:13.960989 31792 net.cpp:139] Memory required for data: 314000
I0428 20:10:13.960993 31792 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:13.961027 31792 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:13.961031 31792 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:13.961036 31792 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:13.961045 31792 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:13.961088 31792 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:13.961094 31792 net.cpp:131] Top shape: 100 (100)
I0428 20:10:13.961098 31792 net.cpp:131] Top shape: 100 (100)
I0428 20:10:13.961102 31792 net.cpp:139] Memory required for data: 314800
I0428 20:10:13.961104 31792 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:13.961124 31792 net.cpp:86] Creating Layer conv0
I0428 20:10:13.961127 31792 net.cpp:408] conv0 <- data
I0428 20:10:13.961146 31792 net.cpp:382] conv0 -> conv0
I0428 20:10:13.962682 31792 net.cpp:124] Setting up conv0
I0428 20:10:13.962695 31792 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:13.962698 31792 net.cpp:139] Memory required for data: 6074800
I0428 20:10:13.962707 31792 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:13.962713 31792 net.cpp:86] Creating Layer pool0
I0428 20:10:13.962716 31792 net.cpp:408] pool0 <- conv0
I0428 20:10:13.962721 31792 net.cpp:382] pool0 -> pool0
I0428 20:10:13.962754 31792 net.cpp:124] Setting up pool0
I0428 20:10:13.962759 31792 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:13.962762 31792 net.cpp:139] Memory required for data: 7514800
I0428 20:10:13.962765 31792 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:13.962772 31792 net.cpp:86] Creating Layer conv1
I0428 20:10:13.962776 31792 net.cpp:408] conv1 <- pool0
I0428 20:10:13.962780 31792 net.cpp:382] conv1 -> conv1
I0428 20:10:13.964967 31792 net.cpp:124] Setting up conv1
I0428 20:10:13.964982 31792 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:10:13.964987 31792 net.cpp:139] Memory required for data: 8154800
I0428 20:10:13.964994 31792 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:13.965001 31792 net.cpp:86] Creating Layer pool1
I0428 20:10:13.965005 31792 net.cpp:408] pool1 <- conv1
I0428 20:10:13.965010 31792 net.cpp:382] pool1 -> pool1
I0428 20:10:13.965065 31792 net.cpp:124] Setting up pool1
I0428 20:10:13.965070 31792 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:10:13.965073 31792 net.cpp:139] Memory required for data: 8314800
I0428 20:10:13.965077 31792 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:13.965082 31792 net.cpp:86] Creating Layer ip1
I0428 20:10:13.965086 31792 net.cpp:408] ip1 <- pool1
I0428 20:10:13.965092 31792 net.cpp:382] ip1 -> ip1
I0428 20:10:13.965353 31792 net.cpp:124] Setting up ip1
I0428 20:10:13.965360 31792 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:13.965373 31792 net.cpp:139] Memory required for data: 8334800
I0428 20:10:13.965380 31792 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:13.965385 31792 net.cpp:86] Creating Layer relu1
I0428 20:10:13.965389 31792 net.cpp:408] relu1 <- ip1
I0428 20:10:13.965392 31792 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:13.965590 31792 net.cpp:124] Setting up relu1
I0428 20:10:13.965597 31792 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:13.965606 31792 net.cpp:139] Memory required for data: 8354800
I0428 20:10:13.965610 31792 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:13.965616 31792 net.cpp:86] Creating Layer ip2
I0428 20:10:13.965625 31792 net.cpp:408] ip2 <- ip1
I0428 20:10:13.965629 31792 net.cpp:382] ip2 -> ip2
I0428 20:10:13.965737 31792 net.cpp:124] Setting up ip2
I0428 20:10:13.965744 31792 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:13.965747 31792 net.cpp:139] Memory required for data: 8374800
I0428 20:10:13.965754 31792 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:13.965757 31792 net.cpp:86] Creating Layer relu2
I0428 20:10:13.965776 31792 net.cpp:408] relu2 <- ip2
I0428 20:10:13.965780 31792 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:13.965952 31792 net.cpp:124] Setting up relu2
I0428 20:10:13.965960 31792 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:13.965963 31792 net.cpp:139] Memory required for data: 8394800
I0428 20:10:13.965966 31792 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:13.965972 31792 net.cpp:86] Creating Layer ip3
I0428 20:10:13.965975 31792 net.cpp:408] ip3 <- ip2
I0428 20:10:13.965981 31792 net.cpp:382] ip3 -> ip3
I0428 20:10:13.966078 31792 net.cpp:124] Setting up ip3
I0428 20:10:13.966085 31792 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:13.966089 31792 net.cpp:139] Memory required for data: 8398800
I0428 20:10:13.966096 31792 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:13.966109 31792 net.cpp:86] Creating Layer relu3
I0428 20:10:13.966111 31792 net.cpp:408] relu3 <- ip3
I0428 20:10:13.966115 31792 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:13.966948 31792 net.cpp:124] Setting up relu3
I0428 20:10:13.966959 31792 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:13.966977 31792 net.cpp:139] Memory required for data: 8402800
I0428 20:10:13.966981 31792 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:13.966986 31792 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:13.966990 31792 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:13.966995 31792 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:13.967001 31792 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:13.967074 31792 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:13.967079 31792 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:13.967083 31792 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:13.967087 31792 net.cpp:139] Memory required for data: 8410800
I0428 20:10:13.967089 31792 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:13.967094 31792 net.cpp:86] Creating Layer accuracy
I0428 20:10:13.967097 31792 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:13.967102 31792 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:13.967106 31792 net.cpp:382] accuracy -> accuracy
I0428 20:10:13.967113 31792 net.cpp:124] Setting up accuracy
I0428 20:10:13.967118 31792 net.cpp:131] Top shape: (1)
I0428 20:10:13.967120 31792 net.cpp:139] Memory required for data: 8410804
I0428 20:10:13.967123 31792 layer_factory.hpp:77] Creating layer loss
I0428 20:10:13.967128 31792 net.cpp:86] Creating Layer loss
I0428 20:10:13.967131 31792 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:13.967149 31792 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:13.967154 31792 net.cpp:382] loss -> loss
I0428 20:10:13.967160 31792 layer_factory.hpp:77] Creating layer loss
I0428 20:10:13.967453 31792 net.cpp:124] Setting up loss
I0428 20:10:13.967463 31792 net.cpp:131] Top shape: (1)
I0428 20:10:13.967465 31792 net.cpp:134]     with loss weight 1
I0428 20:10:13.967480 31792 net.cpp:139] Memory required for data: 8410808
I0428 20:10:13.967484 31792 net.cpp:200] loss needs backward computation.
I0428 20:10:13.967489 31792 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:13.967491 31792 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:13.967494 31792 net.cpp:200] relu3 needs backward computation.
I0428 20:10:13.967496 31792 net.cpp:200] ip3 needs backward computation.
I0428 20:10:13.967499 31792 net.cpp:200] relu2 needs backward computation.
I0428 20:10:13.967502 31792 net.cpp:200] ip2 needs backward computation.
I0428 20:10:13.967505 31792 net.cpp:200] relu1 needs backward computation.
I0428 20:10:13.967507 31792 net.cpp:200] ip1 needs backward computation.
I0428 20:10:13.967510 31792 net.cpp:200] pool1 needs backward computation.
I0428 20:10:13.967514 31792 net.cpp:200] conv1 needs backward computation.
I0428 20:10:13.967517 31792 net.cpp:200] pool0 needs backward computation.
I0428 20:10:13.967520 31792 net.cpp:200] conv0 needs backward computation.
I0428 20:10:13.967523 31792 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:13.967527 31792 net.cpp:202] mnist does not need backward computation.
I0428 20:10:13.967530 31792 net.cpp:244] This network produces output accuracy
I0428 20:10:13.967540 31792 net.cpp:244] This network produces output loss
I0428 20:10:13.967550 31792 net.cpp:257] Network initialization done.
I0428 20:10:13.967588 31792 solver.cpp:56] Solver scaffolding done.
I0428 20:10:13.967902 31792 caffe.cpp:248] Starting Optimization
I0428 20:10:13.967908 31792 solver.cpp:273] Solving LeNet
I0428 20:10:13.967911 31792 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:13.968842 31792 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:13.974308 31792 blocking_queue.cpp:49] Waiting for data
I0428 20:10:14.044920 31799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:14.045527 31792 solver.cpp:398]     Test net output #0: accuracy = 0.1245
I0428 20:10:14.045549 31792 solver.cpp:398]     Test net output #1: loss = 2.30272 (* 1 = 2.30272 loss)
I0428 20:10:14.049173 31792 solver.cpp:219] Iteration 0 (0 iter/s, 0.0812375s/100 iters), loss = 2.29396
I0428 20:10:14.049196 31792 solver.cpp:238]     Train net output #0: loss = 2.29396 (* 1 = 2.29396 loss)
I0428 20:10:14.049208 31792 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:14.156102 31792 solver.cpp:219] Iteration 100 (935.498 iter/s, 0.106895s/100 iters), loss = 0.661951
I0428 20:10:14.156127 31792 solver.cpp:238]     Train net output #0: loss = 0.661951 (* 1 = 0.661951 loss)
I0428 20:10:14.156149 31792 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:14.259232 31792 solver.cpp:219] Iteration 200 (969.996 iter/s, 0.103093s/100 iters), loss = 0.805891
I0428 20:10:14.259258 31792 solver.cpp:238]     Train net output #0: loss = 0.805891 (* 1 = 0.805891 loss)
I0428 20:10:14.259279 31792 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:14.362095 31792 solver.cpp:219] Iteration 300 (972.506 iter/s, 0.102827s/100 iters), loss = 0.594772
I0428 20:10:14.362123 31792 solver.cpp:238]     Train net output #0: loss = 0.594772 (* 1 = 0.594772 loss)
I0428 20:10:14.362145 31792 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:14.468521 31792 solver.cpp:219] Iteration 400 (939.951 iter/s, 0.106388s/100 iters), loss = 0.747124
I0428 20:10:14.468560 31792 solver.cpp:238]     Train net output #0: loss = 0.747124 (* 1 = 0.747124 loss)
I0428 20:10:14.468567 31792 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:14.575839 31792 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:14.651235 31799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:14.651850 31792 solver.cpp:398]     Test net output #0: accuracy = 0.8584
I0428 20:10:14.651870 31792 solver.cpp:398]     Test net output #1: loss = 0.566063 (* 1 = 0.566063 loss)
I0428 20:10:14.652935 31792 solver.cpp:219] Iteration 500 (542.369 iter/s, 0.184376s/100 iters), loss = 0.559939
I0428 20:10:14.652972 31792 solver.cpp:238]     Train net output #0: loss = 0.559939 (* 1 = 0.559939 loss)
I0428 20:10:14.652979 31792 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:14.763962 31792 solver.cpp:219] Iteration 600 (901.069 iter/s, 0.110979s/100 iters), loss = 0.637539
I0428 20:10:14.763988 31792 solver.cpp:238]     Train net output #0: loss = 0.637539 (* 1 = 0.637539 loss)
I0428 20:10:14.763993 31792 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:14.865831 31792 solver.cpp:219] Iteration 700 (981.994 iter/s, 0.101834s/100 iters), loss = 0.519347
I0428 20:10:14.865857 31792 solver.cpp:238]     Train net output #0: loss = 0.519347 (* 1 = 0.519347 loss)
I0428 20:10:14.865864 31792 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:14.978029 31792 solver.cpp:219] Iteration 800 (891.628 iter/s, 0.112154s/100 iters), loss = 0.715825
I0428 20:10:14.978061 31792 solver.cpp:238]     Train net output #0: loss = 0.715825 (* 1 = 0.715825 loss)
I0428 20:10:14.978070 31792 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:15.080476 31792 solver.cpp:219] Iteration 900 (976.514 iter/s, 0.102405s/100 iters), loss = 0.7966
I0428 20:10:15.080502 31792 solver.cpp:238]     Train net output #0: loss = 0.7966 (* 1 = 0.7966 loss)
I0428 20:10:15.080507 31792 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:15.114256 31798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:15.179615 31792 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:15.180953 31792 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:15.182008 31792 solver.cpp:311] Iteration 1000, loss = 0.508683
I0428 20:10:15.182034 31792 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:15.258132 31799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:15.258826 31792 solver.cpp:398]     Test net output #0: accuracy = 0.9543
I0428 20:10:15.258852 31792 solver.cpp:398]     Test net output #1: loss = 0.341905 (* 1 = 0.341905 loss)
I0428 20:10:15.258864 31792 solver.cpp:316] Optimization Done.
I0428 20:10:15.258868 31792 caffe.cpp:259] Optimization Done.
