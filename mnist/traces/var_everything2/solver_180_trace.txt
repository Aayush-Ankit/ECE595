I0428 19:33:27.572399 23109 caffe.cpp:218] Using GPUs 0
I0428 19:33:27.612855 23109 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:28.130399 23109 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test180.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:28.130568 23109 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test180.prototxt
I0428 19:33:28.130951 23109 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:28.130973 23109 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:28.131072 23109 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:28.131180 23109 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:28.131314 23109 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:28.131348 23109 net.cpp:86] Creating Layer mnist
I0428 19:33:28.131361 23109 net.cpp:382] mnist -> data
I0428 19:33:28.131394 23109 net.cpp:382] mnist -> label
I0428 19:33:28.132613 23109 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:28.135113 23109 net.cpp:124] Setting up mnist
I0428 19:33:28.135135 23109 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:28.135146 23109 net.cpp:131] Top shape: 64 (64)
I0428 19:33:28.135152 23109 net.cpp:139] Memory required for data: 200960
I0428 19:33:28.135164 23109 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:28.135187 23109 net.cpp:86] Creating Layer conv0
I0428 19:33:28.135200 23109 net.cpp:408] conv0 <- data
I0428 19:33:28.135217 23109 net.cpp:382] conv0 -> conv0
I0428 19:33:28.404523 23109 net.cpp:124] Setting up conv0
I0428 19:33:28.404554 23109 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:28.404561 23109 net.cpp:139] Memory required for data: 3887360
I0428 19:33:28.404580 23109 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:28.404597 23109 net.cpp:86] Creating Layer pool0
I0428 19:33:28.404618 23109 net.cpp:408] pool0 <- conv0
I0428 19:33:28.404628 23109 net.cpp:382] pool0 -> pool0
I0428 19:33:28.404678 23109 net.cpp:124] Setting up pool0
I0428 19:33:28.404687 23109 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:28.404692 23109 net.cpp:139] Memory required for data: 4808960
I0428 19:33:28.404697 23109 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:28.404708 23109 net.cpp:86] Creating Layer ip1
I0428 19:33:28.404716 23109 net.cpp:408] ip1 <- pool0
I0428 19:33:28.404724 23109 net.cpp:382] ip1 -> ip1
I0428 19:33:28.406281 23109 net.cpp:124] Setting up ip1
I0428 19:33:28.406296 23109 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:28.406302 23109 net.cpp:139] Memory required for data: 4815360
I0428 19:33:28.406328 23109 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:28.406353 23109 net.cpp:86] Creating Layer relu1
I0428 19:33:28.406365 23109 net.cpp:408] relu1 <- ip1
I0428 19:33:28.406373 23109 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:28.406539 23109 net.cpp:124] Setting up relu1
I0428 19:33:28.406549 23109 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:28.406554 23109 net.cpp:139] Memory required for data: 4821760
I0428 19:33:28.406560 23109 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:28.406569 23109 net.cpp:86] Creating Layer ip2
I0428 19:33:28.406575 23109 net.cpp:408] ip2 <- ip1
I0428 19:33:28.406584 23109 net.cpp:382] ip2 -> ip2
I0428 19:33:28.406702 23109 net.cpp:124] Setting up ip2
I0428 19:33:28.406711 23109 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:28.406716 23109 net.cpp:139] Memory required for data: 4828160
I0428 19:33:28.406728 23109 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:28.406740 23109 net.cpp:86] Creating Layer relu2
I0428 19:33:28.406747 23109 net.cpp:408] relu2 <- ip2
I0428 19:33:28.406755 23109 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:28.407555 23109 net.cpp:124] Setting up relu2
I0428 19:33:28.407569 23109 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:28.407575 23109 net.cpp:139] Memory required for data: 4834560
I0428 19:33:28.407580 23109 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:28.407593 23109 net.cpp:86] Creating Layer ip3
I0428 19:33:28.407599 23109 net.cpp:408] ip3 <- ip2
I0428 19:33:28.407608 23109 net.cpp:382] ip3 -> ip3
I0428 19:33:28.407716 23109 net.cpp:124] Setting up ip3
I0428 19:33:28.407738 23109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:28.407743 23109 net.cpp:139] Memory required for data: 4837120
I0428 19:33:28.407752 23109 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:28.407763 23109 net.cpp:86] Creating Layer relu3
I0428 19:33:28.407769 23109 net.cpp:408] relu3 <- ip3
I0428 19:33:28.407776 23109 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:28.407950 23109 net.cpp:124] Setting up relu3
I0428 19:33:28.407959 23109 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:28.407964 23109 net.cpp:139] Memory required for data: 4839680
I0428 19:33:28.407969 23109 layer_factory.hpp:77] Creating layer loss
I0428 19:33:28.407979 23109 net.cpp:86] Creating Layer loss
I0428 19:33:28.407984 23109 net.cpp:408] loss <- ip3
I0428 19:33:28.407990 23109 net.cpp:408] loss <- label
I0428 19:33:28.407999 23109 net.cpp:382] loss -> loss
I0428 19:33:28.408020 23109 layer_factory.hpp:77] Creating layer loss
I0428 19:33:28.408294 23109 net.cpp:124] Setting up loss
I0428 19:33:28.408306 23109 net.cpp:131] Top shape: (1)
I0428 19:33:28.408310 23109 net.cpp:134]     with loss weight 1
I0428 19:33:28.408330 23109 net.cpp:139] Memory required for data: 4839684
I0428 19:33:28.408337 23109 net.cpp:200] loss needs backward computation.
I0428 19:33:28.408344 23109 net.cpp:200] relu3 needs backward computation.
I0428 19:33:28.408349 23109 net.cpp:200] ip3 needs backward computation.
I0428 19:33:28.408354 23109 net.cpp:200] relu2 needs backward computation.
I0428 19:33:28.408359 23109 net.cpp:200] ip2 needs backward computation.
I0428 19:33:28.408363 23109 net.cpp:200] relu1 needs backward computation.
I0428 19:33:28.408367 23109 net.cpp:200] ip1 needs backward computation.
I0428 19:33:28.408385 23109 net.cpp:200] pool0 needs backward computation.
I0428 19:33:28.408390 23109 net.cpp:200] conv0 needs backward computation.
I0428 19:33:28.408396 23109 net.cpp:202] mnist does not need backward computation.
I0428 19:33:28.408399 23109 net.cpp:244] This network produces output loss
I0428 19:33:28.408411 23109 net.cpp:257] Network initialization done.
I0428 19:33:28.408713 23109 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test180.prototxt
I0428 19:33:28.408743 23109 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:28.408848 23109 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:28.408998 23109 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:28.409055 23109 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:28.409072 23109 net.cpp:86] Creating Layer mnist
I0428 19:33:28.409081 23109 net.cpp:382] mnist -> data
I0428 19:33:28.409092 23109 net.cpp:382] mnist -> label
I0428 19:33:28.409271 23109 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:28.410764 23109 net.cpp:124] Setting up mnist
I0428 19:33:28.410794 23109 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:28.410801 23109 net.cpp:131] Top shape: 100 (100)
I0428 19:33:28.410806 23109 net.cpp:139] Memory required for data: 314000
I0428 19:33:28.410811 23109 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:28.410866 23109 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:28.410871 23109 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:28.410879 23109 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:28.410890 23109 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:28.410985 23109 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:28.410995 23109 net.cpp:131] Top shape: 100 (100)
I0428 19:33:28.411000 23109 net.cpp:131] Top shape: 100 (100)
I0428 19:33:28.411005 23109 net.cpp:139] Memory required for data: 314800
I0428 19:33:28.411020 23109 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:28.411036 23109 net.cpp:86] Creating Layer conv0
I0428 19:33:28.411042 23109 net.cpp:408] conv0 <- data
I0428 19:33:28.411052 23109 net.cpp:382] conv0 -> conv0
I0428 19:33:28.412677 23109 net.cpp:124] Setting up conv0
I0428 19:33:28.412691 23109 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:28.412696 23109 net.cpp:139] Memory required for data: 6074800
I0428 19:33:28.412725 23109 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:28.412739 23109 net.cpp:86] Creating Layer pool0
I0428 19:33:28.412746 23109 net.cpp:408] pool0 <- conv0
I0428 19:33:28.412768 23109 net.cpp:382] pool0 -> pool0
I0428 19:33:28.412849 23109 net.cpp:124] Setting up pool0
I0428 19:33:28.412859 23109 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:28.412864 23109 net.cpp:139] Memory required for data: 7514800
I0428 19:33:28.412869 23109 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:28.412880 23109 net.cpp:86] Creating Layer ip1
I0428 19:33:28.412885 23109 net.cpp:408] ip1 <- pool0
I0428 19:33:28.412895 23109 net.cpp:382] ip1 -> ip1
I0428 19:33:28.413502 23109 net.cpp:124] Setting up ip1
I0428 19:33:28.413512 23109 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:28.413517 23109 net.cpp:139] Memory required for data: 7524800
I0428 19:33:28.413528 23109 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:28.413537 23109 net.cpp:86] Creating Layer relu1
I0428 19:33:28.413544 23109 net.cpp:408] relu1 <- ip1
I0428 19:33:28.413553 23109 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:28.413769 23109 net.cpp:124] Setting up relu1
I0428 19:33:28.413779 23109 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:28.413785 23109 net.cpp:139] Memory required for data: 7534800
I0428 19:33:28.413791 23109 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:28.413802 23109 net.cpp:86] Creating Layer ip2
I0428 19:33:28.413815 23109 net.cpp:408] ip2 <- ip1
I0428 19:33:28.413822 23109 net.cpp:382] ip2 -> ip2
I0428 19:33:28.413936 23109 net.cpp:124] Setting up ip2
I0428 19:33:28.413946 23109 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:28.413951 23109 net.cpp:139] Memory required for data: 7544800
I0428 19:33:28.413967 23109 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:28.413977 23109 net.cpp:86] Creating Layer relu2
I0428 19:33:28.413997 23109 net.cpp:408] relu2 <- ip2
I0428 19:33:28.414005 23109 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:28.414815 23109 net.cpp:124] Setting up relu2
I0428 19:33:28.414829 23109 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:28.414834 23109 net.cpp:139] Memory required for data: 7554800
I0428 19:33:28.414839 23109 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:28.414854 23109 net.cpp:86] Creating Layer ip3
I0428 19:33:28.414875 23109 net.cpp:408] ip3 <- ip2
I0428 19:33:28.414886 23109 net.cpp:382] ip3 -> ip3
I0428 19:33:28.415050 23109 net.cpp:124] Setting up ip3
I0428 19:33:28.415060 23109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:28.415066 23109 net.cpp:139] Memory required for data: 7558800
I0428 19:33:28.415076 23109 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:28.415099 23109 net.cpp:86] Creating Layer relu3
I0428 19:33:28.415105 23109 net.cpp:408] relu3 <- ip3
I0428 19:33:28.415112 23109 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:28.415292 23109 net.cpp:124] Setting up relu3
I0428 19:33:28.415302 23109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:28.415307 23109 net.cpp:139] Memory required for data: 7562800
I0428 19:33:28.415313 23109 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:28.415321 23109 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:28.415328 23109 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:28.415334 23109 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:28.415344 23109 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:28.415387 23109 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:28.415395 23109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:28.415402 23109 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:28.415418 23109 net.cpp:139] Memory required for data: 7570800
I0428 19:33:28.415431 23109 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:28.415441 23109 net.cpp:86] Creating Layer accuracy
I0428 19:33:28.415448 23109 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:28.415455 23109 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:28.415462 23109 net.cpp:382] accuracy -> accuracy
I0428 19:33:28.415478 23109 net.cpp:124] Setting up accuracy
I0428 19:33:28.415487 23109 net.cpp:131] Top shape: (1)
I0428 19:33:28.415491 23109 net.cpp:139] Memory required for data: 7570804
I0428 19:33:28.415498 23109 layer_factory.hpp:77] Creating layer loss
I0428 19:33:28.415506 23109 net.cpp:86] Creating Layer loss
I0428 19:33:28.415511 23109 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:28.415518 23109 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:28.415524 23109 net.cpp:382] loss -> loss
I0428 19:33:28.415535 23109 layer_factory.hpp:77] Creating layer loss
I0428 19:33:28.415801 23109 net.cpp:124] Setting up loss
I0428 19:33:28.415810 23109 net.cpp:131] Top shape: (1)
I0428 19:33:28.415817 23109 net.cpp:134]     with loss weight 1
I0428 19:33:28.415825 23109 net.cpp:139] Memory required for data: 7570808
I0428 19:33:28.415830 23109 net.cpp:200] loss needs backward computation.
I0428 19:33:28.415837 23109 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:28.415843 23109 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:28.415848 23109 net.cpp:200] relu3 needs backward computation.
I0428 19:33:28.415851 23109 net.cpp:200] ip3 needs backward computation.
I0428 19:33:28.415873 23109 net.cpp:200] relu2 needs backward computation.
I0428 19:33:28.415877 23109 net.cpp:200] ip2 needs backward computation.
I0428 19:33:28.415882 23109 net.cpp:200] relu1 needs backward computation.
I0428 19:33:28.415886 23109 net.cpp:200] ip1 needs backward computation.
I0428 19:33:28.415891 23109 net.cpp:200] pool0 needs backward computation.
I0428 19:33:28.415896 23109 net.cpp:200] conv0 needs backward computation.
I0428 19:33:28.415901 23109 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:28.415907 23109 net.cpp:202] mnist does not need backward computation.
I0428 19:33:28.415913 23109 net.cpp:244] This network produces output accuracy
I0428 19:33:28.415920 23109 net.cpp:244] This network produces output loss
I0428 19:33:28.415944 23109 net.cpp:257] Network initialization done.
I0428 19:33:28.415989 23109 solver.cpp:56] Solver scaffolding done.
I0428 19:33:28.416281 23109 caffe.cpp:248] Starting Optimization
I0428 19:33:28.416288 23109 solver.cpp:273] Solving LeNet
I0428 19:33:28.416293 23109 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:28.417141 23109 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:28.424046 23109 blocking_queue.cpp:49] Waiting for data
I0428 19:33:28.494434 23116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:28.495172 23109 solver.cpp:398]     Test net output #0: accuracy = 0.0856
I0428 19:33:28.495193 23109 solver.cpp:398]     Test net output #1: loss = 2.31834 (* 1 = 2.31834 loss)
I0428 19:33:28.498807 23109 solver.cpp:219] Iteration 0 (2.75998 iter/s, 0.0824821s/100 iters), loss = 2.33083
I0428 19:33:28.498832 23109 solver.cpp:238]     Train net output #0: loss = 2.33083 (* 1 = 2.33083 loss)
I0428 19:33:28.498863 23109 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:28.602675 23109 solver.cpp:219] Iteration 100 (963.148 iter/s, 0.103826s/100 iters), loss = 0.964413
I0428 19:33:28.602723 23109 solver.cpp:238]     Train net output #0: loss = 0.964413 (* 1 = 0.964413 loss)
I0428 19:33:28.602741 23109 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:28.706462 23109 solver.cpp:219] Iteration 200 (963.993 iter/s, 0.103735s/100 iters), loss = 0.826987
I0428 19:33:28.706496 23109 solver.cpp:238]     Train net output #0: loss = 0.826987 (* 1 = 0.826987 loss)
I0428 19:33:28.706508 23109 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:28.803894 23109 solver.cpp:219] Iteration 300 (1026.79 iter/s, 0.0973906s/100 iters), loss = 0.71253
I0428 19:33:28.803923 23109 solver.cpp:238]     Train net output #0: loss = 0.71253 (* 1 = 0.71253 loss)
I0428 19:33:28.803933 23109 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:28.899612 23109 solver.cpp:219] Iteration 400 (1045.12 iter/s, 0.0956826s/100 iters), loss = 0.43021
I0428 19:33:28.899639 23109 solver.cpp:238]     Train net output #0: loss = 0.43021 (* 1 = 0.43021 loss)
I0428 19:33:28.899648 23109 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:28.994768 23109 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:29.070967 23116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:29.071797 23109 solver.cpp:398]     Test net output #0: accuracy = 0.7587
I0428 19:33:29.071820 23109 solver.cpp:398]     Test net output #1: loss = 0.618907 (* 1 = 0.618907 loss)
I0428 19:33:29.072734 23109 solver.cpp:219] Iteration 500 (577.759 iter/s, 0.173083s/100 iters), loss = 0.63035
I0428 19:33:29.072772 23109 solver.cpp:238]     Train net output #0: loss = 0.63035 (* 1 = 0.63035 loss)
I0428 19:33:29.072782 23109 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:29.177836 23109 solver.cpp:219] Iteration 600 (951.862 iter/s, 0.105057s/100 iters), loss = 0.425352
I0428 19:33:29.177863 23109 solver.cpp:238]     Train net output #0: loss = 0.425352 (* 1 = 0.425352 loss)
I0428 19:33:29.177872 23109 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:29.275635 23109 solver.cpp:219] Iteration 700 (1022.87 iter/s, 0.0977644s/100 iters), loss = 0.468664
I0428 19:33:29.275663 23109 solver.cpp:238]     Train net output #0: loss = 0.468664 (* 1 = 0.468664 loss)
I0428 19:33:29.275672 23109 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:29.371351 23109 solver.cpp:219] Iteration 800 (1045.34 iter/s, 0.0956631s/100 iters), loss = 0.421116
I0428 19:33:29.371379 23109 solver.cpp:238]     Train net output #0: loss = 0.421116 (* 1 = 0.421116 loss)
I0428 19:33:29.371389 23109 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:29.467183 23109 solver.cpp:219] Iteration 900 (1043.87 iter/s, 0.0957971s/100 iters), loss = 0.244322
I0428 19:33:29.467211 23109 solver.cpp:238]     Train net output #0: loss = 0.244322 (* 1 = 0.244322 loss)
I0428 19:33:29.467219 23109 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:29.499290 23115 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:29.562260 23109 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:29.564211 23109 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:29.565554 23109 solver.cpp:311] Iteration 1000, loss = 0.332879
I0428 19:33:29.565570 23109 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:29.635285 23116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:29.636345 23109 solver.cpp:398]     Test net output #0: accuracy = 0.8714
I0428 19:33:29.636365 23109 solver.cpp:398]     Test net output #1: loss = 0.345427 (* 1 = 0.345427 loss)
I0428 19:33:29.636376 23109 solver.cpp:316] Optimization Done.
I0428 19:33:29.636382 23109 caffe.cpp:259] Optimization Done.
