I0428 19:44:10.841092 25548 caffe.cpp:218] Using GPUs 0
I0428 19:44:10.882208 25548 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:11.399617 25548 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test441.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:11.399757 25548 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test441.prototxt
I0428 19:44:11.400171 25548 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:11.400192 25548 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:11.400293 25548 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:11.400372 25548 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:11.400468 25548 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:11.400490 25548 net.cpp:86] Creating Layer mnist
I0428 19:44:11.400501 25548 net.cpp:382] mnist -> data
I0428 19:44:11.400521 25548 net.cpp:382] mnist -> label
I0428 19:44:11.401625 25548 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:11.404072 25548 net.cpp:124] Setting up mnist
I0428 19:44:11.404090 25548 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:11.404098 25548 net.cpp:131] Top shape: 64 (64)
I0428 19:44:11.404100 25548 net.cpp:139] Memory required for data: 200960
I0428 19:44:11.404108 25548 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:11.404129 25548 net.cpp:86] Creating Layer conv0
I0428 19:44:11.404150 25548 net.cpp:408] conv0 <- data
I0428 19:44:11.404162 25548 net.cpp:382] conv0 -> conv0
I0428 19:44:11.694368 25548 net.cpp:124] Setting up conv0
I0428 19:44:11.694399 25548 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:11.694404 25548 net.cpp:139] Memory required for data: 495872
I0428 19:44:11.694422 25548 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:11.694437 25548 net.cpp:86] Creating Layer pool0
I0428 19:44:11.694442 25548 net.cpp:408] pool0 <- conv0
I0428 19:44:11.694448 25548 net.cpp:382] pool0 -> pool0
I0428 19:44:11.694504 25548 net.cpp:124] Setting up pool0
I0428 19:44:11.694511 25548 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:11.694515 25548 net.cpp:139] Memory required for data: 569600
I0428 19:44:11.694519 25548 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:11.694530 25548 net.cpp:86] Creating Layer conv1
I0428 19:44:11.694535 25548 net.cpp:408] conv1 <- pool0
I0428 19:44:11.694540 25548 net.cpp:382] conv1 -> conv1
I0428 19:44:11.697680 25548 net.cpp:124] Setting up conv1
I0428 19:44:11.697697 25548 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:11.697702 25548 net.cpp:139] Memory required for data: 1388800
I0428 19:44:11.697713 25548 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:11.697722 25548 net.cpp:86] Creating Layer pool1
I0428 19:44:11.697727 25548 net.cpp:408] pool1 <- conv1
I0428 19:44:11.697733 25548 net.cpp:382] pool1 -> pool1
I0428 19:44:11.697777 25548 net.cpp:124] Setting up pool1
I0428 19:44:11.697784 25548 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:11.697788 25548 net.cpp:139] Memory required for data: 1593600
I0428 19:44:11.697791 25548 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:11.697799 25548 net.cpp:86] Creating Layer ip1
I0428 19:44:11.697803 25548 net.cpp:408] ip1 <- pool1
I0428 19:44:11.697808 25548 net.cpp:382] ip1 -> ip1
I0428 19:44:11.698949 25548 net.cpp:124] Setting up ip1
I0428 19:44:11.698967 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.698974 25548 net.cpp:139] Memory required for data: 1596160
I0428 19:44:11.698984 25548 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:11.698992 25548 net.cpp:86] Creating Layer relu1
I0428 19:44:11.698997 25548 net.cpp:408] relu1 <- ip1
I0428 19:44:11.699002 25548 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:11.699210 25548 net.cpp:124] Setting up relu1
I0428 19:44:11.699221 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.699225 25548 net.cpp:139] Memory required for data: 1598720
I0428 19:44:11.699229 25548 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:11.699237 25548 net.cpp:86] Creating Layer ip2
I0428 19:44:11.699241 25548 net.cpp:408] ip2 <- ip1
I0428 19:44:11.699247 25548 net.cpp:382] ip2 -> ip2
I0428 19:44:11.699365 25548 net.cpp:124] Setting up ip2
I0428 19:44:11.699373 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.699376 25548 net.cpp:139] Memory required for data: 1601280
I0428 19:44:11.699383 25548 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:11.699390 25548 net.cpp:86] Creating Layer relu2
I0428 19:44:11.699394 25548 net.cpp:408] relu2 <- ip2
I0428 19:44:11.699399 25548 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:11.700249 25548 net.cpp:124] Setting up relu2
I0428 19:44:11.700264 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.700268 25548 net.cpp:139] Memory required for data: 1603840
I0428 19:44:11.700273 25548 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:11.700281 25548 net.cpp:86] Creating Layer ip3
I0428 19:44:11.700285 25548 net.cpp:408] ip3 <- ip2
I0428 19:44:11.700292 25548 net.cpp:382] ip3 -> ip3
I0428 19:44:11.700410 25548 net.cpp:124] Setting up ip3
I0428 19:44:11.700418 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.700423 25548 net.cpp:139] Memory required for data: 1606400
I0428 19:44:11.700433 25548 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:11.700439 25548 net.cpp:86] Creating Layer relu3
I0428 19:44:11.700443 25548 net.cpp:408] relu3 <- ip3
I0428 19:44:11.700448 25548 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:11.700645 25548 net.cpp:124] Setting up relu3
I0428 19:44:11.700655 25548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:11.700660 25548 net.cpp:139] Memory required for data: 1608960
I0428 19:44:11.700664 25548 layer_factory.hpp:77] Creating layer loss
I0428 19:44:11.700671 25548 net.cpp:86] Creating Layer loss
I0428 19:44:11.700675 25548 net.cpp:408] loss <- ip3
I0428 19:44:11.700680 25548 net.cpp:408] loss <- label
I0428 19:44:11.700686 25548 net.cpp:382] loss -> loss
I0428 19:44:11.700702 25548 layer_factory.hpp:77] Creating layer loss
I0428 19:44:11.700978 25548 net.cpp:124] Setting up loss
I0428 19:44:11.700989 25548 net.cpp:131] Top shape: (1)
I0428 19:44:11.700994 25548 net.cpp:134]     with loss weight 1
I0428 19:44:11.701010 25548 net.cpp:139] Memory required for data: 1608964
I0428 19:44:11.701014 25548 net.cpp:200] loss needs backward computation.
I0428 19:44:11.701019 25548 net.cpp:200] relu3 needs backward computation.
I0428 19:44:11.701022 25548 net.cpp:200] ip3 needs backward computation.
I0428 19:44:11.701026 25548 net.cpp:200] relu2 needs backward computation.
I0428 19:44:11.701030 25548 net.cpp:200] ip2 needs backward computation.
I0428 19:44:11.701032 25548 net.cpp:200] relu1 needs backward computation.
I0428 19:44:11.701036 25548 net.cpp:200] ip1 needs backward computation.
I0428 19:44:11.701040 25548 net.cpp:200] pool1 needs backward computation.
I0428 19:44:11.701043 25548 net.cpp:200] conv1 needs backward computation.
I0428 19:44:11.701047 25548 net.cpp:200] pool0 needs backward computation.
I0428 19:44:11.701051 25548 net.cpp:200] conv0 needs backward computation.
I0428 19:44:11.701056 25548 net.cpp:202] mnist does not need backward computation.
I0428 19:44:11.701059 25548 net.cpp:244] This network produces output loss
I0428 19:44:11.701071 25548 net.cpp:257] Network initialization done.
I0428 19:44:11.701452 25548 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test441.prototxt
I0428 19:44:11.701483 25548 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:11.701591 25548 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:11.701683 25548 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:11.701735 25548 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:11.701750 25548 net.cpp:86] Creating Layer mnist
I0428 19:44:11.701756 25548 net.cpp:382] mnist -> data
I0428 19:44:11.701764 25548 net.cpp:382] mnist -> label
I0428 19:44:11.701866 25548 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:11.704051 25548 net.cpp:124] Setting up mnist
I0428 19:44:11.704067 25548 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:11.704073 25548 net.cpp:131] Top shape: 100 (100)
I0428 19:44:11.704077 25548 net.cpp:139] Memory required for data: 314000
I0428 19:44:11.704082 25548 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:11.704090 25548 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:11.704094 25548 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:11.704100 25548 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:11.704108 25548 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:11.704159 25548 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:11.704167 25548 net.cpp:131] Top shape: 100 (100)
I0428 19:44:11.704171 25548 net.cpp:131] Top shape: 100 (100)
I0428 19:44:11.704175 25548 net.cpp:139] Memory required for data: 314800
I0428 19:44:11.704179 25548 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:11.704188 25548 net.cpp:86] Creating Layer conv0
I0428 19:44:11.704192 25548 net.cpp:408] conv0 <- data
I0428 19:44:11.704198 25548 net.cpp:382] conv0 -> conv0
I0428 19:44:11.705989 25548 net.cpp:124] Setting up conv0
I0428 19:44:11.706007 25548 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:11.706012 25548 net.cpp:139] Memory required for data: 775600
I0428 19:44:11.706022 25548 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:11.706030 25548 net.cpp:86] Creating Layer pool0
I0428 19:44:11.706035 25548 net.cpp:408] pool0 <- conv0
I0428 19:44:11.706042 25548 net.cpp:382] pool0 -> pool0
I0428 19:44:11.706084 25548 net.cpp:124] Setting up pool0
I0428 19:44:11.706094 25548 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:11.706099 25548 net.cpp:139] Memory required for data: 890800
I0428 19:44:11.706101 25548 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:11.706111 25548 net.cpp:86] Creating Layer conv1
I0428 19:44:11.706115 25548 net.cpp:408] conv1 <- pool0
I0428 19:44:11.706121 25548 net.cpp:382] conv1 -> conv1
I0428 19:44:11.707912 25548 net.cpp:124] Setting up conv1
I0428 19:44:11.707928 25548 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:11.707933 25548 net.cpp:139] Memory required for data: 2170800
I0428 19:44:11.707944 25548 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:11.707952 25548 net.cpp:86] Creating Layer pool1
I0428 19:44:11.707957 25548 net.cpp:408] pool1 <- conv1
I0428 19:44:11.707962 25548 net.cpp:382] pool1 -> pool1
I0428 19:44:11.708006 25548 net.cpp:124] Setting up pool1
I0428 19:44:11.708015 25548 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:11.708027 25548 net.cpp:139] Memory required for data: 2490800
I0428 19:44:11.708039 25548 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:11.708045 25548 net.cpp:86] Creating Layer ip1
I0428 19:44:11.708050 25548 net.cpp:408] ip1 <- pool1
I0428 19:44:11.708055 25548 net.cpp:382] ip1 -> ip1
I0428 19:44:11.708226 25548 net.cpp:124] Setting up ip1
I0428 19:44:11.708235 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.708251 25548 net.cpp:139] Memory required for data: 2494800
I0428 19:44:11.708261 25548 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:11.708267 25548 net.cpp:86] Creating Layer relu1
I0428 19:44:11.708277 25548 net.cpp:408] relu1 <- ip1
I0428 19:44:11.708288 25548 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:11.708520 25548 net.cpp:124] Setting up relu1
I0428 19:44:11.708531 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.708536 25548 net.cpp:139] Memory required for data: 2498800
I0428 19:44:11.708539 25548 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:11.708549 25548 net.cpp:86] Creating Layer ip2
I0428 19:44:11.708552 25548 net.cpp:408] ip2 <- ip1
I0428 19:44:11.708559 25548 net.cpp:382] ip2 -> ip2
I0428 19:44:11.708698 25548 net.cpp:124] Setting up ip2
I0428 19:44:11.708709 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.708712 25548 net.cpp:139] Memory required for data: 2502800
I0428 19:44:11.708719 25548 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:11.708724 25548 net.cpp:86] Creating Layer relu2
I0428 19:44:11.708729 25548 net.cpp:408] relu2 <- ip2
I0428 19:44:11.708734 25548 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:11.708935 25548 net.cpp:124] Setting up relu2
I0428 19:44:11.708946 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.708958 25548 net.cpp:139] Memory required for data: 2506800
I0428 19:44:11.708962 25548 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:11.708969 25548 net.cpp:86] Creating Layer ip3
I0428 19:44:11.708979 25548 net.cpp:408] ip3 <- ip2
I0428 19:44:11.708986 25548 net.cpp:382] ip3 -> ip3
I0428 19:44:11.709100 25548 net.cpp:124] Setting up ip3
I0428 19:44:11.709107 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.709111 25548 net.cpp:139] Memory required for data: 2510800
I0428 19:44:11.709120 25548 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:11.709126 25548 net.cpp:86] Creating Layer relu3
I0428 19:44:11.709131 25548 net.cpp:408] relu3 <- ip3
I0428 19:44:11.709136 25548 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:11.710078 25548 net.cpp:124] Setting up relu3
I0428 19:44:11.710093 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.710096 25548 net.cpp:139] Memory required for data: 2514800
I0428 19:44:11.710101 25548 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:11.710108 25548 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:11.710113 25548 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:11.710119 25548 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:11.710132 25548 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:11.710177 25548 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:11.710186 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.710189 25548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:11.710193 25548 net.cpp:139] Memory required for data: 2522800
I0428 19:44:11.710196 25548 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:11.710203 25548 net.cpp:86] Creating Layer accuracy
I0428 19:44:11.710206 25548 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:11.710211 25548 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:11.710217 25548 net.cpp:382] accuracy -> accuracy
I0428 19:44:11.710225 25548 net.cpp:124] Setting up accuracy
I0428 19:44:11.710237 25548 net.cpp:131] Top shape: (1)
I0428 19:44:11.710239 25548 net.cpp:139] Memory required for data: 2522804
I0428 19:44:11.710253 25548 layer_factory.hpp:77] Creating layer loss
I0428 19:44:11.710258 25548 net.cpp:86] Creating Layer loss
I0428 19:44:11.710261 25548 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:11.710266 25548 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:11.710276 25548 net.cpp:382] loss -> loss
I0428 19:44:11.710284 25548 layer_factory.hpp:77] Creating layer loss
I0428 19:44:11.710561 25548 net.cpp:124] Setting up loss
I0428 19:44:11.710573 25548 net.cpp:131] Top shape: (1)
I0428 19:44:11.710577 25548 net.cpp:134]     with loss weight 1
I0428 19:44:11.710587 25548 net.cpp:139] Memory required for data: 2522808
I0428 19:44:11.710602 25548 net.cpp:200] loss needs backward computation.
I0428 19:44:11.710608 25548 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:11.710613 25548 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:11.710615 25548 net.cpp:200] relu3 needs backward computation.
I0428 19:44:11.710619 25548 net.cpp:200] ip3 needs backward computation.
I0428 19:44:11.710623 25548 net.cpp:200] relu2 needs backward computation.
I0428 19:44:11.710628 25548 net.cpp:200] ip2 needs backward computation.
I0428 19:44:11.710630 25548 net.cpp:200] relu1 needs backward computation.
I0428 19:44:11.710634 25548 net.cpp:200] ip1 needs backward computation.
I0428 19:44:11.710638 25548 net.cpp:200] pool1 needs backward computation.
I0428 19:44:11.710642 25548 net.cpp:200] conv1 needs backward computation.
I0428 19:44:11.710646 25548 net.cpp:200] pool0 needs backward computation.
I0428 19:44:11.710649 25548 net.cpp:200] conv0 needs backward computation.
I0428 19:44:11.710655 25548 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:11.710659 25548 net.cpp:202] mnist does not need backward computation.
I0428 19:44:11.710664 25548 net.cpp:244] This network produces output accuracy
I0428 19:44:11.710667 25548 net.cpp:244] This network produces output loss
I0428 19:44:11.710680 25548 net.cpp:257] Network initialization done.
I0428 19:44:11.710731 25548 solver.cpp:56] Solver scaffolding done.
I0428 19:44:11.711205 25548 caffe.cpp:248] Starting Optimization
I0428 19:44:11.711213 25548 solver.cpp:273] Solving LeNet
I0428 19:44:11.711217 25548 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:11.711397 25548 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:11.716917 25548 blocking_queue.cpp:49] Waiting for data
I0428 19:44:11.762372 25555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:11.762845 25548 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 19:44:11.762866 25548 solver.cpp:398]     Test net output #1: loss = 2.32581 (* 1 = 2.32581 loss)
I0428 19:44:11.764873 25548 solver.cpp:219] Iteration 0 (-1.15234e-30 iter/s, 0.05363s/100 iters), loss = 2.34494
I0428 19:44:11.764899 25548 solver.cpp:238]     Train net output #0: loss = 2.34494 (* 1 = 2.34494 loss)
I0428 19:44:11.764914 25548 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:11.865262 25548 solver.cpp:219] Iteration 100 (996.482 iter/s, 0.100353s/100 iters), loss = 1.37564
I0428 19:44:11.865300 25548 solver.cpp:238]     Train net output #0: loss = 1.37564 (* 1 = 1.37564 loss)
I0428 19:44:11.865322 25548 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:11.970880 25548 solver.cpp:219] Iteration 200 (947.135 iter/s, 0.105582s/100 iters), loss = 0.711211
I0428 19:44:11.970909 25548 solver.cpp:238]     Train net output #0: loss = 0.711211 (* 1 = 0.711211 loss)
I0428 19:44:11.970928 25548 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:12.076398 25548 solver.cpp:219] Iteration 300 (948.064 iter/s, 0.105478s/100 iters), loss = 0.629209
I0428 19:44:12.076429 25548 solver.cpp:238]     Train net output #0: loss = 0.629209 (* 1 = 0.629209 loss)
I0428 19:44:12.076437 25548 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:12.184114 25548 solver.cpp:219] Iteration 400 (928.717 iter/s, 0.107675s/100 iters), loss = 0.410376
I0428 19:44:12.184144 25548 solver.cpp:238]     Train net output #0: loss = 0.410376 (* 1 = 0.410376 loss)
I0428 19:44:12.184152 25548 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:12.289671 25548 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:12.336159 25555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:12.336645 25548 solver.cpp:398]     Test net output #0: accuracy = 0.9088
I0428 19:44:12.336668 25548 solver.cpp:398]     Test net output #1: loss = 0.303178 (* 1 = 0.303178 loss)
I0428 19:44:12.337720 25548 solver.cpp:219] Iteration 500 (651.202 iter/s, 0.153562s/100 iters), loss = 0.231948
I0428 19:44:12.337787 25548 solver.cpp:238]     Train net output #0: loss = 0.231948 (* 1 = 0.231948 loss)
I0428 19:44:12.337827 25548 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:12.445777 25548 solver.cpp:219] Iteration 600 (926.068 iter/s, 0.107983s/100 iters), loss = 0.218158
I0428 19:44:12.445801 25548 solver.cpp:238]     Train net output #0: loss = 0.218158 (* 1 = 0.218158 loss)
I0428 19:44:12.445823 25548 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:12.548694 25548 solver.cpp:219] Iteration 700 (971.976 iter/s, 0.102883s/100 iters), loss = 0.353257
I0428 19:44:12.548718 25548 solver.cpp:238]     Train net output #0: loss = 0.353257 (* 1 = 0.353257 loss)
I0428 19:44:12.548743 25548 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:12.653770 25548 solver.cpp:219] Iteration 800 (952.047 iter/s, 0.105037s/100 iters), loss = 0.327329
I0428 19:44:12.653811 25548 solver.cpp:238]     Train net output #0: loss = 0.327329 (* 1 = 0.327329 loss)
I0428 19:44:12.653832 25548 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:12.764626 25548 solver.cpp:219] Iteration 900 (902.486 iter/s, 0.110805s/100 iters), loss = 0.258612
I0428 19:44:12.764655 25548 solver.cpp:238]     Train net output #0: loss = 0.258612 (* 1 = 0.258612 loss)
I0428 19:44:12.764662 25548 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:12.798892 25554 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:12.867238 25548 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:12.868289 25548 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:12.868850 25548 solver.cpp:311] Iteration 1000, loss = 0.213434
I0428 19:44:12.868868 25548 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:12.932325 25555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:12.932848 25548 solver.cpp:398]     Test net output #0: accuracy = 0.9462
I0428 19:44:12.932871 25548 solver.cpp:398]     Test net output #1: loss = 0.174716 (* 1 = 0.174716 loss)
I0428 19:44:12.932878 25548 solver.cpp:316] Optimization Done.
I0428 19:44:12.932883 25548 caffe.cpp:259] Optimization Done.
