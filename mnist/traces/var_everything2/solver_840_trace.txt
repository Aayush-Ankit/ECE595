I0428 19:59:10.904882 29177 caffe.cpp:218] Using GPUs 0
I0428 19:59:10.946535 29177 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:11.549054 29177 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test840.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:11.549219 29177 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test840.prototxt
I0428 19:59:11.549792 29177 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:11.549816 29177 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:11.549955 29177 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:11.550055 29177 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:11.550179 29177 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:11.550211 29177 net.cpp:86] Creating Layer mnist
I0428 19:59:11.550222 29177 net.cpp:382] mnist -> data
I0428 19:59:11.550251 29177 net.cpp:382] mnist -> label
I0428 19:59:11.551692 29177 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:11.554908 29177 net.cpp:124] Setting up mnist
I0428 19:59:11.554929 29177 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:11.554937 29177 net.cpp:131] Top shape: 64 (64)
I0428 19:59:11.554944 29177 net.cpp:139] Memory required for data: 200960
I0428 19:59:11.554953 29177 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:11.554973 29177 net.cpp:86] Creating Layer conv0
I0428 19:59:11.554999 29177 net.cpp:408] conv0 <- data
I0428 19:59:11.555016 29177 net.cpp:382] conv0 -> conv0
I0428 19:59:11.824167 29177 net.cpp:124] Setting up conv0
I0428 19:59:11.824193 29177 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:11.824196 29177 net.cpp:139] Memory required for data: 1675520
I0428 19:59:11.824210 29177 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:11.824223 29177 net.cpp:86] Creating Layer pool0
I0428 19:59:11.824228 29177 net.cpp:408] pool0 <- conv0
I0428 19:59:11.824231 29177 net.cpp:382] pool0 -> pool0
I0428 19:59:11.824291 29177 net.cpp:124] Setting up pool0
I0428 19:59:11.824296 29177 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:11.824298 29177 net.cpp:139] Memory required for data: 2044160
I0428 19:59:11.824301 29177 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:11.824311 29177 net.cpp:86] Creating Layer conv1
I0428 19:59:11.824314 29177 net.cpp:408] conv1 <- pool0
I0428 19:59:11.824319 29177 net.cpp:382] conv1 -> conv1
I0428 19:59:11.827113 29177 net.cpp:124] Setting up conv1
I0428 19:59:11.827142 29177 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:11.827147 29177 net.cpp:139] Memory required for data: 2208000
I0428 19:59:11.827154 29177 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:11.827162 29177 net.cpp:86] Creating Layer pool1
I0428 19:59:11.827164 29177 net.cpp:408] pool1 <- conv1
I0428 19:59:11.827169 29177 net.cpp:382] pool1 -> pool1
I0428 19:59:11.827221 29177 net.cpp:124] Setting up pool1
I0428 19:59:11.827226 29177 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:11.827229 29177 net.cpp:139] Memory required for data: 2248960
I0428 19:59:11.827232 29177 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:11.827240 29177 net.cpp:86] Creating Layer ip1
I0428 19:59:11.827244 29177 net.cpp:408] ip1 <- pool1
I0428 19:59:11.827247 29177 net.cpp:382] ip1 -> ip1
I0428 19:59:11.827365 29177 net.cpp:124] Setting up ip1
I0428 19:59:11.827373 29177 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:11.827375 29177 net.cpp:139] Memory required for data: 2255360
I0428 19:59:11.827383 29177 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:11.827389 29177 net.cpp:86] Creating Layer relu1
I0428 19:59:11.827391 29177 net.cpp:408] relu1 <- ip1
I0428 19:59:11.827395 29177 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:11.827550 29177 net.cpp:124] Setting up relu1
I0428 19:59:11.827559 29177 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:11.827563 29177 net.cpp:139] Memory required for data: 2261760
I0428 19:59:11.827565 29177 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:11.827571 29177 net.cpp:86] Creating Layer ip2
I0428 19:59:11.827574 29177 net.cpp:408] ip2 <- ip1
I0428 19:59:11.827579 29177 net.cpp:382] ip2 -> ip2
I0428 19:59:11.827683 29177 net.cpp:124] Setting up ip2
I0428 19:59:11.827690 29177 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:11.827693 29177 net.cpp:139] Memory required for data: 2264320
I0428 19:59:11.827698 29177 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:11.827704 29177 net.cpp:86] Creating Layer relu2
I0428 19:59:11.827708 29177 net.cpp:408] relu2 <- ip2
I0428 19:59:11.827711 29177 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:11.828441 29177 net.cpp:124] Setting up relu2
I0428 19:59:11.828454 29177 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:11.828456 29177 net.cpp:139] Memory required for data: 2266880
I0428 19:59:11.828460 29177 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:11.828467 29177 net.cpp:86] Creating Layer ip3
I0428 19:59:11.828470 29177 net.cpp:408] ip3 <- ip2
I0428 19:59:11.828475 29177 net.cpp:382] ip3 -> ip3
I0428 19:59:11.828586 29177 net.cpp:124] Setting up ip3
I0428 19:59:11.828593 29177 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:11.828596 29177 net.cpp:139] Memory required for data: 2269440
I0428 19:59:11.828604 29177 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:11.828609 29177 net.cpp:86] Creating Layer relu3
I0428 19:59:11.828613 29177 net.cpp:408] relu3 <- ip3
I0428 19:59:11.828616 29177 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:11.828838 29177 net.cpp:124] Setting up relu3
I0428 19:59:11.828848 29177 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:11.828851 29177 net.cpp:139] Memory required for data: 2272000
I0428 19:59:11.828855 29177 layer_factory.hpp:77] Creating layer loss
I0428 19:59:11.828861 29177 net.cpp:86] Creating Layer loss
I0428 19:59:11.828866 29177 net.cpp:408] loss <- ip3
I0428 19:59:11.828869 29177 net.cpp:408] loss <- label
I0428 19:59:11.828876 29177 net.cpp:382] loss -> loss
I0428 19:59:11.828891 29177 layer_factory.hpp:77] Creating layer loss
I0428 19:59:11.829202 29177 net.cpp:124] Setting up loss
I0428 19:59:11.829224 29177 net.cpp:131] Top shape: (1)
I0428 19:59:11.829227 29177 net.cpp:134]     with loss weight 1
I0428 19:59:11.829257 29177 net.cpp:139] Memory required for data: 2272004
I0428 19:59:11.829259 29177 net.cpp:200] loss needs backward computation.
I0428 19:59:11.829262 29177 net.cpp:200] relu3 needs backward computation.
I0428 19:59:11.829265 29177 net.cpp:200] ip3 needs backward computation.
I0428 19:59:11.829268 29177 net.cpp:200] relu2 needs backward computation.
I0428 19:59:11.829270 29177 net.cpp:200] ip2 needs backward computation.
I0428 19:59:11.829273 29177 net.cpp:200] relu1 needs backward computation.
I0428 19:59:11.829277 29177 net.cpp:200] ip1 needs backward computation.
I0428 19:59:11.829278 29177 net.cpp:200] pool1 needs backward computation.
I0428 19:59:11.829282 29177 net.cpp:200] conv1 needs backward computation.
I0428 19:59:11.829284 29177 net.cpp:200] pool0 needs backward computation.
I0428 19:59:11.829288 29177 net.cpp:200] conv0 needs backward computation.
I0428 19:59:11.829290 29177 net.cpp:202] mnist does not need backward computation.
I0428 19:59:11.829293 29177 net.cpp:244] This network produces output loss
I0428 19:59:11.829303 29177 net.cpp:257] Network initialization done.
I0428 19:59:11.829630 29177 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test840.prototxt
I0428 19:59:11.829658 29177 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:11.829753 29177 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:11.829838 29177 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:11.829910 29177 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:11.829924 29177 net.cpp:86] Creating Layer mnist
I0428 19:59:11.829929 29177 net.cpp:382] mnist -> data
I0428 19:59:11.829936 29177 net.cpp:382] mnist -> label
I0428 19:59:11.830024 29177 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:11.832057 29177 net.cpp:124] Setting up mnist
I0428 19:59:11.832070 29177 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:11.832089 29177 net.cpp:131] Top shape: 100 (100)
I0428 19:59:11.832093 29177 net.cpp:139] Memory required for data: 314000
I0428 19:59:11.832111 29177 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:11.832129 29177 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:11.832134 29177 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:11.832154 29177 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:11.832160 29177 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:11.832250 29177 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:11.832258 29177 net.cpp:131] Top shape: 100 (100)
I0428 19:59:11.832262 29177 net.cpp:131] Top shape: 100 (100)
I0428 19:59:11.832265 29177 net.cpp:139] Memory required for data: 314800
I0428 19:59:11.832267 29177 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:11.832278 29177 net.cpp:86] Creating Layer conv0
I0428 19:59:11.832281 29177 net.cpp:408] conv0 <- data
I0428 19:59:11.832288 29177 net.cpp:382] conv0 -> conv0
I0428 19:59:11.834055 29177 net.cpp:124] Setting up conv0
I0428 19:59:11.834069 29177 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:11.834072 29177 net.cpp:139] Memory required for data: 2618800
I0428 19:59:11.834082 29177 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:11.834089 29177 net.cpp:86] Creating Layer pool0
I0428 19:59:11.834107 29177 net.cpp:408] pool0 <- conv0
I0428 19:59:11.834111 29177 net.cpp:382] pool0 -> pool0
I0428 19:59:11.834148 29177 net.cpp:124] Setting up pool0
I0428 19:59:11.834164 29177 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:11.834167 29177 net.cpp:139] Memory required for data: 3194800
I0428 19:59:11.834169 29177 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:11.834178 29177 net.cpp:86] Creating Layer conv1
I0428 19:59:11.834182 29177 net.cpp:408] conv1 <- pool0
I0428 19:59:11.834187 29177 net.cpp:382] conv1 -> conv1
I0428 19:59:11.836434 29177 net.cpp:124] Setting up conv1
I0428 19:59:11.836448 29177 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:11.836452 29177 net.cpp:139] Memory required for data: 3450800
I0428 19:59:11.836460 29177 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:11.836467 29177 net.cpp:86] Creating Layer pool1
I0428 19:59:11.836470 29177 net.cpp:408] pool1 <- conv1
I0428 19:59:11.836477 29177 net.cpp:382] pool1 -> pool1
I0428 19:59:11.836546 29177 net.cpp:124] Setting up pool1
I0428 19:59:11.836560 29177 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:11.836562 29177 net.cpp:139] Memory required for data: 3514800
I0428 19:59:11.836565 29177 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:11.836572 29177 net.cpp:86] Creating Layer ip1
I0428 19:59:11.836575 29177 net.cpp:408] ip1 <- pool1
I0428 19:59:11.836580 29177 net.cpp:382] ip1 -> ip1
I0428 19:59:11.836752 29177 net.cpp:124] Setting up ip1
I0428 19:59:11.836762 29177 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:11.836776 29177 net.cpp:139] Memory required for data: 3524800
I0428 19:59:11.836782 29177 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:11.836788 29177 net.cpp:86] Creating Layer relu1
I0428 19:59:11.836791 29177 net.cpp:408] relu1 <- ip1
I0428 19:59:11.836796 29177 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:11.837030 29177 net.cpp:124] Setting up relu1
I0428 19:59:11.837041 29177 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:11.837044 29177 net.cpp:139] Memory required for data: 3534800
I0428 19:59:11.837047 29177 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:11.837054 29177 net.cpp:86] Creating Layer ip2
I0428 19:59:11.837059 29177 net.cpp:408] ip2 <- ip1
I0428 19:59:11.837064 29177 net.cpp:382] ip2 -> ip2
I0428 19:59:11.837170 29177 net.cpp:124] Setting up ip2
I0428 19:59:11.837191 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.837218 29177 net.cpp:139] Memory required for data: 3538800
I0428 19:59:11.837222 29177 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:11.837227 29177 net.cpp:86] Creating Layer relu2
I0428 19:59:11.837230 29177 net.cpp:408] relu2 <- ip2
I0428 19:59:11.837236 29177 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:11.837385 29177 net.cpp:124] Setting up relu2
I0428 19:59:11.837394 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.837397 29177 net.cpp:139] Memory required for data: 3542800
I0428 19:59:11.837400 29177 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:11.837406 29177 net.cpp:86] Creating Layer ip3
I0428 19:59:11.837409 29177 net.cpp:408] ip3 <- ip2
I0428 19:59:11.837414 29177 net.cpp:382] ip3 -> ip3
I0428 19:59:11.837522 29177 net.cpp:124] Setting up ip3
I0428 19:59:11.837528 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.837537 29177 net.cpp:139] Memory required for data: 3546800
I0428 19:59:11.837544 29177 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:11.837549 29177 net.cpp:86] Creating Layer relu3
I0428 19:59:11.837551 29177 net.cpp:408] relu3 <- ip3
I0428 19:59:11.837558 29177 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:11.838475 29177 net.cpp:124] Setting up relu3
I0428 19:59:11.838486 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.838490 29177 net.cpp:139] Memory required for data: 3550800
I0428 19:59:11.838493 29177 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:11.838500 29177 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:11.838503 29177 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:11.838508 29177 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:11.838513 29177 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:11.838565 29177 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:11.838573 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.838577 29177 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:11.838579 29177 net.cpp:139] Memory required for data: 3558800
I0428 19:59:11.838582 29177 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:11.838587 29177 net.cpp:86] Creating Layer accuracy
I0428 19:59:11.838590 29177 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:11.838599 29177 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:11.838605 29177 net.cpp:382] accuracy -> accuracy
I0428 19:59:11.838613 29177 net.cpp:124] Setting up accuracy
I0428 19:59:11.838616 29177 net.cpp:131] Top shape: (1)
I0428 19:59:11.838624 29177 net.cpp:139] Memory required for data: 3558804
I0428 19:59:11.838626 29177 layer_factory.hpp:77] Creating layer loss
I0428 19:59:11.838630 29177 net.cpp:86] Creating Layer loss
I0428 19:59:11.838634 29177 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:11.838636 29177 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:11.838646 29177 net.cpp:382] loss -> loss
I0428 19:59:11.838654 29177 layer_factory.hpp:77] Creating layer loss
I0428 19:59:11.838901 29177 net.cpp:124] Setting up loss
I0428 19:59:11.838910 29177 net.cpp:131] Top shape: (1)
I0428 19:59:11.838913 29177 net.cpp:134]     with loss weight 1
I0428 19:59:11.838929 29177 net.cpp:139] Memory required for data: 3558808
I0428 19:59:11.838932 29177 net.cpp:200] loss needs backward computation.
I0428 19:59:11.838937 29177 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:11.838942 29177 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:11.838945 29177 net.cpp:200] relu3 needs backward computation.
I0428 19:59:11.838948 29177 net.cpp:200] ip3 needs backward computation.
I0428 19:59:11.838951 29177 net.cpp:200] relu2 needs backward computation.
I0428 19:59:11.838953 29177 net.cpp:200] ip2 needs backward computation.
I0428 19:59:11.838956 29177 net.cpp:200] relu1 needs backward computation.
I0428 19:59:11.838959 29177 net.cpp:200] ip1 needs backward computation.
I0428 19:59:11.838963 29177 net.cpp:200] pool1 needs backward computation.
I0428 19:59:11.838965 29177 net.cpp:200] conv1 needs backward computation.
I0428 19:59:11.838968 29177 net.cpp:200] pool0 needs backward computation.
I0428 19:59:11.838971 29177 net.cpp:200] conv0 needs backward computation.
I0428 19:59:11.838975 29177 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:11.838985 29177 net.cpp:202] mnist does not need backward computation.
I0428 19:59:11.838987 29177 net.cpp:244] This network produces output accuracy
I0428 19:59:11.839005 29177 net.cpp:244] This network produces output loss
I0428 19:59:11.839016 29177 net.cpp:257] Network initialization done.
I0428 19:59:11.839056 29177 solver.cpp:56] Solver scaffolding done.
I0428 19:59:11.839390 29177 caffe.cpp:248] Starting Optimization
I0428 19:59:11.839395 29177 solver.cpp:273] Solving LeNet
I0428 19:59:11.839397 29177 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:11.839643 29177 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:11.844089 29177 blocking_queue.cpp:49] Waiting for data
I0428 19:59:11.914820 29184 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:11.915365 29177 solver.cpp:398]     Test net output #0: accuracy = 0.103
I0428 19:59:11.915401 29177 solver.cpp:398]     Test net output #1: loss = 2.30382 (* 1 = 2.30382 loss)
I0428 19:59:11.918014 29177 solver.cpp:219] Iteration 0 (-6.70557e-31 iter/s, 0.0785777s/100 iters), loss = 2.30651
I0428 19:59:11.918036 29177 solver.cpp:238]     Train net output #0: loss = 2.30651 (* 1 = 2.30651 loss)
I0428 19:59:11.918047 29177 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:12.000669 29177 solver.cpp:219] Iteration 100 (1210.34 iter/s, 0.0826214s/100 iters), loss = 1.75559
I0428 19:59:12.000710 29177 solver.cpp:238]     Train net output #0: loss = 1.75559 (* 1 = 1.75559 loss)
I0428 19:59:12.000716 29177 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:12.087590 29177 solver.cpp:219] Iteration 200 (1151.17 iter/s, 0.086868s/100 iters), loss = 1.39663
I0428 19:59:12.087615 29177 solver.cpp:238]     Train net output #0: loss = 1.39663 (* 1 = 1.39663 loss)
I0428 19:59:12.087622 29177 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:12.173485 29177 solver.cpp:219] Iteration 300 (1164.7 iter/s, 0.0858593s/100 iters), loss = 1.36245
I0428 19:59:12.173508 29177 solver.cpp:238]     Train net output #0: loss = 1.36245 (* 1 = 1.36245 loss)
I0428 19:59:12.173530 29177 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:12.255396 29177 solver.cpp:219] Iteration 400 (1221.31 iter/s, 0.081879s/100 iters), loss = 1.31589
I0428 19:59:12.255421 29177 solver.cpp:238]     Train net output #0: loss = 1.31589 (* 1 = 1.31589 loss)
I0428 19:59:12.255429 29177 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:12.337218 29177 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:12.390647 29184 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:12.391202 29177 solver.cpp:398]     Test net output #0: accuracy = 0.5631
I0428 19:59:12.391224 29177 solver.cpp:398]     Test net output #1: loss = 1.11753 (* 1 = 1.11753 loss)
I0428 19:59:12.392036 29177 solver.cpp:219] Iteration 500 (732.05 iter/s, 0.136603s/100 iters), loss = 1.14591
I0428 19:59:12.392082 29177 solver.cpp:238]     Train net output #0: loss = 1.14591 (* 1 = 1.14591 loss)
I0428 19:59:12.392109 29177 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:12.480568 29177 solver.cpp:219] Iteration 600 (1130.26 iter/s, 0.0884749s/100 iters), loss = 0.948044
I0428 19:59:12.480599 29177 solver.cpp:238]     Train net output #0: loss = 0.948044 (* 1 = 0.948044 loss)
I0428 19:59:12.480621 29177 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:12.564481 29177 solver.cpp:219] Iteration 700 (1192.28 iter/s, 0.0838728s/100 iters), loss = 1.11201
I0428 19:59:12.564522 29177 solver.cpp:238]     Train net output #0: loss = 1.11201 (* 1 = 1.11201 loss)
I0428 19:59:12.564528 29177 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:12.644119 29177 solver.cpp:219] Iteration 800 (1256.47 iter/s, 0.0795883s/100 iters), loss = 1.03726
I0428 19:59:12.644142 29177 solver.cpp:238]     Train net output #0: loss = 1.03726 (* 1 = 1.03726 loss)
I0428 19:59:12.644163 29177 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:12.724728 29177 solver.cpp:219] Iteration 900 (1241.07 iter/s, 0.0805755s/100 iters), loss = 1.18055
I0428 19:59:12.724772 29177 solver.cpp:238]     Train net output #0: loss = 1.18055 (* 1 = 1.18055 loss)
I0428 19:59:12.724779 29177 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:12.752099 29183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:12.804852 29177 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:12.805619 29177 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:12.806160 29177 solver.cpp:311] Iteration 1000, loss = 0.986085
I0428 19:59:12.806192 29177 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:12.874653 29184 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:12.875368 29177 solver.cpp:398]     Test net output #0: accuracy = 0.5804
I0428 19:59:12.875406 29177 solver.cpp:398]     Test net output #1: loss = 1.01822 (* 1 = 1.01822 loss)
I0428 19:59:12.875413 29177 solver.cpp:316] Optimization Done.
I0428 19:59:12.875418 29177 caffe.cpp:259] Optimization Done.
