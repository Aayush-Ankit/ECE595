I0428 19:51:50.433395 27375 caffe.cpp:218] Using GPUs 0
I0428 19:51:50.470393 27375 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:50.924356 27375 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test645.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:50.924510 27375 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test645.prototxt
I0428 19:51:50.924904 27375 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:50.924935 27375 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:50.925020 27375 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:50.925086 27375 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:50.925184 27375 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:50.925204 27375 net.cpp:86] Creating Layer mnist
I0428 19:51:50.925210 27375 net.cpp:382] mnist -> data
I0428 19:51:50.925230 27375 net.cpp:382] mnist -> label
I0428 19:51:50.926173 27375 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:50.928424 27375 net.cpp:124] Setting up mnist
I0428 19:51:50.928469 27375 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:50.928474 27375 net.cpp:131] Top shape: 64 (64)
I0428 19:51:50.928478 27375 net.cpp:139] Memory required for data: 200960
I0428 19:51:50.928483 27375 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:50.928498 27375 net.cpp:86] Creating Layer conv0
I0428 19:51:50.928514 27375 net.cpp:408] conv0 <- data
I0428 19:51:50.928525 27375 net.cpp:382] conv0 -> conv0
I0428 19:51:51.161072 27375 net.cpp:124] Setting up conv0
I0428 19:51:51.161098 27375 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:51.161103 27375 net.cpp:139] Memory required for data: 938240
I0428 19:51:51.161118 27375 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:51.161144 27375 net.cpp:86] Creating Layer pool0
I0428 19:51:51.161147 27375 net.cpp:408] pool0 <- conv0
I0428 19:51:51.161154 27375 net.cpp:382] pool0 -> pool0
I0428 19:51:51.161198 27375 net.cpp:124] Setting up pool0
I0428 19:51:51.161206 27375 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:51.161209 27375 net.cpp:139] Memory required for data: 1122560
I0428 19:51:51.161212 27375 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:51.161223 27375 net.cpp:86] Creating Layer conv1
I0428 19:51:51.161226 27375 net.cpp:408] conv1 <- pool0
I0428 19:51:51.161231 27375 net.cpp:382] conv1 -> conv1
I0428 19:51:51.163918 27375 net.cpp:124] Setting up conv1
I0428 19:51:51.163933 27375 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:51.163935 27375 net.cpp:139] Memory required for data: 1532160
I0428 19:51:51.163944 27375 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:51.163951 27375 net.cpp:86] Creating Layer pool1
I0428 19:51:51.163954 27375 net.cpp:408] pool1 <- conv1
I0428 19:51:51.163959 27375 net.cpp:382] pool1 -> pool1
I0428 19:51:51.163995 27375 net.cpp:124] Setting up pool1
I0428 19:51:51.164010 27375 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:51.164012 27375 net.cpp:139] Memory required for data: 1634560
I0428 19:51:51.164016 27375 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:51.164021 27375 net.cpp:86] Creating Layer ip1
I0428 19:51:51.164024 27375 net.cpp:408] ip1 <- pool1
I0428 19:51:51.164029 27375 net.cpp:382] ip1 -> ip1
I0428 19:51:51.165014 27375 net.cpp:124] Setting up ip1
I0428 19:51:51.165027 27375 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:51.165030 27375 net.cpp:139] Memory required for data: 1640960
I0428 19:51:51.165038 27375 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:51.165045 27375 net.cpp:86] Creating Layer relu1
I0428 19:51:51.165048 27375 net.cpp:408] relu1 <- ip1
I0428 19:51:51.165052 27375 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:51.165218 27375 net.cpp:124] Setting up relu1
I0428 19:51:51.165227 27375 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:51.165230 27375 net.cpp:139] Memory required for data: 1647360
I0428 19:51:51.165233 27375 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:51.165241 27375 net.cpp:86] Creating Layer ip2
I0428 19:51:51.165243 27375 net.cpp:408] ip2 <- ip1
I0428 19:51:51.165248 27375 net.cpp:382] ip2 -> ip2
I0428 19:51:51.165354 27375 net.cpp:124] Setting up ip2
I0428 19:51:51.165360 27375 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:51.165364 27375 net.cpp:139] Memory required for data: 1649920
I0428 19:51:51.165369 27375 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:51.165374 27375 net.cpp:86] Creating Layer relu2
I0428 19:51:51.165377 27375 net.cpp:408] relu2 <- ip2
I0428 19:51:51.165381 27375 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:51.166096 27375 net.cpp:124] Setting up relu2
I0428 19:51:51.166110 27375 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:51.166113 27375 net.cpp:139] Memory required for data: 1652480
I0428 19:51:51.166116 27375 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:51.166123 27375 net.cpp:86] Creating Layer ip3
I0428 19:51:51.166126 27375 net.cpp:408] ip3 <- ip2
I0428 19:51:51.166132 27375 net.cpp:382] ip3 -> ip3
I0428 19:51:51.166229 27375 net.cpp:124] Setting up ip3
I0428 19:51:51.166237 27375 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:51.166239 27375 net.cpp:139] Memory required for data: 1655040
I0428 19:51:51.166247 27375 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:51.166252 27375 net.cpp:86] Creating Layer relu3
I0428 19:51:51.166255 27375 net.cpp:408] relu3 <- ip3
I0428 19:51:51.166260 27375 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:51.166424 27375 net.cpp:124] Setting up relu3
I0428 19:51:51.166432 27375 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:51.166435 27375 net.cpp:139] Memory required for data: 1657600
I0428 19:51:51.166453 27375 layer_factory.hpp:77] Creating layer loss
I0428 19:51:51.166458 27375 net.cpp:86] Creating Layer loss
I0428 19:51:51.166461 27375 net.cpp:408] loss <- ip3
I0428 19:51:51.166465 27375 net.cpp:408] loss <- label
I0428 19:51:51.166471 27375 net.cpp:382] loss -> loss
I0428 19:51:51.166488 27375 layer_factory.hpp:77] Creating layer loss
I0428 19:51:51.166703 27375 net.cpp:124] Setting up loss
I0428 19:51:51.166712 27375 net.cpp:131] Top shape: (1)
I0428 19:51:51.166715 27375 net.cpp:134]     with loss weight 1
I0428 19:51:51.166728 27375 net.cpp:139] Memory required for data: 1657604
I0428 19:51:51.166733 27375 net.cpp:200] loss needs backward computation.
I0428 19:51:51.166735 27375 net.cpp:200] relu3 needs backward computation.
I0428 19:51:51.166738 27375 net.cpp:200] ip3 needs backward computation.
I0428 19:51:51.166741 27375 net.cpp:200] relu2 needs backward computation.
I0428 19:51:51.166743 27375 net.cpp:200] ip2 needs backward computation.
I0428 19:51:51.166746 27375 net.cpp:200] relu1 needs backward computation.
I0428 19:51:51.166749 27375 net.cpp:200] ip1 needs backward computation.
I0428 19:51:51.166751 27375 net.cpp:200] pool1 needs backward computation.
I0428 19:51:51.166754 27375 net.cpp:200] conv1 needs backward computation.
I0428 19:51:51.166759 27375 net.cpp:200] pool0 needs backward computation.
I0428 19:51:51.166761 27375 net.cpp:200] conv0 needs backward computation.
I0428 19:51:51.166764 27375 net.cpp:202] mnist does not need backward computation.
I0428 19:51:51.166766 27375 net.cpp:244] This network produces output loss
I0428 19:51:51.166775 27375 net.cpp:257] Network initialization done.
I0428 19:51:51.167083 27375 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test645.prototxt
I0428 19:51:51.167109 27375 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:51.167213 27375 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:51.167290 27375 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:51.167335 27375 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:51.167347 27375 net.cpp:86] Creating Layer mnist
I0428 19:51:51.167351 27375 net.cpp:382] mnist -> data
I0428 19:51:51.167359 27375 net.cpp:382] mnist -> label
I0428 19:51:51.167441 27375 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:51.169525 27375 net.cpp:124] Setting up mnist
I0428 19:51:51.169538 27375 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:51.169559 27375 net.cpp:131] Top shape: 100 (100)
I0428 19:51:51.169562 27375 net.cpp:139] Memory required for data: 314000
I0428 19:51:51.169565 27375 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:51.169572 27375 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:51.169575 27375 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:51.169580 27375 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:51.169586 27375 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:51.169685 27375 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:51.169692 27375 net.cpp:131] Top shape: 100 (100)
I0428 19:51:51.169697 27375 net.cpp:131] Top shape: 100 (100)
I0428 19:51:51.169699 27375 net.cpp:139] Memory required for data: 314800
I0428 19:51:51.169703 27375 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:51.169710 27375 net.cpp:86] Creating Layer conv0
I0428 19:51:51.169713 27375 net.cpp:408] conv0 <- data
I0428 19:51:51.169718 27375 net.cpp:382] conv0 -> conv0
I0428 19:51:51.171103 27375 net.cpp:124] Setting up conv0
I0428 19:51:51.171133 27375 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:51.171135 27375 net.cpp:139] Memory required for data: 1466800
I0428 19:51:51.171144 27375 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:51.171151 27375 net.cpp:86] Creating Layer pool0
I0428 19:51:51.171154 27375 net.cpp:408] pool0 <- conv0
I0428 19:51:51.171169 27375 net.cpp:382] pool0 -> pool0
I0428 19:51:51.171241 27375 net.cpp:124] Setting up pool0
I0428 19:51:51.171248 27375 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:51.171252 27375 net.cpp:139] Memory required for data: 1754800
I0428 19:51:51.171254 27375 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:51.171263 27375 net.cpp:86] Creating Layer conv1
I0428 19:51:51.171267 27375 net.cpp:408] conv1 <- pool0
I0428 19:51:51.171272 27375 net.cpp:382] conv1 -> conv1
I0428 19:51:51.173285 27375 net.cpp:124] Setting up conv1
I0428 19:51:51.173297 27375 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:51.173317 27375 net.cpp:139] Memory required for data: 2394800
I0428 19:51:51.173326 27375 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:51.173332 27375 net.cpp:86] Creating Layer pool1
I0428 19:51:51.173336 27375 net.cpp:408] pool1 <- conv1
I0428 19:51:51.173341 27375 net.cpp:382] pool1 -> pool1
I0428 19:51:51.173418 27375 net.cpp:124] Setting up pool1
I0428 19:51:51.173425 27375 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:51.173429 27375 net.cpp:139] Memory required for data: 2554800
I0428 19:51:51.173432 27375 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:51.173437 27375 net.cpp:86] Creating Layer ip1
I0428 19:51:51.173441 27375 net.cpp:408] ip1 <- pool1
I0428 19:51:51.173445 27375 net.cpp:382] ip1 -> ip1
I0428 19:51:51.173589 27375 net.cpp:124] Setting up ip1
I0428 19:51:51.173598 27375 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:51.173610 27375 net.cpp:139] Memory required for data: 2564800
I0428 19:51:51.173617 27375 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:51.173622 27375 net.cpp:86] Creating Layer relu1
I0428 19:51:51.173626 27375 net.cpp:408] relu1 <- ip1
I0428 19:51:51.173630 27375 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:51.173804 27375 net.cpp:124] Setting up relu1
I0428 19:51:51.173813 27375 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:51.173816 27375 net.cpp:139] Memory required for data: 2574800
I0428 19:51:51.173820 27375 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:51.173826 27375 net.cpp:86] Creating Layer ip2
I0428 19:51:51.173830 27375 net.cpp:408] ip2 <- ip1
I0428 19:51:51.173835 27375 net.cpp:382] ip2 -> ip2
I0428 19:51:51.173940 27375 net.cpp:124] Setting up ip2
I0428 19:51:51.173948 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.173950 27375 net.cpp:139] Memory required for data: 2578800
I0428 19:51:51.173955 27375 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:51.173974 27375 net.cpp:86] Creating Layer relu2
I0428 19:51:51.173977 27375 net.cpp:408] relu2 <- ip2
I0428 19:51:51.173981 27375 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:51.174182 27375 net.cpp:124] Setting up relu2
I0428 19:51:51.174190 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.174195 27375 net.cpp:139] Memory required for data: 2582800
I0428 19:51:51.174197 27375 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:51.174202 27375 net.cpp:86] Creating Layer ip3
I0428 19:51:51.174206 27375 net.cpp:408] ip3 <- ip2
I0428 19:51:51.174211 27375 net.cpp:382] ip3 -> ip3
I0428 19:51:51.174316 27375 net.cpp:124] Setting up ip3
I0428 19:51:51.174324 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.174327 27375 net.cpp:139] Memory required for data: 2586800
I0428 19:51:51.174335 27375 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:51.174340 27375 net.cpp:86] Creating Layer relu3
I0428 19:51:51.174342 27375 net.cpp:408] relu3 <- ip3
I0428 19:51:51.174346 27375 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:51.175127 27375 net.cpp:124] Setting up relu3
I0428 19:51:51.175138 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.175158 27375 net.cpp:139] Memory required for data: 2590800
I0428 19:51:51.175160 27375 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:51.175165 27375 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:51.175169 27375 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:51.175174 27375 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:51.175179 27375 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:51.175215 27375 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:51.175220 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.175222 27375 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:51.175225 27375 net.cpp:139] Memory required for data: 2598800
I0428 19:51:51.175227 27375 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:51.175236 27375 net.cpp:86] Creating Layer accuracy
I0428 19:51:51.175240 27375 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:51.175243 27375 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:51.175247 27375 net.cpp:382] accuracy -> accuracy
I0428 19:51:51.175253 27375 net.cpp:124] Setting up accuracy
I0428 19:51:51.175257 27375 net.cpp:131] Top shape: (1)
I0428 19:51:51.175261 27375 net.cpp:139] Memory required for data: 2598804
I0428 19:51:51.175262 27375 layer_factory.hpp:77] Creating layer loss
I0428 19:51:51.175266 27375 net.cpp:86] Creating Layer loss
I0428 19:51:51.175269 27375 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:51.175272 27375 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:51.175276 27375 net.cpp:382] loss -> loss
I0428 19:51:51.175282 27375 layer_factory.hpp:77] Creating layer loss
I0428 19:51:51.175511 27375 net.cpp:124] Setting up loss
I0428 19:51:51.175520 27375 net.cpp:131] Top shape: (1)
I0428 19:51:51.175523 27375 net.cpp:134]     with loss weight 1
I0428 19:51:51.175529 27375 net.cpp:139] Memory required for data: 2598808
I0428 19:51:51.175542 27375 net.cpp:200] loss needs backward computation.
I0428 19:51:51.175546 27375 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:51.175550 27375 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:51.175554 27375 net.cpp:200] relu3 needs backward computation.
I0428 19:51:51.175555 27375 net.cpp:200] ip3 needs backward computation.
I0428 19:51:51.175559 27375 net.cpp:200] relu2 needs backward computation.
I0428 19:51:51.175561 27375 net.cpp:200] ip2 needs backward computation.
I0428 19:51:51.175565 27375 net.cpp:200] relu1 needs backward computation.
I0428 19:51:51.175566 27375 net.cpp:200] ip1 needs backward computation.
I0428 19:51:51.175570 27375 net.cpp:200] pool1 needs backward computation.
I0428 19:51:51.175572 27375 net.cpp:200] conv1 needs backward computation.
I0428 19:51:51.175575 27375 net.cpp:200] pool0 needs backward computation.
I0428 19:51:51.175578 27375 net.cpp:200] conv0 needs backward computation.
I0428 19:51:51.175582 27375 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:51.175585 27375 net.cpp:202] mnist does not need backward computation.
I0428 19:51:51.175588 27375 net.cpp:244] This network produces output accuracy
I0428 19:51:51.175591 27375 net.cpp:244] This network produces output loss
I0428 19:51:51.175601 27375 net.cpp:257] Network initialization done.
I0428 19:51:51.175642 27375 solver.cpp:56] Solver scaffolding done.
I0428 19:51:51.175976 27375 caffe.cpp:248] Starting Optimization
I0428 19:51:51.175981 27375 solver.cpp:273] Solving LeNet
I0428 19:51:51.175984 27375 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:51.176161 27375 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:51.182201 27375 blocking_queue.cpp:49] Waiting for data
I0428 19:51:51.231860 27382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:51.232373 27375 solver.cpp:398]     Test net output #0: accuracy = 0.0675
I0428 19:51:51.232409 27375 solver.cpp:398]     Test net output #1: loss = 2.30955 (* 1 = 2.30955 loss)
I0428 19:51:51.234253 27375 solver.cpp:219] Iteration 0 (0 iter/s, 0.0582359s/100 iters), loss = 2.31186
I0428 19:51:51.234292 27375 solver.cpp:238]     Train net output #0: loss = 2.31186 (* 1 = 2.31186 loss)
I0428 19:51:51.234318 27375 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:51.320199 27375 solver.cpp:219] Iteration 100 (1164.19 iter/s, 0.0858963s/100 iters), loss = 1.96029
I0428 19:51:51.320237 27375 solver.cpp:238]     Train net output #0: loss = 1.96029 (* 1 = 1.96029 loss)
I0428 19:51:51.320243 27375 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:51.404556 27375 solver.cpp:219] Iteration 200 (1185.91 iter/s, 0.0843233s/100 iters), loss = 1.36482
I0428 19:51:51.404597 27375 solver.cpp:238]     Train net output #0: loss = 1.36482 (* 1 = 1.36482 loss)
I0428 19:51:51.404604 27375 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:51.488301 27375 solver.cpp:219] Iteration 300 (1194.62 iter/s, 0.0837089s/100 iters), loss = 0.883376
I0428 19:51:51.488342 27375 solver.cpp:238]     Train net output #0: loss = 0.883376 (* 1 = 0.883376 loss)
I0428 19:51:51.488348 27375 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:51.571650 27375 solver.cpp:219] Iteration 400 (1200.27 iter/s, 0.0833149s/100 iters), loss = 0.855155
I0428 19:51:51.571689 27375 solver.cpp:238]     Train net output #0: loss = 0.855155 (* 1 = 0.855155 loss)
I0428 19:51:51.571696 27375 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:51.654374 27375 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:51.730118 27382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:51.730648 27375 solver.cpp:398]     Test net output #0: accuracy = 0.6498
I0428 19:51:51.730681 27375 solver.cpp:398]     Test net output #1: loss = 0.87095 (* 1 = 0.87095 loss)
I0428 19:51:51.731590 27375 solver.cpp:219] Iteration 500 (625.384 iter/s, 0.159902s/100 iters), loss = 0.819539
I0428 19:51:51.731631 27375 solver.cpp:238]     Train net output #0: loss = 0.819539 (* 1 = 0.819539 loss)
I0428 19:51:51.731652 27375 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:51.826021 27375 solver.cpp:219] Iteration 600 (1059.52 iter/s, 0.0943821s/100 iters), loss = 1.00064
I0428 19:51:51.826061 27375 solver.cpp:238]     Train net output #0: loss = 1.00064 (* 1 = 1.00064 loss)
I0428 19:51:51.826066 27375 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:51.913084 27375 solver.cpp:219] Iteration 700 (1149.04 iter/s, 0.087029s/100 iters), loss = 0.83193
I0428 19:51:51.913108 27375 solver.cpp:238]     Train net output #0: loss = 0.83193 (* 1 = 0.83193 loss)
I0428 19:51:51.913115 27375 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:51.998558 27375 solver.cpp:219] Iteration 800 (1170.4 iter/s, 0.0854405s/100 iters), loss = 0.948997
I0428 19:51:51.998581 27375 solver.cpp:238]     Train net output #0: loss = 0.948997 (* 1 = 0.948997 loss)
I0428 19:51:51.998587 27375 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:52.086175 27375 solver.cpp:219] Iteration 900 (1141.75 iter/s, 0.0875848s/100 iters), loss = 1.25299
I0428 19:51:52.086215 27375 solver.cpp:238]     Train net output #0: loss = 1.25299 (* 1 = 1.25299 loss)
I0428 19:51:52.086220 27375 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:52.115054 27381 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:52.170373 27375 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:52.171283 27375 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:52.171763 27375 solver.cpp:311] Iteration 1000, loss = 0.840621
I0428 19:51:52.171779 27375 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:52.244381 27382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:52.245007 27375 solver.cpp:398]     Test net output #0: accuracy = 0.6617
I0428 19:51:52.245038 27375 solver.cpp:398]     Test net output #1: loss = 0.816962 (* 1 = 0.816962 loss)
I0428 19:51:52.245045 27375 solver.cpp:316] Optimization Done.
I0428 19:51:52.245049 27375 caffe.cpp:259] Optimization Done.
