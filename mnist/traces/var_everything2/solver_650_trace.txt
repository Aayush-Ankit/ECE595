I0428 19:52:01.000316 27417 caffe.cpp:218] Using GPUs 0
I0428 19:52:01.037724 27417 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:01.544138 27417 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test650.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:01.544272 27417 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test650.prototxt
I0428 19:52:01.544682 27417 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:01.544699 27417 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:01.544797 27417 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:01.544876 27417 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:01.544973 27417 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:01.544996 27417 net.cpp:86] Creating Layer mnist
I0428 19:52:01.545003 27417 net.cpp:382] mnist -> data
I0428 19:52:01.545025 27417 net.cpp:382] mnist -> label
I0428 19:52:01.546103 27417 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:01.548552 27417 net.cpp:124] Setting up mnist
I0428 19:52:01.548570 27417 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:01.548578 27417 net.cpp:131] Top shape: 64 (64)
I0428 19:52:01.548580 27417 net.cpp:139] Memory required for data: 200960
I0428 19:52:01.548588 27417 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:01.548604 27417 net.cpp:86] Creating Layer conv0
I0428 19:52:01.548624 27417 net.cpp:408] conv0 <- data
I0428 19:52:01.548636 27417 net.cpp:382] conv0 -> conv0
I0428 19:52:01.842329 27417 net.cpp:124] Setting up conv0
I0428 19:52:01.842360 27417 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:01.842365 27417 net.cpp:139] Memory required for data: 938240
I0428 19:52:01.842382 27417 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:01.842396 27417 net.cpp:86] Creating Layer pool0
I0428 19:52:01.842401 27417 net.cpp:408] pool0 <- conv0
I0428 19:52:01.842407 27417 net.cpp:382] pool0 -> pool0
I0428 19:52:01.842463 27417 net.cpp:124] Setting up pool0
I0428 19:52:01.842468 27417 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:01.842473 27417 net.cpp:139] Memory required for data: 1122560
I0428 19:52:01.842476 27417 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:01.842489 27417 net.cpp:86] Creating Layer conv1
I0428 19:52:01.842492 27417 net.cpp:408] conv1 <- pool0
I0428 19:52:01.842499 27417 net.cpp:382] conv1 -> conv1
I0428 19:52:01.845667 27417 net.cpp:124] Setting up conv1
I0428 19:52:01.845685 27417 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:01.845690 27417 net.cpp:139] Memory required for data: 1532160
I0428 19:52:01.845700 27417 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:01.845710 27417 net.cpp:86] Creating Layer pool1
I0428 19:52:01.845715 27417 net.cpp:408] pool1 <- conv1
I0428 19:52:01.845721 27417 net.cpp:382] pool1 -> pool1
I0428 19:52:01.845767 27417 net.cpp:124] Setting up pool1
I0428 19:52:01.845777 27417 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:01.845782 27417 net.cpp:139] Memory required for data: 1634560
I0428 19:52:01.845784 27417 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:01.845793 27417 net.cpp:86] Creating Layer ip1
I0428 19:52:01.845796 27417 net.cpp:408] ip1 <- pool1
I0428 19:52:01.845803 27417 net.cpp:382] ip1 -> ip1
I0428 19:52:01.846951 27417 net.cpp:124] Setting up ip1
I0428 19:52:01.846966 27417 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:01.846969 27417 net.cpp:139] Memory required for data: 1640960
I0428 19:52:01.846978 27417 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:01.846987 27417 net.cpp:86] Creating Layer relu1
I0428 19:52:01.846990 27417 net.cpp:408] relu1 <- ip1
I0428 19:52:01.846997 27417 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:01.847211 27417 net.cpp:124] Setting up relu1
I0428 19:52:01.847223 27417 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:01.847228 27417 net.cpp:139] Memory required for data: 1647360
I0428 19:52:01.847230 27417 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:01.847239 27417 net.cpp:86] Creating Layer ip2
I0428 19:52:01.847242 27417 net.cpp:408] ip2 <- ip1
I0428 19:52:01.847249 27417 net.cpp:382] ip2 -> ip2
I0428 19:52:01.847373 27417 net.cpp:124] Setting up ip2
I0428 19:52:01.847380 27417 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:01.847384 27417 net.cpp:139] Memory required for data: 1653760
I0428 19:52:01.847391 27417 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:01.847398 27417 net.cpp:86] Creating Layer relu2
I0428 19:52:01.847403 27417 net.cpp:408] relu2 <- ip2
I0428 19:52:01.847409 27417 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:01.848268 27417 net.cpp:124] Setting up relu2
I0428 19:52:01.848282 27417 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:01.848286 27417 net.cpp:139] Memory required for data: 1660160
I0428 19:52:01.848291 27417 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:01.848301 27417 net.cpp:86] Creating Layer ip3
I0428 19:52:01.848305 27417 net.cpp:408] ip3 <- ip2
I0428 19:52:01.848312 27417 net.cpp:382] ip3 -> ip3
I0428 19:52:01.848436 27417 net.cpp:124] Setting up ip3
I0428 19:52:01.848446 27417 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:01.848449 27417 net.cpp:139] Memory required for data: 1662720
I0428 19:52:01.848459 27417 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:01.848465 27417 net.cpp:86] Creating Layer relu3
I0428 19:52:01.848469 27417 net.cpp:408] relu3 <- ip3
I0428 19:52:01.848474 27417 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:01.848688 27417 net.cpp:124] Setting up relu3
I0428 19:52:01.848698 27417 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:01.848702 27417 net.cpp:139] Memory required for data: 1665280
I0428 19:52:01.848706 27417 layer_factory.hpp:77] Creating layer loss
I0428 19:52:01.848714 27417 net.cpp:86] Creating Layer loss
I0428 19:52:01.848718 27417 net.cpp:408] loss <- ip3
I0428 19:52:01.848723 27417 net.cpp:408] loss <- label
I0428 19:52:01.848729 27417 net.cpp:382] loss -> loss
I0428 19:52:01.848749 27417 layer_factory.hpp:77] Creating layer loss
I0428 19:52:01.849045 27417 net.cpp:124] Setting up loss
I0428 19:52:01.849057 27417 net.cpp:131] Top shape: (1)
I0428 19:52:01.849061 27417 net.cpp:134]     with loss weight 1
I0428 19:52:01.849078 27417 net.cpp:139] Memory required for data: 1665284
I0428 19:52:01.849082 27417 net.cpp:200] loss needs backward computation.
I0428 19:52:01.849086 27417 net.cpp:200] relu3 needs backward computation.
I0428 19:52:01.849090 27417 net.cpp:200] ip3 needs backward computation.
I0428 19:52:01.849093 27417 net.cpp:200] relu2 needs backward computation.
I0428 19:52:01.849097 27417 net.cpp:200] ip2 needs backward computation.
I0428 19:52:01.849100 27417 net.cpp:200] relu1 needs backward computation.
I0428 19:52:01.849103 27417 net.cpp:200] ip1 needs backward computation.
I0428 19:52:01.849107 27417 net.cpp:200] pool1 needs backward computation.
I0428 19:52:01.849110 27417 net.cpp:200] conv1 needs backward computation.
I0428 19:52:01.849114 27417 net.cpp:200] pool0 needs backward computation.
I0428 19:52:01.849117 27417 net.cpp:200] conv0 needs backward computation.
I0428 19:52:01.849125 27417 net.cpp:202] mnist does not need backward computation.
I0428 19:52:01.849128 27417 net.cpp:244] This network produces output loss
I0428 19:52:01.849139 27417 net.cpp:257] Network initialization done.
I0428 19:52:01.849522 27417 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test650.prototxt
I0428 19:52:01.849555 27417 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:01.849668 27417 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:01.849767 27417 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:01.849818 27417 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:01.849833 27417 net.cpp:86] Creating Layer mnist
I0428 19:52:01.849840 27417 net.cpp:382] mnist -> data
I0428 19:52:01.849849 27417 net.cpp:382] mnist -> label
I0428 19:52:01.849951 27417 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:01.852157 27417 net.cpp:124] Setting up mnist
I0428 19:52:01.852174 27417 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:01.852180 27417 net.cpp:131] Top shape: 100 (100)
I0428 19:52:01.852183 27417 net.cpp:139] Memory required for data: 314000
I0428 19:52:01.852187 27417 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:01.852205 27417 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:01.852211 27417 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:01.852219 27417 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:01.852227 27417 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:01.852334 27417 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:01.852342 27417 net.cpp:131] Top shape: 100 (100)
I0428 19:52:01.852347 27417 net.cpp:131] Top shape: 100 (100)
I0428 19:52:01.852350 27417 net.cpp:139] Memory required for data: 314800
I0428 19:52:01.852355 27417 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:01.852367 27417 net.cpp:86] Creating Layer conv0
I0428 19:52:01.852371 27417 net.cpp:408] conv0 <- data
I0428 19:52:01.852377 27417 net.cpp:382] conv0 -> conv0
I0428 19:52:01.854107 27417 net.cpp:124] Setting up conv0
I0428 19:52:01.854125 27417 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:01.854130 27417 net.cpp:139] Memory required for data: 1466800
I0428 19:52:01.854140 27417 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:01.854148 27417 net.cpp:86] Creating Layer pool0
I0428 19:52:01.854154 27417 net.cpp:408] pool0 <- conv0
I0428 19:52:01.854159 27417 net.cpp:382] pool0 -> pool0
I0428 19:52:01.854204 27417 net.cpp:124] Setting up pool0
I0428 19:52:01.854212 27417 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:01.854216 27417 net.cpp:139] Memory required for data: 1754800
I0428 19:52:01.854220 27417 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:01.854243 27417 net.cpp:86] Creating Layer conv1
I0428 19:52:01.854250 27417 net.cpp:408] conv1 <- pool0
I0428 19:52:01.854257 27417 net.cpp:382] conv1 -> conv1
I0428 19:52:01.856748 27417 net.cpp:124] Setting up conv1
I0428 19:52:01.856766 27417 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:01.856771 27417 net.cpp:139] Memory required for data: 2394800
I0428 19:52:01.856782 27417 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:01.856791 27417 net.cpp:86] Creating Layer pool1
I0428 19:52:01.856794 27417 net.cpp:408] pool1 <- conv1
I0428 19:52:01.856801 27417 net.cpp:382] pool1 -> pool1
I0428 19:52:01.856871 27417 net.cpp:124] Setting up pool1
I0428 19:52:01.856883 27417 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:01.856886 27417 net.cpp:139] Memory required for data: 2554800
I0428 19:52:01.856890 27417 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:01.856899 27417 net.cpp:86] Creating Layer ip1
I0428 19:52:01.856904 27417 net.cpp:408] ip1 <- pool1
I0428 19:52:01.856909 27417 net.cpp:382] ip1 -> ip1
I0428 19:52:01.857167 27417 net.cpp:124] Setting up ip1
I0428 19:52:01.857177 27417 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:01.857197 27417 net.cpp:139] Memory required for data: 2564800
I0428 19:52:01.857206 27417 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:01.857213 27417 net.cpp:86] Creating Layer relu1
I0428 19:52:01.857218 27417 net.cpp:408] relu1 <- ip1
I0428 19:52:01.857223 27417 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:01.857435 27417 net.cpp:124] Setting up relu1
I0428 19:52:01.857453 27417 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:01.857458 27417 net.cpp:139] Memory required for data: 2574800
I0428 19:52:01.857462 27417 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:01.857470 27417 net.cpp:86] Creating Layer ip2
I0428 19:52:01.857475 27417 net.cpp:408] ip2 <- ip1
I0428 19:52:01.857482 27417 net.cpp:382] ip2 -> ip2
I0428 19:52:01.857609 27417 net.cpp:124] Setting up ip2
I0428 19:52:01.857619 27417 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:01.857622 27417 net.cpp:139] Memory required for data: 2584800
I0428 19:52:01.857630 27417 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:01.857636 27417 net.cpp:86] Creating Layer relu2
I0428 19:52:01.857640 27417 net.cpp:408] relu2 <- ip2
I0428 19:52:01.857645 27417 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:01.857833 27417 net.cpp:124] Setting up relu2
I0428 19:52:01.857843 27417 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:01.857848 27417 net.cpp:139] Memory required for data: 2594800
I0428 19:52:01.857851 27417 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:01.857859 27417 net.cpp:86] Creating Layer ip3
I0428 19:52:01.857863 27417 net.cpp:408] ip3 <- ip2
I0428 19:52:01.857870 27417 net.cpp:382] ip3 -> ip3
I0428 19:52:01.858006 27417 net.cpp:124] Setting up ip3
I0428 19:52:01.858013 27417 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:01.858017 27417 net.cpp:139] Memory required for data: 2598800
I0428 19:52:01.858026 27417 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:01.858031 27417 net.cpp:86] Creating Layer relu3
I0428 19:52:01.858036 27417 net.cpp:408] relu3 <- ip3
I0428 19:52:01.858042 27417 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:01.858999 27417 net.cpp:124] Setting up relu3
I0428 19:52:01.859014 27417 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:01.859017 27417 net.cpp:139] Memory required for data: 2602800
I0428 19:52:01.859021 27417 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:01.859027 27417 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:01.859031 27417 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:01.859041 27417 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:01.859048 27417 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:01.859096 27417 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:01.859104 27417 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:01.859108 27417 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:01.859112 27417 net.cpp:139] Memory required for data: 2610800
I0428 19:52:01.859115 27417 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:01.859122 27417 net.cpp:86] Creating Layer accuracy
I0428 19:52:01.859127 27417 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:01.859132 27417 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:01.859138 27417 net.cpp:382] accuracy -> accuracy
I0428 19:52:01.859145 27417 net.cpp:124] Setting up accuracy
I0428 19:52:01.859150 27417 net.cpp:131] Top shape: (1)
I0428 19:52:01.859154 27417 net.cpp:139] Memory required for data: 2610804
I0428 19:52:01.859158 27417 layer_factory.hpp:77] Creating layer loss
I0428 19:52:01.859165 27417 net.cpp:86] Creating Layer loss
I0428 19:52:01.859170 27417 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:01.859174 27417 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:01.859179 27417 net.cpp:382] loss -> loss
I0428 19:52:01.859186 27417 layer_factory.hpp:77] Creating layer loss
I0428 19:52:01.859472 27417 net.cpp:124] Setting up loss
I0428 19:52:01.859488 27417 net.cpp:131] Top shape: (1)
I0428 19:52:01.859491 27417 net.cpp:134]     with loss weight 1
I0428 19:52:01.859498 27417 net.cpp:139] Memory required for data: 2610808
I0428 19:52:01.859513 27417 net.cpp:200] loss needs backward computation.
I0428 19:52:01.859519 27417 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:01.859522 27417 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:01.859526 27417 net.cpp:200] relu3 needs backward computation.
I0428 19:52:01.859529 27417 net.cpp:200] ip3 needs backward computation.
I0428 19:52:01.859534 27417 net.cpp:200] relu2 needs backward computation.
I0428 19:52:01.859536 27417 net.cpp:200] ip2 needs backward computation.
I0428 19:52:01.859547 27417 net.cpp:200] relu1 needs backward computation.
I0428 19:52:01.859550 27417 net.cpp:200] ip1 needs backward computation.
I0428 19:52:01.859555 27417 net.cpp:200] pool1 needs backward computation.
I0428 19:52:01.859560 27417 net.cpp:200] conv1 needs backward computation.
I0428 19:52:01.859563 27417 net.cpp:200] pool0 needs backward computation.
I0428 19:52:01.859568 27417 net.cpp:200] conv0 needs backward computation.
I0428 19:52:01.859572 27417 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:01.859576 27417 net.cpp:202] mnist does not need backward computation.
I0428 19:52:01.859580 27417 net.cpp:244] This network produces output accuracy
I0428 19:52:01.859583 27417 net.cpp:244] This network produces output loss
I0428 19:52:01.859597 27417 net.cpp:257] Network initialization done.
I0428 19:52:01.859647 27417 solver.cpp:56] Solver scaffolding done.
I0428 19:52:01.860091 27417 caffe.cpp:248] Starting Optimization
I0428 19:52:01.860098 27417 solver.cpp:273] Solving LeNet
I0428 19:52:01.860101 27417 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:01.860981 27417 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:01.864945 27417 blocking_queue.cpp:49] Waiting for data
I0428 19:52:01.932988 27424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:01.933867 27417 solver.cpp:398]     Test net output #0: accuracy = 0.1233
I0428 19:52:01.933900 27417 solver.cpp:398]     Test net output #1: loss = 2.31426 (* 1 = 2.31426 loss)
I0428 19:52:01.936446 27417 solver.cpp:219] Iteration 0 (0 iter/s, 0.0763076s/100 iters), loss = 2.28777
I0428 19:52:01.936486 27417 solver.cpp:238]     Train net output #0: loss = 2.28777 (* 1 = 2.28777 loss)
I0428 19:52:01.936502 27417 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:02.034330 27417 solver.cpp:219] Iteration 100 (1022.17 iter/s, 0.0978309s/100 iters), loss = 0.853449
I0428 19:52:02.034363 27417 solver.cpp:238]     Train net output #0: loss = 0.853449 (* 1 = 0.853449 loss)
I0428 19:52:02.034373 27417 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:02.125248 27417 solver.cpp:219] Iteration 200 (1100.43 iter/s, 0.0908739s/100 iters), loss = 0.524277
I0428 19:52:02.125282 27417 solver.cpp:238]     Train net output #0: loss = 0.524277 (* 1 = 0.524277 loss)
I0428 19:52:02.125289 27417 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:02.214144 27417 solver.cpp:219] Iteration 300 (1125.45 iter/s, 0.0888534s/100 iters), loss = 0.877652
I0428 19:52:02.214177 27417 solver.cpp:238]     Train net output #0: loss = 0.877652 (* 1 = 0.877652 loss)
I0428 19:52:02.214185 27417 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:02.314435 27417 solver.cpp:219] Iteration 400 (997.551 iter/s, 0.100246s/100 iters), loss = 0.620338
I0428 19:52:02.314474 27417 solver.cpp:238]     Train net output #0: loss = 0.620338 (* 1 = 0.620338 loss)
I0428 19:52:02.314484 27417 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:02.406363 27417 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:02.459575 27424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:02.460105 27417 solver.cpp:398]     Test net output #0: accuracy = 0.7723
I0428 19:52:02.460129 27417 solver.cpp:398]     Test net output #1: loss = 0.593977 (* 1 = 0.593977 loss)
I0428 19:52:02.461038 27417 solver.cpp:219] Iteration 500 (682.353 iter/s, 0.146552s/100 iters), loss = 0.582116
I0428 19:52:02.461083 27417 solver.cpp:238]     Train net output #0: loss = 0.582116 (* 1 = 0.582116 loss)
I0428 19:52:02.461109 27417 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:02.553119 27417 solver.cpp:219] Iteration 600 (1086.63 iter/s, 0.0920281s/100 iters), loss = 0.389099
I0428 19:52:02.553150 27417 solver.cpp:238]     Train net output #0: loss = 0.389099 (* 1 = 0.389099 loss)
I0428 19:52:02.553158 27417 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:02.645880 27417 solver.cpp:219] Iteration 700 (1078.53 iter/s, 0.0927191s/100 iters), loss = 0.301939
I0428 19:52:02.645912 27417 solver.cpp:238]     Train net output #0: loss = 0.301939 (* 1 = 0.301939 loss)
I0428 19:52:02.645920 27417 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:02.735786 27417 solver.cpp:219] Iteration 800 (1112.8 iter/s, 0.0898632s/100 iters), loss = 0.644536
I0428 19:52:02.735818 27417 solver.cpp:238]     Train net output #0: loss = 0.644536 (* 1 = 0.644536 loss)
I0428 19:52:02.735826 27417 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:02.825034 27417 solver.cpp:219] Iteration 900 (1121 iter/s, 0.0892058s/100 iters), loss = 0.453093
I0428 19:52:02.825065 27417 solver.cpp:238]     Train net output #0: loss = 0.453093 (* 1 = 0.453093 loss)
I0428 19:52:02.825073 27417 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:02.856716 27423 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:02.915176 27417 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:02.916229 27417 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:02.916856 27417 solver.cpp:311] Iteration 1000, loss = 0.377857
I0428 19:52:02.916877 27417 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:02.993624 27424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:02.994249 27417 solver.cpp:398]     Test net output #0: accuracy = 0.8719
I0428 19:52:02.994289 27417 solver.cpp:398]     Test net output #1: loss = 0.334378 (* 1 = 0.334378 loss)
I0428 19:52:02.994297 27417 solver.cpp:316] Optimization Done.
I0428 19:52:02.994302 27417 caffe.cpp:259] Optimization Done.
