I0428 20:22:45.766041  2124 caffe.cpp:218] Using GPUs 0
I0428 20:22:45.799850  2124 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:46.310305  2124 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1410.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:46.310444  2124 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1410.prototxt
I0428 20:22:46.310824  2124 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:46.310843  2124 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:46.310931  2124 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:46.311007  2124 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:46.311105  2124 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:46.311127  2124 net.cpp:86] Creating Layer mnist
I0428 20:22:46.311137  2124 net.cpp:382] mnist -> data
I0428 20:22:46.311158  2124 net.cpp:382] mnist -> label
I0428 20:22:46.312253  2124 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:46.314715  2124 net.cpp:124] Setting up mnist
I0428 20:22:46.314734  2124 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:46.314740  2124 net.cpp:131] Top shape: 64 (64)
I0428 20:22:46.314743  2124 net.cpp:139] Memory required for data: 200960
I0428 20:22:46.314750  2124 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:46.314769  2124 net.cpp:86] Creating Layer conv0
I0428 20:22:46.314774  2124 net.cpp:408] conv0 <- data
I0428 20:22:46.314787  2124 net.cpp:382] conv0 -> conv0
I0428 20:22:46.582655  2124 net.cpp:124] Setting up conv0
I0428 20:22:46.582681  2124 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:46.582685  2124 net.cpp:139] Memory required for data: 7573760
I0428 20:22:46.582716  2124 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:46.582728  2124 net.cpp:86] Creating Layer pool0
I0428 20:22:46.582732  2124 net.cpp:408] pool0 <- conv0
I0428 20:22:46.582737  2124 net.cpp:382] pool0 -> pool0
I0428 20:22:46.582798  2124 net.cpp:124] Setting up pool0
I0428 20:22:46.582804  2124 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:46.582808  2124 net.cpp:139] Memory required for data: 9416960
I0428 20:22:46.582810  2124 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:46.582820  2124 net.cpp:86] Creating Layer conv1
I0428 20:22:46.582825  2124 net.cpp:408] conv1 <- pool0
I0428 20:22:46.582841  2124 net.cpp:382] conv1 -> conv1
I0428 20:22:46.586354  2124 net.cpp:124] Setting up conv1
I0428 20:22:46.586367  2124 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:22:46.586382  2124 net.cpp:139] Memory required for data: 11055360
I0428 20:22:46.586390  2124 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:46.586398  2124 net.cpp:86] Creating Layer pool1
I0428 20:22:46.586401  2124 net.cpp:408] pool1 <- conv1
I0428 20:22:46.586406  2124 net.cpp:382] pool1 -> pool1
I0428 20:22:46.586442  2124 net.cpp:124] Setting up pool1
I0428 20:22:46.586455  2124 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:22:46.586457  2124 net.cpp:139] Memory required for data: 11464960
I0428 20:22:46.586460  2124 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:46.586467  2124 net.cpp:86] Creating Layer ip1
I0428 20:22:46.586470  2124 net.cpp:408] ip1 <- pool1
I0428 20:22:46.586490  2124 net.cpp:382] ip1 -> ip1
I0428 20:22:46.586834  2124 net.cpp:124] Setting up ip1
I0428 20:22:46.586843  2124 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:46.586855  2124 net.cpp:139] Memory required for data: 11471360
I0428 20:22:46.586863  2124 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:46.586868  2124 net.cpp:86] Creating Layer relu1
I0428 20:22:46.586870  2124 net.cpp:408] relu1 <- ip1
I0428 20:22:46.586875  2124 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:46.587033  2124 net.cpp:124] Setting up relu1
I0428 20:22:46.587040  2124 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:46.587044  2124 net.cpp:139] Memory required for data: 11477760
I0428 20:22:46.587047  2124 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:46.587054  2124 net.cpp:86] Creating Layer ip2
I0428 20:22:46.587056  2124 net.cpp:408] ip2 <- ip1
I0428 20:22:46.587060  2124 net.cpp:382] ip2 -> ip2
I0428 20:22:46.587177  2124 net.cpp:124] Setting up ip2
I0428 20:22:46.587184  2124 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:46.587203  2124 net.cpp:139] Memory required for data: 11480320
I0428 20:22:46.587208  2124 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:46.587214  2124 net.cpp:86] Creating Layer relu2
I0428 20:22:46.587218  2124 net.cpp:408] relu2 <- ip2
I0428 20:22:46.587221  2124 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:46.588032  2124 net.cpp:124] Setting up relu2
I0428 20:22:46.588044  2124 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:46.588058  2124 net.cpp:139] Memory required for data: 11482880
I0428 20:22:46.588062  2124 layer_factory.hpp:77] Creating layer loss
I0428 20:22:46.588088  2124 net.cpp:86] Creating Layer loss
I0428 20:22:46.588091  2124 net.cpp:408] loss <- ip2
I0428 20:22:46.588096  2124 net.cpp:408] loss <- label
I0428 20:22:46.588101  2124 net.cpp:382] loss -> loss
I0428 20:22:46.588116  2124 layer_factory.hpp:77] Creating layer loss
I0428 20:22:46.588351  2124 net.cpp:124] Setting up loss
I0428 20:22:46.588361  2124 net.cpp:131] Top shape: (1)
I0428 20:22:46.588363  2124 net.cpp:134]     with loss weight 1
I0428 20:22:46.588376  2124 net.cpp:139] Memory required for data: 11482884
I0428 20:22:46.588380  2124 net.cpp:200] loss needs backward computation.
I0428 20:22:46.588383  2124 net.cpp:200] relu2 needs backward computation.
I0428 20:22:46.588387  2124 net.cpp:200] ip2 needs backward computation.
I0428 20:22:46.588389  2124 net.cpp:200] relu1 needs backward computation.
I0428 20:22:46.588392  2124 net.cpp:200] ip1 needs backward computation.
I0428 20:22:46.588405  2124 net.cpp:200] pool1 needs backward computation.
I0428 20:22:46.588409  2124 net.cpp:200] conv1 needs backward computation.
I0428 20:22:46.588413  2124 net.cpp:200] pool0 needs backward computation.
I0428 20:22:46.588415  2124 net.cpp:200] conv0 needs backward computation.
I0428 20:22:46.588418  2124 net.cpp:202] mnist does not need backward computation.
I0428 20:22:46.588421  2124 net.cpp:244] This network produces output loss
I0428 20:22:46.588429  2124 net.cpp:257] Network initialization done.
I0428 20:22:46.588721  2124 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1410.prototxt
I0428 20:22:46.588762  2124 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:46.588889  2124 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:46.588958  2124 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:46.589004  2124 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:46.589016  2124 net.cpp:86] Creating Layer mnist
I0428 20:22:46.589021  2124 net.cpp:382] mnist -> data
I0428 20:22:46.589030  2124 net.cpp:382] mnist -> label
I0428 20:22:46.589125  2124 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:46.590381  2124 net.cpp:124] Setting up mnist
I0428 20:22:46.590409  2124 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:46.590415  2124 net.cpp:131] Top shape: 100 (100)
I0428 20:22:46.590420  2124 net.cpp:139] Memory required for data: 314000
I0428 20:22:46.590422  2124 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:46.590430  2124 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:46.590433  2124 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:46.590437  2124 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:46.590459  2124 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:46.590522  2124 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:46.590541  2124 net.cpp:131] Top shape: 100 (100)
I0428 20:22:46.590545  2124 net.cpp:131] Top shape: 100 (100)
I0428 20:22:46.590548  2124 net.cpp:139] Memory required for data: 314800
I0428 20:22:46.590550  2124 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:46.590559  2124 net.cpp:86] Creating Layer conv0
I0428 20:22:46.590561  2124 net.cpp:408] conv0 <- data
I0428 20:22:46.590566  2124 net.cpp:382] conv0 -> conv0
I0428 20:22:46.592391  2124 net.cpp:124] Setting up conv0
I0428 20:22:46.592406  2124 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:46.592423  2124 net.cpp:139] Memory required for data: 11834800
I0428 20:22:46.592447  2124 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:46.592454  2124 net.cpp:86] Creating Layer pool0
I0428 20:22:46.592458  2124 net.cpp:408] pool0 <- conv0
I0428 20:22:46.592478  2124 net.cpp:382] pool0 -> pool0
I0428 20:22:46.592511  2124 net.cpp:124] Setting up pool0
I0428 20:22:46.592519  2124 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:46.592521  2124 net.cpp:139] Memory required for data: 14714800
I0428 20:22:46.592525  2124 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:46.592533  2124 net.cpp:86] Creating Layer conv1
I0428 20:22:46.592536  2124 net.cpp:408] conv1 <- pool0
I0428 20:22:46.592540  2124 net.cpp:382] conv1 -> conv1
I0428 20:22:46.595767  2124 net.cpp:124] Setting up conv1
I0428 20:22:46.595780  2124 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:22:46.595783  2124 net.cpp:139] Memory required for data: 17274800
I0428 20:22:46.595791  2124 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:46.595796  2124 net.cpp:86] Creating Layer pool1
I0428 20:22:46.595816  2124 net.cpp:408] pool1 <- conv1
I0428 20:22:46.595820  2124 net.cpp:382] pool1 -> pool1
I0428 20:22:46.595856  2124 net.cpp:124] Setting up pool1
I0428 20:22:46.595868  2124 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:22:46.595870  2124 net.cpp:139] Memory required for data: 17914800
I0428 20:22:46.595873  2124 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:46.595880  2124 net.cpp:86] Creating Layer ip1
I0428 20:22:46.595883  2124 net.cpp:408] ip1 <- pool1
I0428 20:22:46.595887  2124 net.cpp:382] ip1 -> ip1
I0428 20:22:46.596199  2124 net.cpp:124] Setting up ip1
I0428 20:22:46.596207  2124 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:46.596210  2124 net.cpp:139] Memory required for data: 17924800
I0428 20:22:46.596217  2124 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:46.596223  2124 net.cpp:86] Creating Layer relu1
I0428 20:22:46.596226  2124 net.cpp:408] relu1 <- ip1
I0428 20:22:46.596236  2124 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:46.596403  2124 net.cpp:124] Setting up relu1
I0428 20:22:46.596413  2124 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:46.596416  2124 net.cpp:139] Memory required for data: 17934800
I0428 20:22:46.596420  2124 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:46.596426  2124 net.cpp:86] Creating Layer ip2
I0428 20:22:46.596429  2124 net.cpp:408] ip2 <- ip1
I0428 20:22:46.596436  2124 net.cpp:382] ip2 -> ip2
I0428 20:22:46.596539  2124 net.cpp:124] Setting up ip2
I0428 20:22:46.596546  2124 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:46.596549  2124 net.cpp:139] Memory required for data: 17938800
I0428 20:22:46.596554  2124 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:46.596560  2124 net.cpp:86] Creating Layer relu2
I0428 20:22:46.596563  2124 net.cpp:408] relu2 <- ip2
I0428 20:22:46.596567  2124 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:46.596755  2124 net.cpp:124] Setting up relu2
I0428 20:22:46.596763  2124 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:46.596766  2124 net.cpp:139] Memory required for data: 17942800
I0428 20:22:46.596770  2124 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:22:46.596774  2124 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:22:46.596793  2124 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:22:46.596797  2124 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:22:46.596839  2124 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:22:46.596916  2124 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:22:46.596922  2124 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:46.596926  2124 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:46.596930  2124 net.cpp:139] Memory required for data: 17950800
I0428 20:22:46.596938  2124 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:46.596945  2124 net.cpp:86] Creating Layer accuracy
I0428 20:22:46.596948  2124 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:22:46.596952  2124 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:46.596957  2124 net.cpp:382] accuracy -> accuracy
I0428 20:22:46.596964  2124 net.cpp:124] Setting up accuracy
I0428 20:22:46.596968  2124 net.cpp:131] Top shape: (1)
I0428 20:22:46.596971  2124 net.cpp:139] Memory required for data: 17950804
I0428 20:22:46.596974  2124 layer_factory.hpp:77] Creating layer loss
I0428 20:22:46.596979  2124 net.cpp:86] Creating Layer loss
I0428 20:22:46.596983  2124 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:22:46.596987  2124 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:46.596992  2124 net.cpp:382] loss -> loss
I0428 20:22:46.596998  2124 layer_factory.hpp:77] Creating layer loss
I0428 20:22:46.597316  2124 net.cpp:124] Setting up loss
I0428 20:22:46.597324  2124 net.cpp:131] Top shape: (1)
I0428 20:22:46.597328  2124 net.cpp:134]     with loss weight 1
I0428 20:22:46.597339  2124 net.cpp:139] Memory required for data: 17950808
I0428 20:22:46.597342  2124 net.cpp:200] loss needs backward computation.
I0428 20:22:46.597347  2124 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:46.597349  2124 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:22:46.597352  2124 net.cpp:200] relu2 needs backward computation.
I0428 20:22:46.597355  2124 net.cpp:200] ip2 needs backward computation.
I0428 20:22:46.597358  2124 net.cpp:200] relu1 needs backward computation.
I0428 20:22:46.597360  2124 net.cpp:200] ip1 needs backward computation.
I0428 20:22:46.597363  2124 net.cpp:200] pool1 needs backward computation.
I0428 20:22:46.597367  2124 net.cpp:200] conv1 needs backward computation.
I0428 20:22:46.597375  2124 net.cpp:200] pool0 needs backward computation.
I0428 20:22:46.597378  2124 net.cpp:200] conv0 needs backward computation.
I0428 20:22:46.597381  2124 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:46.597385  2124 net.cpp:202] mnist does not need backward computation.
I0428 20:22:46.597393  2124 net.cpp:244] This network produces output accuracy
I0428 20:22:46.597395  2124 net.cpp:244] This network produces output loss
I0428 20:22:46.597405  2124 net.cpp:257] Network initialization done.
I0428 20:22:46.597452  2124 solver.cpp:56] Solver scaffolding done.
I0428 20:22:46.597718  2124 caffe.cpp:248] Starting Optimization
I0428 20:22:46.597724  2124 solver.cpp:273] Solving LeNet
I0428 20:22:46.597728  2124 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:46.597923  2124 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:46.608783  2124 blocking_queue.cpp:49] Waiting for data
I0428 20:22:46.685861  2132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:46.687119  2124 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 20:22:46.687139  2124 solver.cpp:398]     Test net output #1: loss = 2.33868 (* 1 = 2.33868 loss)
I0428 20:22:46.694185  2124 solver.cpp:219] Iteration 0 (-1.68858e-31 iter/s, 0.0964168s/100 iters), loss = 2.33038
I0428 20:22:46.694208  2124 solver.cpp:238]     Train net output #0: loss = 2.33038 (* 1 = 2.33038 loss)
I0428 20:22:46.694219  2124 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:46.916224  2124 solver.cpp:219] Iteration 100 (450.459 iter/s, 0.221996s/100 iters), loss = 0.64797
I0428 20:22:46.916251  2124 solver.cpp:238]     Train net output #0: loss = 0.64797 (* 1 = 0.64797 loss)
I0428 20:22:46.916259  2124 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:47.114717  2124 solver.cpp:219] Iteration 200 (503.902 iter/s, 0.198451s/100 iters), loss = 0.331515
I0428 20:22:47.114756  2124 solver.cpp:238]     Train net output #0: loss = 0.331515 (* 1 = 0.331515 loss)
I0428 20:22:47.114763  2124 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:47.347235  2124 solver.cpp:219] Iteration 300 (430.156 iter/s, 0.232474s/100 iters), loss = 0.541939
I0428 20:22:47.347273  2124 solver.cpp:238]     Train net output #0: loss = 0.541939 (* 1 = 0.541939 loss)
I0428 20:22:47.347285  2124 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:47.574115  2124 solver.cpp:219] Iteration 400 (440.866 iter/s, 0.226826s/100 iters), loss = 0.312838
I0428 20:22:47.574151  2124 solver.cpp:238]     Train net output #0: loss = 0.312838 (* 1 = 0.312838 loss)
I0428 20:22:47.574158  2124 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:47.797996  2124 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:47.885586  2132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:47.888677  2124 solver.cpp:398]     Test net output #0: accuracy = 0.8738
I0428 20:22:47.888703  2124 solver.cpp:398]     Test net output #1: loss = 0.330945 (* 1 = 0.330945 loss)
I0428 20:22:47.890861  2124 solver.cpp:219] Iteration 500 (315.765 iter/s, 0.316691s/100 iters), loss = 0.291901
I0428 20:22:47.890889  2124 solver.cpp:238]     Train net output #0: loss = 0.291901 (* 1 = 0.291901 loss)
I0428 20:22:47.890902  2124 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:48.118010  2124 solver.cpp:219] Iteration 600 (440.325 iter/s, 0.227105s/100 iters), loss = 0.256867
I0428 20:22:48.118041  2124 solver.cpp:238]     Train net output #0: loss = 0.256867 (* 1 = 0.256867 loss)
I0428 20:22:48.118050  2124 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:48.343441  2124 solver.cpp:219] Iteration 700 (443.697 iter/s, 0.225379s/100 iters), loss = 0.178782
I0428 20:22:48.343484  2124 solver.cpp:238]     Train net output #0: loss = 0.178782 (* 1 = 0.178782 loss)
I0428 20:22:48.343495  2124 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:48.578948  2124 solver.cpp:219] Iteration 800 (424.727 iter/s, 0.235445s/100 iters), loss = 0.495784
I0428 20:22:48.578992  2124 solver.cpp:238]     Train net output #0: loss = 0.495784 (* 1 = 0.495784 loss)
I0428 20:22:48.579001  2124 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:48.807018  2124 solver.cpp:219] Iteration 900 (438.579 iter/s, 0.228009s/100 iters), loss = 0.352213
I0428 20:22:48.807054  2124 solver.cpp:238]     Train net output #0: loss = 0.352213 (* 1 = 0.352213 loss)
I0428 20:22:48.807061  2124 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:48.882648  2131 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:49.032332  2124 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:49.037611  2124 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:49.039734  2124 solver.cpp:311] Iteration 1000, loss = 0.294824
I0428 20:22:49.039755  2124 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:49.126504  2132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:49.127805  2124 solver.cpp:398]     Test net output #0: accuracy = 0.8829
I0428 20:22:49.127831  2124 solver.cpp:398]     Test net output #1: loss = 0.293086 (* 1 = 0.293086 loss)
I0428 20:22:49.127838  2124 solver.cpp:316] Optimization Done.
I0428 20:22:49.127842  2124 caffe.cpp:259] Optimization Done.
