I0428 19:50:33.476652 27042 caffe.cpp:218] Using GPUs 0
I0428 19:50:33.504889 27042 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:34.020032 27042 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test608.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:34.020164 27042 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test608.prototxt
I0428 19:50:34.020577 27042 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:34.020597 27042 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:34.020697 27042 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:34.020774 27042 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:34.020876 27042 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:34.020900 27042 net.cpp:86] Creating Layer mnist
I0428 19:50:34.020908 27042 net.cpp:382] mnist -> data
I0428 19:50:34.020931 27042 net.cpp:382] mnist -> label
I0428 19:50:34.021983 27042 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:34.024356 27042 net.cpp:124] Setting up mnist
I0428 19:50:34.024374 27042 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:34.024379 27042 net.cpp:131] Top shape: 64 (64)
I0428 19:50:34.024382 27042 net.cpp:139] Memory required for data: 200960
I0428 19:50:34.024390 27042 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:34.024436 27042 net.cpp:86] Creating Layer conv0
I0428 19:50:34.024457 27042 net.cpp:408] conv0 <- data
I0428 19:50:34.024471 27042 net.cpp:382] conv0 -> conv0
I0428 19:50:34.310847 27042 net.cpp:124] Setting up conv0
I0428 19:50:34.310875 27042 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:34.310880 27042 net.cpp:139] Memory required for data: 938240
I0428 19:50:34.310897 27042 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:34.310911 27042 net.cpp:86] Creating Layer pool0
I0428 19:50:34.310916 27042 net.cpp:408] pool0 <- conv0
I0428 19:50:34.310922 27042 net.cpp:382] pool0 -> pool0
I0428 19:50:34.310976 27042 net.cpp:124] Setting up pool0
I0428 19:50:34.310983 27042 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:34.310987 27042 net.cpp:139] Memory required for data: 1122560
I0428 19:50:34.310991 27042 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:34.311002 27042 net.cpp:86] Creating Layer conv1
I0428 19:50:34.311007 27042 net.cpp:408] conv1 <- pool0
I0428 19:50:34.311012 27042 net.cpp:382] conv1 -> conv1
I0428 19:50:34.314095 27042 net.cpp:124] Setting up conv1
I0428 19:50:34.314113 27042 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:34.314118 27042 net.cpp:139] Memory required for data: 1286400
I0428 19:50:34.314128 27042 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:34.314136 27042 net.cpp:86] Creating Layer pool1
I0428 19:50:34.314141 27042 net.cpp:408] pool1 <- conv1
I0428 19:50:34.314146 27042 net.cpp:382] pool1 -> pool1
I0428 19:50:34.314189 27042 net.cpp:124] Setting up pool1
I0428 19:50:34.314204 27042 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:34.314208 27042 net.cpp:139] Memory required for data: 1327360
I0428 19:50:34.314211 27042 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:34.314219 27042 net.cpp:86] Creating Layer ip1
I0428 19:50:34.314224 27042 net.cpp:408] ip1 <- pool1
I0428 19:50:34.314229 27042 net.cpp:382] ip1 -> ip1
I0428 19:50:34.314368 27042 net.cpp:124] Setting up ip1
I0428 19:50:34.314375 27042 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:34.314379 27042 net.cpp:139] Memory required for data: 1333760
I0428 19:50:34.314388 27042 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:34.314393 27042 net.cpp:86] Creating Layer relu1
I0428 19:50:34.314398 27042 net.cpp:408] relu1 <- ip1
I0428 19:50:34.314402 27042 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:34.314602 27042 net.cpp:124] Setting up relu1
I0428 19:50:34.314612 27042 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:34.314615 27042 net.cpp:139] Memory required for data: 1340160
I0428 19:50:34.314620 27042 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:34.314627 27042 net.cpp:86] Creating Layer ip2
I0428 19:50:34.314630 27042 net.cpp:408] ip2 <- ip1
I0428 19:50:34.314636 27042 net.cpp:382] ip2 -> ip2
I0428 19:50:34.314746 27042 net.cpp:124] Setting up ip2
I0428 19:50:34.314754 27042 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:34.314757 27042 net.cpp:139] Memory required for data: 1342720
I0428 19:50:34.314764 27042 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:34.314770 27042 net.cpp:86] Creating Layer relu2
I0428 19:50:34.314774 27042 net.cpp:408] relu2 <- ip2
I0428 19:50:34.314779 27042 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:34.315613 27042 net.cpp:124] Setting up relu2
I0428 19:50:34.315627 27042 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:34.315631 27042 net.cpp:139] Memory required for data: 1345280
I0428 19:50:34.315635 27042 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:34.315644 27042 net.cpp:86] Creating Layer ip3
I0428 19:50:34.315649 27042 net.cpp:408] ip3 <- ip2
I0428 19:50:34.315655 27042 net.cpp:382] ip3 -> ip3
I0428 19:50:34.315770 27042 net.cpp:124] Setting up ip3
I0428 19:50:34.315779 27042 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:34.315783 27042 net.cpp:139] Memory required for data: 1347840
I0428 19:50:34.315793 27042 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:34.315798 27042 net.cpp:86] Creating Layer relu3
I0428 19:50:34.315801 27042 net.cpp:408] relu3 <- ip3
I0428 19:50:34.315806 27042 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:34.315999 27042 net.cpp:124] Setting up relu3
I0428 19:50:34.316009 27042 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:34.316012 27042 net.cpp:139] Memory required for data: 1350400
I0428 19:50:34.316015 27042 layer_factory.hpp:77] Creating layer loss
I0428 19:50:34.316022 27042 net.cpp:86] Creating Layer loss
I0428 19:50:34.316026 27042 net.cpp:408] loss <- ip3
I0428 19:50:34.316030 27042 net.cpp:408] loss <- label
I0428 19:50:34.316037 27042 net.cpp:382] loss -> loss
I0428 19:50:34.316053 27042 layer_factory.hpp:77] Creating layer loss
I0428 19:50:34.316313 27042 net.cpp:124] Setting up loss
I0428 19:50:34.316324 27042 net.cpp:131] Top shape: (1)
I0428 19:50:34.316329 27042 net.cpp:134]     with loss weight 1
I0428 19:50:34.316345 27042 net.cpp:139] Memory required for data: 1350404
I0428 19:50:34.316350 27042 net.cpp:200] loss needs backward computation.
I0428 19:50:34.316355 27042 net.cpp:200] relu3 needs backward computation.
I0428 19:50:34.316359 27042 net.cpp:200] ip3 needs backward computation.
I0428 19:50:34.316362 27042 net.cpp:200] relu2 needs backward computation.
I0428 19:50:34.316366 27042 net.cpp:200] ip2 needs backward computation.
I0428 19:50:34.316370 27042 net.cpp:200] relu1 needs backward computation.
I0428 19:50:34.316372 27042 net.cpp:200] ip1 needs backward computation.
I0428 19:50:34.316376 27042 net.cpp:200] pool1 needs backward computation.
I0428 19:50:34.316380 27042 net.cpp:200] conv1 needs backward computation.
I0428 19:50:34.316383 27042 net.cpp:200] pool0 needs backward computation.
I0428 19:50:34.316387 27042 net.cpp:200] conv0 needs backward computation.
I0428 19:50:34.316391 27042 net.cpp:202] mnist does not need backward computation.
I0428 19:50:34.316395 27042 net.cpp:244] This network produces output loss
I0428 19:50:34.316406 27042 net.cpp:257] Network initialization done.
I0428 19:50:34.316779 27042 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test608.prototxt
I0428 19:50:34.316815 27042 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:34.316921 27042 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:34.317015 27042 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:34.317067 27042 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:34.317081 27042 net.cpp:86] Creating Layer mnist
I0428 19:50:34.317086 27042 net.cpp:382] mnist -> data
I0428 19:50:34.317095 27042 net.cpp:382] mnist -> label
I0428 19:50:34.317193 27042 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:34.319521 27042 net.cpp:124] Setting up mnist
I0428 19:50:34.319537 27042 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:34.319543 27042 net.cpp:131] Top shape: 100 (100)
I0428 19:50:34.319547 27042 net.cpp:139] Memory required for data: 314000
I0428 19:50:34.319551 27042 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:34.319560 27042 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:34.319563 27042 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:34.319569 27042 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:34.319576 27042 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:34.319636 27042 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:34.319643 27042 net.cpp:131] Top shape: 100 (100)
I0428 19:50:34.319646 27042 net.cpp:131] Top shape: 100 (100)
I0428 19:50:34.319650 27042 net.cpp:139] Memory required for data: 314800
I0428 19:50:34.319653 27042 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:34.319664 27042 net.cpp:86] Creating Layer conv0
I0428 19:50:34.319666 27042 net.cpp:408] conv0 <- data
I0428 19:50:34.319672 27042 net.cpp:382] conv0 -> conv0
I0428 19:50:34.321597 27042 net.cpp:124] Setting up conv0
I0428 19:50:34.321614 27042 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:34.321617 27042 net.cpp:139] Memory required for data: 1466800
I0428 19:50:34.321629 27042 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:34.321635 27042 net.cpp:86] Creating Layer pool0
I0428 19:50:34.321640 27042 net.cpp:408] pool0 <- conv0
I0428 19:50:34.321645 27042 net.cpp:382] pool0 -> pool0
I0428 19:50:34.321687 27042 net.cpp:124] Setting up pool0
I0428 19:50:34.321693 27042 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:34.321697 27042 net.cpp:139] Memory required for data: 1754800
I0428 19:50:34.321701 27042 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:34.321710 27042 net.cpp:86] Creating Layer conv1
I0428 19:50:34.321714 27042 net.cpp:408] conv1 <- pool0
I0428 19:50:34.321719 27042 net.cpp:382] conv1 -> conv1
I0428 19:50:34.323979 27042 net.cpp:124] Setting up conv1
I0428 19:50:34.323995 27042 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:34.324000 27042 net.cpp:139] Memory required for data: 2010800
I0428 19:50:34.324010 27042 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:34.324018 27042 net.cpp:86] Creating Layer pool1
I0428 19:50:34.324029 27042 net.cpp:408] pool1 <- conv1
I0428 19:50:34.324035 27042 net.cpp:382] pool1 -> pool1
I0428 19:50:34.324081 27042 net.cpp:124] Setting up pool1
I0428 19:50:34.324087 27042 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:34.324091 27042 net.cpp:139] Memory required for data: 2074800
I0428 19:50:34.324095 27042 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:34.324101 27042 net.cpp:86] Creating Layer ip1
I0428 19:50:34.324105 27042 net.cpp:408] ip1 <- pool1
I0428 19:50:34.324110 27042 net.cpp:382] ip1 -> ip1
I0428 19:50:34.324265 27042 net.cpp:124] Setting up ip1
I0428 19:50:34.324272 27042 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:34.324288 27042 net.cpp:139] Memory required for data: 2084800
I0428 19:50:34.324297 27042 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:34.324302 27042 net.cpp:86] Creating Layer relu1
I0428 19:50:34.324306 27042 net.cpp:408] relu1 <- ip1
I0428 19:50:34.324311 27042 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:34.324538 27042 net.cpp:124] Setting up relu1
I0428 19:50:34.324550 27042 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:34.324554 27042 net.cpp:139] Memory required for data: 2094800
I0428 19:50:34.324558 27042 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:34.324566 27042 net.cpp:86] Creating Layer ip2
I0428 19:50:34.324571 27042 net.cpp:408] ip2 <- ip1
I0428 19:50:34.324584 27042 net.cpp:382] ip2 -> ip2
I0428 19:50:34.324699 27042 net.cpp:124] Setting up ip2
I0428 19:50:34.324707 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.324710 27042 net.cpp:139] Memory required for data: 2098800
I0428 19:50:34.324717 27042 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:34.324723 27042 net.cpp:86] Creating Layer relu2
I0428 19:50:34.324726 27042 net.cpp:408] relu2 <- ip2
I0428 19:50:34.324731 27042 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:34.324920 27042 net.cpp:124] Setting up relu2
I0428 19:50:34.324931 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.324941 27042 net.cpp:139] Memory required for data: 2102800
I0428 19:50:34.324945 27042 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:34.324952 27042 net.cpp:86] Creating Layer ip3
I0428 19:50:34.324955 27042 net.cpp:408] ip3 <- ip2
I0428 19:50:34.324961 27042 net.cpp:382] ip3 -> ip3
I0428 19:50:34.325072 27042 net.cpp:124] Setting up ip3
I0428 19:50:34.325079 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.325083 27042 net.cpp:139] Memory required for data: 2106800
I0428 19:50:34.325091 27042 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:34.325103 27042 net.cpp:86] Creating Layer relu3
I0428 19:50:34.325108 27042 net.cpp:408] relu3 <- ip3
I0428 19:50:34.325117 27042 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:34.326025 27042 net.cpp:124] Setting up relu3
I0428 19:50:34.326041 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.326045 27042 net.cpp:139] Memory required for data: 2110800
I0428 19:50:34.326050 27042 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:34.326056 27042 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:34.326059 27042 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:34.326066 27042 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:34.326072 27042 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:34.326118 27042 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:34.326124 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.326128 27042 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:34.326133 27042 net.cpp:139] Memory required for data: 2118800
I0428 19:50:34.326135 27042 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:34.326148 27042 net.cpp:86] Creating Layer accuracy
I0428 19:50:34.326151 27042 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:34.326156 27042 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:34.326161 27042 net.cpp:382] accuracy -> accuracy
I0428 19:50:34.326170 27042 net.cpp:124] Setting up accuracy
I0428 19:50:34.326175 27042 net.cpp:131] Top shape: (1)
I0428 19:50:34.326179 27042 net.cpp:139] Memory required for data: 2118804
I0428 19:50:34.326182 27042 layer_factory.hpp:77] Creating layer loss
I0428 19:50:34.326186 27042 net.cpp:86] Creating Layer loss
I0428 19:50:34.326190 27042 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:34.326195 27042 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:34.326206 27042 net.cpp:382] loss -> loss
I0428 19:50:34.326213 27042 layer_factory.hpp:77] Creating layer loss
I0428 19:50:34.326479 27042 net.cpp:124] Setting up loss
I0428 19:50:34.326490 27042 net.cpp:131] Top shape: (1)
I0428 19:50:34.326494 27042 net.cpp:134]     with loss weight 1
I0428 19:50:34.326503 27042 net.cpp:139] Memory required for data: 2118808
I0428 19:50:34.326517 27042 net.cpp:200] loss needs backward computation.
I0428 19:50:34.326522 27042 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:34.326527 27042 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:34.326539 27042 net.cpp:200] relu3 needs backward computation.
I0428 19:50:34.326541 27042 net.cpp:200] ip3 needs backward computation.
I0428 19:50:34.326546 27042 net.cpp:200] relu2 needs backward computation.
I0428 19:50:34.326555 27042 net.cpp:200] ip2 needs backward computation.
I0428 19:50:34.326558 27042 net.cpp:200] relu1 needs backward computation.
I0428 19:50:34.326561 27042 net.cpp:200] ip1 needs backward computation.
I0428 19:50:34.326565 27042 net.cpp:200] pool1 needs backward computation.
I0428 19:50:34.326570 27042 net.cpp:200] conv1 needs backward computation.
I0428 19:50:34.326573 27042 net.cpp:200] pool0 needs backward computation.
I0428 19:50:34.326577 27042 net.cpp:200] conv0 needs backward computation.
I0428 19:50:34.326581 27042 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:34.326591 27042 net.cpp:202] mnist does not need backward computation.
I0428 19:50:34.326596 27042 net.cpp:244] This network produces output accuracy
I0428 19:50:34.326598 27042 net.cpp:244] This network produces output loss
I0428 19:50:34.326611 27042 net.cpp:257] Network initialization done.
I0428 19:50:34.326664 27042 solver.cpp:56] Solver scaffolding done.
I0428 19:50:34.327054 27042 caffe.cpp:248] Starting Optimization
I0428 19:50:34.327062 27042 solver.cpp:273] Solving LeNet
I0428 19:50:34.327065 27042 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:34.327283 27042 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:34.331292 27042 blocking_queue.cpp:49] Waiting for data
I0428 19:50:34.402532 27049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:34.403066 27042 solver.cpp:398]     Test net output #0: accuracy = 0.1115
I0428 19:50:34.403090 27042 solver.cpp:398]     Test net output #1: loss = 2.29702 (* 1 = 2.29702 loss)
I0428 19:50:34.405028 27042 solver.cpp:219] Iteration 0 (2.92098 iter/s, 0.0779357s/100 iters), loss = 2.30862
I0428 19:50:34.405061 27042 solver.cpp:238]     Train net output #0: loss = 2.30862 (* 1 = 2.30862 loss)
I0428 19:50:34.405076 27042 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:34.483500 27042 solver.cpp:219] Iteration 100 (1274.99 iter/s, 0.0784323s/100 iters), loss = 1.26824
I0428 19:50:34.483531 27042 solver.cpp:238]     Train net output #0: loss = 1.26824 (* 1 = 1.26824 loss)
I0428 19:50:34.483539 27042 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:34.561372 27042 solver.cpp:219] Iteration 200 (1284.83 iter/s, 0.0778312s/100 iters), loss = 0.765079
I0428 19:50:34.561400 27042 solver.cpp:238]     Train net output #0: loss = 0.765079 (* 1 = 0.765079 loss)
I0428 19:50:34.561408 27042 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:34.639794 27042 solver.cpp:219] Iteration 300 (1275.77 iter/s, 0.0783843s/100 iters), loss = 0.345101
I0428 19:50:34.639823 27042 solver.cpp:238]     Train net output #0: loss = 0.345101 (* 1 = 0.345101 loss)
I0428 19:50:34.639832 27042 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:34.717689 27042 solver.cpp:219] Iteration 400 (1284.44 iter/s, 0.0778547s/100 iters), loss = 0.344818
I0428 19:50:34.717717 27042 solver.cpp:238]     Train net output #0: loss = 0.344818 (* 1 = 0.344818 loss)
I0428 19:50:34.717725 27042 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:34.791891 27042 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:34.844444 27049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:34.844954 27042 solver.cpp:398]     Test net output #0: accuracy = 0.9089
I0428 19:50:34.845007 27042 solver.cpp:398]     Test net output #1: loss = 0.276155 (* 1 = 0.276155 loss)
I0428 19:50:34.845837 27042 solver.cpp:219] Iteration 500 (780.582 iter/s, 0.12811s/100 iters), loss = 0.164077
I0428 19:50:34.845882 27042 solver.cpp:238]     Train net output #0: loss = 0.164077 (* 1 = 0.164077 loss)
I0428 19:50:34.845903 27042 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:34.936928 27042 solver.cpp:219] Iteration 600 (1098.36 iter/s, 0.0910449s/100 iters), loss = 0.157904
I0428 19:50:34.936954 27042 solver.cpp:238]     Train net output #0: loss = 0.157904 (* 1 = 0.157904 loss)
I0428 19:50:34.936980 27042 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:35.015094 27042 solver.cpp:219] Iteration 700 (1280.15 iter/s, 0.0781159s/100 iters), loss = 0.442576
I0428 19:50:35.015120 27042 solver.cpp:238]     Train net output #0: loss = 0.442576 (* 1 = 0.442576 loss)
I0428 19:50:35.015143 27042 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:35.089563 27042 solver.cpp:219] Iteration 800 (1343.44 iter/s, 0.0744356s/100 iters), loss = 0.266318
I0428 19:50:35.089588 27042 solver.cpp:238]     Train net output #0: loss = 0.266318 (* 1 = 0.266318 loss)
I0428 19:50:35.089610 27042 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:35.164141 27042 solver.cpp:219] Iteration 900 (1341.49 iter/s, 0.0745441s/100 iters), loss = 0.235308
I0428 19:50:35.164167 27042 solver.cpp:238]     Train net output #0: loss = 0.235308 (* 1 = 0.235308 loss)
I0428 19:50:35.164192 27042 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:35.189153 27048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:35.238164 27042 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:35.238924 27042 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:35.239326 27042 solver.cpp:311] Iteration 1000, loss = 0.172757
I0428 19:50:35.239341 27042 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:35.313601 27049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:35.314175 27042 solver.cpp:398]     Test net output #0: accuracy = 0.9648
I0428 19:50:35.314194 27042 solver.cpp:398]     Test net output #1: loss = 0.115578 (* 1 = 0.115578 loss)
I0428 19:50:35.314199 27042 solver.cpp:316] Optimization Done.
I0428 19:50:35.314203 27042 caffe.cpp:259] Optimization Done.
