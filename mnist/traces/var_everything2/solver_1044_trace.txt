I0428 20:07:01.386402 31008 caffe.cpp:218] Using GPUs 0
I0428 20:07:01.424434 31008 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:01.939414 31008 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1044.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:01.939559 31008 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1044.prototxt
I0428 20:07:01.939982 31008 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:01.940003 31008 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:01.940106 31008 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:01.940191 31008 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:01.940290 31008 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:01.940316 31008 net.cpp:86] Creating Layer mnist
I0428 20:07:01.940325 31008 net.cpp:382] mnist -> data
I0428 20:07:01.940348 31008 net.cpp:382] mnist -> label
I0428 20:07:01.941462 31008 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:01.943924 31008 net.cpp:124] Setting up mnist
I0428 20:07:01.943943 31008 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:01.943949 31008 net.cpp:131] Top shape: 64 (64)
I0428 20:07:01.943953 31008 net.cpp:139] Memory required for data: 200960
I0428 20:07:01.943960 31008 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:01.943977 31008 net.cpp:86] Creating Layer conv0
I0428 20:07:01.944000 31008 net.cpp:408] conv0 <- data
I0428 20:07:01.944012 31008 net.cpp:382] conv0 -> conv0
I0428 20:07:02.232846 31008 net.cpp:124] Setting up conv0
I0428 20:07:02.232872 31008 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:02.232877 31008 net.cpp:139] Memory required for data: 3887360
I0428 20:07:02.232892 31008 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:02.232905 31008 net.cpp:86] Creating Layer pool0
I0428 20:07:02.232909 31008 net.cpp:408] pool0 <- conv0
I0428 20:07:02.232916 31008 net.cpp:382] pool0 -> pool0
I0428 20:07:02.232966 31008 net.cpp:124] Setting up pool0
I0428 20:07:02.232973 31008 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:02.232976 31008 net.cpp:139] Memory required for data: 4808960
I0428 20:07:02.232980 31008 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:02.232993 31008 net.cpp:86] Creating Layer conv1
I0428 20:07:02.233000 31008 net.cpp:408] conv1 <- pool0
I0428 20:07:02.233005 31008 net.cpp:382] conv1 -> conv1
I0428 20:07:02.235918 31008 net.cpp:124] Setting up conv1
I0428 20:07:02.235932 31008 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:02.235936 31008 net.cpp:139] Memory required for data: 4890880
I0428 20:07:02.235947 31008 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:02.235955 31008 net.cpp:86] Creating Layer pool1
I0428 20:07:02.235960 31008 net.cpp:408] pool1 <- conv1
I0428 20:07:02.235965 31008 net.cpp:382] pool1 -> pool1
I0428 20:07:02.236006 31008 net.cpp:124] Setting up pool1
I0428 20:07:02.236014 31008 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:02.236017 31008 net.cpp:139] Memory required for data: 4911360
I0428 20:07:02.236021 31008 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:02.236027 31008 net.cpp:86] Creating Layer ip1
I0428 20:07:02.236030 31008 net.cpp:408] ip1 <- pool1
I0428 20:07:02.236037 31008 net.cpp:382] ip1 -> ip1
I0428 20:07:02.236166 31008 net.cpp:124] Setting up ip1
I0428 20:07:02.236173 31008 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:02.236176 31008 net.cpp:139] Memory required for data: 4924160
I0428 20:07:02.236184 31008 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:02.236191 31008 net.cpp:86] Creating Layer relu1
I0428 20:07:02.236197 31008 net.cpp:408] relu1 <- ip1
I0428 20:07:02.236202 31008 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:02.236388 31008 net.cpp:124] Setting up relu1
I0428 20:07:02.236397 31008 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:02.236400 31008 net.cpp:139] Memory required for data: 4936960
I0428 20:07:02.236404 31008 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:02.236412 31008 net.cpp:86] Creating Layer ip2
I0428 20:07:02.236414 31008 net.cpp:408] ip2 <- ip1
I0428 20:07:02.236420 31008 net.cpp:382] ip2 -> ip2
I0428 20:07:02.236526 31008 net.cpp:124] Setting up ip2
I0428 20:07:02.236533 31008 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:02.236536 31008 net.cpp:139] Memory required for data: 4939520
I0428 20:07:02.236542 31008 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:02.236551 31008 net.cpp:86] Creating Layer relu2
I0428 20:07:02.236553 31008 net.cpp:408] relu2 <- ip2
I0428 20:07:02.236557 31008 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:02.237337 31008 net.cpp:124] Setting up relu2
I0428 20:07:02.237350 31008 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:02.237354 31008 net.cpp:139] Memory required for data: 4942080
I0428 20:07:02.237357 31008 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:02.237365 31008 net.cpp:86] Creating Layer ip3
I0428 20:07:02.237368 31008 net.cpp:408] ip3 <- ip2
I0428 20:07:02.237375 31008 net.cpp:382] ip3 -> ip3
I0428 20:07:02.237483 31008 net.cpp:124] Setting up ip3
I0428 20:07:02.237489 31008 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:02.237493 31008 net.cpp:139] Memory required for data: 4944640
I0428 20:07:02.237501 31008 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:02.237506 31008 net.cpp:86] Creating Layer relu3
I0428 20:07:02.237509 31008 net.cpp:408] relu3 <- ip3
I0428 20:07:02.237514 31008 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:02.237711 31008 net.cpp:124] Setting up relu3
I0428 20:07:02.237720 31008 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:02.237723 31008 net.cpp:139] Memory required for data: 4947200
I0428 20:07:02.237726 31008 layer_factory.hpp:77] Creating layer loss
I0428 20:07:02.237731 31008 net.cpp:86] Creating Layer loss
I0428 20:07:02.237735 31008 net.cpp:408] loss <- ip3
I0428 20:07:02.237740 31008 net.cpp:408] loss <- label
I0428 20:07:02.237746 31008 net.cpp:382] loss -> loss
I0428 20:07:02.237762 31008 layer_factory.hpp:77] Creating layer loss
I0428 20:07:02.238014 31008 net.cpp:124] Setting up loss
I0428 20:07:02.238023 31008 net.cpp:131] Top shape: (1)
I0428 20:07:02.238026 31008 net.cpp:134]     with loss weight 1
I0428 20:07:02.238040 31008 net.cpp:139] Memory required for data: 4947204
I0428 20:07:02.238044 31008 net.cpp:200] loss needs backward computation.
I0428 20:07:02.238047 31008 net.cpp:200] relu3 needs backward computation.
I0428 20:07:02.238050 31008 net.cpp:200] ip3 needs backward computation.
I0428 20:07:02.238052 31008 net.cpp:200] relu2 needs backward computation.
I0428 20:07:02.238055 31008 net.cpp:200] ip2 needs backward computation.
I0428 20:07:02.238059 31008 net.cpp:200] relu1 needs backward computation.
I0428 20:07:02.238061 31008 net.cpp:200] ip1 needs backward computation.
I0428 20:07:02.238064 31008 net.cpp:200] pool1 needs backward computation.
I0428 20:07:02.238066 31008 net.cpp:200] conv1 needs backward computation.
I0428 20:07:02.238070 31008 net.cpp:200] pool0 needs backward computation.
I0428 20:07:02.238072 31008 net.cpp:200] conv0 needs backward computation.
I0428 20:07:02.238075 31008 net.cpp:202] mnist does not need backward computation.
I0428 20:07:02.238078 31008 net.cpp:244] This network produces output loss
I0428 20:07:02.238090 31008 net.cpp:257] Network initialization done.
I0428 20:07:02.238420 31008 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1044.prototxt
I0428 20:07:02.238446 31008 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:02.238541 31008 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:02.238626 31008 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:02.238673 31008 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:02.238687 31008 net.cpp:86] Creating Layer mnist
I0428 20:07:02.238692 31008 net.cpp:382] mnist -> data
I0428 20:07:02.238699 31008 net.cpp:382] mnist -> label
I0428 20:07:02.238788 31008 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:02.240717 31008 net.cpp:124] Setting up mnist
I0428 20:07:02.240731 31008 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:02.240753 31008 net.cpp:131] Top shape: 100 (100)
I0428 20:07:02.240756 31008 net.cpp:139] Memory required for data: 314000
I0428 20:07:02.240761 31008 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:02.240767 31008 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:02.240770 31008 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:02.240775 31008 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:02.240782 31008 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:02.240857 31008 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:02.240865 31008 net.cpp:131] Top shape: 100 (100)
I0428 20:07:02.240869 31008 net.cpp:131] Top shape: 100 (100)
I0428 20:07:02.240872 31008 net.cpp:139] Memory required for data: 314800
I0428 20:07:02.240876 31008 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:02.240885 31008 net.cpp:86] Creating Layer conv0
I0428 20:07:02.240890 31008 net.cpp:408] conv0 <- data
I0428 20:07:02.240896 31008 net.cpp:382] conv0 -> conv0
I0428 20:07:02.242511 31008 net.cpp:124] Setting up conv0
I0428 20:07:02.242524 31008 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:02.242528 31008 net.cpp:139] Memory required for data: 6074800
I0428 20:07:02.242538 31008 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:02.242545 31008 net.cpp:86] Creating Layer pool0
I0428 20:07:02.242549 31008 net.cpp:408] pool0 <- conv0
I0428 20:07:02.242553 31008 net.cpp:382] pool0 -> pool0
I0428 20:07:02.242594 31008 net.cpp:124] Setting up pool0
I0428 20:07:02.242601 31008 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:02.242604 31008 net.cpp:139] Memory required for data: 7514800
I0428 20:07:02.242606 31008 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:02.242615 31008 net.cpp:86] Creating Layer conv1
I0428 20:07:02.242619 31008 net.cpp:408] conv1 <- pool0
I0428 20:07:02.242625 31008 net.cpp:382] conv1 -> conv1
I0428 20:07:02.244674 31008 net.cpp:124] Setting up conv1
I0428 20:07:02.244693 31008 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:02.244698 31008 net.cpp:139] Memory required for data: 7642800
I0428 20:07:02.244706 31008 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:02.244714 31008 net.cpp:86] Creating Layer pool1
I0428 20:07:02.244717 31008 net.cpp:408] pool1 <- conv1
I0428 20:07:02.244724 31008 net.cpp:382] pool1 -> pool1
I0428 20:07:02.244765 31008 net.cpp:124] Setting up pool1
I0428 20:07:02.244772 31008 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:02.244779 31008 net.cpp:139] Memory required for data: 7674800
I0428 20:07:02.244782 31008 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:02.244789 31008 net.cpp:86] Creating Layer ip1
I0428 20:07:02.244793 31008 net.cpp:408] ip1 <- pool1
I0428 20:07:02.244798 31008 net.cpp:382] ip1 -> ip1
I0428 20:07:02.244972 31008 net.cpp:124] Setting up ip1
I0428 20:07:02.244982 31008 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:02.244995 31008 net.cpp:139] Memory required for data: 7694800
I0428 20:07:02.245004 31008 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:02.245012 31008 net.cpp:86] Creating Layer relu1
I0428 20:07:02.245016 31008 net.cpp:408] relu1 <- ip1
I0428 20:07:02.245020 31008 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:02.245211 31008 net.cpp:124] Setting up relu1
I0428 20:07:02.245221 31008 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:02.245225 31008 net.cpp:139] Memory required for data: 7714800
I0428 20:07:02.245229 31008 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:02.245237 31008 net.cpp:86] Creating Layer ip2
I0428 20:07:02.245241 31008 net.cpp:408] ip2 <- ip1
I0428 20:07:02.245247 31008 net.cpp:382] ip2 -> ip2
I0428 20:07:02.245365 31008 net.cpp:124] Setting up ip2
I0428 20:07:02.245373 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.245375 31008 net.cpp:139] Memory required for data: 7718800
I0428 20:07:02.245383 31008 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:02.245388 31008 net.cpp:86] Creating Layer relu2
I0428 20:07:02.245390 31008 net.cpp:408] relu2 <- ip2
I0428 20:07:02.245394 31008 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:02.245556 31008 net.cpp:124] Setting up relu2
I0428 20:07:02.245565 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.245568 31008 net.cpp:139] Memory required for data: 7722800
I0428 20:07:02.245571 31008 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:02.245578 31008 net.cpp:86] Creating Layer ip3
I0428 20:07:02.245581 31008 net.cpp:408] ip3 <- ip2
I0428 20:07:02.245587 31008 net.cpp:382] ip3 -> ip3
I0428 20:07:02.245693 31008 net.cpp:124] Setting up ip3
I0428 20:07:02.245700 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.245703 31008 net.cpp:139] Memory required for data: 7726800
I0428 20:07:02.245712 31008 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:02.245723 31008 net.cpp:86] Creating Layer relu3
I0428 20:07:02.245725 31008 net.cpp:408] relu3 <- ip3
I0428 20:07:02.245731 31008 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:02.246542 31008 net.cpp:124] Setting up relu3
I0428 20:07:02.246556 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.246559 31008 net.cpp:139] Memory required for data: 7730800
I0428 20:07:02.246562 31008 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:02.246568 31008 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:02.246572 31008 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:02.246577 31008 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:02.246584 31008 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:02.246628 31008 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:02.246632 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.246636 31008 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:02.246639 31008 net.cpp:139] Memory required for data: 7738800
I0428 20:07:02.246641 31008 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:02.246649 31008 net.cpp:86] Creating Layer accuracy
I0428 20:07:02.246652 31008 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:02.246656 31008 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:02.246662 31008 net.cpp:382] accuracy -> accuracy
I0428 20:07:02.246670 31008 net.cpp:124] Setting up accuracy
I0428 20:07:02.246672 31008 net.cpp:131] Top shape: (1)
I0428 20:07:02.246675 31008 net.cpp:139] Memory required for data: 7738804
I0428 20:07:02.246680 31008 layer_factory.hpp:77] Creating layer loss
I0428 20:07:02.246683 31008 net.cpp:86] Creating Layer loss
I0428 20:07:02.246692 31008 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:02.246696 31008 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:02.246706 31008 net.cpp:382] loss -> loss
I0428 20:07:02.246711 31008 layer_factory.hpp:77] Creating layer loss
I0428 20:07:02.246961 31008 net.cpp:124] Setting up loss
I0428 20:07:02.246971 31008 net.cpp:131] Top shape: (1)
I0428 20:07:02.246974 31008 net.cpp:134]     with loss weight 1
I0428 20:07:02.246981 31008 net.cpp:139] Memory required for data: 7738808
I0428 20:07:02.246994 31008 net.cpp:200] loss needs backward computation.
I0428 20:07:02.246997 31008 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:02.247002 31008 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:02.247005 31008 net.cpp:200] relu3 needs backward computation.
I0428 20:07:02.247009 31008 net.cpp:200] ip3 needs backward computation.
I0428 20:07:02.247011 31008 net.cpp:200] relu2 needs backward computation.
I0428 20:07:02.247014 31008 net.cpp:200] ip2 needs backward computation.
I0428 20:07:02.247016 31008 net.cpp:200] relu1 needs backward computation.
I0428 20:07:02.247020 31008 net.cpp:200] ip1 needs backward computation.
I0428 20:07:02.247022 31008 net.cpp:200] pool1 needs backward computation.
I0428 20:07:02.247031 31008 net.cpp:200] conv1 needs backward computation.
I0428 20:07:02.247035 31008 net.cpp:200] pool0 needs backward computation.
I0428 20:07:02.247037 31008 net.cpp:200] conv0 needs backward computation.
I0428 20:07:02.247040 31008 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:02.247045 31008 net.cpp:202] mnist does not need backward computation.
I0428 20:07:02.247047 31008 net.cpp:244] This network produces output accuracy
I0428 20:07:02.247051 31008 net.cpp:244] This network produces output loss
I0428 20:07:02.247062 31008 net.cpp:257] Network initialization done.
I0428 20:07:02.247107 31008 solver.cpp:56] Solver scaffolding done.
I0428 20:07:02.247506 31008 caffe.cpp:248] Starting Optimization
I0428 20:07:02.247512 31008 solver.cpp:273] Solving LeNet
I0428 20:07:02.247515 31008 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:02.248375 31008 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:02.253304 31008 blocking_queue.cpp:49] Waiting for data
I0428 20:07:02.322715 31015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:02.323307 31008 solver.cpp:398]     Test net output #0: accuracy = 0.079
I0428 20:07:02.323338 31008 solver.cpp:398]     Test net output #1: loss = 2.30378 (* 1 = 2.30378 loss)
I0428 20:07:02.326993 31008 solver.cpp:219] Iteration 0 (-1.14303e-30 iter/s, 0.0794217s/100 iters), loss = 2.28538
I0428 20:07:02.327033 31008 solver.cpp:238]     Train net output #0: loss = 2.28538 (* 1 = 2.28538 loss)
I0428 20:07:02.327042 31008 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:02.424844 31008 solver.cpp:219] Iteration 100 (1022.34 iter/s, 0.0978152s/100 iters), loss = 0.826334
I0428 20:07:02.424872 31008 solver.cpp:238]     Train net output #0: loss = 0.826334 (* 1 = 0.826334 loss)
I0428 20:07:02.424880 31008 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:02.517720 31008 solver.cpp:219] Iteration 200 (1077.11 iter/s, 0.092841s/100 iters), loss = 0.777214
I0428 20:07:02.517745 31008 solver.cpp:238]     Train net output #0: loss = 0.777214 (* 1 = 0.777214 loss)
I0428 20:07:02.517751 31008 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:02.612479 31008 solver.cpp:219] Iteration 300 (1055.7 iter/s, 0.0947241s/100 iters), loss = 0.316364
I0428 20:07:02.612519 31008 solver.cpp:238]     Train net output #0: loss = 0.316364 (* 1 = 0.316364 loss)
I0428 20:07:02.612524 31008 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:02.710503 31008 solver.cpp:219] Iteration 400 (1020.51 iter/s, 0.0979907s/100 iters), loss = 0.425661
I0428 20:07:02.710542 31008 solver.cpp:238]     Train net output #0: loss = 0.425661 (* 1 = 0.425661 loss)
I0428 20:07:02.710547 31008 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:02.801570 31008 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:02.877807 31015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:02.878393 31008 solver.cpp:398]     Test net output #0: accuracy = 0.8641
I0428 20:07:02.878432 31008 solver.cpp:398]     Test net output #1: loss = 0.402496 (* 1 = 0.402496 loss)
I0428 20:07:02.879372 31008 solver.cpp:219] Iteration 500 (592.302 iter/s, 0.168833s/100 iters), loss = 0.539539
I0428 20:07:02.879433 31008 solver.cpp:238]     Train net output #0: loss = 0.539539 (* 1 = 0.539539 loss)
I0428 20:07:02.879441 31008 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:02.972785 31008 solver.cpp:219] Iteration 600 (1071.31 iter/s, 0.0933438s/100 iters), loss = 0.346018
I0428 20:07:02.972832 31008 solver.cpp:238]     Train net output #0: loss = 0.346018 (* 1 = 0.346018 loss)
I0428 20:07:02.972839 31008 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:03.063168 31008 solver.cpp:219] Iteration 700 (1107.1 iter/s, 0.090326s/100 iters), loss = 0.573578
I0428 20:07:03.063207 31008 solver.cpp:238]     Train net output #0: loss = 0.573578 (* 1 = 0.573578 loss)
I0428 20:07:03.063213 31008 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:03.150586 31008 solver.cpp:219] Iteration 800 (1144.57 iter/s, 0.0873687s/100 iters), loss = 0.522077
I0428 20:07:03.150625 31008 solver.cpp:238]     Train net output #0: loss = 0.522077 (* 1 = 0.522077 loss)
I0428 20:07:03.150631 31008 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:03.240082 31008 solver.cpp:219] Iteration 900 (1117.78 iter/s, 0.0894628s/100 iters), loss = 0.344988
I0428 20:07:03.240121 31008 solver.cpp:238]     Train net output #0: loss = 0.344988 (* 1 = 0.344988 loss)
I0428 20:07:03.240128 31008 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:03.269778 31014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:03.328757 31008 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:03.329617 31008 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:03.330193 31008 solver.cpp:311] Iteration 1000, loss = 0.426558
I0428 20:07:03.330209 31008 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:03.404711 31015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:03.405400 31008 solver.cpp:398]     Test net output #0: accuracy = 0.8791
I0428 20:07:03.405429 31008 solver.cpp:398]     Test net output #1: loss = 0.32474 (* 1 = 0.32474 loss)
I0428 20:07:03.405437 31008 solver.cpp:316] Optimization Done.
I0428 20:07:03.405442 31008 caffe.cpp:259] Optimization Done.
