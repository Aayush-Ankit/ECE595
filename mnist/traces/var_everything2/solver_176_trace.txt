I0428 19:33:18.522717 23075 caffe.cpp:218] Using GPUs 0
I0428 19:33:18.553550 23075 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:19.002670 23075 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test176.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:19.002813 23075 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test176.prototxt
I0428 19:33:19.003123 23075 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:19.003137 23075 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:19.003206 23075 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:19.003264 23075 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:19.003345 23075 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:19.003362 23075 net.cpp:86] Creating Layer mnist
I0428 19:33:19.003370 23075 net.cpp:382] mnist -> data
I0428 19:33:19.003388 23075 net.cpp:382] mnist -> label
I0428 19:33:19.004426 23075 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:19.006932 23075 net.cpp:124] Setting up mnist
I0428 19:33:19.006978 23075 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:19.006983 23075 net.cpp:131] Top shape: 64 (64)
I0428 19:33:19.006986 23075 net.cpp:139] Memory required for data: 200960
I0428 19:33:19.006994 23075 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:19.007009 23075 net.cpp:86] Creating Layer conv0
I0428 19:33:19.007012 23075 net.cpp:408] conv0 <- data
I0428 19:33:19.007024 23075 net.cpp:382] conv0 -> conv0
I0428 19:33:19.235725 23075 net.cpp:124] Setting up conv0
I0428 19:33:19.235766 23075 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:19.235770 23075 net.cpp:139] Memory required for data: 3887360
I0428 19:33:19.235786 23075 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:19.235798 23075 net.cpp:86] Creating Layer pool0
I0428 19:33:19.235837 23075 net.cpp:408] pool0 <- conv0
I0428 19:33:19.235842 23075 net.cpp:382] pool0 -> pool0
I0428 19:33:19.235888 23075 net.cpp:124] Setting up pool0
I0428 19:33:19.235894 23075 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:19.235898 23075 net.cpp:139] Memory required for data: 4808960
I0428 19:33:19.235900 23075 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:19.235908 23075 net.cpp:86] Creating Layer ip1
I0428 19:33:19.235911 23075 net.cpp:408] ip1 <- pool0
I0428 19:33:19.235915 23075 net.cpp:382] ip1 -> ip1
I0428 19:33:19.236213 23075 net.cpp:124] Setting up ip1
I0428 19:33:19.236233 23075 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:19.236253 23075 net.cpp:139] Memory required for data: 4811520
I0428 19:33:19.236259 23075 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:19.236264 23075 net.cpp:86] Creating Layer relu1
I0428 19:33:19.236268 23075 net.cpp:408] relu1 <- ip1
I0428 19:33:19.236271 23075 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:19.236418 23075 net.cpp:124] Setting up relu1
I0428 19:33:19.236425 23075 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:19.236428 23075 net.cpp:139] Memory required for data: 4814080
I0428 19:33:19.236431 23075 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:19.236438 23075 net.cpp:86] Creating Layer ip2
I0428 19:33:19.236440 23075 net.cpp:408] ip2 <- ip1
I0428 19:33:19.236444 23075 net.cpp:382] ip2 -> ip2
I0428 19:33:19.236532 23075 net.cpp:124] Setting up ip2
I0428 19:33:19.236538 23075 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:19.236541 23075 net.cpp:139] Memory required for data: 4826880
I0428 19:33:19.236548 23075 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:19.236552 23075 net.cpp:86] Creating Layer relu2
I0428 19:33:19.236555 23075 net.cpp:408] relu2 <- ip2
I0428 19:33:19.236559 23075 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:19.237396 23075 net.cpp:124] Setting up relu2
I0428 19:33:19.237408 23075 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:19.237427 23075 net.cpp:139] Memory required for data: 4839680
I0428 19:33:19.237431 23075 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:19.237437 23075 net.cpp:86] Creating Layer ip3
I0428 19:33:19.237442 23075 net.cpp:408] ip3 <- ip2
I0428 19:33:19.237447 23075 net.cpp:382] ip3 -> ip3
I0428 19:33:19.237556 23075 net.cpp:124] Setting up ip3
I0428 19:33:19.237562 23075 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:19.237565 23075 net.cpp:139] Memory required for data: 4842240
I0428 19:33:19.237586 23075 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:19.237592 23075 net.cpp:86] Creating Layer relu3
I0428 19:33:19.237596 23075 net.cpp:408] relu3 <- ip3
I0428 19:33:19.237599 23075 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:19.237761 23075 net.cpp:124] Setting up relu3
I0428 19:33:19.237767 23075 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:19.237771 23075 net.cpp:139] Memory required for data: 4844800
I0428 19:33:19.237773 23075 layer_factory.hpp:77] Creating layer loss
I0428 19:33:19.237779 23075 net.cpp:86] Creating Layer loss
I0428 19:33:19.237782 23075 net.cpp:408] loss <- ip3
I0428 19:33:19.237787 23075 net.cpp:408] loss <- label
I0428 19:33:19.237792 23075 net.cpp:382] loss -> loss
I0428 19:33:19.237807 23075 layer_factory.hpp:77] Creating layer loss
I0428 19:33:19.238062 23075 net.cpp:124] Setting up loss
I0428 19:33:19.238070 23075 net.cpp:131] Top shape: (1)
I0428 19:33:19.238075 23075 net.cpp:134]     with loss weight 1
I0428 19:33:19.238104 23075 net.cpp:139] Memory required for data: 4844804
I0428 19:33:19.238108 23075 net.cpp:200] loss needs backward computation.
I0428 19:33:19.238112 23075 net.cpp:200] relu3 needs backward computation.
I0428 19:33:19.238116 23075 net.cpp:200] ip3 needs backward computation.
I0428 19:33:19.238118 23075 net.cpp:200] relu2 needs backward computation.
I0428 19:33:19.238121 23075 net.cpp:200] ip2 needs backward computation.
I0428 19:33:19.238124 23075 net.cpp:200] relu1 needs backward computation.
I0428 19:33:19.238127 23075 net.cpp:200] ip1 needs backward computation.
I0428 19:33:19.238155 23075 net.cpp:200] pool0 needs backward computation.
I0428 19:33:19.238158 23075 net.cpp:200] conv0 needs backward computation.
I0428 19:33:19.238162 23075 net.cpp:202] mnist does not need backward computation.
I0428 19:33:19.238164 23075 net.cpp:244] This network produces output loss
I0428 19:33:19.238173 23075 net.cpp:257] Network initialization done.
I0428 19:33:19.238531 23075 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test176.prototxt
I0428 19:33:19.238572 23075 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:19.238663 23075 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:19.238723 23075 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:19.238770 23075 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:19.238783 23075 net.cpp:86] Creating Layer mnist
I0428 19:33:19.238787 23075 net.cpp:382] mnist -> data
I0428 19:33:19.238811 23075 net.cpp:382] mnist -> label
I0428 19:33:19.238891 23075 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:19.240983 23075 net.cpp:124] Setting up mnist
I0428 19:33:19.241014 23075 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:19.241019 23075 net.cpp:131] Top shape: 100 (100)
I0428 19:33:19.241021 23075 net.cpp:139] Memory required for data: 314000
I0428 19:33:19.241025 23075 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:19.241031 23075 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:19.241034 23075 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:19.241039 23075 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:19.241046 23075 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:19.241104 23075 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:19.241112 23075 net.cpp:131] Top shape: 100 (100)
I0428 19:33:19.241132 23075 net.cpp:131] Top shape: 100 (100)
I0428 19:33:19.241134 23075 net.cpp:139] Memory required for data: 314800
I0428 19:33:19.241147 23075 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:19.241156 23075 net.cpp:86] Creating Layer conv0
I0428 19:33:19.241159 23075 net.cpp:408] conv0 <- data
I0428 19:33:19.241179 23075 net.cpp:382] conv0 -> conv0
I0428 19:33:19.242931 23075 net.cpp:124] Setting up conv0
I0428 19:33:19.242944 23075 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:19.242962 23075 net.cpp:139] Memory required for data: 6074800
I0428 19:33:19.242971 23075 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:19.242977 23075 net.cpp:86] Creating Layer pool0
I0428 19:33:19.242981 23075 net.cpp:408] pool0 <- conv0
I0428 19:33:19.242985 23075 net.cpp:382] pool0 -> pool0
I0428 19:33:19.243017 23075 net.cpp:124] Setting up pool0
I0428 19:33:19.243023 23075 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:19.243026 23075 net.cpp:139] Memory required for data: 7514800
I0428 19:33:19.243029 23075 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:19.243036 23075 net.cpp:86] Creating Layer ip1
I0428 19:33:19.243039 23075 net.cpp:408] ip1 <- pool0
I0428 19:33:19.243043 23075 net.cpp:382] ip1 -> ip1
I0428 19:33:19.243371 23075 net.cpp:124] Setting up ip1
I0428 19:33:19.243378 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.243396 23075 net.cpp:139] Memory required for data: 7518800
I0428 19:33:19.243403 23075 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:19.243408 23075 net.cpp:86] Creating Layer relu1
I0428 19:33:19.243412 23075 net.cpp:408] relu1 <- ip1
I0428 19:33:19.243415 23075 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:19.243594 23075 net.cpp:124] Setting up relu1
I0428 19:33:19.243604 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.243608 23075 net.cpp:139] Memory required for data: 7522800
I0428 19:33:19.243613 23075 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:19.243618 23075 net.cpp:86] Creating Layer ip2
I0428 19:33:19.243621 23075 net.cpp:408] ip2 <- ip1
I0428 19:33:19.243628 23075 net.cpp:382] ip2 -> ip2
I0428 19:33:19.243806 23075 net.cpp:124] Setting up ip2
I0428 19:33:19.243813 23075 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:19.243816 23075 net.cpp:139] Memory required for data: 7542800
I0428 19:33:19.243824 23075 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:19.243829 23075 net.cpp:86] Creating Layer relu2
I0428 19:33:19.243831 23075 net.cpp:408] relu2 <- ip2
I0428 19:33:19.243835 23075 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:19.244693 23075 net.cpp:124] Setting up relu2
I0428 19:33:19.244716 23075 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:19.244720 23075 net.cpp:139] Memory required for data: 7562800
I0428 19:33:19.244740 23075 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:19.244747 23075 net.cpp:86] Creating Layer ip3
I0428 19:33:19.244751 23075 net.cpp:408] ip3 <- ip2
I0428 19:33:19.244756 23075 net.cpp:382] ip3 -> ip3
I0428 19:33:19.244891 23075 net.cpp:124] Setting up ip3
I0428 19:33:19.244899 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.244902 23075 net.cpp:139] Memory required for data: 7566800
I0428 19:33:19.244910 23075 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:19.244915 23075 net.cpp:86] Creating Layer relu3
I0428 19:33:19.244917 23075 net.cpp:408] relu3 <- ip3
I0428 19:33:19.244923 23075 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:19.245079 23075 net.cpp:124] Setting up relu3
I0428 19:33:19.245102 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.245105 23075 net.cpp:139] Memory required for data: 7570800
I0428 19:33:19.245110 23075 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:19.245115 23075 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:19.245132 23075 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:19.245139 23075 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:19.245146 23075 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:19.245177 23075 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:19.245183 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.245187 23075 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:19.245201 23075 net.cpp:139] Memory required for data: 7578800
I0428 19:33:19.245204 23075 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:19.245209 23075 net.cpp:86] Creating Layer accuracy
I0428 19:33:19.245213 23075 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:19.245218 23075 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:19.245223 23075 net.cpp:382] accuracy -> accuracy
I0428 19:33:19.245229 23075 net.cpp:124] Setting up accuracy
I0428 19:33:19.245234 23075 net.cpp:131] Top shape: (1)
I0428 19:33:19.245237 23075 net.cpp:139] Memory required for data: 7578804
I0428 19:33:19.245241 23075 layer_factory.hpp:77] Creating layer loss
I0428 19:33:19.245245 23075 net.cpp:86] Creating Layer loss
I0428 19:33:19.245249 23075 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:19.245254 23075 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:19.245257 23075 net.cpp:382] loss -> loss
I0428 19:33:19.245263 23075 layer_factory.hpp:77] Creating layer loss
I0428 19:33:19.245501 23075 net.cpp:124] Setting up loss
I0428 19:33:19.245509 23075 net.cpp:131] Top shape: (1)
I0428 19:33:19.245513 23075 net.cpp:134]     with loss weight 1
I0428 19:33:19.245519 23075 net.cpp:139] Memory required for data: 7578808
I0428 19:33:19.245523 23075 net.cpp:200] loss needs backward computation.
I0428 19:33:19.245527 23075 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:19.245532 23075 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:19.245534 23075 net.cpp:200] relu3 needs backward computation.
I0428 19:33:19.245537 23075 net.cpp:200] ip3 needs backward computation.
I0428 19:33:19.245540 23075 net.cpp:200] relu2 needs backward computation.
I0428 19:33:19.245543 23075 net.cpp:200] ip2 needs backward computation.
I0428 19:33:19.245546 23075 net.cpp:200] relu1 needs backward computation.
I0428 19:33:19.245549 23075 net.cpp:200] ip1 needs backward computation.
I0428 19:33:19.245553 23075 net.cpp:200] pool0 needs backward computation.
I0428 19:33:19.245556 23075 net.cpp:200] conv0 needs backward computation.
I0428 19:33:19.245560 23075 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:19.245564 23075 net.cpp:202] mnist does not need backward computation.
I0428 19:33:19.245566 23075 net.cpp:244] This network produces output accuracy
I0428 19:33:19.245570 23075 net.cpp:244] This network produces output loss
I0428 19:33:19.245580 23075 net.cpp:257] Network initialization done.
I0428 19:33:19.245617 23075 solver.cpp:56] Solver scaffolding done.
I0428 19:33:19.246034 23075 caffe.cpp:248] Starting Optimization
I0428 19:33:19.246040 23075 solver.cpp:273] Solving LeNet
I0428 19:33:19.246042 23075 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:19.246800 23075 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:19.252563 23075 blocking_queue.cpp:49] Waiting for data
I0428 19:33:19.328514 23082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:19.329670 23075 solver.cpp:398]     Test net output #0: accuracy = 0.0895
I0428 19:33:19.329699 23075 solver.cpp:398]     Test net output #1: loss = 2.31315 (* 1 = 2.31315 loss)
I0428 19:33:19.334784 23075 solver.cpp:219] Iteration 0 (0 iter/s, 0.0886984s/100 iters), loss = 2.31853
I0428 19:33:19.334816 23075 solver.cpp:238]     Train net output #0: loss = 2.31853 (* 1 = 2.31853 loss)
I0428 19:33:19.334831 23075 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:19.437778 23075 solver.cpp:219] Iteration 100 (971.346 iter/s, 0.10295s/100 iters), loss = 0.800203
I0428 19:33:19.437810 23075 solver.cpp:238]     Train net output #0: loss = 0.800203 (* 1 = 0.800203 loss)
I0428 19:33:19.437819 23075 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:19.538154 23075 solver.cpp:219] Iteration 200 (996.684 iter/s, 0.100333s/100 iters), loss = 0.588696
I0428 19:33:19.538185 23075 solver.cpp:238]     Train net output #0: loss = 0.588696 (* 1 = 0.588696 loss)
I0428 19:33:19.538192 23075 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:19.640955 23075 solver.cpp:219] Iteration 300 (973.195 iter/s, 0.102754s/100 iters), loss = 0.737184
I0428 19:33:19.641007 23075 solver.cpp:238]     Train net output #0: loss = 0.737184 (* 1 = 0.737184 loss)
I0428 19:33:19.641021 23075 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:19.751292 23075 solver.cpp:219] Iteration 400 (906.802 iter/s, 0.110278s/100 iters), loss = 0.676178
I0428 19:33:19.751327 23075 solver.cpp:238]     Train net output #0: loss = 0.676178 (* 1 = 0.676178 loss)
I0428 19:33:19.751338 23075 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:19.853864 23075 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:19.924243 23082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:19.925429 23075 solver.cpp:398]     Test net output #0: accuracy = 0.8196
I0428 19:33:19.925452 23075 solver.cpp:398]     Test net output #1: loss = 0.641623 (* 1 = 0.641623 loss)
I0428 19:33:19.926460 23075 solver.cpp:219] Iteration 500 (571.039 iter/s, 0.175119s/100 iters), loss = 0.656165
I0428 19:33:19.926491 23075 solver.cpp:238]     Train net output #0: loss = 0.656165 (* 1 = 0.656165 loss)
I0428 19:33:19.926497 23075 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:20.028394 23075 solver.cpp:219] Iteration 600 (981.47 iter/s, 0.101888s/100 iters), loss = 0.54554
I0428 19:33:20.028425 23075 solver.cpp:238]     Train net output #0: loss = 0.54554 (* 1 = 0.54554 loss)
I0428 19:33:20.028432 23075 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:20.127840 23075 solver.cpp:219] Iteration 700 (1006 iter/s, 0.099404s/100 iters), loss = 0.799657
I0428 19:33:20.127871 23075 solver.cpp:238]     Train net output #0: loss = 0.799657 (* 1 = 0.799657 loss)
I0428 19:33:20.127878 23075 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:20.231391 23075 solver.cpp:219] Iteration 800 (966.1 iter/s, 0.103509s/100 iters), loss = 0.786285
I0428 19:33:20.231420 23075 solver.cpp:238]     Train net output #0: loss = 0.786285 (* 1 = 0.786285 loss)
I0428 19:33:20.231428 23075 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:20.331918 23075 solver.cpp:219] Iteration 900 (995.162 iter/s, 0.100486s/100 iters), loss = 0.685381
I0428 19:33:20.331948 23075 solver.cpp:238]     Train net output #0: loss = 0.685381 (* 1 = 0.685381 loss)
I0428 19:33:20.331955 23075 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:20.367010 23081 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:20.433059 23075 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:20.434221 23075 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:20.435204 23075 solver.cpp:311] Iteration 1000, loss = 0.717506
I0428 19:33:20.435221 23075 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:20.506325 23082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:20.507298 23075 solver.cpp:398]     Test net output #0: accuracy = 0.8475
I0428 19:33:20.507316 23075 solver.cpp:398]     Test net output #1: loss = 0.579479 (* 1 = 0.579479 loss)
I0428 19:33:20.507321 23075 solver.cpp:316] Optimization Done.
I0428 19:33:20.507328 23075 caffe.cpp:259] Optimization Done.
