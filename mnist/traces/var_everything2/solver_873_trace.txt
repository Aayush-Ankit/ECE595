I0428 20:00:19.428668 29452 caffe.cpp:218] Using GPUs 0
I0428 20:00:19.466404 29452 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:19.977669 29452 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test873.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:19.977810 29452 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test873.prototxt
I0428 20:00:19.978214 29452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:19.978232 29452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:19.978330 29452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:19.978418 29452 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:19.978519 29452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:19.978543 29452 net.cpp:86] Creating Layer mnist
I0428 20:00:19.978550 29452 net.cpp:382] mnist -> data
I0428 20:00:19.978572 29452 net.cpp:382] mnist -> label
I0428 20:00:19.979651 29452 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:19.982343 29452 net.cpp:124] Setting up mnist
I0428 20:00:19.982362 29452 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:19.982368 29452 net.cpp:131] Top shape: 64 (64)
I0428 20:00:19.982372 29452 net.cpp:139] Memory required for data: 200960
I0428 20:00:19.982379 29452 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:19.982396 29452 net.cpp:86] Creating Layer conv0
I0428 20:00:19.982416 29452 net.cpp:408] conv0 <- data
I0428 20:00:19.982429 29452 net.cpp:382] conv0 -> conv0
I0428 20:00:20.265194 29452 net.cpp:124] Setting up conv0
I0428 20:00:20.265220 29452 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:20.265224 29452 net.cpp:139] Memory required for data: 1675520
I0428 20:00:20.265239 29452 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:20.265250 29452 net.cpp:86] Creating Layer pool0
I0428 20:00:20.265254 29452 net.cpp:408] pool0 <- conv0
I0428 20:00:20.265259 29452 net.cpp:382] pool0 -> pool0
I0428 20:00:20.265305 29452 net.cpp:124] Setting up pool0
I0428 20:00:20.265311 29452 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:20.265313 29452 net.cpp:139] Memory required for data: 2044160
I0428 20:00:20.265316 29452 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:20.265326 29452 net.cpp:86] Creating Layer conv1
I0428 20:00:20.265329 29452 net.cpp:408] conv1 <- pool0
I0428 20:00:20.265333 29452 net.cpp:382] conv1 -> conv1
I0428 20:00:20.267933 29452 net.cpp:124] Setting up conv1
I0428 20:00:20.267947 29452 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:20.267951 29452 net.cpp:139] Memory required for data: 2453760
I0428 20:00:20.267959 29452 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:20.267966 29452 net.cpp:86] Creating Layer pool1
I0428 20:00:20.267969 29452 net.cpp:408] pool1 <- conv1
I0428 20:00:20.267974 29452 net.cpp:382] pool1 -> pool1
I0428 20:00:20.268013 29452 net.cpp:124] Setting up pool1
I0428 20:00:20.268018 29452 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:20.268019 29452 net.cpp:139] Memory required for data: 2556160
I0428 20:00:20.268023 29452 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:20.268029 29452 net.cpp:86] Creating Layer ip1
I0428 20:00:20.268033 29452 net.cpp:408] ip1 <- pool1
I0428 20:00:20.268036 29452 net.cpp:382] ip1 -> ip1
I0428 20:00:20.268950 29452 net.cpp:124] Setting up ip1
I0428 20:00:20.268965 29452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:20.268983 29452 net.cpp:139] Memory required for data: 2558720
I0428 20:00:20.268995 29452 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:20.269001 29452 net.cpp:86] Creating Layer relu1
I0428 20:00:20.269003 29452 net.cpp:408] relu1 <- ip1
I0428 20:00:20.269008 29452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:20.269208 29452 net.cpp:124] Setting up relu1
I0428 20:00:20.269217 29452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:20.269220 29452 net.cpp:139] Memory required for data: 2561280
I0428 20:00:20.269223 29452 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:20.269229 29452 net.cpp:86] Creating Layer ip2
I0428 20:00:20.269233 29452 net.cpp:408] ip2 <- ip1
I0428 20:00:20.269238 29452 net.cpp:382] ip2 -> ip2
I0428 20:00:20.269346 29452 net.cpp:124] Setting up ip2
I0428 20:00:20.269352 29452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:20.269356 29452 net.cpp:139] Memory required for data: 2567680
I0428 20:00:20.269361 29452 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:20.269366 29452 net.cpp:86] Creating Layer relu2
I0428 20:00:20.269368 29452 net.cpp:408] relu2 <- ip2
I0428 20:00:20.269372 29452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:20.270131 29452 net.cpp:124] Setting up relu2
I0428 20:00:20.270144 29452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:20.270164 29452 net.cpp:139] Memory required for data: 2574080
I0428 20:00:20.270166 29452 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:20.270174 29452 net.cpp:86] Creating Layer ip3
I0428 20:00:20.270176 29452 net.cpp:408] ip3 <- ip2
I0428 20:00:20.270181 29452 net.cpp:382] ip3 -> ip3
I0428 20:00:20.270290 29452 net.cpp:124] Setting up ip3
I0428 20:00:20.270298 29452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:20.270300 29452 net.cpp:139] Memory required for data: 2576640
I0428 20:00:20.270308 29452 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:20.270313 29452 net.cpp:86] Creating Layer relu3
I0428 20:00:20.270316 29452 net.cpp:408] relu3 <- ip3
I0428 20:00:20.270319 29452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:20.270476 29452 net.cpp:124] Setting up relu3
I0428 20:00:20.270485 29452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:20.270488 29452 net.cpp:139] Memory required for data: 2579200
I0428 20:00:20.270490 29452 layer_factory.hpp:77] Creating layer loss
I0428 20:00:20.270496 29452 net.cpp:86] Creating Layer loss
I0428 20:00:20.270499 29452 net.cpp:408] loss <- ip3
I0428 20:00:20.270503 29452 net.cpp:408] loss <- label
I0428 20:00:20.270508 29452 net.cpp:382] loss -> loss
I0428 20:00:20.270539 29452 layer_factory.hpp:77] Creating layer loss
I0428 20:00:20.270803 29452 net.cpp:124] Setting up loss
I0428 20:00:20.270812 29452 net.cpp:131] Top shape: (1)
I0428 20:00:20.270815 29452 net.cpp:134]     with loss weight 1
I0428 20:00:20.270829 29452 net.cpp:139] Memory required for data: 2579204
I0428 20:00:20.270833 29452 net.cpp:200] loss needs backward computation.
I0428 20:00:20.270836 29452 net.cpp:200] relu3 needs backward computation.
I0428 20:00:20.270839 29452 net.cpp:200] ip3 needs backward computation.
I0428 20:00:20.270843 29452 net.cpp:200] relu2 needs backward computation.
I0428 20:00:20.270845 29452 net.cpp:200] ip2 needs backward computation.
I0428 20:00:20.270848 29452 net.cpp:200] relu1 needs backward computation.
I0428 20:00:20.270851 29452 net.cpp:200] ip1 needs backward computation.
I0428 20:00:20.270854 29452 net.cpp:200] pool1 needs backward computation.
I0428 20:00:20.270858 29452 net.cpp:200] conv1 needs backward computation.
I0428 20:00:20.270860 29452 net.cpp:200] pool0 needs backward computation.
I0428 20:00:20.270864 29452 net.cpp:200] conv0 needs backward computation.
I0428 20:00:20.270866 29452 net.cpp:202] mnist does not need backward computation.
I0428 20:00:20.270869 29452 net.cpp:244] This network produces output loss
I0428 20:00:20.270879 29452 net.cpp:257] Network initialization done.
I0428 20:00:20.271236 29452 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test873.prototxt
I0428 20:00:20.271280 29452 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:20.271368 29452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:20.271459 29452 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:20.271502 29452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:20.271513 29452 net.cpp:86] Creating Layer mnist
I0428 20:00:20.271517 29452 net.cpp:382] mnist -> data
I0428 20:00:20.271525 29452 net.cpp:382] mnist -> label
I0428 20:00:20.271606 29452 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:20.273599 29452 net.cpp:124] Setting up mnist
I0428 20:00:20.273628 29452 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:20.273633 29452 net.cpp:131] Top shape: 100 (100)
I0428 20:00:20.273638 29452 net.cpp:139] Memory required for data: 314000
I0428 20:00:20.273641 29452 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:20.273648 29452 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:20.273651 29452 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:20.273656 29452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:20.273663 29452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:20.273722 29452 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:20.273727 29452 net.cpp:131] Top shape: 100 (100)
I0428 20:00:20.273730 29452 net.cpp:131] Top shape: 100 (100)
I0428 20:00:20.273733 29452 net.cpp:139] Memory required for data: 314800
I0428 20:00:20.273736 29452 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:20.273743 29452 net.cpp:86] Creating Layer conv0
I0428 20:00:20.273746 29452 net.cpp:408] conv0 <- data
I0428 20:00:20.273751 29452 net.cpp:382] conv0 -> conv0
I0428 20:00:20.275483 29452 net.cpp:124] Setting up conv0
I0428 20:00:20.275496 29452 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:20.275501 29452 net.cpp:139] Memory required for data: 2618800
I0428 20:00:20.275508 29452 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:20.275514 29452 net.cpp:86] Creating Layer pool0
I0428 20:00:20.275517 29452 net.cpp:408] pool0 <- conv0
I0428 20:00:20.275522 29452 net.cpp:382] pool0 -> pool0
I0428 20:00:20.275557 29452 net.cpp:124] Setting up pool0
I0428 20:00:20.275562 29452 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:20.275564 29452 net.cpp:139] Memory required for data: 3194800
I0428 20:00:20.275568 29452 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:20.275575 29452 net.cpp:86] Creating Layer conv1
I0428 20:00:20.275578 29452 net.cpp:408] conv1 <- pool0
I0428 20:00:20.275583 29452 net.cpp:382] conv1 -> conv1
I0428 20:00:20.277706 29452 net.cpp:124] Setting up conv1
I0428 20:00:20.277720 29452 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:20.277724 29452 net.cpp:139] Memory required for data: 3834800
I0428 20:00:20.277734 29452 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:20.277740 29452 net.cpp:86] Creating Layer pool1
I0428 20:00:20.277752 29452 net.cpp:408] pool1 <- conv1
I0428 20:00:20.277757 29452 net.cpp:382] pool1 -> pool1
I0428 20:00:20.277801 29452 net.cpp:124] Setting up pool1
I0428 20:00:20.277806 29452 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:20.277814 29452 net.cpp:139] Memory required for data: 3994800
I0428 20:00:20.277817 29452 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:20.277823 29452 net.cpp:86] Creating Layer ip1
I0428 20:00:20.277827 29452 net.cpp:408] ip1 <- pool1
I0428 20:00:20.277832 29452 net.cpp:382] ip1 -> ip1
I0428 20:00:20.277961 29452 net.cpp:124] Setting up ip1
I0428 20:00:20.277968 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.277981 29452 net.cpp:139] Memory required for data: 3998800
I0428 20:00:20.277988 29452 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:20.277992 29452 net.cpp:86] Creating Layer relu1
I0428 20:00:20.277997 29452 net.cpp:408] relu1 <- ip1
I0428 20:00:20.278002 29452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:20.278244 29452 net.cpp:124] Setting up relu1
I0428 20:00:20.278254 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.278256 29452 net.cpp:139] Memory required for data: 4002800
I0428 20:00:20.278259 29452 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:20.278267 29452 net.cpp:86] Creating Layer ip2
I0428 20:00:20.278270 29452 net.cpp:408] ip2 <- ip1
I0428 20:00:20.278292 29452 net.cpp:382] ip2 -> ip2
I0428 20:00:20.278403 29452 net.cpp:124] Setting up ip2
I0428 20:00:20.278410 29452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:20.278414 29452 net.cpp:139] Memory required for data: 4012800
I0428 20:00:20.278419 29452 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:20.278431 29452 net.cpp:86] Creating Layer relu2
I0428 20:00:20.278434 29452 net.cpp:408] relu2 <- ip2
I0428 20:00:20.278439 29452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:20.278647 29452 net.cpp:124] Setting up relu2
I0428 20:00:20.278656 29452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:20.278661 29452 net.cpp:139] Memory required for data: 4022800
I0428 20:00:20.278663 29452 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:20.278669 29452 net.cpp:86] Creating Layer ip3
I0428 20:00:20.278672 29452 net.cpp:408] ip3 <- ip2
I0428 20:00:20.278678 29452 net.cpp:382] ip3 -> ip3
I0428 20:00:20.278785 29452 net.cpp:124] Setting up ip3
I0428 20:00:20.278791 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.278795 29452 net.cpp:139] Memory required for data: 4026800
I0428 20:00:20.278802 29452 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:20.278807 29452 net.cpp:86] Creating Layer relu3
I0428 20:00:20.278810 29452 net.cpp:408] relu3 <- ip3
I0428 20:00:20.278815 29452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:20.279657 29452 net.cpp:124] Setting up relu3
I0428 20:00:20.279670 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.279672 29452 net.cpp:139] Memory required for data: 4030800
I0428 20:00:20.279675 29452 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:20.279681 29452 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:20.279698 29452 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:20.279703 29452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:20.279711 29452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:20.279752 29452 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:20.279757 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.279759 29452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:20.279762 29452 net.cpp:139] Memory required for data: 4038800
I0428 20:00:20.279764 29452 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:20.279769 29452 net.cpp:86] Creating Layer accuracy
I0428 20:00:20.279772 29452 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:20.279777 29452 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:20.279780 29452 net.cpp:382] accuracy -> accuracy
I0428 20:00:20.279786 29452 net.cpp:124] Setting up accuracy
I0428 20:00:20.279790 29452 net.cpp:131] Top shape: (1)
I0428 20:00:20.279793 29452 net.cpp:139] Memory required for data: 4038804
I0428 20:00:20.279795 29452 layer_factory.hpp:77] Creating layer loss
I0428 20:00:20.279800 29452 net.cpp:86] Creating Layer loss
I0428 20:00:20.279803 29452 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:20.279808 29452 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:20.279810 29452 net.cpp:382] loss -> loss
I0428 20:00:20.279816 29452 layer_factory.hpp:77] Creating layer loss
I0428 20:00:20.280055 29452 net.cpp:124] Setting up loss
I0428 20:00:20.280063 29452 net.cpp:131] Top shape: (1)
I0428 20:00:20.280066 29452 net.cpp:134]     with loss weight 1
I0428 20:00:20.280081 29452 net.cpp:139] Memory required for data: 4038808
I0428 20:00:20.280086 29452 net.cpp:200] loss needs backward computation.
I0428 20:00:20.280088 29452 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:20.280092 29452 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:20.280094 29452 net.cpp:200] relu3 needs backward computation.
I0428 20:00:20.280097 29452 net.cpp:200] ip3 needs backward computation.
I0428 20:00:20.280100 29452 net.cpp:200] relu2 needs backward computation.
I0428 20:00:20.280113 29452 net.cpp:200] ip2 needs backward computation.
I0428 20:00:20.280124 29452 net.cpp:200] relu1 needs backward computation.
I0428 20:00:20.280128 29452 net.cpp:200] ip1 needs backward computation.
I0428 20:00:20.280130 29452 net.cpp:200] pool1 needs backward computation.
I0428 20:00:20.280133 29452 net.cpp:200] conv1 needs backward computation.
I0428 20:00:20.280141 29452 net.cpp:200] pool0 needs backward computation.
I0428 20:00:20.280144 29452 net.cpp:200] conv0 needs backward computation.
I0428 20:00:20.280148 29452 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:20.280155 29452 net.cpp:202] mnist does not need backward computation.
I0428 20:00:20.280158 29452 net.cpp:244] This network produces output accuracy
I0428 20:00:20.280161 29452 net.cpp:244] This network produces output loss
I0428 20:00:20.280171 29452 net.cpp:257] Network initialization done.
I0428 20:00:20.280211 29452 solver.cpp:56] Solver scaffolding done.
I0428 20:00:20.280572 29452 caffe.cpp:248] Starting Optimization
I0428 20:00:20.280580 29452 solver.cpp:273] Solving LeNet
I0428 20:00:20.280581 29452 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:20.280738 29452 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:20.285156 29452 blocking_queue.cpp:49] Waiting for data
I0428 20:00:20.357478 29459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:20.358148 29452 solver.cpp:398]     Test net output #0: accuracy = 0.0946
I0428 20:00:20.358170 29452 solver.cpp:398]     Test net output #1: loss = 2.31166 (* 1 = 2.31166 loss)
I0428 20:00:20.360910 29452 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803031s/100 iters), loss = 2.30438
I0428 20:00:20.360934 29452 solver.cpp:238]     Train net output #0: loss = 2.30438 (* 1 = 2.30438 loss)
I0428 20:00:20.360960 29452 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:20.451882 29452 solver.cpp:219] Iteration 100 (1099.68 iter/s, 0.0909353s/100 iters), loss = 1.04469
I0428 20:00:20.451908 29452 solver.cpp:238]     Train net output #0: loss = 1.04469 (* 1 = 1.04469 loss)
I0428 20:00:20.451930 29452 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:20.541790 29452 solver.cpp:219] Iteration 200 (1112.69 iter/s, 0.0898722s/100 iters), loss = 0.282612
I0428 20:00:20.541813 29452 solver.cpp:238]     Train net output #0: loss = 0.282612 (* 1 = 0.282612 loss)
I0428 20:00:20.541820 29452 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:20.630667 29452 solver.cpp:219] Iteration 300 (1125.57 iter/s, 0.0888442s/100 iters), loss = 0.289193
I0428 20:00:20.630705 29452 solver.cpp:238]     Train net output #0: loss = 0.289193 (* 1 = 0.289193 loss)
I0428 20:00:20.630712 29452 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:20.719619 29452 solver.cpp:219] Iteration 400 (1124.81 iter/s, 0.0889037s/100 iters), loss = 0.147156
I0428 20:00:20.719660 29452 solver.cpp:238]     Train net output #0: loss = 0.147156 (* 1 = 0.147156 loss)
I0428 20:00:20.719665 29452 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:20.808580 29452 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:20.861850 29459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:20.862388 29452 solver.cpp:398]     Test net output #0: accuracy = 0.9548
I0428 20:00:20.862408 29452 solver.cpp:398]     Test net output #1: loss = 0.148232 (* 1 = 0.148232 loss)
I0428 20:00:20.863317 29452 solver.cpp:219] Iteration 500 (696.088 iter/s, 0.14366s/100 iters), loss = 0.109225
I0428 20:00:20.863359 29452 solver.cpp:238]     Train net output #0: loss = 0.109225 (* 1 = 0.109225 loss)
I0428 20:00:20.863366 29452 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:20.962007 29452 solver.cpp:219] Iteration 600 (1013.83 iter/s, 0.0986358s/100 iters), loss = 0.113757
I0428 20:00:20.962046 29452 solver.cpp:238]     Train net output #0: loss = 0.113757 (* 1 = 0.113757 loss)
I0428 20:00:20.962052 29452 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:21.051686 29452 solver.cpp:219] Iteration 700 (1115.5 iter/s, 0.089646s/100 iters), loss = 0.083001
I0428 20:00:21.051724 29452 solver.cpp:238]     Train net output #0: loss = 0.0830009 (* 1 = 0.0830009 loss)
I0428 20:00:21.051748 29452 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:21.140179 29452 solver.cpp:219] Iteration 800 (1130.65 iter/s, 0.0884449s/100 iters), loss = 0.199934
I0428 20:00:21.140219 29452 solver.cpp:238]     Train net output #0: loss = 0.199934 (* 1 = 0.199934 loss)
I0428 20:00:21.140225 29452 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:21.228039 29452 solver.cpp:219] Iteration 900 (1138.62 iter/s, 0.0878254s/100 iters), loss = 0.112696
I0428 20:00:21.228078 29452 solver.cpp:238]     Train net output #0: loss = 0.112696 (* 1 = 0.112696 loss)
I0428 20:00:21.228083 29452 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:21.257553 29458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:21.315409 29452 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:21.316393 29452 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:21.317039 29452 solver.cpp:311] Iteration 1000, loss = 0.0746596
I0428 20:00:21.317056 29452 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:21.393548 29459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:21.394131 29452 solver.cpp:398]     Test net output #0: accuracy = 0.9701
I0428 20:00:21.394167 29452 solver.cpp:398]     Test net output #1: loss = 0.0952096 (* 1 = 0.0952096 loss)
I0428 20:00:21.394172 29452 solver.cpp:316] Optimization Done.
I0428 20:00:21.394176 29452 caffe.cpp:259] Optimization Done.
