I0428 19:51:41.914160 27342 caffe.cpp:218] Using GPUs 0
I0428 19:51:41.950153 27342 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:42.411797 27342 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test641.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:42.411929 27342 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test641.prototxt
I0428 19:51:42.412279 27342 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:42.412297 27342 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:42.412375 27342 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:42.412437 27342 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:42.412523 27342 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:42.412541 27342 net.cpp:86] Creating Layer mnist
I0428 19:51:42.412549 27342 net.cpp:382] mnist -> data
I0428 19:51:42.412566 27342 net.cpp:382] mnist -> label
I0428 19:51:42.413627 27342 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:42.415750 27342 net.cpp:124] Setting up mnist
I0428 19:51:42.415765 27342 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:42.415769 27342 net.cpp:131] Top shape: 64 (64)
I0428 19:51:42.415772 27342 net.cpp:139] Memory required for data: 200960
I0428 19:51:42.415777 27342 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:42.415830 27342 net.cpp:86] Creating Layer conv0
I0428 19:51:42.415848 27342 net.cpp:408] conv0 <- data
I0428 19:51:42.415858 27342 net.cpp:382] conv0 -> conv0
I0428 19:51:42.646710 27342 net.cpp:124] Setting up conv0
I0428 19:51:42.646750 27342 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:42.646754 27342 net.cpp:139] Memory required for data: 938240
I0428 19:51:42.646770 27342 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:42.646782 27342 net.cpp:86] Creating Layer pool0
I0428 19:51:42.646786 27342 net.cpp:408] pool0 <- conv0
I0428 19:51:42.646792 27342 net.cpp:382] pool0 -> pool0
I0428 19:51:42.646838 27342 net.cpp:124] Setting up pool0
I0428 19:51:42.646844 27342 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:42.646847 27342 net.cpp:139] Memory required for data: 1122560
I0428 19:51:42.646850 27342 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:42.646875 27342 net.cpp:86] Creating Layer conv1
I0428 19:51:42.646878 27342 net.cpp:408] conv1 <- pool0
I0428 19:51:42.646898 27342 net.cpp:382] conv1 -> conv1
I0428 19:51:42.649737 27342 net.cpp:124] Setting up conv1
I0428 19:51:42.649767 27342 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:42.649771 27342 net.cpp:139] Memory required for data: 1532160
I0428 19:51:42.649780 27342 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:42.649788 27342 net.cpp:86] Creating Layer pool1
I0428 19:51:42.649791 27342 net.cpp:408] pool1 <- conv1
I0428 19:51:42.649811 27342 net.cpp:382] pool1 -> pool1
I0428 19:51:42.649848 27342 net.cpp:124] Setting up pool1
I0428 19:51:42.649854 27342 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:42.649857 27342 net.cpp:139] Memory required for data: 1634560
I0428 19:51:42.649859 27342 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:42.649866 27342 net.cpp:86] Creating Layer ip1
I0428 19:51:42.649869 27342 net.cpp:408] ip1 <- pool1
I0428 19:51:42.649874 27342 net.cpp:382] ip1 -> ip1
I0428 19:51:42.649996 27342 net.cpp:124] Setting up ip1
I0428 19:51:42.650002 27342 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:42.650007 27342 net.cpp:139] Memory required for data: 1637120
I0428 19:51:42.650013 27342 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:42.650018 27342 net.cpp:86] Creating Layer relu1
I0428 19:51:42.650022 27342 net.cpp:408] relu1 <- ip1
I0428 19:51:42.650025 27342 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:42.650205 27342 net.cpp:124] Setting up relu1
I0428 19:51:42.650216 27342 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:42.650219 27342 net.cpp:139] Memory required for data: 1639680
I0428 19:51:42.650223 27342 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:42.650228 27342 net.cpp:86] Creating Layer ip2
I0428 19:51:42.650231 27342 net.cpp:408] ip2 <- ip1
I0428 19:51:42.650236 27342 net.cpp:382] ip2 -> ip2
I0428 19:51:42.650332 27342 net.cpp:124] Setting up ip2
I0428 19:51:42.650339 27342 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:42.650342 27342 net.cpp:139] Memory required for data: 1646080
I0428 19:51:42.650348 27342 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:42.650368 27342 net.cpp:86] Creating Layer relu2
I0428 19:51:42.650372 27342 net.cpp:408] relu2 <- ip2
I0428 19:51:42.650375 27342 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:42.651129 27342 net.cpp:124] Setting up relu2
I0428 19:51:42.651155 27342 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:42.651159 27342 net.cpp:139] Memory required for data: 1652480
I0428 19:51:42.651176 27342 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:42.651185 27342 net.cpp:86] Creating Layer ip3
I0428 19:51:42.651187 27342 net.cpp:408] ip3 <- ip2
I0428 19:51:42.651192 27342 net.cpp:382] ip3 -> ip3
I0428 19:51:42.651312 27342 net.cpp:124] Setting up ip3
I0428 19:51:42.651320 27342 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:42.651324 27342 net.cpp:139] Memory required for data: 1655040
I0428 19:51:42.651331 27342 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:42.651337 27342 net.cpp:86] Creating Layer relu3
I0428 19:51:42.651340 27342 net.cpp:408] relu3 <- ip3
I0428 19:51:42.651345 27342 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:42.651520 27342 net.cpp:124] Setting up relu3
I0428 19:51:42.651530 27342 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:42.651532 27342 net.cpp:139] Memory required for data: 1657600
I0428 19:51:42.651535 27342 layer_factory.hpp:77] Creating layer loss
I0428 19:51:42.651541 27342 net.cpp:86] Creating Layer loss
I0428 19:51:42.651546 27342 net.cpp:408] loss <- ip3
I0428 19:51:42.651549 27342 net.cpp:408] loss <- label
I0428 19:51:42.651569 27342 net.cpp:382] loss -> loss
I0428 19:51:42.651597 27342 layer_factory.hpp:77] Creating layer loss
I0428 19:51:42.651834 27342 net.cpp:124] Setting up loss
I0428 19:51:42.651844 27342 net.cpp:131] Top shape: (1)
I0428 19:51:42.651847 27342 net.cpp:134]     with loss weight 1
I0428 19:51:42.651860 27342 net.cpp:139] Memory required for data: 1657604
I0428 19:51:42.651863 27342 net.cpp:200] loss needs backward computation.
I0428 19:51:42.651866 27342 net.cpp:200] relu3 needs backward computation.
I0428 19:51:42.651870 27342 net.cpp:200] ip3 needs backward computation.
I0428 19:51:42.651871 27342 net.cpp:200] relu2 needs backward computation.
I0428 19:51:42.651875 27342 net.cpp:200] ip2 needs backward computation.
I0428 19:51:42.651876 27342 net.cpp:200] relu1 needs backward computation.
I0428 19:51:42.651880 27342 net.cpp:200] ip1 needs backward computation.
I0428 19:51:42.651882 27342 net.cpp:200] pool1 needs backward computation.
I0428 19:51:42.651885 27342 net.cpp:200] conv1 needs backward computation.
I0428 19:51:42.651887 27342 net.cpp:200] pool0 needs backward computation.
I0428 19:51:42.651890 27342 net.cpp:200] conv0 needs backward computation.
I0428 19:51:42.651893 27342 net.cpp:202] mnist does not need backward computation.
I0428 19:51:42.651895 27342 net.cpp:244] This network produces output loss
I0428 19:51:42.651921 27342 net.cpp:257] Network initialization done.
I0428 19:51:42.652253 27342 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test641.prototxt
I0428 19:51:42.652281 27342 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:42.652390 27342 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:42.652509 27342 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:42.652554 27342 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:42.652573 27342 net.cpp:86] Creating Layer mnist
I0428 19:51:42.652578 27342 net.cpp:382] mnist -> data
I0428 19:51:42.652587 27342 net.cpp:382] mnist -> label
I0428 19:51:42.652695 27342 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:42.654747 27342 net.cpp:124] Setting up mnist
I0428 19:51:42.654777 27342 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:42.654781 27342 net.cpp:131] Top shape: 100 (100)
I0428 19:51:42.654784 27342 net.cpp:139] Memory required for data: 314000
I0428 19:51:42.654788 27342 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:42.654794 27342 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:42.654798 27342 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:42.654803 27342 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:42.654810 27342 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:42.654922 27342 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:42.654927 27342 net.cpp:131] Top shape: 100 (100)
I0428 19:51:42.654932 27342 net.cpp:131] Top shape: 100 (100)
I0428 19:51:42.654933 27342 net.cpp:139] Memory required for data: 314800
I0428 19:51:42.654937 27342 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:42.654947 27342 net.cpp:86] Creating Layer conv0
I0428 19:51:42.654950 27342 net.cpp:408] conv0 <- data
I0428 19:51:42.654955 27342 net.cpp:382] conv0 -> conv0
I0428 19:51:42.656740 27342 net.cpp:124] Setting up conv0
I0428 19:51:42.656754 27342 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:42.656759 27342 net.cpp:139] Memory required for data: 1466800
I0428 19:51:42.656767 27342 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:42.656774 27342 net.cpp:86] Creating Layer pool0
I0428 19:51:42.656777 27342 net.cpp:408] pool0 <- conv0
I0428 19:51:42.656782 27342 net.cpp:382] pool0 -> pool0
I0428 19:51:42.656841 27342 net.cpp:124] Setting up pool0
I0428 19:51:42.656847 27342 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:42.656850 27342 net.cpp:139] Memory required for data: 1754800
I0428 19:51:42.656853 27342 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:42.656863 27342 net.cpp:86] Creating Layer conv1
I0428 19:51:42.656867 27342 net.cpp:408] conv1 <- pool0
I0428 19:51:42.656888 27342 net.cpp:382] conv1 -> conv1
I0428 19:51:42.659162 27342 net.cpp:124] Setting up conv1
I0428 19:51:42.659175 27342 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:42.659179 27342 net.cpp:139] Memory required for data: 2394800
I0428 19:51:42.659188 27342 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:42.659211 27342 net.cpp:86] Creating Layer pool1
I0428 19:51:42.659235 27342 net.cpp:408] pool1 <- conv1
I0428 19:51:42.659245 27342 net.cpp:382] pool1 -> pool1
I0428 19:51:42.659284 27342 net.cpp:124] Setting up pool1
I0428 19:51:42.659294 27342 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:42.659297 27342 net.cpp:139] Memory required for data: 2554800
I0428 19:51:42.659306 27342 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:42.659312 27342 net.cpp:86] Creating Layer ip1
I0428 19:51:42.659315 27342 net.cpp:408] ip1 <- pool1
I0428 19:51:42.659325 27342 net.cpp:382] ip1 -> ip1
I0428 19:51:42.659461 27342 net.cpp:124] Setting up ip1
I0428 19:51:42.659467 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.659481 27342 net.cpp:139] Memory required for data: 2558800
I0428 19:51:42.659487 27342 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:42.659492 27342 net.cpp:86] Creating Layer relu1
I0428 19:51:42.659497 27342 net.cpp:408] relu1 <- ip1
I0428 19:51:42.659502 27342 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:42.659740 27342 net.cpp:124] Setting up relu1
I0428 19:51:42.659749 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.659752 27342 net.cpp:139] Memory required for data: 2562800
I0428 19:51:42.659761 27342 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:42.659773 27342 net.cpp:86] Creating Layer ip2
I0428 19:51:42.659791 27342 net.cpp:408] ip2 <- ip1
I0428 19:51:42.659795 27342 net.cpp:382] ip2 -> ip2
I0428 19:51:42.659891 27342 net.cpp:124] Setting up ip2
I0428 19:51:42.659898 27342 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:42.659901 27342 net.cpp:139] Memory required for data: 2572800
I0428 19:51:42.659911 27342 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:42.659915 27342 net.cpp:86] Creating Layer relu2
I0428 19:51:42.659919 27342 net.cpp:408] relu2 <- ip2
I0428 19:51:42.659929 27342 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:42.660094 27342 net.cpp:124] Setting up relu2
I0428 19:51:42.660101 27342 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:42.660104 27342 net.cpp:139] Memory required for data: 2582800
I0428 19:51:42.660107 27342 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:42.660120 27342 net.cpp:86] Creating Layer ip3
I0428 19:51:42.660122 27342 net.cpp:408] ip3 <- ip2
I0428 19:51:42.660130 27342 net.cpp:382] ip3 -> ip3
I0428 19:51:42.660246 27342 net.cpp:124] Setting up ip3
I0428 19:51:42.660255 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.660259 27342 net.cpp:139] Memory required for data: 2586800
I0428 19:51:42.660266 27342 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:42.660270 27342 net.cpp:86] Creating Layer relu3
I0428 19:51:42.660274 27342 net.cpp:408] relu3 <- ip3
I0428 19:51:42.660277 27342 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:42.661082 27342 net.cpp:124] Setting up relu3
I0428 19:51:42.661109 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.661113 27342 net.cpp:139] Memory required for data: 2590800
I0428 19:51:42.661116 27342 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:42.661123 27342 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:42.661126 27342 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:42.661145 27342 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:42.661152 27342 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:42.661206 27342 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:42.661213 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.661217 27342 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:42.661221 27342 net.cpp:139] Memory required for data: 2598800
I0428 19:51:42.661228 27342 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:42.661239 27342 net.cpp:86] Creating Layer accuracy
I0428 19:51:42.661242 27342 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:42.661252 27342 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:42.661255 27342 net.cpp:382] accuracy -> accuracy
I0428 19:51:42.661262 27342 net.cpp:124] Setting up accuracy
I0428 19:51:42.661272 27342 net.cpp:131] Top shape: (1)
I0428 19:51:42.661274 27342 net.cpp:139] Memory required for data: 2598804
I0428 19:51:42.661278 27342 layer_factory.hpp:77] Creating layer loss
I0428 19:51:42.661288 27342 net.cpp:86] Creating Layer loss
I0428 19:51:42.661290 27342 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:42.661294 27342 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:42.661298 27342 net.cpp:382] loss -> loss
I0428 19:51:42.661304 27342 layer_factory.hpp:77] Creating layer loss
I0428 19:51:42.661583 27342 net.cpp:124] Setting up loss
I0428 19:51:42.661592 27342 net.cpp:131] Top shape: (1)
I0428 19:51:42.661594 27342 net.cpp:134]     with loss weight 1
I0428 19:51:42.661600 27342 net.cpp:139] Memory required for data: 2598808
I0428 19:51:42.661613 27342 net.cpp:200] loss needs backward computation.
I0428 19:51:42.661617 27342 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:42.661620 27342 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:42.661623 27342 net.cpp:200] relu3 needs backward computation.
I0428 19:51:42.661625 27342 net.cpp:200] ip3 needs backward computation.
I0428 19:51:42.661635 27342 net.cpp:200] relu2 needs backward computation.
I0428 19:51:42.661638 27342 net.cpp:200] ip2 needs backward computation.
I0428 19:51:42.661640 27342 net.cpp:200] relu1 needs backward computation.
I0428 19:51:42.661643 27342 net.cpp:200] ip1 needs backward computation.
I0428 19:51:42.661645 27342 net.cpp:200] pool1 needs backward computation.
I0428 19:51:42.661648 27342 net.cpp:200] conv1 needs backward computation.
I0428 19:51:42.661656 27342 net.cpp:200] pool0 needs backward computation.
I0428 19:51:42.661659 27342 net.cpp:200] conv0 needs backward computation.
I0428 19:51:42.661662 27342 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:42.661670 27342 net.cpp:202] mnist does not need backward computation.
I0428 19:51:42.661674 27342 net.cpp:244] This network produces output accuracy
I0428 19:51:42.661676 27342 net.cpp:244] This network produces output loss
I0428 19:51:42.661687 27342 net.cpp:257] Network initialization done.
I0428 19:51:42.661726 27342 solver.cpp:56] Solver scaffolding done.
I0428 19:51:42.662051 27342 caffe.cpp:248] Starting Optimization
I0428 19:51:42.662057 27342 solver.cpp:273] Solving LeNet
I0428 19:51:42.662060 27342 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:42.662232 27342 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:42.666518 27342 blocking_queue.cpp:49] Waiting for data
I0428 19:51:42.734382 27349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:42.734901 27342 solver.cpp:398]     Test net output #0: accuracy = 0.1181
I0428 19:51:42.734920 27342 solver.cpp:398]     Test net output #1: loss = 2.30374 (* 1 = 2.30374 loss)
I0428 19:51:42.736639 27342 solver.cpp:219] Iteration 0 (-2.63499e-31 iter/s, 0.0745503s/100 iters), loss = 2.2907
I0428 19:51:42.736706 27342 solver.cpp:238]     Train net output #0: loss = 2.2907 (* 1 = 2.2907 loss)
I0428 19:51:42.736719 27342 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:42.835655 27342 solver.cpp:219] Iteration 100 (1010.58 iter/s, 0.098953s/100 iters), loss = 0.998981
I0428 19:51:42.835682 27342 solver.cpp:238]     Train net output #0: loss = 0.998981 (* 1 = 0.998981 loss)
I0428 19:51:42.835688 27342 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:42.922791 27342 solver.cpp:219] Iteration 200 (1148.13 iter/s, 0.0870985s/100 iters), loss = 0.312708
I0428 19:51:42.922816 27342 solver.cpp:238]     Train net output #0: loss = 0.312708 (* 1 = 0.312708 loss)
I0428 19:51:42.922837 27342 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:43.007560 27342 solver.cpp:219] Iteration 300 (1180.15 iter/s, 0.084735s/100 iters), loss = 0.233187
I0428 19:51:43.007585 27342 solver.cpp:238]     Train net output #0: loss = 0.233187 (* 1 = 0.233187 loss)
I0428 19:51:43.007609 27342 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:43.091908 27342 solver.cpp:219] Iteration 400 (1186.03 iter/s, 0.0843151s/100 iters), loss = 0.244718
I0428 19:51:43.091933 27342 solver.cpp:238]     Train net output #0: loss = 0.244718 (* 1 = 0.244718 loss)
I0428 19:51:43.091953 27342 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:43.175158 27342 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:43.246439 27349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:43.246994 27342 solver.cpp:398]     Test net output #0: accuracy = 0.9394
I0428 19:51:43.247015 27342 solver.cpp:398]     Test net output #1: loss = 0.196844 (* 1 = 0.196844 loss)
I0428 19:51:43.247910 27342 solver.cpp:219] Iteration 500 (641.172 iter/s, 0.155964s/100 iters), loss = 0.150355
I0428 19:51:43.248013 27342 solver.cpp:238]     Train net output #0: loss = 0.150355 (* 1 = 0.150355 loss)
I0428 19:51:43.248021 27342 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:43.343653 27342 solver.cpp:219] Iteration 600 (1045.66 iter/s, 0.095633s/100 iters), loss = 0.150977
I0428 19:51:43.343693 27342 solver.cpp:238]     Train net output #0: loss = 0.150977 (* 1 = 0.150977 loss)
I0428 19:51:43.343714 27342 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:43.428887 27342 solver.cpp:219] Iteration 700 (1173.92 iter/s, 0.0851845s/100 iters), loss = 0.194986
I0428 19:51:43.428912 27342 solver.cpp:238]     Train net output #0: loss = 0.194986 (* 1 = 0.194986 loss)
I0428 19:51:43.428935 27342 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:43.512850 27342 solver.cpp:219] Iteration 800 (1191.51 iter/s, 0.083927s/100 iters), loss = 0.255022
I0428 19:51:43.512872 27342 solver.cpp:238]     Train net output #0: loss = 0.255022 (* 1 = 0.255022 loss)
I0428 19:51:43.512894 27342 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:43.596765 27342 solver.cpp:219] Iteration 900 (1192.14 iter/s, 0.0838828s/100 iters), loss = 0.214402
I0428 19:51:43.596789 27342 solver.cpp:238]     Train net output #0: loss = 0.214402 (* 1 = 0.214402 loss)
I0428 19:51:43.596796 27342 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:43.625766 27348 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:43.680866 27342 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:43.681749 27342 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:43.682312 27342 solver.cpp:311] Iteration 1000, loss = 0.15526
I0428 19:51:43.682327 27342 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:43.756834 27349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:43.757483 27342 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 19:51:43.757511 27342 solver.cpp:398]     Test net output #1: loss = 0.112014 (* 1 = 0.112014 loss)
I0428 19:51:43.757520 27342 solver.cpp:316] Optimization Done.
I0428 19:51:43.757525 27342 caffe.cpp:259] Optimization Done.
