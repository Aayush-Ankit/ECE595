I0428 20:13:38.468458 32495 caffe.cpp:218] Using GPUs 0
I0428 20:13:38.497664 32495 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:38.947137 32495 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1203.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:38.947275 32495 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1203.prototxt
I0428 20:13:38.947644 32495 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:38.947677 32495 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:38.947763 32495 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:38.947845 32495 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:38.947927 32495 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:38.947947 32495 net.cpp:86] Creating Layer mnist
I0428 20:13:38.947957 32495 net.cpp:382] mnist -> data
I0428 20:13:38.947983 32495 net.cpp:382] mnist -> label
I0428 20:13:38.948987 32495 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:38.951354 32495 net.cpp:124] Setting up mnist
I0428 20:13:38.951369 32495 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:38.951373 32495 net.cpp:131] Top shape: 64 (64)
I0428 20:13:38.951376 32495 net.cpp:139] Memory required for data: 200960
I0428 20:13:38.951382 32495 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:38.951398 32495 net.cpp:86] Creating Layer conv0
I0428 20:13:38.951423 32495 net.cpp:408] conv0 <- data
I0428 20:13:38.951434 32495 net.cpp:382] conv0 -> conv0
I0428 20:13:39.187388 32495 net.cpp:124] Setting up conv0
I0428 20:13:39.187430 32495 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:39.187434 32495 net.cpp:139] Memory required for data: 3887360
I0428 20:13:39.187450 32495 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:39.187463 32495 net.cpp:86] Creating Layer pool0
I0428 20:13:39.187465 32495 net.cpp:408] pool0 <- conv0
I0428 20:13:39.187471 32495 net.cpp:382] pool0 -> pool0
I0428 20:13:39.187543 32495 net.cpp:124] Setting up pool0
I0428 20:13:39.187549 32495 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:39.187552 32495 net.cpp:139] Memory required for data: 4808960
I0428 20:13:39.187556 32495 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:39.187566 32495 net.cpp:86] Creating Layer conv1
I0428 20:13:39.187568 32495 net.cpp:408] conv1 <- pool0
I0428 20:13:39.187572 32495 net.cpp:382] conv1 -> conv1
I0428 20:13:39.189890 32495 net.cpp:124] Setting up conv1
I0428 20:13:39.189919 32495 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:39.189924 32495 net.cpp:139] Memory required for data: 6447360
I0428 20:13:39.189931 32495 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:39.189939 32495 net.cpp:86] Creating Layer pool1
I0428 20:13:39.189942 32495 net.cpp:408] pool1 <- conv1
I0428 20:13:39.189947 32495 net.cpp:382] pool1 -> pool1
I0428 20:13:39.190012 32495 net.cpp:124] Setting up pool1
I0428 20:13:39.190018 32495 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:39.190021 32495 net.cpp:139] Memory required for data: 6856960
I0428 20:13:39.190026 32495 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:39.190032 32495 net.cpp:86] Creating Layer ip1
I0428 20:13:39.190035 32495 net.cpp:408] ip1 <- pool1
I0428 20:13:39.190039 32495 net.cpp:382] ip1 -> ip1
I0428 20:13:39.191602 32495 net.cpp:124] Setting up ip1
I0428 20:13:39.191614 32495 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:39.191634 32495 net.cpp:139] Memory required for data: 6869760
I0428 20:13:39.191642 32495 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:39.191648 32495 net.cpp:86] Creating Layer relu1
I0428 20:13:39.191651 32495 net.cpp:408] relu1 <- ip1
I0428 20:13:39.191656 32495 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:39.191846 32495 net.cpp:124] Setting up relu1
I0428 20:13:39.191870 32495 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:39.191874 32495 net.cpp:139] Memory required for data: 6882560
I0428 20:13:39.191877 32495 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:39.191884 32495 net.cpp:86] Creating Layer ip2
I0428 20:13:39.191887 32495 net.cpp:408] ip2 <- ip1
I0428 20:13:39.191892 32495 net.cpp:382] ip2 -> ip2
I0428 20:13:39.192929 32495 net.cpp:124] Setting up ip2
I0428 20:13:39.192957 32495 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:39.192960 32495 net.cpp:139] Memory required for data: 6888960
I0428 20:13:39.192982 32495 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:39.192991 32495 net.cpp:86] Creating Layer relu2
I0428 20:13:39.192993 32495 net.cpp:408] relu2 <- ip2
I0428 20:13:39.192999 32495 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:39.193855 32495 net.cpp:124] Setting up relu2
I0428 20:13:39.193867 32495 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:39.193886 32495 net.cpp:139] Memory required for data: 6895360
I0428 20:13:39.193889 32495 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:39.193912 32495 net.cpp:86] Creating Layer ip3
I0428 20:13:39.193917 32495 net.cpp:408] ip3 <- ip2
I0428 20:13:39.193922 32495 net.cpp:382] ip3 -> ip3
I0428 20:13:39.194023 32495 net.cpp:124] Setting up ip3
I0428 20:13:39.194031 32495 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:39.194034 32495 net.cpp:139] Memory required for data: 6897920
I0428 20:13:39.194043 32495 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:39.194048 32495 net.cpp:86] Creating Layer relu3
I0428 20:13:39.194051 32495 net.cpp:408] relu3 <- ip3
I0428 20:13:39.194056 32495 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:39.194237 32495 net.cpp:124] Setting up relu3
I0428 20:13:39.194247 32495 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:39.194250 32495 net.cpp:139] Memory required for data: 6900480
I0428 20:13:39.194253 32495 layer_factory.hpp:77] Creating layer loss
I0428 20:13:39.194273 32495 net.cpp:86] Creating Layer loss
I0428 20:13:39.194277 32495 net.cpp:408] loss <- ip3
I0428 20:13:39.194280 32495 net.cpp:408] loss <- label
I0428 20:13:39.194285 32495 net.cpp:382] loss -> loss
I0428 20:13:39.194303 32495 layer_factory.hpp:77] Creating layer loss
I0428 20:13:39.194530 32495 net.cpp:124] Setting up loss
I0428 20:13:39.194553 32495 net.cpp:131] Top shape: (1)
I0428 20:13:39.194557 32495 net.cpp:134]     with loss weight 1
I0428 20:13:39.194577 32495 net.cpp:139] Memory required for data: 6900484
I0428 20:13:39.194581 32495 net.cpp:200] loss needs backward computation.
I0428 20:13:39.194586 32495 net.cpp:200] relu3 needs backward computation.
I0428 20:13:39.194588 32495 net.cpp:200] ip3 needs backward computation.
I0428 20:13:39.194591 32495 net.cpp:200] relu2 needs backward computation.
I0428 20:13:39.194594 32495 net.cpp:200] ip2 needs backward computation.
I0428 20:13:39.194597 32495 net.cpp:200] relu1 needs backward computation.
I0428 20:13:39.194599 32495 net.cpp:200] ip1 needs backward computation.
I0428 20:13:39.194602 32495 net.cpp:200] pool1 needs backward computation.
I0428 20:13:39.194605 32495 net.cpp:200] conv1 needs backward computation.
I0428 20:13:39.194609 32495 net.cpp:200] pool0 needs backward computation.
I0428 20:13:39.194613 32495 net.cpp:200] conv0 needs backward computation.
I0428 20:13:39.194617 32495 net.cpp:202] mnist does not need backward computation.
I0428 20:13:39.194619 32495 net.cpp:244] This network produces output loss
I0428 20:13:39.194628 32495 net.cpp:257] Network initialization done.
I0428 20:13:39.195016 32495 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1203.prototxt
I0428 20:13:39.195060 32495 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:39.195152 32495 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:39.195263 32495 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:39.195307 32495 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:39.195319 32495 net.cpp:86] Creating Layer mnist
I0428 20:13:39.195323 32495 net.cpp:382] mnist -> data
I0428 20:13:39.195332 32495 net.cpp:382] mnist -> label
I0428 20:13:39.195410 32495 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:39.196518 32495 net.cpp:124] Setting up mnist
I0428 20:13:39.196547 32495 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:39.196552 32495 net.cpp:131] Top shape: 100 (100)
I0428 20:13:39.196555 32495 net.cpp:139] Memory required for data: 314000
I0428 20:13:39.196559 32495 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:39.196607 32495 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:39.196611 32495 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:39.196616 32495 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:39.196624 32495 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:39.196666 32495 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:39.196671 32495 net.cpp:131] Top shape: 100 (100)
I0428 20:13:39.196676 32495 net.cpp:131] Top shape: 100 (100)
I0428 20:13:39.196678 32495 net.cpp:139] Memory required for data: 314800
I0428 20:13:39.196681 32495 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:39.196689 32495 net.cpp:86] Creating Layer conv0
I0428 20:13:39.196692 32495 net.cpp:408] conv0 <- data
I0428 20:13:39.196697 32495 net.cpp:382] conv0 -> conv0
I0428 20:13:39.198498 32495 net.cpp:124] Setting up conv0
I0428 20:13:39.198513 32495 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:39.198516 32495 net.cpp:139] Memory required for data: 6074800
I0428 20:13:39.198539 32495 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:39.198545 32495 net.cpp:86] Creating Layer pool0
I0428 20:13:39.198549 32495 net.cpp:408] pool0 <- conv0
I0428 20:13:39.198554 32495 net.cpp:382] pool0 -> pool0
I0428 20:13:39.198585 32495 net.cpp:124] Setting up pool0
I0428 20:13:39.198591 32495 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:39.198593 32495 net.cpp:139] Memory required for data: 7514800
I0428 20:13:39.198596 32495 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:39.198603 32495 net.cpp:86] Creating Layer conv1
I0428 20:13:39.198606 32495 net.cpp:408] conv1 <- pool0
I0428 20:13:39.198611 32495 net.cpp:382] conv1 -> conv1
I0428 20:13:39.200395 32495 net.cpp:124] Setting up conv1
I0428 20:13:39.200408 32495 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:39.200412 32495 net.cpp:139] Memory required for data: 10074800
I0428 20:13:39.200420 32495 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:39.200433 32495 net.cpp:86] Creating Layer pool1
I0428 20:13:39.200436 32495 net.cpp:408] pool1 <- conv1
I0428 20:13:39.200441 32495 net.cpp:382] pool1 -> pool1
I0428 20:13:39.200474 32495 net.cpp:124] Setting up pool1
I0428 20:13:39.200479 32495 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:39.200482 32495 net.cpp:139] Memory required for data: 10714800
I0428 20:13:39.200484 32495 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:39.200490 32495 net.cpp:86] Creating Layer ip1
I0428 20:13:39.200500 32495 net.cpp:408] ip1 <- pool1
I0428 20:13:39.200503 32495 net.cpp:382] ip1 -> ip1
I0428 20:13:39.201171 32495 net.cpp:124] Setting up ip1
I0428 20:13:39.201195 32495 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:39.201222 32495 net.cpp:139] Memory required for data: 10734800
I0428 20:13:39.201231 32495 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:39.201236 32495 net.cpp:86] Creating Layer relu1
I0428 20:13:39.201238 32495 net.cpp:408] relu1 <- ip1
I0428 20:13:39.201243 32495 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:39.201478 32495 net.cpp:124] Setting up relu1
I0428 20:13:39.201488 32495 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:39.201493 32495 net.cpp:139] Memory required for data: 10754800
I0428 20:13:39.201495 32495 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:39.201503 32495 net.cpp:86] Creating Layer ip2
I0428 20:13:39.201505 32495 net.cpp:408] ip2 <- ip1
I0428 20:13:39.201535 32495 net.cpp:382] ip2 -> ip2
I0428 20:13:39.201637 32495 net.cpp:124] Setting up ip2
I0428 20:13:39.201644 32495 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:39.201647 32495 net.cpp:139] Memory required for data: 10764800
I0428 20:13:39.201653 32495 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:39.201658 32495 net.cpp:86] Creating Layer relu2
I0428 20:13:39.201659 32495 net.cpp:408] relu2 <- ip2
I0428 20:13:39.201664 32495 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:39.201802 32495 net.cpp:124] Setting up relu2
I0428 20:13:39.201810 32495 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:39.201813 32495 net.cpp:139] Memory required for data: 10774800
I0428 20:13:39.201817 32495 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:39.201822 32495 net.cpp:86] Creating Layer ip3
I0428 20:13:39.201824 32495 net.cpp:408] ip3 <- ip2
I0428 20:13:39.201829 32495 net.cpp:382] ip3 -> ip3
I0428 20:13:39.201930 32495 net.cpp:124] Setting up ip3
I0428 20:13:39.201937 32495 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:39.201941 32495 net.cpp:139] Memory required for data: 10778800
I0428 20:13:39.201949 32495 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:39.201954 32495 net.cpp:86] Creating Layer relu3
I0428 20:13:39.201957 32495 net.cpp:408] relu3 <- ip3
I0428 20:13:39.201962 32495 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:39.202791 32495 net.cpp:124] Setting up relu3
I0428 20:13:39.202803 32495 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:39.202806 32495 net.cpp:139] Memory required for data: 10782800
I0428 20:13:39.202811 32495 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:39.202816 32495 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:39.202818 32495 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:39.202823 32495 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:39.202829 32495 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:39.202895 32495 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:39.202908 32495 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:39.202913 32495 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:39.202921 32495 net.cpp:139] Memory required for data: 10790800
I0428 20:13:39.202924 32495 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:39.202929 32495 net.cpp:86] Creating Layer accuracy
I0428 20:13:39.202932 32495 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:39.202936 32495 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:39.202945 32495 net.cpp:382] accuracy -> accuracy
I0428 20:13:39.202953 32495 net.cpp:124] Setting up accuracy
I0428 20:13:39.202956 32495 net.cpp:131] Top shape: (1)
I0428 20:13:39.202960 32495 net.cpp:139] Memory required for data: 10790804
I0428 20:13:39.202962 32495 layer_factory.hpp:77] Creating layer loss
I0428 20:13:39.202966 32495 net.cpp:86] Creating Layer loss
I0428 20:13:39.202970 32495 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:39.202973 32495 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:39.202983 32495 net.cpp:382] loss -> loss
I0428 20:13:39.202988 32495 layer_factory.hpp:77] Creating layer loss
I0428 20:13:39.203238 32495 net.cpp:124] Setting up loss
I0428 20:13:39.203248 32495 net.cpp:131] Top shape: (1)
I0428 20:13:39.203253 32495 net.cpp:134]     with loss weight 1
I0428 20:13:39.203269 32495 net.cpp:139] Memory required for data: 10790808
I0428 20:13:39.203274 32495 net.cpp:200] loss needs backward computation.
I0428 20:13:39.203277 32495 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:39.203280 32495 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:39.203291 32495 net.cpp:200] relu3 needs backward computation.
I0428 20:13:39.203294 32495 net.cpp:200] ip3 needs backward computation.
I0428 20:13:39.203297 32495 net.cpp:200] relu2 needs backward computation.
I0428 20:13:39.203300 32495 net.cpp:200] ip2 needs backward computation.
I0428 20:13:39.203308 32495 net.cpp:200] relu1 needs backward computation.
I0428 20:13:39.203311 32495 net.cpp:200] ip1 needs backward computation.
I0428 20:13:39.203315 32495 net.cpp:200] pool1 needs backward computation.
I0428 20:13:39.203323 32495 net.cpp:200] conv1 needs backward computation.
I0428 20:13:39.203326 32495 net.cpp:200] pool0 needs backward computation.
I0428 20:13:39.203330 32495 net.cpp:200] conv0 needs backward computation.
I0428 20:13:39.203349 32495 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:39.203356 32495 net.cpp:202] mnist does not need backward computation.
I0428 20:13:39.203359 32495 net.cpp:244] This network produces output accuracy
I0428 20:13:39.203368 32495 net.cpp:244] This network produces output loss
I0428 20:13:39.203392 32495 net.cpp:257] Network initialization done.
I0428 20:13:39.203438 32495 solver.cpp:56] Solver scaffolding done.
I0428 20:13:39.203750 32495 caffe.cpp:248] Starting Optimization
I0428 20:13:39.203758 32495 solver.cpp:273] Solving LeNet
I0428 20:13:39.203760 32495 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:39.204627 32495 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:39.211779 32495 blocking_queue.cpp:49] Waiting for data
I0428 20:13:39.284663 32502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:39.285506 32495 solver.cpp:398]     Test net output #0: accuracy = 0.0819
I0428 20:13:39.285543 32495 solver.cpp:398]     Test net output #1: loss = 2.34064 (* 1 = 2.34064 loss)
I0428 20:13:39.290437 32495 solver.cpp:219] Iteration 0 (-2.92766e-31 iter/s, 0.0866519s/100 iters), loss = 2.34275
I0428 20:13:39.290477 32495 solver.cpp:238]     Train net output #0: loss = 2.34275 (* 1 = 2.34275 loss)
I0428 20:13:39.290491 32495 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:39.461252 32495 solver.cpp:219] Iteration 100 (585.571 iter/s, 0.170773s/100 iters), loss = 0.924932
I0428 20:13:39.461279 32495 solver.cpp:238]     Train net output #0: loss = 0.924932 (* 1 = 0.924932 loss)
I0428 20:13:39.461287 32495 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:39.624354 32495 solver.cpp:219] Iteration 200 (613.265 iter/s, 0.163062s/100 iters), loss = 0.714926
I0428 20:13:39.624382 32495 solver.cpp:238]     Train net output #0: loss = 0.714926 (* 1 = 0.714926 loss)
I0428 20:13:39.624405 32495 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:39.787428 32495 solver.cpp:219] Iteration 300 (613.372 iter/s, 0.163033s/100 iters), loss = 0.658259
I0428 20:13:39.787453 32495 solver.cpp:238]     Train net output #0: loss = 0.658259 (* 1 = 0.658259 loss)
I0428 20:13:39.787461 32495 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:39.952901 32495 solver.cpp:219] Iteration 400 (604.469 iter/s, 0.165434s/100 iters), loss = 0.47372
I0428 20:13:39.952927 32495 solver.cpp:238]     Train net output #0: loss = 0.47372 (* 1 = 0.47372 loss)
I0428 20:13:39.952951 32495 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:40.115113 32495 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:40.193208 32502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:40.194092 32495 solver.cpp:398]     Test net output #0: accuracy = 0.7868
I0428 20:13:40.194128 32495 solver.cpp:398]     Test net output #1: loss = 0.53777 (* 1 = 0.53777 loss)
I0428 20:13:40.196105 32495 solver.cpp:219] Iteration 500 (411.252 iter/s, 0.24316s/100 iters), loss = 0.558053
I0428 20:13:40.196141 32495 solver.cpp:238]     Train net output #0: loss = 0.558053 (* 1 = 0.558053 loss)
I0428 20:13:40.196166 32495 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:40.360837 32495 solver.cpp:219] Iteration 600 (607.289 iter/s, 0.164666s/100 iters), loss = 0.39063
I0428 20:13:40.360864 32495 solver.cpp:238]     Train net output #0: loss = 0.39063 (* 1 = 0.39063 loss)
I0428 20:13:40.360888 32495 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:40.526511 32495 solver.cpp:219] Iteration 700 (603.737 iter/s, 0.165635s/100 iters), loss = 0.681447
I0428 20:13:40.526540 32495 solver.cpp:238]     Train net output #0: loss = 0.681447 (* 1 = 0.681447 loss)
I0428 20:13:40.526547 32495 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:40.693274 32495 solver.cpp:219] Iteration 800 (599.802 iter/s, 0.166722s/100 iters), loss = 0.678257
I0428 20:13:40.693302 32495 solver.cpp:238]     Train net output #0: loss = 0.678257 (* 1 = 0.678257 loss)
I0428 20:13:40.693323 32495 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:40.856225 32495 solver.cpp:219] Iteration 900 (613.835 iter/s, 0.16291s/100 iters), loss = 0.518728
I0428 20:13:40.856252 32495 solver.cpp:238]     Train net output #0: loss = 0.518728 (* 1 = 0.518728 loss)
I0428 20:13:40.856276 32495 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:40.911170 32501 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:41.019862 32495 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:41.022878 32495 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:41.024541 32495 solver.cpp:311] Iteration 1000, loss = 0.587487
I0428 20:13:41.024556 32495 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:41.102068 32502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:41.102962 32495 solver.cpp:398]     Test net output #0: accuracy = 0.7935
I0428 20:13:41.102982 32495 solver.cpp:398]     Test net output #1: loss = 0.50298 (* 1 = 0.50298 loss)
I0428 20:13:41.102988 32495 solver.cpp:316] Optimization Done.
I0428 20:13:41.102993 32495 caffe.cpp:259] Optimization Done.
