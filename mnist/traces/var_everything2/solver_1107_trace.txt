I0428 20:09:21.560490 31608 caffe.cpp:218] Using GPUs 0
I0428 20:09:21.596837 31608 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:22.134285 31608 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1107.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:22.134459 31608 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1107.prototxt
I0428 20:09:22.134927 31608 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:22.134948 31608 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:22.135061 31608 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:22.135144 31608 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:22.135262 31608 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:22.135289 31608 net.cpp:86] Creating Layer mnist
I0428 20:09:22.135298 31608 net.cpp:382] mnist -> data
I0428 20:09:22.135324 31608 net.cpp:382] mnist -> label
I0428 20:09:22.136584 31608 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:22.139355 31608 net.cpp:124] Setting up mnist
I0428 20:09:22.139377 31608 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:22.139384 31608 net.cpp:131] Top shape: 64 (64)
I0428 20:09:22.139389 31608 net.cpp:139] Memory required for data: 200960
I0428 20:09:22.139396 31608 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:22.139415 31608 net.cpp:86] Creating Layer conv0
I0428 20:09:22.139437 31608 net.cpp:408] conv0 <- data
I0428 20:09:22.139451 31608 net.cpp:382] conv0 -> conv0
I0428 20:09:22.432644 31608 net.cpp:124] Setting up conv0
I0428 20:09:22.432677 31608 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:22.432682 31608 net.cpp:139] Memory required for data: 3887360
I0428 20:09:22.432700 31608 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:22.432714 31608 net.cpp:86] Creating Layer pool0
I0428 20:09:22.432720 31608 net.cpp:408] pool0 <- conv0
I0428 20:09:22.432726 31608 net.cpp:382] pool0 -> pool0
I0428 20:09:22.432780 31608 net.cpp:124] Setting up pool0
I0428 20:09:22.432787 31608 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:22.432791 31608 net.cpp:139] Memory required for data: 4808960
I0428 20:09:22.432795 31608 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:22.432808 31608 net.cpp:86] Creating Layer conv1
I0428 20:09:22.432821 31608 net.cpp:408] conv1 <- pool0
I0428 20:09:22.432827 31608 net.cpp:382] conv1 -> conv1
I0428 20:09:22.436065 31608 net.cpp:124] Setting up conv1
I0428 20:09:22.436084 31608 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:22.436089 31608 net.cpp:139] Memory required for data: 5218560
I0428 20:09:22.436098 31608 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:22.436108 31608 net.cpp:86] Creating Layer pool1
I0428 20:09:22.436112 31608 net.cpp:408] pool1 <- conv1
I0428 20:09:22.436118 31608 net.cpp:382] pool1 -> pool1
I0428 20:09:22.436163 31608 net.cpp:124] Setting up pool1
I0428 20:09:22.436170 31608 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:22.436174 31608 net.cpp:139] Memory required for data: 5320960
I0428 20:09:22.436177 31608 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:22.436185 31608 net.cpp:86] Creating Layer ip1
I0428 20:09:22.436189 31608 net.cpp:408] ip1 <- pool1
I0428 20:09:22.436194 31608 net.cpp:382] ip1 -> ip1
I0428 20:09:22.437316 31608 net.cpp:124] Setting up ip1
I0428 20:09:22.437332 31608 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:22.437337 31608 net.cpp:139] Memory required for data: 5323520
I0428 20:09:22.437347 31608 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:22.437358 31608 net.cpp:86] Creating Layer relu1
I0428 20:09:22.437362 31608 net.cpp:408] relu1 <- ip1
I0428 20:09:22.437368 31608 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:22.437573 31608 net.cpp:124] Setting up relu1
I0428 20:09:22.437585 31608 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:22.437589 31608 net.cpp:139] Memory required for data: 5326080
I0428 20:09:22.437593 31608 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:22.437602 31608 net.cpp:86] Creating Layer ip2
I0428 20:09:22.437605 31608 net.cpp:408] ip2 <- ip1
I0428 20:09:22.437611 31608 net.cpp:382] ip2 -> ip2
I0428 20:09:22.437724 31608 net.cpp:124] Setting up ip2
I0428 20:09:22.437733 31608 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:22.437736 31608 net.cpp:139] Memory required for data: 5332480
I0428 20:09:22.437743 31608 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:22.437750 31608 net.cpp:86] Creating Layer relu2
I0428 20:09:22.437754 31608 net.cpp:408] relu2 <- ip2
I0428 20:09:22.437759 31608 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:22.438606 31608 net.cpp:124] Setting up relu2
I0428 20:09:22.438621 31608 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:22.438626 31608 net.cpp:139] Memory required for data: 5338880
I0428 20:09:22.438629 31608 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:22.438637 31608 net.cpp:86] Creating Layer ip3
I0428 20:09:22.438642 31608 net.cpp:408] ip3 <- ip2
I0428 20:09:22.438647 31608 net.cpp:382] ip3 -> ip3
I0428 20:09:22.438766 31608 net.cpp:124] Setting up ip3
I0428 20:09:22.438774 31608 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:22.438778 31608 net.cpp:139] Memory required for data: 5341440
I0428 20:09:22.438787 31608 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:22.438794 31608 net.cpp:86] Creating Layer relu3
I0428 20:09:22.438797 31608 net.cpp:408] relu3 <- ip3
I0428 20:09:22.438802 31608 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:22.439003 31608 net.cpp:124] Setting up relu3
I0428 20:09:22.439013 31608 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:22.439018 31608 net.cpp:139] Memory required for data: 5344000
I0428 20:09:22.439021 31608 layer_factory.hpp:77] Creating layer loss
I0428 20:09:22.439028 31608 net.cpp:86] Creating Layer loss
I0428 20:09:22.439033 31608 net.cpp:408] loss <- ip3
I0428 20:09:22.439036 31608 net.cpp:408] loss <- label
I0428 20:09:22.439043 31608 net.cpp:382] loss -> loss
I0428 20:09:22.439060 31608 layer_factory.hpp:77] Creating layer loss
I0428 20:09:22.439324 31608 net.cpp:124] Setting up loss
I0428 20:09:22.439335 31608 net.cpp:131] Top shape: (1)
I0428 20:09:22.439339 31608 net.cpp:134]     with loss weight 1
I0428 20:09:22.439355 31608 net.cpp:139] Memory required for data: 5344004
I0428 20:09:22.439359 31608 net.cpp:200] loss needs backward computation.
I0428 20:09:22.439363 31608 net.cpp:200] relu3 needs backward computation.
I0428 20:09:22.439368 31608 net.cpp:200] ip3 needs backward computation.
I0428 20:09:22.439371 31608 net.cpp:200] relu2 needs backward computation.
I0428 20:09:22.439374 31608 net.cpp:200] ip2 needs backward computation.
I0428 20:09:22.439378 31608 net.cpp:200] relu1 needs backward computation.
I0428 20:09:22.439381 31608 net.cpp:200] ip1 needs backward computation.
I0428 20:09:22.439384 31608 net.cpp:200] pool1 needs backward computation.
I0428 20:09:22.439388 31608 net.cpp:200] conv1 needs backward computation.
I0428 20:09:22.439393 31608 net.cpp:200] pool0 needs backward computation.
I0428 20:09:22.439395 31608 net.cpp:200] conv0 needs backward computation.
I0428 20:09:22.439399 31608 net.cpp:202] mnist does not need backward computation.
I0428 20:09:22.439404 31608 net.cpp:244] This network produces output loss
I0428 20:09:22.439414 31608 net.cpp:257] Network initialization done.
I0428 20:09:22.439800 31608 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1107.prototxt
I0428 20:09:22.439833 31608 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:22.439939 31608 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:22.440032 31608 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:22.440080 31608 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:22.440100 31608 net.cpp:86] Creating Layer mnist
I0428 20:09:22.440106 31608 net.cpp:382] mnist -> data
I0428 20:09:22.440115 31608 net.cpp:382] mnist -> label
I0428 20:09:22.440214 31608 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:22.442400 31608 net.cpp:124] Setting up mnist
I0428 20:09:22.442417 31608 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:22.442425 31608 net.cpp:131] Top shape: 100 (100)
I0428 20:09:22.442428 31608 net.cpp:139] Memory required for data: 314000
I0428 20:09:22.442432 31608 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:22.442440 31608 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:22.442445 31608 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:22.442451 31608 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:22.442458 31608 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:22.442581 31608 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:22.442591 31608 net.cpp:131] Top shape: 100 (100)
I0428 20:09:22.442596 31608 net.cpp:131] Top shape: 100 (100)
I0428 20:09:22.442600 31608 net.cpp:139] Memory required for data: 314800
I0428 20:09:22.442605 31608 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:22.442615 31608 net.cpp:86] Creating Layer conv0
I0428 20:09:22.442620 31608 net.cpp:408] conv0 <- data
I0428 20:09:22.442625 31608 net.cpp:382] conv0 -> conv0
I0428 20:09:22.444301 31608 net.cpp:124] Setting up conv0
I0428 20:09:22.444321 31608 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:22.444325 31608 net.cpp:139] Memory required for data: 6074800
I0428 20:09:22.444336 31608 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:22.444344 31608 net.cpp:86] Creating Layer pool0
I0428 20:09:22.444350 31608 net.cpp:408] pool0 <- conv0
I0428 20:09:22.444355 31608 net.cpp:382] pool0 -> pool0
I0428 20:09:22.444399 31608 net.cpp:124] Setting up pool0
I0428 20:09:22.444406 31608 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:22.444411 31608 net.cpp:139] Memory required for data: 7514800
I0428 20:09:22.444413 31608 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:22.444424 31608 net.cpp:86] Creating Layer conv1
I0428 20:09:22.444428 31608 net.cpp:408] conv1 <- pool0
I0428 20:09:22.444433 31608 net.cpp:382] conv1 -> conv1
I0428 20:09:22.446890 31608 net.cpp:124] Setting up conv1
I0428 20:09:22.446908 31608 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:22.446913 31608 net.cpp:139] Memory required for data: 8154800
I0428 20:09:22.446923 31608 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:22.446931 31608 net.cpp:86] Creating Layer pool1
I0428 20:09:22.446935 31608 net.cpp:408] pool1 <- conv1
I0428 20:09:22.446941 31608 net.cpp:382] pool1 -> pool1
I0428 20:09:22.447028 31608 net.cpp:124] Setting up pool1
I0428 20:09:22.447041 31608 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:22.447044 31608 net.cpp:139] Memory required for data: 8314800
I0428 20:09:22.447048 31608 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:22.447057 31608 net.cpp:86] Creating Layer ip1
I0428 20:09:22.447062 31608 net.cpp:408] ip1 <- pool1
I0428 20:09:22.447067 31608 net.cpp:382] ip1 -> ip1
I0428 20:09:22.447216 31608 net.cpp:124] Setting up ip1
I0428 20:09:22.447227 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.447243 31608 net.cpp:139] Memory required for data: 8318800
I0428 20:09:22.447254 31608 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:22.447263 31608 net.cpp:86] Creating Layer relu1
I0428 20:09:22.447266 31608 net.cpp:408] relu1 <- ip1
I0428 20:09:22.447273 31608 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:22.447489 31608 net.cpp:124] Setting up relu1
I0428 20:09:22.447501 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.447506 31608 net.cpp:139] Memory required for data: 8322800
I0428 20:09:22.447510 31608 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:22.447518 31608 net.cpp:86] Creating Layer ip2
I0428 20:09:22.447521 31608 net.cpp:408] ip2 <- ip1
I0428 20:09:22.447530 31608 net.cpp:382] ip2 -> ip2
I0428 20:09:22.447652 31608 net.cpp:124] Setting up ip2
I0428 20:09:22.447661 31608 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:22.447665 31608 net.cpp:139] Memory required for data: 8332800
I0428 20:09:22.447671 31608 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:22.447679 31608 net.cpp:86] Creating Layer relu2
I0428 20:09:22.447681 31608 net.cpp:408] relu2 <- ip2
I0428 20:09:22.447686 31608 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:22.447875 31608 net.cpp:124] Setting up relu2
I0428 20:09:22.447885 31608 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:22.447887 31608 net.cpp:139] Memory required for data: 8342800
I0428 20:09:22.447891 31608 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:22.447901 31608 net.cpp:86] Creating Layer ip3
I0428 20:09:22.447904 31608 net.cpp:408] ip3 <- ip2
I0428 20:09:22.447911 31608 net.cpp:382] ip3 -> ip3
I0428 20:09:22.448031 31608 net.cpp:124] Setting up ip3
I0428 20:09:22.448040 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.448045 31608 net.cpp:139] Memory required for data: 8346800
I0428 20:09:22.448053 31608 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:22.448058 31608 net.cpp:86] Creating Layer relu3
I0428 20:09:22.448062 31608 net.cpp:408] relu3 <- ip3
I0428 20:09:22.448068 31608 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:22.448971 31608 net.cpp:124] Setting up relu3
I0428 20:09:22.448985 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.448989 31608 net.cpp:139] Memory required for data: 8350800
I0428 20:09:22.448993 31608 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:22.448999 31608 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:22.449003 31608 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:22.449012 31608 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:22.449020 31608 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:22.449065 31608 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:22.449074 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.449079 31608 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:22.449082 31608 net.cpp:139] Memory required for data: 8358800
I0428 20:09:22.449085 31608 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:22.449091 31608 net.cpp:86] Creating Layer accuracy
I0428 20:09:22.449095 31608 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:22.449100 31608 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:22.449105 31608 net.cpp:382] accuracy -> accuracy
I0428 20:09:22.449112 31608 net.cpp:124] Setting up accuracy
I0428 20:09:22.449116 31608 net.cpp:131] Top shape: (1)
I0428 20:09:22.449120 31608 net.cpp:139] Memory required for data: 8358804
I0428 20:09:22.449123 31608 layer_factory.hpp:77] Creating layer loss
I0428 20:09:22.449131 31608 net.cpp:86] Creating Layer loss
I0428 20:09:22.449134 31608 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:22.449138 31608 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:22.449143 31608 net.cpp:382] loss -> loss
I0428 20:09:22.449151 31608 layer_factory.hpp:77] Creating layer loss
I0428 20:09:22.449440 31608 net.cpp:124] Setting up loss
I0428 20:09:22.449452 31608 net.cpp:131] Top shape: (1)
I0428 20:09:22.449455 31608 net.cpp:134]     with loss weight 1
I0428 20:09:22.449475 31608 net.cpp:139] Memory required for data: 8358808
I0428 20:09:22.449479 31608 net.cpp:200] loss needs backward computation.
I0428 20:09:22.449483 31608 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:22.449487 31608 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:22.449491 31608 net.cpp:200] relu3 needs backward computation.
I0428 20:09:22.449494 31608 net.cpp:200] ip3 needs backward computation.
I0428 20:09:22.449497 31608 net.cpp:200] relu2 needs backward computation.
I0428 20:09:22.449501 31608 net.cpp:200] ip2 needs backward computation.
I0428 20:09:22.449504 31608 net.cpp:200] relu1 needs backward computation.
I0428 20:09:22.449507 31608 net.cpp:200] ip1 needs backward computation.
I0428 20:09:22.449511 31608 net.cpp:200] pool1 needs backward computation.
I0428 20:09:22.449515 31608 net.cpp:200] conv1 needs backward computation.
I0428 20:09:22.449519 31608 net.cpp:200] pool0 needs backward computation.
I0428 20:09:22.449523 31608 net.cpp:200] conv0 needs backward computation.
I0428 20:09:22.449527 31608 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:22.449532 31608 net.cpp:202] mnist does not need backward computation.
I0428 20:09:22.449534 31608 net.cpp:244] This network produces output accuracy
I0428 20:09:22.449538 31608 net.cpp:244] This network produces output loss
I0428 20:09:22.449553 31608 net.cpp:257] Network initialization done.
I0428 20:09:22.449601 31608 solver.cpp:56] Solver scaffolding done.
I0428 20:09:22.449992 31608 caffe.cpp:248] Starting Optimization
I0428 20:09:22.450001 31608 solver.cpp:273] Solving LeNet
I0428 20:09:22.450004 31608 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:22.450893 31608 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:22.522208 31615 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:22.524353 31608 solver.cpp:398]     Test net output #0: accuracy = 0.0593
I0428 20:09:22.524387 31608 solver.cpp:398]     Test net output #1: loss = 2.32076 (* 1 = 2.32076 loss)
I0428 20:09:22.529383 31608 solver.cpp:219] Iteration 0 (-5.5522e-31 iter/s, 0.0793467s/100 iters), loss = 2.33229
I0428 20:09:22.529422 31608 solver.cpp:238]     Train net output #0: loss = 2.33229 (* 1 = 2.33229 loss)
I0428 20:09:22.529438 31608 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:22.637471 31608 solver.cpp:219] Iteration 100 (925.627 iter/s, 0.108035s/100 iters), loss = 0.885216
I0428 20:09:22.637506 31608 solver.cpp:238]     Train net output #0: loss = 0.885216 (* 1 = 0.885216 loss)
I0428 20:09:22.637513 31608 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:22.743043 31608 solver.cpp:219] Iteration 200 (947.62 iter/s, 0.105527s/100 iters), loss = 0.492215
I0428 20:09:22.743075 31608 solver.cpp:238]     Train net output #0: loss = 0.492215 (* 1 = 0.492215 loss)
I0428 20:09:22.743083 31608 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:22.847299 31608 solver.cpp:219] Iteration 300 (959.559 iter/s, 0.104215s/100 iters), loss = 0.899895
I0428 20:09:22.847328 31608 solver.cpp:238]     Train net output #0: loss = 0.899895 (* 1 = 0.899895 loss)
I0428 20:09:22.847335 31608 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:22.951196 31608 solver.cpp:219] Iteration 400 (962.861 iter/s, 0.103857s/100 iters), loss = 0.523924
I0428 20:09:22.951225 31608 solver.cpp:238]     Train net output #0: loss = 0.523924 (* 1 = 0.523924 loss)
I0428 20:09:22.951233 31608 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:23.053643 31608 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:23.110379 31615 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:23.112241 31608 solver.cpp:398]     Test net output #0: accuracy = 0.7738
I0428 20:09:23.112277 31608 solver.cpp:398]     Test net output #1: loss = 0.596485 (* 1 = 0.596485 loss)
I0428 20:09:23.113296 31608 solver.cpp:219] Iteration 500 (617.066 iter/s, 0.162057s/100 iters), loss = 0.55653
I0428 20:09:23.113332 31608 solver.cpp:238]     Train net output #0: loss = 0.55653 (* 1 = 0.55653 loss)
I0428 20:09:23.113356 31608 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:23.217944 31608 solver.cpp:219] Iteration 600 (955.922 iter/s, 0.104611s/100 iters), loss = 0.563348
I0428 20:09:23.217981 31608 solver.cpp:238]     Train net output #0: loss = 0.563348 (* 1 = 0.563348 loss)
I0428 20:09:23.217988 31608 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:23.320976 31608 solver.cpp:219] Iteration 700 (970.941 iter/s, 0.102993s/100 iters), loss = 0.53274
I0428 20:09:23.321013 31608 solver.cpp:238]     Train net output #0: loss = 0.53274 (* 1 = 0.53274 loss)
I0428 20:09:23.321020 31608 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:23.427232 31608 solver.cpp:219] Iteration 800 (941.473 iter/s, 0.106217s/100 iters), loss = 0.898699
I0428 20:09:23.427266 31608 solver.cpp:238]     Train net output #0: loss = 0.8987 (* 1 = 0.8987 loss)
I0428 20:09:23.427275 31608 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:23.530890 31608 solver.cpp:219] Iteration 900 (965.107 iter/s, 0.103615s/100 iters), loss = 0.69764
I0428 20:09:23.530928 31608 solver.cpp:238]     Train net output #0: loss = 0.69764 (* 1 = 0.69764 loss)
I0428 20:09:23.530936 31608 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:23.564189 31614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:23.628954 31608 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:23.629989 31608 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:23.630678 31608 solver.cpp:311] Iteration 1000, loss = 0.606218
I0428 20:09:23.630693 31608 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:23.684577 31615 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:23.686451 31608 solver.cpp:398]     Test net output #0: accuracy = 0.7833
I0428 20:09:23.686470 31608 solver.cpp:398]     Test net output #1: loss = 0.549316 (* 1 = 0.549316 loss)
I0428 20:09:23.686484 31608 solver.cpp:316] Optimization Done.
I0428 20:09:23.686487 31608 caffe.cpp:259] Optimization Done.
