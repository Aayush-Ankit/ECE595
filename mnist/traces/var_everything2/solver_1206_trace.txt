I0428 20:13:47.452764 32544 caffe.cpp:218] Using GPUs 0
I0428 20:13:47.489445 32544 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:47.998414 32544 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1206.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:47.998560 32544 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1206.prototxt
I0428 20:13:47.998978 32544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:47.998998 32544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:47.999101 32544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:47.999181 32544 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:47.999277 32544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:47.999300 32544 net.cpp:86] Creating Layer mnist
I0428 20:13:47.999308 32544 net.cpp:382] mnist -> data
I0428 20:13:47.999330 32544 net.cpp:382] mnist -> label
I0428 20:13:48.000411 32544 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:48.002873 32544 net.cpp:124] Setting up mnist
I0428 20:13:48.002892 32544 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:48.002897 32544 net.cpp:131] Top shape: 64 (64)
I0428 20:13:48.002900 32544 net.cpp:139] Memory required for data: 200960
I0428 20:13:48.002907 32544 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:48.002955 32544 net.cpp:86] Creating Layer conv0
I0428 20:13:48.002977 32544 net.cpp:408] conv0 <- data
I0428 20:13:48.002991 32544 net.cpp:382] conv0 -> conv0
I0428 20:13:48.291082 32544 net.cpp:124] Setting up conv0
I0428 20:13:48.291111 32544 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:48.291115 32544 net.cpp:139] Memory required for data: 3887360
I0428 20:13:48.291132 32544 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:48.291147 32544 net.cpp:86] Creating Layer pool0
I0428 20:13:48.291152 32544 net.cpp:408] pool0 <- conv0
I0428 20:13:48.291158 32544 net.cpp:382] pool0 -> pool0
I0428 20:13:48.291205 32544 net.cpp:124] Setting up pool0
I0428 20:13:48.291211 32544 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:48.291215 32544 net.cpp:139] Memory required for data: 4808960
I0428 20:13:48.291218 32544 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:48.291230 32544 net.cpp:86] Creating Layer conv1
I0428 20:13:48.291234 32544 net.cpp:408] conv1 <- pool0
I0428 20:13:48.291239 32544 net.cpp:382] conv1 -> conv1
I0428 20:13:48.293558 32544 net.cpp:124] Setting up conv1
I0428 20:13:48.293575 32544 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:48.293578 32544 net.cpp:139] Memory required for data: 6447360
I0428 20:13:48.293587 32544 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:48.293594 32544 net.cpp:86] Creating Layer pool1
I0428 20:13:48.293598 32544 net.cpp:408] pool1 <- conv1
I0428 20:13:48.293603 32544 net.cpp:382] pool1 -> pool1
I0428 20:13:48.293644 32544 net.cpp:124] Setting up pool1
I0428 20:13:48.293651 32544 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:48.293654 32544 net.cpp:139] Memory required for data: 6856960
I0428 20:13:48.293658 32544 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:48.293664 32544 net.cpp:86] Creating Layer ip1
I0428 20:13:48.293668 32544 net.cpp:408] ip1 <- pool1
I0428 20:13:48.293673 32544 net.cpp:382] ip1 -> ip1
I0428 20:13:48.295150 32544 net.cpp:124] Setting up ip1
I0428 20:13:48.295164 32544 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:48.295169 32544 net.cpp:139] Memory required for data: 6869760
I0428 20:13:48.295179 32544 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:48.295186 32544 net.cpp:86] Creating Layer relu1
I0428 20:13:48.295189 32544 net.cpp:408] relu1 <- ip1
I0428 20:13:48.295194 32544 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:48.295377 32544 net.cpp:124] Setting up relu1
I0428 20:13:48.295387 32544 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:48.295390 32544 net.cpp:139] Memory required for data: 6882560
I0428 20:13:48.295393 32544 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:48.295400 32544 net.cpp:86] Creating Layer ip2
I0428 20:13:48.295404 32544 net.cpp:408] ip2 <- ip1
I0428 20:13:48.295409 32544 net.cpp:382] ip2 -> ip2
I0428 20:13:48.296403 32544 net.cpp:124] Setting up ip2
I0428 20:13:48.296416 32544 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:48.296421 32544 net.cpp:139] Memory required for data: 6895360
I0428 20:13:48.296427 32544 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:48.296433 32544 net.cpp:86] Creating Layer relu2
I0428 20:13:48.296437 32544 net.cpp:408] relu2 <- ip2
I0428 20:13:48.296442 32544 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:48.297216 32544 net.cpp:124] Setting up relu2
I0428 20:13:48.297230 32544 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:48.297233 32544 net.cpp:139] Memory required for data: 6908160
I0428 20:13:48.297237 32544 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:48.297245 32544 net.cpp:86] Creating Layer ip3
I0428 20:13:48.297248 32544 net.cpp:408] ip3 <- ip2
I0428 20:13:48.297255 32544 net.cpp:382] ip3 -> ip3
I0428 20:13:48.297366 32544 net.cpp:124] Setting up ip3
I0428 20:13:48.297375 32544 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:48.297379 32544 net.cpp:139] Memory required for data: 6910720
I0428 20:13:48.297387 32544 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:48.297392 32544 net.cpp:86] Creating Layer relu3
I0428 20:13:48.297395 32544 net.cpp:408] relu3 <- ip3
I0428 20:13:48.297400 32544 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:48.297577 32544 net.cpp:124] Setting up relu3
I0428 20:13:48.297587 32544 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:48.297590 32544 net.cpp:139] Memory required for data: 6913280
I0428 20:13:48.297595 32544 layer_factory.hpp:77] Creating layer loss
I0428 20:13:48.297600 32544 net.cpp:86] Creating Layer loss
I0428 20:13:48.297603 32544 net.cpp:408] loss <- ip3
I0428 20:13:48.297607 32544 net.cpp:408] loss <- label
I0428 20:13:48.297613 32544 net.cpp:382] loss -> loss
I0428 20:13:48.297632 32544 layer_factory.hpp:77] Creating layer loss
I0428 20:13:48.297881 32544 net.cpp:124] Setting up loss
I0428 20:13:48.297891 32544 net.cpp:131] Top shape: (1)
I0428 20:13:48.297895 32544 net.cpp:134]     with loss weight 1
I0428 20:13:48.297909 32544 net.cpp:139] Memory required for data: 6913284
I0428 20:13:48.297914 32544 net.cpp:200] loss needs backward computation.
I0428 20:13:48.297917 32544 net.cpp:200] relu3 needs backward computation.
I0428 20:13:48.297920 32544 net.cpp:200] ip3 needs backward computation.
I0428 20:13:48.297924 32544 net.cpp:200] relu2 needs backward computation.
I0428 20:13:48.297926 32544 net.cpp:200] ip2 needs backward computation.
I0428 20:13:48.297930 32544 net.cpp:200] relu1 needs backward computation.
I0428 20:13:48.297932 32544 net.cpp:200] ip1 needs backward computation.
I0428 20:13:48.297935 32544 net.cpp:200] pool1 needs backward computation.
I0428 20:13:48.297938 32544 net.cpp:200] conv1 needs backward computation.
I0428 20:13:48.297941 32544 net.cpp:200] pool0 needs backward computation.
I0428 20:13:48.297945 32544 net.cpp:200] conv0 needs backward computation.
I0428 20:13:48.297948 32544 net.cpp:202] mnist does not need backward computation.
I0428 20:13:48.297951 32544 net.cpp:244] This network produces output loss
I0428 20:13:48.297961 32544 net.cpp:257] Network initialization done.
I0428 20:13:48.298303 32544 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1206.prototxt
I0428 20:13:48.298332 32544 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:48.298434 32544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:48.298521 32544 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:48.298569 32544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:48.298583 32544 net.cpp:86] Creating Layer mnist
I0428 20:13:48.298588 32544 net.cpp:382] mnist -> data
I0428 20:13:48.298595 32544 net.cpp:382] mnist -> label
I0428 20:13:48.298684 32544 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:48.299801 32544 net.cpp:124] Setting up mnist
I0428 20:13:48.299815 32544 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:48.299820 32544 net.cpp:131] Top shape: 100 (100)
I0428 20:13:48.299823 32544 net.cpp:139] Memory required for data: 314000
I0428 20:13:48.299827 32544 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:48.299834 32544 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:48.299837 32544 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:48.299844 32544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:48.299849 32544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:48.299890 32544 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:48.299896 32544 net.cpp:131] Top shape: 100 (100)
I0428 20:13:48.299899 32544 net.cpp:131] Top shape: 100 (100)
I0428 20:13:48.299902 32544 net.cpp:139] Memory required for data: 314800
I0428 20:13:48.299906 32544 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:48.299914 32544 net.cpp:86] Creating Layer conv0
I0428 20:13:48.299917 32544 net.cpp:408] conv0 <- data
I0428 20:13:48.299922 32544 net.cpp:382] conv0 -> conv0
I0428 20:13:48.301693 32544 net.cpp:124] Setting up conv0
I0428 20:13:48.301708 32544 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:48.301712 32544 net.cpp:139] Memory required for data: 6074800
I0428 20:13:48.301722 32544 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:48.301728 32544 net.cpp:86] Creating Layer pool0
I0428 20:13:48.301731 32544 net.cpp:408] pool0 <- conv0
I0428 20:13:48.301736 32544 net.cpp:382] pool0 -> pool0
I0428 20:13:48.301774 32544 net.cpp:124] Setting up pool0
I0428 20:13:48.301779 32544 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:48.301781 32544 net.cpp:139] Memory required for data: 7514800
I0428 20:13:48.301784 32544 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:48.301793 32544 net.cpp:86] Creating Layer conv1
I0428 20:13:48.301796 32544 net.cpp:408] conv1 <- pool0
I0428 20:13:48.301801 32544 net.cpp:382] conv1 -> conv1
I0428 20:13:48.303650 32544 net.cpp:124] Setting up conv1
I0428 20:13:48.303664 32544 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:48.303680 32544 net.cpp:139] Memory required for data: 10074800
I0428 20:13:48.303689 32544 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:48.303702 32544 net.cpp:86] Creating Layer pool1
I0428 20:13:48.303705 32544 net.cpp:408] pool1 <- conv1
I0428 20:13:48.303710 32544 net.cpp:382] pool1 -> pool1
I0428 20:13:48.303747 32544 net.cpp:124] Setting up pool1
I0428 20:13:48.303753 32544 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:48.303756 32544 net.cpp:139] Memory required for data: 10714800
I0428 20:13:48.303761 32544 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:48.303766 32544 net.cpp:86] Creating Layer ip1
I0428 20:13:48.303768 32544 net.cpp:408] ip1 <- pool1
I0428 20:13:48.303773 32544 net.cpp:382] ip1 -> ip1
I0428 20:13:48.304350 32544 net.cpp:124] Setting up ip1
I0428 20:13:48.304358 32544 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:48.304371 32544 net.cpp:139] Memory required for data: 10734800
I0428 20:13:48.304379 32544 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:48.304384 32544 net.cpp:86] Creating Layer relu1
I0428 20:13:48.304388 32544 net.cpp:408] relu1 <- ip1
I0428 20:13:48.304391 32544 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:48.304641 32544 net.cpp:124] Setting up relu1
I0428 20:13:48.304651 32544 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:48.304654 32544 net.cpp:139] Memory required for data: 10754800
I0428 20:13:48.304657 32544 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:48.304664 32544 net.cpp:86] Creating Layer ip2
I0428 20:13:48.304674 32544 net.cpp:408] ip2 <- ip1
I0428 20:13:48.304679 32544 net.cpp:382] ip2 -> ip2
I0428 20:13:48.304805 32544 net.cpp:124] Setting up ip2
I0428 20:13:48.304833 32544 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:48.304848 32544 net.cpp:139] Memory required for data: 10774800
I0428 20:13:48.304854 32544 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:48.304864 32544 net.cpp:86] Creating Layer relu2
I0428 20:13:48.304868 32544 net.cpp:408] relu2 <- ip2
I0428 20:13:48.304872 32544 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:48.305065 32544 net.cpp:124] Setting up relu2
I0428 20:13:48.305076 32544 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:48.305086 32544 net.cpp:139] Memory required for data: 10794800
I0428 20:13:48.305089 32544 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:48.305095 32544 net.cpp:86] Creating Layer ip3
I0428 20:13:48.305099 32544 net.cpp:408] ip3 <- ip2
I0428 20:13:48.305104 32544 net.cpp:382] ip3 -> ip3
I0428 20:13:48.305207 32544 net.cpp:124] Setting up ip3
I0428 20:13:48.305214 32544 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:48.305218 32544 net.cpp:139] Memory required for data: 10798800
I0428 20:13:48.305227 32544 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:48.305232 32544 net.cpp:86] Creating Layer relu3
I0428 20:13:48.305235 32544 net.cpp:408] relu3 <- ip3
I0428 20:13:48.305241 32544 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:48.306035 32544 net.cpp:124] Setting up relu3
I0428 20:13:48.306048 32544 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:48.306051 32544 net.cpp:139] Memory required for data: 10802800
I0428 20:13:48.306056 32544 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:48.306061 32544 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:48.306068 32544 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:48.306074 32544 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:48.306080 32544 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:48.306159 32544 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:48.306167 32544 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:48.306172 32544 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:48.306174 32544 net.cpp:139] Memory required for data: 10810800
I0428 20:13:48.306177 32544 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:48.306185 32544 net.cpp:86] Creating Layer accuracy
I0428 20:13:48.306187 32544 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:48.306192 32544 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:48.306196 32544 net.cpp:382] accuracy -> accuracy
I0428 20:13:48.306205 32544 net.cpp:124] Setting up accuracy
I0428 20:13:48.306208 32544 net.cpp:131] Top shape: (1)
I0428 20:13:48.306210 32544 net.cpp:139] Memory required for data: 10810804
I0428 20:13:48.306213 32544 layer_factory.hpp:77] Creating layer loss
I0428 20:13:48.306226 32544 net.cpp:86] Creating Layer loss
I0428 20:13:48.306228 32544 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:48.306232 32544 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:48.306236 32544 net.cpp:382] loss -> loss
I0428 20:13:48.306242 32544 layer_factory.hpp:77] Creating layer loss
I0428 20:13:48.306478 32544 net.cpp:124] Setting up loss
I0428 20:13:48.306488 32544 net.cpp:131] Top shape: (1)
I0428 20:13:48.306491 32544 net.cpp:134]     with loss weight 1
I0428 20:13:48.306509 32544 net.cpp:139] Memory required for data: 10810808
I0428 20:13:48.306512 32544 net.cpp:200] loss needs backward computation.
I0428 20:13:48.306516 32544 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:48.306520 32544 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:48.306524 32544 net.cpp:200] relu3 needs backward computation.
I0428 20:13:48.306526 32544 net.cpp:200] ip3 needs backward computation.
I0428 20:13:48.306530 32544 net.cpp:200] relu2 needs backward computation.
I0428 20:13:48.306533 32544 net.cpp:200] ip2 needs backward computation.
I0428 20:13:48.306536 32544 net.cpp:200] relu1 needs backward computation.
I0428 20:13:48.306540 32544 net.cpp:200] ip1 needs backward computation.
I0428 20:13:48.306545 32544 net.cpp:200] pool1 needs backward computation.
I0428 20:13:48.306548 32544 net.cpp:200] conv1 needs backward computation.
I0428 20:13:48.306552 32544 net.cpp:200] pool0 needs backward computation.
I0428 20:13:48.306555 32544 net.cpp:200] conv0 needs backward computation.
I0428 20:13:48.306560 32544 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:48.306563 32544 net.cpp:202] mnist does not need backward computation.
I0428 20:13:48.306565 32544 net.cpp:244] This network produces output accuracy
I0428 20:13:48.306569 32544 net.cpp:244] This network produces output loss
I0428 20:13:48.306579 32544 net.cpp:257] Network initialization done.
I0428 20:13:48.306622 32544 solver.cpp:56] Solver scaffolding done.
I0428 20:13:48.306978 32544 caffe.cpp:248] Starting Optimization
I0428 20:13:48.306987 32544 solver.cpp:273] Solving LeNet
I0428 20:13:48.306989 32544 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:48.307804 32544 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:48.320649 32544 blocking_queue.cpp:49] Waiting for data
I0428 20:13:48.383009 32551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:48.384209 32544 solver.cpp:398]     Test net output #0: accuracy = 0.0965
I0428 20:13:48.384229 32544 solver.cpp:398]     Test net output #1: loss = 2.30458 (* 1 = 2.30458 loss)
I0428 20:13:48.389217 32544 solver.cpp:219] Iteration 0 (-1.53881e-35 iter/s, 0.0822043s/100 iters), loss = 2.29328
I0428 20:13:48.389256 32544 solver.cpp:238]     Train net output #0: loss = 2.29328 (* 1 = 2.29328 loss)
I0428 20:13:48.389268 32544 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:48.556998 32544 solver.cpp:219] Iteration 100 (596.214 iter/s, 0.167725s/100 iters), loss = 0.665028
I0428 20:13:48.557029 32544 solver.cpp:238]     Train net output #0: loss = 0.665028 (* 1 = 0.665028 loss)
I0428 20:13:48.557036 32544 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:48.723623 32544 solver.cpp:219] Iteration 200 (600.315 iter/s, 0.166579s/100 iters), loss = 0.243721
I0428 20:13:48.723647 32544 solver.cpp:238]     Train net output #0: loss = 0.243721 (* 1 = 0.243721 loss)
I0428 20:13:48.723654 32544 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:48.892546 32544 solver.cpp:219] Iteration 300 (592.119 iter/s, 0.168885s/100 iters), loss = 0.240575
I0428 20:13:48.892571 32544 solver.cpp:238]     Train net output #0: loss = 0.240575 (* 1 = 0.240575 loss)
I0428 20:13:48.892578 32544 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:49.058137 32544 solver.cpp:219] Iteration 400 (604.039 iter/s, 0.165552s/100 iters), loss = 0.100493
I0428 20:13:49.058163 32544 solver.cpp:238]     Train net output #0: loss = 0.100493 (* 1 = 0.100493 loss)
I0428 20:13:49.058171 32544 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:49.220715 32544 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:49.299423 32551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:49.300328 32544 solver.cpp:398]     Test net output #0: accuracy = 0.965
I0428 20:13:49.300365 32544 solver.cpp:398]     Test net output #1: loss = 0.107038 (* 1 = 0.107038 loss)
I0428 20:13:49.302009 32544 solver.cpp:219] Iteration 500 (410.122 iter/s, 0.24383s/100 iters), loss = 0.107029
I0428 20:13:49.302064 32544 solver.cpp:238]     Train net output #0: loss = 0.107029 (* 1 = 0.107029 loss)
I0428 20:13:49.302085 32544 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:49.467908 32544 solver.cpp:219] Iteration 600 (603.021 iter/s, 0.165832s/100 iters), loss = 0.0871928
I0428 20:13:49.467937 32544 solver.cpp:238]     Train net output #0: loss = 0.0871926 (* 1 = 0.0871926 loss)
I0428 20:13:49.467944 32544 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:49.637279 32544 solver.cpp:219] Iteration 700 (590.567 iter/s, 0.169329s/100 iters), loss = 0.112341
I0428 20:13:49.637306 32544 solver.cpp:238]     Train net output #0: loss = 0.112341 (* 1 = 0.112341 loss)
I0428 20:13:49.637313 32544 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:49.804924 32544 solver.cpp:219] Iteration 800 (596.647 iter/s, 0.167603s/100 iters), loss = 0.273061
I0428 20:13:49.804949 32544 solver.cpp:238]     Train net output #0: loss = 0.273061 (* 1 = 0.273061 loss)
I0428 20:13:49.804955 32544 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:49.970191 32544 solver.cpp:219] Iteration 900 (605.226 iter/s, 0.165228s/100 iters), loss = 0.150714
I0428 20:13:49.970218 32544 solver.cpp:238]     Train net output #0: loss = 0.150714 (* 1 = 0.150714 loss)
I0428 20:13:49.970224 32544 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:50.026721 32550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:50.135342 32544 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:50.138219 32544 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:50.139830 32544 solver.cpp:311] Iteration 1000, loss = 0.105482
I0428 20:13:50.139845 32544 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:50.216101 32551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:50.216986 32544 solver.cpp:398]     Test net output #0: accuracy = 0.9795
I0428 20:13:50.217020 32544 solver.cpp:398]     Test net output #1: loss = 0.0668696 (* 1 = 0.0668696 loss)
I0428 20:13:50.217026 32544 solver.cpp:316] Optimization Done.
I0428 20:13:50.217031 32544 caffe.cpp:259] Optimization Done.
