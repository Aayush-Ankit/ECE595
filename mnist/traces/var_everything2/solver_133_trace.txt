I0428 19:31:47.359084 22668 caffe.cpp:218] Using GPUs 0
I0428 19:31:47.397366 22668 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:47.852283 22668 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test133.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:47.852437 22668 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test133.prototxt
I0428 19:31:47.852732 22668 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:47.852747 22668 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:47.852839 22668 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:47.852923 22668 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:47.853027 22668 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:47.853054 22668 net.cpp:86] Creating Layer mnist
I0428 19:31:47.853062 22668 net.cpp:382] mnist -> data
I0428 19:31:47.853087 22668 net.cpp:382] mnist -> label
I0428 19:31:47.854087 22668 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:47.856400 22668 net.cpp:124] Setting up mnist
I0428 19:31:47.856433 22668 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:47.856441 22668 net.cpp:131] Top shape: 64 (64)
I0428 19:31:47.856446 22668 net.cpp:139] Memory required for data: 200960
I0428 19:31:47.856454 22668 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:47.856472 22668 net.cpp:86] Creating Layer conv0
I0428 19:31:47.856482 22668 net.cpp:408] conv0 <- data
I0428 19:31:47.856495 22668 net.cpp:382] conv0 -> conv0
I0428 19:31:48.088389 22668 net.cpp:124] Setting up conv0
I0428 19:31:48.088418 22668 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:48.088423 22668 net.cpp:139] Memory required for data: 1675520
I0428 19:31:48.088457 22668 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:48.088474 22668 net.cpp:86] Creating Layer pool0
I0428 19:31:48.088497 22668 net.cpp:408] pool0 <- conv0
I0428 19:31:48.088510 22668 net.cpp:382] pool0 -> pool0
I0428 19:31:48.088565 22668 net.cpp:124] Setting up pool0
I0428 19:31:48.088573 22668 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:48.088578 22668 net.cpp:139] Memory required for data: 2044160
I0428 19:31:48.088583 22668 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:48.088596 22668 net.cpp:86] Creating Layer ip1
I0428 19:31:48.088604 22668 net.cpp:408] ip1 <- pool0
I0428 19:31:48.088615 22668 net.cpp:382] ip1 -> ip1
I0428 19:31:48.089640 22668 net.cpp:124] Setting up ip1
I0428 19:31:48.089656 22668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:48.089661 22668 net.cpp:139] Memory required for data: 2046720
I0428 19:31:48.089675 22668 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:48.089687 22668 net.cpp:86] Creating Layer relu1
I0428 19:31:48.089699 22668 net.cpp:408] relu1 <- ip1
I0428 19:31:48.089707 22668 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:48.089920 22668 net.cpp:124] Setting up relu1
I0428 19:31:48.089931 22668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:48.089936 22668 net.cpp:139] Memory required for data: 2049280
I0428 19:31:48.089956 22668 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:48.089968 22668 net.cpp:86] Creating Layer ip2
I0428 19:31:48.089973 22668 net.cpp:408] ip2 <- ip1
I0428 19:31:48.089982 22668 net.cpp:382] ip2 -> ip2
I0428 19:31:48.090102 22668 net.cpp:124] Setting up ip2
I0428 19:31:48.090111 22668 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:48.090116 22668 net.cpp:139] Memory required for data: 2055680
I0428 19:31:48.090128 22668 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:48.090139 22668 net.cpp:86] Creating Layer relu2
I0428 19:31:48.090145 22668 net.cpp:408] relu2 <- ip2
I0428 19:31:48.090152 22668 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:48.090958 22668 net.cpp:124] Setting up relu2
I0428 19:31:48.090973 22668 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:48.090978 22668 net.cpp:139] Memory required for data: 2062080
I0428 19:31:48.090984 22668 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:48.090996 22668 net.cpp:86] Creating Layer ip3
I0428 19:31:48.091002 22668 net.cpp:408] ip3 <- ip2
I0428 19:31:48.091012 22668 net.cpp:382] ip3 -> ip3
I0428 19:31:48.091121 22668 net.cpp:124] Setting up ip3
I0428 19:31:48.091130 22668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:48.091135 22668 net.cpp:139] Memory required for data: 2064640
I0428 19:31:48.091145 22668 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:48.091156 22668 net.cpp:86] Creating Layer relu3
I0428 19:31:48.091163 22668 net.cpp:408] relu3 <- ip3
I0428 19:31:48.091171 22668 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:48.091341 22668 net.cpp:124] Setting up relu3
I0428 19:31:48.091351 22668 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:48.091356 22668 net.cpp:139] Memory required for data: 2067200
I0428 19:31:48.091361 22668 layer_factory.hpp:77] Creating layer loss
I0428 19:31:48.091372 22668 net.cpp:86] Creating Layer loss
I0428 19:31:48.091377 22668 net.cpp:408] loss <- ip3
I0428 19:31:48.091384 22668 net.cpp:408] loss <- label
I0428 19:31:48.091392 22668 net.cpp:382] loss -> loss
I0428 19:31:48.091411 22668 layer_factory.hpp:77] Creating layer loss
I0428 19:31:48.091694 22668 net.cpp:124] Setting up loss
I0428 19:31:48.091706 22668 net.cpp:131] Top shape: (1)
I0428 19:31:48.091711 22668 net.cpp:134]     with loss weight 1
I0428 19:31:48.091729 22668 net.cpp:139] Memory required for data: 2067204
I0428 19:31:48.091735 22668 net.cpp:200] loss needs backward computation.
I0428 19:31:48.091742 22668 net.cpp:200] relu3 needs backward computation.
I0428 19:31:48.091747 22668 net.cpp:200] ip3 needs backward computation.
I0428 19:31:48.091753 22668 net.cpp:200] relu2 needs backward computation.
I0428 19:31:48.091756 22668 net.cpp:200] ip2 needs backward computation.
I0428 19:31:48.091763 22668 net.cpp:200] relu1 needs backward computation.
I0428 19:31:48.091766 22668 net.cpp:200] ip1 needs backward computation.
I0428 19:31:48.091784 22668 net.cpp:200] pool0 needs backward computation.
I0428 19:31:48.091789 22668 net.cpp:200] conv0 needs backward computation.
I0428 19:31:48.091795 22668 net.cpp:202] mnist does not need backward computation.
I0428 19:31:48.091799 22668 net.cpp:244] This network produces output loss
I0428 19:31:48.091814 22668 net.cpp:257] Network initialization done.
I0428 19:31:48.092135 22668 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test133.prototxt
I0428 19:31:48.092185 22668 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:48.092303 22668 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:48.092406 22668 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:48.092464 22668 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:48.092481 22668 net.cpp:86] Creating Layer mnist
I0428 19:31:48.092490 22668 net.cpp:382] mnist -> data
I0428 19:31:48.092501 22668 net.cpp:382] mnist -> label
I0428 19:31:48.092623 22668 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:48.095031 22668 net.cpp:124] Setting up mnist
I0428 19:31:48.095044 22668 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:48.095052 22668 net.cpp:131] Top shape: 100 (100)
I0428 19:31:48.095072 22668 net.cpp:139] Memory required for data: 314000
I0428 19:31:48.095077 22668 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:48.095088 22668 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:48.095093 22668 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:48.095103 22668 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:48.095113 22668 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:48.095171 22668 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:48.095181 22668 net.cpp:131] Top shape: 100 (100)
I0428 19:31:48.095187 22668 net.cpp:131] Top shape: 100 (100)
I0428 19:31:48.095192 22668 net.cpp:139] Memory required for data: 314800
I0428 19:31:48.095209 22668 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:48.095242 22668 net.cpp:86] Creating Layer conv0
I0428 19:31:48.095247 22668 net.cpp:408] conv0 <- data
I0428 19:31:48.095257 22668 net.cpp:382] conv0 -> conv0
I0428 19:31:48.096840 22668 net.cpp:124] Setting up conv0
I0428 19:31:48.096873 22668 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:48.096879 22668 net.cpp:139] Memory required for data: 2618800
I0428 19:31:48.096894 22668 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:48.096906 22668 net.cpp:86] Creating Layer pool0
I0428 19:31:48.096930 22668 net.cpp:408] pool0 <- conv0
I0428 19:31:48.096940 22668 net.cpp:382] pool0 -> pool0
I0428 19:31:48.096987 22668 net.cpp:124] Setting up pool0
I0428 19:31:48.096997 22668 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:48.097004 22668 net.cpp:139] Memory required for data: 3194800
I0428 19:31:48.097009 22668 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:48.097021 22668 net.cpp:86] Creating Layer ip1
I0428 19:31:48.097028 22668 net.cpp:408] ip1 <- pool0
I0428 19:31:48.097040 22668 net.cpp:382] ip1 -> ip1
I0428 19:31:48.097281 22668 net.cpp:124] Setting up ip1
I0428 19:31:48.097306 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.097311 22668 net.cpp:139] Memory required for data: 3198800
I0428 19:31:48.097322 22668 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:48.097331 22668 net.cpp:86] Creating Layer relu1
I0428 19:31:48.097339 22668 net.cpp:408] relu1 <- ip1
I0428 19:31:48.097353 22668 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:48.097534 22668 net.cpp:124] Setting up relu1
I0428 19:31:48.097544 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.097549 22668 net.cpp:139] Memory required for data: 3202800
I0428 19:31:48.097555 22668 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:48.097566 22668 net.cpp:86] Creating Layer ip2
I0428 19:31:48.097573 22668 net.cpp:408] ip2 <- ip1
I0428 19:31:48.097580 22668 net.cpp:382] ip2 -> ip2
I0428 19:31:48.097702 22668 net.cpp:124] Setting up ip2
I0428 19:31:48.097710 22668 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:48.097715 22668 net.cpp:139] Memory required for data: 3212800
I0428 19:31:48.097728 22668 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:48.097739 22668 net.cpp:86] Creating Layer relu2
I0428 19:31:48.097761 22668 net.cpp:408] relu2 <- ip2
I0428 19:31:48.097769 22668 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:48.098629 22668 net.cpp:124] Setting up relu2
I0428 19:31:48.098646 22668 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:48.098651 22668 net.cpp:139] Memory required for data: 3222800
I0428 19:31:48.098659 22668 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:48.098671 22668 net.cpp:86] Creating Layer ip3
I0428 19:31:48.098677 22668 net.cpp:408] ip3 <- ip2
I0428 19:31:48.098688 22668 net.cpp:382] ip3 -> ip3
I0428 19:31:48.098806 22668 net.cpp:124] Setting up ip3
I0428 19:31:48.098815 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.098820 22668 net.cpp:139] Memory required for data: 3226800
I0428 19:31:48.098829 22668 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:48.098837 22668 net.cpp:86] Creating Layer relu3
I0428 19:31:48.098844 22668 net.cpp:408] relu3 <- ip3
I0428 19:31:48.098853 22668 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:48.099037 22668 net.cpp:124] Setting up relu3
I0428 19:31:48.099047 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.099052 22668 net.cpp:139] Memory required for data: 3230800
I0428 19:31:48.099057 22668 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:48.099064 22668 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:48.099069 22668 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:48.099078 22668 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:48.099087 22668 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:48.099171 22668 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:48.099179 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.099186 22668 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:48.099203 22668 net.cpp:139] Memory required for data: 3238800
I0428 19:31:48.099210 22668 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:48.099220 22668 net.cpp:86] Creating Layer accuracy
I0428 19:31:48.099225 22668 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:48.099246 22668 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:48.099257 22668 net.cpp:382] accuracy -> accuracy
I0428 19:31:48.099269 22668 net.cpp:124] Setting up accuracy
I0428 19:31:48.099277 22668 net.cpp:131] Top shape: (1)
I0428 19:31:48.099285 22668 net.cpp:139] Memory required for data: 3238804
I0428 19:31:48.099290 22668 layer_factory.hpp:77] Creating layer loss
I0428 19:31:48.099303 22668 net.cpp:86] Creating Layer loss
I0428 19:31:48.099309 22668 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:48.099316 22668 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:48.099324 22668 net.cpp:382] loss -> loss
I0428 19:31:48.099334 22668 layer_factory.hpp:77] Creating layer loss
I0428 19:31:48.099623 22668 net.cpp:124] Setting up loss
I0428 19:31:48.099633 22668 net.cpp:131] Top shape: (1)
I0428 19:31:48.099639 22668 net.cpp:134]     with loss weight 1
I0428 19:31:48.099650 22668 net.cpp:139] Memory required for data: 3238808
I0428 19:31:48.099656 22668 net.cpp:200] loss needs backward computation.
I0428 19:31:48.099663 22668 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:48.099670 22668 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:48.099675 22668 net.cpp:200] relu3 needs backward computation.
I0428 19:31:48.099680 22668 net.cpp:200] ip3 needs backward computation.
I0428 19:31:48.099685 22668 net.cpp:200] relu2 needs backward computation.
I0428 19:31:48.099689 22668 net.cpp:200] ip2 needs backward computation.
I0428 19:31:48.099694 22668 net.cpp:200] relu1 needs backward computation.
I0428 19:31:48.099699 22668 net.cpp:200] ip1 needs backward computation.
I0428 19:31:48.099704 22668 net.cpp:200] pool0 needs backward computation.
I0428 19:31:48.099709 22668 net.cpp:200] conv0 needs backward computation.
I0428 19:31:48.099714 22668 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:48.099720 22668 net.cpp:202] mnist does not need backward computation.
I0428 19:31:48.099725 22668 net.cpp:244] This network produces output accuracy
I0428 19:31:48.099730 22668 net.cpp:244] This network produces output loss
I0428 19:31:48.099745 22668 net.cpp:257] Network initialization done.
I0428 19:31:48.099787 22668 solver.cpp:56] Solver scaffolding done.
I0428 19:31:48.100107 22668 caffe.cpp:248] Starting Optimization
I0428 19:31:48.100113 22668 solver.cpp:273] Solving LeNet
I0428 19:31:48.100117 22668 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:48.100255 22668 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:48.106370 22668 blocking_queue.cpp:49] Waiting for data
I0428 19:31:48.156093 22675 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:48.156622 22668 solver.cpp:398]     Test net output #0: accuracy = 0.0919
I0428 19:31:48.156646 22668 solver.cpp:398]     Test net output #1: loss = 2.32763 (* 1 = 2.32763 loss)
I0428 19:31:48.159185 22668 solver.cpp:219] Iteration 0 (0 iter/s, 0.0590387s/100 iters), loss = 2.30472
I0428 19:31:48.159227 22668 solver.cpp:238]     Train net output #0: loss = 2.30472 (* 1 = 2.30472 loss)
I0428 19:31:48.159258 22668 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:48.222774 22668 solver.cpp:219] Iteration 100 (1573.5 iter/s, 0.0635525s/100 iters), loss = 1.09408
I0428 19:31:48.222803 22668 solver.cpp:238]     Train net output #0: loss = 1.09408 (* 1 = 1.09408 loss)
I0428 19:31:48.222828 22668 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:48.286659 22668 solver.cpp:219] Iteration 200 (1566.18 iter/s, 0.0638495s/100 iters), loss = 0.657387
I0428 19:31:48.286690 22668 solver.cpp:238]     Train net output #0: loss = 0.657387 (* 1 = 0.657387 loss)
I0428 19:31:48.286700 22668 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:48.349653 22668 solver.cpp:219] Iteration 300 (1588.37 iter/s, 0.0629576s/100 iters), loss = 0.710455
I0428 19:31:48.349683 22668 solver.cpp:238]     Train net output #0: loss = 0.710455 (* 1 = 0.710455 loss)
I0428 19:31:48.349691 22668 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:48.412504 22668 solver.cpp:219] Iteration 400 (1591.92 iter/s, 0.0628173s/100 iters), loss = 0.809753
I0428 19:31:48.412531 22668 solver.cpp:238]     Train net output #0: loss = 0.809753 (* 1 = 0.809753 loss)
I0428 19:31:48.412541 22668 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:48.475179 22668 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:48.521997 22675 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:48.522485 22668 solver.cpp:398]     Test net output #0: accuracy = 0.7456
I0428 19:31:48.522505 22668 solver.cpp:398]     Test net output #1: loss = 0.68024 (* 1 = 0.68024 loss)
I0428 19:31:48.523152 22668 solver.cpp:219] Iteration 500 (904.183 iter/s, 0.110597s/100 iters), loss = 0.803988
I0428 19:31:48.523180 22668 solver.cpp:238]     Train net output #0: loss = 0.803988 (* 1 = 0.803988 loss)
I0428 19:31:48.523195 22668 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:48.586748 22668 solver.cpp:219] Iteration 600 (1573.22 iter/s, 0.0635638s/100 iters), loss = 0.501429
I0428 19:31:48.586789 22668 solver.cpp:238]     Train net output #0: loss = 0.501429 (* 1 = 0.501429 loss)
I0428 19:31:48.586799 22668 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:48.650048 22668 solver.cpp:219] Iteration 700 (1580.97 iter/s, 0.0632524s/100 iters), loss = 0.773487
I0428 19:31:48.650074 22668 solver.cpp:238]     Train net output #0: loss = 0.773487 (* 1 = 0.773487 loss)
I0428 19:31:48.650084 22668 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:48.713371 22668 solver.cpp:219] Iteration 800 (1580.43 iter/s, 0.063274s/100 iters), loss = 0.756154
I0428 19:31:48.713397 22668 solver.cpp:238]     Train net output #0: loss = 0.756154 (* 1 = 0.756154 loss)
I0428 19:31:48.713407 22668 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:48.776270 22668 solver.cpp:219] Iteration 900 (1590.67 iter/s, 0.0628664s/100 iters), loss = 0.577652
I0428 19:31:48.776298 22668 solver.cpp:238]     Train net output #0: loss = 0.577652 (* 1 = 0.577652 loss)
I0428 19:31:48.776309 22668 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:48.797787 22674 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:48.839058 22668 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:48.839839 22668 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:48.840350 22668 solver.cpp:311] Iteration 1000, loss = 0.626262
I0428 19:31:48.840365 22668 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:48.886235 22675 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:48.886760 22668 solver.cpp:398]     Test net output #0: accuracy = 0.7557
I0428 19:31:48.886780 22668 solver.cpp:398]     Test net output #1: loss = 0.648923 (* 1 = 0.648923 loss)
I0428 19:31:48.886787 22668 solver.cpp:316] Optimization Done.
I0428 19:31:48.886791 22668 caffe.cpp:259] Optimization Done.
