I0428 20:30:27.718276  3725 caffe.cpp:218] Using GPUs 0
I0428 20:30:27.756564  3725 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:28.269517  3725 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1539.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:28.269659  3725 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1539.prototxt
I0428 20:30:28.270064  3725 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:28.270083  3725 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:28.270180  3725 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:28.270254  3725 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:28.270354  3725 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:28.270378  3725 net.cpp:86] Creating Layer mnist
I0428 20:30:28.270386  3725 net.cpp:382] mnist -> data
I0428 20:30:28.270408  3725 net.cpp:382] mnist -> label
I0428 20:30:28.271495  3725 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:28.273975  3725 net.cpp:124] Setting up mnist
I0428 20:30:28.273994  3725 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:28.274000  3725 net.cpp:131] Top shape: 64 (64)
I0428 20:30:28.274004  3725 net.cpp:139] Memory required for data: 200960
I0428 20:30:28.274011  3725 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:28.274027  3725 net.cpp:86] Creating Layer conv0
I0428 20:30:28.274050  3725 net.cpp:408] conv0 <- data
I0428 20:30:28.274062  3725 net.cpp:382] conv0 -> conv0
I0428 20:30:28.562927  3725 net.cpp:124] Setting up conv0
I0428 20:30:28.562957  3725 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:28.562960  3725 net.cpp:139] Memory required for data: 14946560
I0428 20:30:28.562976  3725 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:28.562988  3725 net.cpp:86] Creating Layer pool0
I0428 20:30:28.562994  3725 net.cpp:408] pool0 <- conv0
I0428 20:30:28.562999  3725 net.cpp:382] pool0 -> pool0
I0428 20:30:28.563046  3725 net.cpp:124] Setting up pool0
I0428 20:30:28.563055  3725 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:28.563058  3725 net.cpp:139] Memory required for data: 18632960
I0428 20:30:28.563061  3725 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:28.563072  3725 net.cpp:86] Creating Layer conv1
I0428 20:30:28.563077  3725 net.cpp:408] conv1 <- pool0
I0428 20:30:28.563083  3725 net.cpp:382] conv1 -> conv1
I0428 20:30:28.565150  3725 net.cpp:124] Setting up conv1
I0428 20:30:28.565187  3725 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:28.565208  3725 net.cpp:139] Memory required for data: 18796800
I0428 20:30:28.565217  3725 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:28.565241  3725 net.cpp:86] Creating Layer pool1
I0428 20:30:28.565245  3725 net.cpp:408] pool1 <- conv1
I0428 20:30:28.565265  3725 net.cpp:382] pool1 -> pool1
I0428 20:30:28.565304  3725 net.cpp:124] Setting up pool1
I0428 20:30:28.565310  3725 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:28.565312  3725 net.cpp:139] Memory required for data: 18837760
I0428 20:30:28.565315  3725 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:28.565322  3725 net.cpp:86] Creating Layer ip1
I0428 20:30:28.565325  3725 net.cpp:408] ip1 <- pool1
I0428 20:30:28.565330  3725 net.cpp:382] ip1 -> ip1
I0428 20:30:28.565441  3725 net.cpp:124] Setting up ip1
I0428 20:30:28.565450  3725 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:28.565454  3725 net.cpp:139] Memory required for data: 18840320
I0428 20:30:28.565460  3725 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:28.565466  3725 net.cpp:86] Creating Layer relu1
I0428 20:30:28.565469  3725 net.cpp:408] relu1 <- ip1
I0428 20:30:28.565474  3725 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:28.565649  3725 net.cpp:124] Setting up relu1
I0428 20:30:28.565659  3725 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:28.565662  3725 net.cpp:139] Memory required for data: 18842880
I0428 20:30:28.565665  3725 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:28.565672  3725 net.cpp:86] Creating Layer ip2
I0428 20:30:28.565675  3725 net.cpp:408] ip2 <- ip1
I0428 20:30:28.565681  3725 net.cpp:382] ip2 -> ip2
I0428 20:30:28.565785  3725 net.cpp:124] Setting up ip2
I0428 20:30:28.565793  3725 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:30:28.565796  3725 net.cpp:139] Memory required for data: 18855680
I0428 20:30:28.565801  3725 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:28.565809  3725 net.cpp:86] Creating Layer relu2
I0428 20:30:28.565811  3725 net.cpp:408] relu2 <- ip2
I0428 20:30:28.565815  3725 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:28.566557  3725 net.cpp:124] Setting up relu2
I0428 20:30:28.566570  3725 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:30:28.566575  3725 net.cpp:139] Memory required for data: 18868480
I0428 20:30:28.566578  3725 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:28.566586  3725 net.cpp:86] Creating Layer ip3
I0428 20:30:28.566588  3725 net.cpp:408] ip3 <- ip2
I0428 20:30:28.566596  3725 net.cpp:382] ip3 -> ip3
I0428 20:30:28.566705  3725 net.cpp:124] Setting up ip3
I0428 20:30:28.566714  3725 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:28.566716  3725 net.cpp:139] Memory required for data: 18871040
I0428 20:30:28.566725  3725 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:28.566730  3725 net.cpp:86] Creating Layer relu3
I0428 20:30:28.566732  3725 net.cpp:408] relu3 <- ip3
I0428 20:30:28.566737  3725 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:28.566949  3725 net.cpp:124] Setting up relu3
I0428 20:30:28.566958  3725 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:28.566962  3725 net.cpp:139] Memory required for data: 18873600
I0428 20:30:28.566965  3725 layer_factory.hpp:77] Creating layer loss
I0428 20:30:28.566972  3725 net.cpp:86] Creating Layer loss
I0428 20:30:28.566975  3725 net.cpp:408] loss <- ip3
I0428 20:30:28.566978  3725 net.cpp:408] loss <- label
I0428 20:30:28.566984  3725 net.cpp:382] loss -> loss
I0428 20:30:28.567001  3725 layer_factory.hpp:77] Creating layer loss
I0428 20:30:28.567242  3725 net.cpp:124] Setting up loss
I0428 20:30:28.567252  3725 net.cpp:131] Top shape: (1)
I0428 20:30:28.567255  3725 net.cpp:134]     with loss weight 1
I0428 20:30:28.567270  3725 net.cpp:139] Memory required for data: 18873604
I0428 20:30:28.567272  3725 net.cpp:200] loss needs backward computation.
I0428 20:30:28.567276  3725 net.cpp:200] relu3 needs backward computation.
I0428 20:30:28.567279  3725 net.cpp:200] ip3 needs backward computation.
I0428 20:30:28.567282  3725 net.cpp:200] relu2 needs backward computation.
I0428 20:30:28.567286  3725 net.cpp:200] ip2 needs backward computation.
I0428 20:30:28.567288  3725 net.cpp:200] relu1 needs backward computation.
I0428 20:30:28.567291  3725 net.cpp:200] ip1 needs backward computation.
I0428 20:30:28.567293  3725 net.cpp:200] pool1 needs backward computation.
I0428 20:30:28.567296  3725 net.cpp:200] conv1 needs backward computation.
I0428 20:30:28.567299  3725 net.cpp:200] pool0 needs backward computation.
I0428 20:30:28.567302  3725 net.cpp:200] conv0 needs backward computation.
I0428 20:30:28.567306  3725 net.cpp:202] mnist does not need backward computation.
I0428 20:30:28.567309  3725 net.cpp:244] This network produces output loss
I0428 20:30:28.567320  3725 net.cpp:257] Network initialization done.
I0428 20:30:28.567646  3725 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1539.prototxt
I0428 20:30:28.567674  3725 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:28.567806  3725 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:28.567894  3725 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:28.567942  3725 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:28.567960  3725 net.cpp:86] Creating Layer mnist
I0428 20:30:28.567965  3725 net.cpp:382] mnist -> data
I0428 20:30:28.567977  3725 net.cpp:382] mnist -> label
I0428 20:30:28.568073  3725 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:28.570042  3725 net.cpp:124] Setting up mnist
I0428 20:30:28.570057  3725 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:28.570062  3725 net.cpp:131] Top shape: 100 (100)
I0428 20:30:28.570065  3725 net.cpp:139] Memory required for data: 314000
I0428 20:30:28.570070  3725 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:28.570081  3725 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:28.570088  3725 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:28.570096  3725 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:28.570102  3725 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:28.570190  3725 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:28.570199  3725 net.cpp:131] Top shape: 100 (100)
I0428 20:30:28.570202  3725 net.cpp:131] Top shape: 100 (100)
I0428 20:30:28.570205  3725 net.cpp:139] Memory required for data: 314800
I0428 20:30:28.570209  3725 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:28.570219  3725 net.cpp:86] Creating Layer conv0
I0428 20:30:28.570224  3725 net.cpp:408] conv0 <- data
I0428 20:30:28.570230  3725 net.cpp:382] conv0 -> conv0
I0428 20:30:28.571913  3725 net.cpp:124] Setting up conv0
I0428 20:30:28.571929  3725 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:28.571933  3725 net.cpp:139] Memory required for data: 23354800
I0428 20:30:28.571943  3725 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:28.571949  3725 net.cpp:86] Creating Layer pool0
I0428 20:30:28.571952  3725 net.cpp:408] pool0 <- conv0
I0428 20:30:28.571959  3725 net.cpp:382] pool0 -> pool0
I0428 20:30:28.571995  3725 net.cpp:124] Setting up pool0
I0428 20:30:28.572000  3725 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:28.572003  3725 net.cpp:139] Memory required for data: 29114800
I0428 20:30:28.572006  3725 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:28.572017  3725 net.cpp:86] Creating Layer conv1
I0428 20:30:28.572021  3725 net.cpp:408] conv1 <- pool0
I0428 20:30:28.572026  3725 net.cpp:382] conv1 -> conv1
I0428 20:30:28.573742  3725 net.cpp:124] Setting up conv1
I0428 20:30:28.573756  3725 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:28.573761  3725 net.cpp:139] Memory required for data: 29370800
I0428 20:30:28.573770  3725 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:28.573776  3725 net.cpp:86] Creating Layer pool1
I0428 20:30:28.573781  3725 net.cpp:408] pool1 <- conv1
I0428 20:30:28.573786  3725 net.cpp:382] pool1 -> pool1
I0428 20:30:28.573823  3725 net.cpp:124] Setting up pool1
I0428 20:30:28.573830  3725 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:28.573833  3725 net.cpp:139] Memory required for data: 29434800
I0428 20:30:28.573837  3725 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:28.573843  3725 net.cpp:86] Creating Layer ip1
I0428 20:30:28.573846  3725 net.cpp:408] ip1 <- pool1
I0428 20:30:28.573853  3725 net.cpp:382] ip1 -> ip1
I0428 20:30:28.574009  3725 net.cpp:124] Setting up ip1
I0428 20:30:28.574030  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.574039  3725 net.cpp:139] Memory required for data: 29438800
I0428 20:30:28.574048  3725 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:28.574054  3725 net.cpp:86] Creating Layer relu1
I0428 20:30:28.574059  3725 net.cpp:408] relu1 <- ip1
I0428 20:30:28.574065  3725 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:28.574272  3725 net.cpp:124] Setting up relu1
I0428 20:30:28.574281  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.574285  3725 net.cpp:139] Memory required for data: 29442800
I0428 20:30:28.574288  3725 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:28.574308  3725 net.cpp:86] Creating Layer ip2
I0428 20:30:28.574312  3725 net.cpp:408] ip2 <- ip1
I0428 20:30:28.574317  3725 net.cpp:382] ip2 -> ip2
I0428 20:30:28.574441  3725 net.cpp:124] Setting up ip2
I0428 20:30:28.574450  3725 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:30:28.574452  3725 net.cpp:139] Memory required for data: 29462800
I0428 20:30:28.574458  3725 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:28.574463  3725 net.cpp:86] Creating Layer relu2
I0428 20:30:28.574466  3725 net.cpp:408] relu2 <- ip2
I0428 20:30:28.574472  3725 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:28.574662  3725 net.cpp:124] Setting up relu2
I0428 20:30:28.574671  3725 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:30:28.574674  3725 net.cpp:139] Memory required for data: 29482800
I0428 20:30:28.574677  3725 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:28.574684  3725 net.cpp:86] Creating Layer ip3
I0428 20:30:28.574687  3725 net.cpp:408] ip3 <- ip2
I0428 20:30:28.574692  3725 net.cpp:382] ip3 -> ip3
I0428 20:30:28.574818  3725 net.cpp:124] Setting up ip3
I0428 20:30:28.574826  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.574828  3725 net.cpp:139] Memory required for data: 29486800
I0428 20:30:28.574837  3725 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:28.574842  3725 net.cpp:86] Creating Layer relu3
I0428 20:30:28.574846  3725 net.cpp:408] relu3 <- ip3
I0428 20:30:28.574849  3725 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:28.575681  3725 net.cpp:124] Setting up relu3
I0428 20:30:28.575695  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.575698  3725 net.cpp:139] Memory required for data: 29490800
I0428 20:30:28.575702  3725 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:28.575708  3725 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:28.575712  3725 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:28.575717  3725 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:28.575723  3725 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:28.575763  3725 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:28.575768  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.575773  3725 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:28.575775  3725 net.cpp:139] Memory required for data: 29498800
I0428 20:30:28.575778  3725 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:28.575784  3725 net.cpp:86] Creating Layer accuracy
I0428 20:30:28.575788  3725 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:28.575793  3725 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:28.575798  3725 net.cpp:382] accuracy -> accuracy
I0428 20:30:28.575804  3725 net.cpp:124] Setting up accuracy
I0428 20:30:28.575808  3725 net.cpp:131] Top shape: (1)
I0428 20:30:28.575810  3725 net.cpp:139] Memory required for data: 29498804
I0428 20:30:28.575814  3725 layer_factory.hpp:77] Creating layer loss
I0428 20:30:28.575819  3725 net.cpp:86] Creating Layer loss
I0428 20:30:28.575821  3725 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:28.575824  3725 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:28.575837  3725 net.cpp:382] loss -> loss
I0428 20:30:28.575844  3725 layer_factory.hpp:77] Creating layer loss
I0428 20:30:28.576087  3725 net.cpp:124] Setting up loss
I0428 20:30:28.576100  3725 net.cpp:131] Top shape: (1)
I0428 20:30:28.576103  3725 net.cpp:134]     with loss weight 1
I0428 20:30:28.576120  3725 net.cpp:139] Memory required for data: 29498808
I0428 20:30:28.576123  3725 net.cpp:200] loss needs backward computation.
I0428 20:30:28.576128  3725 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:28.576133  3725 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:28.576135  3725 net.cpp:200] relu3 needs backward computation.
I0428 20:30:28.576138  3725 net.cpp:200] ip3 needs backward computation.
I0428 20:30:28.576141  3725 net.cpp:200] relu2 needs backward computation.
I0428 20:30:28.576143  3725 net.cpp:200] ip2 needs backward computation.
I0428 20:30:28.576148  3725 net.cpp:200] relu1 needs backward computation.
I0428 20:30:28.576149  3725 net.cpp:200] ip1 needs backward computation.
I0428 20:30:28.576153  3725 net.cpp:200] pool1 needs backward computation.
I0428 20:30:28.576161  3725 net.cpp:200] conv1 needs backward computation.
I0428 20:30:28.576169  3725 net.cpp:200] pool0 needs backward computation.
I0428 20:30:28.576172  3725 net.cpp:200] conv0 needs backward computation.
I0428 20:30:28.576180  3725 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:28.576184  3725 net.cpp:202] mnist does not need backward computation.
I0428 20:30:28.576187  3725 net.cpp:244] This network produces output accuracy
I0428 20:30:28.576190  3725 net.cpp:244] This network produces output loss
I0428 20:30:28.576202  3725 net.cpp:257] Network initialization done.
I0428 20:30:28.576246  3725 solver.cpp:56] Solver scaffolding done.
I0428 20:30:28.576673  3725 caffe.cpp:248] Starting Optimization
I0428 20:30:28.576678  3725 solver.cpp:273] Solving LeNet
I0428 20:30:28.576681  3725 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:28.577579  3725 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:28.618429  3725 blocking_queue.cpp:49] Waiting for data
I0428 20:30:28.679780  3740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:28.681206  3725 solver.cpp:398]     Test net output #0: accuracy = 0.1249
I0428 20:30:28.681239  3725 solver.cpp:398]     Test net output #1: loss = 2.29527 (* 1 = 2.29527 loss)
I0428 20:30:28.685961  3725 solver.cpp:219] Iteration 0 (-8.09457e-31 iter/s, 0.109227s/100 iters), loss = 2.29167
I0428 20:30:28.685999  3725 solver.cpp:238]     Train net output #0: loss = 2.29167 (* 1 = 2.29167 loss)
I0428 20:30:28.686010  3725 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:28.904073  3725 solver.cpp:219] Iteration 100 (458.62 iter/s, 0.218045s/100 iters), loss = 0.22372
I0428 20:30:28.904116  3725 solver.cpp:238]     Train net output #0: loss = 0.22372 (* 1 = 0.22372 loss)
I0428 20:30:28.904127  3725 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:29.118543  3725 solver.cpp:219] Iteration 200 (466.413 iter/s, 0.214402s/100 iters), loss = 0.249373
I0428 20:30:29.118597  3725 solver.cpp:238]     Train net output #0: loss = 0.249373 (* 1 = 0.249373 loss)
I0428 20:30:29.118612  3725 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:29.338920  3725 solver.cpp:219] Iteration 300 (453.909 iter/s, 0.220309s/100 iters), loss = 0.16563
I0428 20:30:29.338960  3725 solver.cpp:238]     Train net output #0: loss = 0.16563 (* 1 = 0.16563 loss)
I0428 20:30:29.338970  3725 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:29.552793  3725 solver.cpp:219] Iteration 400 (467.698 iter/s, 0.213813s/100 iters), loss = 0.238744
I0428 20:30:29.552857  3725 solver.cpp:238]     Train net output #0: loss = 0.238744 (* 1 = 0.238744 loss)
I0428 20:30:29.552871  3725 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:29.770198  3725 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:29.871731  3740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:29.873322  3725 solver.cpp:398]     Test net output #0: accuracy = 0.9597
I0428 20:30:29.873350  3725 solver.cpp:398]     Test net output #1: loss = 0.126844 (* 1 = 0.126844 loss)
I0428 20:30:29.875385  3725 solver.cpp:219] Iteration 500 (310.067 iter/s, 0.322511s/100 iters), loss = 0.0770156
I0428 20:30:29.875433  3725 solver.cpp:238]     Train net output #0: loss = 0.0770156 (* 1 = 0.0770156 loss)
I0428 20:30:29.875442  3725 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:30.093009  3725 solver.cpp:219] Iteration 600 (459.65 iter/s, 0.217557s/100 iters), loss = 0.120888
I0428 20:30:30.093055  3725 solver.cpp:238]     Train net output #0: loss = 0.120888 (* 1 = 0.120888 loss)
I0428 20:30:30.093065  3725 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:30.313330  3725 solver.cpp:219] Iteration 700 (454.01 iter/s, 0.220259s/100 iters), loss = 0.168505
I0428 20:30:30.313385  3725 solver.cpp:238]     Train net output #0: loss = 0.168505 (* 1 = 0.168505 loss)
I0428 20:30:30.313406  3725 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:30.527115  3725 solver.cpp:219] Iteration 800 (467.925 iter/s, 0.21371s/100 iters), loss = 0.27978
I0428 20:30:30.527189  3725 solver.cpp:238]     Train net output #0: loss = 0.27978 (* 1 = 0.27978 loss)
I0428 20:30:30.527209  3725 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:30.749522  3725 solver.cpp:219] Iteration 900 (449.797 iter/s, 0.222323s/100 iters), loss = 0.268012
I0428 20:30:30.749563  3725 solver.cpp:238]     Train net output #0: loss = 0.268012 (* 1 = 0.268012 loss)
I0428 20:30:30.749573  3725 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:30.817852  3739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:30.964148  3725 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:30.966274  3725 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:30.967679  3725 solver.cpp:311] Iteration 1000, loss = 0.101715
I0428 20:30:30.967717  3725 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:31.080981  3740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:31.083959  3725 solver.cpp:398]     Test net output #0: accuracy = 0.9692
I0428 20:30:31.083984  3725 solver.cpp:398]     Test net output #1: loss = 0.0984141 (* 1 = 0.0984141 loss)
I0428 20:30:31.083992  3725 solver.cpp:316] Optimization Done.
I0428 20:30:31.083995  3725 caffe.cpp:259] Optimization Done.
