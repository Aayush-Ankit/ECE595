I0428 20:07:19.028290 31076 caffe.cpp:218] Using GPUs 0
I0428 20:07:19.058465 31076 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:19.540897 31076 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1052.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:19.541044 31076 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1052.prototxt
I0428 20:07:19.541435 31076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:19.541465 31076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:19.541550 31076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:19.541616 31076 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:19.541700 31076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:19.541720 31076 net.cpp:86] Creating Layer mnist
I0428 20:07:19.541728 31076 net.cpp:382] mnist -> data
I0428 20:07:19.541746 31076 net.cpp:382] mnist -> label
I0428 20:07:19.542699 31076 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:19.545071 31076 net.cpp:124] Setting up mnist
I0428 20:07:19.545115 31076 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:19.545122 31076 net.cpp:131] Top shape: 64 (64)
I0428 20:07:19.545125 31076 net.cpp:139] Memory required for data: 200960
I0428 20:07:19.545131 31076 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:19.545145 31076 net.cpp:86] Creating Layer conv0
I0428 20:07:19.545162 31076 net.cpp:408] conv0 <- data
I0428 20:07:19.545173 31076 net.cpp:382] conv0 -> conv0
I0428 20:07:19.780750 31076 net.cpp:124] Setting up conv0
I0428 20:07:19.780776 31076 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:19.780779 31076 net.cpp:139] Memory required for data: 3887360
I0428 20:07:19.780794 31076 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:19.780807 31076 net.cpp:86] Creating Layer pool0
I0428 20:07:19.780815 31076 net.cpp:408] pool0 <- conv0
I0428 20:07:19.780820 31076 net.cpp:382] pool0 -> pool0
I0428 20:07:19.780879 31076 net.cpp:124] Setting up pool0
I0428 20:07:19.780884 31076 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:19.780885 31076 net.cpp:139] Memory required for data: 4808960
I0428 20:07:19.780889 31076 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:19.780899 31076 net.cpp:86] Creating Layer conv1
I0428 20:07:19.780901 31076 net.cpp:408] conv1 <- pool0
I0428 20:07:19.780906 31076 net.cpp:382] conv1 -> conv1
I0428 20:07:19.783664 31076 net.cpp:124] Setting up conv1
I0428 20:07:19.783694 31076 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:19.783696 31076 net.cpp:139] Memory required for data: 4890880
I0428 20:07:19.783704 31076 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:19.783711 31076 net.cpp:86] Creating Layer pool1
I0428 20:07:19.783715 31076 net.cpp:408] pool1 <- conv1
I0428 20:07:19.783720 31076 net.cpp:382] pool1 -> pool1
I0428 20:07:19.783769 31076 net.cpp:124] Setting up pool1
I0428 20:07:19.783773 31076 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:19.783776 31076 net.cpp:139] Memory required for data: 4911360
I0428 20:07:19.783779 31076 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:19.783785 31076 net.cpp:86] Creating Layer ip1
I0428 20:07:19.783789 31076 net.cpp:408] ip1 <- pool1
I0428 20:07:19.783793 31076 net.cpp:382] ip1 -> ip1
I0428 20:07:19.783905 31076 net.cpp:124] Setting up ip1
I0428 20:07:19.783911 31076 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:19.783915 31076 net.cpp:139] Memory required for data: 4924160
I0428 20:07:19.783921 31076 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:19.783927 31076 net.cpp:86] Creating Layer relu1
I0428 20:07:19.783931 31076 net.cpp:408] relu1 <- ip1
I0428 20:07:19.783934 31076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:19.784096 31076 net.cpp:124] Setting up relu1
I0428 20:07:19.784104 31076 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:19.784108 31076 net.cpp:139] Memory required for data: 4936960
I0428 20:07:19.784111 31076 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:19.784116 31076 net.cpp:86] Creating Layer ip2
I0428 20:07:19.784119 31076 net.cpp:408] ip2 <- ip1
I0428 20:07:19.784124 31076 net.cpp:382] ip2 -> ip2
I0428 20:07:19.784226 31076 net.cpp:124] Setting up ip2
I0428 20:07:19.784234 31076 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:19.784236 31076 net.cpp:139] Memory required for data: 4949760
I0428 20:07:19.784241 31076 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:19.784246 31076 net.cpp:86] Creating Layer relu2
I0428 20:07:19.784250 31076 net.cpp:408] relu2 <- ip2
I0428 20:07:19.784255 31076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:19.785099 31076 net.cpp:124] Setting up relu2
I0428 20:07:19.785114 31076 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:19.785118 31076 net.cpp:139] Memory required for data: 4962560
I0428 20:07:19.785140 31076 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:19.785148 31076 net.cpp:86] Creating Layer ip3
I0428 20:07:19.785152 31076 net.cpp:408] ip3 <- ip2
I0428 20:07:19.785157 31076 net.cpp:382] ip3 -> ip3
I0428 20:07:19.785293 31076 net.cpp:124] Setting up ip3
I0428 20:07:19.785301 31076 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:19.785305 31076 net.cpp:139] Memory required for data: 4965120
I0428 20:07:19.785322 31076 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:19.785329 31076 net.cpp:86] Creating Layer relu3
I0428 20:07:19.785332 31076 net.cpp:408] relu3 <- ip3
I0428 20:07:19.785336 31076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:19.785516 31076 net.cpp:124] Setting up relu3
I0428 20:07:19.785524 31076 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:19.785527 31076 net.cpp:139] Memory required for data: 4967680
I0428 20:07:19.785531 31076 layer_factory.hpp:77] Creating layer loss
I0428 20:07:19.785537 31076 net.cpp:86] Creating Layer loss
I0428 20:07:19.785540 31076 net.cpp:408] loss <- ip3
I0428 20:07:19.785544 31076 net.cpp:408] loss <- label
I0428 20:07:19.785549 31076 net.cpp:382] loss -> loss
I0428 20:07:19.785563 31076 layer_factory.hpp:77] Creating layer loss
I0428 20:07:19.785807 31076 net.cpp:124] Setting up loss
I0428 20:07:19.785817 31076 net.cpp:131] Top shape: (1)
I0428 20:07:19.785820 31076 net.cpp:134]     with loss weight 1
I0428 20:07:19.785835 31076 net.cpp:139] Memory required for data: 4967684
I0428 20:07:19.785838 31076 net.cpp:200] loss needs backward computation.
I0428 20:07:19.785841 31076 net.cpp:200] relu3 needs backward computation.
I0428 20:07:19.785845 31076 net.cpp:200] ip3 needs backward computation.
I0428 20:07:19.785847 31076 net.cpp:200] relu2 needs backward computation.
I0428 20:07:19.785851 31076 net.cpp:200] ip2 needs backward computation.
I0428 20:07:19.785852 31076 net.cpp:200] relu1 needs backward computation.
I0428 20:07:19.785856 31076 net.cpp:200] ip1 needs backward computation.
I0428 20:07:19.785858 31076 net.cpp:200] pool1 needs backward computation.
I0428 20:07:19.785861 31076 net.cpp:200] conv1 needs backward computation.
I0428 20:07:19.785864 31076 net.cpp:200] pool0 needs backward computation.
I0428 20:07:19.785867 31076 net.cpp:200] conv0 needs backward computation.
I0428 20:07:19.785871 31076 net.cpp:202] mnist does not need backward computation.
I0428 20:07:19.785873 31076 net.cpp:244] This network produces output loss
I0428 20:07:19.785881 31076 net.cpp:257] Network initialization done.
I0428 20:07:19.786242 31076 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1052.prototxt
I0428 20:07:19.786283 31076 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:19.786381 31076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:19.786499 31076 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:19.786545 31076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:19.786556 31076 net.cpp:86] Creating Layer mnist
I0428 20:07:19.786562 31076 net.cpp:382] mnist -> data
I0428 20:07:19.786571 31076 net.cpp:382] mnist -> label
I0428 20:07:19.786661 31076 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:19.788707 31076 net.cpp:124] Setting up mnist
I0428 20:07:19.788751 31076 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:19.788758 31076 net.cpp:131] Top shape: 100 (100)
I0428 20:07:19.788760 31076 net.cpp:139] Memory required for data: 314000
I0428 20:07:19.788764 31076 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:19.788770 31076 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:19.788774 31076 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:19.788780 31076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:19.788787 31076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:19.788858 31076 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:19.788866 31076 net.cpp:131] Top shape: 100 (100)
I0428 20:07:19.788871 31076 net.cpp:131] Top shape: 100 (100)
I0428 20:07:19.788872 31076 net.cpp:139] Memory required for data: 314800
I0428 20:07:19.788875 31076 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:19.788885 31076 net.cpp:86] Creating Layer conv0
I0428 20:07:19.788892 31076 net.cpp:408] conv0 <- data
I0428 20:07:19.788898 31076 net.cpp:382] conv0 -> conv0
I0428 20:07:19.790726 31076 net.cpp:124] Setting up conv0
I0428 20:07:19.790738 31076 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:19.790757 31076 net.cpp:139] Memory required for data: 6074800
I0428 20:07:19.790766 31076 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:19.790772 31076 net.cpp:86] Creating Layer pool0
I0428 20:07:19.790776 31076 net.cpp:408] pool0 <- conv0
I0428 20:07:19.790781 31076 net.cpp:382] pool0 -> pool0
I0428 20:07:19.790846 31076 net.cpp:124] Setting up pool0
I0428 20:07:19.790868 31076 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:19.790871 31076 net.cpp:139] Memory required for data: 7514800
I0428 20:07:19.790874 31076 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:19.790884 31076 net.cpp:86] Creating Layer conv1
I0428 20:07:19.790889 31076 net.cpp:408] conv1 <- pool0
I0428 20:07:19.790910 31076 net.cpp:382] conv1 -> conv1
I0428 20:07:19.793177 31076 net.cpp:124] Setting up conv1
I0428 20:07:19.793205 31076 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:19.793225 31076 net.cpp:139] Memory required for data: 7642800
I0428 20:07:19.793247 31076 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:19.793253 31076 net.cpp:86] Creating Layer pool1
I0428 20:07:19.793257 31076 net.cpp:408] pool1 <- conv1
I0428 20:07:19.793262 31076 net.cpp:382] pool1 -> pool1
I0428 20:07:19.793328 31076 net.cpp:124] Setting up pool1
I0428 20:07:19.793334 31076 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:19.793336 31076 net.cpp:139] Memory required for data: 7674800
I0428 20:07:19.793339 31076 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:19.793344 31076 net.cpp:86] Creating Layer ip1
I0428 20:07:19.793347 31076 net.cpp:408] ip1 <- pool1
I0428 20:07:19.793367 31076 net.cpp:382] ip1 -> ip1
I0428 20:07:19.793539 31076 net.cpp:124] Setting up ip1
I0428 20:07:19.793546 31076 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:19.793558 31076 net.cpp:139] Memory required for data: 7694800
I0428 20:07:19.793566 31076 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:19.793572 31076 net.cpp:86] Creating Layer relu1
I0428 20:07:19.793576 31076 net.cpp:408] relu1 <- ip1
I0428 20:07:19.793581 31076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:19.793732 31076 net.cpp:124] Setting up relu1
I0428 20:07:19.793741 31076 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:19.793745 31076 net.cpp:139] Memory required for data: 7714800
I0428 20:07:19.793748 31076 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:19.793756 31076 net.cpp:86] Creating Layer ip2
I0428 20:07:19.793758 31076 net.cpp:408] ip2 <- ip1
I0428 20:07:19.793762 31076 net.cpp:382] ip2 -> ip2
I0428 20:07:19.793867 31076 net.cpp:124] Setting up ip2
I0428 20:07:19.793874 31076 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:19.793876 31076 net.cpp:139] Memory required for data: 7734800
I0428 20:07:19.793881 31076 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:19.793885 31076 net.cpp:86] Creating Layer relu2
I0428 20:07:19.793889 31076 net.cpp:408] relu2 <- ip2
I0428 20:07:19.793892 31076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:19.794026 31076 net.cpp:124] Setting up relu2
I0428 20:07:19.794034 31076 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:19.794037 31076 net.cpp:139] Memory required for data: 7754800
I0428 20:07:19.794040 31076 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:19.794045 31076 net.cpp:86] Creating Layer ip3
I0428 20:07:19.794054 31076 net.cpp:408] ip3 <- ip2
I0428 20:07:19.794059 31076 net.cpp:382] ip3 -> ip3
I0428 20:07:19.794168 31076 net.cpp:124] Setting up ip3
I0428 20:07:19.794175 31076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:19.794178 31076 net.cpp:139] Memory required for data: 7758800
I0428 20:07:19.794201 31076 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:19.794206 31076 net.cpp:86] Creating Layer relu3
I0428 20:07:19.794209 31076 net.cpp:408] relu3 <- ip3
I0428 20:07:19.794214 31076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:19.795058 31076 net.cpp:124] Setting up relu3
I0428 20:07:19.795068 31076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:19.795087 31076 net.cpp:139] Memory required for data: 7762800
I0428 20:07:19.795090 31076 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:19.795095 31076 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:19.795099 31076 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:19.795104 31076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:19.795110 31076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:19.795181 31076 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:19.795188 31076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:19.795192 31076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:19.795194 31076 net.cpp:139] Memory required for data: 7770800
I0428 20:07:19.795198 31076 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:19.795203 31076 net.cpp:86] Creating Layer accuracy
I0428 20:07:19.795207 31076 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:19.795210 31076 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:19.795214 31076 net.cpp:382] accuracy -> accuracy
I0428 20:07:19.795222 31076 net.cpp:124] Setting up accuracy
I0428 20:07:19.795225 31076 net.cpp:131] Top shape: (1)
I0428 20:07:19.795244 31076 net.cpp:139] Memory required for data: 7770804
I0428 20:07:19.795246 31076 layer_factory.hpp:77] Creating layer loss
I0428 20:07:19.795251 31076 net.cpp:86] Creating Layer loss
I0428 20:07:19.795254 31076 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:19.795259 31076 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:19.795264 31076 net.cpp:382] loss -> loss
I0428 20:07:19.795269 31076 layer_factory.hpp:77] Creating layer loss
I0428 20:07:19.795500 31076 net.cpp:124] Setting up loss
I0428 20:07:19.795509 31076 net.cpp:131] Top shape: (1)
I0428 20:07:19.795513 31076 net.cpp:134]     with loss weight 1
I0428 20:07:19.795519 31076 net.cpp:139] Memory required for data: 7770808
I0428 20:07:19.795532 31076 net.cpp:200] loss needs backward computation.
I0428 20:07:19.795536 31076 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:19.795541 31076 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:19.795544 31076 net.cpp:200] relu3 needs backward computation.
I0428 20:07:19.795547 31076 net.cpp:200] ip3 needs backward computation.
I0428 20:07:19.795564 31076 net.cpp:200] relu2 needs backward computation.
I0428 20:07:19.795567 31076 net.cpp:200] ip2 needs backward computation.
I0428 20:07:19.795570 31076 net.cpp:200] relu1 needs backward computation.
I0428 20:07:19.795573 31076 net.cpp:200] ip1 needs backward computation.
I0428 20:07:19.795577 31076 net.cpp:200] pool1 needs backward computation.
I0428 20:07:19.795579 31076 net.cpp:200] conv1 needs backward computation.
I0428 20:07:19.795583 31076 net.cpp:200] pool0 needs backward computation.
I0428 20:07:19.795586 31076 net.cpp:200] conv0 needs backward computation.
I0428 20:07:19.795589 31076 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:19.795593 31076 net.cpp:202] mnist does not need backward computation.
I0428 20:07:19.795596 31076 net.cpp:244] This network produces output accuracy
I0428 20:07:19.795600 31076 net.cpp:244] This network produces output loss
I0428 20:07:19.795610 31076 net.cpp:257] Network initialization done.
I0428 20:07:19.795652 31076 solver.cpp:56] Solver scaffolding done.
I0428 20:07:19.796030 31076 caffe.cpp:248] Starting Optimization
I0428 20:07:19.796036 31076 solver.cpp:273] Solving LeNet
I0428 20:07:19.796039 31076 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:19.796964 31076 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:19.802677 31076 blocking_queue.cpp:49] Waiting for data
I0428 20:07:19.866101 31083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:19.866703 31076 solver.cpp:398]     Test net output #0: accuracy = 0.0968
I0428 20:07:19.866721 31076 solver.cpp:398]     Test net output #1: loss = 2.3291 (* 1 = 2.3291 loss)
I0428 20:07:19.870344 31076 solver.cpp:219] Iteration 0 (0 iter/s, 0.0742606s/100 iters), loss = 2.31264
I0428 20:07:19.870383 31076 solver.cpp:238]     Train net output #0: loss = 2.31264 (* 1 = 2.31264 loss)
I0428 20:07:19.870393 31076 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:19.957674 31076 solver.cpp:219] Iteration 100 (1145.53 iter/s, 0.087296s/100 iters), loss = 1.06988
I0428 20:07:19.957712 31076 solver.cpp:238]     Train net output #0: loss = 1.06988 (* 1 = 1.06988 loss)
I0428 20:07:19.957718 31076 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:20.052695 31076 solver.cpp:219] Iteration 200 (1052.81 iter/s, 0.094984s/100 iters), loss = 0.35362
I0428 20:07:20.052738 31076 solver.cpp:238]     Train net output #0: loss = 0.35362 (* 1 = 0.35362 loss)
I0428 20:07:20.052749 31076 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:20.146335 31076 solver.cpp:219] Iteration 300 (1068.5 iter/s, 0.0935895s/100 iters), loss = 0.285646
I0428 20:07:20.146366 31076 solver.cpp:238]     Train net output #0: loss = 0.285646 (* 1 = 0.285646 loss)
I0428 20:07:20.146374 31076 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:20.251798 31076 solver.cpp:219] Iteration 400 (948.589 iter/s, 0.10542s/100 iters), loss = 0.101525
I0428 20:07:20.251837 31076 solver.cpp:238]     Train net output #0: loss = 0.101525 (* 1 = 0.101525 loss)
I0428 20:07:20.251845 31076 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:20.354899 31076 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:20.411062 31083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:20.411824 31076 solver.cpp:398]     Test net output #0: accuracy = 0.9514
I0428 20:07:20.411849 31076 solver.cpp:398]     Test net output #1: loss = 0.154177 (* 1 = 0.154177 loss)
I0428 20:07:20.412679 31076 solver.cpp:219] Iteration 500 (621.773 iter/s, 0.16083s/100 iters), loss = 0.237535
I0428 20:07:20.412715 31076 solver.cpp:238]     Train net output #0: loss = 0.237535 (* 1 = 0.237535 loss)
I0428 20:07:20.412744 31076 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:20.504447 31076 solver.cpp:219] Iteration 600 (1090.23 iter/s, 0.0917238s/100 iters), loss = 0.185293
I0428 20:07:20.504478 31076 solver.cpp:238]     Train net output #0: loss = 0.185292 (* 1 = 0.185292 loss)
I0428 20:07:20.504487 31076 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:20.608348 31076 solver.cpp:219] Iteration 700 (962.851 iter/s, 0.103858s/100 iters), loss = 0.239527
I0428 20:07:20.608388 31076 solver.cpp:238]     Train net output #0: loss = 0.239527 (* 1 = 0.239527 loss)
I0428 20:07:20.608404 31076 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:20.701028 31076 solver.cpp:219] Iteration 800 (1079.55 iter/s, 0.092631s/100 iters), loss = 0.191826
I0428 20:07:20.701061 31076 solver.cpp:238]     Train net output #0: loss = 0.191826 (* 1 = 0.191826 loss)
I0428 20:07:20.701068 31076 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:20.792578 31076 solver.cpp:219] Iteration 900 (1092.8 iter/s, 0.0915079s/100 iters), loss = 0.259282
I0428 20:07:20.792610 31076 solver.cpp:238]     Train net output #0: loss = 0.259282 (* 1 = 0.259282 loss)
I0428 20:07:20.792618 31076 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:20.823024 31082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:20.882028 31076 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:20.882896 31076 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:20.883730 31076 solver.cpp:311] Iteration 1000, loss = 0.119983
I0428 20:07:20.883764 31076 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:20.949298 31083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:20.951429 31076 solver.cpp:398]     Test net output #0: accuracy = 0.9659
I0428 20:07:20.951468 31076 solver.cpp:398]     Test net output #1: loss = 0.109356 (* 1 = 0.109356 loss)
I0428 20:07:20.951477 31076 solver.cpp:316] Optimization Done.
I0428 20:07:20.951480 31076 caffe.cpp:259] Optimization Done.
