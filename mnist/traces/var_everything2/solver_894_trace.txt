I0428 20:01:05.967653 29651 caffe.cpp:218] Using GPUs 0
I0428 20:01:06.005280 29651 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:06.463639 29651 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test894.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:06.463768 29651 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test894.prototxt
I0428 20:01:06.464114 29651 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:06.464130 29651 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:06.464212 29651 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:06.464290 29651 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:06.464368 29651 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:06.464387 29651 net.cpp:86] Creating Layer mnist
I0428 20:01:06.464395 29651 net.cpp:382] mnist -> data
I0428 20:01:06.464412 29651 net.cpp:382] mnist -> label
I0428 20:01:06.465443 29651 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:06.467797 29651 net.cpp:124] Setting up mnist
I0428 20:01:06.467810 29651 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:06.467815 29651 net.cpp:131] Top shape: 64 (64)
I0428 20:01:06.467818 29651 net.cpp:139] Memory required for data: 200960
I0428 20:01:06.467823 29651 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:06.467864 29651 net.cpp:86] Creating Layer conv0
I0428 20:01:06.467881 29651 net.cpp:408] conv0 <- data
I0428 20:01:06.467892 29651 net.cpp:382] conv0 -> conv0
I0428 20:01:06.699764 29651 net.cpp:124] Setting up conv0
I0428 20:01:06.699790 29651 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:06.699795 29651 net.cpp:139] Memory required for data: 1675520
I0428 20:01:06.699810 29651 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:06.699821 29651 net.cpp:86] Creating Layer pool0
I0428 20:01:06.699826 29651 net.cpp:408] pool0 <- conv0
I0428 20:01:06.699831 29651 net.cpp:382] pool0 -> pool0
I0428 20:01:06.699892 29651 net.cpp:124] Setting up pool0
I0428 20:01:06.699898 29651 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:06.699900 29651 net.cpp:139] Memory required for data: 2044160
I0428 20:01:06.699903 29651 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:06.699913 29651 net.cpp:86] Creating Layer conv1
I0428 20:01:06.699918 29651 net.cpp:408] conv1 <- pool0
I0428 20:01:06.699921 29651 net.cpp:382] conv1 -> conv1
I0428 20:01:06.702713 29651 net.cpp:124] Setting up conv1
I0428 20:01:06.702744 29651 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:01:06.702746 29651 net.cpp:139] Memory required for data: 2453760
I0428 20:01:06.702756 29651 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:06.702764 29651 net.cpp:86] Creating Layer pool1
I0428 20:01:06.702769 29651 net.cpp:408] pool1 <- conv1
I0428 20:01:06.702774 29651 net.cpp:382] pool1 -> pool1
I0428 20:01:06.702812 29651 net.cpp:124] Setting up pool1
I0428 20:01:06.702818 29651 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:01:06.702821 29651 net.cpp:139] Memory required for data: 2556160
I0428 20:01:06.702823 29651 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:06.702836 29651 net.cpp:86] Creating Layer ip1
I0428 20:01:06.702838 29651 net.cpp:408] ip1 <- pool1
I0428 20:01:06.702842 29651 net.cpp:382] ip1 -> ip1
I0428 20:01:06.703058 29651 net.cpp:124] Setting up ip1
I0428 20:01:06.703065 29651 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:06.703068 29651 net.cpp:139] Memory required for data: 2568960
I0428 20:01:06.703075 29651 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:06.703080 29651 net.cpp:86] Creating Layer relu1
I0428 20:01:06.703083 29651 net.cpp:408] relu1 <- ip1
I0428 20:01:06.703088 29651 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:06.703243 29651 net.cpp:124] Setting up relu1
I0428 20:01:06.703251 29651 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:06.703254 29651 net.cpp:139] Memory required for data: 2581760
I0428 20:01:06.703258 29651 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:06.703264 29651 net.cpp:86] Creating Layer ip2
I0428 20:01:06.703268 29651 net.cpp:408] ip2 <- ip1
I0428 20:01:06.703271 29651 net.cpp:382] ip2 -> ip2
I0428 20:01:06.704264 29651 net.cpp:124] Setting up ip2
I0428 20:01:06.704277 29651 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:06.704295 29651 net.cpp:139] Memory required for data: 2594560
I0428 20:01:06.704301 29651 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:06.704308 29651 net.cpp:86] Creating Layer relu2
I0428 20:01:06.704311 29651 net.cpp:408] relu2 <- ip2
I0428 20:01:06.704318 29651 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:06.705152 29651 net.cpp:124] Setting up relu2
I0428 20:01:06.705164 29651 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:06.705168 29651 net.cpp:139] Memory required for data: 2607360
I0428 20:01:06.705171 29651 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:06.705179 29651 net.cpp:86] Creating Layer ip3
I0428 20:01:06.705183 29651 net.cpp:408] ip3 <- ip2
I0428 20:01:06.705188 29651 net.cpp:382] ip3 -> ip3
I0428 20:01:06.705293 29651 net.cpp:124] Setting up ip3
I0428 20:01:06.705302 29651 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:06.705305 29651 net.cpp:139] Memory required for data: 2609920
I0428 20:01:06.705327 29651 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:06.705334 29651 net.cpp:86] Creating Layer relu3
I0428 20:01:06.705338 29651 net.cpp:408] relu3 <- ip3
I0428 20:01:06.705340 29651 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:06.705507 29651 net.cpp:124] Setting up relu3
I0428 20:01:06.705515 29651 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:06.705518 29651 net.cpp:139] Memory required for data: 2612480
I0428 20:01:06.705521 29651 layer_factory.hpp:77] Creating layer loss
I0428 20:01:06.705529 29651 net.cpp:86] Creating Layer loss
I0428 20:01:06.705533 29651 net.cpp:408] loss <- ip3
I0428 20:01:06.705536 29651 net.cpp:408] loss <- label
I0428 20:01:06.705543 29651 net.cpp:382] loss -> loss
I0428 20:01:06.705559 29651 layer_factory.hpp:77] Creating layer loss
I0428 20:01:06.705799 29651 net.cpp:124] Setting up loss
I0428 20:01:06.705808 29651 net.cpp:131] Top shape: (1)
I0428 20:01:06.705811 29651 net.cpp:134]     with loss weight 1
I0428 20:01:06.705824 29651 net.cpp:139] Memory required for data: 2612484
I0428 20:01:06.705828 29651 net.cpp:200] loss needs backward computation.
I0428 20:01:06.705832 29651 net.cpp:200] relu3 needs backward computation.
I0428 20:01:06.705834 29651 net.cpp:200] ip3 needs backward computation.
I0428 20:01:06.705837 29651 net.cpp:200] relu2 needs backward computation.
I0428 20:01:06.705840 29651 net.cpp:200] ip2 needs backward computation.
I0428 20:01:06.705842 29651 net.cpp:200] relu1 needs backward computation.
I0428 20:01:06.705845 29651 net.cpp:200] ip1 needs backward computation.
I0428 20:01:06.705848 29651 net.cpp:200] pool1 needs backward computation.
I0428 20:01:06.705852 29651 net.cpp:200] conv1 needs backward computation.
I0428 20:01:06.705854 29651 net.cpp:200] pool0 needs backward computation.
I0428 20:01:06.705857 29651 net.cpp:200] conv0 needs backward computation.
I0428 20:01:06.705860 29651 net.cpp:202] mnist does not need backward computation.
I0428 20:01:06.705863 29651 net.cpp:244] This network produces output loss
I0428 20:01:06.705873 29651 net.cpp:257] Network initialization done.
I0428 20:01:06.706264 29651 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test894.prototxt
I0428 20:01:06.706306 29651 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:06.706409 29651 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:06.706488 29651 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:06.706531 29651 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:06.706542 29651 net.cpp:86] Creating Layer mnist
I0428 20:01:06.706547 29651 net.cpp:382] mnist -> data
I0428 20:01:06.706554 29651 net.cpp:382] mnist -> label
I0428 20:01:06.706636 29651 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:06.708492 29651 net.cpp:124] Setting up mnist
I0428 20:01:06.708504 29651 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:06.708509 29651 net.cpp:131] Top shape: 100 (100)
I0428 20:01:06.708513 29651 net.cpp:139] Memory required for data: 314000
I0428 20:01:06.708515 29651 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:06.708552 29651 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:06.708556 29651 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:06.708582 29651 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:06.708588 29651 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:06.708643 29651 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:06.708657 29651 net.cpp:131] Top shape: 100 (100)
I0428 20:01:06.708662 29651 net.cpp:131] Top shape: 100 (100)
I0428 20:01:06.708664 29651 net.cpp:139] Memory required for data: 314800
I0428 20:01:06.708667 29651 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:06.708676 29651 net.cpp:86] Creating Layer conv0
I0428 20:01:06.708679 29651 net.cpp:408] conv0 <- data
I0428 20:01:06.708684 29651 net.cpp:382] conv0 -> conv0
I0428 20:01:06.710551 29651 net.cpp:124] Setting up conv0
I0428 20:01:06.710563 29651 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:06.710567 29651 net.cpp:139] Memory required for data: 2618800
I0428 20:01:06.710577 29651 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:06.710583 29651 net.cpp:86] Creating Layer pool0
I0428 20:01:06.710587 29651 net.cpp:408] pool0 <- conv0
I0428 20:01:06.710592 29651 net.cpp:382] pool0 -> pool0
I0428 20:01:06.710628 29651 net.cpp:124] Setting up pool0
I0428 20:01:06.710633 29651 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:06.710635 29651 net.cpp:139] Memory required for data: 3194800
I0428 20:01:06.710638 29651 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:06.710646 29651 net.cpp:86] Creating Layer conv1
I0428 20:01:06.710649 29651 net.cpp:408] conv1 <- pool0
I0428 20:01:06.710655 29651 net.cpp:382] conv1 -> conv1
I0428 20:01:06.712832 29651 net.cpp:124] Setting up conv1
I0428 20:01:06.712846 29651 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:01:06.712851 29651 net.cpp:139] Memory required for data: 3834800
I0428 20:01:06.712860 29651 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:06.712882 29651 net.cpp:86] Creating Layer pool1
I0428 20:01:06.712885 29651 net.cpp:408] pool1 <- conv1
I0428 20:01:06.712890 29651 net.cpp:382] pool1 -> pool1
I0428 20:01:06.712930 29651 net.cpp:124] Setting up pool1
I0428 20:01:06.712936 29651 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:01:06.712939 29651 net.cpp:139] Memory required for data: 3994800
I0428 20:01:06.712942 29651 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:06.712949 29651 net.cpp:86] Creating Layer ip1
I0428 20:01:06.712959 29651 net.cpp:408] ip1 <- pool1
I0428 20:01:06.712965 29651 net.cpp:382] ip1 -> ip1
I0428 20:01:06.713212 29651 net.cpp:124] Setting up ip1
I0428 20:01:06.713220 29651 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:06.713233 29651 net.cpp:139] Memory required for data: 4014800
I0428 20:01:06.713240 29651 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:06.713248 29651 net.cpp:86] Creating Layer relu1
I0428 20:01:06.713250 29651 net.cpp:408] relu1 <- ip1
I0428 20:01:06.713255 29651 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:06.713485 29651 net.cpp:124] Setting up relu1
I0428 20:01:06.713495 29651 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:06.713513 29651 net.cpp:139] Memory required for data: 4034800
I0428 20:01:06.713516 29651 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:06.713523 29651 net.cpp:86] Creating Layer ip2
I0428 20:01:06.713531 29651 net.cpp:408] ip2 <- ip1
I0428 20:01:06.713537 29651 net.cpp:382] ip2 -> ip2
I0428 20:01:06.713654 29651 net.cpp:124] Setting up ip2
I0428 20:01:06.713660 29651 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:06.713663 29651 net.cpp:139] Memory required for data: 4054800
I0428 20:01:06.713670 29651 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:06.713675 29651 net.cpp:86] Creating Layer relu2
I0428 20:01:06.713678 29651 net.cpp:408] relu2 <- ip2
I0428 20:01:06.713682 29651 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:06.713843 29651 net.cpp:124] Setting up relu2
I0428 20:01:06.713851 29651 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:06.713855 29651 net.cpp:139] Memory required for data: 4074800
I0428 20:01:06.713857 29651 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:06.713865 29651 net.cpp:86] Creating Layer ip3
I0428 20:01:06.713870 29651 net.cpp:408] ip3 <- ip2
I0428 20:01:06.713876 29651 net.cpp:382] ip3 -> ip3
I0428 20:01:06.713994 29651 net.cpp:124] Setting up ip3
I0428 20:01:06.714004 29651 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:06.714006 29651 net.cpp:139] Memory required for data: 4078800
I0428 20:01:06.714013 29651 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:06.714018 29651 net.cpp:86] Creating Layer relu3
I0428 20:01:06.714022 29651 net.cpp:408] relu3 <- ip3
I0428 20:01:06.714035 29651 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:06.714848 29651 net.cpp:124] Setting up relu3
I0428 20:01:06.714860 29651 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:06.714864 29651 net.cpp:139] Memory required for data: 4082800
I0428 20:01:06.714867 29651 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:06.714872 29651 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:06.714875 29651 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:06.714897 29651 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:06.714920 29651 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:06.715026 29651 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:06.715039 29651 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:06.715050 29651 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:06.715054 29651 net.cpp:139] Memory required for data: 4090800
I0428 20:01:06.715056 29651 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:06.715062 29651 net.cpp:86] Creating Layer accuracy
I0428 20:01:06.715066 29651 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:06.715070 29651 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:06.715075 29651 net.cpp:382] accuracy -> accuracy
I0428 20:01:06.715093 29651 net.cpp:124] Setting up accuracy
I0428 20:01:06.715104 29651 net.cpp:131] Top shape: (1)
I0428 20:01:06.715107 29651 net.cpp:139] Memory required for data: 4090804
I0428 20:01:06.715111 29651 layer_factory.hpp:77] Creating layer loss
I0428 20:01:06.715119 29651 net.cpp:86] Creating Layer loss
I0428 20:01:06.715126 29651 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:06.715131 29651 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:06.715140 29651 net.cpp:382] loss -> loss
I0428 20:01:06.715147 29651 layer_factory.hpp:77] Creating layer loss
I0428 20:01:06.715412 29651 net.cpp:124] Setting up loss
I0428 20:01:06.715423 29651 net.cpp:131] Top shape: (1)
I0428 20:01:06.715427 29651 net.cpp:134]     with loss weight 1
I0428 20:01:06.715443 29651 net.cpp:139] Memory required for data: 4090808
I0428 20:01:06.715447 29651 net.cpp:200] loss needs backward computation.
I0428 20:01:06.715451 29651 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:06.715456 29651 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:06.715459 29651 net.cpp:200] relu3 needs backward computation.
I0428 20:01:06.715462 29651 net.cpp:200] ip3 needs backward computation.
I0428 20:01:06.715466 29651 net.cpp:200] relu2 needs backward computation.
I0428 20:01:06.715468 29651 net.cpp:200] ip2 needs backward computation.
I0428 20:01:06.715472 29651 net.cpp:200] relu1 needs backward computation.
I0428 20:01:06.715474 29651 net.cpp:200] ip1 needs backward computation.
I0428 20:01:06.715478 29651 net.cpp:200] pool1 needs backward computation.
I0428 20:01:06.715481 29651 net.cpp:200] conv1 needs backward computation.
I0428 20:01:06.715486 29651 net.cpp:200] pool0 needs backward computation.
I0428 20:01:06.715503 29651 net.cpp:200] conv0 needs backward computation.
I0428 20:01:06.715508 29651 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:06.715528 29651 net.cpp:202] mnist does not need backward computation.
I0428 20:01:06.715529 29651 net.cpp:244] This network produces output accuracy
I0428 20:01:06.715533 29651 net.cpp:244] This network produces output loss
I0428 20:01:06.715544 29651 net.cpp:257] Network initialization done.
I0428 20:01:06.715600 29651 solver.cpp:56] Solver scaffolding done.
I0428 20:01:06.715924 29651 caffe.cpp:248] Starting Optimization
I0428 20:01:06.715930 29651 solver.cpp:273] Solving LeNet
I0428 20:01:06.715934 29651 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:06.716712 29651 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:06.720633 29651 blocking_queue.cpp:49] Waiting for data
I0428 20:01:06.790666 29658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:06.791241 29651 solver.cpp:398]     Test net output #0: accuracy = 0.0969
I0428 20:01:06.791263 29651 solver.cpp:398]     Test net output #1: loss = 2.31813 (* 1 = 2.31813 loss)
I0428 20:01:06.793745 29651 solver.cpp:219] Iteration 0 (-1.62257e-31 iter/s, 0.0777861s/100 iters), loss = 2.31051
I0428 20:01:06.793771 29651 solver.cpp:238]     Train net output #0: loss = 2.31051 (* 1 = 2.31051 loss)
I0428 20:01:06.793781 29651 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:06.893481 29651 solver.cpp:219] Iteration 100 (1003.05 iter/s, 0.0996957s/100 iters), loss = 1.11157
I0428 20:01:06.893507 29651 solver.cpp:238]     Train net output #0: loss = 1.11157 (* 1 = 1.11157 loss)
I0428 20:01:06.893513 29651 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:06.982517 29651 solver.cpp:219] Iteration 200 (1123.57 iter/s, 0.089002s/100 iters), loss = 0.503596
I0428 20:01:06.982558 29651 solver.cpp:238]     Train net output #0: loss = 0.503596 (* 1 = 0.503596 loss)
I0428 20:01:06.982563 29651 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:07.071020 29651 solver.cpp:219] Iteration 300 (1130.33 iter/s, 0.0884695s/100 iters), loss = 0.623115
I0428 20:01:07.071061 29651 solver.cpp:238]     Train net output #0: loss = 0.623115 (* 1 = 0.623115 loss)
I0428 20:01:07.071068 29651 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:07.158720 29651 solver.cpp:219] Iteration 400 (1140.7 iter/s, 0.0876657s/100 iters), loss = 0.13132
I0428 20:01:07.158761 29651 solver.cpp:238]     Train net output #0: loss = 0.13132 (* 1 = 0.13132 loss)
I0428 20:01:07.158766 29651 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:07.246892 29651 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:07.322677 29658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:07.323215 29651 solver.cpp:398]     Test net output #0: accuracy = 0.9605
I0428 20:01:07.323235 29651 solver.cpp:398]     Test net output #1: loss = 0.125232 (* 1 = 0.125232 loss)
I0428 20:01:07.324211 29651 solver.cpp:219] Iteration 500 (604.398 iter/s, 0.165454s/100 iters), loss = 0.16873
I0428 20:01:07.324268 29651 solver.cpp:238]     Train net output #0: loss = 0.16873 (* 1 = 0.16873 loss)
I0428 20:01:07.324281 29651 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:07.422631 29651 solver.cpp:219] Iteration 600 (1016.75 iter/s, 0.0983526s/100 iters), loss = 0.0714105
I0428 20:01:07.422654 29651 solver.cpp:238]     Train net output #0: loss = 0.0714105 (* 1 = 0.0714105 loss)
I0428 20:01:07.422677 29651 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:07.517573 29651 solver.cpp:219] Iteration 700 (1053.65 iter/s, 0.0949084s/100 iters), loss = 0.150549
I0428 20:01:07.517598 29651 solver.cpp:238]     Train net output #0: loss = 0.150549 (* 1 = 0.150549 loss)
I0428 20:01:07.517604 29651 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:07.611079 29651 solver.cpp:219] Iteration 800 (1069.84 iter/s, 0.0934717s/100 iters), loss = 0.248271
I0428 20:01:07.611104 29651 solver.cpp:238]     Train net output #0: loss = 0.248271 (* 1 = 0.248271 loss)
I0428 20:01:07.611110 29651 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:07.706280 29651 solver.cpp:219] Iteration 900 (1050.79 iter/s, 0.0951665s/100 iters), loss = 0.177754
I0428 20:01:07.706321 29651 solver.cpp:238]     Train net output #0: loss = 0.177754 (* 1 = 0.177754 loss)
I0428 20:01:07.706327 29651 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:07.737900 29657 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:07.797861 29651 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:07.799064 29651 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:07.799657 29651 solver.cpp:311] Iteration 1000, loss = 0.170923
I0428 20:01:07.799671 29651 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:07.871906 29658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:07.872442 29651 solver.cpp:398]     Test net output #0: accuracy = 0.9757
I0428 20:01:07.872462 29651 solver.cpp:398]     Test net output #1: loss = 0.0752746 (* 1 = 0.0752746 loss)
I0428 20:01:07.872467 29651 solver.cpp:316] Optimization Done.
I0428 20:01:07.872469 29651 caffe.cpp:259] Optimization Done.
