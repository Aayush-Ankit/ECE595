I0428 20:05:46.556252 30691 caffe.cpp:218] Using GPUs 0
I0428 20:05:46.595160 30691 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:47.055224 30691 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1009.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:47.055373 30691 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1009.prototxt
I0428 20:05:47.055718 30691 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:47.055734 30691 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:47.055815 30691 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:47.055879 30691 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:47.055958 30691 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:47.055976 30691 net.cpp:86] Creating Layer mnist
I0428 20:05:47.055982 30691 net.cpp:382] mnist -> data
I0428 20:05:47.056001 30691 net.cpp:382] mnist -> label
I0428 20:05:47.056933 30691 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:47.059088 30691 net.cpp:124] Setting up mnist
I0428 20:05:47.059103 30691 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:47.059109 30691 net.cpp:131] Top shape: 64 (64)
I0428 20:05:47.059111 30691 net.cpp:139] Memory required for data: 200960
I0428 20:05:47.059118 30691 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:47.059136 30691 net.cpp:86] Creating Layer conv0
I0428 20:05:47.059154 30691 net.cpp:408] conv0 <- data
I0428 20:05:47.059164 30691 net.cpp:382] conv0 -> conv0
I0428 20:05:47.292857 30691 net.cpp:124] Setting up conv0
I0428 20:05:47.292914 30691 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:47.292918 30691 net.cpp:139] Memory required for data: 3887360
I0428 20:05:47.292933 30691 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:47.292951 30691 net.cpp:86] Creating Layer pool0
I0428 20:05:47.292955 30691 net.cpp:408] pool0 <- conv0
I0428 20:05:47.292960 30691 net.cpp:382] pool0 -> pool0
I0428 20:05:47.293020 30691 net.cpp:124] Setting up pool0
I0428 20:05:47.293027 30691 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:47.293030 30691 net.cpp:139] Memory required for data: 4808960
I0428 20:05:47.293033 30691 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:47.293045 30691 net.cpp:86] Creating Layer conv1
I0428 20:05:47.293051 30691 net.cpp:408] conv1 <- pool0
I0428 20:05:47.293071 30691 net.cpp:382] conv1 -> conv1
I0428 20:05:47.295745 30691 net.cpp:124] Setting up conv1
I0428 20:05:47.295759 30691 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:47.295763 30691 net.cpp:139] Memory required for data: 4841728
I0428 20:05:47.295788 30691 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:47.295794 30691 net.cpp:86] Creating Layer pool1
I0428 20:05:47.295799 30691 net.cpp:408] pool1 <- conv1
I0428 20:05:47.295804 30691 net.cpp:382] pool1 -> pool1
I0428 20:05:47.295837 30691 net.cpp:124] Setting up pool1
I0428 20:05:47.295861 30691 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:47.295863 30691 net.cpp:139] Memory required for data: 4849920
I0428 20:05:47.295866 30691 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:47.295873 30691 net.cpp:86] Creating Layer ip1
I0428 20:05:47.295876 30691 net.cpp:408] ip1 <- pool1
I0428 20:05:47.295881 30691 net.cpp:382] ip1 -> ip1
I0428 20:05:47.296001 30691 net.cpp:124] Setting up ip1
I0428 20:05:47.296010 30691 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:47.296012 30691 net.cpp:139] Memory required for data: 4862720
I0428 20:05:47.296020 30691 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:47.296030 30691 net.cpp:86] Creating Layer relu1
I0428 20:05:47.296032 30691 net.cpp:408] relu1 <- ip1
I0428 20:05:47.296037 30691 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:47.296212 30691 net.cpp:124] Setting up relu1
I0428 20:05:47.296229 30691 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:47.296233 30691 net.cpp:139] Memory required for data: 4875520
I0428 20:05:47.296236 30691 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:47.296242 30691 net.cpp:86] Creating Layer ip2
I0428 20:05:47.296245 30691 net.cpp:408] ip2 <- ip1
I0428 20:05:47.296250 30691 net.cpp:382] ip2 -> ip2
I0428 20:05:47.296358 30691 net.cpp:124] Setting up ip2
I0428 20:05:47.296365 30691 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:47.296368 30691 net.cpp:139] Memory required for data: 4881920
I0428 20:05:47.296373 30691 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:47.296378 30691 net.cpp:86] Creating Layer relu2
I0428 20:05:47.296381 30691 net.cpp:408] relu2 <- ip2
I0428 20:05:47.296386 30691 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:47.297121 30691 net.cpp:124] Setting up relu2
I0428 20:05:47.297134 30691 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:47.297138 30691 net.cpp:139] Memory required for data: 4888320
I0428 20:05:47.297142 30691 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:47.297164 30691 net.cpp:86] Creating Layer ip3
I0428 20:05:47.297169 30691 net.cpp:408] ip3 <- ip2
I0428 20:05:47.297194 30691 net.cpp:382] ip3 -> ip3
I0428 20:05:47.297304 30691 net.cpp:124] Setting up ip3
I0428 20:05:47.297312 30691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:47.297317 30691 net.cpp:139] Memory required for data: 4890880
I0428 20:05:47.297323 30691 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:47.297328 30691 net.cpp:86] Creating Layer relu3
I0428 20:05:47.297333 30691 net.cpp:408] relu3 <- ip3
I0428 20:05:47.297343 30691 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:47.297515 30691 net.cpp:124] Setting up relu3
I0428 20:05:47.297525 30691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:47.297528 30691 net.cpp:139] Memory required for data: 4893440
I0428 20:05:47.297533 30691 layer_factory.hpp:77] Creating layer loss
I0428 20:05:47.297538 30691 net.cpp:86] Creating Layer loss
I0428 20:05:47.297541 30691 net.cpp:408] loss <- ip3
I0428 20:05:47.297545 30691 net.cpp:408] loss <- label
I0428 20:05:47.297551 30691 net.cpp:382] loss -> loss
I0428 20:05:47.297565 30691 layer_factory.hpp:77] Creating layer loss
I0428 20:05:47.297773 30691 net.cpp:124] Setting up loss
I0428 20:05:47.297782 30691 net.cpp:131] Top shape: (1)
I0428 20:05:47.297786 30691 net.cpp:134]     with loss weight 1
I0428 20:05:47.297801 30691 net.cpp:139] Memory required for data: 4893444
I0428 20:05:47.297804 30691 net.cpp:200] loss needs backward computation.
I0428 20:05:47.297808 30691 net.cpp:200] relu3 needs backward computation.
I0428 20:05:47.297811 30691 net.cpp:200] ip3 needs backward computation.
I0428 20:05:47.297814 30691 net.cpp:200] relu2 needs backward computation.
I0428 20:05:47.297817 30691 net.cpp:200] ip2 needs backward computation.
I0428 20:05:47.297821 30691 net.cpp:200] relu1 needs backward computation.
I0428 20:05:47.297822 30691 net.cpp:200] ip1 needs backward computation.
I0428 20:05:47.297825 30691 net.cpp:200] pool1 needs backward computation.
I0428 20:05:47.297828 30691 net.cpp:200] conv1 needs backward computation.
I0428 20:05:47.297832 30691 net.cpp:200] pool0 needs backward computation.
I0428 20:05:47.297834 30691 net.cpp:200] conv0 needs backward computation.
I0428 20:05:47.297837 30691 net.cpp:202] mnist does not need backward computation.
I0428 20:05:47.297840 30691 net.cpp:244] This network produces output loss
I0428 20:05:47.297848 30691 net.cpp:257] Network initialization done.
I0428 20:05:47.298193 30691 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1009.prototxt
I0428 20:05:47.298219 30691 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:47.298307 30691 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:47.298382 30691 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:47.298422 30691 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:47.298437 30691 net.cpp:86] Creating Layer mnist
I0428 20:05:47.298444 30691 net.cpp:382] mnist -> data
I0428 20:05:47.298467 30691 net.cpp:382] mnist -> label
I0428 20:05:47.298548 30691 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:47.300403 30691 net.cpp:124] Setting up mnist
I0428 20:05:47.300446 30691 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:47.300451 30691 net.cpp:131] Top shape: 100 (100)
I0428 20:05:47.300469 30691 net.cpp:139] Memory required for data: 314000
I0428 20:05:47.300473 30691 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:47.300480 30691 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:47.300483 30691 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:47.300488 30691 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:47.300494 30691 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:47.300537 30691 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:47.300544 30691 net.cpp:131] Top shape: 100 (100)
I0428 20:05:47.300549 30691 net.cpp:131] Top shape: 100 (100)
I0428 20:05:47.300551 30691 net.cpp:139] Memory required for data: 314800
I0428 20:05:47.300554 30691 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:47.300562 30691 net.cpp:86] Creating Layer conv0
I0428 20:05:47.300566 30691 net.cpp:408] conv0 <- data
I0428 20:05:47.300571 30691 net.cpp:382] conv0 -> conv0
I0428 20:05:47.302359 30691 net.cpp:124] Setting up conv0
I0428 20:05:47.302390 30691 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:47.302394 30691 net.cpp:139] Memory required for data: 6074800
I0428 20:05:47.302404 30691 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:47.302412 30691 net.cpp:86] Creating Layer pool0
I0428 20:05:47.302415 30691 net.cpp:408] pool0 <- conv0
I0428 20:05:47.302420 30691 net.cpp:382] pool0 -> pool0
I0428 20:05:47.302474 30691 net.cpp:124] Setting up pool0
I0428 20:05:47.302481 30691 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:47.302485 30691 net.cpp:139] Memory required for data: 7514800
I0428 20:05:47.302489 30691 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:47.302497 30691 net.cpp:86] Creating Layer conv1
I0428 20:05:47.302503 30691 net.cpp:408] conv1 <- pool0
I0428 20:05:47.302510 30691 net.cpp:382] conv1 -> conv1
I0428 20:05:47.304711 30691 net.cpp:124] Setting up conv1
I0428 20:05:47.304740 30691 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:47.304745 30691 net.cpp:139] Memory required for data: 7566000
I0428 20:05:47.304754 30691 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:47.304761 30691 net.cpp:86] Creating Layer pool1
I0428 20:05:47.304765 30691 net.cpp:408] pool1 <- conv1
I0428 20:05:47.304770 30691 net.cpp:382] pool1 -> pool1
I0428 20:05:47.304829 30691 net.cpp:124] Setting up pool1
I0428 20:05:47.304839 30691 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:47.304843 30691 net.cpp:139] Memory required for data: 7578800
I0428 20:05:47.304848 30691 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:47.304854 30691 net.cpp:86] Creating Layer ip1
I0428 20:05:47.304857 30691 net.cpp:408] ip1 <- pool1
I0428 20:05:47.304863 30691 net.cpp:382] ip1 -> ip1
I0428 20:05:47.304983 30691 net.cpp:124] Setting up ip1
I0428 20:05:47.304991 30691 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:47.305006 30691 net.cpp:139] Memory required for data: 7598800
I0428 20:05:47.305013 30691 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:47.305021 30691 net.cpp:86] Creating Layer relu1
I0428 20:05:47.305024 30691 net.cpp:408] relu1 <- ip1
I0428 20:05:47.305028 30691 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:47.305205 30691 net.cpp:124] Setting up relu1
I0428 20:05:47.305214 30691 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:47.305218 30691 net.cpp:139] Memory required for data: 7618800
I0428 20:05:47.305222 30691 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:47.305229 30691 net.cpp:86] Creating Layer ip2
I0428 20:05:47.305233 30691 net.cpp:408] ip2 <- ip1
I0428 20:05:47.305238 30691 net.cpp:382] ip2 -> ip2
I0428 20:05:47.305351 30691 net.cpp:124] Setting up ip2
I0428 20:05:47.305358 30691 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:47.305362 30691 net.cpp:139] Memory required for data: 7628800
I0428 20:05:47.305367 30691 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:47.305371 30691 net.cpp:86] Creating Layer relu2
I0428 20:05:47.305374 30691 net.cpp:408] relu2 <- ip2
I0428 20:05:47.305388 30691 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:47.305544 30691 net.cpp:124] Setting up relu2
I0428 20:05:47.305553 30691 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:47.305557 30691 net.cpp:139] Memory required for data: 7638800
I0428 20:05:47.305560 30691 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:47.305567 30691 net.cpp:86] Creating Layer ip3
I0428 20:05:47.305569 30691 net.cpp:408] ip3 <- ip2
I0428 20:05:47.305574 30691 net.cpp:382] ip3 -> ip3
I0428 20:05:47.305681 30691 net.cpp:124] Setting up ip3
I0428 20:05:47.305690 30691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:47.305693 30691 net.cpp:139] Memory required for data: 7642800
I0428 20:05:47.305701 30691 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:47.305708 30691 net.cpp:86] Creating Layer relu3
I0428 20:05:47.305712 30691 net.cpp:408] relu3 <- ip3
I0428 20:05:47.305716 30691 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:47.306550 30691 net.cpp:124] Setting up relu3
I0428 20:05:47.306577 30691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:47.306581 30691 net.cpp:139] Memory required for data: 7646800
I0428 20:05:47.306584 30691 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:47.306591 30691 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:47.306596 30691 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:47.306601 30691 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:47.306607 30691 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:47.306664 30691 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:47.306671 30691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:47.306675 30691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:47.306679 30691 net.cpp:139] Memory required for data: 7654800
I0428 20:05:47.306681 30691 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:47.306701 30691 net.cpp:86] Creating Layer accuracy
I0428 20:05:47.306704 30691 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:47.306710 30691 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:47.306713 30691 net.cpp:382] accuracy -> accuracy
I0428 20:05:47.306743 30691 net.cpp:124] Setting up accuracy
I0428 20:05:47.306748 30691 net.cpp:131] Top shape: (1)
I0428 20:05:47.306751 30691 net.cpp:139] Memory required for data: 7654804
I0428 20:05:47.306754 30691 layer_factory.hpp:77] Creating layer loss
I0428 20:05:47.306758 30691 net.cpp:86] Creating Layer loss
I0428 20:05:47.306762 30691 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:47.306766 30691 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:47.306771 30691 net.cpp:382] loss -> loss
I0428 20:05:47.306777 30691 layer_factory.hpp:77] Creating layer loss
I0428 20:05:47.307000 30691 net.cpp:124] Setting up loss
I0428 20:05:47.307025 30691 net.cpp:131] Top shape: (1)
I0428 20:05:47.307029 30691 net.cpp:134]     with loss weight 1
I0428 20:05:47.307039 30691 net.cpp:139] Memory required for data: 7654808
I0428 20:05:47.307070 30691 net.cpp:200] loss needs backward computation.
I0428 20:05:47.307075 30691 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:47.307080 30691 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:47.307083 30691 net.cpp:200] relu3 needs backward computation.
I0428 20:05:47.307086 30691 net.cpp:200] ip3 needs backward computation.
I0428 20:05:47.307090 30691 net.cpp:200] relu2 needs backward computation.
I0428 20:05:47.307092 30691 net.cpp:200] ip2 needs backward computation.
I0428 20:05:47.307096 30691 net.cpp:200] relu1 needs backward computation.
I0428 20:05:47.307099 30691 net.cpp:200] ip1 needs backward computation.
I0428 20:05:47.307102 30691 net.cpp:200] pool1 needs backward computation.
I0428 20:05:47.307106 30691 net.cpp:200] conv1 needs backward computation.
I0428 20:05:47.307108 30691 net.cpp:200] pool0 needs backward computation.
I0428 20:05:47.307112 30691 net.cpp:200] conv0 needs backward computation.
I0428 20:05:47.307126 30691 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:47.307130 30691 net.cpp:202] mnist does not need backward computation.
I0428 20:05:47.307133 30691 net.cpp:244] This network produces output accuracy
I0428 20:05:47.307137 30691 net.cpp:244] This network produces output loss
I0428 20:05:47.307148 30691 net.cpp:257] Network initialization done.
I0428 20:05:47.307191 30691 solver.cpp:56] Solver scaffolding done.
I0428 20:05:47.307570 30691 caffe.cpp:248] Starting Optimization
I0428 20:05:47.307577 30691 solver.cpp:273] Solving LeNet
I0428 20:05:47.307580 30691 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:47.308462 30691 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:47.313443 30691 blocking_queue.cpp:49] Waiting for data
I0428 20:05:47.380585 30723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:47.381224 30691 solver.cpp:398]     Test net output #0: accuracy = 0.0937
I0428 20:05:47.381258 30691 solver.cpp:398]     Test net output #1: loss = 2.32074 (* 1 = 2.32074 loss)
I0428 20:05:47.384448 30691 solver.cpp:219] Iteration 0 (-4.83062e-31 iter/s, 0.0768215s/100 iters), loss = 2.30846
I0428 20:05:47.384485 30691 solver.cpp:238]     Train net output #0: loss = 2.30846 (* 1 = 2.30846 loss)
I0428 20:05:47.384496 30691 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:47.474123 30691 solver.cpp:219] Iteration 100 (1115.74 iter/s, 0.0896266s/100 iters), loss = 0.409145
I0428 20:05:47.474162 30691 solver.cpp:238]     Train net output #0: loss = 0.409145 (* 1 = 0.409145 loss)
I0428 20:05:47.474169 30691 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:47.560971 30691 solver.cpp:219] Iteration 200 (1152 iter/s, 0.0868053s/100 iters), loss = 0.326549
I0428 20:05:47.561009 30691 solver.cpp:238]     Train net output #0: loss = 0.326549 (* 1 = 0.326549 loss)
I0428 20:05:47.561015 30691 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:47.649686 30691 solver.cpp:219] Iteration 300 (1127.62 iter/s, 0.0886826s/100 iters), loss = 0.192854
I0428 20:05:47.649724 30691 solver.cpp:238]     Train net output #0: loss = 0.192854 (* 1 = 0.192854 loss)
I0428 20:05:47.649730 30691 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:47.737711 30691 solver.cpp:219] Iteration 400 (1136.45 iter/s, 0.0879933s/100 iters), loss = 0.294313
I0428 20:05:47.737751 30691 solver.cpp:238]     Train net output #0: loss = 0.294313 (* 1 = 0.294313 loss)
I0428 20:05:47.737756 30691 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:47.825248 30691 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:47.879276 30723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:47.879940 30691 solver.cpp:398]     Test net output #0: accuracy = 0.935
I0428 20:05:47.879958 30691 solver.cpp:398]     Test net output #1: loss = 0.209143 (* 1 = 0.209143 loss)
I0428 20:05:47.880903 30691 solver.cpp:219] Iteration 500 (698.622 iter/s, 0.143139s/100 iters), loss = 0.285731
I0428 20:05:47.880946 30691 solver.cpp:238]     Train net output #0: loss = 0.285731 (* 1 = 0.285731 loss)
I0428 20:05:47.880956 30691 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:47.979090 30691 solver.cpp:219] Iteration 600 (1018.98 iter/s, 0.0981375s/100 iters), loss = 0.124688
I0428 20:05:47.979130 30691 solver.cpp:238]     Train net output #0: loss = 0.124688 (* 1 = 0.124688 loss)
I0428 20:05:47.979135 30691 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:48.070749 30691 solver.cpp:219] Iteration 700 (1091.4 iter/s, 0.0916255s/100 iters), loss = 0.226533
I0428 20:05:48.070787 30691 solver.cpp:238]     Train net output #0: loss = 0.226533 (* 1 = 0.226533 loss)
I0428 20:05:48.070794 30691 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:48.167101 30691 solver.cpp:219] Iteration 800 (1038.22 iter/s, 0.0963185s/100 iters), loss = 0.343491
I0428 20:05:48.167142 30691 solver.cpp:238]     Train net output #0: loss = 0.343491 (* 1 = 0.343491 loss)
I0428 20:05:48.167150 30691 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:48.255328 30691 solver.cpp:219] Iteration 900 (1133.89 iter/s, 0.0881918s/100 iters), loss = 0.224127
I0428 20:05:48.255368 30691 solver.cpp:238]     Train net output #0: loss = 0.224127 (* 1 = 0.224127 loss)
I0428 20:05:48.255374 30691 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:48.284939 30722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:48.341089 30691 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:48.341825 30691 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:48.342366 30691 solver.cpp:311] Iteration 1000, loss = 0.159512
I0428 20:05:48.342381 30691 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:48.417559 30723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:48.418157 30691 solver.cpp:398]     Test net output #0: accuracy = 0.9602
I0428 20:05:48.418191 30691 solver.cpp:398]     Test net output #1: loss = 0.133069 (* 1 = 0.133069 loss)
I0428 20:05:48.418196 30691 solver.cpp:316] Optimization Done.
I0428 20:05:48.418200 30691 caffe.cpp:259] Optimization Done.
