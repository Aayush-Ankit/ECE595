I0428 20:19:06.157399  1297 caffe.cpp:218] Using GPUs 0
I0428 20:19:06.190402  1297 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:06.683611  1297 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1334.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:06.683778  1297 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1334.prototxt
I0428 20:19:06.684094  1297 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:06.684110  1297 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:06.684185  1297 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:06.684249  1297 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:06.684332  1297 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:06.684352  1297 net.cpp:86] Creating Layer mnist
I0428 20:19:06.684360  1297 net.cpp:382] mnist -> data
I0428 20:19:06.684378  1297 net.cpp:382] mnist -> label
I0428 20:19:06.685395  1297 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:06.687737  1297 net.cpp:124] Setting up mnist
I0428 20:19:06.687768  1297 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:06.687788  1297 net.cpp:131] Top shape: 64 (64)
I0428 20:19:06.687793  1297 net.cpp:139] Memory required for data: 200960
I0428 20:19:06.687798  1297 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:06.687826  1297 net.cpp:86] Creating Layer conv0
I0428 20:19:06.687834  1297 net.cpp:408] conv0 <- data
I0428 20:19:06.687861  1297 net.cpp:382] conv0 -> conv0
I0428 20:19:06.929875  1297 net.cpp:124] Setting up conv0
I0428 20:19:06.929919  1297 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:06.929924  1297 net.cpp:139] Memory required for data: 7573760
I0428 20:19:06.929971  1297 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:06.930001  1297 net.cpp:86] Creating Layer pool0
I0428 20:19:06.930004  1297 net.cpp:408] pool0 <- conv0
I0428 20:19:06.930009  1297 net.cpp:382] pool0 -> pool0
I0428 20:19:06.930057  1297 net.cpp:124] Setting up pool0
I0428 20:19:06.930064  1297 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:06.930068  1297 net.cpp:139] Memory required for data: 9416960
I0428 20:19:06.930070  1297 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:06.930081  1297 net.cpp:86] Creating Layer conv1
I0428 20:19:06.930084  1297 net.cpp:408] conv1 <- pool0
I0428 20:19:06.930089  1297 net.cpp:382] conv1 -> conv1
I0428 20:19:06.932226  1297 net.cpp:124] Setting up conv1
I0428 20:19:06.932257  1297 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:06.932261  1297 net.cpp:139] Memory required for data: 9826560
I0428 20:19:06.932270  1297 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:06.932278  1297 net.cpp:86] Creating Layer pool1
I0428 20:19:06.932282  1297 net.cpp:408] pool1 <- conv1
I0428 20:19:06.932302  1297 net.cpp:382] pool1 -> pool1
I0428 20:19:06.932354  1297 net.cpp:124] Setting up pool1
I0428 20:19:06.932360  1297 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:06.932366  1297 net.cpp:139] Memory required for data: 9928960
I0428 20:19:06.932369  1297 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:06.932376  1297 net.cpp:86] Creating Layer ip1
I0428 20:19:06.932379  1297 net.cpp:408] ip1 <- pool1
I0428 20:19:06.932384  1297 net.cpp:382] ip1 -> ip1
I0428 20:19:06.933504  1297 net.cpp:124] Setting up ip1
I0428 20:19:06.933533  1297 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:06.933537  1297 net.cpp:139] Memory required for data: 9935360
I0428 20:19:06.933547  1297 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:06.933553  1297 net.cpp:86] Creating Layer relu1
I0428 20:19:06.933557  1297 net.cpp:408] relu1 <- ip1
I0428 20:19:06.933562  1297 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:06.933758  1297 net.cpp:124] Setting up relu1
I0428 20:19:06.933768  1297 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:06.933771  1297 net.cpp:139] Memory required for data: 9941760
I0428 20:19:06.933774  1297 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:06.933781  1297 net.cpp:86] Creating Layer ip2
I0428 20:19:06.933784  1297 net.cpp:408] ip2 <- ip1
I0428 20:19:06.933789  1297 net.cpp:382] ip2 -> ip2
I0428 20:19:06.933902  1297 net.cpp:124] Setting up ip2
I0428 20:19:06.933909  1297 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:06.933913  1297 net.cpp:139] Memory required for data: 9944320
I0428 20:19:06.933918  1297 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:06.933925  1297 net.cpp:86] Creating Layer relu2
I0428 20:19:06.933928  1297 net.cpp:408] relu2 <- ip2
I0428 20:19:06.933933  1297 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:06.934728  1297 net.cpp:124] Setting up relu2
I0428 20:19:06.934741  1297 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:06.934761  1297 net.cpp:139] Memory required for data: 9946880
I0428 20:19:06.934764  1297 layer_factory.hpp:77] Creating layer loss
I0428 20:19:06.934770  1297 net.cpp:86] Creating Layer loss
I0428 20:19:06.934774  1297 net.cpp:408] loss <- ip2
I0428 20:19:06.934779  1297 net.cpp:408] loss <- label
I0428 20:19:06.934784  1297 net.cpp:382] loss -> loss
I0428 20:19:06.934800  1297 layer_factory.hpp:77] Creating layer loss
I0428 20:19:06.935073  1297 net.cpp:124] Setting up loss
I0428 20:19:06.935084  1297 net.cpp:131] Top shape: (1)
I0428 20:19:06.935088  1297 net.cpp:134]     with loss weight 1
I0428 20:19:06.935103  1297 net.cpp:139] Memory required for data: 9946884
I0428 20:19:06.935106  1297 net.cpp:200] loss needs backward computation.
I0428 20:19:06.935111  1297 net.cpp:200] relu2 needs backward computation.
I0428 20:19:06.935114  1297 net.cpp:200] ip2 needs backward computation.
I0428 20:19:06.935117  1297 net.cpp:200] relu1 needs backward computation.
I0428 20:19:06.935120  1297 net.cpp:200] ip1 needs backward computation.
I0428 20:19:06.935134  1297 net.cpp:200] pool1 needs backward computation.
I0428 20:19:06.935138  1297 net.cpp:200] conv1 needs backward computation.
I0428 20:19:06.935142  1297 net.cpp:200] pool0 needs backward computation.
I0428 20:19:06.935145  1297 net.cpp:200] conv0 needs backward computation.
I0428 20:19:06.935149  1297 net.cpp:202] mnist does not need backward computation.
I0428 20:19:06.935153  1297 net.cpp:244] This network produces output loss
I0428 20:19:06.935161  1297 net.cpp:257] Network initialization done.
I0428 20:19:06.935516  1297 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1334.prototxt
I0428 20:19:06.935573  1297 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:06.935662  1297 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:19:06.935729  1297 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:06.935772  1297 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:06.935789  1297 net.cpp:86] Creating Layer mnist
I0428 20:19:06.935794  1297 net.cpp:382] mnist -> data
I0428 20:19:06.935802  1297 net.cpp:382] mnist -> label
I0428 20:19:06.935910  1297 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:06.938086  1297 net.cpp:124] Setting up mnist
I0428 20:19:06.938115  1297 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:06.938122  1297 net.cpp:131] Top shape: 100 (100)
I0428 20:19:06.938124  1297 net.cpp:139] Memory required for data: 314000
I0428 20:19:06.938127  1297 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:06.938136  1297 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:06.938139  1297 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:06.938146  1297 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:06.938153  1297 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:06.938252  1297 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:06.938261  1297 net.cpp:131] Top shape: 100 (100)
I0428 20:19:06.938266  1297 net.cpp:131] Top shape: 100 (100)
I0428 20:19:06.938268  1297 net.cpp:139] Memory required for data: 314800
I0428 20:19:06.938271  1297 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:06.938282  1297 net.cpp:86] Creating Layer conv0
I0428 20:19:06.938287  1297 net.cpp:408] conv0 <- data
I0428 20:19:06.938292  1297 net.cpp:382] conv0 -> conv0
I0428 20:19:06.940125  1297 net.cpp:124] Setting up conv0
I0428 20:19:06.940156  1297 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:06.940160  1297 net.cpp:139] Memory required for data: 11834800
I0428 20:19:06.940170  1297 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:06.940176  1297 net.cpp:86] Creating Layer pool0
I0428 20:19:06.940179  1297 net.cpp:408] pool0 <- conv0
I0428 20:19:06.940186  1297 net.cpp:382] pool0 -> pool0
I0428 20:19:06.940223  1297 net.cpp:124] Setting up pool0
I0428 20:19:06.940232  1297 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:06.940234  1297 net.cpp:139] Memory required for data: 14714800
I0428 20:19:06.940237  1297 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:06.940248  1297 net.cpp:86] Creating Layer conv1
I0428 20:19:06.940250  1297 net.cpp:408] conv1 <- pool0
I0428 20:19:06.940256  1297 net.cpp:382] conv1 -> conv1
I0428 20:19:06.942142  1297 net.cpp:124] Setting up conv1
I0428 20:19:06.942170  1297 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:06.942174  1297 net.cpp:139] Memory required for data: 15354800
I0428 20:19:06.942189  1297 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:06.942198  1297 net.cpp:86] Creating Layer pool1
I0428 20:19:06.942201  1297 net.cpp:408] pool1 <- conv1
I0428 20:19:06.942206  1297 net.cpp:382] pool1 -> pool1
I0428 20:19:06.942275  1297 net.cpp:124] Setting up pool1
I0428 20:19:06.942286  1297 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:06.942289  1297 net.cpp:139] Memory required for data: 15514800
I0428 20:19:06.942292  1297 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:06.942299  1297 net.cpp:86] Creating Layer ip1
I0428 20:19:06.942303  1297 net.cpp:408] ip1 <- pool1
I0428 20:19:06.942308  1297 net.cpp:382] ip1 -> ip1
I0428 20:19:06.942505  1297 net.cpp:124] Setting up ip1
I0428 20:19:06.942513  1297 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:06.942517  1297 net.cpp:139] Memory required for data: 15524800
I0428 20:19:06.942524  1297 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:06.942531  1297 net.cpp:86] Creating Layer relu1
I0428 20:19:06.942535  1297 net.cpp:408] relu1 <- ip1
I0428 20:19:06.942540  1297 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:06.942718  1297 net.cpp:124] Setting up relu1
I0428 20:19:06.942726  1297 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:06.942730  1297 net.cpp:139] Memory required for data: 15534800
I0428 20:19:06.942734  1297 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:06.942742  1297 net.cpp:86] Creating Layer ip2
I0428 20:19:06.942746  1297 net.cpp:408] ip2 <- ip1
I0428 20:19:06.942752  1297 net.cpp:382] ip2 -> ip2
I0428 20:19:06.942862  1297 net.cpp:124] Setting up ip2
I0428 20:19:06.942869  1297 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:06.942873  1297 net.cpp:139] Memory required for data: 15538800
I0428 20:19:06.942879  1297 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:06.942883  1297 net.cpp:86] Creating Layer relu2
I0428 20:19:06.942888  1297 net.cpp:408] relu2 <- ip2
I0428 20:19:06.942891  1297 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:06.943071  1297 net.cpp:124] Setting up relu2
I0428 20:19:06.943083  1297 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:06.943086  1297 net.cpp:139] Memory required for data: 15542800
I0428 20:19:06.943089  1297 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:19:06.943095  1297 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:19:06.943099  1297 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:19:06.943104  1297 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:19:06.943119  1297 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:19:06.943161  1297 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:19:06.943168  1297 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:06.943172  1297 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:06.943176  1297 net.cpp:139] Memory required for data: 15550800
I0428 20:19:06.943178  1297 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:06.943184  1297 net.cpp:86] Creating Layer accuracy
I0428 20:19:06.943187  1297 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:19:06.943192  1297 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:06.943197  1297 net.cpp:382] accuracy -> accuracy
I0428 20:19:06.943203  1297 net.cpp:124] Setting up accuracy
I0428 20:19:06.943207  1297 net.cpp:131] Top shape: (1)
I0428 20:19:06.943210  1297 net.cpp:139] Memory required for data: 15550804
I0428 20:19:06.943213  1297 layer_factory.hpp:77] Creating layer loss
I0428 20:19:06.943219  1297 net.cpp:86] Creating Layer loss
I0428 20:19:06.943222  1297 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:19:06.943226  1297 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:06.943245  1297 net.cpp:382] loss -> loss
I0428 20:19:06.943251  1297 layer_factory.hpp:77] Creating layer loss
I0428 20:19:06.943572  1297 net.cpp:124] Setting up loss
I0428 20:19:06.943583  1297 net.cpp:131] Top shape: (1)
I0428 20:19:06.943586  1297 net.cpp:134]     with loss weight 1
I0428 20:19:06.943593  1297 net.cpp:139] Memory required for data: 15550808
I0428 20:19:06.943596  1297 net.cpp:200] loss needs backward computation.
I0428 20:19:06.943601  1297 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:06.943604  1297 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:19:06.943608  1297 net.cpp:200] relu2 needs backward computation.
I0428 20:19:06.943611  1297 net.cpp:200] ip2 needs backward computation.
I0428 20:19:06.943615  1297 net.cpp:200] relu1 needs backward computation.
I0428 20:19:06.943619  1297 net.cpp:200] ip1 needs backward computation.
I0428 20:19:06.943622  1297 net.cpp:200] pool1 needs backward computation.
I0428 20:19:06.943625  1297 net.cpp:200] conv1 needs backward computation.
I0428 20:19:06.943629  1297 net.cpp:200] pool0 needs backward computation.
I0428 20:19:06.943634  1297 net.cpp:200] conv0 needs backward computation.
I0428 20:19:06.943636  1297 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:06.943640  1297 net.cpp:202] mnist does not need backward computation.
I0428 20:19:06.943644  1297 net.cpp:244] This network produces output accuracy
I0428 20:19:06.943647  1297 net.cpp:244] This network produces output loss
I0428 20:19:06.943660  1297 net.cpp:257] Network initialization done.
I0428 20:19:06.943699  1297 solver.cpp:56] Solver scaffolding done.
I0428 20:19:06.944017  1297 caffe.cpp:248] Starting Optimization
I0428 20:19:06.944039  1297 solver.cpp:273] Solving LeNet
I0428 20:19:06.944042  1297 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:06.944219  1297 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:06.950428  1297 blocking_queue.cpp:49] Waiting for data
I0428 20:19:07.021716  1304 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:07.022446  1297 solver.cpp:398]     Test net output #0: accuracy = 0.1392
I0428 20:19:07.022482  1297 solver.cpp:398]     Test net output #1: loss = 2.30746 (* 1 = 2.30746 loss)
I0428 20:19:07.026825  1297 solver.cpp:219] Iteration 0 (0 iter/s, 0.0827392s/100 iters), loss = 2.29032
I0428 20:19:07.026865  1297 solver.cpp:238]     Train net output #0: loss = 2.29032 (* 1 = 2.29032 loss)
I0428 20:19:07.026876  1297 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:07.154476  1297 solver.cpp:219] Iteration 100 (783.626 iter/s, 0.127612s/100 iters), loss = 0.601835
I0428 20:19:07.154521  1297 solver.cpp:238]     Train net output #0: loss = 0.601835 (* 1 = 0.601835 loss)
I0428 20:19:07.154528  1297 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:07.282068  1297 solver.cpp:219] Iteration 200 (784.098 iter/s, 0.127535s/100 iters), loss = 0.680693
I0428 20:19:07.282096  1297 solver.cpp:238]     Train net output #0: loss = 0.680693 (* 1 = 0.680693 loss)
I0428 20:19:07.282104  1297 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:07.409531  1297 solver.cpp:219] Iteration 300 (784.784 iter/s, 0.127424s/100 iters), loss = 0.680065
I0428 20:19:07.409559  1297 solver.cpp:238]     Train net output #0: loss = 0.680065 (* 1 = 0.680065 loss)
I0428 20:19:07.409566  1297 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:07.536679  1297 solver.cpp:219] Iteration 400 (786.732 iter/s, 0.127108s/100 iters), loss = 0.529921
I0428 20:19:07.536720  1297 solver.cpp:238]     Train net output #0: loss = 0.529921 (* 1 = 0.529921 loss)
I0428 20:19:07.536725  1297 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:07.660629  1297 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:07.724879  1304 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:07.726490  1297 solver.cpp:398]     Test net output #0: accuracy = 0.7802
I0428 20:19:07.726526  1297 solver.cpp:398]     Test net output #1: loss = 0.554938 (* 1 = 0.554938 loss)
I0428 20:19:07.727711  1297 solver.cpp:219] Iteration 500 (523.587 iter/s, 0.19099s/100 iters), loss = 0.518769
I0428 20:19:07.727749  1297 solver.cpp:238]     Train net output #0: loss = 0.518769 (* 1 = 0.518769 loss)
I0428 20:19:07.727756  1297 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:07.867899  1297 solver.cpp:219] Iteration 600 (713.502 iter/s, 0.140154s/100 iters), loss = 0.775683
I0428 20:19:07.867923  1297 solver.cpp:238]     Train net output #0: loss = 0.775683 (* 1 = 0.775683 loss)
I0428 20:19:07.867928  1297 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:08.003660  1297 solver.cpp:219] Iteration 700 (736.778 iter/s, 0.135726s/100 iters), loss = 0.495455
I0428 20:19:08.003684  1297 solver.cpp:238]     Train net output #0: loss = 0.495455 (* 1 = 0.495455 loss)
I0428 20:19:08.003690  1297 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:08.131511  1297 solver.cpp:219] Iteration 800 (782.377 iter/s, 0.127816s/100 iters), loss = 0.696486
I0428 20:19:08.131536  1297 solver.cpp:238]     Train net output #0: loss = 0.696486 (* 1 = 0.696486 loss)
I0428 20:19:08.131557  1297 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:08.257966  1297 solver.cpp:219] Iteration 900 (791.015 iter/s, 0.12642s/100 iters), loss = 0.914913
I0428 20:19:08.257992  1297 solver.cpp:238]     Train net output #0: loss = 0.914913 (* 1 = 0.914913 loss)
I0428 20:19:08.258013  1297 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:08.300184  1303 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:08.383332  1297 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:08.384840  1297 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:08.385851  1297 solver.cpp:311] Iteration 1000, loss = 0.562319
I0428 20:19:08.385866  1297 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:08.468003  1304 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:08.468783  1297 solver.cpp:398]     Test net output #0: accuracy = 0.7813
I0428 20:19:08.468821  1297 solver.cpp:398]     Test net output #1: loss = 0.538723 (* 1 = 0.538723 loss)
I0428 20:19:08.468829  1297 solver.cpp:316] Optimization Done.
I0428 20:19:08.468833  1297 caffe.cpp:259] Optimization Done.
