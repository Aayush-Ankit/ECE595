I0428 20:30:24.089938  3716 caffe.cpp:218] Using GPUs 0
I0428 20:30:24.126651  3716 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:24.636523  3716 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1538.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:24.636667  3716 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1538.prototxt
I0428 20:30:24.637097  3716 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:24.637117  3716 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:24.637222  3716 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:24.637303  3716 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:24.637404  3716 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:24.637428  3716 net.cpp:86] Creating Layer mnist
I0428 20:30:24.637436  3716 net.cpp:382] mnist -> data
I0428 20:30:24.637459  3716 net.cpp:382] mnist -> label
I0428 20:30:24.638566  3716 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:24.641047  3716 net.cpp:124] Setting up mnist
I0428 20:30:24.641093  3716 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:24.641100  3716 net.cpp:131] Top shape: 64 (64)
I0428 20:30:24.641103  3716 net.cpp:139] Memory required for data: 200960
I0428 20:30:24.641111  3716 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:24.641129  3716 net.cpp:86] Creating Layer conv0
I0428 20:30:24.641149  3716 net.cpp:408] conv0 <- data
I0428 20:30:24.641161  3716 net.cpp:382] conv0 -> conv0
I0428 20:30:24.902220  3716 net.cpp:124] Setting up conv0
I0428 20:30:24.902246  3716 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:24.902251  3716 net.cpp:139] Memory required for data: 14946560
I0428 20:30:24.902281  3716 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:24.902293  3716 net.cpp:86] Creating Layer pool0
I0428 20:30:24.902297  3716 net.cpp:408] pool0 <- conv0
I0428 20:30:24.902302  3716 net.cpp:382] pool0 -> pool0
I0428 20:30:24.902364  3716 net.cpp:124] Setting up pool0
I0428 20:30:24.902369  3716 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:24.902372  3716 net.cpp:139] Memory required for data: 18632960
I0428 20:30:24.902374  3716 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:24.902386  3716 net.cpp:86] Creating Layer conv1
I0428 20:30:24.902390  3716 net.cpp:408] conv1 <- pool0
I0428 20:30:24.902396  3716 net.cpp:382] conv1 -> conv1
I0428 20:30:24.904476  3716 net.cpp:124] Setting up conv1
I0428 20:30:24.904507  3716 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:24.904511  3716 net.cpp:139] Memory required for data: 18796800
I0428 20:30:24.904522  3716 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:24.904544  3716 net.cpp:86] Creating Layer pool1
I0428 20:30:24.904547  3716 net.cpp:408] pool1 <- conv1
I0428 20:30:24.904553  3716 net.cpp:382] pool1 -> pool1
I0428 20:30:24.904623  3716 net.cpp:124] Setting up pool1
I0428 20:30:24.904629  3716 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:24.904633  3716 net.cpp:139] Memory required for data: 18837760
I0428 20:30:24.904635  3716 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:24.904644  3716 net.cpp:86] Creating Layer ip1
I0428 20:30:24.904647  3716 net.cpp:408] ip1 <- pool1
I0428 20:30:24.904651  3716 net.cpp:382] ip1 -> ip1
I0428 20:30:24.904778  3716 net.cpp:124] Setting up ip1
I0428 20:30:24.904785  3716 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:24.904788  3716 net.cpp:139] Memory required for data: 18840320
I0428 20:30:24.904795  3716 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:24.904803  3716 net.cpp:86] Creating Layer relu1
I0428 20:30:24.904805  3716 net.cpp:408] relu1 <- ip1
I0428 20:30:24.904832  3716 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:24.905031  3716 net.cpp:124] Setting up relu1
I0428 20:30:24.905042  3716 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:24.905046  3716 net.cpp:139] Memory required for data: 18842880
I0428 20:30:24.905050  3716 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:24.905056  3716 net.cpp:86] Creating Layer ip2
I0428 20:30:24.905059  3716 net.cpp:408] ip2 <- ip1
I0428 20:30:24.905066  3716 net.cpp:382] ip2 -> ip2
I0428 20:30:24.905181  3716 net.cpp:124] Setting up ip2
I0428 20:30:24.905203  3716 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:24.905206  3716 net.cpp:139] Memory required for data: 18849280
I0428 20:30:24.905211  3716 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:24.905220  3716 net.cpp:86] Creating Layer relu2
I0428 20:30:24.905222  3716 net.cpp:408] relu2 <- ip2
I0428 20:30:24.905226  3716 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:24.906039  3716 net.cpp:124] Setting up relu2
I0428 20:30:24.906051  3716 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:24.906070  3716 net.cpp:139] Memory required for data: 18855680
I0428 20:30:24.906075  3716 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:24.906080  3716 net.cpp:86] Creating Layer ip3
I0428 20:30:24.906100  3716 net.cpp:408] ip3 <- ip2
I0428 20:30:24.906105  3716 net.cpp:382] ip3 -> ip3
I0428 20:30:24.906200  3716 net.cpp:124] Setting up ip3
I0428 20:30:24.906208  3716 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:24.906211  3716 net.cpp:139] Memory required for data: 18858240
I0428 20:30:24.906219  3716 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:24.906224  3716 net.cpp:86] Creating Layer relu3
I0428 20:30:24.906227  3716 net.cpp:408] relu3 <- ip3
I0428 20:30:24.906231  3716 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:24.906414  3716 net.cpp:124] Setting up relu3
I0428 20:30:24.906422  3716 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:24.906426  3716 net.cpp:139] Memory required for data: 18860800
I0428 20:30:24.906428  3716 layer_factory.hpp:77] Creating layer loss
I0428 20:30:24.906435  3716 net.cpp:86] Creating Layer loss
I0428 20:30:24.906438  3716 net.cpp:408] loss <- ip3
I0428 20:30:24.906442  3716 net.cpp:408] loss <- label
I0428 20:30:24.906447  3716 net.cpp:382] loss -> loss
I0428 20:30:24.906464  3716 layer_factory.hpp:77] Creating layer loss
I0428 20:30:24.906713  3716 net.cpp:124] Setting up loss
I0428 20:30:24.906723  3716 net.cpp:131] Top shape: (1)
I0428 20:30:24.906728  3716 net.cpp:134]     with loss weight 1
I0428 20:30:24.906741  3716 net.cpp:139] Memory required for data: 18860804
I0428 20:30:24.906744  3716 net.cpp:200] loss needs backward computation.
I0428 20:30:24.906749  3716 net.cpp:200] relu3 needs backward computation.
I0428 20:30:24.906751  3716 net.cpp:200] ip3 needs backward computation.
I0428 20:30:24.906754  3716 net.cpp:200] relu2 needs backward computation.
I0428 20:30:24.906757  3716 net.cpp:200] ip2 needs backward computation.
I0428 20:30:24.906760  3716 net.cpp:200] relu1 needs backward computation.
I0428 20:30:24.906762  3716 net.cpp:200] ip1 needs backward computation.
I0428 20:30:24.906765  3716 net.cpp:200] pool1 needs backward computation.
I0428 20:30:24.906769  3716 net.cpp:200] conv1 needs backward computation.
I0428 20:30:24.906771  3716 net.cpp:200] pool0 needs backward computation.
I0428 20:30:24.906774  3716 net.cpp:200] conv0 needs backward computation.
I0428 20:30:24.906779  3716 net.cpp:202] mnist does not need backward computation.
I0428 20:30:24.906780  3716 net.cpp:244] This network produces output loss
I0428 20:30:24.906792  3716 net.cpp:257] Network initialization done.
I0428 20:30:24.907161  3716 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1538.prototxt
I0428 20:30:24.907204  3716 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:24.907313  3716 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:24.907410  3716 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:24.907454  3716 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:24.907467  3716 net.cpp:86] Creating Layer mnist
I0428 20:30:24.907471  3716 net.cpp:382] mnist -> data
I0428 20:30:24.907480  3716 net.cpp:382] mnist -> label
I0428 20:30:24.907562  3716 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:24.909737  3716 net.cpp:124] Setting up mnist
I0428 20:30:24.909766  3716 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:24.909772  3716 net.cpp:131] Top shape: 100 (100)
I0428 20:30:24.909775  3716 net.cpp:139] Memory required for data: 314000
I0428 20:30:24.909778  3716 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:24.909838  3716 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:24.909843  3716 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:24.909850  3716 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:24.909857  3716 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:24.909909  3716 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:24.909917  3716 net.cpp:131] Top shape: 100 (100)
I0428 20:30:24.909922  3716 net.cpp:131] Top shape: 100 (100)
I0428 20:30:24.909925  3716 net.cpp:139] Memory required for data: 314800
I0428 20:30:24.909927  3716 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:24.909952  3716 net.cpp:86] Creating Layer conv0
I0428 20:30:24.909956  3716 net.cpp:408] conv0 <- data
I0428 20:30:24.909963  3716 net.cpp:382] conv0 -> conv0
I0428 20:30:24.911777  3716 net.cpp:124] Setting up conv0
I0428 20:30:24.911792  3716 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:24.911794  3716 net.cpp:139] Memory required for data: 23354800
I0428 20:30:24.911803  3716 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:24.911809  3716 net.cpp:86] Creating Layer pool0
I0428 20:30:24.911813  3716 net.cpp:408] pool0 <- conv0
I0428 20:30:24.911818  3716 net.cpp:382] pool0 -> pool0
I0428 20:30:24.911851  3716 net.cpp:124] Setting up pool0
I0428 20:30:24.911855  3716 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:24.911859  3716 net.cpp:139] Memory required for data: 29114800
I0428 20:30:24.911860  3716 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:24.911870  3716 net.cpp:86] Creating Layer conv1
I0428 20:30:24.911873  3716 net.cpp:408] conv1 <- pool0
I0428 20:30:24.911878  3716 net.cpp:382] conv1 -> conv1
I0428 20:30:24.914737  3716 net.cpp:124] Setting up conv1
I0428 20:30:24.914769  3716 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:24.914778  3716 net.cpp:139] Memory required for data: 29370800
I0428 20:30:24.914808  3716 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:24.914825  3716 net.cpp:86] Creating Layer pool1
I0428 20:30:24.914834  3716 net.cpp:408] pool1 <- conv1
I0428 20:30:24.914844  3716 net.cpp:382] pool1 -> pool1
I0428 20:30:24.914922  3716 net.cpp:124] Setting up pool1
I0428 20:30:24.914938  3716 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:24.914944  3716 net.cpp:139] Memory required for data: 29434800
I0428 20:30:24.914952  3716 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:24.914965  3716 net.cpp:86] Creating Layer ip1
I0428 20:30:24.914971  3716 net.cpp:408] ip1 <- pool1
I0428 20:30:24.914988  3716 net.cpp:382] ip1 -> ip1
I0428 20:30:24.915310  3716 net.cpp:124] Setting up ip1
I0428 20:30:24.915354  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.915362  3716 net.cpp:139] Memory required for data: 29438800
I0428 20:30:24.915379  3716 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:24.915424  3716 net.cpp:86] Creating Layer relu1
I0428 20:30:24.915433  3716 net.cpp:408] relu1 <- ip1
I0428 20:30:24.915453  3716 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:24.915817  3716 net.cpp:124] Setting up relu1
I0428 20:30:24.915840  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.915848  3716 net.cpp:139] Memory required for data: 29442800
I0428 20:30:24.915854  3716 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:24.915873  3716 net.cpp:86] Creating Layer ip2
I0428 20:30:24.915879  3716 net.cpp:408] ip2 <- ip1
I0428 20:30:24.915889  3716 net.cpp:382] ip2 -> ip2
I0428 20:30:24.916102  3716 net.cpp:124] Setting up ip2
I0428 20:30:24.916126  3716 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:24.916133  3716 net.cpp:139] Memory required for data: 29452800
I0428 20:30:24.916144  3716 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:24.916153  3716 net.cpp:86] Creating Layer relu2
I0428 20:30:24.916160  3716 net.cpp:408] relu2 <- ip2
I0428 20:30:24.916172  3716 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:24.916648  3716 net.cpp:124] Setting up relu2
I0428 20:30:24.916668  3716 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:24.916676  3716 net.cpp:139] Memory required for data: 29462800
I0428 20:30:24.916683  3716 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:24.916697  3716 net.cpp:86] Creating Layer ip3
I0428 20:30:24.916704  3716 net.cpp:408] ip3 <- ip2
I0428 20:30:24.916714  3716 net.cpp:382] ip3 -> ip3
I0428 20:30:24.916949  3716 net.cpp:124] Setting up ip3
I0428 20:30:24.916963  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.916970  3716 net.cpp:139] Memory required for data: 29466800
I0428 20:30:24.916988  3716 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:24.916999  3716 net.cpp:86] Creating Layer relu3
I0428 20:30:24.917006  3716 net.cpp:408] relu3 <- ip3
I0428 20:30:24.917013  3716 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:24.918694  3716 net.cpp:124] Setting up relu3
I0428 20:30:24.918730  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.918737  3716 net.cpp:139] Memory required for data: 29470800
I0428 20:30:24.918752  3716 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:24.918766  3716 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:24.918773  3716 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:24.918793  3716 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:24.918809  3716 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:24.918923  3716 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:24.918941  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.918951  3716 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:24.918957  3716 net.cpp:139] Memory required for data: 29478800
I0428 20:30:24.918964  3716 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:24.918983  3716 net.cpp:86] Creating Layer accuracy
I0428 20:30:24.918990  3716 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:24.919014  3716 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:24.919033  3716 net.cpp:382] accuracy -> accuracy
I0428 20:30:24.919046  3716 net.cpp:124] Setting up accuracy
I0428 20:30:24.919054  3716 net.cpp:131] Top shape: (1)
I0428 20:30:24.919062  3716 net.cpp:139] Memory required for data: 29478804
I0428 20:30:24.919068  3716 layer_factory.hpp:77] Creating layer loss
I0428 20:30:24.919078  3716 net.cpp:86] Creating Layer loss
I0428 20:30:24.919085  3716 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:24.919101  3716 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:24.919112  3716 net.cpp:382] loss -> loss
I0428 20:30:24.919126  3716 layer_factory.hpp:77] Creating layer loss
I0428 20:30:24.919651  3716 net.cpp:124] Setting up loss
I0428 20:30:24.919669  3716 net.cpp:131] Top shape: (1)
I0428 20:30:24.919677  3716 net.cpp:134]     with loss weight 1
I0428 20:30:24.919708  3716 net.cpp:139] Memory required for data: 29478808
I0428 20:30:24.919718  3716 net.cpp:200] loss needs backward computation.
I0428 20:30:24.919725  3716 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:24.919734  3716 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:24.919740  3716 net.cpp:200] relu3 needs backward computation.
I0428 20:30:24.919746  3716 net.cpp:200] ip3 needs backward computation.
I0428 20:30:24.919754  3716 net.cpp:200] relu2 needs backward computation.
I0428 20:30:24.919759  3716 net.cpp:200] ip2 needs backward computation.
I0428 20:30:24.919765  3716 net.cpp:200] relu1 needs backward computation.
I0428 20:30:24.919771  3716 net.cpp:200] ip1 needs backward computation.
I0428 20:30:24.919777  3716 net.cpp:200] pool1 needs backward computation.
I0428 20:30:24.919785  3716 net.cpp:200] conv1 needs backward computation.
I0428 20:30:24.919791  3716 net.cpp:200] pool0 needs backward computation.
I0428 20:30:24.919797  3716 net.cpp:200] conv0 needs backward computation.
I0428 20:30:24.919806  3716 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:24.919813  3716 net.cpp:202] mnist does not need backward computation.
I0428 20:30:24.919818  3716 net.cpp:244] This network produces output accuracy
I0428 20:30:24.919826  3716 net.cpp:244] This network produces output loss
I0428 20:30:24.919850  3716 net.cpp:257] Network initialization done.
I0428 20:30:24.919953  3716 solver.cpp:56] Solver scaffolding done.
I0428 20:30:24.920686  3716 caffe.cpp:248] Starting Optimization
I0428 20:30:24.920699  3716 solver.cpp:273] Solving LeNet
I0428 20:30:24.920706  3716 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:24.921113  3716 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:25.031167  3723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:25.033913  3716 solver.cpp:398]     Test net output #0: accuracy = 0.1158
I0428 20:30:25.033936  3716 solver.cpp:398]     Test net output #1: loss = 2.31145 (* 1 = 2.31145 loss)
I0428 20:30:25.038897  3716 solver.cpp:219] Iteration 0 (-1.94161e-31 iter/s, 0.118151s/100 iters), loss = 2.32424
I0428 20:30:25.038926  3716 solver.cpp:238]     Train net output #0: loss = 2.32424 (* 1 = 2.32424 loss)
I0428 20:30:25.038954  3716 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:25.263550  3716 solver.cpp:219] Iteration 100 (445.244 iter/s, 0.224596s/100 iters), loss = 0.451197
I0428 20:30:25.263605  3716 solver.cpp:238]     Train net output #0: loss = 0.451197 (* 1 = 0.451197 loss)
I0428 20:30:25.263619  3716 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:25.493140  3716 solver.cpp:219] Iteration 200 (435.693 iter/s, 0.229519s/100 iters), loss = 0.433678
I0428 20:30:25.493191  3716 solver.cpp:238]     Train net output #0: loss = 0.433678 (* 1 = 0.433678 loss)
I0428 20:30:25.493206  3716 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:25.719624  3716 solver.cpp:219] Iteration 300 (441.668 iter/s, 0.226415s/100 iters), loss = 0.547521
I0428 20:30:25.719674  3716 solver.cpp:238]     Train net output #0: loss = 0.547521 (* 1 = 0.547521 loss)
I0428 20:30:25.719696  3716 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:25.939838  3716 solver.cpp:219] Iteration 400 (454.236 iter/s, 0.22015s/100 iters), loss = 0.421562
I0428 20:30:25.939882  3716 solver.cpp:238]     Train net output #0: loss = 0.421562 (* 1 = 0.421562 loss)
I0428 20:30:25.939891  3716 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:26.158463  3716 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:26.263272  3723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:26.266628  3716 solver.cpp:398]     Test net output #0: accuracy = 0.8621
I0428 20:30:26.266654  3716 solver.cpp:398]     Test net output #1: loss = 0.386719 (* 1 = 0.386719 loss)
I0428 20:30:26.268591  3716 solver.cpp:219] Iteration 500 (304.236 iter/s, 0.328692s/100 iters), loss = 0.362446
I0428 20:30:26.268618  3716 solver.cpp:238]     Train net output #0: loss = 0.362446 (* 1 = 0.362446 loss)
I0428 20:30:26.268646  3716 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:26.482882  3716 solver.cpp:219] Iteration 600 (466.759 iter/s, 0.214243s/100 iters), loss = 0.362319
I0428 20:30:26.482925  3716 solver.cpp:238]     Train net output #0: loss = 0.362319 (* 1 = 0.362319 loss)
I0428 20:30:26.482938  3716 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:26.694336  3716 solver.cpp:219] Iteration 700 (473.051 iter/s, 0.211394s/100 iters), loss = 0.365377
I0428 20:30:26.694389  3716 solver.cpp:238]     Train net output #0: loss = 0.365377 (* 1 = 0.365377 loss)
I0428 20:30:26.694404  3716 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:26.908746  3716 solver.cpp:219] Iteration 800 (466.538 iter/s, 0.214345s/100 iters), loss = 0.561607
I0428 20:30:26.908779  3716 solver.cpp:238]     Train net output #0: loss = 0.561607 (* 1 = 0.561607 loss)
I0428 20:30:26.908787  3716 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:27.117280  3716 solver.cpp:219] Iteration 900 (479.652 iter/s, 0.208484s/100 iters), loss = 0.609066
I0428 20:30:27.117312  3716 solver.cpp:238]     Train net output #0: loss = 0.609066 (* 1 = 0.609066 loss)
I0428 20:30:27.117321  3716 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:27.186146  3722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:27.323473  3716 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:27.325858  3716 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:27.327369  3716 solver.cpp:311] Iteration 1000, loss = 0.380494
I0428 20:30:27.327399  3716 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:27.432168  3723 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:27.435688  3716 solver.cpp:398]     Test net output #0: accuracy = 0.8716
I0428 20:30:27.435711  3716 solver.cpp:398]     Test net output #1: loss = 0.349771 (* 1 = 0.349771 loss)
I0428 20:30:27.435719  3716 solver.cpp:316] Optimization Done.
I0428 20:30:27.435721  3716 caffe.cpp:259] Optimization Done.
