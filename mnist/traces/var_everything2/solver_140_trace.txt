I0428 19:32:01.005102 22732 caffe.cpp:218] Using GPUs 0
I0428 19:32:01.043568 22732 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:01.531695 22732 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test140.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:01.531864 22732 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test140.prototxt
I0428 19:32:01.532196 22732 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:01.532213 22732 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:01.532289 22732 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:01.532366 22732 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:01.532502 22732 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:01.532532 22732 net.cpp:86] Creating Layer mnist
I0428 19:32:01.532541 22732 net.cpp:382] mnist -> data
I0428 19:32:01.532582 22732 net.cpp:382] mnist -> label
I0428 19:32:01.533732 22732 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:01.536123 22732 net.cpp:124] Setting up mnist
I0428 19:32:01.536157 22732 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:01.536165 22732 net.cpp:131] Top shape: 64 (64)
I0428 19:32:01.536171 22732 net.cpp:139] Memory required for data: 200960
I0428 19:32:01.536180 22732 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:01.536216 22732 net.cpp:86] Creating Layer conv0
I0428 19:32:01.536226 22732 net.cpp:408] conv0 <- data
I0428 19:32:01.536240 22732 net.cpp:382] conv0 -> conv0
I0428 19:32:01.765240 22732 net.cpp:124] Setting up conv0
I0428 19:32:01.765269 22732 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:01.765275 22732 net.cpp:139] Memory required for data: 1675520
I0428 19:32:01.765310 22732 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:01.765326 22732 net.cpp:86] Creating Layer pool0
I0428 19:32:01.765352 22732 net.cpp:408] pool0 <- conv0
I0428 19:32:01.765362 22732 net.cpp:382] pool0 -> pool0
I0428 19:32:01.765431 22732 net.cpp:124] Setting up pool0
I0428 19:32:01.765439 22732 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:01.765444 22732 net.cpp:139] Memory required for data: 2044160
I0428 19:32:01.765450 22732 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:01.765460 22732 net.cpp:86] Creating Layer ip1
I0428 19:32:01.765465 22732 net.cpp:408] ip1 <- pool0
I0428 19:32:01.765473 22732 net.cpp:382] ip1 -> ip1
I0428 19:32:01.765769 22732 net.cpp:124] Setting up ip1
I0428 19:32:01.765779 22732 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:01.765782 22732 net.cpp:139] Memory required for data: 2050560
I0428 19:32:01.765794 22732 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:01.765806 22732 net.cpp:86] Creating Layer relu1
I0428 19:32:01.765813 22732 net.cpp:408] relu1 <- ip1
I0428 19:32:01.765820 22732 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:01.765977 22732 net.cpp:124] Setting up relu1
I0428 19:32:01.765987 22732 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:01.765991 22732 net.cpp:139] Memory required for data: 2056960
I0428 19:32:01.765996 22732 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:01.766005 22732 net.cpp:86] Creating Layer ip2
I0428 19:32:01.766010 22732 net.cpp:408] ip2 <- ip1
I0428 19:32:01.766018 22732 net.cpp:382] ip2 -> ip2
I0428 19:32:01.766113 22732 net.cpp:124] Setting up ip2
I0428 19:32:01.766121 22732 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:01.766126 22732 net.cpp:139] Memory required for data: 2059520
I0428 19:32:01.766137 22732 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:01.766145 22732 net.cpp:86] Creating Layer relu2
I0428 19:32:01.766151 22732 net.cpp:408] relu2 <- ip2
I0428 19:32:01.766157 22732 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:01.766955 22732 net.cpp:124] Setting up relu2
I0428 19:32:01.766984 22732 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:01.766989 22732 net.cpp:139] Memory required for data: 2062080
I0428 19:32:01.766995 22732 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:01.767006 22732 net.cpp:86] Creating Layer ip3
I0428 19:32:01.767011 22732 net.cpp:408] ip3 <- ip2
I0428 19:32:01.767020 22732 net.cpp:382] ip3 -> ip3
I0428 19:32:01.767118 22732 net.cpp:124] Setting up ip3
I0428 19:32:01.767127 22732 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:01.767132 22732 net.cpp:139] Memory required for data: 2064640
I0428 19:32:01.767141 22732 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:01.767151 22732 net.cpp:86] Creating Layer relu3
I0428 19:32:01.767158 22732 net.cpp:408] relu3 <- ip3
I0428 19:32:01.767164 22732 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:01.767334 22732 net.cpp:124] Setting up relu3
I0428 19:32:01.767344 22732 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:01.767349 22732 net.cpp:139] Memory required for data: 2067200
I0428 19:32:01.767354 22732 layer_factory.hpp:77] Creating layer loss
I0428 19:32:01.767376 22732 net.cpp:86] Creating Layer loss
I0428 19:32:01.767381 22732 net.cpp:408] loss <- ip3
I0428 19:32:01.767388 22732 net.cpp:408] loss <- label
I0428 19:32:01.767396 22732 net.cpp:382] loss -> loss
I0428 19:32:01.767418 22732 layer_factory.hpp:77] Creating layer loss
I0428 19:32:01.767679 22732 net.cpp:124] Setting up loss
I0428 19:32:01.767690 22732 net.cpp:131] Top shape: (1)
I0428 19:32:01.767695 22732 net.cpp:134]     with loss weight 1
I0428 19:32:01.767714 22732 net.cpp:139] Memory required for data: 2067204
I0428 19:32:01.767720 22732 net.cpp:200] loss needs backward computation.
I0428 19:32:01.767726 22732 net.cpp:200] relu3 needs backward computation.
I0428 19:32:01.767731 22732 net.cpp:200] ip3 needs backward computation.
I0428 19:32:01.767735 22732 net.cpp:200] relu2 needs backward computation.
I0428 19:32:01.767740 22732 net.cpp:200] ip2 needs backward computation.
I0428 19:32:01.767745 22732 net.cpp:200] relu1 needs backward computation.
I0428 19:32:01.767750 22732 net.cpp:200] ip1 needs backward computation.
I0428 19:32:01.767765 22732 net.cpp:200] pool0 needs backward computation.
I0428 19:32:01.767771 22732 net.cpp:200] conv0 needs backward computation.
I0428 19:32:01.767776 22732 net.cpp:202] mnist does not need backward computation.
I0428 19:32:01.767781 22732 net.cpp:244] This network produces output loss
I0428 19:32:01.767792 22732 net.cpp:257] Network initialization done.
I0428 19:32:01.768096 22732 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test140.prototxt
I0428 19:32:01.768127 22732 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:01.768206 22732 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:01.768304 22732 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:01.768373 22732 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:01.768405 22732 net.cpp:86] Creating Layer mnist
I0428 19:32:01.768415 22732 net.cpp:382] mnist -> data
I0428 19:32:01.768426 22732 net.cpp:382] mnist -> label
I0428 19:32:01.768548 22732 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:01.770736 22732 net.cpp:124] Setting up mnist
I0428 19:32:01.770751 22732 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:01.770773 22732 net.cpp:131] Top shape: 100 (100)
I0428 19:32:01.770779 22732 net.cpp:139] Memory required for data: 314000
I0428 19:32:01.770784 22732 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:01.770802 22732 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:01.770812 22732 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:01.770819 22732 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:01.770830 22732 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:01.770884 22732 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:01.770894 22732 net.cpp:131] Top shape: 100 (100)
I0428 19:32:01.770900 22732 net.cpp:131] Top shape: 100 (100)
I0428 19:32:01.770905 22732 net.cpp:139] Memory required for data: 314800
I0428 19:32:01.770920 22732 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:01.770936 22732 net.cpp:86] Creating Layer conv0
I0428 19:32:01.770943 22732 net.cpp:408] conv0 <- data
I0428 19:32:01.770954 22732 net.cpp:382] conv0 -> conv0
I0428 19:32:01.772656 22732 net.cpp:124] Setting up conv0
I0428 19:32:01.772671 22732 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:01.772677 22732 net.cpp:139] Memory required for data: 2618800
I0428 19:32:01.772693 22732 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:01.772702 22732 net.cpp:86] Creating Layer pool0
I0428 19:32:01.772709 22732 net.cpp:408] pool0 <- conv0
I0428 19:32:01.772717 22732 net.cpp:382] pool0 -> pool0
I0428 19:32:01.772760 22732 net.cpp:124] Setting up pool0
I0428 19:32:01.772768 22732 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:01.772773 22732 net.cpp:139] Memory required for data: 3194800
I0428 19:32:01.772778 22732 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:01.772789 22732 net.cpp:86] Creating Layer ip1
I0428 19:32:01.772794 22732 net.cpp:408] ip1 <- pool0
I0428 19:32:01.772804 22732 net.cpp:382] ip1 -> ip1
I0428 19:32:01.773151 22732 net.cpp:124] Setting up ip1
I0428 19:32:01.773161 22732 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:01.773166 22732 net.cpp:139] Memory required for data: 3204800
I0428 19:32:01.773178 22732 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:01.773190 22732 net.cpp:86] Creating Layer relu1
I0428 19:32:01.773195 22732 net.cpp:408] relu1 <- ip1
I0428 19:32:01.773205 22732 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:01.773383 22732 net.cpp:124] Setting up relu1
I0428 19:32:01.773393 22732 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:01.773399 22732 net.cpp:139] Memory required for data: 3214800
I0428 19:32:01.773404 22732 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:01.773416 22732 net.cpp:86] Creating Layer ip2
I0428 19:32:01.773422 22732 net.cpp:408] ip2 <- ip1
I0428 19:32:01.773430 22732 net.cpp:382] ip2 -> ip2
I0428 19:32:01.773540 22732 net.cpp:124] Setting up ip2
I0428 19:32:01.773550 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.773553 22732 net.cpp:139] Memory required for data: 3218800
I0428 19:32:01.773567 22732 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:01.773577 22732 net.cpp:86] Creating Layer relu2
I0428 19:32:01.773584 22732 net.cpp:408] relu2 <- ip2
I0428 19:32:01.773592 22732 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:01.774456 22732 net.cpp:124] Setting up relu2
I0428 19:32:01.774471 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.774477 22732 net.cpp:139] Memory required for data: 3222800
I0428 19:32:01.774482 22732 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:01.774492 22732 net.cpp:86] Creating Layer ip3
I0428 19:32:01.774498 22732 net.cpp:408] ip3 <- ip2
I0428 19:32:01.774508 22732 net.cpp:382] ip3 -> ip3
I0428 19:32:01.774659 22732 net.cpp:124] Setting up ip3
I0428 19:32:01.774668 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.774673 22732 net.cpp:139] Memory required for data: 3226800
I0428 19:32:01.774682 22732 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:01.774691 22732 net.cpp:86] Creating Layer relu3
I0428 19:32:01.774696 22732 net.cpp:408] relu3 <- ip3
I0428 19:32:01.774705 22732 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:01.774924 22732 net.cpp:124] Setting up relu3
I0428 19:32:01.774935 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.774941 22732 net.cpp:139] Memory required for data: 3230800
I0428 19:32:01.774946 22732 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:01.774958 22732 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:01.774965 22732 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:01.774974 22732 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:01.774988 22732 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:01.775033 22732 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:01.775043 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.775050 22732 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:01.775068 22732 net.cpp:139] Memory required for data: 3238800
I0428 19:32:01.775074 22732 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:01.775082 22732 net.cpp:86] Creating Layer accuracy
I0428 19:32:01.775089 22732 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:01.775110 22732 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:01.775117 22732 net.cpp:382] accuracy -> accuracy
I0428 19:32:01.775130 22732 net.cpp:124] Setting up accuracy
I0428 19:32:01.775138 22732 net.cpp:131] Top shape: (1)
I0428 19:32:01.775147 22732 net.cpp:139] Memory required for data: 3238804
I0428 19:32:01.775152 22732 layer_factory.hpp:77] Creating layer loss
I0428 19:32:01.775162 22732 net.cpp:86] Creating Layer loss
I0428 19:32:01.775167 22732 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:01.775174 22732 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:01.775182 22732 net.cpp:382] loss -> loss
I0428 19:32:01.775192 22732 layer_factory.hpp:77] Creating layer loss
I0428 19:32:01.775478 22732 net.cpp:124] Setting up loss
I0428 19:32:01.775490 22732 net.cpp:131] Top shape: (1)
I0428 19:32:01.775494 22732 net.cpp:134]     with loss weight 1
I0428 19:32:01.775503 22732 net.cpp:139] Memory required for data: 3238808
I0428 19:32:01.775508 22732 net.cpp:200] loss needs backward computation.
I0428 19:32:01.775514 22732 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:01.775521 22732 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:01.775527 22732 net.cpp:200] relu3 needs backward computation.
I0428 19:32:01.775532 22732 net.cpp:200] ip3 needs backward computation.
I0428 19:32:01.775537 22732 net.cpp:200] relu2 needs backward computation.
I0428 19:32:01.775542 22732 net.cpp:200] ip2 needs backward computation.
I0428 19:32:01.775545 22732 net.cpp:200] relu1 needs backward computation.
I0428 19:32:01.775550 22732 net.cpp:200] ip1 needs backward computation.
I0428 19:32:01.775555 22732 net.cpp:200] pool0 needs backward computation.
I0428 19:32:01.775560 22732 net.cpp:200] conv0 needs backward computation.
I0428 19:32:01.775565 22732 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:01.775571 22732 net.cpp:202] mnist does not need backward computation.
I0428 19:32:01.775575 22732 net.cpp:244] This network produces output accuracy
I0428 19:32:01.775581 22732 net.cpp:244] This network produces output loss
I0428 19:32:01.775598 22732 net.cpp:257] Network initialization done.
I0428 19:32:01.775643 22732 solver.cpp:56] Solver scaffolding done.
I0428 19:32:01.775930 22732 caffe.cpp:248] Starting Optimization
I0428 19:32:01.775938 22732 solver.cpp:273] Solving LeNet
I0428 19:32:01.775943 22732 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:01.776103 22732 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:01.780799 22732 blocking_queue.cpp:49] Waiting for data
I0428 19:32:01.848453 22739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:01.849015 22732 solver.cpp:398]     Test net output #0: accuracy = 0.094
I0428 19:32:01.849040 22732 solver.cpp:398]     Test net output #1: loss = 2.31459 (* 1 = 2.31459 loss)
I0428 19:32:01.851218 22732 solver.cpp:219] Iteration 0 (0 iter/s, 0.0752457s/100 iters), loss = 2.31102
I0428 19:32:01.851274 22732 solver.cpp:238]     Train net output #0: loss = 2.31102 (* 1 = 2.31102 loss)
I0428 19:32:01.851292 22732 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:01.924491 22732 solver.cpp:219] Iteration 100 (1365.63 iter/s, 0.0732263s/100 iters), loss = 1.29037
I0428 19:32:01.924520 22732 solver.cpp:238]     Train net output #0: loss = 1.29037 (* 1 = 1.29037 loss)
I0428 19:32:01.924545 22732 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:01.991245 22732 solver.cpp:219] Iteration 200 (1499.15 iter/s, 0.0667043s/100 iters), loss = 0.828685
I0428 19:32:01.991273 22732 solver.cpp:238]     Train net output #0: loss = 0.828685 (* 1 = 0.828685 loss)
I0428 19:32:01.991298 22732 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:02.055986 22732 solver.cpp:219] Iteration 300 (1545.39 iter/s, 0.0647086s/100 iters), loss = 1.38129
I0428 19:32:02.056013 22732 solver.cpp:238]     Train net output #0: loss = 1.38129 (* 1 = 1.38129 loss)
I0428 19:32:02.056038 22732 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:02.125371 22732 solver.cpp:219] Iteration 400 (1441.91 iter/s, 0.0693524s/100 iters), loss = 1.16414
I0428 19:32:02.125401 22732 solver.cpp:238]     Train net output #0: loss = 1.16414 (* 1 = 1.16414 loss)
I0428 19:32:02.125425 22732 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:02.193166 22732 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:02.261718 22739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:02.262239 22732 solver.cpp:398]     Test net output #0: accuracy = 0.6484
I0428 19:32:02.262262 22732 solver.cpp:398]     Test net output #1: loss = 1.06775 (* 1 = 1.06775 loss)
I0428 19:32:02.263007 22732 solver.cpp:219] Iteration 500 (726.755 iter/s, 0.137598s/100 iters), loss = 1.00049
I0428 19:32:02.263036 22732 solver.cpp:238]     Train net output #0: loss = 1.00049 (* 1 = 1.00049 loss)
I0428 19:32:02.263052 22732 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:02.335086 22732 solver.cpp:219] Iteration 600 (1388.15 iter/s, 0.0720384s/100 iters), loss = 1.03316
I0428 19:32:02.335115 22732 solver.cpp:238]     Train net output #0: loss = 1.03316 (* 1 = 1.03316 loss)
I0428 19:32:02.335126 22732 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:02.400347 22732 solver.cpp:219] Iteration 700 (1533.14 iter/s, 0.0652258s/100 iters), loss = 1.04226
I0428 19:32:02.400377 22732 solver.cpp:238]     Train net output #0: loss = 1.04226 (* 1 = 1.04226 loss)
I0428 19:32:02.400403 22732 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:02.466119 22732 solver.cpp:219] Iteration 800 (1521.27 iter/s, 0.0657347s/100 iters), loss = 1.24065
I0428 19:32:02.466151 22732 solver.cpp:238]     Train net output #0: loss = 1.24065 (* 1 = 1.24065 loss)
I0428 19:32:02.466162 22732 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:02.538019 22732 solver.cpp:219] Iteration 900 (1391.55 iter/s, 0.0718623s/100 iters), loss = 1.17732
I0428 19:32:02.538049 22732 solver.cpp:238]     Train net output #0: loss = 1.17732 (* 1 = 1.17732 loss)
I0428 19:32:02.538076 22732 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:02.560151 22738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:02.603673 22732 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:02.604827 22732 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:02.605499 22732 solver.cpp:311] Iteration 1000, loss = 1.11773
I0428 19:32:02.605516 22732 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:02.679721 22739 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:02.680261 22732 solver.cpp:398]     Test net output #0: accuracy = 0.6766
I0428 19:32:02.680285 22732 solver.cpp:398]     Test net output #1: loss = 1.02483 (* 1 = 1.02483 loss)
I0428 19:32:02.680295 22732 solver.cpp:316] Optimization Done.
I0428 19:32:02.680301 22732 caffe.cpp:259] Optimization Done.
