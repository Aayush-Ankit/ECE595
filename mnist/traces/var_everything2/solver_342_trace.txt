I0428 19:40:41.205926 24611 caffe.cpp:218] Using GPUs 0
I0428 19:40:41.245970 24611 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:41.757062 24611 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test342.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:41.757189 24611 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test342.prototxt
I0428 19:40:41.757580 24611 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:41.757597 24611 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:41.757692 24611 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:41.757763 24611 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:41.757858 24611 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:41.757881 24611 net.cpp:86] Creating Layer mnist
I0428 19:40:41.757889 24611 net.cpp:382] mnist -> data
I0428 19:40:41.757910 24611 net.cpp:382] mnist -> label
I0428 19:40:41.758960 24611 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:41.761346 24611 net.cpp:124] Setting up mnist
I0428 19:40:41.761364 24611 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:41.761370 24611 net.cpp:131] Top shape: 64 (64)
I0428 19:40:41.761374 24611 net.cpp:139] Memory required for data: 200960
I0428 19:40:41.761382 24611 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:41.761397 24611 net.cpp:86] Creating Layer conv0
I0428 19:40:41.761417 24611 net.cpp:408] conv0 <- data
I0428 19:40:41.761430 24611 net.cpp:382] conv0 -> conv0
I0428 19:40:42.046366 24611 net.cpp:124] Setting up conv0
I0428 19:40:42.046396 24611 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:42.046401 24611 net.cpp:139] Memory required for data: 495872
I0428 19:40:42.046418 24611 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:42.046432 24611 net.cpp:86] Creating Layer pool0
I0428 19:40:42.046437 24611 net.cpp:408] pool0 <- conv0
I0428 19:40:42.046442 24611 net.cpp:382] pool0 -> pool0
I0428 19:40:42.046494 24611 net.cpp:124] Setting up pool0
I0428 19:40:42.046500 24611 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:42.046504 24611 net.cpp:139] Memory required for data: 569600
I0428 19:40:42.046509 24611 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:42.046520 24611 net.cpp:86] Creating Layer conv1
I0428 19:40:42.046524 24611 net.cpp:408] conv1 <- pool0
I0428 19:40:42.046530 24611 net.cpp:382] conv1 -> conv1
I0428 19:40:42.048573 24611 net.cpp:124] Setting up conv1
I0428 19:40:42.048589 24611 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:42.048593 24611 net.cpp:139] Memory required for data: 651520
I0428 19:40:42.048604 24611 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:42.048611 24611 net.cpp:86] Creating Layer pool1
I0428 19:40:42.048615 24611 net.cpp:408] pool1 <- conv1
I0428 19:40:42.048624 24611 net.cpp:382] pool1 -> pool1
I0428 19:40:42.048671 24611 net.cpp:124] Setting up pool1
I0428 19:40:42.048676 24611 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:42.048679 24611 net.cpp:139] Memory required for data: 672000
I0428 19:40:42.048682 24611 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:42.048692 24611 net.cpp:86] Creating Layer ip1
I0428 19:40:42.048696 24611 net.cpp:408] ip1 <- pool1
I0428 19:40:42.048702 24611 net.cpp:382] ip1 -> ip1
I0428 19:40:42.049758 24611 net.cpp:124] Setting up ip1
I0428 19:40:42.049772 24611 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:42.049775 24611 net.cpp:139] Memory required for data: 684800
I0428 19:40:42.049785 24611 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:42.049793 24611 net.cpp:86] Creating Layer relu1
I0428 19:40:42.049798 24611 net.cpp:408] relu1 <- ip1
I0428 19:40:42.049803 24611 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:42.049998 24611 net.cpp:124] Setting up relu1
I0428 19:40:42.050009 24611 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:42.050012 24611 net.cpp:139] Memory required for data: 697600
I0428 19:40:42.050015 24611 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:42.050022 24611 net.cpp:86] Creating Layer ip2
I0428 19:40:42.050026 24611 net.cpp:408] ip2 <- ip1
I0428 19:40:42.050034 24611 net.cpp:382] ip2 -> ip2
I0428 19:40:42.050150 24611 net.cpp:124] Setting up ip2
I0428 19:40:42.050158 24611 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:42.050161 24611 net.cpp:139] Memory required for data: 700160
I0428 19:40:42.050168 24611 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:42.050174 24611 net.cpp:86] Creating Layer relu2
I0428 19:40:42.050179 24611 net.cpp:408] relu2 <- ip2
I0428 19:40:42.050184 24611 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:42.050977 24611 net.cpp:124] Setting up relu2
I0428 19:40:42.050990 24611 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:42.050994 24611 net.cpp:139] Memory required for data: 702720
I0428 19:40:42.050998 24611 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:42.051005 24611 net.cpp:86] Creating Layer ip3
I0428 19:40:42.051009 24611 net.cpp:408] ip3 <- ip2
I0428 19:40:42.051017 24611 net.cpp:382] ip3 -> ip3
I0428 19:40:42.051134 24611 net.cpp:124] Setting up ip3
I0428 19:40:42.051142 24611 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:42.051146 24611 net.cpp:139] Memory required for data: 705280
I0428 19:40:42.051153 24611 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:42.051161 24611 net.cpp:86] Creating Layer relu3
I0428 19:40:42.051163 24611 net.cpp:408] relu3 <- ip3
I0428 19:40:42.051168 24611 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:42.051362 24611 net.cpp:124] Setting up relu3
I0428 19:40:42.051373 24611 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:42.051378 24611 net.cpp:139] Memory required for data: 707840
I0428 19:40:42.051381 24611 layer_factory.hpp:77] Creating layer loss
I0428 19:40:42.051388 24611 net.cpp:86] Creating Layer loss
I0428 19:40:42.051391 24611 net.cpp:408] loss <- ip3
I0428 19:40:42.051395 24611 net.cpp:408] loss <- label
I0428 19:40:42.051400 24611 net.cpp:382] loss -> loss
I0428 19:40:42.051419 24611 layer_factory.hpp:77] Creating layer loss
I0428 19:40:42.051684 24611 net.cpp:124] Setting up loss
I0428 19:40:42.051697 24611 net.cpp:131] Top shape: (1)
I0428 19:40:42.051700 24611 net.cpp:134]     with loss weight 1
I0428 19:40:42.051715 24611 net.cpp:139] Memory required for data: 707844
I0428 19:40:42.051719 24611 net.cpp:200] loss needs backward computation.
I0428 19:40:42.051723 24611 net.cpp:200] relu3 needs backward computation.
I0428 19:40:42.051726 24611 net.cpp:200] ip3 needs backward computation.
I0428 19:40:42.051730 24611 net.cpp:200] relu2 needs backward computation.
I0428 19:40:42.051733 24611 net.cpp:200] ip2 needs backward computation.
I0428 19:40:42.051736 24611 net.cpp:200] relu1 needs backward computation.
I0428 19:40:42.051739 24611 net.cpp:200] ip1 needs backward computation.
I0428 19:40:42.051743 24611 net.cpp:200] pool1 needs backward computation.
I0428 19:40:42.051745 24611 net.cpp:200] conv1 needs backward computation.
I0428 19:40:42.051749 24611 net.cpp:200] pool0 needs backward computation.
I0428 19:40:42.051753 24611 net.cpp:200] conv0 needs backward computation.
I0428 19:40:42.051756 24611 net.cpp:202] mnist does not need backward computation.
I0428 19:40:42.051759 24611 net.cpp:244] This network produces output loss
I0428 19:40:42.051769 24611 net.cpp:257] Network initialization done.
I0428 19:40:42.052115 24611 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test342.prototxt
I0428 19:40:42.052145 24611 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:42.052250 24611 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:42.052340 24611 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:42.052389 24611 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:42.052403 24611 net.cpp:86] Creating Layer mnist
I0428 19:40:42.052409 24611 net.cpp:382] mnist -> data
I0428 19:40:42.052417 24611 net.cpp:382] mnist -> label
I0428 19:40:42.052513 24611 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:42.054548 24611 net.cpp:124] Setting up mnist
I0428 19:40:42.054561 24611 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:42.054567 24611 net.cpp:131] Top shape: 100 (100)
I0428 19:40:42.054570 24611 net.cpp:139] Memory required for data: 314000
I0428 19:40:42.054574 24611 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:42.054585 24611 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:42.054589 24611 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:42.054622 24611 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:42.054630 24611 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:42.054675 24611 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:42.054683 24611 net.cpp:131] Top shape: 100 (100)
I0428 19:40:42.054687 24611 net.cpp:131] Top shape: 100 (100)
I0428 19:40:42.054690 24611 net.cpp:139] Memory required for data: 314800
I0428 19:40:42.054693 24611 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:42.054704 24611 net.cpp:86] Creating Layer conv0
I0428 19:40:42.054708 24611 net.cpp:408] conv0 <- data
I0428 19:40:42.054713 24611 net.cpp:382] conv0 -> conv0
I0428 19:40:42.056383 24611 net.cpp:124] Setting up conv0
I0428 19:40:42.056398 24611 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:42.056402 24611 net.cpp:139] Memory required for data: 775600
I0428 19:40:42.056412 24611 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:42.056419 24611 net.cpp:86] Creating Layer pool0
I0428 19:40:42.056423 24611 net.cpp:408] pool0 <- conv0
I0428 19:40:42.056430 24611 net.cpp:382] pool0 -> pool0
I0428 19:40:42.056470 24611 net.cpp:124] Setting up pool0
I0428 19:40:42.056476 24611 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:42.056480 24611 net.cpp:139] Memory required for data: 890800
I0428 19:40:42.056483 24611 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:42.056494 24611 net.cpp:86] Creating Layer conv1
I0428 19:40:42.056499 24611 net.cpp:408] conv1 <- pool0
I0428 19:40:42.056504 24611 net.cpp:382] conv1 -> conv1
I0428 19:40:42.058118 24611 net.cpp:124] Setting up conv1
I0428 19:40:42.058133 24611 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:42.058137 24611 net.cpp:139] Memory required for data: 1018800
I0428 19:40:42.058147 24611 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:42.058156 24611 net.cpp:86] Creating Layer pool1
I0428 19:40:42.058159 24611 net.cpp:408] pool1 <- conv1
I0428 19:40:42.058166 24611 net.cpp:382] pool1 -> pool1
I0428 19:40:42.058208 24611 net.cpp:124] Setting up pool1
I0428 19:40:42.058214 24611 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:42.058218 24611 net.cpp:139] Memory required for data: 1050800
I0428 19:40:42.058221 24611 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:42.058243 24611 net.cpp:86] Creating Layer ip1
I0428 19:40:42.058245 24611 net.cpp:408] ip1 <- pool1
I0428 19:40:42.058254 24611 net.cpp:382] ip1 -> ip1
I0428 19:40:42.058393 24611 net.cpp:124] Setting up ip1
I0428 19:40:42.058401 24611 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:42.058416 24611 net.cpp:139] Memory required for data: 1070800
I0428 19:40:42.058425 24611 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:42.058430 24611 net.cpp:86] Creating Layer relu1
I0428 19:40:42.058435 24611 net.cpp:408] relu1 <- ip1
I0428 19:40:42.058440 24611 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:42.058621 24611 net.cpp:124] Setting up relu1
I0428 19:40:42.058632 24611 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:42.058642 24611 net.cpp:139] Memory required for data: 1090800
I0428 19:40:42.058646 24611 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:42.058655 24611 net.cpp:86] Creating Layer ip2
I0428 19:40:42.058660 24611 net.cpp:408] ip2 <- ip1
I0428 19:40:42.058665 24611 net.cpp:382] ip2 -> ip2
I0428 19:40:42.058778 24611 net.cpp:124] Setting up ip2
I0428 19:40:42.058785 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.058789 24611 net.cpp:139] Memory required for data: 1094800
I0428 19:40:42.058794 24611 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:42.058800 24611 net.cpp:86] Creating Layer relu2
I0428 19:40:42.058804 24611 net.cpp:408] relu2 <- ip2
I0428 19:40:42.058809 24611 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:42.059000 24611 net.cpp:124] Setting up relu2
I0428 19:40:42.059010 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.059013 24611 net.cpp:139] Memory required for data: 1098800
I0428 19:40:42.059016 24611 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:42.059023 24611 net.cpp:86] Creating Layer ip3
I0428 19:40:42.059027 24611 net.cpp:408] ip3 <- ip2
I0428 19:40:42.059034 24611 net.cpp:382] ip3 -> ip3
I0428 19:40:42.059155 24611 net.cpp:124] Setting up ip3
I0428 19:40:42.059165 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.059167 24611 net.cpp:139] Memory required for data: 1102800
I0428 19:40:42.059176 24611 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:42.059180 24611 net.cpp:86] Creating Layer relu3
I0428 19:40:42.059185 24611 net.cpp:408] relu3 <- ip3
I0428 19:40:42.059188 24611 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:42.060091 24611 net.cpp:124] Setting up relu3
I0428 19:40:42.060104 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.060109 24611 net.cpp:139] Memory required for data: 1106800
I0428 19:40:42.060113 24611 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:42.060120 24611 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:42.060123 24611 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:42.060129 24611 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:42.060137 24611 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:42.060185 24611 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:42.060197 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.060201 24611 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:42.060204 24611 net.cpp:139] Memory required for data: 1114800
I0428 19:40:42.060209 24611 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:42.060215 24611 net.cpp:86] Creating Layer accuracy
I0428 19:40:42.060225 24611 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:42.060228 24611 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:42.060233 24611 net.cpp:382] accuracy -> accuracy
I0428 19:40:42.060248 24611 net.cpp:124] Setting up accuracy
I0428 19:40:42.060252 24611 net.cpp:131] Top shape: (1)
I0428 19:40:42.060266 24611 net.cpp:139] Memory required for data: 1114804
I0428 19:40:42.060269 24611 layer_factory.hpp:77] Creating layer loss
I0428 19:40:42.060276 24611 net.cpp:86] Creating Layer loss
I0428 19:40:42.060281 24611 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:42.060284 24611 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:42.060289 24611 net.cpp:382] loss -> loss
I0428 19:40:42.060297 24611 layer_factory.hpp:77] Creating layer loss
I0428 19:40:42.060559 24611 net.cpp:124] Setting up loss
I0428 19:40:42.060569 24611 net.cpp:131] Top shape: (1)
I0428 19:40:42.060572 24611 net.cpp:134]     with loss weight 1
I0428 19:40:42.060578 24611 net.cpp:139] Memory required for data: 1114808
I0428 19:40:42.060592 24611 net.cpp:200] loss needs backward computation.
I0428 19:40:42.060597 24611 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:42.060601 24611 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:42.060606 24611 net.cpp:200] relu3 needs backward computation.
I0428 19:40:42.060608 24611 net.cpp:200] ip3 needs backward computation.
I0428 19:40:42.060617 24611 net.cpp:200] relu2 needs backward computation.
I0428 19:40:42.060621 24611 net.cpp:200] ip2 needs backward computation.
I0428 19:40:42.060624 24611 net.cpp:200] relu1 needs backward computation.
I0428 19:40:42.060627 24611 net.cpp:200] ip1 needs backward computation.
I0428 19:40:42.060636 24611 net.cpp:200] pool1 needs backward computation.
I0428 19:40:42.060639 24611 net.cpp:200] conv1 needs backward computation.
I0428 19:40:42.060643 24611 net.cpp:200] pool0 needs backward computation.
I0428 19:40:42.060657 24611 net.cpp:200] conv0 needs backward computation.
I0428 19:40:42.060662 24611 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:42.060665 24611 net.cpp:202] mnist does not need backward computation.
I0428 19:40:42.060668 24611 net.cpp:244] This network produces output accuracy
I0428 19:40:42.060672 24611 net.cpp:244] This network produces output loss
I0428 19:40:42.060684 24611 net.cpp:257] Network initialization done.
I0428 19:40:42.060729 24611 solver.cpp:56] Solver scaffolding done.
I0428 19:40:42.061102 24611 caffe.cpp:248] Starting Optimization
I0428 19:40:42.061110 24611 solver.cpp:273] Solving LeNet
I0428 19:40:42.061113 24611 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:42.061941 24611 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:42.063930 24611 blocking_queue.cpp:49] Waiting for data
I0428 19:40:42.135911 24618 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:42.136368 24611 solver.cpp:398]     Test net output #0: accuracy = 0.1021
I0428 19:40:42.136386 24611 solver.cpp:398]     Test net output #1: loss = 2.29337 (* 1 = 2.29337 loss)
I0428 19:40:42.138367 24611 solver.cpp:219] Iteration 0 (0 iter/s, 0.0772249s/100 iters), loss = 2.28763
I0428 19:40:42.138389 24611 solver.cpp:238]     Train net output #0: loss = 2.28763 (* 1 = 2.28763 loss)
I0428 19:40:42.138417 24611 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:42.210957 24611 solver.cpp:219] Iteration 100 (1378.25 iter/s, 0.0725555s/100 iters), loss = 1.93912
I0428 19:40:42.210980 24611 solver.cpp:238]     Train net output #0: loss = 1.93912 (* 1 = 1.93912 loss)
I0428 19:40:42.211001 24611 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:42.282281 24611 solver.cpp:219] Iteration 200 (1402.76 iter/s, 0.0712878s/100 iters), loss = 1.20187
I0428 19:40:42.282315 24611 solver.cpp:238]     Train net output #0: loss = 1.20187 (* 1 = 1.20187 loss)
I0428 19:40:42.282320 24611 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:42.354405 24611 solver.cpp:219] Iteration 300 (1387.32 iter/s, 0.0720814s/100 iters), loss = 1.41862
I0428 19:40:42.354431 24611 solver.cpp:238]     Train net output #0: loss = 1.41862 (* 1 = 1.41862 loss)
I0428 19:40:42.354437 24611 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:42.424657 24611 solver.cpp:219] Iteration 400 (1424.52 iter/s, 0.0701993s/100 iters), loss = 1.24257
I0428 19:40:42.424697 24611 solver.cpp:238]     Train net output #0: loss = 1.24257 (* 1 = 1.24257 loss)
I0428 19:40:42.424721 24611 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:42.494184 24611 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:42.569106 24618 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:42.569567 24611 solver.cpp:398]     Test net output #0: accuracy = 0.5773
I0428 19:40:42.569586 24611 solver.cpp:398]     Test net output #1: loss = 1.09925 (* 1 = 1.09925 loss)
I0428 19:40:42.570343 24611 solver.cpp:219] Iteration 500 (686.719 iter/s, 0.14562s/100 iters), loss = 1.18215
I0428 19:40:42.570366 24611 solver.cpp:238]     Train net output #0: loss = 1.18215 (* 1 = 1.18215 loss)
I0428 19:40:42.570389 24611 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:42.641978 24611 solver.cpp:219] Iteration 600 (1396.67 iter/s, 0.0715991s/100 iters), loss = 0.906989
I0428 19:40:42.642004 24611 solver.cpp:238]     Train net output #0: loss = 0.906989 (* 1 = 0.906989 loss)
I0428 19:40:42.642024 24611 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:42.712862 24611 solver.cpp:219] Iteration 700 (1411.5 iter/s, 0.0708465s/100 iters), loss = 0.942595
I0428 19:40:42.712918 24611 solver.cpp:238]     Train net output #0: loss = 0.942595 (* 1 = 0.942595 loss)
I0428 19:40:42.712925 24611 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:42.785197 24611 solver.cpp:219] Iteration 800 (1383.51 iter/s, 0.07228s/100 iters), loss = 1.35973
I0428 19:40:42.785231 24611 solver.cpp:238]     Train net output #0: loss = 1.35973 (* 1 = 1.35973 loss)
I0428 19:40:42.785240 24611 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:42.881564 24611 solver.cpp:219] Iteration 900 (1038.24 iter/s, 0.0963164s/100 iters), loss = 1.11691
I0428 19:40:42.881603 24611 solver.cpp:238]     Train net output #0: loss = 1.11691 (* 1 = 1.11691 loss)
I0428 19:40:42.881616 24611 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:42.908586 24617 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:42.957182 24611 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:42.957906 24611 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:42.958344 24611 solver.cpp:311] Iteration 1000, loss = 0.961914
I0428 19:40:42.958360 24611 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:43.032732 24618 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:43.033344 24611 solver.cpp:398]     Test net output #0: accuracy = 0.5881
I0428 19:40:43.033372 24611 solver.cpp:398]     Test net output #1: loss = 1.02693 (* 1 = 1.02693 loss)
I0428 19:40:43.033380 24611 solver.cpp:316] Optimization Done.
I0428 19:40:43.033385 24611 caffe.cpp:259] Optimization Done.
