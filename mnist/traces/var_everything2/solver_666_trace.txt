I0428 19:52:36.421072 27551 caffe.cpp:218] Using GPUs 0
I0428 19:52:36.458571 27551 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:36.969072 27551 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test666.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:36.969226 27551 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test666.prototxt
I0428 19:52:36.969604 27551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:36.969621 27551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:36.969712 27551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:36.969787 27551 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:36.969885 27551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:36.969909 27551 net.cpp:86] Creating Layer mnist
I0428 19:52:36.969918 27551 net.cpp:382] mnist -> data
I0428 19:52:36.969940 27551 net.cpp:382] mnist -> label
I0428 19:52:36.971071 27551 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:36.973637 27551 net.cpp:124] Setting up mnist
I0428 19:52:36.973657 27551 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:36.973664 27551 net.cpp:131] Top shape: 64 (64)
I0428 19:52:36.973668 27551 net.cpp:139] Memory required for data: 200960
I0428 19:52:36.973675 27551 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:36.973691 27551 net.cpp:86] Creating Layer conv0
I0428 19:52:36.973697 27551 net.cpp:408] conv0 <- data
I0428 19:52:36.973708 27551 net.cpp:382] conv0 -> conv0
I0428 19:52:37.264464 27551 net.cpp:124] Setting up conv0
I0428 19:52:37.264494 27551 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:37.264499 27551 net.cpp:139] Memory required for data: 938240
I0428 19:52:37.264535 27551 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:37.264549 27551 net.cpp:86] Creating Layer pool0
I0428 19:52:37.264554 27551 net.cpp:408] pool0 <- conv0
I0428 19:52:37.264561 27551 net.cpp:382] pool0 -> pool0
I0428 19:52:37.264616 27551 net.cpp:124] Setting up pool0
I0428 19:52:37.264624 27551 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:37.264628 27551 net.cpp:139] Memory required for data: 1122560
I0428 19:52:37.264632 27551 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:37.264643 27551 net.cpp:86] Creating Layer conv1
I0428 19:52:37.264647 27551 net.cpp:408] conv1 <- pool0
I0428 19:52:37.264652 27551 net.cpp:382] conv1 -> conv1
I0428 19:52:37.267660 27551 net.cpp:124] Setting up conv1
I0428 19:52:37.267680 27551 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:37.267685 27551 net.cpp:139] Memory required for data: 1941760
I0428 19:52:37.267694 27551 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:37.267702 27551 net.cpp:86] Creating Layer pool1
I0428 19:52:37.267707 27551 net.cpp:408] pool1 <- conv1
I0428 19:52:37.267712 27551 net.cpp:382] pool1 -> pool1
I0428 19:52:37.267755 27551 net.cpp:124] Setting up pool1
I0428 19:52:37.267761 27551 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:37.267765 27551 net.cpp:139] Memory required for data: 2146560
I0428 19:52:37.267768 27551 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:37.267781 27551 net.cpp:86] Creating Layer ip1
I0428 19:52:37.267783 27551 net.cpp:408] ip1 <- pool1
I0428 19:52:37.267788 27551 net.cpp:382] ip1 -> ip1
I0428 19:52:37.267940 27551 net.cpp:124] Setting up ip1
I0428 19:52:37.267949 27551 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:37.267953 27551 net.cpp:139] Memory required for data: 2149120
I0428 19:52:37.267961 27551 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:37.267967 27551 net.cpp:86] Creating Layer relu1
I0428 19:52:37.267971 27551 net.cpp:408] relu1 <- ip1
I0428 19:52:37.267976 27551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:37.268152 27551 net.cpp:124] Setting up relu1
I0428 19:52:37.268162 27551 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:37.268165 27551 net.cpp:139] Memory required for data: 2151680
I0428 19:52:37.268169 27551 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:37.268175 27551 net.cpp:86] Creating Layer ip2
I0428 19:52:37.268179 27551 net.cpp:408] ip2 <- ip1
I0428 19:52:37.268184 27551 net.cpp:382] ip2 -> ip2
I0428 19:52:37.268283 27551 net.cpp:124] Setting up ip2
I0428 19:52:37.268290 27551 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:37.268295 27551 net.cpp:139] Memory required for data: 2154240
I0428 19:52:37.268301 27551 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:37.268307 27551 net.cpp:86] Creating Layer relu2
I0428 19:52:37.268311 27551 net.cpp:408] relu2 <- ip2
I0428 19:52:37.268316 27551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:37.269110 27551 net.cpp:124] Setting up relu2
I0428 19:52:37.269124 27551 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:37.269127 27551 net.cpp:139] Memory required for data: 2156800
I0428 19:52:37.269131 27551 layer_factory.hpp:77] Creating layer loss
I0428 19:52:37.269139 27551 net.cpp:86] Creating Layer loss
I0428 19:52:37.269141 27551 net.cpp:408] loss <- ip2
I0428 19:52:37.269146 27551 net.cpp:408] loss <- label
I0428 19:52:37.269152 27551 net.cpp:382] loss -> loss
I0428 19:52:37.269173 27551 layer_factory.hpp:77] Creating layer loss
I0428 19:52:37.269441 27551 net.cpp:124] Setting up loss
I0428 19:52:37.269454 27551 net.cpp:131] Top shape: (1)
I0428 19:52:37.269457 27551 net.cpp:134]     with loss weight 1
I0428 19:52:37.269474 27551 net.cpp:139] Memory required for data: 2156804
I0428 19:52:37.269477 27551 net.cpp:200] loss needs backward computation.
I0428 19:52:37.269481 27551 net.cpp:200] relu2 needs backward computation.
I0428 19:52:37.269485 27551 net.cpp:200] ip2 needs backward computation.
I0428 19:52:37.269489 27551 net.cpp:200] relu1 needs backward computation.
I0428 19:52:37.269491 27551 net.cpp:200] ip1 needs backward computation.
I0428 19:52:37.269506 27551 net.cpp:200] pool1 needs backward computation.
I0428 19:52:37.269510 27551 net.cpp:200] conv1 needs backward computation.
I0428 19:52:37.269513 27551 net.cpp:200] pool0 needs backward computation.
I0428 19:52:37.269516 27551 net.cpp:200] conv0 needs backward computation.
I0428 19:52:37.269520 27551 net.cpp:202] mnist does not need backward computation.
I0428 19:52:37.269525 27551 net.cpp:244] This network produces output loss
I0428 19:52:37.269533 27551 net.cpp:257] Network initialization done.
I0428 19:52:37.269839 27551 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test666.prototxt
I0428 19:52:37.269865 27551 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:37.269964 27551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:37.270041 27551 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:37.270105 27551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:37.270126 27551 net.cpp:86] Creating Layer mnist
I0428 19:52:37.270135 27551 net.cpp:382] mnist -> data
I0428 19:52:37.270155 27551 net.cpp:382] mnist -> label
I0428 19:52:37.270244 27551 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:37.272500 27551 net.cpp:124] Setting up mnist
I0428 19:52:37.272514 27551 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:37.272521 27551 net.cpp:131] Top shape: 100 (100)
I0428 19:52:37.272523 27551 net.cpp:139] Memory required for data: 314000
I0428 19:52:37.272527 27551 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:37.272538 27551 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:37.272542 27551 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:37.272547 27551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:37.272554 27551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:37.272603 27551 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:37.272619 27551 net.cpp:131] Top shape: 100 (100)
I0428 19:52:37.272624 27551 net.cpp:131] Top shape: 100 (100)
I0428 19:52:37.272627 27551 net.cpp:139] Memory required for data: 314800
I0428 19:52:37.272630 27551 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:37.272639 27551 net.cpp:86] Creating Layer conv0
I0428 19:52:37.272644 27551 net.cpp:408] conv0 <- data
I0428 19:52:37.272649 27551 net.cpp:382] conv0 -> conv0
I0428 19:52:37.274364 27551 net.cpp:124] Setting up conv0
I0428 19:52:37.274380 27551 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:37.274384 27551 net.cpp:139] Memory required for data: 1466800
I0428 19:52:37.274394 27551 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:37.274400 27551 net.cpp:86] Creating Layer pool0
I0428 19:52:37.274405 27551 net.cpp:408] pool0 <- conv0
I0428 19:52:37.274410 27551 net.cpp:382] pool0 -> pool0
I0428 19:52:37.274446 27551 net.cpp:124] Setting up pool0
I0428 19:52:37.274451 27551 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:37.274454 27551 net.cpp:139] Memory required for data: 1754800
I0428 19:52:37.274457 27551 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:37.274466 27551 net.cpp:86] Creating Layer conv1
I0428 19:52:37.274471 27551 net.cpp:408] conv1 <- pool0
I0428 19:52:37.274476 27551 net.cpp:382] conv1 -> conv1
I0428 19:52:37.276075 27551 net.cpp:124] Setting up conv1
I0428 19:52:37.276098 27551 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:37.276104 27551 net.cpp:139] Memory required for data: 3034800
I0428 19:52:37.276118 27551 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:37.276129 27551 net.cpp:86] Creating Layer pool1
I0428 19:52:37.276134 27551 net.cpp:408] pool1 <- conv1
I0428 19:52:37.276145 27551 net.cpp:382] pool1 -> pool1
I0428 19:52:37.276199 27551 net.cpp:124] Setting up pool1
I0428 19:52:37.276209 27551 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:37.276212 27551 net.cpp:139] Memory required for data: 3354800
I0428 19:52:37.276216 27551 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:37.276224 27551 net.cpp:86] Creating Layer ip1
I0428 19:52:37.276228 27551 net.cpp:408] ip1 <- pool1
I0428 19:52:37.276237 27551 net.cpp:382] ip1 -> ip1
I0428 19:52:37.276392 27551 net.cpp:124] Setting up ip1
I0428 19:52:37.276401 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.276404 27551 net.cpp:139] Memory required for data: 3358800
I0428 19:52:37.276412 27551 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:37.276427 27551 net.cpp:86] Creating Layer relu1
I0428 19:52:37.276430 27551 net.cpp:408] relu1 <- ip1
I0428 19:52:37.276437 27551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:37.276613 27551 net.cpp:124] Setting up relu1
I0428 19:52:37.276623 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.276626 27551 net.cpp:139] Memory required for data: 3362800
I0428 19:52:37.276629 27551 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:37.276636 27551 net.cpp:86] Creating Layer ip2
I0428 19:52:37.276640 27551 net.cpp:408] ip2 <- ip1
I0428 19:52:37.276646 27551 net.cpp:382] ip2 -> ip2
I0428 19:52:37.276751 27551 net.cpp:124] Setting up ip2
I0428 19:52:37.276759 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.276764 27551 net.cpp:139] Memory required for data: 3366800
I0428 19:52:37.276774 27551 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:37.276779 27551 net.cpp:86] Creating Layer relu2
I0428 19:52:37.276789 27551 net.cpp:408] relu2 <- ip2
I0428 19:52:37.276795 27551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:37.277067 27551 net.cpp:124] Setting up relu2
I0428 19:52:37.277078 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.277082 27551 net.cpp:139] Memory required for data: 3370800
I0428 19:52:37.277086 27551 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:37.277091 27551 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:37.277096 27551 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:37.277101 27551 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:37.277117 27551 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:37.277164 27551 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:37.277173 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.277176 27551 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:37.277179 27551 net.cpp:139] Memory required for data: 3378800
I0428 19:52:37.277182 27551 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:37.277189 27551 net.cpp:86] Creating Layer accuracy
I0428 19:52:37.277191 27551 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:37.277195 27551 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:37.277201 27551 net.cpp:382] accuracy -> accuracy
I0428 19:52:37.277214 27551 net.cpp:124] Setting up accuracy
I0428 19:52:37.277217 27551 net.cpp:131] Top shape: (1)
I0428 19:52:37.277220 27551 net.cpp:139] Memory required for data: 3378804
I0428 19:52:37.277225 27551 layer_factory.hpp:77] Creating layer loss
I0428 19:52:37.277230 27551 net.cpp:86] Creating Layer loss
I0428 19:52:37.277232 27551 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:37.277241 27551 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:37.277245 27551 net.cpp:382] loss -> loss
I0428 19:52:37.277253 27551 layer_factory.hpp:77] Creating layer loss
I0428 19:52:37.277513 27551 net.cpp:124] Setting up loss
I0428 19:52:37.277523 27551 net.cpp:131] Top shape: (1)
I0428 19:52:37.277528 27551 net.cpp:134]     with loss weight 1
I0428 19:52:37.277534 27551 net.cpp:139] Memory required for data: 3378808
I0428 19:52:37.277537 27551 net.cpp:200] loss needs backward computation.
I0428 19:52:37.277540 27551 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:37.277545 27551 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:37.277555 27551 net.cpp:200] relu2 needs backward computation.
I0428 19:52:37.277559 27551 net.cpp:200] ip2 needs backward computation.
I0428 19:52:37.277562 27551 net.cpp:200] relu1 needs backward computation.
I0428 19:52:37.277565 27551 net.cpp:200] ip1 needs backward computation.
I0428 19:52:37.277568 27551 net.cpp:200] pool1 needs backward computation.
I0428 19:52:37.277571 27551 net.cpp:200] conv1 needs backward computation.
I0428 19:52:37.277575 27551 net.cpp:200] pool0 needs backward computation.
I0428 19:52:37.277585 27551 net.cpp:200] conv0 needs backward computation.
I0428 19:52:37.277588 27551 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:37.277591 27551 net.cpp:202] mnist does not need backward computation.
I0428 19:52:37.277595 27551 net.cpp:244] This network produces output accuracy
I0428 19:52:37.277603 27551 net.cpp:244] This network produces output loss
I0428 19:52:37.277616 27551 net.cpp:257] Network initialization done.
I0428 19:52:37.277660 27551 solver.cpp:56] Solver scaffolding done.
I0428 19:52:37.277947 27551 caffe.cpp:248] Starting Optimization
I0428 19:52:37.277956 27551 solver.cpp:273] Solving LeNet
I0428 19:52:37.277959 27551 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:37.278100 27551 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:37.282384 27551 blocking_queue.cpp:49] Waiting for data
I0428 19:52:37.353435 27558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:37.353893 27551 solver.cpp:398]     Test net output #0: accuracy = 0.1182
I0428 19:52:37.353911 27551 solver.cpp:398]     Test net output #1: loss = 2.32156 (* 1 = 2.32156 loss)
I0428 19:52:37.356353 27551 solver.cpp:219] Iteration 0 (-9.34774e-31 iter/s, 0.0783667s/100 iters), loss = 2.3174
I0428 19:52:37.356393 27551 solver.cpp:238]     Train net output #0: loss = 2.3174 (* 1 = 2.3174 loss)
I0428 19:52:37.356420 27551 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:37.462151 27551 solver.cpp:219] Iteration 100 (945.678 iter/s, 0.105744s/100 iters), loss = 0.43773
I0428 19:52:37.462174 27551 solver.cpp:238]     Train net output #0: loss = 0.43773 (* 1 = 0.43773 loss)
I0428 19:52:37.462180 27551 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:37.558853 27551 solver.cpp:219] Iteration 200 (1034.47 iter/s, 0.0966676s/100 iters), loss = 0.187172
I0428 19:52:37.558921 27551 solver.cpp:238]     Train net output #0: loss = 0.187172 (* 1 = 0.187172 loss)
I0428 19:52:37.558929 27551 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:37.654654 27551 solver.cpp:219] Iteration 300 (1044.68 iter/s, 0.0957235s/100 iters), loss = 0.176993
I0428 19:52:37.654696 27551 solver.cpp:238]     Train net output #0: loss = 0.176993 (* 1 = 0.176993 loss)
I0428 19:52:37.654702 27551 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:37.755388 27551 solver.cpp:219] Iteration 400 (993.229 iter/s, 0.100682s/100 iters), loss = 0.094072
I0428 19:52:37.755412 27551 solver.cpp:238]     Train net output #0: loss = 0.0940719 (* 1 = 0.0940719 loss)
I0428 19:52:37.755419 27551 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:37.857056 27551 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:37.933550 27558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:37.934046 27551 solver.cpp:398]     Test net output #0: accuracy = 0.9604
I0428 19:52:37.934065 27551 solver.cpp:398]     Test net output #1: loss = 0.122877 (* 1 = 0.122877 loss)
I0428 19:52:37.935060 27551 solver.cpp:219] Iteration 500 (556.696 iter/s, 0.179631s/100 iters), loss = 0.145388
I0428 19:52:37.935119 27551 solver.cpp:238]     Train net output #0: loss = 0.145388 (* 1 = 0.145388 loss)
I0428 19:52:37.935127 27551 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:38.041999 27551 solver.cpp:219] Iteration 600 (935.711 iter/s, 0.106871s/100 iters), loss = 0.149066
I0428 19:52:38.042042 27551 solver.cpp:238]     Train net output #0: loss = 0.149066 (* 1 = 0.149066 loss)
I0428 19:52:38.042047 27551 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:38.138841 27551 solver.cpp:219] Iteration 700 (1032.98 iter/s, 0.0968069s/100 iters), loss = 0.158807
I0428 19:52:38.138866 27551 solver.cpp:238]     Train net output #0: loss = 0.158807 (* 1 = 0.158807 loss)
I0428 19:52:38.138872 27551 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:38.233496 27551 solver.cpp:219] Iteration 800 (1056.85 iter/s, 0.0946206s/100 iters), loss = 0.3233
I0428 19:52:38.233520 27551 solver.cpp:238]     Train net output #0: loss = 0.3233 (* 1 = 0.3233 loss)
I0428 19:52:38.233526 27551 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:38.328646 27551 solver.cpp:219] Iteration 900 (1051.35 iter/s, 0.0951161s/100 iters), loss = 0.12847
I0428 19:52:38.328670 27551 solver.cpp:238]     Train net output #0: loss = 0.12847 (* 1 = 0.12847 loss)
I0428 19:52:38.328676 27551 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:38.359840 27557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:38.421491 27551 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:38.422533 27551 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:38.423115 27551 solver.cpp:311] Iteration 1000, loss = 0.13047
I0428 19:52:38.423130 27551 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:38.499907 27558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:38.500396 27551 solver.cpp:398]     Test net output #0: accuracy = 0.9773
I0428 19:52:38.500417 27551 solver.cpp:398]     Test net output #1: loss = 0.0761721 (* 1 = 0.0761721 loss)
I0428 19:52:38.500422 27551 solver.cpp:316] Optimization Done.
I0428 19:52:38.500425 27551 caffe.cpp:259] Optimization Done.
