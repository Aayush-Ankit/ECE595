I0428 19:49:45.307585 26846 caffe.cpp:218] Using GPUs 0
I0428 19:49:45.344087 26846 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:45.853593 26846 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test584.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:45.853745 26846 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test584.prototxt
I0428 19:49:45.854162 26846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:45.854185 26846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:45.854290 26846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:45.854373 26846 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:45.854476 26846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:45.854501 26846 net.cpp:86] Creating Layer mnist
I0428 19:49:45.854511 26846 net.cpp:382] mnist -> data
I0428 19:49:45.854533 26846 net.cpp:382] mnist -> label
I0428 19:49:45.855628 26846 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:45.858081 26846 net.cpp:124] Setting up mnist
I0428 19:49:45.858100 26846 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:45.858108 26846 net.cpp:131] Top shape: 64 (64)
I0428 19:49:45.858113 26846 net.cpp:139] Memory required for data: 200960
I0428 19:49:45.858119 26846 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:45.858134 26846 net.cpp:86] Creating Layer conv0
I0428 19:49:45.858155 26846 net.cpp:408] conv0 <- data
I0428 19:49:45.858170 26846 net.cpp:382] conv0 -> conv0
I0428 19:49:46.136492 26846 net.cpp:124] Setting up conv0
I0428 19:49:46.136518 26846 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:46.136523 26846 net.cpp:139] Memory required for data: 938240
I0428 19:49:46.136536 26846 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:46.136548 26846 net.cpp:86] Creating Layer pool0
I0428 19:49:46.136553 26846 net.cpp:408] pool0 <- conv0
I0428 19:49:46.136559 26846 net.cpp:382] pool0 -> pool0
I0428 19:49:46.136602 26846 net.cpp:124] Setting up pool0
I0428 19:49:46.136610 26846 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:46.136613 26846 net.cpp:139] Memory required for data: 1122560
I0428 19:49:46.136616 26846 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:46.136627 26846 net.cpp:86] Creating Layer conv1
I0428 19:49:46.136631 26846 net.cpp:408] conv1 <- pool0
I0428 19:49:46.136636 26846 net.cpp:382] conv1 -> conv1
I0428 19:49:46.138690 26846 net.cpp:124] Setting up conv1
I0428 19:49:46.138722 26846 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:46.138726 26846 net.cpp:139] Memory required for data: 1204480
I0428 19:49:46.138737 26846 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:46.138746 26846 net.cpp:86] Creating Layer pool1
I0428 19:49:46.138748 26846 net.cpp:408] pool1 <- conv1
I0428 19:49:46.138756 26846 net.cpp:382] pool1 -> pool1
I0428 19:49:46.138794 26846 net.cpp:124] Setting up pool1
I0428 19:49:46.138803 26846 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:46.138806 26846 net.cpp:139] Memory required for data: 1224960
I0428 19:49:46.138809 26846 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:46.138816 26846 net.cpp:86] Creating Layer ip1
I0428 19:49:46.138820 26846 net.cpp:408] ip1 <- pool1
I0428 19:49:46.138826 26846 net.cpp:382] ip1 -> ip1
I0428 19:49:46.139863 26846 net.cpp:124] Setting up ip1
I0428 19:49:46.139894 26846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:46.139896 26846 net.cpp:139] Memory required for data: 1237760
I0428 19:49:46.139904 26846 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:46.139910 26846 net.cpp:86] Creating Layer relu1
I0428 19:49:46.139914 26846 net.cpp:408] relu1 <- ip1
I0428 19:49:46.139919 26846 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:46.140125 26846 net.cpp:124] Setting up relu1
I0428 19:49:46.140133 26846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:46.140136 26846 net.cpp:139] Memory required for data: 1250560
I0428 19:49:46.140139 26846 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:46.140147 26846 net.cpp:86] Creating Layer ip2
I0428 19:49:46.140151 26846 net.cpp:408] ip2 <- ip1
I0428 19:49:46.140157 26846 net.cpp:382] ip2 -> ip2
I0428 19:49:46.140291 26846 net.cpp:124] Setting up ip2
I0428 19:49:46.140300 26846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:46.140302 26846 net.cpp:139] Memory required for data: 1263360
I0428 19:49:46.140308 26846 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:46.140316 26846 net.cpp:86] Creating Layer relu2
I0428 19:49:46.140318 26846 net.cpp:408] relu2 <- ip2
I0428 19:49:46.140323 26846 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:46.141132 26846 net.cpp:124] Setting up relu2
I0428 19:49:46.141158 26846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:46.141180 26846 net.cpp:139] Memory required for data: 1276160
I0428 19:49:46.141182 26846 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:46.141191 26846 net.cpp:86] Creating Layer ip3
I0428 19:49:46.141193 26846 net.cpp:408] ip3 <- ip2
I0428 19:49:46.141198 26846 net.cpp:382] ip3 -> ip3
I0428 19:49:46.141304 26846 net.cpp:124] Setting up ip3
I0428 19:49:46.141329 26846 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:46.141331 26846 net.cpp:139] Memory required for data: 1278720
I0428 19:49:46.141340 26846 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:46.141345 26846 net.cpp:86] Creating Layer relu3
I0428 19:49:46.141347 26846 net.cpp:408] relu3 <- ip3
I0428 19:49:46.141352 26846 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:46.141536 26846 net.cpp:124] Setting up relu3
I0428 19:49:46.141544 26846 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:46.141547 26846 net.cpp:139] Memory required for data: 1281280
I0428 19:49:46.141551 26846 layer_factory.hpp:77] Creating layer loss
I0428 19:49:46.141557 26846 net.cpp:86] Creating Layer loss
I0428 19:49:46.141561 26846 net.cpp:408] loss <- ip3
I0428 19:49:46.141564 26846 net.cpp:408] loss <- label
I0428 19:49:46.141569 26846 net.cpp:382] loss -> loss
I0428 19:49:46.141583 26846 layer_factory.hpp:77] Creating layer loss
I0428 19:49:46.141842 26846 net.cpp:124] Setting up loss
I0428 19:49:46.141850 26846 net.cpp:131] Top shape: (1)
I0428 19:49:46.141855 26846 net.cpp:134]     with loss weight 1
I0428 19:49:46.141867 26846 net.cpp:139] Memory required for data: 1281284
I0428 19:49:46.141870 26846 net.cpp:200] loss needs backward computation.
I0428 19:49:46.141873 26846 net.cpp:200] relu3 needs backward computation.
I0428 19:49:46.141876 26846 net.cpp:200] ip3 needs backward computation.
I0428 19:49:46.141880 26846 net.cpp:200] relu2 needs backward computation.
I0428 19:49:46.141881 26846 net.cpp:200] ip2 needs backward computation.
I0428 19:49:46.141885 26846 net.cpp:200] relu1 needs backward computation.
I0428 19:49:46.141887 26846 net.cpp:200] ip1 needs backward computation.
I0428 19:49:46.141890 26846 net.cpp:200] pool1 needs backward computation.
I0428 19:49:46.141892 26846 net.cpp:200] conv1 needs backward computation.
I0428 19:49:46.141896 26846 net.cpp:200] pool0 needs backward computation.
I0428 19:49:46.141898 26846 net.cpp:200] conv0 needs backward computation.
I0428 19:49:46.141901 26846 net.cpp:202] mnist does not need backward computation.
I0428 19:49:46.141903 26846 net.cpp:244] This network produces output loss
I0428 19:49:46.141913 26846 net.cpp:257] Network initialization done.
I0428 19:49:46.142261 26846 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test584.prototxt
I0428 19:49:46.142302 26846 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:46.142390 26846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:46.142488 26846 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:46.142531 26846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:46.142560 26846 net.cpp:86] Creating Layer mnist
I0428 19:49:46.142565 26846 net.cpp:382] mnist -> data
I0428 19:49:46.142573 26846 net.cpp:382] mnist -> label
I0428 19:49:46.142663 26846 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:46.144722 26846 net.cpp:124] Setting up mnist
I0428 19:49:46.144752 26846 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:46.144757 26846 net.cpp:131] Top shape: 100 (100)
I0428 19:49:46.144760 26846 net.cpp:139] Memory required for data: 314000
I0428 19:49:46.144764 26846 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:46.144771 26846 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:46.144774 26846 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:46.144781 26846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:46.144788 26846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:46.144938 26846 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:46.144946 26846 net.cpp:131] Top shape: 100 (100)
I0428 19:49:46.144950 26846 net.cpp:131] Top shape: 100 (100)
I0428 19:49:46.144953 26846 net.cpp:139] Memory required for data: 314800
I0428 19:49:46.144956 26846 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:46.144968 26846 net.cpp:86] Creating Layer conv0
I0428 19:49:46.144970 26846 net.cpp:408] conv0 <- data
I0428 19:49:46.144975 26846 net.cpp:382] conv0 -> conv0
I0428 19:49:46.146533 26846 net.cpp:124] Setting up conv0
I0428 19:49:46.146545 26846 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:46.146548 26846 net.cpp:139] Memory required for data: 1466800
I0428 19:49:46.146559 26846 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:46.146565 26846 net.cpp:86] Creating Layer pool0
I0428 19:49:46.146569 26846 net.cpp:408] pool0 <- conv0
I0428 19:49:46.146574 26846 net.cpp:382] pool0 -> pool0
I0428 19:49:46.146608 26846 net.cpp:124] Setting up pool0
I0428 19:49:46.146615 26846 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:46.146616 26846 net.cpp:139] Memory required for data: 1754800
I0428 19:49:46.146620 26846 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:46.146627 26846 net.cpp:86] Creating Layer conv1
I0428 19:49:46.146631 26846 net.cpp:408] conv1 <- pool0
I0428 19:49:46.146634 26846 net.cpp:382] conv1 -> conv1
I0428 19:49:46.148869 26846 net.cpp:124] Setting up conv1
I0428 19:49:46.148883 26846 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:46.148887 26846 net.cpp:139] Memory required for data: 1882800
I0428 19:49:46.148895 26846 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:46.148928 26846 net.cpp:86] Creating Layer pool1
I0428 19:49:46.148932 26846 net.cpp:408] pool1 <- conv1
I0428 19:49:46.148937 26846 net.cpp:382] pool1 -> pool1
I0428 19:49:46.149009 26846 net.cpp:124] Setting up pool1
I0428 19:49:46.149029 26846 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:46.149031 26846 net.cpp:139] Memory required for data: 1914800
I0428 19:49:46.149034 26846 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:46.149040 26846 net.cpp:86] Creating Layer ip1
I0428 19:49:46.149050 26846 net.cpp:408] ip1 <- pool1
I0428 19:49:46.149056 26846 net.cpp:382] ip1 -> ip1
I0428 19:49:46.149211 26846 net.cpp:124] Setting up ip1
I0428 19:49:46.149219 26846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:46.149232 26846 net.cpp:139] Memory required for data: 1934800
I0428 19:49:46.149240 26846 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:46.149245 26846 net.cpp:86] Creating Layer relu1
I0428 19:49:46.149247 26846 net.cpp:408] relu1 <- ip1
I0428 19:49:46.149253 26846 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:46.149523 26846 net.cpp:124] Setting up relu1
I0428 19:49:46.149533 26846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:46.149541 26846 net.cpp:139] Memory required for data: 1954800
I0428 19:49:46.149544 26846 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:46.149552 26846 net.cpp:86] Creating Layer ip2
I0428 19:49:46.149560 26846 net.cpp:408] ip2 <- ip1
I0428 19:49:46.149565 26846 net.cpp:382] ip2 -> ip2
I0428 19:49:46.149680 26846 net.cpp:124] Setting up ip2
I0428 19:49:46.149688 26846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:46.149695 26846 net.cpp:139] Memory required for data: 1974800
I0428 19:49:46.149700 26846 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:46.149705 26846 net.cpp:86] Creating Layer relu2
I0428 19:49:46.149708 26846 net.cpp:408] relu2 <- ip2
I0428 19:49:46.149713 26846 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:46.149862 26846 net.cpp:124] Setting up relu2
I0428 19:49:46.149869 26846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:46.149873 26846 net.cpp:139] Memory required for data: 1994800
I0428 19:49:46.149874 26846 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:46.149881 26846 net.cpp:86] Creating Layer ip3
I0428 19:49:46.149883 26846 net.cpp:408] ip3 <- ip2
I0428 19:49:46.149889 26846 net.cpp:382] ip3 -> ip3
I0428 19:49:46.150032 26846 net.cpp:124] Setting up ip3
I0428 19:49:46.150038 26846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:46.150041 26846 net.cpp:139] Memory required for data: 1998800
I0428 19:49:46.150050 26846 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:46.150055 26846 net.cpp:86] Creating Layer relu3
I0428 19:49:46.150058 26846 net.cpp:408] relu3 <- ip3
I0428 19:49:46.150063 26846 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:46.150928 26846 net.cpp:124] Setting up relu3
I0428 19:49:46.150938 26846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:46.150943 26846 net.cpp:139] Memory required for data: 2002800
I0428 19:49:46.150945 26846 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:46.150951 26846 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:46.150954 26846 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:46.150959 26846 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:46.150966 26846 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:46.151013 26846 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:46.151018 26846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:46.151022 26846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:46.151024 26846 net.cpp:139] Memory required for data: 2010800
I0428 19:49:46.151027 26846 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:46.151033 26846 net.cpp:86] Creating Layer accuracy
I0428 19:49:46.151036 26846 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:46.151046 26846 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:46.151051 26846 net.cpp:382] accuracy -> accuracy
I0428 19:49:46.151057 26846 net.cpp:124] Setting up accuracy
I0428 19:49:46.151062 26846 net.cpp:131] Top shape: (1)
I0428 19:49:46.151063 26846 net.cpp:139] Memory required for data: 2010804
I0428 19:49:46.151067 26846 layer_factory.hpp:77] Creating layer loss
I0428 19:49:46.151070 26846 net.cpp:86] Creating Layer loss
I0428 19:49:46.151073 26846 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:46.151077 26846 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:46.151082 26846 net.cpp:382] loss -> loss
I0428 19:49:46.151087 26846 layer_factory.hpp:77] Creating layer loss
I0428 19:49:46.151378 26846 net.cpp:124] Setting up loss
I0428 19:49:46.151387 26846 net.cpp:131] Top shape: (1)
I0428 19:49:46.151391 26846 net.cpp:134]     with loss weight 1
I0428 19:49:46.151396 26846 net.cpp:139] Memory required for data: 2010808
I0428 19:49:46.151420 26846 net.cpp:200] loss needs backward computation.
I0428 19:49:46.151425 26846 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:46.151429 26846 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:46.151432 26846 net.cpp:200] relu3 needs backward computation.
I0428 19:49:46.151448 26846 net.cpp:200] ip3 needs backward computation.
I0428 19:49:46.151450 26846 net.cpp:200] relu2 needs backward computation.
I0428 19:49:46.151453 26846 net.cpp:200] ip2 needs backward computation.
I0428 19:49:46.151456 26846 net.cpp:200] relu1 needs backward computation.
I0428 19:49:46.151459 26846 net.cpp:200] ip1 needs backward computation.
I0428 19:49:46.151463 26846 net.cpp:200] pool1 needs backward computation.
I0428 19:49:46.151465 26846 net.cpp:200] conv1 needs backward computation.
I0428 19:49:46.151468 26846 net.cpp:200] pool0 needs backward computation.
I0428 19:49:46.151471 26846 net.cpp:200] conv0 needs backward computation.
I0428 19:49:46.151475 26846 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:46.151479 26846 net.cpp:202] mnist does not need backward computation.
I0428 19:49:46.151481 26846 net.cpp:244] This network produces output accuracy
I0428 19:49:46.151485 26846 net.cpp:244] This network produces output loss
I0428 19:49:46.151512 26846 net.cpp:257] Network initialization done.
I0428 19:49:46.151554 26846 solver.cpp:56] Solver scaffolding done.
I0428 19:49:46.151898 26846 caffe.cpp:248] Starting Optimization
I0428 19:49:46.151904 26846 solver.cpp:273] Solving LeNet
I0428 19:49:46.151913 26846 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:46.152725 26846 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:46.156622 26846 blocking_queue.cpp:49] Waiting for data
I0428 19:49:46.230383 26853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:46.230919 26846 solver.cpp:398]     Test net output #0: accuracy = 0.0801
I0428 19:49:46.230954 26846 solver.cpp:398]     Test net output #1: loss = 2.3064 (* 1 = 2.3064 loss)
I0428 19:49:46.232899 26846 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809586s/100 iters), loss = 2.30745
I0428 19:49:46.232955 26846 solver.cpp:238]     Train net output #0: loss = 2.30745 (* 1 = 2.30745 loss)
I0428 19:49:46.232967 26846 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:46.312064 26846 solver.cpp:219] Iteration 100 (1264.01 iter/s, 0.0791133s/100 iters), loss = 1.30195
I0428 19:49:46.312088 26846 solver.cpp:238]     Train net output #0: loss = 1.30195 (* 1 = 1.30195 loss)
I0428 19:49:46.312093 26846 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:46.386243 26846 solver.cpp:219] Iteration 200 (1348.69 iter/s, 0.0741458s/100 iters), loss = 1.08868
I0428 19:49:46.386266 26846 solver.cpp:238]     Train net output #0: loss = 1.08868 (* 1 = 1.08868 loss)
I0428 19:49:46.386271 26846 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:46.460789 26846 solver.cpp:219] Iteration 300 (1342.04 iter/s, 0.0745135s/100 iters), loss = 1.26631
I0428 19:49:46.460816 26846 solver.cpp:238]     Train net output #0: loss = 1.26631 (* 1 = 1.26631 loss)
I0428 19:49:46.460837 26846 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:46.535755 26846 solver.cpp:219] Iteration 400 (1334.5 iter/s, 0.0749343s/100 iters), loss = 1.23841
I0428 19:49:46.535778 26846 solver.cpp:238]     Train net output #0: loss = 1.23841 (* 1 = 1.23841 loss)
I0428 19:49:46.535782 26846 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:46.609007 26846 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:46.685606 26853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:46.686089 26846 solver.cpp:398]     Test net output #0: accuracy = 0.5746
I0428 19:49:46.686107 26846 solver.cpp:398]     Test net output #1: loss = 1.08468 (* 1 = 1.08468 loss)
I0428 19:49:46.686928 26846 solver.cpp:219] Iteration 500 (661.65 iter/s, 0.151137s/100 iters), loss = 1.1398
I0428 19:49:46.686969 26846 solver.cpp:238]     Train net output #0: loss = 1.1398 (* 1 = 1.1398 loss)
I0428 19:49:46.686992 26846 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:46.764500 26846 solver.cpp:219] Iteration 600 (1289.69 iter/s, 0.0775383s/100 iters), loss = 1.04168
I0428 19:49:46.764539 26846 solver.cpp:238]     Train net output #0: loss = 1.04168 (* 1 = 1.04168 loss)
I0428 19:49:46.764544 26846 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:46.842272 26846 solver.cpp:219] Iteration 700 (1286.34 iter/s, 0.07774s/100 iters), loss = 1.01468
I0428 19:49:46.842310 26846 solver.cpp:238]     Train net output #0: loss = 1.01468 (* 1 = 1.01468 loss)
I0428 19:49:46.842316 26846 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:46.916185 26846 solver.cpp:219] Iteration 800 (1353.82 iter/s, 0.0738652s/100 iters), loss = 1.19737
I0428 19:49:46.916239 26846 solver.cpp:238]     Train net output #0: loss = 1.19737 (* 1 = 1.19737 loss)
I0428 19:49:46.916244 26846 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:46.987709 26846 solver.cpp:219] Iteration 900 (1399.03 iter/s, 0.0714781s/100 iters), loss = 1.01524
I0428 19:49:46.987748 26846 solver.cpp:238]     Train net output #0: loss = 1.01524 (* 1 = 1.01524 loss)
I0428 19:49:46.987754 26846 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:47.011968 26852 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:47.058809 26846 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:47.059610 26846 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:47.060094 26846 solver.cpp:311] Iteration 1000, loss = 0.641985
I0428 19:49:47.060109 26846 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:47.135133 26853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:47.135653 26846 solver.cpp:398]     Test net output #0: accuracy = 0.6765
I0428 19:49:47.135687 26846 solver.cpp:398]     Test net output #1: loss = 0.812393 (* 1 = 0.812393 loss)
I0428 19:49:47.135692 26846 solver.cpp:316] Optimization Done.
I0428 19:49:47.135695 26846 caffe.cpp:259] Optimization Done.
