I0428 19:34:55.382613 23415 caffe.cpp:218] Using GPUs 0
I0428 19:34:55.423336 23415 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:34:55.944458 23415 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test214.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:34:55.944593 23415 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test214.prototxt
I0428 19:34:55.944968 23415 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:34:55.944985 23415 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:34:55.945072 23415 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:55.945140 23415 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:55.945241 23415 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:34:55.945266 23415 net.cpp:86] Creating Layer mnist
I0428 19:34:55.945272 23415 net.cpp:382] mnist -> data
I0428 19:34:55.945297 23415 net.cpp:382] mnist -> label
I0428 19:34:55.946384 23415 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:34:55.948848 23415 net.cpp:124] Setting up mnist
I0428 19:34:55.948866 23415 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:34:55.948873 23415 net.cpp:131] Top shape: 64 (64)
I0428 19:34:55.948878 23415 net.cpp:139] Memory required for data: 200960
I0428 19:34:55.948884 23415 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:55.948900 23415 net.cpp:86] Creating Layer conv0
I0428 19:34:55.948906 23415 net.cpp:408] conv0 <- data
I0428 19:34:55.948917 23415 net.cpp:382] conv0 -> conv0
I0428 19:34:56.232450 23415 net.cpp:124] Setting up conv0
I0428 19:34:56.232475 23415 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:34:56.232480 23415 net.cpp:139] Memory required for data: 7573760
I0428 19:34:56.232496 23415 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:56.232507 23415 net.cpp:86] Creating Layer pool0
I0428 19:34:56.232532 23415 net.cpp:408] pool0 <- conv0
I0428 19:34:56.232538 23415 net.cpp:382] pool0 -> pool0
I0428 19:34:56.232586 23415 net.cpp:124] Setting up pool0
I0428 19:34:56.232604 23415 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:34:56.232607 23415 net.cpp:139] Memory required for data: 9416960
I0428 19:34:56.232610 23415 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:56.232619 23415 net.cpp:86] Creating Layer ip1
I0428 19:34:56.232621 23415 net.cpp:408] ip1 <- pool0
I0428 19:34:56.232626 23415 net.cpp:382] ip1 -> ip1
I0428 19:34:56.233963 23415 net.cpp:124] Setting up ip1
I0428 19:34:56.233976 23415 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:56.233995 23415 net.cpp:139] Memory required for data: 9419520
I0428 19:34:56.234004 23415 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:56.234010 23415 net.cpp:86] Creating Layer relu1
I0428 19:34:56.234014 23415 net.cpp:408] relu1 <- ip1
I0428 19:34:56.234019 23415 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:56.234181 23415 net.cpp:124] Setting up relu1
I0428 19:34:56.234191 23415 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:56.234194 23415 net.cpp:139] Memory required for data: 9422080
I0428 19:34:56.234197 23415 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:56.234203 23415 net.cpp:86] Creating Layer ip2
I0428 19:34:56.234221 23415 net.cpp:408] ip2 <- ip1
I0428 19:34:56.234226 23415 net.cpp:382] ip2 -> ip2
I0428 19:34:56.234354 23415 net.cpp:124] Setting up ip2
I0428 19:34:56.234361 23415 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:34:56.234365 23415 net.cpp:139] Memory required for data: 9434880
I0428 19:34:56.234372 23415 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:56.234377 23415 net.cpp:86] Creating Layer relu2
I0428 19:34:56.234380 23415 net.cpp:408] relu2 <- ip2
I0428 19:34:56.234385 23415 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:56.235188 23415 net.cpp:124] Setting up relu2
I0428 19:34:56.235216 23415 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:34:56.235220 23415 net.cpp:139] Memory required for data: 9447680
I0428 19:34:56.235224 23415 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:56.235230 23415 net.cpp:86] Creating Layer ip3
I0428 19:34:56.235234 23415 net.cpp:408] ip3 <- ip2
I0428 19:34:56.235239 23415 net.cpp:382] ip3 -> ip3
I0428 19:34:56.235352 23415 net.cpp:124] Setting up ip3
I0428 19:34:56.235359 23415 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:56.235363 23415 net.cpp:139] Memory required for data: 9450240
I0428 19:34:56.235368 23415 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:56.235374 23415 net.cpp:86] Creating Layer relu3
I0428 19:34:56.235378 23415 net.cpp:408] relu3 <- ip3
I0428 19:34:56.235383 23415 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:56.235529 23415 net.cpp:124] Setting up relu3
I0428 19:34:56.235538 23415 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:56.235540 23415 net.cpp:139] Memory required for data: 9452800
I0428 19:34:56.235543 23415 layer_factory.hpp:77] Creating layer loss
I0428 19:34:56.235549 23415 net.cpp:86] Creating Layer loss
I0428 19:34:56.235553 23415 net.cpp:408] loss <- ip3
I0428 19:34:56.235556 23415 net.cpp:408] loss <- label
I0428 19:34:56.235561 23415 net.cpp:382] loss -> loss
I0428 19:34:56.235576 23415 layer_factory.hpp:77] Creating layer loss
I0428 19:34:56.235797 23415 net.cpp:124] Setting up loss
I0428 19:34:56.235806 23415 net.cpp:131] Top shape: (1)
I0428 19:34:56.235810 23415 net.cpp:134]     with loss weight 1
I0428 19:34:56.235822 23415 net.cpp:139] Memory required for data: 9452804
I0428 19:34:56.235826 23415 net.cpp:200] loss needs backward computation.
I0428 19:34:56.235831 23415 net.cpp:200] relu3 needs backward computation.
I0428 19:34:56.235832 23415 net.cpp:200] ip3 needs backward computation.
I0428 19:34:56.235836 23415 net.cpp:200] relu2 needs backward computation.
I0428 19:34:56.235838 23415 net.cpp:200] ip2 needs backward computation.
I0428 19:34:56.235841 23415 net.cpp:200] relu1 needs backward computation.
I0428 19:34:56.235844 23415 net.cpp:200] ip1 needs backward computation.
I0428 19:34:56.235858 23415 net.cpp:200] pool0 needs backward computation.
I0428 19:34:56.235862 23415 net.cpp:200] conv0 needs backward computation.
I0428 19:34:56.235865 23415 net.cpp:202] mnist does not need backward computation.
I0428 19:34:56.235867 23415 net.cpp:244] This network produces output loss
I0428 19:34:56.235875 23415 net.cpp:257] Network initialization done.
I0428 19:34:56.236217 23415 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test214.prototxt
I0428 19:34:56.236258 23415 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:34:56.236340 23415 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:56.236415 23415 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:56.236455 23415 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:34:56.236485 23415 net.cpp:86] Creating Layer mnist
I0428 19:34:56.236490 23415 net.cpp:382] mnist -> data
I0428 19:34:56.236498 23415 net.cpp:382] mnist -> label
I0428 19:34:56.236578 23415 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:34:56.237831 23415 net.cpp:124] Setting up mnist
I0428 19:34:56.237845 23415 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:34:56.237866 23415 net.cpp:131] Top shape: 100 (100)
I0428 19:34:56.237869 23415 net.cpp:139] Memory required for data: 314000
I0428 19:34:56.237874 23415 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:34:56.237879 23415 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:34:56.237884 23415 net.cpp:408] label_mnist_1_split <- label
I0428 19:34:56.237889 23415 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:34:56.237895 23415 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:34:56.238029 23415 net.cpp:124] Setting up label_mnist_1_split
I0428 19:34:56.238037 23415 net.cpp:131] Top shape: 100 (100)
I0428 19:34:56.238056 23415 net.cpp:131] Top shape: 100 (100)
I0428 19:34:56.238059 23415 net.cpp:139] Memory required for data: 314800
I0428 19:34:56.238073 23415 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:56.238083 23415 net.cpp:86] Creating Layer conv0
I0428 19:34:56.238087 23415 net.cpp:408] conv0 <- data
I0428 19:34:56.238092 23415 net.cpp:382] conv0 -> conv0
I0428 19:34:56.239711 23415 net.cpp:124] Setting up conv0
I0428 19:34:56.239723 23415 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:34:56.239727 23415 net.cpp:139] Memory required for data: 11834800
I0428 19:34:56.239737 23415 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:56.239742 23415 net.cpp:86] Creating Layer pool0
I0428 19:34:56.239745 23415 net.cpp:408] pool0 <- conv0
I0428 19:34:56.239750 23415 net.cpp:382] pool0 -> pool0
I0428 19:34:56.239785 23415 net.cpp:124] Setting up pool0
I0428 19:34:56.239792 23415 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:34:56.239795 23415 net.cpp:139] Memory required for data: 14714800
I0428 19:34:56.239799 23415 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:56.239804 23415 net.cpp:86] Creating Layer ip1
I0428 19:34:56.239825 23415 net.cpp:408] ip1 <- pool0
I0428 19:34:56.239830 23415 net.cpp:382] ip1 -> ip1
I0428 19:34:56.240324 23415 net.cpp:124] Setting up ip1
I0428 19:34:56.240332 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.240350 23415 net.cpp:139] Memory required for data: 14718800
I0428 19:34:56.240357 23415 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:56.240362 23415 net.cpp:86] Creating Layer relu1
I0428 19:34:56.240365 23415 net.cpp:408] relu1 <- ip1
I0428 19:34:56.240370 23415 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:56.240567 23415 net.cpp:124] Setting up relu1
I0428 19:34:56.240576 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.240579 23415 net.cpp:139] Memory required for data: 14722800
I0428 19:34:56.240582 23415 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:56.240588 23415 net.cpp:86] Creating Layer ip2
I0428 19:34:56.240592 23415 net.cpp:408] ip2 <- ip1
I0428 19:34:56.240597 23415 net.cpp:382] ip2 -> ip2
I0428 19:34:56.240733 23415 net.cpp:124] Setting up ip2
I0428 19:34:56.240741 23415 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:34:56.240744 23415 net.cpp:139] Memory required for data: 14742800
I0428 19:34:56.240751 23415 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:56.240759 23415 net.cpp:86] Creating Layer relu2
I0428 19:34:56.240778 23415 net.cpp:408] relu2 <- ip2
I0428 19:34:56.240782 23415 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:56.241691 23415 net.cpp:124] Setting up relu2
I0428 19:34:56.241703 23415 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:34:56.241706 23415 net.cpp:139] Memory required for data: 14762800
I0428 19:34:56.241710 23415 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:56.241717 23415 net.cpp:86] Creating Layer ip3
I0428 19:34:56.241721 23415 net.cpp:408] ip3 <- ip2
I0428 19:34:56.241727 23415 net.cpp:382] ip3 -> ip3
I0428 19:34:56.241842 23415 net.cpp:124] Setting up ip3
I0428 19:34:56.241850 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.241853 23415 net.cpp:139] Memory required for data: 14766800
I0428 19:34:56.241858 23415 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:56.241863 23415 net.cpp:86] Creating Layer relu3
I0428 19:34:56.241866 23415 net.cpp:408] relu3 <- ip3
I0428 19:34:56.241871 23415 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:56.242089 23415 net.cpp:124] Setting up relu3
I0428 19:34:56.242100 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.242103 23415 net.cpp:139] Memory required for data: 14770800
I0428 19:34:56.242107 23415 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:34:56.242112 23415 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:34:56.242116 23415 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:34:56.242122 23415 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:34:56.242128 23415 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:34:56.242168 23415 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:34:56.242179 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.242197 23415 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:56.242202 23415 net.cpp:139] Memory required for data: 14778800
I0428 19:34:56.242204 23415 layer_factory.hpp:77] Creating layer accuracy
I0428 19:34:56.242209 23415 net.cpp:86] Creating Layer accuracy
I0428 19:34:56.242213 23415 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:34:56.242218 23415 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:34:56.242223 23415 net.cpp:382] accuracy -> accuracy
I0428 19:34:56.242230 23415 net.cpp:124] Setting up accuracy
I0428 19:34:56.242235 23415 net.cpp:131] Top shape: (1)
I0428 19:34:56.242238 23415 net.cpp:139] Memory required for data: 14778804
I0428 19:34:56.242241 23415 layer_factory.hpp:77] Creating layer loss
I0428 19:34:56.242246 23415 net.cpp:86] Creating Layer loss
I0428 19:34:56.242250 23415 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:34:56.242254 23415 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:34:56.242265 23415 net.cpp:382] loss -> loss
I0428 19:34:56.242274 23415 layer_factory.hpp:77] Creating layer loss
I0428 19:34:56.242517 23415 net.cpp:124] Setting up loss
I0428 19:34:56.242527 23415 net.cpp:131] Top shape: (1)
I0428 19:34:56.242532 23415 net.cpp:134]     with loss weight 1
I0428 19:34:56.242549 23415 net.cpp:139] Memory required for data: 14778808
I0428 19:34:56.242553 23415 net.cpp:200] loss needs backward computation.
I0428 19:34:56.242558 23415 net.cpp:202] accuracy does not need backward computation.
I0428 19:34:56.242563 23415 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:34:56.242580 23415 net.cpp:200] relu3 needs backward computation.
I0428 19:34:56.242583 23415 net.cpp:200] ip3 needs backward computation.
I0428 19:34:56.242586 23415 net.cpp:200] relu2 needs backward computation.
I0428 19:34:56.242595 23415 net.cpp:200] ip2 needs backward computation.
I0428 19:34:56.242599 23415 net.cpp:200] relu1 needs backward computation.
I0428 19:34:56.242602 23415 net.cpp:200] ip1 needs backward computation.
I0428 19:34:56.242605 23415 net.cpp:200] pool0 needs backward computation.
I0428 19:34:56.242614 23415 net.cpp:200] conv0 needs backward computation.
I0428 19:34:56.242617 23415 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:34:56.242621 23415 net.cpp:202] mnist does not need backward computation.
I0428 19:34:56.242624 23415 net.cpp:244] This network produces output accuracy
I0428 19:34:56.242629 23415 net.cpp:244] This network produces output loss
I0428 19:34:56.242642 23415 net.cpp:257] Network initialization done.
I0428 19:34:56.242696 23415 solver.cpp:56] Solver scaffolding done.
I0428 19:34:56.243022 23415 caffe.cpp:248] Starting Optimization
I0428 19:34:56.243028 23415 solver.cpp:273] Solving LeNet
I0428 19:34:56.243031 23415 solver.cpp:274] Learning Rate Policy: inv
I0428 19:34:56.244542 23415 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:34:56.341691 23422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:56.344257 23415 solver.cpp:398]     Test net output #0: accuracy = 0.0893
I0428 19:34:56.344293 23415 solver.cpp:398]     Test net output #1: loss = 2.338 (* 1 = 2.338 loss)
I0428 19:34:56.348757 23415 solver.cpp:219] Iteration 0 (0 iter/s, 0.10567s/100 iters), loss = 2.34912
I0428 19:34:56.348794 23415 solver.cpp:238]     Train net output #0: loss = 2.34912 (* 1 = 2.34912 loss)
I0428 19:34:56.348805 23415 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:34:56.489765 23415 solver.cpp:219] Iteration 100 (709.355 iter/s, 0.140973s/100 iters), loss = 0.541577
I0428 19:34:56.489804 23415 solver.cpp:238]     Train net output #0: loss = 0.541577 (* 1 = 0.541577 loss)
I0428 19:34:56.489810 23415 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:34:56.632323 23415 solver.cpp:219] Iteration 200 (701.653 iter/s, 0.142521s/100 iters), loss = 0.402813
I0428 19:34:56.632361 23415 solver.cpp:238]     Train net output #0: loss = 0.402813 (* 1 = 0.402813 loss)
I0428 19:34:56.632367 23415 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:34:56.774510 23415 solver.cpp:219] Iteration 300 (703.469 iter/s, 0.142153s/100 iters), loss = 0.373693
I0428 19:34:56.774564 23415 solver.cpp:238]     Train net output #0: loss = 0.373693 (* 1 = 0.373693 loss)
I0428 19:34:56.774571 23415 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:34:56.914774 23415 solver.cpp:219] Iteration 400 (713.272 iter/s, 0.140199s/100 iters), loss = 0.205394
I0428 19:34:56.914814 23415 solver.cpp:238]     Train net output #0: loss = 0.205394 (* 1 = 0.205394 loss)
I0428 19:34:56.914820 23415 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:34:57.054724 23415 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:34:57.150226 23422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:57.153745 23415 solver.cpp:398]     Test net output #0: accuracy = 0.9404
I0428 19:34:57.153780 23415 solver.cpp:398]     Test net output #1: loss = 0.199478 (* 1 = 0.199478 loss)
I0428 19:34:57.155112 23415 solver.cpp:219] Iteration 500 (416.152 iter/s, 0.240297s/100 iters), loss = 0.278619
I0428 19:34:57.155150 23415 solver.cpp:238]     Train net output #0: loss = 0.278619 (* 1 = 0.278619 loss)
I0428 19:34:57.155171 23415 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:34:57.301934 23415 solver.cpp:219] Iteration 600 (681.296 iter/s, 0.146779s/100 iters), loss = 0.117971
I0428 19:34:57.301987 23415 solver.cpp:238]     Train net output #0: loss = 0.117971 (* 1 = 0.117971 loss)
I0428 19:34:57.301998 23415 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:34:57.446771 23415 solver.cpp:219] Iteration 700 (690.726 iter/s, 0.144775s/100 iters), loss = 0.298612
I0428 19:34:57.446802 23415 solver.cpp:238]     Train net output #0: loss = 0.298612 (* 1 = 0.298612 loss)
I0428 19:34:57.446810 23415 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:34:57.587666 23415 solver.cpp:219] Iteration 800 (709.974 iter/s, 0.14085s/100 iters), loss = 0.358989
I0428 19:34:57.587697 23415 solver.cpp:238]     Train net output #0: loss = 0.358989 (* 1 = 0.358989 loss)
I0428 19:34:57.587705 23415 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:34:57.728345 23415 solver.cpp:219] Iteration 900 (711.06 iter/s, 0.140635s/100 iters), loss = 0.264825
I0428 19:34:57.728384 23415 solver.cpp:238]     Train net output #0: loss = 0.264825 (* 1 = 0.264825 loss)
I0428 19:34:57.728391 23415 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:34:57.776274 23421 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:57.869014 23415 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:34:57.870921 23415 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:34:57.872498 23415 solver.cpp:311] Iteration 1000, loss = 0.187547
I0428 19:34:57.872516 23415 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:34:57.970990 23422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:57.973608 23415 solver.cpp:398]     Test net output #0: accuracy = 0.958
I0428 19:34:57.973634 23415 solver.cpp:398]     Test net output #1: loss = 0.13494 (* 1 = 0.13494 loss)
I0428 19:34:57.973639 23415 solver.cpp:316] Optimization Done.
I0428 19:34:57.973642 23415 caffe.cpp:259] Optimization Done.
