I0428 19:55:54.562415 28302 caffe.cpp:218] Using GPUs 0
I0428 19:55:54.600834 28302 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:55.124326 28302 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test743.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:55.124469 28302 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test743.prototxt
I0428 19:55:55.124817 28302 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:55.124833 28302 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:55.124915 28302 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:55.124987 28302 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:55.125088 28302 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:55.125113 28302 net.cpp:86] Creating Layer mnist
I0428 19:55:55.125120 28302 net.cpp:382] mnist -> data
I0428 19:55:55.125143 28302 net.cpp:382] mnist -> label
I0428 19:55:55.126226 28302 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:55.128895 28302 net.cpp:124] Setting up mnist
I0428 19:55:55.128912 28302 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:55.128918 28302 net.cpp:131] Top shape: 64 (64)
I0428 19:55:55.128923 28302 net.cpp:139] Memory required for data: 200960
I0428 19:55:55.128931 28302 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:55.128948 28302 net.cpp:86] Creating Layer conv0
I0428 19:55:55.128954 28302 net.cpp:408] conv0 <- data
I0428 19:55:55.128968 28302 net.cpp:382] conv0 -> conv0
I0428 19:55:55.421427 28302 net.cpp:124] Setting up conv0
I0428 19:55:55.421458 28302 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:55:55.421463 28302 net.cpp:139] Memory required for data: 1675520
I0428 19:55:55.421480 28302 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:55.421494 28302 net.cpp:86] Creating Layer pool0
I0428 19:55:55.421499 28302 net.cpp:408] pool0 <- conv0
I0428 19:55:55.421506 28302 net.cpp:382] pool0 -> pool0
I0428 19:55:55.421561 28302 net.cpp:124] Setting up pool0
I0428 19:55:55.421581 28302 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:55:55.421603 28302 net.cpp:139] Memory required for data: 2044160
I0428 19:55:55.421607 28302 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:55.421620 28302 net.cpp:86] Creating Layer conv1
I0428 19:55:55.421624 28302 net.cpp:408] conv1 <- pool0
I0428 19:55:55.421630 28302 net.cpp:382] conv1 -> conv1
I0428 19:55:55.423887 28302 net.cpp:124] Setting up conv1
I0428 19:55:55.423907 28302 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:55:55.423910 28302 net.cpp:139] Memory required for data: 2076928
I0428 19:55:55.423921 28302 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:55.423931 28302 net.cpp:86] Creating Layer pool1
I0428 19:55:55.423936 28302 net.cpp:408] pool1 <- conv1
I0428 19:55:55.423941 28302 net.cpp:382] pool1 -> pool1
I0428 19:55:55.423990 28302 net.cpp:124] Setting up pool1
I0428 19:55:55.423995 28302 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:55:55.424000 28302 net.cpp:139] Memory required for data: 2085120
I0428 19:55:55.424003 28302 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:55.424012 28302 net.cpp:86] Creating Layer ip1
I0428 19:55:55.424016 28302 net.cpp:408] ip1 <- pool1
I0428 19:55:55.424022 28302 net.cpp:382] ip1 -> ip1
I0428 19:55:55.424144 28302 net.cpp:124] Setting up ip1
I0428 19:55:55.424154 28302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:55.424157 28302 net.cpp:139] Memory required for data: 2087680
I0428 19:55:55.424166 28302 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:55.424172 28302 net.cpp:86] Creating Layer relu1
I0428 19:55:55.424176 28302 net.cpp:408] relu1 <- ip1
I0428 19:55:55.424182 28302 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:55.424387 28302 net.cpp:124] Setting up relu1
I0428 19:55:55.424399 28302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:55.424403 28302 net.cpp:139] Memory required for data: 2090240
I0428 19:55:55.424407 28302 layer_factory.hpp:77] Creating layer loss
I0428 19:55:55.424414 28302 net.cpp:86] Creating Layer loss
I0428 19:55:55.424418 28302 net.cpp:408] loss <- ip1
I0428 19:55:55.424422 28302 net.cpp:408] loss <- label
I0428 19:55:55.424428 28302 net.cpp:382] loss -> loss
I0428 19:55:55.424448 28302 layer_factory.hpp:77] Creating layer loss
I0428 19:55:55.425416 28302 net.cpp:124] Setting up loss
I0428 19:55:55.425432 28302 net.cpp:131] Top shape: (1)
I0428 19:55:55.425436 28302 net.cpp:134]     with loss weight 1
I0428 19:55:55.425452 28302 net.cpp:139] Memory required for data: 2090244
I0428 19:55:55.425457 28302 net.cpp:200] loss needs backward computation.
I0428 19:55:55.425460 28302 net.cpp:200] relu1 needs backward computation.
I0428 19:55:55.425464 28302 net.cpp:200] ip1 needs backward computation.
I0428 19:55:55.425467 28302 net.cpp:200] pool1 needs backward computation.
I0428 19:55:55.425472 28302 net.cpp:200] conv1 needs backward computation.
I0428 19:55:55.425474 28302 net.cpp:200] pool0 needs backward computation.
I0428 19:55:55.425477 28302 net.cpp:200] conv0 needs backward computation.
I0428 19:55:55.425482 28302 net.cpp:202] mnist does not need backward computation.
I0428 19:55:55.425485 28302 net.cpp:244] This network produces output loss
I0428 19:55:55.425495 28302 net.cpp:257] Network initialization done.
I0428 19:55:55.425806 28302 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test743.prototxt
I0428 19:55:55.425834 28302 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:55.425922 28302 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:55.426012 28302 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:55.426064 28302 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:55.426079 28302 net.cpp:86] Creating Layer mnist
I0428 19:55:55.426086 28302 net.cpp:382] mnist -> data
I0428 19:55:55.426095 28302 net.cpp:382] mnist -> label
I0428 19:55:55.426203 28302 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:55.428380 28302 net.cpp:124] Setting up mnist
I0428 19:55:55.428396 28302 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:55.428402 28302 net.cpp:131] Top shape: 100 (100)
I0428 19:55:55.428406 28302 net.cpp:139] Memory required for data: 314000
I0428 19:55:55.428411 28302 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:55.428417 28302 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:55.428421 28302 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:55.428454 28302 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:55.428463 28302 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:55.428519 28302 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:55.428529 28302 net.cpp:131] Top shape: 100 (100)
I0428 19:55:55.428534 28302 net.cpp:131] Top shape: 100 (100)
I0428 19:55:55.428537 28302 net.cpp:139] Memory required for data: 314800
I0428 19:55:55.428540 28302 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:55.428551 28302 net.cpp:86] Creating Layer conv0
I0428 19:55:55.428555 28302 net.cpp:408] conv0 <- data
I0428 19:55:55.428561 28302 net.cpp:382] conv0 -> conv0
I0428 19:55:55.429672 28302 net.cpp:124] Setting up conv0
I0428 19:55:55.429687 28302 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:55:55.429692 28302 net.cpp:139] Memory required for data: 2618800
I0428 19:55:55.429702 28302 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:55.429713 28302 net.cpp:86] Creating Layer pool0
I0428 19:55:55.429718 28302 net.cpp:408] pool0 <- conv0
I0428 19:55:55.429723 28302 net.cpp:382] pool0 -> pool0
I0428 19:55:55.429767 28302 net.cpp:124] Setting up pool0
I0428 19:55:55.429774 28302 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:55:55.429777 28302 net.cpp:139] Memory required for data: 3194800
I0428 19:55:55.429780 28302 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:55.429790 28302 net.cpp:86] Creating Layer conv1
I0428 19:55:55.429795 28302 net.cpp:408] conv1 <- pool0
I0428 19:55:55.429801 28302 net.cpp:382] conv1 -> conv1
I0428 19:55:55.432112 28302 net.cpp:124] Setting up conv1
I0428 19:55:55.432127 28302 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:55:55.432132 28302 net.cpp:139] Memory required for data: 3246000
I0428 19:55:55.432142 28302 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:55.432152 28302 net.cpp:86] Creating Layer pool1
I0428 19:55:55.432168 28302 net.cpp:408] pool1 <- conv1
I0428 19:55:55.432173 28302 net.cpp:382] pool1 -> pool1
I0428 19:55:55.432277 28302 net.cpp:124] Setting up pool1
I0428 19:55:55.432286 28302 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:55:55.432291 28302 net.cpp:139] Memory required for data: 3258800
I0428 19:55:55.432294 28302 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:55.432302 28302 net.cpp:86] Creating Layer ip1
I0428 19:55:55.432307 28302 net.cpp:408] ip1 <- pool1
I0428 19:55:55.432312 28302 net.cpp:382] ip1 -> ip1
I0428 19:55:55.432433 28302 net.cpp:124] Setting up ip1
I0428 19:55:55.432443 28302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:55.432447 28302 net.cpp:139] Memory required for data: 3262800
I0428 19:55:55.432456 28302 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:55.432464 28302 net.cpp:86] Creating Layer relu1
I0428 19:55:55.432468 28302 net.cpp:408] relu1 <- ip1
I0428 19:55:55.432473 28302 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:55.433454 28302 net.cpp:124] Setting up relu1
I0428 19:55:55.433468 28302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:55.433473 28302 net.cpp:139] Memory required for data: 3266800
I0428 19:55:55.433477 28302 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:55:55.433486 28302 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:55:55.433490 28302 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:55:55.433496 28302 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:55:55.433504 28302 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:55:55.433550 28302 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:55:55.433557 28302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:55.433562 28302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:55.433565 28302 net.cpp:139] Memory required for data: 3274800
I0428 19:55:55.433568 28302 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:55.433574 28302 net.cpp:86] Creating Layer accuracy
I0428 19:55:55.433578 28302 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:55:55.433583 28302 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:55.433593 28302 net.cpp:382] accuracy -> accuracy
I0428 19:55:55.433600 28302 net.cpp:124] Setting up accuracy
I0428 19:55:55.433604 28302 net.cpp:131] Top shape: (1)
I0428 19:55:55.433609 28302 net.cpp:139] Memory required for data: 3274804
I0428 19:55:55.433611 28302 layer_factory.hpp:77] Creating layer loss
I0428 19:55:55.433617 28302 net.cpp:86] Creating Layer loss
I0428 19:55:55.433621 28302 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:55:55.433625 28302 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:55.433631 28302 net.cpp:382] loss -> loss
I0428 19:55:55.433639 28302 layer_factory.hpp:77] Creating layer loss
I0428 19:55:55.433923 28302 net.cpp:124] Setting up loss
I0428 19:55:55.433933 28302 net.cpp:131] Top shape: (1)
I0428 19:55:55.433938 28302 net.cpp:134]     with loss weight 1
I0428 19:55:55.433945 28302 net.cpp:139] Memory required for data: 3274808
I0428 19:55:55.433948 28302 net.cpp:200] loss needs backward computation.
I0428 19:55:55.433954 28302 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:55.433957 28302 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:55:55.433961 28302 net.cpp:200] relu1 needs backward computation.
I0428 19:55:55.433964 28302 net.cpp:200] ip1 needs backward computation.
I0428 19:55:55.433969 28302 net.cpp:200] pool1 needs backward computation.
I0428 19:55:55.433972 28302 net.cpp:200] conv1 needs backward computation.
I0428 19:55:55.433976 28302 net.cpp:200] pool0 needs backward computation.
I0428 19:55:55.433980 28302 net.cpp:200] conv0 needs backward computation.
I0428 19:55:55.433984 28302 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:55.433989 28302 net.cpp:202] mnist does not need backward computation.
I0428 19:55:55.433991 28302 net.cpp:244] This network produces output accuracy
I0428 19:55:55.433996 28302 net.cpp:244] This network produces output loss
I0428 19:55:55.434020 28302 net.cpp:257] Network initialization done.
I0428 19:55:55.434061 28302 solver.cpp:56] Solver scaffolding done.
I0428 19:55:55.434329 28302 caffe.cpp:248] Starting Optimization
I0428 19:55:55.434335 28302 solver.cpp:273] Solving LeNet
I0428 19:55:55.434339 28302 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:55.435241 28302 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:55.438642 28302 blocking_queue.cpp:49] Waiting for data
I0428 19:55:55.503870 28309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:55.505559 28302 solver.cpp:398]     Test net output #0: accuracy = 0.0825
I0428 19:55:55.505610 28302 solver.cpp:398]     Test net output #1: loss = 2.34444 (* 1 = 2.34444 loss)
I0428 19:55:55.509424 28302 solver.cpp:219] Iteration 0 (-6.38857e-31 iter/s, 0.0750469s/100 iters), loss = 2.30197
I0428 19:55:55.509476 28302 solver.cpp:238]     Train net output #0: loss = 2.30197 (* 1 = 2.30197 loss)
I0428 19:55:55.509498 28302 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:55.583936 28302 solver.cpp:219] Iteration 100 (1343.2 iter/s, 0.0744489s/100 iters), loss = 0.554655
I0428 19:55:55.583976 28302 solver.cpp:238]     Train net output #0: loss = 0.554655 (* 1 = 0.554655 loss)
I0428 19:55:55.583986 28302 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:55.648536 28302 solver.cpp:219] Iteration 200 (1549.07 iter/s, 0.064555s/100 iters), loss = 0.341629
I0428 19:55:55.648567 28302 solver.cpp:238]     Train net output #0: loss = 0.341629 (* 1 = 0.341629 loss)
I0428 19:55:55.648576 28302 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:55.710705 28302 solver.cpp:219] Iteration 300 (1609.58 iter/s, 0.0621281s/100 iters), loss = 0.39615
I0428 19:55:55.710736 28302 solver.cpp:238]     Train net output #0: loss = 0.39615 (* 1 = 0.39615 loss)
I0428 19:55:55.710742 28302 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:55.772203 28302 solver.cpp:219] Iteration 400 (1627.06 iter/s, 0.0614605s/100 iters), loss = 0.282996
I0428 19:55:55.772234 28302 solver.cpp:238]     Train net output #0: loss = 0.282996 (* 1 = 0.282996 loss)
I0428 19:55:55.772243 28302 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:55.833117 28302 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:55.885857 28309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:55.886318 28302 solver.cpp:398]     Test net output #0: accuracy = 0.9138
I0428 19:55:55.886342 28302 solver.cpp:398]     Test net output #1: loss = 0.295047 (* 1 = 0.295047 loss)
I0428 19:55:55.887035 28302 solver.cpp:219] Iteration 500 (871.145 iter/s, 0.114791s/100 iters), loss = 0.269794
I0428 19:55:55.887063 28302 solver.cpp:238]     Train net output #0: loss = 0.269794 (* 1 = 0.269794 loss)
I0428 19:55:55.887071 28302 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:55.959000 28302 solver.cpp:219] Iteration 600 (1390.26 iter/s, 0.0719288s/100 iters), loss = 0.157317
I0428 19:55:55.959031 28302 solver.cpp:238]     Train net output #0: loss = 0.157317 (* 1 = 0.157317 loss)
I0428 19:55:55.959039 28302 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:56.020771 28302 solver.cpp:219] Iteration 700 (1619.91 iter/s, 0.0617318s/100 iters), loss = 0.353664
I0428 19:55:56.020803 28302 solver.cpp:238]     Train net output #0: loss = 0.353664 (* 1 = 0.353664 loss)
I0428 19:55:56.020818 28302 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:56.083153 28302 solver.cpp:219] Iteration 800 (1604.03 iter/s, 0.0623432s/100 iters), loss = 0.353638
I0428 19:55:56.083184 28302 solver.cpp:238]     Train net output #0: loss = 0.353638 (* 1 = 0.353638 loss)
I0428 19:55:56.083192 28302 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:56.145422 28302 solver.cpp:219] Iteration 900 (1606.95 iter/s, 0.0622295s/100 iters), loss = 0.469472
I0428 19:55:56.145453 28302 solver.cpp:238]     Train net output #0: loss = 0.469472 (* 1 = 0.469472 loss)
I0428 19:55:56.145462 28302 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:56.166275 28308 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:56.207079 28302 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:56.207648 28302 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:56.208029 28302 solver.cpp:311] Iteration 1000, loss = 0.138469
I0428 19:55:56.208050 28302 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:56.282723 28309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:56.283200 28302 solver.cpp:398]     Test net output #0: accuracy = 0.9358
I0428 19:55:56.283224 28302 solver.cpp:398]     Test net output #1: loss = 0.211465 (* 1 = 0.211465 loss)
I0428 19:55:56.283231 28302 solver.cpp:316] Optimization Done.
I0428 19:55:56.283236 28302 caffe.cpp:259] Optimization Done.
