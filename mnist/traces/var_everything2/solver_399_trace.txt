I0428 19:42:38.006618 25113 caffe.cpp:218] Using GPUs 0
I0428 19:42:38.047569 25113 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:38.579473 25113 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test399.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:38.579663 25113 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test399.prototxt
I0428 19:42:38.580211 25113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:38.580238 25113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:38.580371 25113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:38.580480 25113 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:38.580616 25113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:38.580648 25113 net.cpp:86] Creating Layer mnist
I0428 19:42:38.580659 25113 net.cpp:382] mnist -> data
I0428 19:42:38.580689 25113 net.cpp:382] mnist -> label
I0428 19:42:38.582224 25113 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:38.585741 25113 net.cpp:124] Setting up mnist
I0428 19:42:38.585767 25113 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:38.585779 25113 net.cpp:131] Top shape: 64 (64)
I0428 19:42:38.585785 25113 net.cpp:139] Memory required for data: 200960
I0428 19:42:38.585796 25113 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:38.585819 25113 net.cpp:86] Creating Layer conv0
I0428 19:42:38.585826 25113 net.cpp:408] conv0 <- data
I0428 19:42:38.585844 25113 net.cpp:382] conv0 -> conv0
I0428 19:42:38.894068 25113 net.cpp:124] Setting up conv0
I0428 19:42:38.894100 25113 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:38.894105 25113 net.cpp:139] Memory required for data: 495872
I0428 19:42:38.894145 25113 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:38.894160 25113 net.cpp:86] Creating Layer pool0
I0428 19:42:38.894165 25113 net.cpp:408] pool0 <- conv0
I0428 19:42:38.894171 25113 net.cpp:382] pool0 -> pool0
I0428 19:42:38.894232 25113 net.cpp:124] Setting up pool0
I0428 19:42:38.894243 25113 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:38.894246 25113 net.cpp:139] Memory required for data: 569600
I0428 19:42:38.894250 25113 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:38.894263 25113 net.cpp:86] Creating Layer conv1
I0428 19:42:38.894268 25113 net.cpp:408] conv1 <- pool0
I0428 19:42:38.894273 25113 net.cpp:382] conv1 -> conv1
I0428 19:42:38.897380 25113 net.cpp:124] Setting up conv1
I0428 19:42:38.897399 25113 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:38.897403 25113 net.cpp:139] Memory required for data: 979200
I0428 19:42:38.897414 25113 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:38.897424 25113 net.cpp:86] Creating Layer pool1
I0428 19:42:38.897429 25113 net.cpp:408] pool1 <- conv1
I0428 19:42:38.897435 25113 net.cpp:382] pool1 -> pool1
I0428 19:42:38.897480 25113 net.cpp:124] Setting up pool1
I0428 19:42:38.897486 25113 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:38.897490 25113 net.cpp:139] Memory required for data: 1081600
I0428 19:42:38.897493 25113 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:38.897506 25113 net.cpp:86] Creating Layer ip1
I0428 19:42:38.897511 25113 net.cpp:408] ip1 <- pool1
I0428 19:42:38.897516 25113 net.cpp:382] ip1 -> ip1
I0428 19:42:38.897768 25113 net.cpp:124] Setting up ip1
I0428 19:42:38.897778 25113 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:38.897781 25113 net.cpp:139] Memory required for data: 1094400
I0428 19:42:38.897790 25113 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:38.897796 25113 net.cpp:86] Creating Layer relu1
I0428 19:42:38.897800 25113 net.cpp:408] relu1 <- ip1
I0428 19:42:38.897805 25113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:38.897999 25113 net.cpp:124] Setting up relu1
I0428 19:42:38.898010 25113 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:38.898013 25113 net.cpp:139] Memory required for data: 1107200
I0428 19:42:38.898017 25113 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:38.898025 25113 net.cpp:86] Creating Layer ip2
I0428 19:42:38.898030 25113 net.cpp:408] ip2 <- ip1
I0428 19:42:38.898035 25113 net.cpp:382] ip2 -> ip2
I0428 19:42:38.898146 25113 net.cpp:124] Setting up ip2
I0428 19:42:38.898154 25113 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:38.898159 25113 net.cpp:139] Memory required for data: 1109760
I0428 19:42:38.898165 25113 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:38.898172 25113 net.cpp:86] Creating Layer relu2
I0428 19:42:38.898175 25113 net.cpp:408] relu2 <- ip2
I0428 19:42:38.898180 25113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:38.899021 25113 net.cpp:124] Setting up relu2
I0428 19:42:38.899035 25113 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:38.899040 25113 net.cpp:139] Memory required for data: 1112320
I0428 19:42:38.899044 25113 layer_factory.hpp:77] Creating layer loss
I0428 19:42:38.899052 25113 net.cpp:86] Creating Layer loss
I0428 19:42:38.899056 25113 net.cpp:408] loss <- ip2
I0428 19:42:38.899061 25113 net.cpp:408] loss <- label
I0428 19:42:38.899070 25113 net.cpp:382] loss -> loss
I0428 19:42:38.899092 25113 layer_factory.hpp:77] Creating layer loss
I0428 19:42:38.899369 25113 net.cpp:124] Setting up loss
I0428 19:42:38.899380 25113 net.cpp:131] Top shape: (1)
I0428 19:42:38.899384 25113 net.cpp:134]     with loss weight 1
I0428 19:42:38.899400 25113 net.cpp:139] Memory required for data: 1112324
I0428 19:42:38.899405 25113 net.cpp:200] loss needs backward computation.
I0428 19:42:38.899410 25113 net.cpp:200] relu2 needs backward computation.
I0428 19:42:38.899413 25113 net.cpp:200] ip2 needs backward computation.
I0428 19:42:38.899416 25113 net.cpp:200] relu1 needs backward computation.
I0428 19:42:38.899420 25113 net.cpp:200] ip1 needs backward computation.
I0428 19:42:38.899435 25113 net.cpp:200] pool1 needs backward computation.
I0428 19:42:38.899440 25113 net.cpp:200] conv1 needs backward computation.
I0428 19:42:38.899443 25113 net.cpp:200] pool0 needs backward computation.
I0428 19:42:38.899446 25113 net.cpp:200] conv0 needs backward computation.
I0428 19:42:38.899451 25113 net.cpp:202] mnist does not need backward computation.
I0428 19:42:38.899454 25113 net.cpp:244] This network produces output loss
I0428 19:42:38.899464 25113 net.cpp:257] Network initialization done.
I0428 19:42:38.899808 25113 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test399.prototxt
I0428 19:42:38.899838 25113 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:38.899936 25113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:38.900012 25113 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:38.900063 25113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:38.900076 25113 net.cpp:86] Creating Layer mnist
I0428 19:42:38.900081 25113 net.cpp:382] mnist -> data
I0428 19:42:38.900090 25113 net.cpp:382] mnist -> label
I0428 19:42:38.900187 25113 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:38.902369 25113 net.cpp:124] Setting up mnist
I0428 19:42:38.902385 25113 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:38.902391 25113 net.cpp:131] Top shape: 100 (100)
I0428 19:42:38.902395 25113 net.cpp:139] Memory required for data: 314000
I0428 19:42:38.902400 25113 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:38.902412 25113 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:38.902416 25113 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:38.902422 25113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:38.902431 25113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:38.902561 25113 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:38.902585 25113 net.cpp:131] Top shape: 100 (100)
I0428 19:42:38.902590 25113 net.cpp:131] Top shape: 100 (100)
I0428 19:42:38.902592 25113 net.cpp:139] Memory required for data: 314800
I0428 19:42:38.902596 25113 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:38.902607 25113 net.cpp:86] Creating Layer conv0
I0428 19:42:38.902611 25113 net.cpp:408] conv0 <- data
I0428 19:42:38.902617 25113 net.cpp:382] conv0 -> conv0
I0428 19:42:38.904284 25113 net.cpp:124] Setting up conv0
I0428 19:42:38.904304 25113 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:38.904309 25113 net.cpp:139] Memory required for data: 775600
I0428 19:42:38.904320 25113 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:38.904327 25113 net.cpp:86] Creating Layer pool0
I0428 19:42:38.904333 25113 net.cpp:408] pool0 <- conv0
I0428 19:42:38.904340 25113 net.cpp:382] pool0 -> pool0
I0428 19:42:38.904382 25113 net.cpp:124] Setting up pool0
I0428 19:42:38.904389 25113 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:38.904392 25113 net.cpp:139] Memory required for data: 890800
I0428 19:42:38.904397 25113 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:38.904407 25113 net.cpp:86] Creating Layer conv1
I0428 19:42:38.904412 25113 net.cpp:408] conv1 <- pool0
I0428 19:42:38.904417 25113 net.cpp:382] conv1 -> conv1
I0428 19:42:38.906128 25113 net.cpp:124] Setting up conv1
I0428 19:42:38.906146 25113 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:38.906150 25113 net.cpp:139] Memory required for data: 1530800
I0428 19:42:38.906160 25113 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:38.906167 25113 net.cpp:86] Creating Layer pool1
I0428 19:42:38.906172 25113 net.cpp:408] pool1 <- conv1
I0428 19:42:38.906178 25113 net.cpp:382] pool1 -> pool1
I0428 19:42:38.906227 25113 net.cpp:124] Setting up pool1
I0428 19:42:38.906237 25113 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:38.906241 25113 net.cpp:139] Memory required for data: 1690800
I0428 19:42:38.906245 25113 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:38.906253 25113 net.cpp:86] Creating Layer ip1
I0428 19:42:38.906257 25113 net.cpp:408] ip1 <- pool1
I0428 19:42:38.906265 25113 net.cpp:382] ip1 -> ip1
I0428 19:42:38.906522 25113 net.cpp:124] Setting up ip1
I0428 19:42:38.906532 25113 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:38.906535 25113 net.cpp:139] Memory required for data: 1710800
I0428 19:42:38.906543 25113 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:38.906549 25113 net.cpp:86] Creating Layer relu1
I0428 19:42:38.906553 25113 net.cpp:408] relu1 <- ip1
I0428 19:42:38.906558 25113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:38.906812 25113 net.cpp:124] Setting up relu1
I0428 19:42:38.906826 25113 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:38.906829 25113 net.cpp:139] Memory required for data: 1730800
I0428 19:42:38.906833 25113 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:38.906841 25113 net.cpp:86] Creating Layer ip2
I0428 19:42:38.906846 25113 net.cpp:408] ip2 <- ip1
I0428 19:42:38.906852 25113 net.cpp:382] ip2 -> ip2
I0428 19:42:38.906966 25113 net.cpp:124] Setting up ip2
I0428 19:42:38.906975 25113 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:38.906980 25113 net.cpp:139] Memory required for data: 1734800
I0428 19:42:38.906986 25113 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:38.906992 25113 net.cpp:86] Creating Layer relu2
I0428 19:42:38.906996 25113 net.cpp:408] relu2 <- ip2
I0428 19:42:38.907001 25113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:38.907176 25113 net.cpp:124] Setting up relu2
I0428 19:42:38.907186 25113 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:38.907189 25113 net.cpp:139] Memory required for data: 1738800
I0428 19:42:38.907193 25113 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:38.907202 25113 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:38.907207 25113 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:38.907212 25113 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:38.907232 25113 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:38.907272 25113 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:38.907280 25113 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:38.907285 25113 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:38.907289 25113 net.cpp:139] Memory required for data: 1746800
I0428 19:42:38.907294 25113 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:38.907299 25113 net.cpp:86] Creating Layer accuracy
I0428 19:42:38.907302 25113 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:38.907307 25113 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:38.907313 25113 net.cpp:382] accuracy -> accuracy
I0428 19:42:38.907321 25113 net.cpp:124] Setting up accuracy
I0428 19:42:38.907326 25113 net.cpp:131] Top shape: (1)
I0428 19:42:38.907330 25113 net.cpp:139] Memory required for data: 1746804
I0428 19:42:38.907333 25113 layer_factory.hpp:77] Creating layer loss
I0428 19:42:38.907338 25113 net.cpp:86] Creating Layer loss
I0428 19:42:38.907341 25113 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:38.907346 25113 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:38.907351 25113 net.cpp:382] loss -> loss
I0428 19:42:38.907357 25113 layer_factory.hpp:77] Creating layer loss
I0428 19:42:38.907614 25113 net.cpp:124] Setting up loss
I0428 19:42:38.907625 25113 net.cpp:131] Top shape: (1)
I0428 19:42:38.907629 25113 net.cpp:134]     with loss weight 1
I0428 19:42:38.907636 25113 net.cpp:139] Memory required for data: 1746808
I0428 19:42:38.907640 25113 net.cpp:200] loss needs backward computation.
I0428 19:42:38.907645 25113 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:38.907649 25113 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:38.907654 25113 net.cpp:200] relu2 needs backward computation.
I0428 19:42:38.907657 25113 net.cpp:200] ip2 needs backward computation.
I0428 19:42:38.907660 25113 net.cpp:200] relu1 needs backward computation.
I0428 19:42:38.907663 25113 net.cpp:200] ip1 needs backward computation.
I0428 19:42:38.907667 25113 net.cpp:200] pool1 needs backward computation.
I0428 19:42:38.907671 25113 net.cpp:200] conv1 needs backward computation.
I0428 19:42:38.907675 25113 net.cpp:200] pool0 needs backward computation.
I0428 19:42:38.907678 25113 net.cpp:200] conv0 needs backward computation.
I0428 19:42:38.907682 25113 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:38.907687 25113 net.cpp:202] mnist does not need backward computation.
I0428 19:42:38.907691 25113 net.cpp:244] This network produces output accuracy
I0428 19:42:38.907694 25113 net.cpp:244] This network produces output loss
I0428 19:42:38.907706 25113 net.cpp:257] Network initialization done.
I0428 19:42:38.907749 25113 solver.cpp:56] Solver scaffolding done.
I0428 19:42:38.908056 25113 caffe.cpp:248] Starting Optimization
I0428 19:42:38.908063 25113 solver.cpp:273] Solving LeNet
I0428 19:42:38.908067 25113 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:38.908917 25113 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:38.912992 25113 blocking_queue.cpp:49] Waiting for data
I0428 19:42:38.963232 25120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:38.963667 25113 solver.cpp:398]     Test net output #0: accuracy = 0.1283
I0428 19:42:38.963690 25113 solver.cpp:398]     Test net output #1: loss = 2.28243 (* 1 = 2.28243 loss)
I0428 19:42:38.964969 25113 solver.cpp:219] Iteration 0 (0 iter/s, 0.056875s/100 iters), loss = 2.25109
I0428 19:42:38.964998 25113 solver.cpp:238]     Train net output #0: loss = 2.25109 (* 1 = 2.25109 loss)
I0428 19:42:38.965013 25113 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:39.048840 25113 solver.cpp:219] Iteration 100 (1192.89 iter/s, 0.0838298s/100 iters), loss = 0.584879
I0428 19:42:39.048876 25113 solver.cpp:238]     Train net output #0: loss = 0.584879 (* 1 = 0.584879 loss)
I0428 19:42:39.048884 25113 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:39.132946 25113 solver.cpp:219] Iteration 200 (1189.62 iter/s, 0.0840602s/100 iters), loss = 0.641543
I0428 19:42:39.132998 25113 solver.cpp:238]     Train net output #0: loss = 0.641543 (* 1 = 0.641543 loss)
I0428 19:42:39.133008 25113 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:39.216594 25113 solver.cpp:219] Iteration 300 (1196.34 iter/s, 0.083588s/100 iters), loss = 0.219962
I0428 19:42:39.216626 25113 solver.cpp:238]     Train net output #0: loss = 0.219962 (* 1 = 0.219962 loss)
I0428 19:42:39.216635 25113 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:39.307286 25113 solver.cpp:219] Iteration 400 (1103.2 iter/s, 0.0906455s/100 iters), loss = 0.298758
I0428 19:42:39.307335 25113 solver.cpp:238]     Train net output #0: loss = 0.298758 (* 1 = 0.298758 loss)
I0428 19:42:39.307348 25113 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:39.395238 25113 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:39.442000 25120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:39.442457 25113 solver.cpp:398]     Test net output #0: accuracy = 0.876
I0428 19:42:39.442481 25113 solver.cpp:398]     Test net output #1: loss = 0.347457 (* 1 = 0.347457 loss)
I0428 19:42:39.443361 25113 solver.cpp:219] Iteration 500 (735.208 iter/s, 0.136016s/100 iters), loss = 0.460443
I0428 19:42:39.443428 25113 solver.cpp:238]     Train net output #0: loss = 0.460443 (* 1 = 0.460443 loss)
I0428 19:42:39.443437 25113 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:39.526659 25113 solver.cpp:219] Iteration 600 (1201.55 iter/s, 0.0832259s/100 iters), loss = 0.308962
I0428 19:42:39.526690 25113 solver.cpp:238]     Train net output #0: loss = 0.308962 (* 1 = 0.308962 loss)
I0428 19:42:39.526708 25113 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:39.609355 25113 solver.cpp:219] Iteration 700 (1209.83 iter/s, 0.0826563s/100 iters), loss = 0.557731
I0428 19:42:39.609385 25113 solver.cpp:238]     Train net output #0: loss = 0.557731 (* 1 = 0.557731 loss)
I0428 19:42:39.609402 25113 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:39.691921 25113 solver.cpp:219] Iteration 800 (1211.74 iter/s, 0.0825262s/100 iters), loss = 0.262035
I0428 19:42:39.691951 25113 solver.cpp:238]     Train net output #0: loss = 0.262035 (* 1 = 0.262035 loss)
I0428 19:42:39.691973 25113 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:39.773120 25113 solver.cpp:219] Iteration 900 (1232.12 iter/s, 0.0811612s/100 iters), loss = 0.197982
I0428 19:42:39.773150 25113 solver.cpp:238]     Train net output #0: loss = 0.197982 (* 1 = 0.197982 loss)
I0428 19:42:39.773159 25113 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:39.802384 25119 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:39.856679 25113 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:39.857650 25113 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:39.858252 25113 solver.cpp:311] Iteration 1000, loss = 0.164269
I0428 19:42:39.858280 25113 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:39.902036 25120 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:39.902479 25113 solver.cpp:398]     Test net output #0: accuracy = 0.9685
I0428 19:42:39.902501 25113 solver.cpp:398]     Test net output #1: loss = 0.101859 (* 1 = 0.101859 loss)
I0428 19:42:39.902508 25113 solver.cpp:316] Optimization Done.
I0428 19:42:39.902511 25113 caffe.cpp:259] Optimization Done.
