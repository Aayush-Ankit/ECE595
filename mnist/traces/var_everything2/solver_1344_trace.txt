I0428 20:19:33.305157  1385 caffe.cpp:218] Using GPUs 0
I0428 20:19:33.341802  1385 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:33.847169  1385 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1344.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:33.847301  1385 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1344.prototxt
I0428 20:19:33.847717  1385 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:33.847738  1385 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:33.847843  1385 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:33.847921  1385 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:33.848021  1385 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:33.848044  1385 net.cpp:86] Creating Layer mnist
I0428 20:19:33.848052  1385 net.cpp:382] mnist -> data
I0428 20:19:33.848075  1385 net.cpp:382] mnist -> label
I0428 20:19:33.849164  1385 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:33.851618  1385 net.cpp:124] Setting up mnist
I0428 20:19:33.851636  1385 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:33.851642  1385 net.cpp:131] Top shape: 64 (64)
I0428 20:19:33.851645  1385 net.cpp:139] Memory required for data: 200960
I0428 20:19:33.851652  1385 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:33.851670  1385 net.cpp:86] Creating Layer conv0
I0428 20:19:33.851691  1385 net.cpp:408] conv0 <- data
I0428 20:19:33.851703  1385 net.cpp:382] conv0 -> conv0
I0428 20:19:34.140434  1385 net.cpp:124] Setting up conv0
I0428 20:19:34.140466  1385 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:34.140471  1385 net.cpp:139] Memory required for data: 7573760
I0428 20:19:34.140489  1385 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:34.140504  1385 net.cpp:86] Creating Layer pool0
I0428 20:19:34.140508  1385 net.cpp:408] pool0 <- conv0
I0428 20:19:34.140516  1385 net.cpp:382] pool0 -> pool0
I0428 20:19:34.140573  1385 net.cpp:124] Setting up pool0
I0428 20:19:34.140580  1385 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:34.140584  1385 net.cpp:139] Memory required for data: 9416960
I0428 20:19:34.140588  1385 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:34.140601  1385 net.cpp:86] Creating Layer conv1
I0428 20:19:34.140617  1385 net.cpp:408] conv1 <- pool0
I0428 20:19:34.140624  1385 net.cpp:382] conv1 -> conv1
I0428 20:19:34.143030  1385 net.cpp:124] Setting up conv1
I0428 20:19:34.143049  1385 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:34.143054  1385 net.cpp:139] Memory required for data: 9826560
I0428 20:19:34.143064  1385 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:34.143072  1385 net.cpp:86] Creating Layer pool1
I0428 20:19:34.143076  1385 net.cpp:408] pool1 <- conv1
I0428 20:19:34.143082  1385 net.cpp:382] pool1 -> pool1
I0428 20:19:34.143127  1385 net.cpp:124] Setting up pool1
I0428 20:19:34.143136  1385 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:34.143139  1385 net.cpp:139] Memory required for data: 9928960
I0428 20:19:34.143142  1385 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:34.143151  1385 net.cpp:86] Creating Layer ip1
I0428 20:19:34.143155  1385 net.cpp:408] ip1 <- pool1
I0428 20:19:34.143162  1385 net.cpp:382] ip1 -> ip1
I0428 20:19:34.143309  1385 net.cpp:124] Setting up ip1
I0428 20:19:34.143318  1385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:34.143321  1385 net.cpp:139] Memory required for data: 9931520
I0428 20:19:34.143331  1385 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:34.143337  1385 net.cpp:86] Creating Layer relu1
I0428 20:19:34.143342  1385 net.cpp:408] relu1 <- ip1
I0428 20:19:34.143347  1385 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:34.143544  1385 net.cpp:124] Setting up relu1
I0428 20:19:34.143554  1385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:34.143558  1385 net.cpp:139] Memory required for data: 9934080
I0428 20:19:34.143563  1385 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:34.143569  1385 net.cpp:86] Creating Layer ip2
I0428 20:19:34.143573  1385 net.cpp:408] ip2 <- ip1
I0428 20:19:34.143579  1385 net.cpp:382] ip2 -> ip2
I0428 20:19:34.143698  1385 net.cpp:124] Setting up ip2
I0428 20:19:34.143707  1385 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:34.143710  1385 net.cpp:139] Memory required for data: 9946880
I0428 20:19:34.143718  1385 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:34.143724  1385 net.cpp:86] Creating Layer relu2
I0428 20:19:34.143728  1385 net.cpp:408] relu2 <- ip2
I0428 20:19:34.143733  1385 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:34.144577  1385 net.cpp:124] Setting up relu2
I0428 20:19:34.144593  1385 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:19:34.144598  1385 net.cpp:139] Memory required for data: 9959680
I0428 20:19:34.144601  1385 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:34.144609  1385 net.cpp:86] Creating Layer ip3
I0428 20:19:34.144613  1385 net.cpp:408] ip3 <- ip2
I0428 20:19:34.144619  1385 net.cpp:382] ip3 -> ip3
I0428 20:19:34.144739  1385 net.cpp:124] Setting up ip3
I0428 20:19:34.144748  1385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:34.144752  1385 net.cpp:139] Memory required for data: 9962240
I0428 20:19:34.144762  1385 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:34.144769  1385 net.cpp:86] Creating Layer relu3
I0428 20:19:34.144773  1385 net.cpp:408] relu3 <- ip3
I0428 20:19:34.144778  1385 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:34.144986  1385 net.cpp:124] Setting up relu3
I0428 20:19:34.144996  1385 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:34.145000  1385 net.cpp:139] Memory required for data: 9964800
I0428 20:19:34.145004  1385 layer_factory.hpp:77] Creating layer loss
I0428 20:19:34.145011  1385 net.cpp:86] Creating Layer loss
I0428 20:19:34.145015  1385 net.cpp:408] loss <- ip3
I0428 20:19:34.145020  1385 net.cpp:408] loss <- label
I0428 20:19:34.145026  1385 net.cpp:382] loss -> loss
I0428 20:19:34.145043  1385 layer_factory.hpp:77] Creating layer loss
I0428 20:19:34.145314  1385 net.cpp:124] Setting up loss
I0428 20:19:34.145325  1385 net.cpp:131] Top shape: (1)
I0428 20:19:34.145329  1385 net.cpp:134]     with loss weight 1
I0428 20:19:34.145345  1385 net.cpp:139] Memory required for data: 9964804
I0428 20:19:34.145349  1385 net.cpp:200] loss needs backward computation.
I0428 20:19:34.145354  1385 net.cpp:200] relu3 needs backward computation.
I0428 20:19:34.145359  1385 net.cpp:200] ip3 needs backward computation.
I0428 20:19:34.145361  1385 net.cpp:200] relu2 needs backward computation.
I0428 20:19:34.145365  1385 net.cpp:200] ip2 needs backward computation.
I0428 20:19:34.145368  1385 net.cpp:200] relu1 needs backward computation.
I0428 20:19:34.145372  1385 net.cpp:200] ip1 needs backward computation.
I0428 20:19:34.145376  1385 net.cpp:200] pool1 needs backward computation.
I0428 20:19:34.145380  1385 net.cpp:200] conv1 needs backward computation.
I0428 20:19:34.145383  1385 net.cpp:200] pool0 needs backward computation.
I0428 20:19:34.145387  1385 net.cpp:200] conv0 needs backward computation.
I0428 20:19:34.145391  1385 net.cpp:202] mnist does not need backward computation.
I0428 20:19:34.145395  1385 net.cpp:244] This network produces output loss
I0428 20:19:34.145406  1385 net.cpp:257] Network initialization done.
I0428 20:19:34.145786  1385 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1344.prototxt
I0428 20:19:34.145817  1385 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:34.145925  1385 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:34.146018  1385 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:34.146072  1385 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:34.146087  1385 net.cpp:86] Creating Layer mnist
I0428 20:19:34.146093  1385 net.cpp:382] mnist -> data
I0428 20:19:34.146103  1385 net.cpp:382] mnist -> label
I0428 20:19:34.146203  1385 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:34.148391  1385 net.cpp:124] Setting up mnist
I0428 20:19:34.148406  1385 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:34.148412  1385 net.cpp:131] Top shape: 100 (100)
I0428 20:19:34.148416  1385 net.cpp:139] Memory required for data: 314000
I0428 20:19:34.148421  1385 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:34.148428  1385 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:34.148432  1385 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:34.148438  1385 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:34.148447  1385 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:34.148557  1385 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:34.148566  1385 net.cpp:131] Top shape: 100 (100)
I0428 20:19:34.148571  1385 net.cpp:131] Top shape: 100 (100)
I0428 20:19:34.148574  1385 net.cpp:139] Memory required for data: 314800
I0428 20:19:34.148578  1385 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:34.148589  1385 net.cpp:86] Creating Layer conv0
I0428 20:19:34.148592  1385 net.cpp:408] conv0 <- data
I0428 20:19:34.148599  1385 net.cpp:382] conv0 -> conv0
I0428 20:19:34.150332  1385 net.cpp:124] Setting up conv0
I0428 20:19:34.150351  1385 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:34.150355  1385 net.cpp:139] Memory required for data: 11834800
I0428 20:19:34.150365  1385 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:34.150373  1385 net.cpp:86] Creating Layer pool0
I0428 20:19:34.150377  1385 net.cpp:408] pool0 <- conv0
I0428 20:19:34.150383  1385 net.cpp:382] pool0 -> pool0
I0428 20:19:34.150429  1385 net.cpp:124] Setting up pool0
I0428 20:19:34.150437  1385 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:34.150441  1385 net.cpp:139] Memory required for data: 14714800
I0428 20:19:34.150444  1385 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:34.150454  1385 net.cpp:86] Creating Layer conv1
I0428 20:19:34.150459  1385 net.cpp:408] conv1 <- pool0
I0428 20:19:34.150465  1385 net.cpp:382] conv1 -> conv1
I0428 20:19:34.152492  1385 net.cpp:124] Setting up conv1
I0428 20:19:34.152508  1385 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:34.152511  1385 net.cpp:139] Memory required for data: 15354800
I0428 20:19:34.152523  1385 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:34.152531  1385 net.cpp:86] Creating Layer pool1
I0428 20:19:34.152535  1385 net.cpp:408] pool1 <- conv1
I0428 20:19:34.152544  1385 net.cpp:382] pool1 -> pool1
I0428 20:19:34.152587  1385 net.cpp:124] Setting up pool1
I0428 20:19:34.152601  1385 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:34.152603  1385 net.cpp:139] Memory required for data: 15514800
I0428 20:19:34.152607  1385 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:34.152616  1385 net.cpp:86] Creating Layer ip1
I0428 20:19:34.152619  1385 net.cpp:408] ip1 <- pool1
I0428 20:19:34.152626  1385 net.cpp:382] ip1 -> ip1
I0428 20:19:34.152771  1385 net.cpp:124] Setting up ip1
I0428 20:19:34.152781  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.152796  1385 net.cpp:139] Memory required for data: 15518800
I0428 20:19:34.152806  1385 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:34.152819  1385 net.cpp:86] Creating Layer relu1
I0428 20:19:34.152824  1385 net.cpp:408] relu1 <- ip1
I0428 20:19:34.152830  1385 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:34.153033  1385 net.cpp:124] Setting up relu1
I0428 20:19:34.153044  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.153067  1385 net.cpp:139] Memory required for data: 15522800
I0428 20:19:34.153071  1385 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:34.153087  1385 net.cpp:86] Creating Layer ip2
I0428 20:19:34.153091  1385 net.cpp:408] ip2 <- ip1
I0428 20:19:34.153098  1385 net.cpp:382] ip2 -> ip2
I0428 20:19:34.153226  1385 net.cpp:124] Setting up ip2
I0428 20:19:34.153235  1385 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:34.153239  1385 net.cpp:139] Memory required for data: 15542800
I0428 20:19:34.153245  1385 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:34.153251  1385 net.cpp:86] Creating Layer relu2
I0428 20:19:34.153255  1385 net.cpp:408] relu2 <- ip2
I0428 20:19:34.153260  1385 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:34.153512  1385 net.cpp:124] Setting up relu2
I0428 20:19:34.153522  1385 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:19:34.153525  1385 net.cpp:139] Memory required for data: 15562800
I0428 20:19:34.153529  1385 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:34.153537  1385 net.cpp:86] Creating Layer ip3
I0428 20:19:34.153539  1385 net.cpp:408] ip3 <- ip2
I0428 20:19:34.153547  1385 net.cpp:382] ip3 -> ip3
I0428 20:19:34.153697  1385 net.cpp:124] Setting up ip3
I0428 20:19:34.153710  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.153714  1385 net.cpp:139] Memory required for data: 15566800
I0428 20:19:34.153723  1385 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:34.153735  1385 net.cpp:86] Creating Layer relu3
I0428 20:19:34.153738  1385 net.cpp:408] relu3 <- ip3
I0428 20:19:34.153756  1385 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:34.154671  1385 net.cpp:124] Setting up relu3
I0428 20:19:34.154685  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.154690  1385 net.cpp:139] Memory required for data: 15570800
I0428 20:19:34.154695  1385 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:34.154701  1385 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:34.154706  1385 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:34.154714  1385 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:34.154722  1385 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:34.154786  1385 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:34.154794  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.154799  1385 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:34.154803  1385 net.cpp:139] Memory required for data: 15578800
I0428 20:19:34.154806  1385 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:34.154820  1385 net.cpp:86] Creating Layer accuracy
I0428 20:19:34.154824  1385 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:34.154829  1385 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:34.154835  1385 net.cpp:382] accuracy -> accuracy
I0428 20:19:34.154844  1385 net.cpp:124] Setting up accuracy
I0428 20:19:34.154850  1385 net.cpp:131] Top shape: (1)
I0428 20:19:34.154852  1385 net.cpp:139] Memory required for data: 15578804
I0428 20:19:34.154861  1385 layer_factory.hpp:77] Creating layer loss
I0428 20:19:34.154866  1385 net.cpp:86] Creating Layer loss
I0428 20:19:34.154870  1385 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:34.154875  1385 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:34.154886  1385 net.cpp:382] loss -> loss
I0428 20:19:34.154892  1385 layer_factory.hpp:77] Creating layer loss
I0428 20:19:34.155185  1385 net.cpp:124] Setting up loss
I0428 20:19:34.155197  1385 net.cpp:131] Top shape: (1)
I0428 20:19:34.155201  1385 net.cpp:134]     with loss weight 1
I0428 20:19:34.155220  1385 net.cpp:139] Memory required for data: 15578808
I0428 20:19:34.155225  1385 net.cpp:200] loss needs backward computation.
I0428 20:19:34.155230  1385 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:34.155233  1385 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:34.155237  1385 net.cpp:200] relu3 needs backward computation.
I0428 20:19:34.155241  1385 net.cpp:200] ip3 needs backward computation.
I0428 20:19:34.155244  1385 net.cpp:200] relu2 needs backward computation.
I0428 20:19:34.155261  1385 net.cpp:200] ip2 needs backward computation.
I0428 20:19:34.155263  1385 net.cpp:200] relu1 needs backward computation.
I0428 20:19:34.155267  1385 net.cpp:200] ip1 needs backward computation.
I0428 20:19:34.155270  1385 net.cpp:200] pool1 needs backward computation.
I0428 20:19:34.155274  1385 net.cpp:200] conv1 needs backward computation.
I0428 20:19:34.155278  1385 net.cpp:200] pool0 needs backward computation.
I0428 20:19:34.155282  1385 net.cpp:200] conv0 needs backward computation.
I0428 20:19:34.155287  1385 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:34.155297  1385 net.cpp:202] mnist does not need backward computation.
I0428 20:19:34.155299  1385 net.cpp:244] This network produces output accuracy
I0428 20:19:34.155303  1385 net.cpp:244] This network produces output loss
I0428 20:19:34.155318  1385 net.cpp:257] Network initialization done.
I0428 20:19:34.155369  1385 solver.cpp:56] Solver scaffolding done.
I0428 20:19:34.155763  1385 caffe.cpp:248] Starting Optimization
I0428 20:19:34.155771  1385 solver.cpp:273] Solving LeNet
I0428 20:19:34.155774  1385 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:34.156728  1385 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:34.164997  1385 blocking_queue.cpp:49] Waiting for data
I0428 20:19:34.230420  1392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:34.231439  1385 solver.cpp:398]     Test net output #0: accuracy = 0.1194
I0428 20:19:34.231462  1385 solver.cpp:398]     Test net output #1: loss = 2.30829 (* 1 = 2.30829 loss)
I0428 20:19:34.235680  1385 solver.cpp:219] Iteration 0 (-1.01734e-42 iter/s, 0.0798771s/100 iters), loss = 2.30815
I0428 20:19:34.235705  1385 solver.cpp:238]     Train net output #0: loss = 2.30815 (* 1 = 2.30815 loss)
I0428 20:19:34.235718  1385 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:34.379760  1385 solver.cpp:219] Iteration 100 (694.272 iter/s, 0.144036s/100 iters), loss = 1.05998
I0428 20:19:34.379801  1385 solver.cpp:238]     Train net output #0: loss = 1.05998 (* 1 = 1.05998 loss)
I0428 20:19:34.379811  1385 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:34.529963  1385 solver.cpp:219] Iteration 200 (666.023 iter/s, 0.150145s/100 iters), loss = 0.656915
I0428 20:19:34.530004  1385 solver.cpp:238]     Train net output #0: loss = 0.656915 (* 1 = 0.656915 loss)
I0428 20:19:34.530014  1385 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:34.678668  1385 solver.cpp:219] Iteration 300 (672.717 iter/s, 0.148651s/100 iters), loss = 1.10764
I0428 20:19:34.678706  1385 solver.cpp:238]     Train net output #0: loss = 1.10764 (* 1 = 1.10764 loss)
I0428 20:19:34.678716  1385 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:34.828578  1385 solver.cpp:219] Iteration 400 (667.293 iter/s, 0.149859s/100 iters), loss = 0.800954
I0428 20:19:34.828622  1385 solver.cpp:238]     Train net output #0: loss = 0.800954 (* 1 = 0.800954 loss)
I0428 20:19:34.828632  1385 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:34.979352  1385 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:35.059000  1392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:35.060201  1385 solver.cpp:398]     Test net output #0: accuracy = 0.6832
I0428 20:19:35.060230  1385 solver.cpp:398]     Test net output #1: loss = 0.797909 (* 1 = 0.797909 loss)
I0428 20:19:35.061676  1385 solver.cpp:219] Iteration 500 (429.113 iter/s, 0.233039s/100 iters), loss = 0.798506
I0428 20:19:35.061725  1385 solver.cpp:238]     Train net output #0: loss = 0.798506 (* 1 = 0.798506 loss)
I0428 20:19:35.061735  1385 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:35.204622  1385 solver.cpp:219] Iteration 600 (699.864 iter/s, 0.142885s/100 iters), loss = 0.649169
I0428 20:19:35.204655  1385 solver.cpp:238]     Train net output #0: loss = 0.649169 (* 1 = 0.649169 loss)
I0428 20:19:35.204668  1385 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:35.346109  1385 solver.cpp:219] Iteration 700 (707.014 iter/s, 0.14144s/100 iters), loss = 0.439818
I0428 20:19:35.346145  1385 solver.cpp:238]     Train net output #0: loss = 0.439818 (* 1 = 0.439818 loss)
I0428 20:19:35.346154  1385 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:35.486137  1385 solver.cpp:219] Iteration 800 (714.389 iter/s, 0.13998s/100 iters), loss = 0.519679
I0428 20:19:35.486172  1385 solver.cpp:238]     Train net output #0: loss = 0.519679 (* 1 = 0.519679 loss)
I0428 20:19:35.486181  1385 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:35.627009  1385 solver.cpp:219] Iteration 900 (710.103 iter/s, 0.140825s/100 iters), loss = 0.474469
I0428 20:19:35.627043  1385 solver.cpp:238]     Train net output #0: loss = 0.474469 (* 1 = 0.474469 loss)
I0428 20:19:35.627053  1385 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:35.673868  1391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:35.767437  1385 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:35.769086  1385 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:35.770122  1385 solver.cpp:311] Iteration 1000, loss = 0.366303
I0428 20:19:35.770141  1385 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:35.840936  1392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:35.843294  1385 solver.cpp:398]     Test net output #0: accuracy = 0.8752
I0428 20:19:35.843318  1385 solver.cpp:398]     Test net output #1: loss = 0.32703 (* 1 = 0.32703 loss)
I0428 20:19:35.843334  1385 solver.cpp:316] Optimization Done.
I0428 20:19:35.843338  1385 caffe.cpp:259] Optimization Done.
