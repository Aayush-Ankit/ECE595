I0428 20:17:57.690654  1023 caffe.cpp:218] Using GPUs 0
I0428 20:17:57.720000  1023 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:58.158584  1023 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1307.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:58.158717  1023 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1307.prototxt
I0428 20:17:58.159077  1023 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:58.159108  1023 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:58.159204  1023 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:58.159265  1023 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:58.159343  1023 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:58.159361  1023 net.cpp:86] Creating Layer mnist
I0428 20:17:58.159368  1023 net.cpp:382] mnist -> data
I0428 20:17:58.159385  1023 net.cpp:382] mnist -> label
I0428 20:17:58.160300  1023 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:58.162798  1023 net.cpp:124] Setting up mnist
I0428 20:17:58.162829  1023 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:58.162848  1023 net.cpp:131] Top shape: 64 (64)
I0428 20:17:58.162852  1023 net.cpp:139] Memory required for data: 200960
I0428 20:17:58.162858  1023 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:58.162869  1023 net.cpp:86] Creating Layer conv0
I0428 20:17:58.162888  1023 net.cpp:408] conv0 <- data
I0428 20:17:58.162900  1023 net.cpp:382] conv0 -> conv0
I0428 20:17:58.386574  1023 net.cpp:124] Setting up conv0
I0428 20:17:58.386600  1023 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:58.386605  1023 net.cpp:139] Memory required for data: 7573760
I0428 20:17:58.386617  1023 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:58.386629  1023 net.cpp:86] Creating Layer pool0
I0428 20:17:58.386633  1023 net.cpp:408] pool0 <- conv0
I0428 20:17:58.386638  1023 net.cpp:382] pool0 -> pool0
I0428 20:17:58.386695  1023 net.cpp:124] Setting up pool0
I0428 20:17:58.386700  1023 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:58.386703  1023 net.cpp:139] Memory required for data: 9416960
I0428 20:17:58.386706  1023 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:58.386716  1023 net.cpp:86] Creating Layer conv1
I0428 20:17:58.386719  1023 net.cpp:408] conv1 <- pool0
I0428 20:17:58.386724  1023 net.cpp:382] conv1 -> conv1
I0428 20:17:58.389578  1023 net.cpp:124] Setting up conv1
I0428 20:17:58.389608  1023 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:58.389612  1023 net.cpp:139] Memory required for data: 9580800
I0428 20:17:58.389621  1023 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:58.389628  1023 net.cpp:86] Creating Layer pool1
I0428 20:17:58.389632  1023 net.cpp:408] pool1 <- conv1
I0428 20:17:58.389636  1023 net.cpp:382] pool1 -> pool1
I0428 20:17:58.389700  1023 net.cpp:124] Setting up pool1
I0428 20:17:58.389706  1023 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:58.389708  1023 net.cpp:139] Memory required for data: 9621760
I0428 20:17:58.389711  1023 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:58.389719  1023 net.cpp:86] Creating Layer ip1
I0428 20:17:58.389720  1023 net.cpp:408] ip1 <- pool1
I0428 20:17:58.389725  1023 net.cpp:382] ip1 -> ip1
I0428 20:17:58.389822  1023 net.cpp:124] Setting up ip1
I0428 20:17:58.389829  1023 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:58.389833  1023 net.cpp:139] Memory required for data: 9624320
I0428 20:17:58.389839  1023 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:58.389844  1023 net.cpp:86] Creating Layer relu1
I0428 20:17:58.389847  1023 net.cpp:408] relu1 <- ip1
I0428 20:17:58.389852  1023 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:58.390020  1023 net.cpp:124] Setting up relu1
I0428 20:17:58.390028  1023 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:58.390031  1023 net.cpp:139] Memory required for data: 9626880
I0428 20:17:58.390034  1023 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:58.390040  1023 net.cpp:86] Creating Layer ip2
I0428 20:17:58.390043  1023 net.cpp:408] ip2 <- ip1
I0428 20:17:58.390048  1023 net.cpp:382] ip2 -> ip2
I0428 20:17:58.390136  1023 net.cpp:124] Setting up ip2
I0428 20:17:58.390141  1023 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:58.390144  1023 net.cpp:139] Memory required for data: 9639680
I0428 20:17:58.390149  1023 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:58.390154  1023 net.cpp:86] Creating Layer relu2
I0428 20:17:58.390157  1023 net.cpp:408] relu2 <- ip2
I0428 20:17:58.390161  1023 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:58.390818  1023 net.cpp:124] Setting up relu2
I0428 20:17:58.390830  1023 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:58.390849  1023 net.cpp:139] Memory required for data: 9652480
I0428 20:17:58.390852  1023 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:58.390859  1023 net.cpp:86] Creating Layer ip3
I0428 20:17:58.390862  1023 net.cpp:408] ip3 <- ip2
I0428 20:17:58.390867  1023 net.cpp:382] ip3 -> ip3
I0428 20:17:58.390959  1023 net.cpp:124] Setting up ip3
I0428 20:17:58.390965  1023 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:58.390969  1023 net.cpp:139] Memory required for data: 9655040
I0428 20:17:58.390975  1023 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:58.390982  1023 net.cpp:86] Creating Layer relu3
I0428 20:17:58.390985  1023 net.cpp:408] relu3 <- ip3
I0428 20:17:58.390990  1023 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:58.391154  1023 net.cpp:124] Setting up relu3
I0428 20:17:58.391176  1023 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:58.391180  1023 net.cpp:139] Memory required for data: 9657600
I0428 20:17:58.391182  1023 layer_factory.hpp:77] Creating layer loss
I0428 20:17:58.391188  1023 net.cpp:86] Creating Layer loss
I0428 20:17:58.391191  1023 net.cpp:408] loss <- ip3
I0428 20:17:58.391196  1023 net.cpp:408] loss <- label
I0428 20:17:58.391201  1023 net.cpp:382] loss -> loss
I0428 20:17:58.391213  1023 layer_factory.hpp:77] Creating layer loss
I0428 20:17:58.391443  1023 net.cpp:124] Setting up loss
I0428 20:17:58.391451  1023 net.cpp:131] Top shape: (1)
I0428 20:17:58.391455  1023 net.cpp:134]     with loss weight 1
I0428 20:17:58.391469  1023 net.cpp:139] Memory required for data: 9657604
I0428 20:17:58.391474  1023 net.cpp:200] loss needs backward computation.
I0428 20:17:58.391476  1023 net.cpp:200] relu3 needs backward computation.
I0428 20:17:58.391479  1023 net.cpp:200] ip3 needs backward computation.
I0428 20:17:58.391482  1023 net.cpp:200] relu2 needs backward computation.
I0428 20:17:58.391499  1023 net.cpp:200] ip2 needs backward computation.
I0428 20:17:58.391502  1023 net.cpp:200] relu1 needs backward computation.
I0428 20:17:58.391505  1023 net.cpp:200] ip1 needs backward computation.
I0428 20:17:58.391510  1023 net.cpp:200] pool1 needs backward computation.
I0428 20:17:58.391512  1023 net.cpp:200] conv1 needs backward computation.
I0428 20:17:58.391515  1023 net.cpp:200] pool0 needs backward computation.
I0428 20:17:58.391518  1023 net.cpp:200] conv0 needs backward computation.
I0428 20:17:58.391521  1023 net.cpp:202] mnist does not need backward computation.
I0428 20:17:58.391525  1023 net.cpp:244] This network produces output loss
I0428 20:17:58.391533  1023 net.cpp:257] Network initialization done.
I0428 20:17:58.391871  1023 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1307.prototxt
I0428 20:17:58.391913  1023 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:58.392019  1023 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:58.392112  1023 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:58.392161  1023 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:58.392174  1023 net.cpp:86] Creating Layer mnist
I0428 20:17:58.392179  1023 net.cpp:382] mnist -> data
I0428 20:17:58.392185  1023 net.cpp:382] mnist -> label
I0428 20:17:58.392271  1023 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:58.394310  1023 net.cpp:124] Setting up mnist
I0428 20:17:58.394340  1023 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:58.394361  1023 net.cpp:131] Top shape: 100 (100)
I0428 20:17:58.394366  1023 net.cpp:139] Memory required for data: 314000
I0428 20:17:58.394368  1023 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:58.394376  1023 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:58.394378  1023 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:58.394383  1023 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:58.394389  1023 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:58.394464  1023 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:58.394470  1023 net.cpp:131] Top shape: 100 (100)
I0428 20:17:58.394474  1023 net.cpp:131] Top shape: 100 (100)
I0428 20:17:58.394477  1023 net.cpp:139] Memory required for data: 314800
I0428 20:17:58.394480  1023 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:58.394489  1023 net.cpp:86] Creating Layer conv0
I0428 20:17:58.394491  1023 net.cpp:408] conv0 <- data
I0428 20:17:58.394496  1023 net.cpp:382] conv0 -> conv0
I0428 20:17:58.396045  1023 net.cpp:124] Setting up conv0
I0428 20:17:58.396059  1023 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:58.396062  1023 net.cpp:139] Memory required for data: 11834800
I0428 20:17:58.396071  1023 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:58.396077  1023 net.cpp:86] Creating Layer pool0
I0428 20:17:58.396096  1023 net.cpp:408] pool0 <- conv0
I0428 20:17:58.396101  1023 net.cpp:382] pool0 -> pool0
I0428 20:17:58.396136  1023 net.cpp:124] Setting up pool0
I0428 20:17:58.396142  1023 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:58.396144  1023 net.cpp:139] Memory required for data: 14714800
I0428 20:17:58.396147  1023 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:58.396155  1023 net.cpp:86] Creating Layer conv1
I0428 20:17:58.396159  1023 net.cpp:408] conv1 <- pool0
I0428 20:17:58.396167  1023 net.cpp:382] conv1 -> conv1
I0428 20:17:58.397788  1023 net.cpp:124] Setting up conv1
I0428 20:17:58.397800  1023 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:58.397827  1023 net.cpp:139] Memory required for data: 14970800
I0428 20:17:58.397836  1023 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:58.397843  1023 net.cpp:86] Creating Layer pool1
I0428 20:17:58.397846  1023 net.cpp:408] pool1 <- conv1
I0428 20:17:58.397851  1023 net.cpp:382] pool1 -> pool1
I0428 20:17:58.397905  1023 net.cpp:124] Setting up pool1
I0428 20:17:58.397910  1023 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:58.397913  1023 net.cpp:139] Memory required for data: 15034800
I0428 20:17:58.397917  1023 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:58.397922  1023 net.cpp:86] Creating Layer ip1
I0428 20:17:58.397927  1023 net.cpp:408] ip1 <- pool1
I0428 20:17:58.397931  1023 net.cpp:382] ip1 -> ip1
I0428 20:17:58.398056  1023 net.cpp:124] Setting up ip1
I0428 20:17:58.398062  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.398075  1023 net.cpp:139] Memory required for data: 15038800
I0428 20:17:58.398083  1023 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:58.398087  1023 net.cpp:86] Creating Layer relu1
I0428 20:17:58.398092  1023 net.cpp:408] relu1 <- ip1
I0428 20:17:58.398111  1023 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:58.398317  1023 net.cpp:124] Setting up relu1
I0428 20:17:58.398326  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.398329  1023 net.cpp:139] Memory required for data: 15042800
I0428 20:17:58.398332  1023 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:58.398339  1023 net.cpp:86] Creating Layer ip2
I0428 20:17:58.398342  1023 net.cpp:408] ip2 <- ip1
I0428 20:17:58.398349  1023 net.cpp:382] ip2 -> ip2
I0428 20:17:58.398476  1023 net.cpp:124] Setting up ip2
I0428 20:17:58.398483  1023 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:58.398486  1023 net.cpp:139] Memory required for data: 15062800
I0428 20:17:58.398493  1023 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:58.398497  1023 net.cpp:86] Creating Layer relu2
I0428 20:17:58.398500  1023 net.cpp:408] relu2 <- ip2
I0428 20:17:58.398504  1023 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:58.398661  1023 net.cpp:124] Setting up relu2
I0428 20:17:58.398671  1023 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:58.398674  1023 net.cpp:139] Memory required for data: 15082800
I0428 20:17:58.398677  1023 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:58.398684  1023 net.cpp:86] Creating Layer ip3
I0428 20:17:58.398686  1023 net.cpp:408] ip3 <- ip2
I0428 20:17:58.398691  1023 net.cpp:382] ip3 -> ip3
I0428 20:17:58.398807  1023 net.cpp:124] Setting up ip3
I0428 20:17:58.398813  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.398816  1023 net.cpp:139] Memory required for data: 15086800
I0428 20:17:58.398824  1023 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:58.398828  1023 net.cpp:86] Creating Layer relu3
I0428 20:17:58.398831  1023 net.cpp:408] relu3 <- ip3
I0428 20:17:58.398835  1023 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:58.399654  1023 net.cpp:124] Setting up relu3
I0428 20:17:58.399667  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.399686  1023 net.cpp:139] Memory required for data: 15090800
I0428 20:17:58.399689  1023 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:58.399694  1023 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:58.399699  1023 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:58.399704  1023 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:58.399710  1023 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:58.399756  1023 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:58.399761  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.399765  1023 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:58.399767  1023 net.cpp:139] Memory required for data: 15098800
I0428 20:17:58.399770  1023 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:58.399775  1023 net.cpp:86] Creating Layer accuracy
I0428 20:17:58.399778  1023 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:58.399782  1023 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:58.399786  1023 net.cpp:382] accuracy -> accuracy
I0428 20:17:58.399792  1023 net.cpp:124] Setting up accuracy
I0428 20:17:58.399796  1023 net.cpp:131] Top shape: (1)
I0428 20:17:58.399799  1023 net.cpp:139] Memory required for data: 15098804
I0428 20:17:58.399802  1023 layer_factory.hpp:77] Creating layer loss
I0428 20:17:58.399806  1023 net.cpp:86] Creating Layer loss
I0428 20:17:58.399809  1023 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:58.399812  1023 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:58.399816  1023 net.cpp:382] loss -> loss
I0428 20:17:58.399822  1023 layer_factory.hpp:77] Creating layer loss
I0428 20:17:58.400027  1023 net.cpp:124] Setting up loss
I0428 20:17:58.400037  1023 net.cpp:131] Top shape: (1)
I0428 20:17:58.400039  1023 net.cpp:134]     with loss weight 1
I0428 20:17:58.400055  1023 net.cpp:139] Memory required for data: 15098808
I0428 20:17:58.400058  1023 net.cpp:200] loss needs backward computation.
I0428 20:17:58.400063  1023 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:58.400066  1023 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:58.400069  1023 net.cpp:200] relu3 needs backward computation.
I0428 20:17:58.400071  1023 net.cpp:200] ip3 needs backward computation.
I0428 20:17:58.400074  1023 net.cpp:200] relu2 needs backward computation.
I0428 20:17:58.400077  1023 net.cpp:200] ip2 needs backward computation.
I0428 20:17:58.400080  1023 net.cpp:200] relu1 needs backward computation.
I0428 20:17:58.400084  1023 net.cpp:200] ip1 needs backward computation.
I0428 20:17:58.400086  1023 net.cpp:200] pool1 needs backward computation.
I0428 20:17:58.400089  1023 net.cpp:200] conv1 needs backward computation.
I0428 20:17:58.400092  1023 net.cpp:200] pool0 needs backward computation.
I0428 20:17:58.400095  1023 net.cpp:200] conv0 needs backward computation.
I0428 20:17:58.400099  1023 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:58.400102  1023 net.cpp:202] mnist does not need backward computation.
I0428 20:17:58.400105  1023 net.cpp:244] This network produces output accuracy
I0428 20:17:58.400108  1023 net.cpp:244] This network produces output loss
I0428 20:17:58.400118  1023 net.cpp:257] Network initialization done.
I0428 20:17:58.400159  1023 solver.cpp:56] Solver scaffolding done.
I0428 20:17:58.400490  1023 caffe.cpp:248] Starting Optimization
I0428 20:17:58.400496  1023 solver.cpp:273] Solving LeNet
I0428 20:17:58.400498  1023 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:58.401244  1023 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:58.469614  1030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:58.471945  1023 solver.cpp:398]     Test net output #0: accuracy = 0.1281
I0428 20:17:58.471978  1023 solver.cpp:398]     Test net output #1: loss = 2.29708 (* 1 = 2.29708 loss)
I0428 20:17:58.476184  1023 solver.cpp:219] Iteration 0 (3.00936 iter/s, 0.075647s/100 iters), loss = 2.30048
I0428 20:17:58.476223  1023 solver.cpp:238]     Train net output #0: loss = 2.30048 (* 1 = 2.30048 loss)
I0428 20:17:58.476234  1023 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:58.600231  1023 solver.cpp:219] Iteration 100 (806.371 iter/s, 0.124012s/100 iters), loss = 0.871556
I0428 20:17:58.600270  1023 solver.cpp:238]     Train net output #0: loss = 0.871556 (* 1 = 0.871556 loss)
I0428 20:17:58.600275  1023 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:58.720511  1023 solver.cpp:219] Iteration 200 (831.732 iter/s, 0.120231s/100 iters), loss = 0.802936
I0428 20:17:58.720540  1023 solver.cpp:238]     Train net output #0: loss = 0.802936 (* 1 = 0.802936 loss)
I0428 20:17:58.720556  1023 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:58.842998  1023 solver.cpp:219] Iteration 300 (816.688 iter/s, 0.122446s/100 iters), loss = 0.819438
I0428 20:17:58.843022  1023 solver.cpp:238]     Train net output #0: loss = 0.819438 (* 1 = 0.819438 loss)
I0428 20:17:58.843029  1023 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:58.965220  1023 solver.cpp:219] Iteration 400 (818.418 iter/s, 0.122187s/100 iters), loss = 0.397227
I0428 20:17:58.965246  1023 solver.cpp:238]     Train net output #0: loss = 0.397227 (* 1 = 0.397227 loss)
I0428 20:17:58.965253  1023 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:59.087050  1023 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:59.154305  1030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:59.156687  1023 solver.cpp:398]     Test net output #0: accuracy = 0.8632
I0428 20:17:59.156724  1023 solver.cpp:398]     Test net output #1: loss = 0.386571 (* 1 = 0.386571 loss)
I0428 20:17:59.157886  1023 solver.cpp:219] Iteration 500 (519.144 iter/s, 0.192625s/100 iters), loss = 0.416877
I0428 20:17:59.157937  1023 solver.cpp:238]     Train net output #0: loss = 0.416877 (* 1 = 0.416877 loss)
I0428 20:17:59.157974  1023 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:59.282646  1023 solver.cpp:219] Iteration 600 (801.828 iter/s, 0.124715s/100 iters), loss = 0.296853
I0428 20:17:59.282670  1023 solver.cpp:238]     Train net output #0: loss = 0.296853 (* 1 = 0.296853 loss)
I0428 20:17:59.282676  1023 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:59.399667  1023 solver.cpp:219] Iteration 700 (854.803 iter/s, 0.116986s/100 iters), loss = 0.258042
I0428 20:17:59.399706  1023 solver.cpp:238]     Train net output #0: loss = 0.258042 (* 1 = 0.258042 loss)
I0428 20:17:59.399713  1023 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:59.518479  1023 solver.cpp:219] Iteration 800 (841.908 iter/s, 0.118778s/100 iters), loss = 0.659776
I0428 20:17:59.518506  1023 solver.cpp:238]     Train net output #0: loss = 0.659776 (* 1 = 0.659776 loss)
I0428 20:17:59.518512  1023 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:59.635253  1023 solver.cpp:219] Iteration 900 (856.626 iter/s, 0.116737s/100 iters), loss = 0.390887
I0428 20:17:59.635277  1023 solver.cpp:238]     Train net output #0: loss = 0.390887 (* 1 = 0.390887 loss)
I0428 20:17:59.635300  1023 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:59.674286  1029 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:59.751715  1023 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:59.752773  1023 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:59.753599  1023 solver.cpp:311] Iteration 1000, loss = 0.310088
I0428 20:17:59.753614  1023 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:59.763202  1023 blocking_queue.cpp:49] Waiting for data
I0428 20:17:59.822067  1030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:59.823146  1023 solver.cpp:398]     Test net output #0: accuracy = 0.8757
I0428 20:17:59.823182  1023 solver.cpp:398]     Test net output #1: loss = 0.320913 (* 1 = 0.320913 loss)
I0428 20:17:59.823189  1023 solver.cpp:316] Optimization Done.
I0428 20:17:59.823206  1023 caffe.cpp:259] Optimization Done.
