I0428 20:25:53.852911  2710 caffe.cpp:218] Using GPUs 0
I0428 20:25:53.885615  2710 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:54.391162  2710 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1462.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:54.391288  2710 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1462.prototxt
I0428 20:25:54.391635  2710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:54.391654  2710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:54.391737  2710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:54.391804  2710 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:54.391888  2710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:54.391907  2710 net.cpp:86] Creating Layer mnist
I0428 20:25:54.391916  2710 net.cpp:382] mnist -> data
I0428 20:25:54.391933  2710 net.cpp:382] mnist -> label
I0428 20:25:54.392900  2710 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:54.395009  2710 net.cpp:124] Setting up mnist
I0428 20:25:54.395022  2710 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:54.395027  2710 net.cpp:131] Top shape: 64 (64)
I0428 20:25:54.395030  2710 net.cpp:139] Memory required for data: 200960
I0428 20:25:54.395035  2710 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:54.395050  2710 net.cpp:86] Creating Layer conv0
I0428 20:25:54.395067  2710 net.cpp:408] conv0 <- data
I0428 20:25:54.395078  2710 net.cpp:382] conv0 -> conv0
I0428 20:25:54.628110  2710 net.cpp:124] Setting up conv0
I0428 20:25:54.628136  2710 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:54.628140  2710 net.cpp:139] Memory required for data: 14946560
I0428 20:25:54.628154  2710 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:54.628166  2710 net.cpp:86] Creating Layer pool0
I0428 20:25:54.628170  2710 net.cpp:408] pool0 <- conv0
I0428 20:25:54.628175  2710 net.cpp:382] pool0 -> pool0
I0428 20:25:54.628218  2710 net.cpp:124] Setting up pool0
I0428 20:25:54.628223  2710 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:54.628226  2710 net.cpp:139] Memory required for data: 18632960
I0428 20:25:54.628228  2710 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:54.628243  2710 net.cpp:86] Creating Layer conv1
I0428 20:25:54.628247  2710 net.cpp:408] conv1 <- pool0
I0428 20:25:54.628252  2710 net.cpp:382] conv1 -> conv1
I0428 20:25:54.630998  2710 net.cpp:124] Setting up conv1
I0428 20:25:54.631028  2710 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:54.631031  2710 net.cpp:139] Memory required for data: 18665728
I0428 20:25:54.631039  2710 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:54.631047  2710 net.cpp:86] Creating Layer pool1
I0428 20:25:54.631050  2710 net.cpp:408] pool1 <- conv1
I0428 20:25:54.631054  2710 net.cpp:382] pool1 -> pool1
I0428 20:25:54.631106  2710 net.cpp:124] Setting up pool1
I0428 20:25:54.631111  2710 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:54.631114  2710 net.cpp:139] Memory required for data: 18673920
I0428 20:25:54.631117  2710 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:54.631124  2710 net.cpp:86] Creating Layer ip1
I0428 20:25:54.631127  2710 net.cpp:408] ip1 <- pool1
I0428 20:25:54.631132  2710 net.cpp:382] ip1 -> ip1
I0428 20:25:54.631237  2710 net.cpp:124] Setting up ip1
I0428 20:25:54.631244  2710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:54.631247  2710 net.cpp:139] Memory required for data: 18676480
I0428 20:25:54.631254  2710 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:54.631259  2710 net.cpp:86] Creating Layer relu1
I0428 20:25:54.631263  2710 net.cpp:408] relu1 <- ip1
I0428 20:25:54.631266  2710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:54.631427  2710 net.cpp:124] Setting up relu1
I0428 20:25:54.631436  2710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:54.631439  2710 net.cpp:139] Memory required for data: 18679040
I0428 20:25:54.631441  2710 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:54.631448  2710 net.cpp:86] Creating Layer ip2
I0428 20:25:54.631450  2710 net.cpp:408] ip2 <- ip1
I0428 20:25:54.631455  2710 net.cpp:382] ip2 -> ip2
I0428 20:25:54.631548  2710 net.cpp:124] Setting up ip2
I0428 20:25:54.631556  2710 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:54.631558  2710 net.cpp:139] Memory required for data: 18691840
I0428 20:25:54.631563  2710 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:54.631568  2710 net.cpp:86] Creating Layer relu2
I0428 20:25:54.631572  2710 net.cpp:408] relu2 <- ip2
I0428 20:25:54.631575  2710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:54.632360  2710 net.cpp:124] Setting up relu2
I0428 20:25:54.632372  2710 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:54.632392  2710 net.cpp:139] Memory required for data: 18704640
I0428 20:25:54.632395  2710 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:54.632402  2710 net.cpp:86] Creating Layer ip3
I0428 20:25:54.632405  2710 net.cpp:408] ip3 <- ip2
I0428 20:25:54.632411  2710 net.cpp:382] ip3 -> ip3
I0428 20:25:54.632540  2710 net.cpp:124] Setting up ip3
I0428 20:25:54.632547  2710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:54.632550  2710 net.cpp:139] Memory required for data: 18707200
I0428 20:25:54.632557  2710 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:54.632562  2710 net.cpp:86] Creating Layer relu3
I0428 20:25:54.632565  2710 net.cpp:408] relu3 <- ip3
I0428 20:25:54.632570  2710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:54.632725  2710 net.cpp:124] Setting up relu3
I0428 20:25:54.632733  2710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:54.632736  2710 net.cpp:139] Memory required for data: 18709760
I0428 20:25:54.632740  2710 layer_factory.hpp:77] Creating layer loss
I0428 20:25:54.632745  2710 net.cpp:86] Creating Layer loss
I0428 20:25:54.632747  2710 net.cpp:408] loss <- ip3
I0428 20:25:54.632751  2710 net.cpp:408] loss <- label
I0428 20:25:54.632756  2710 net.cpp:382] loss -> loss
I0428 20:25:54.632771  2710 layer_factory.hpp:77] Creating layer loss
I0428 20:25:54.633062  2710 net.cpp:124] Setting up loss
I0428 20:25:54.633086  2710 net.cpp:131] Top shape: (1)
I0428 20:25:54.633090  2710 net.cpp:134]     with loss weight 1
I0428 20:25:54.633121  2710 net.cpp:139] Memory required for data: 18709764
I0428 20:25:54.633124  2710 net.cpp:200] loss needs backward computation.
I0428 20:25:54.633128  2710 net.cpp:200] relu3 needs backward computation.
I0428 20:25:54.633132  2710 net.cpp:200] ip3 needs backward computation.
I0428 20:25:54.633136  2710 net.cpp:200] relu2 needs backward computation.
I0428 20:25:54.633138  2710 net.cpp:200] ip2 needs backward computation.
I0428 20:25:54.633141  2710 net.cpp:200] relu1 needs backward computation.
I0428 20:25:54.633144  2710 net.cpp:200] ip1 needs backward computation.
I0428 20:25:54.633147  2710 net.cpp:200] pool1 needs backward computation.
I0428 20:25:54.633152  2710 net.cpp:200] conv1 needs backward computation.
I0428 20:25:54.633154  2710 net.cpp:200] pool0 needs backward computation.
I0428 20:25:54.633158  2710 net.cpp:200] conv0 needs backward computation.
I0428 20:25:54.633162  2710 net.cpp:202] mnist does not need backward computation.
I0428 20:25:54.633164  2710 net.cpp:244] This network produces output loss
I0428 20:25:54.633175  2710 net.cpp:257] Network initialization done.
I0428 20:25:54.633582  2710 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1462.prototxt
I0428 20:25:54.633625  2710 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:54.633715  2710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:54.633795  2710 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:54.633854  2710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:54.633867  2710 net.cpp:86] Creating Layer mnist
I0428 20:25:54.633872  2710 net.cpp:382] mnist -> data
I0428 20:25:54.633878  2710 net.cpp:382] mnist -> label
I0428 20:25:54.633975  2710 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:54.635982  2710 net.cpp:124] Setting up mnist
I0428 20:25:54.636010  2710 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:54.636015  2710 net.cpp:131] Top shape: 100 (100)
I0428 20:25:54.636019  2710 net.cpp:139] Memory required for data: 314000
I0428 20:25:54.636023  2710 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:54.636029  2710 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:54.636032  2710 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:54.636037  2710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:54.636044  2710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:54.636080  2710 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:54.636085  2710 net.cpp:131] Top shape: 100 (100)
I0428 20:25:54.636088  2710 net.cpp:131] Top shape: 100 (100)
I0428 20:25:54.636091  2710 net.cpp:139] Memory required for data: 314800
I0428 20:25:54.636095  2710 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:54.636102  2710 net.cpp:86] Creating Layer conv0
I0428 20:25:54.636106  2710 net.cpp:408] conv0 <- data
I0428 20:25:54.636109  2710 net.cpp:382] conv0 -> conv0
I0428 20:25:54.637987  2710 net.cpp:124] Setting up conv0
I0428 20:25:54.638000  2710 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:54.638005  2710 net.cpp:139] Memory required for data: 23354800
I0428 20:25:54.638012  2710 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:54.638018  2710 net.cpp:86] Creating Layer pool0
I0428 20:25:54.638037  2710 net.cpp:408] pool0 <- conv0
I0428 20:25:54.638041  2710 net.cpp:382] pool0 -> pool0
I0428 20:25:54.638090  2710 net.cpp:124] Setting up pool0
I0428 20:25:54.638095  2710 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:54.638098  2710 net.cpp:139] Memory required for data: 29114800
I0428 20:25:54.638100  2710 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:54.638108  2710 net.cpp:86] Creating Layer conv1
I0428 20:25:54.638110  2710 net.cpp:408] conv1 <- pool0
I0428 20:25:54.638114  2710 net.cpp:382] conv1 -> conv1
I0428 20:25:54.639773  2710 net.cpp:124] Setting up conv1
I0428 20:25:54.639787  2710 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:54.639791  2710 net.cpp:139] Memory required for data: 29166000
I0428 20:25:54.639799  2710 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:54.639806  2710 net.cpp:86] Creating Layer pool1
I0428 20:25:54.639809  2710 net.cpp:408] pool1 <- conv1
I0428 20:25:54.639816  2710 net.cpp:382] pool1 -> pool1
I0428 20:25:54.639852  2710 net.cpp:124] Setting up pool1
I0428 20:25:54.639856  2710 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:54.639859  2710 net.cpp:139] Memory required for data: 29178800
I0428 20:25:54.639863  2710 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:54.639883  2710 net.cpp:86] Creating Layer ip1
I0428 20:25:54.639911  2710 net.cpp:408] ip1 <- pool1
I0428 20:25:54.639921  2710 net.cpp:382] ip1 -> ip1
I0428 20:25:54.640024  2710 net.cpp:124] Setting up ip1
I0428 20:25:54.640033  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.640046  2710 net.cpp:139] Memory required for data: 29182800
I0428 20:25:54.640054  2710 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:54.640059  2710 net.cpp:86] Creating Layer relu1
I0428 20:25:54.640069  2710 net.cpp:408] relu1 <- ip1
I0428 20:25:54.640074  2710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:54.640244  2710 net.cpp:124] Setting up relu1
I0428 20:25:54.640254  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.640256  2710 net.cpp:139] Memory required for data: 29186800
I0428 20:25:54.640259  2710 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:54.640266  2710 net.cpp:86] Creating Layer ip2
I0428 20:25:54.640270  2710 net.cpp:408] ip2 <- ip1
I0428 20:25:54.640275  2710 net.cpp:382] ip2 -> ip2
I0428 20:25:54.640372  2710 net.cpp:124] Setting up ip2
I0428 20:25:54.640378  2710 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:54.640382  2710 net.cpp:139] Memory required for data: 29206800
I0428 20:25:54.640388  2710 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:54.640391  2710 net.cpp:86] Creating Layer relu2
I0428 20:25:54.640394  2710 net.cpp:408] relu2 <- ip2
I0428 20:25:54.640398  2710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:54.640554  2710 net.cpp:124] Setting up relu2
I0428 20:25:54.640561  2710 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:54.640564  2710 net.cpp:139] Memory required for data: 29226800
I0428 20:25:54.640568  2710 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:54.640573  2710 net.cpp:86] Creating Layer ip3
I0428 20:25:54.640575  2710 net.cpp:408] ip3 <- ip2
I0428 20:25:54.640580  2710 net.cpp:382] ip3 -> ip3
I0428 20:25:54.640687  2710 net.cpp:124] Setting up ip3
I0428 20:25:54.640694  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.640714  2710 net.cpp:139] Memory required for data: 29230800
I0428 20:25:54.640722  2710 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:54.640741  2710 net.cpp:86] Creating Layer relu3
I0428 20:25:54.640744  2710 net.cpp:408] relu3 <- ip3
I0428 20:25:54.640748  2710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:54.641676  2710 net.cpp:124] Setting up relu3
I0428 20:25:54.641688  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.641692  2710 net.cpp:139] Memory required for data: 29234800
I0428 20:25:54.641695  2710 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:54.641701  2710 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:54.641711  2710 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:54.641717  2710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:54.641723  2710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:54.641816  2710 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:54.641824  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.641827  2710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:54.641830  2710 net.cpp:139] Memory required for data: 29242800
I0428 20:25:54.641834  2710 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:54.641845  2710 net.cpp:86] Creating Layer accuracy
I0428 20:25:54.641854  2710 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:54.641858  2710 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:54.641862  2710 net.cpp:382] accuracy -> accuracy
I0428 20:25:54.641870  2710 net.cpp:124] Setting up accuracy
I0428 20:25:54.641873  2710 net.cpp:131] Top shape: (1)
I0428 20:25:54.641876  2710 net.cpp:139] Memory required for data: 29242804
I0428 20:25:54.641904  2710 layer_factory.hpp:77] Creating layer loss
I0428 20:25:54.641908  2710 net.cpp:86] Creating Layer loss
I0428 20:25:54.641911  2710 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:54.641916  2710 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:54.641919  2710 net.cpp:382] loss -> loss
I0428 20:25:54.641926  2710 layer_factory.hpp:77] Creating layer loss
I0428 20:25:54.642187  2710 net.cpp:124] Setting up loss
I0428 20:25:54.642196  2710 net.cpp:131] Top shape: (1)
I0428 20:25:54.642199  2710 net.cpp:134]     with loss weight 1
I0428 20:25:54.642215  2710 net.cpp:139] Memory required for data: 29242808
I0428 20:25:54.642218  2710 net.cpp:200] loss needs backward computation.
I0428 20:25:54.642222  2710 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:54.642226  2710 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:54.642228  2710 net.cpp:200] relu3 needs backward computation.
I0428 20:25:54.642231  2710 net.cpp:200] ip3 needs backward computation.
I0428 20:25:54.642235  2710 net.cpp:200] relu2 needs backward computation.
I0428 20:25:54.642237  2710 net.cpp:200] ip2 needs backward computation.
I0428 20:25:54.642246  2710 net.cpp:200] relu1 needs backward computation.
I0428 20:25:54.642249  2710 net.cpp:200] ip1 needs backward computation.
I0428 20:25:54.642252  2710 net.cpp:200] pool1 needs backward computation.
I0428 20:25:54.642256  2710 net.cpp:200] conv1 needs backward computation.
I0428 20:25:54.642258  2710 net.cpp:200] pool0 needs backward computation.
I0428 20:25:54.642261  2710 net.cpp:200] conv0 needs backward computation.
I0428 20:25:54.642264  2710 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:54.642268  2710 net.cpp:202] mnist does not need backward computation.
I0428 20:25:54.642271  2710 net.cpp:244] This network produces output accuracy
I0428 20:25:54.642274  2710 net.cpp:244] This network produces output loss
I0428 20:25:54.642284  2710 net.cpp:257] Network initialization done.
I0428 20:25:54.642328  2710 solver.cpp:56] Solver scaffolding done.
I0428 20:25:54.642699  2710 caffe.cpp:248] Starting Optimization
I0428 20:25:54.642704  2710 solver.cpp:273] Solving LeNet
I0428 20:25:54.642707  2710 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:54.643504  2710 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:54.742108  2717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:54.743417  2710 solver.cpp:398]     Test net output #0: accuracy = 0.09
I0428 20:25:54.743466  2710 solver.cpp:398]     Test net output #1: loss = 2.34074 (* 1 = 2.34074 loss)
I0428 20:25:54.748101  2710 solver.cpp:219] Iteration 0 (-3.49919e-31 iter/s, 0.105368s/100 iters), loss = 2.3386
I0428 20:25:54.748126  2710 solver.cpp:238]     Train net output #0: loss = 2.3386 (* 1 = 2.3386 loss)
I0428 20:25:54.748152  2710 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:54.949440  2710 solver.cpp:219] Iteration 100 (496.784 iter/s, 0.201295s/100 iters), loss = 1.29324
I0428 20:25:54.949487  2710 solver.cpp:238]     Train net output #0: loss = 1.29324 (* 1 = 1.29324 loss)
I0428 20:25:54.949498  2710 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:55.159303  2710 solver.cpp:219] Iteration 200 (476.637 iter/s, 0.209803s/100 iters), loss = 0.754453
I0428 20:25:55.159337  2710 solver.cpp:238]     Train net output #0: loss = 0.754453 (* 1 = 0.754453 loss)
I0428 20:25:55.159344  2710 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:55.366387  2710 solver.cpp:219] Iteration 300 (483.004 iter/s, 0.207037s/100 iters), loss = 0.938977
I0428 20:25:55.366430  2710 solver.cpp:238]     Train net output #0: loss = 0.938977 (* 1 = 0.938977 loss)
I0428 20:25:55.366436  2710 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:55.572350  2710 solver.cpp:219] Iteration 400 (485.659 iter/s, 0.205906s/100 iters), loss = 0.773586
I0428 20:25:55.572391  2710 solver.cpp:238]     Train net output #0: loss = 0.773586 (* 1 = 0.773586 loss)
I0428 20:25:55.572396  2710 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:55.773563  2710 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:55.868911  2717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:55.871538  2710 solver.cpp:398]     Test net output #0: accuracy = 0.7771
I0428 20:25:55.871561  2710 solver.cpp:398]     Test net output #1: loss = 0.633085 (* 1 = 0.633085 loss)
I0428 20:25:55.873461  2710 solver.cpp:219] Iteration 500 (332.152 iter/s, 0.301067s/100 iters), loss = 0.705605
I0428 20:25:55.873483  2710 solver.cpp:238]     Train net output #0: loss = 0.705605 (* 1 = 0.705605 loss)
I0428 20:25:55.873535  2710 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:56.082723  2710 solver.cpp:219] Iteration 600 (477.96 iter/s, 0.209223s/100 iters), loss = 0.66012
I0428 20:25:56.082753  2710 solver.cpp:238]     Train net output #0: loss = 0.66012 (* 1 = 0.66012 loss)
I0428 20:25:56.082762  2710 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:56.294535  2710 solver.cpp:219] Iteration 700 (472.226 iter/s, 0.211763s/100 iters), loss = 0.379932
I0428 20:25:56.294584  2710 solver.cpp:238]     Train net output #0: loss = 0.379932 (* 1 = 0.379932 loss)
I0428 20:25:56.294595  2710 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:56.514780  2710 solver.cpp:219] Iteration 800 (454.177 iter/s, 0.220178s/100 iters), loss = 0.35222
I0428 20:25:56.514827  2710 solver.cpp:238]     Train net output #0: loss = 0.35222 (* 1 = 0.35222 loss)
I0428 20:25:56.514838  2710 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:56.733039  2710 solver.cpp:219] Iteration 900 (458.306 iter/s, 0.218195s/100 iters), loss = 0.724269
I0428 20:25:56.733088  2710 solver.cpp:238]     Train net output #0: loss = 0.724269 (* 1 = 0.724269 loss)
I0428 20:25:56.733100  2710 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:56.807874  2716 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:56.954807  2710 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:56.956488  2710 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:56.957645  2710 solver.cpp:311] Iteration 1000, loss = 0.403699
I0428 20:25:56.957674  2710 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:57.061275  2717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:57.064045  2710 solver.cpp:398]     Test net output #0: accuracy = 0.8315
I0428 20:25:57.064071  2710 solver.cpp:398]     Test net output #1: loss = 0.446576 (* 1 = 0.446576 loss)
I0428 20:25:57.064079  2710 solver.cpp:316] Optimization Done.
I0428 20:25:57.064082  2710 caffe.cpp:259] Optimization Done.
