I0428 20:03:08.612221 30129 caffe.cpp:218] Using GPUs 0
I0428 20:03:08.646576 30129 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:09.154312 30129 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test945.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:09.154453 30129 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test945.prototxt
I0428 20:03:09.154832 30129 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:09.154848 30129 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:09.154938 30129 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:09.155014 30129 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:09.155113 30129 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:09.155139 30129 net.cpp:86] Creating Layer mnist
I0428 20:03:09.155148 30129 net.cpp:382] mnist -> data
I0428 20:03:09.155170 30129 net.cpp:382] mnist -> label
I0428 20:03:09.156266 30129 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:09.158718 30129 net.cpp:124] Setting up mnist
I0428 20:03:09.158737 30129 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:09.158743 30129 net.cpp:131] Top shape: 64 (64)
I0428 20:03:09.158746 30129 net.cpp:139] Memory required for data: 200960
I0428 20:03:09.158753 30129 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:09.158771 30129 net.cpp:86] Creating Layer conv0
I0428 20:03:09.158776 30129 net.cpp:408] conv0 <- data
I0428 20:03:09.158787 30129 net.cpp:382] conv0 -> conv0
I0428 20:03:09.436231 30129 net.cpp:124] Setting up conv0
I0428 20:03:09.436261 30129 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:09.436264 30129 net.cpp:139] Memory required for data: 1675520
I0428 20:03:09.436295 30129 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:09.436308 30129 net.cpp:86] Creating Layer pool0
I0428 20:03:09.436311 30129 net.cpp:408] pool0 <- conv0
I0428 20:03:09.436316 30129 net.cpp:382] pool0 -> pool0
I0428 20:03:09.436362 30129 net.cpp:124] Setting up pool0
I0428 20:03:09.436367 30129 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:09.436370 30129 net.cpp:139] Memory required for data: 2044160
I0428 20:03:09.436372 30129 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:09.436386 30129 net.cpp:86] Creating Layer conv1
I0428 20:03:09.436391 30129 net.cpp:408] conv1 <- pool0
I0428 20:03:09.436395 30129 net.cpp:382] conv1 -> conv1
I0428 20:03:09.438498 30129 net.cpp:124] Setting up conv1
I0428 20:03:09.438526 30129 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:09.438545 30129 net.cpp:139] Memory required for data: 3682560
I0428 20:03:09.438554 30129 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:09.438560 30129 net.cpp:86] Creating Layer pool1
I0428 20:03:09.438565 30129 net.cpp:408] pool1 <- conv1
I0428 20:03:09.438570 30129 net.cpp:382] pool1 -> pool1
I0428 20:03:09.438621 30129 net.cpp:124] Setting up pool1
I0428 20:03:09.438627 30129 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:09.438629 30129 net.cpp:139] Memory required for data: 4092160
I0428 20:03:09.438632 30129 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:09.438640 30129 net.cpp:86] Creating Layer ip1
I0428 20:03:09.438643 30129 net.cpp:408] ip1 <- pool1
I0428 20:03:09.438648 30129 net.cpp:382] ip1 -> ip1
I0428 20:03:09.440102 30129 net.cpp:124] Setting up ip1
I0428 20:03:09.440114 30129 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:09.440132 30129 net.cpp:139] Memory required for data: 4104960
I0428 20:03:09.440140 30129 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:09.440147 30129 net.cpp:86] Creating Layer relu1
I0428 20:03:09.440150 30129 net.cpp:408] relu1 <- ip1
I0428 20:03:09.440156 30129 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:09.440342 30129 net.cpp:124] Setting up relu1
I0428 20:03:09.440351 30129 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:09.440354 30129 net.cpp:139] Memory required for data: 4117760
I0428 20:03:09.440357 30129 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:09.440363 30129 net.cpp:86] Creating Layer ip2
I0428 20:03:09.440366 30129 net.cpp:408] ip2 <- ip1
I0428 20:03:09.440372 30129 net.cpp:382] ip2 -> ip2
I0428 20:03:09.440474 30129 net.cpp:124] Setting up ip2
I0428 20:03:09.440480 30129 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:09.440484 30129 net.cpp:139] Memory required for data: 4120320
I0428 20:03:09.440488 30129 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:09.440510 30129 net.cpp:86] Creating Layer relu2
I0428 20:03:09.440512 30129 net.cpp:408] relu2 <- ip2
I0428 20:03:09.440518 30129 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:09.441314 30129 net.cpp:124] Setting up relu2
I0428 20:03:09.441326 30129 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:09.441345 30129 net.cpp:139] Memory required for data: 4122880
I0428 20:03:09.441349 30129 layer_factory.hpp:77] Creating layer loss
I0428 20:03:09.441355 30129 net.cpp:86] Creating Layer loss
I0428 20:03:09.441359 30129 net.cpp:408] loss <- ip2
I0428 20:03:09.441362 30129 net.cpp:408] loss <- label
I0428 20:03:09.441370 30129 net.cpp:382] loss -> loss
I0428 20:03:09.441385 30129 layer_factory.hpp:77] Creating layer loss
I0428 20:03:09.441675 30129 net.cpp:124] Setting up loss
I0428 20:03:09.441684 30129 net.cpp:131] Top shape: (1)
I0428 20:03:09.441689 30129 net.cpp:134]     with loss weight 1
I0428 20:03:09.441702 30129 net.cpp:139] Memory required for data: 4122884
I0428 20:03:09.441706 30129 net.cpp:200] loss needs backward computation.
I0428 20:03:09.441709 30129 net.cpp:200] relu2 needs backward computation.
I0428 20:03:09.441712 30129 net.cpp:200] ip2 needs backward computation.
I0428 20:03:09.441715 30129 net.cpp:200] relu1 needs backward computation.
I0428 20:03:09.441718 30129 net.cpp:200] ip1 needs backward computation.
I0428 20:03:09.441730 30129 net.cpp:200] pool1 needs backward computation.
I0428 20:03:09.441735 30129 net.cpp:200] conv1 needs backward computation.
I0428 20:03:09.441737 30129 net.cpp:200] pool0 needs backward computation.
I0428 20:03:09.441740 30129 net.cpp:200] conv0 needs backward computation.
I0428 20:03:09.441743 30129 net.cpp:202] mnist does not need backward computation.
I0428 20:03:09.441746 30129 net.cpp:244] This network produces output loss
I0428 20:03:09.441757 30129 net.cpp:257] Network initialization done.
I0428 20:03:09.442052 30129 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test945.prototxt
I0428 20:03:09.442077 30129 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:09.442167 30129 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:09.442250 30129 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:09.442308 30129 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:09.442320 30129 net.cpp:86] Creating Layer mnist
I0428 20:03:09.442325 30129 net.cpp:382] mnist -> data
I0428 20:03:09.442332 30129 net.cpp:382] mnist -> label
I0428 20:03:09.442433 30129 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:09.443789 30129 net.cpp:124] Setting up mnist
I0428 20:03:09.443817 30129 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:09.443838 30129 net.cpp:131] Top shape: 100 (100)
I0428 20:03:09.443841 30129 net.cpp:139] Memory required for data: 314000
I0428 20:03:09.443845 30129 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:09.443850 30129 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:09.443855 30129 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:09.443858 30129 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:09.443864 30129 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:09.443970 30129 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:09.443979 30129 net.cpp:131] Top shape: 100 (100)
I0428 20:03:09.443982 30129 net.cpp:131] Top shape: 100 (100)
I0428 20:03:09.443985 30129 net.cpp:139] Memory required for data: 314800
I0428 20:03:09.443989 30129 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:09.443997 30129 net.cpp:86] Creating Layer conv0
I0428 20:03:09.444000 30129 net.cpp:408] conv0 <- data
I0428 20:03:09.444006 30129 net.cpp:382] conv0 -> conv0
I0428 20:03:09.445812 30129 net.cpp:124] Setting up conv0
I0428 20:03:09.445842 30129 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:09.445845 30129 net.cpp:139] Memory required for data: 2618800
I0428 20:03:09.445868 30129 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:09.445875 30129 net.cpp:86] Creating Layer pool0
I0428 20:03:09.445878 30129 net.cpp:408] pool0 <- conv0
I0428 20:03:09.445883 30129 net.cpp:382] pool0 -> pool0
I0428 20:03:09.445935 30129 net.cpp:124] Setting up pool0
I0428 20:03:09.445940 30129 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:09.445942 30129 net.cpp:139] Memory required for data: 3194800
I0428 20:03:09.445945 30129 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:09.445955 30129 net.cpp:86] Creating Layer conv1
I0428 20:03:09.445957 30129 net.cpp:408] conv1 <- pool0
I0428 20:03:09.445963 30129 net.cpp:382] conv1 -> conv1
I0428 20:03:09.447722 30129 net.cpp:124] Setting up conv1
I0428 20:03:09.447736 30129 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:09.447754 30129 net.cpp:139] Memory required for data: 5754800
I0428 20:03:09.447763 30129 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:09.447769 30129 net.cpp:86] Creating Layer pool1
I0428 20:03:09.447773 30129 net.cpp:408] pool1 <- conv1
I0428 20:03:09.447795 30129 net.cpp:382] pool1 -> pool1
I0428 20:03:09.447832 30129 net.cpp:124] Setting up pool1
I0428 20:03:09.447839 30129 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:09.447841 30129 net.cpp:139] Memory required for data: 6394800
I0428 20:03:09.447844 30129 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:09.447866 30129 net.cpp:86] Creating Layer ip1
I0428 20:03:09.447885 30129 net.cpp:408] ip1 <- pool1
I0428 20:03:09.447891 30129 net.cpp:382] ip1 -> ip1
I0428 20:03:09.448559 30129 net.cpp:124] Setting up ip1
I0428 20:03:09.448567 30129 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:09.448586 30129 net.cpp:139] Memory required for data: 6414800
I0428 20:03:09.448595 30129 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:09.448599 30129 net.cpp:86] Creating Layer relu1
I0428 20:03:09.448603 30129 net.cpp:408] relu1 <- ip1
I0428 20:03:09.448607 30129 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:09.448911 30129 net.cpp:124] Setting up relu1
I0428 20:03:09.448921 30129 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:09.448925 30129 net.cpp:139] Memory required for data: 6434800
I0428 20:03:09.448935 30129 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:09.448943 30129 net.cpp:86] Creating Layer ip2
I0428 20:03:09.448948 30129 net.cpp:408] ip2 <- ip1
I0428 20:03:09.448954 30129 net.cpp:382] ip2 -> ip2
I0428 20:03:09.449067 30129 net.cpp:124] Setting up ip2
I0428 20:03:09.449075 30129 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:09.449079 30129 net.cpp:139] Memory required for data: 6438800
I0428 20:03:09.449085 30129 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:09.449091 30129 net.cpp:86] Creating Layer relu2
I0428 20:03:09.449095 30129 net.cpp:408] relu2 <- ip2
I0428 20:03:09.449100 30129 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:09.449303 30129 net.cpp:124] Setting up relu2
I0428 20:03:09.449312 30129 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:09.449321 30129 net.cpp:139] Memory required for data: 6442800
I0428 20:03:09.449324 30129 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:03:09.449329 30129 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:03:09.449332 30129 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:03:09.449337 30129 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:03:09.449352 30129 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:03:09.449388 30129 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:03:09.449395 30129 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:09.449399 30129 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:09.449403 30129 net.cpp:139] Memory required for data: 6450800
I0428 20:03:09.449404 30129 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:09.449410 30129 net.cpp:86] Creating Layer accuracy
I0428 20:03:09.449414 30129 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:03:09.449417 30129 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:09.449421 30129 net.cpp:382] accuracy -> accuracy
I0428 20:03:09.449429 30129 net.cpp:124] Setting up accuracy
I0428 20:03:09.449432 30129 net.cpp:131] Top shape: (1)
I0428 20:03:09.449435 30129 net.cpp:139] Memory required for data: 6450804
I0428 20:03:09.449439 30129 layer_factory.hpp:77] Creating layer loss
I0428 20:03:09.449443 30129 net.cpp:86] Creating Layer loss
I0428 20:03:09.449446 30129 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:03:09.449451 30129 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:09.449455 30129 net.cpp:382] loss -> loss
I0428 20:03:09.449460 30129 layer_factory.hpp:77] Creating layer loss
I0428 20:03:09.449771 30129 net.cpp:124] Setting up loss
I0428 20:03:09.449780 30129 net.cpp:131] Top shape: (1)
I0428 20:03:09.449782 30129 net.cpp:134]     with loss weight 1
I0428 20:03:09.449789 30129 net.cpp:139] Memory required for data: 6450808
I0428 20:03:09.449792 30129 net.cpp:200] loss needs backward computation.
I0428 20:03:09.449795 30129 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:09.449800 30129 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:03:09.449802 30129 net.cpp:200] relu2 needs backward computation.
I0428 20:03:09.449805 30129 net.cpp:200] ip2 needs backward computation.
I0428 20:03:09.449807 30129 net.cpp:200] relu1 needs backward computation.
I0428 20:03:09.449810 30129 net.cpp:200] ip1 needs backward computation.
I0428 20:03:09.449813 30129 net.cpp:200] pool1 needs backward computation.
I0428 20:03:09.449832 30129 net.cpp:200] conv1 needs backward computation.
I0428 20:03:09.449836 30129 net.cpp:200] pool0 needs backward computation.
I0428 20:03:09.449838 30129 net.cpp:200] conv0 needs backward computation.
I0428 20:03:09.449846 30129 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:09.449849 30129 net.cpp:202] mnist does not need backward computation.
I0428 20:03:09.449867 30129 net.cpp:244] This network produces output accuracy
I0428 20:03:09.449870 30129 net.cpp:244] This network produces output loss
I0428 20:03:09.449882 30129 net.cpp:257] Network initialization done.
I0428 20:03:09.449951 30129 solver.cpp:56] Solver scaffolding done.
I0428 20:03:09.450296 30129 caffe.cpp:248] Starting Optimization
I0428 20:03:09.450301 30129 solver.cpp:273] Solving LeNet
I0428 20:03:09.450304 30129 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:09.451140 30129 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:09.456387 30129 blocking_queue.cpp:49] Waiting for data
I0428 20:03:09.526026 30136 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:09.526662 30129 solver.cpp:398]     Test net output #0: accuracy = 0.09
I0428 20:03:09.526700 30129 solver.cpp:398]     Test net output #1: loss = 2.31267 (* 1 = 2.31267 loss)
I0428 20:03:09.530354 30129 solver.cpp:219] Iteration 0 (2.84535 iter/s, 0.0800073s/100 iters), loss = 2.29961
I0428 20:03:09.530392 30129 solver.cpp:238]     Train net output #0: loss = 2.29961 (* 1 = 2.29961 loss)
I0428 20:03:09.530403 30129 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:09.682368 30129 solver.cpp:219] Iteration 100 (658.07 iter/s, 0.15196s/100 iters), loss = 0.689491
I0428 20:03:09.682406 30129 solver.cpp:238]     Train net output #0: loss = 0.689491 (* 1 = 0.689491 loss)
I0428 20:03:09.682427 30129 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:09.847621 30129 solver.cpp:219] Iteration 200 (605.346 iter/s, 0.165195s/100 iters), loss = 0.150014
I0428 20:03:09.847673 30129 solver.cpp:238]     Train net output #0: loss = 0.150014 (* 1 = 0.150014 loss)
I0428 20:03:09.847685 30129 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:10.029904 30129 solver.cpp:219] Iteration 300 (548.803 iter/s, 0.182215s/100 iters), loss = 0.200058
I0428 20:03:10.029963 30129 solver.cpp:238]     Train net output #0: loss = 0.200058 (* 1 = 0.200058 loss)
I0428 20:03:10.029978 30129 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:10.214540 30129 solver.cpp:219] Iteration 400 (541.824 iter/s, 0.184562s/100 iters), loss = 0.0903817
I0428 20:03:10.214591 30129 solver.cpp:238]     Train net output #0: loss = 0.0903817 (* 1 = 0.0903817 loss)
I0428 20:03:10.214603 30129 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:10.389528 30129 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:10.457511 30136 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:10.458617 30129 solver.cpp:398]     Test net output #0: accuracy = 0.9665
I0428 20:03:10.458658 30129 solver.cpp:398]     Test net output #1: loss = 0.106266 (* 1 = 0.106266 loss)
I0428 20:03:10.460343 30129 solver.cpp:219] Iteration 500 (406.938 iter/s, 0.245738s/100 iters), loss = 0.109665
I0428 20:03:10.460386 30129 solver.cpp:238]     Train net output #0: loss = 0.109665 (* 1 = 0.109665 loss)
I0428 20:03:10.460396 30129 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:10.629333 30129 solver.cpp:219] Iteration 600 (591.953 iter/s, 0.168932s/100 iters), loss = 0.113739
I0428 20:03:10.629374 30129 solver.cpp:238]     Train net output #0: loss = 0.113739 (* 1 = 0.113739 loss)
I0428 20:03:10.629384 30129 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:10.801805 30129 solver.cpp:219] Iteration 700 (579.986 iter/s, 0.172418s/100 iters), loss = 0.142791
I0428 20:03:10.801856 30129 solver.cpp:238]     Train net output #0: loss = 0.142791 (* 1 = 0.142791 loss)
I0428 20:03:10.801867 30129 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:10.975193 30129 solver.cpp:219] Iteration 800 (576.929 iter/s, 0.173331s/100 iters), loss = 0.279077
I0428 20:03:10.975240 30129 solver.cpp:238]     Train net output #0: loss = 0.279077 (* 1 = 0.279077 loss)
I0428 20:03:10.975251 30129 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:11.156944 30129 solver.cpp:219] Iteration 900 (550.387 iter/s, 0.18169s/100 iters), loss = 0.14842
I0428 20:03:11.157001 30129 solver.cpp:238]     Train net output #0: loss = 0.14842 (* 1 = 0.14842 loss)
I0428 20:03:11.157032 30129 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:11.216228 30135 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:11.332025 30129 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:11.336107 30129 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:11.338187 30129 solver.cpp:311] Iteration 1000, loss = 0.0824171
I0428 20:03:11.338217 30129 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:11.402945 30136 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:11.405308 30129 solver.cpp:398]     Test net output #0: accuracy = 0.9792
I0428 20:03:11.405347 30129 solver.cpp:398]     Test net output #1: loss = 0.0642707 (* 1 = 0.0642707 loss)
I0428 20:03:11.405367 30129 solver.cpp:316] Optimization Done.
I0428 20:03:11.405383 30129 caffe.cpp:259] Optimization Done.
