I0428 20:07:23.405251 31092 caffe.cpp:218] Using GPUs 0
I0428 20:07:23.441259 31092 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:23.894657 31092 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1054.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:23.894809 31092 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1054.prototxt
I0428 20:07:23.895133 31092 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:23.895148 31092 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:23.895231 31092 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:23.895288 31092 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:23.895373 31092 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:23.895395 31092 net.cpp:86] Creating Layer mnist
I0428 20:07:23.895401 31092 net.cpp:382] mnist -> data
I0428 20:07:23.895418 31092 net.cpp:382] mnist -> label
I0428 20:07:23.896378 31092 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:23.898622 31092 net.cpp:124] Setting up mnist
I0428 20:07:23.898638 31092 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:23.898644 31092 net.cpp:131] Top shape: 64 (64)
I0428 20:07:23.898648 31092 net.cpp:139] Memory required for data: 200960
I0428 20:07:23.898653 31092 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:23.898666 31092 net.cpp:86] Creating Layer conv0
I0428 20:07:23.898671 31092 net.cpp:408] conv0 <- data
I0428 20:07:23.898682 31092 net.cpp:382] conv0 -> conv0
I0428 20:07:24.130740 31092 net.cpp:124] Setting up conv0
I0428 20:07:24.130765 31092 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:24.130769 31092 net.cpp:139] Memory required for data: 3887360
I0428 20:07:24.130784 31092 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:24.130795 31092 net.cpp:86] Creating Layer pool0
I0428 20:07:24.130800 31092 net.cpp:408] pool0 <- conv0
I0428 20:07:24.130805 31092 net.cpp:382] pool0 -> pool0
I0428 20:07:24.130861 31092 net.cpp:124] Setting up pool0
I0428 20:07:24.130867 31092 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:24.130882 31092 net.cpp:139] Memory required for data: 4808960
I0428 20:07:24.130887 31092 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:24.130897 31092 net.cpp:86] Creating Layer conv1
I0428 20:07:24.130899 31092 net.cpp:408] conv1 <- pool0
I0428 20:07:24.130904 31092 net.cpp:382] conv1 -> conv1
I0428 20:07:24.133687 31092 net.cpp:124] Setting up conv1
I0428 20:07:24.133716 31092 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:24.133720 31092 net.cpp:139] Memory required for data: 4972800
I0428 20:07:24.133729 31092 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:24.133736 31092 net.cpp:86] Creating Layer pool1
I0428 20:07:24.133740 31092 net.cpp:408] pool1 <- conv1
I0428 20:07:24.133745 31092 net.cpp:382] pool1 -> pool1
I0428 20:07:24.133796 31092 net.cpp:124] Setting up pool1
I0428 20:07:24.133802 31092 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:24.133805 31092 net.cpp:139] Memory required for data: 5013760
I0428 20:07:24.133808 31092 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:24.133816 31092 net.cpp:86] Creating Layer ip1
I0428 20:07:24.133818 31092 net.cpp:408] ip1 <- pool1
I0428 20:07:24.133822 31092 net.cpp:382] ip1 -> ip1
I0428 20:07:24.134786 31092 net.cpp:124] Setting up ip1
I0428 20:07:24.134814 31092 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:24.134819 31092 net.cpp:139] Memory required for data: 5016320
I0428 20:07:24.134826 31092 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:24.134832 31092 net.cpp:86] Creating Layer relu1
I0428 20:07:24.134835 31092 net.cpp:408] relu1 <- ip1
I0428 20:07:24.134840 31092 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:24.135004 31092 net.cpp:124] Setting up relu1
I0428 20:07:24.135013 31092 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:24.135016 31092 net.cpp:139] Memory required for data: 5018880
I0428 20:07:24.135020 31092 layer_factory.hpp:77] Creating layer loss
I0428 20:07:24.135025 31092 net.cpp:86] Creating Layer loss
I0428 20:07:24.135028 31092 net.cpp:408] loss <- ip1
I0428 20:07:24.135032 31092 net.cpp:408] loss <- label
I0428 20:07:24.135037 31092 net.cpp:382] loss -> loss
I0428 20:07:24.135051 31092 layer_factory.hpp:77] Creating layer loss
I0428 20:07:24.135890 31092 net.cpp:124] Setting up loss
I0428 20:07:24.135901 31092 net.cpp:131] Top shape: (1)
I0428 20:07:24.135921 31092 net.cpp:134]     with loss weight 1
I0428 20:07:24.135936 31092 net.cpp:139] Memory required for data: 5018884
I0428 20:07:24.135938 31092 net.cpp:200] loss needs backward computation.
I0428 20:07:24.135942 31092 net.cpp:200] relu1 needs backward computation.
I0428 20:07:24.135946 31092 net.cpp:200] ip1 needs backward computation.
I0428 20:07:24.135948 31092 net.cpp:200] pool1 needs backward computation.
I0428 20:07:24.135951 31092 net.cpp:200] conv1 needs backward computation.
I0428 20:07:24.135954 31092 net.cpp:200] pool0 needs backward computation.
I0428 20:07:24.135957 31092 net.cpp:200] conv0 needs backward computation.
I0428 20:07:24.135960 31092 net.cpp:202] mnist does not need backward computation.
I0428 20:07:24.135963 31092 net.cpp:244] This network produces output loss
I0428 20:07:24.135970 31092 net.cpp:257] Network initialization done.
I0428 20:07:24.136234 31092 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1054.prototxt
I0428 20:07:24.136256 31092 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:24.136327 31092 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:24.136394 31092 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:24.136436 31092 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:24.136448 31092 net.cpp:86] Creating Layer mnist
I0428 20:07:24.136453 31092 net.cpp:382] mnist -> data
I0428 20:07:24.136461 31092 net.cpp:382] mnist -> label
I0428 20:07:24.136587 31092 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:24.138651 31092 net.cpp:124] Setting up mnist
I0428 20:07:24.138695 31092 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:24.138700 31092 net.cpp:131] Top shape: 100 (100)
I0428 20:07:24.138703 31092 net.cpp:139] Memory required for data: 314000
I0428 20:07:24.138707 31092 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:24.138713 31092 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:24.138717 31092 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:24.138723 31092 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:24.138731 31092 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:24.138794 31092 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:24.138800 31092 net.cpp:131] Top shape: 100 (100)
I0428 20:07:24.138803 31092 net.cpp:131] Top shape: 100 (100)
I0428 20:07:24.138806 31092 net.cpp:139] Memory required for data: 314800
I0428 20:07:24.138810 31092 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:24.138820 31092 net.cpp:86] Creating Layer conv0
I0428 20:07:24.138824 31092 net.cpp:408] conv0 <- data
I0428 20:07:24.138829 31092 net.cpp:382] conv0 -> conv0
I0428 20:07:24.139847 31092 net.cpp:124] Setting up conv0
I0428 20:07:24.139874 31092 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:24.139894 31092 net.cpp:139] Memory required for data: 6074800
I0428 20:07:24.139902 31092 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:24.139909 31092 net.cpp:86] Creating Layer pool0
I0428 20:07:24.139911 31092 net.cpp:408] pool0 <- conv0
I0428 20:07:24.139917 31092 net.cpp:382] pool0 -> pool0
I0428 20:07:24.139968 31092 net.cpp:124] Setting up pool0
I0428 20:07:24.139974 31092 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:24.139976 31092 net.cpp:139] Memory required for data: 7514800
I0428 20:07:24.139979 31092 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:24.139989 31092 net.cpp:86] Creating Layer conv1
I0428 20:07:24.139993 31092 net.cpp:408] conv1 <- pool0
I0428 20:07:24.139998 31092 net.cpp:382] conv1 -> conv1
I0428 20:07:24.142233 31092 net.cpp:124] Setting up conv1
I0428 20:07:24.142263 31092 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:24.142267 31092 net.cpp:139] Memory required for data: 7770800
I0428 20:07:24.142277 31092 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:24.142284 31092 net.cpp:86] Creating Layer pool1
I0428 20:07:24.142298 31092 net.cpp:408] pool1 <- conv1
I0428 20:07:24.142320 31092 net.cpp:382] pool1 -> pool1
I0428 20:07:24.142424 31092 net.cpp:124] Setting up pool1
I0428 20:07:24.142431 31092 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:24.142434 31092 net.cpp:139] Memory required for data: 7834800
I0428 20:07:24.142437 31092 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:24.142444 31092 net.cpp:86] Creating Layer ip1
I0428 20:07:24.142448 31092 net.cpp:408] ip1 <- pool1
I0428 20:07:24.142453 31092 net.cpp:382] ip1 -> ip1
I0428 20:07:24.142575 31092 net.cpp:124] Setting up ip1
I0428 20:07:24.142585 31092 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:24.142587 31092 net.cpp:139] Memory required for data: 7838800
I0428 20:07:24.142594 31092 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:24.142606 31092 net.cpp:86] Creating Layer relu1
I0428 20:07:24.142609 31092 net.cpp:408] relu1 <- ip1
I0428 20:07:24.142616 31092 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:24.143517 31092 net.cpp:124] Setting up relu1
I0428 20:07:24.143543 31092 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:24.143548 31092 net.cpp:139] Memory required for data: 7842800
I0428 20:07:24.143550 31092 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:07:24.143558 31092 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:07:24.143563 31092 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:07:24.143568 31092 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:07:24.143573 31092 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:07:24.143620 31092 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:07:24.143625 31092 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:24.143630 31092 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:24.143632 31092 net.cpp:139] Memory required for data: 7850800
I0428 20:07:24.143635 31092 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:24.143640 31092 net.cpp:86] Creating Layer accuracy
I0428 20:07:24.143645 31092 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:07:24.143648 31092 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:24.143653 31092 net.cpp:382] accuracy -> accuracy
I0428 20:07:24.143661 31092 net.cpp:124] Setting up accuracy
I0428 20:07:24.143664 31092 net.cpp:131] Top shape: (1)
I0428 20:07:24.143668 31092 net.cpp:139] Memory required for data: 7850804
I0428 20:07:24.143671 31092 layer_factory.hpp:77] Creating layer loss
I0428 20:07:24.143676 31092 net.cpp:86] Creating Layer loss
I0428 20:07:24.143678 31092 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:07:24.143682 31092 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:24.143709 31092 net.cpp:382] loss -> loss
I0428 20:07:24.143715 31092 layer_factory.hpp:77] Creating layer loss
I0428 20:07:24.143949 31092 net.cpp:124] Setting up loss
I0428 20:07:24.143959 31092 net.cpp:131] Top shape: (1)
I0428 20:07:24.143962 31092 net.cpp:134]     with loss weight 1
I0428 20:07:24.143968 31092 net.cpp:139] Memory required for data: 7850808
I0428 20:07:24.143972 31092 net.cpp:200] loss needs backward computation.
I0428 20:07:24.143975 31092 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:24.143980 31092 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:07:24.143982 31092 net.cpp:200] relu1 needs backward computation.
I0428 20:07:24.143985 31092 net.cpp:200] ip1 needs backward computation.
I0428 20:07:24.143988 31092 net.cpp:200] pool1 needs backward computation.
I0428 20:07:24.143991 31092 net.cpp:200] conv1 needs backward computation.
I0428 20:07:24.143995 31092 net.cpp:200] pool0 needs backward computation.
I0428 20:07:24.143997 31092 net.cpp:200] conv0 needs backward computation.
I0428 20:07:24.144001 31092 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:24.144004 31092 net.cpp:202] mnist does not need backward computation.
I0428 20:07:24.144006 31092 net.cpp:244] This network produces output accuracy
I0428 20:07:24.144009 31092 net.cpp:244] This network produces output loss
I0428 20:07:24.144029 31092 net.cpp:257] Network initialization done.
I0428 20:07:24.144078 31092 solver.cpp:56] Solver scaffolding done.
I0428 20:07:24.144302 31092 caffe.cpp:248] Starting Optimization
I0428 20:07:24.144309 31092 solver.cpp:273] Solving LeNet
I0428 20:07:24.144312 31092 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:24.145119 31092 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:24.149375 31092 blocking_queue.cpp:49] Waiting for data
I0428 20:07:24.219964 31099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:24.220501 31092 solver.cpp:398]     Test net output #0: accuracy = 0.1136
I0428 20:07:24.220535 31092 solver.cpp:398]     Test net output #1: loss = 2.36903 (* 1 = 2.36903 loss)
I0428 20:07:24.224117 31092 solver.cpp:219] Iteration 0 (-3.9737e-31 iter/s, 0.0797788s/100 iters), loss = 2.33856
I0428 20:07:24.224156 31092 solver.cpp:238]     Train net output #0: loss = 2.33856 (* 1 = 2.33856 loss)
I0428 20:07:24.224182 31092 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:24.313560 31092 solver.cpp:219] Iteration 100 (1118.47 iter/s, 0.0894075s/100 iters), loss = 0.847541
I0428 20:07:24.313585 31092 solver.cpp:238]     Train net output #0: loss = 0.847541 (* 1 = 0.847541 loss)
I0428 20:07:24.313591 31092 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:24.390230 31092 solver.cpp:219] Iteration 200 (1304.85 iter/s, 0.0766372s/100 iters), loss = 0.242417
I0428 20:07:24.390254 31092 solver.cpp:238]     Train net output #0: loss = 0.242417 (* 1 = 0.242417 loss)
I0428 20:07:24.390259 31092 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:24.467831 31092 solver.cpp:219] Iteration 300 (1289.21 iter/s, 0.0775669s/100 iters), loss = 0.192153
I0428 20:07:24.467859 31092 solver.cpp:238]     Train net output #0: loss = 0.192153 (* 1 = 0.192153 loss)
I0428 20:07:24.467865 31092 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:24.544919 31092 solver.cpp:219] Iteration 400 (1297.86 iter/s, 0.0770499s/100 iters), loss = 0.0837633
I0428 20:07:24.544941 31092 solver.cpp:238]     Train net output #0: loss = 0.0837633 (* 1 = 0.0837633 loss)
I0428 20:07:24.544963 31092 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:24.620626 31092 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:24.695585 31099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:24.696167 31092 solver.cpp:398]     Test net output #0: accuracy = 0.9641
I0428 20:07:24.696194 31092 solver.cpp:398]     Test net output #1: loss = 0.122175 (* 1 = 0.122175 loss)
I0428 20:07:24.697105 31092 solver.cpp:219] Iteration 500 (657.255 iter/s, 0.152148s/100 iters), loss = 0.102364
I0428 20:07:24.697139 31092 solver.cpp:238]     Train net output #0: loss = 0.102364 (* 1 = 0.102364 loss)
I0428 20:07:24.697146 31092 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:24.787936 31092 solver.cpp:219] Iteration 600 (1101.42 iter/s, 0.0907921s/100 iters), loss = 0.125191
I0428 20:07:24.787961 31092 solver.cpp:238]     Train net output #0: loss = 0.125191 (* 1 = 0.125191 loss)
I0428 20:07:24.787967 31092 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:24.864749 31092 solver.cpp:219] Iteration 700 (1302.43 iter/s, 0.0767795s/100 iters), loss = 0.264214
I0428 20:07:24.864789 31092 solver.cpp:238]     Train net output #0: loss = 0.264214 (* 1 = 0.264214 loss)
I0428 20:07:24.864794 31092 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:24.941288 31092 solver.cpp:219] Iteration 800 (1307.07 iter/s, 0.0765072s/100 iters), loss = 0.191941
I0428 20:07:24.941313 31092 solver.cpp:238]     Train net output #0: loss = 0.191941 (* 1 = 0.191941 loss)
I0428 20:07:24.941318 31092 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:25.018015 31092 solver.cpp:219] Iteration 900 (1303.89 iter/s, 0.0766935s/100 iters), loss = 0.164404
I0428 20:07:25.018038 31092 solver.cpp:238]     Train net output #0: loss = 0.164404 (* 1 = 0.164404 loss)
I0428 20:07:25.018060 31092 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:25.043879 31098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:25.094076 31092 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:25.094813 31092 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:25.095304 31092 solver.cpp:311] Iteration 1000, loss = 0.192373
I0428 20:07:25.095317 31092 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:25.170785 31099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:25.171330 31092 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0428 20:07:25.171351 31092 solver.cpp:398]     Test net output #1: loss = 0.0927734 (* 1 = 0.0927734 loss)
I0428 20:07:25.171357 31092 solver.cpp:316] Optimization Done.
I0428 20:07:25.171360 31092 caffe.cpp:259] Optimization Done.
