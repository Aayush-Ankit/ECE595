I0428 20:05:29.065071 30627 caffe.cpp:218] Using GPUs 0
I0428 20:05:29.096616 30627 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:29.549026 30627 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1001.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:29.549187 30627 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1001.prototxt
I0428 20:05:29.549542 30627 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:29.549572 30627 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:29.549654 30627 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:29.549716 30627 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:29.549795 30627 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:29.549816 30627 net.cpp:86] Creating Layer mnist
I0428 20:05:29.549825 30627 net.cpp:382] mnist -> data
I0428 20:05:29.549844 30627 net.cpp:382] mnist -> label
I0428 20:05:29.550751 30627 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:29.552863 30627 net.cpp:124] Setting up mnist
I0428 20:05:29.552893 30627 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:29.552898 30627 net.cpp:131] Top shape: 64 (64)
I0428 20:05:29.552901 30627 net.cpp:139] Memory required for data: 200960
I0428 20:05:29.552906 30627 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:29.552952 30627 net.cpp:86] Creating Layer conv0
I0428 20:05:29.552990 30627 net.cpp:408] conv0 <- data
I0428 20:05:29.553002 30627 net.cpp:382] conv0 -> conv0
I0428 20:05:29.782466 30627 net.cpp:124] Setting up conv0
I0428 20:05:29.782492 30627 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:29.782496 30627 net.cpp:139] Memory required for data: 3887360
I0428 20:05:29.782511 30627 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:29.782523 30627 net.cpp:86] Creating Layer pool0
I0428 20:05:29.782527 30627 net.cpp:408] pool0 <- conv0
I0428 20:05:29.782532 30627 net.cpp:382] pool0 -> pool0
I0428 20:05:29.782593 30627 net.cpp:124] Setting up pool0
I0428 20:05:29.782598 30627 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:29.782600 30627 net.cpp:139] Memory required for data: 4808960
I0428 20:05:29.782603 30627 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:29.782614 30627 net.cpp:86] Creating Layer conv1
I0428 20:05:29.782618 30627 net.cpp:408] conv1 <- pool0
I0428 20:05:29.782624 30627 net.cpp:382] conv1 -> conv1
I0428 20:05:29.785480 30627 net.cpp:124] Setting up conv1
I0428 20:05:29.785495 30627 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:29.785498 30627 net.cpp:139] Memory required for data: 4841728
I0428 20:05:29.785506 30627 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:29.785512 30627 net.cpp:86] Creating Layer pool1
I0428 20:05:29.785516 30627 net.cpp:408] pool1 <- conv1
I0428 20:05:29.785537 30627 net.cpp:382] pool1 -> pool1
I0428 20:05:29.785570 30627 net.cpp:124] Setting up pool1
I0428 20:05:29.785578 30627 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:29.785579 30627 net.cpp:139] Memory required for data: 4849920
I0428 20:05:29.785583 30627 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:29.785589 30627 net.cpp:86] Creating Layer ip1
I0428 20:05:29.785591 30627 net.cpp:408] ip1 <- pool1
I0428 20:05:29.785596 30627 net.cpp:382] ip1 -> ip1
I0428 20:05:29.785691 30627 net.cpp:124] Setting up ip1
I0428 20:05:29.785698 30627 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:29.785701 30627 net.cpp:139] Memory required for data: 4856320
I0428 20:05:29.785707 30627 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:29.785714 30627 net.cpp:86] Creating Layer relu1
I0428 20:05:29.785717 30627 net.cpp:408] relu1 <- ip1
I0428 20:05:29.785723 30627 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:29.785882 30627 net.cpp:124] Setting up relu1
I0428 20:05:29.785890 30627 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:29.785893 30627 net.cpp:139] Memory required for data: 4862720
I0428 20:05:29.785897 30627 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:29.785902 30627 net.cpp:86] Creating Layer ip2
I0428 20:05:29.785904 30627 net.cpp:408] ip2 <- ip1
I0428 20:05:29.785909 30627 net.cpp:382] ip2 -> ip2
I0428 20:05:29.786001 30627 net.cpp:124] Setting up ip2
I0428 20:05:29.786008 30627 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:29.786011 30627 net.cpp:139] Memory required for data: 4869120
I0428 20:05:29.786016 30627 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:29.786021 30627 net.cpp:86] Creating Layer relu2
I0428 20:05:29.786025 30627 net.cpp:408] relu2 <- ip2
I0428 20:05:29.786028 30627 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:29.786790 30627 net.cpp:124] Setting up relu2
I0428 20:05:29.786803 30627 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:29.786806 30627 net.cpp:139] Memory required for data: 4875520
I0428 20:05:29.786809 30627 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:29.786816 30627 net.cpp:86] Creating Layer ip3
I0428 20:05:29.786834 30627 net.cpp:408] ip3 <- ip2
I0428 20:05:29.786844 30627 net.cpp:382] ip3 -> ip3
I0428 20:05:29.786939 30627 net.cpp:124] Setting up ip3
I0428 20:05:29.786947 30627 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:29.786950 30627 net.cpp:139] Memory required for data: 4878080
I0428 20:05:29.786958 30627 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:29.786963 30627 net.cpp:86] Creating Layer relu3
I0428 20:05:29.786967 30627 net.cpp:408] relu3 <- ip3
I0428 20:05:29.786969 30627 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:29.787137 30627 net.cpp:124] Setting up relu3
I0428 20:05:29.787147 30627 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:29.787150 30627 net.cpp:139] Memory required for data: 4880640
I0428 20:05:29.787153 30627 layer_factory.hpp:77] Creating layer loss
I0428 20:05:29.787158 30627 net.cpp:86] Creating Layer loss
I0428 20:05:29.787161 30627 net.cpp:408] loss <- ip3
I0428 20:05:29.787165 30627 net.cpp:408] loss <- label
I0428 20:05:29.787169 30627 net.cpp:382] loss -> loss
I0428 20:05:29.787185 30627 layer_factory.hpp:77] Creating layer loss
I0428 20:05:29.787431 30627 net.cpp:124] Setting up loss
I0428 20:05:29.787441 30627 net.cpp:131] Top shape: (1)
I0428 20:05:29.787443 30627 net.cpp:134]     with loss weight 1
I0428 20:05:29.787457 30627 net.cpp:139] Memory required for data: 4880644
I0428 20:05:29.787461 30627 net.cpp:200] loss needs backward computation.
I0428 20:05:29.787463 30627 net.cpp:200] relu3 needs backward computation.
I0428 20:05:29.787467 30627 net.cpp:200] ip3 needs backward computation.
I0428 20:05:29.787468 30627 net.cpp:200] relu2 needs backward computation.
I0428 20:05:29.787472 30627 net.cpp:200] ip2 needs backward computation.
I0428 20:05:29.787473 30627 net.cpp:200] relu1 needs backward computation.
I0428 20:05:29.787477 30627 net.cpp:200] ip1 needs backward computation.
I0428 20:05:29.787479 30627 net.cpp:200] pool1 needs backward computation.
I0428 20:05:29.787482 30627 net.cpp:200] conv1 needs backward computation.
I0428 20:05:29.787485 30627 net.cpp:200] pool0 needs backward computation.
I0428 20:05:29.787487 30627 net.cpp:200] conv0 needs backward computation.
I0428 20:05:29.787490 30627 net.cpp:202] mnist does not need backward computation.
I0428 20:05:29.787493 30627 net.cpp:244] This network produces output loss
I0428 20:05:29.787502 30627 net.cpp:257] Network initialization done.
I0428 20:05:29.787819 30627 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1001.prototxt
I0428 20:05:29.787847 30627 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:29.787932 30627 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:29.788010 30627 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:29.788050 30627 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:29.788066 30627 net.cpp:86] Creating Layer mnist
I0428 20:05:29.788075 30627 net.cpp:382] mnist -> data
I0428 20:05:29.788082 30627 net.cpp:382] mnist -> label
I0428 20:05:29.788163 30627 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:29.790170 30627 net.cpp:124] Setting up mnist
I0428 20:05:29.790184 30627 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:29.790204 30627 net.cpp:131] Top shape: 100 (100)
I0428 20:05:29.790206 30627 net.cpp:139] Memory required for data: 314000
I0428 20:05:29.790210 30627 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:29.790215 30627 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:29.790218 30627 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:29.790225 30627 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:29.790230 30627 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:29.790273 30627 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:29.790282 30627 net.cpp:131] Top shape: 100 (100)
I0428 20:05:29.790287 30627 net.cpp:131] Top shape: 100 (100)
I0428 20:05:29.790288 30627 net.cpp:139] Memory required for data: 314800
I0428 20:05:29.790292 30627 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:29.790300 30627 net.cpp:86] Creating Layer conv0
I0428 20:05:29.790303 30627 net.cpp:408] conv0 <- data
I0428 20:05:29.790308 30627 net.cpp:382] conv0 -> conv0
I0428 20:05:29.792083 30627 net.cpp:124] Setting up conv0
I0428 20:05:29.792095 30627 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:29.792099 30627 net.cpp:139] Memory required for data: 6074800
I0428 20:05:29.792107 30627 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:29.792114 30627 net.cpp:86] Creating Layer pool0
I0428 20:05:29.792116 30627 net.cpp:408] pool0 <- conv0
I0428 20:05:29.792136 30627 net.cpp:382] pool0 -> pool0
I0428 20:05:29.792173 30627 net.cpp:124] Setting up pool0
I0428 20:05:29.792178 30627 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:29.792181 30627 net.cpp:139] Memory required for data: 7514800
I0428 20:05:29.792184 30627 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:29.792193 30627 net.cpp:86] Creating Layer conv1
I0428 20:05:29.792197 30627 net.cpp:408] conv1 <- pool0
I0428 20:05:29.792201 30627 net.cpp:382] conv1 -> conv1
I0428 20:05:29.794451 30627 net.cpp:124] Setting up conv1
I0428 20:05:29.794466 30627 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:29.794471 30627 net.cpp:139] Memory required for data: 7566000
I0428 20:05:29.794478 30627 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:29.794502 30627 net.cpp:86] Creating Layer pool1
I0428 20:05:29.794504 30627 net.cpp:408] pool1 <- conv1
I0428 20:05:29.794517 30627 net.cpp:382] pool1 -> pool1
I0428 20:05:29.794554 30627 net.cpp:124] Setting up pool1
I0428 20:05:29.794562 30627 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:29.794565 30627 net.cpp:139] Memory required for data: 7578800
I0428 20:05:29.794569 30627 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:29.794574 30627 net.cpp:86] Creating Layer ip1
I0428 20:05:29.794577 30627 net.cpp:408] ip1 <- pool1
I0428 20:05:29.794582 30627 net.cpp:382] ip1 -> ip1
I0428 20:05:29.794708 30627 net.cpp:124] Setting up ip1
I0428 20:05:29.794716 30627 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:29.794729 30627 net.cpp:139] Memory required for data: 7588800
I0428 20:05:29.794736 30627 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:29.794741 30627 net.cpp:86] Creating Layer relu1
I0428 20:05:29.794744 30627 net.cpp:408] relu1 <- ip1
I0428 20:05:29.794749 30627 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:29.795012 30627 net.cpp:124] Setting up relu1
I0428 20:05:29.795022 30627 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:29.795025 30627 net.cpp:139] Memory required for data: 7598800
I0428 20:05:29.795028 30627 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:29.795037 30627 net.cpp:86] Creating Layer ip2
I0428 20:05:29.795040 30627 net.cpp:408] ip2 <- ip1
I0428 20:05:29.795047 30627 net.cpp:382] ip2 -> ip2
I0428 20:05:29.795147 30627 net.cpp:124] Setting up ip2
I0428 20:05:29.795156 30627 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:29.795158 30627 net.cpp:139] Memory required for data: 7608800
I0428 20:05:29.795163 30627 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:29.795168 30627 net.cpp:86] Creating Layer relu2
I0428 20:05:29.795171 30627 net.cpp:408] relu2 <- ip2
I0428 20:05:29.795176 30627 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:29.795343 30627 net.cpp:124] Setting up relu2
I0428 20:05:29.795351 30627 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:29.795356 30627 net.cpp:139] Memory required for data: 7618800
I0428 20:05:29.795358 30627 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:29.795363 30627 net.cpp:86] Creating Layer ip3
I0428 20:05:29.795367 30627 net.cpp:408] ip3 <- ip2
I0428 20:05:29.795372 30627 net.cpp:382] ip3 -> ip3
I0428 20:05:29.795464 30627 net.cpp:124] Setting up ip3
I0428 20:05:29.795472 30627 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:29.795475 30627 net.cpp:139] Memory required for data: 7622800
I0428 20:05:29.795482 30627 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:29.795487 30627 net.cpp:86] Creating Layer relu3
I0428 20:05:29.795490 30627 net.cpp:408] relu3 <- ip3
I0428 20:05:29.795493 30627 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:29.796311 30627 net.cpp:124] Setting up relu3
I0428 20:05:29.796324 30627 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:29.796327 30627 net.cpp:139] Memory required for data: 7626800
I0428 20:05:29.796331 30627 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:29.796336 30627 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:29.796339 30627 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:29.796344 30627 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:29.796351 30627 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:29.796416 30627 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:29.796422 30627 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:29.796427 30627 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:29.796429 30627 net.cpp:139] Memory required for data: 7634800
I0428 20:05:29.796432 30627 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:29.796438 30627 net.cpp:86] Creating Layer accuracy
I0428 20:05:29.796442 30627 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:29.796450 30627 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:29.796454 30627 net.cpp:382] accuracy -> accuracy
I0428 20:05:29.796461 30627 net.cpp:124] Setting up accuracy
I0428 20:05:29.796470 30627 net.cpp:131] Top shape: (1)
I0428 20:05:29.796473 30627 net.cpp:139] Memory required for data: 7634804
I0428 20:05:29.796480 30627 layer_factory.hpp:77] Creating layer loss
I0428 20:05:29.796485 30627 net.cpp:86] Creating Layer loss
I0428 20:05:29.796489 30627 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:29.796492 30627 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:29.796496 30627 net.cpp:382] loss -> loss
I0428 20:05:29.796502 30627 layer_factory.hpp:77] Creating layer loss
I0428 20:05:29.796730 30627 net.cpp:124] Setting up loss
I0428 20:05:29.796739 30627 net.cpp:131] Top shape: (1)
I0428 20:05:29.796743 30627 net.cpp:134]     with loss weight 1
I0428 20:05:29.796749 30627 net.cpp:139] Memory required for data: 7634808
I0428 20:05:29.796761 30627 net.cpp:200] loss needs backward computation.
I0428 20:05:29.796766 30627 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:29.796769 30627 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:29.796772 30627 net.cpp:200] relu3 needs backward computation.
I0428 20:05:29.796775 30627 net.cpp:200] ip3 needs backward computation.
I0428 20:05:29.796778 30627 net.cpp:200] relu2 needs backward computation.
I0428 20:05:29.796782 30627 net.cpp:200] ip2 needs backward computation.
I0428 20:05:29.796784 30627 net.cpp:200] relu1 needs backward computation.
I0428 20:05:29.796792 30627 net.cpp:200] ip1 needs backward computation.
I0428 20:05:29.796795 30627 net.cpp:200] pool1 needs backward computation.
I0428 20:05:29.796797 30627 net.cpp:200] conv1 needs backward computation.
I0428 20:05:29.796800 30627 net.cpp:200] pool0 needs backward computation.
I0428 20:05:29.796808 30627 net.cpp:200] conv0 needs backward computation.
I0428 20:05:29.796830 30627 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:29.796835 30627 net.cpp:202] mnist does not need backward computation.
I0428 20:05:29.796838 30627 net.cpp:244] This network produces output accuracy
I0428 20:05:29.796842 30627 net.cpp:244] This network produces output loss
I0428 20:05:29.796851 30627 net.cpp:257] Network initialization done.
I0428 20:05:29.796892 30627 solver.cpp:56] Solver scaffolding done.
I0428 20:05:29.797251 30627 caffe.cpp:248] Starting Optimization
I0428 20:05:29.797257 30627 solver.cpp:273] Solving LeNet
I0428 20:05:29.797260 30627 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:29.798133 30627 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:29.803236 30627 blocking_queue.cpp:49] Waiting for data
I0428 20:05:29.874994 30634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:29.875582 30627 solver.cpp:398]     Test net output #0: accuracy = 0.0654
I0428 20:05:29.875618 30627 solver.cpp:398]     Test net output #1: loss = 2.30373 (* 1 = 2.30373 loss)
I0428 20:05:29.878654 30627 solver.cpp:219] Iteration 0 (2.79829 iter/s, 0.0813527s/100 iters), loss = 2.30297
I0428 20:05:29.878675 30627 solver.cpp:238]     Train net output #0: loss = 2.30297 (* 1 = 2.30297 loss)
I0428 20:05:29.878689 30627 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:29.976881 30627 solver.cpp:219] Iteration 100 (1018.46 iter/s, 0.0981873s/100 iters), loss = 0.7807
I0428 20:05:29.976905 30627 solver.cpp:238]     Train net output #0: loss = 0.7807 (* 1 = 0.7807 loss)
I0428 20:05:29.976912 30627 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:30.074419 30627 solver.cpp:219] Iteration 200 (1025.61 iter/s, 0.0975031s/100 iters), loss = 0.654525
I0428 20:05:30.074445 30627 solver.cpp:238]     Train net output #0: loss = 0.654525 (* 1 = 0.654525 loss)
I0428 20:05:30.074450 30627 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:30.163157 30627 solver.cpp:219] Iteration 300 (1127.34 iter/s, 0.088704s/100 iters), loss = 0.550268
I0428 20:05:30.163182 30627 solver.cpp:238]     Train net output #0: loss = 0.550268 (* 1 = 0.550268 loss)
I0428 20:05:30.163187 30627 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:30.249428 30627 solver.cpp:219] Iteration 400 (1159.59 iter/s, 0.086237s/100 iters), loss = 0.351266
I0428 20:05:30.249451 30627 solver.cpp:238]     Train net output #0: loss = 0.351266 (* 1 = 0.351266 loss)
I0428 20:05:30.249457 30627 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:30.335134 30627 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:30.411242 30634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:30.411831 30627 solver.cpp:398]     Test net output #0: accuracy = 0.9219
I0428 20:05:30.411864 30627 solver.cpp:398]     Test net output #1: loss = 0.243207 (* 1 = 0.243207 loss)
I0428 20:05:30.412798 30627 solver.cpp:219] Iteration 500 (612.238 iter/s, 0.163335s/100 iters), loss = 0.272084
I0428 20:05:30.412842 30627 solver.cpp:238]     Train net output #0: loss = 0.272084 (* 1 = 0.272084 loss)
I0428 20:05:30.412895 30627 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:30.511245 30627 solver.cpp:219] Iteration 600 (1016.35 iter/s, 0.098391s/100 iters), loss = 0.17504
I0428 20:05:30.511271 30627 solver.cpp:238]     Train net output #0: loss = 0.17504 (* 1 = 0.17504 loss)
I0428 20:05:30.511278 30627 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:30.600045 30627 solver.cpp:219] Iteration 700 (1126.59 iter/s, 0.0887635s/100 iters), loss = 0.270924
I0428 20:05:30.600086 30627 solver.cpp:238]     Train net output #0: loss = 0.270924 (* 1 = 0.270924 loss)
I0428 20:05:30.600092 30627 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:30.686321 30627 solver.cpp:219] Iteration 800 (1159.54 iter/s, 0.0862413s/100 iters), loss = 0.269971
I0428 20:05:30.686345 30627 solver.cpp:238]     Train net output #0: loss = 0.269971 (* 1 = 0.269971 loss)
I0428 20:05:30.686352 30627 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:30.772748 30627 solver.cpp:219] Iteration 900 (1157.49 iter/s, 0.0863937s/100 iters), loss = 0.229662
I0428 20:05:30.772788 30627 solver.cpp:238]     Train net output #0: loss = 0.229662 (* 1 = 0.229662 loss)
I0428 20:05:30.772794 30627 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:30.801910 30633 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:30.859169 30627 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:30.859910 30627 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:30.860452 30627 solver.cpp:311] Iteration 1000, loss = 0.191523
I0428 20:05:30.860466 30627 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:30.935717 30634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:30.936322 30627 solver.cpp:398]     Test net output #0: accuracy = 0.9585
I0428 20:05:30.936358 30627 solver.cpp:398]     Test net output #1: loss = 0.135446 (* 1 = 0.135446 loss)
I0428 20:05:30.936363 30627 solver.cpp:316] Optimization Done.
I0428 20:05:30.936367 30627 caffe.cpp:259] Optimization Done.
