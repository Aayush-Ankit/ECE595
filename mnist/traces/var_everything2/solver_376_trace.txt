I0428 19:41:49.821194 24923 caffe.cpp:218] Using GPUs 0
I0428 19:41:49.857818 24923 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:50.370311 24923 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test376.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:50.370453 24923 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test376.prototxt
I0428 19:41:50.370857 24923 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:50.370875 24923 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:50.370971 24923 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:50.371044 24923 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:50.371142 24923 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:50.371166 24923 net.cpp:86] Creating Layer mnist
I0428 19:41:50.371173 24923 net.cpp:382] mnist -> data
I0428 19:41:50.371196 24923 net.cpp:382] mnist -> label
I0428 19:41:50.372297 24923 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:50.374754 24923 net.cpp:124] Setting up mnist
I0428 19:41:50.374771 24923 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:50.374778 24923 net.cpp:131] Top shape: 64 (64)
I0428 19:41:50.374781 24923 net.cpp:139] Memory required for data: 200960
I0428 19:41:50.374790 24923 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:50.374805 24923 net.cpp:86] Creating Layer conv0
I0428 19:41:50.374825 24923 net.cpp:408] conv0 <- data
I0428 19:41:50.374837 24923 net.cpp:382] conv0 -> conv0
I0428 19:41:50.659338 24923 net.cpp:124] Setting up conv0
I0428 19:41:50.659364 24923 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:50.659369 24923 net.cpp:139] Memory required for data: 495872
I0428 19:41:50.659384 24923 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:50.659396 24923 net.cpp:86] Creating Layer pool0
I0428 19:41:50.659401 24923 net.cpp:408] pool0 <- conv0
I0428 19:41:50.659406 24923 net.cpp:382] pool0 -> pool0
I0428 19:41:50.659451 24923 net.cpp:124] Setting up pool0
I0428 19:41:50.659456 24923 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:50.659459 24923 net.cpp:139] Memory required for data: 569600
I0428 19:41:50.659461 24923 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:50.659472 24923 net.cpp:86] Creating Layer conv1
I0428 19:41:50.659476 24923 net.cpp:408] conv1 <- pool0
I0428 19:41:50.659481 24923 net.cpp:382] conv1 -> conv1
I0428 19:41:50.661255 24923 net.cpp:124] Setting up conv1
I0428 19:41:50.661269 24923 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:50.661273 24923 net.cpp:139] Memory required for data: 733440
I0428 19:41:50.661283 24923 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:50.661289 24923 net.cpp:86] Creating Layer pool1
I0428 19:41:50.661309 24923 net.cpp:408] pool1 <- conv1
I0428 19:41:50.661314 24923 net.cpp:382] pool1 -> pool1
I0428 19:41:50.661350 24923 net.cpp:124] Setting up pool1
I0428 19:41:50.661355 24923 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:50.661358 24923 net.cpp:139] Memory required for data: 774400
I0428 19:41:50.661361 24923 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:50.661370 24923 net.cpp:86] Creating Layer ip1
I0428 19:41:50.661372 24923 net.cpp:408] ip1 <- pool1
I0428 19:41:50.661376 24923 net.cpp:382] ip1 -> ip1
I0428 19:41:50.662360 24923 net.cpp:124] Setting up ip1
I0428 19:41:50.662374 24923 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:50.662377 24923 net.cpp:139] Memory required for data: 780800
I0428 19:41:50.662386 24923 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:50.662392 24923 net.cpp:86] Creating Layer relu1
I0428 19:41:50.662396 24923 net.cpp:408] relu1 <- ip1
I0428 19:41:50.662401 24923 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:50.662595 24923 net.cpp:124] Setting up relu1
I0428 19:41:50.662605 24923 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:50.662607 24923 net.cpp:139] Memory required for data: 787200
I0428 19:41:50.662611 24923 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:50.662616 24923 net.cpp:86] Creating Layer ip2
I0428 19:41:50.662619 24923 net.cpp:408] ip2 <- ip1
I0428 19:41:50.662624 24923 net.cpp:382] ip2 -> ip2
I0428 19:41:50.662721 24923 net.cpp:124] Setting up ip2
I0428 19:41:50.662727 24923 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:50.662731 24923 net.cpp:139] Memory required for data: 793600
I0428 19:41:50.662736 24923 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:50.662742 24923 net.cpp:86] Creating Layer relu2
I0428 19:41:50.662745 24923 net.cpp:408] relu2 <- ip2
I0428 19:41:50.662748 24923 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:50.663487 24923 net.cpp:124] Setting up relu2
I0428 19:41:50.663499 24923 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:50.663502 24923 net.cpp:139] Memory required for data: 800000
I0428 19:41:50.663506 24923 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:50.663513 24923 net.cpp:86] Creating Layer ip3
I0428 19:41:50.663516 24923 net.cpp:408] ip3 <- ip2
I0428 19:41:50.663522 24923 net.cpp:382] ip3 -> ip3
I0428 19:41:50.663615 24923 net.cpp:124] Setting up ip3
I0428 19:41:50.663624 24923 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:50.663626 24923 net.cpp:139] Memory required for data: 802560
I0428 19:41:50.663633 24923 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:50.663638 24923 net.cpp:86] Creating Layer relu3
I0428 19:41:50.663641 24923 net.cpp:408] relu3 <- ip3
I0428 19:41:50.663645 24923 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:50.663806 24923 net.cpp:124] Setting up relu3
I0428 19:41:50.663815 24923 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:50.663818 24923 net.cpp:139] Memory required for data: 805120
I0428 19:41:50.663821 24923 layer_factory.hpp:77] Creating layer loss
I0428 19:41:50.663827 24923 net.cpp:86] Creating Layer loss
I0428 19:41:50.663830 24923 net.cpp:408] loss <- ip3
I0428 19:41:50.663835 24923 net.cpp:408] loss <- label
I0428 19:41:50.663841 24923 net.cpp:382] loss -> loss
I0428 19:41:50.663857 24923 layer_factory.hpp:77] Creating layer loss
I0428 19:41:50.664088 24923 net.cpp:124] Setting up loss
I0428 19:41:50.664098 24923 net.cpp:131] Top shape: (1)
I0428 19:41:50.664100 24923 net.cpp:134]     with loss weight 1
I0428 19:41:50.664114 24923 net.cpp:139] Memory required for data: 805124
I0428 19:41:50.664118 24923 net.cpp:200] loss needs backward computation.
I0428 19:41:50.664121 24923 net.cpp:200] relu3 needs backward computation.
I0428 19:41:50.664124 24923 net.cpp:200] ip3 needs backward computation.
I0428 19:41:50.664127 24923 net.cpp:200] relu2 needs backward computation.
I0428 19:41:50.664129 24923 net.cpp:200] ip2 needs backward computation.
I0428 19:41:50.664132 24923 net.cpp:200] relu1 needs backward computation.
I0428 19:41:50.664134 24923 net.cpp:200] ip1 needs backward computation.
I0428 19:41:50.664137 24923 net.cpp:200] pool1 needs backward computation.
I0428 19:41:50.664140 24923 net.cpp:200] conv1 needs backward computation.
I0428 19:41:50.664142 24923 net.cpp:200] pool0 needs backward computation.
I0428 19:41:50.664145 24923 net.cpp:200] conv0 needs backward computation.
I0428 19:41:50.664149 24923 net.cpp:202] mnist does not need backward computation.
I0428 19:41:50.664151 24923 net.cpp:244] This network produces output loss
I0428 19:41:50.664161 24923 net.cpp:257] Network initialization done.
I0428 19:41:50.664516 24923 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test376.prototxt
I0428 19:41:50.664544 24923 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:50.664645 24923 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:50.664757 24923 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:50.664798 24923 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:50.664819 24923 net.cpp:86] Creating Layer mnist
I0428 19:41:50.664824 24923 net.cpp:382] mnist -> data
I0428 19:41:50.664847 24923 net.cpp:382] mnist -> label
I0428 19:41:50.664954 24923 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:50.666956 24923 net.cpp:124] Setting up mnist
I0428 19:41:50.666968 24923 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:50.666973 24923 net.cpp:131] Top shape: 100 (100)
I0428 19:41:50.666976 24923 net.cpp:139] Memory required for data: 314000
I0428 19:41:50.666980 24923 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:50.666990 24923 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:50.666992 24923 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:50.666997 24923 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:50.667013 24923 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:50.667060 24923 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:50.667065 24923 net.cpp:131] Top shape: 100 (100)
I0428 19:41:50.667068 24923 net.cpp:131] Top shape: 100 (100)
I0428 19:41:50.667071 24923 net.cpp:139] Memory required for data: 314800
I0428 19:41:50.667074 24923 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:50.667084 24923 net.cpp:86] Creating Layer conv0
I0428 19:41:50.667088 24923 net.cpp:408] conv0 <- data
I0428 19:41:50.667093 24923 net.cpp:382] conv0 -> conv0
I0428 19:41:50.668913 24923 net.cpp:124] Setting up conv0
I0428 19:41:50.668927 24923 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:50.668931 24923 net.cpp:139] Memory required for data: 775600
I0428 19:41:50.668941 24923 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:50.668947 24923 net.cpp:86] Creating Layer pool0
I0428 19:41:50.668951 24923 net.cpp:408] pool0 <- conv0
I0428 19:41:50.668956 24923 net.cpp:382] pool0 -> pool0
I0428 19:41:50.668992 24923 net.cpp:124] Setting up pool0
I0428 19:41:50.668998 24923 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:50.669000 24923 net.cpp:139] Memory required for data: 890800
I0428 19:41:50.669003 24923 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:50.669011 24923 net.cpp:86] Creating Layer conv1
I0428 19:41:50.669014 24923 net.cpp:408] conv1 <- pool0
I0428 19:41:50.669019 24923 net.cpp:382] conv1 -> conv1
I0428 19:41:50.670568 24923 net.cpp:124] Setting up conv1
I0428 19:41:50.670581 24923 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:50.670585 24923 net.cpp:139] Memory required for data: 1146800
I0428 19:41:50.670593 24923 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:50.670606 24923 net.cpp:86] Creating Layer pool1
I0428 19:41:50.670610 24923 net.cpp:408] pool1 <- conv1
I0428 19:41:50.670616 24923 net.cpp:382] pool1 -> pool1
I0428 19:41:50.670657 24923 net.cpp:124] Setting up pool1
I0428 19:41:50.670663 24923 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:50.670665 24923 net.cpp:139] Memory required for data: 1210800
I0428 19:41:50.670670 24923 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:50.670676 24923 net.cpp:86] Creating Layer ip1
I0428 19:41:50.670680 24923 net.cpp:408] ip1 <- pool1
I0428 19:41:50.670684 24923 net.cpp:382] ip1 -> ip1
I0428 19:41:50.670804 24923 net.cpp:124] Setting up ip1
I0428 19:41:50.670810 24923 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:50.670824 24923 net.cpp:139] Memory required for data: 1220800
I0428 19:41:50.670831 24923 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:50.670842 24923 net.cpp:86] Creating Layer relu1
I0428 19:41:50.670846 24923 net.cpp:408] relu1 <- ip1
I0428 19:41:50.670856 24923 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:50.671059 24923 net.cpp:124] Setting up relu1
I0428 19:41:50.671068 24923 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:50.671078 24923 net.cpp:139] Memory required for data: 1230800
I0428 19:41:50.671082 24923 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:50.671095 24923 net.cpp:86] Creating Layer ip2
I0428 19:41:50.671098 24923 net.cpp:408] ip2 <- ip1
I0428 19:41:50.671103 24923 net.cpp:382] ip2 -> ip2
I0428 19:41:50.671245 24923 net.cpp:124] Setting up ip2
I0428 19:41:50.671253 24923 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:50.671257 24923 net.cpp:139] Memory required for data: 1240800
I0428 19:41:50.671262 24923 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:50.671267 24923 net.cpp:86] Creating Layer relu2
I0428 19:41:50.671270 24923 net.cpp:408] relu2 <- ip2
I0428 19:41:50.671273 24923 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:50.671425 24923 net.cpp:124] Setting up relu2
I0428 19:41:50.671432 24923 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:50.671442 24923 net.cpp:139] Memory required for data: 1250800
I0428 19:41:50.671444 24923 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:50.671450 24923 net.cpp:86] Creating Layer ip3
I0428 19:41:50.671458 24923 net.cpp:408] ip3 <- ip2
I0428 19:41:50.671463 24923 net.cpp:382] ip3 -> ip3
I0428 19:41:50.671562 24923 net.cpp:124] Setting up ip3
I0428 19:41:50.671569 24923 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:50.671572 24923 net.cpp:139] Memory required for data: 1254800
I0428 19:41:50.671579 24923 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:50.671584 24923 net.cpp:86] Creating Layer relu3
I0428 19:41:50.671587 24923 net.cpp:408] relu3 <- ip3
I0428 19:41:50.671591 24923 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:50.672631 24923 net.cpp:124] Setting up relu3
I0428 19:41:50.672643 24923 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:50.672646 24923 net.cpp:139] Memory required for data: 1258800
I0428 19:41:50.672650 24923 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:50.672655 24923 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:50.672658 24923 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:50.672662 24923 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:50.672669 24923 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:50.672706 24923 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:50.672713 24923 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:50.672722 24923 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:50.672724 24923 net.cpp:139] Memory required for data: 1266800
I0428 19:41:50.672727 24923 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:50.672732 24923 net.cpp:86] Creating Layer accuracy
I0428 19:41:50.672740 24923 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:50.672744 24923 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:50.672750 24923 net.cpp:382] accuracy -> accuracy
I0428 19:41:50.672756 24923 net.cpp:124] Setting up accuracy
I0428 19:41:50.672760 24923 net.cpp:131] Top shape: (1)
I0428 19:41:50.672763 24923 net.cpp:139] Memory required for data: 1266804
I0428 19:41:50.672771 24923 layer_factory.hpp:77] Creating layer loss
I0428 19:41:50.672782 24923 net.cpp:86] Creating Layer loss
I0428 19:41:50.672785 24923 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:50.672799 24923 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:50.672803 24923 net.cpp:382] loss -> loss
I0428 19:41:50.672814 24923 layer_factory.hpp:77] Creating layer loss
I0428 19:41:50.673127 24923 net.cpp:124] Setting up loss
I0428 19:41:50.673136 24923 net.cpp:131] Top shape: (1)
I0428 19:41:50.673140 24923 net.cpp:134]     with loss weight 1
I0428 19:41:50.673146 24923 net.cpp:139] Memory required for data: 1266808
I0428 19:41:50.673173 24923 net.cpp:200] loss needs backward computation.
I0428 19:41:50.673177 24923 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:50.673199 24923 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:50.673202 24923 net.cpp:200] relu3 needs backward computation.
I0428 19:41:50.673210 24923 net.cpp:200] ip3 needs backward computation.
I0428 19:41:50.673213 24923 net.cpp:200] relu2 needs backward computation.
I0428 19:41:50.673215 24923 net.cpp:200] ip2 needs backward computation.
I0428 19:41:50.673218 24923 net.cpp:200] relu1 needs backward computation.
I0428 19:41:50.673220 24923 net.cpp:200] ip1 needs backward computation.
I0428 19:41:50.673223 24923 net.cpp:200] pool1 needs backward computation.
I0428 19:41:50.673226 24923 net.cpp:200] conv1 needs backward computation.
I0428 19:41:50.673229 24923 net.cpp:200] pool0 needs backward computation.
I0428 19:41:50.673233 24923 net.cpp:200] conv0 needs backward computation.
I0428 19:41:50.673235 24923 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:50.673239 24923 net.cpp:202] mnist does not need backward computation.
I0428 19:41:50.673241 24923 net.cpp:244] This network produces output accuracy
I0428 19:41:50.673250 24923 net.cpp:244] This network produces output loss
I0428 19:41:50.673261 24923 net.cpp:257] Network initialization done.
I0428 19:41:50.673302 24923 solver.cpp:56] Solver scaffolding done.
I0428 19:41:50.673645 24923 caffe.cpp:248] Starting Optimization
I0428 19:41:50.673652 24923 solver.cpp:273] Solving LeNet
I0428 19:41:50.673656 24923 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:50.674518 24923 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:50.676481 24923 blocking_queue.cpp:49] Waiting for data
I0428 19:41:50.748963 24930 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:50.749507 24923 solver.cpp:398]     Test net output #0: accuracy = 0.0526
I0428 19:41:50.749541 24923 solver.cpp:398]     Test net output #1: loss = 2.31489 (* 1 = 2.31489 loss)
I0428 19:41:50.752001 24923 solver.cpp:219] Iteration 0 (0 iter/s, 0.0783104s/100 iters), loss = 2.30174
I0428 19:41:50.752037 24923 solver.cpp:238]     Train net output #0: loss = 2.30174 (* 1 = 2.30174 loss)
I0428 19:41:50.752051 24923 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:50.835916 24923 solver.cpp:219] Iteration 100 (1192.37 iter/s, 0.0838667s/100 iters), loss = 1.23589
I0428 19:41:50.835948 24923 solver.cpp:238]     Train net output #0: loss = 1.23589 (* 1 = 1.23589 loss)
I0428 19:41:50.835958 24923 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:50.914602 24923 solver.cpp:219] Iteration 200 (1271.58 iter/s, 0.0786422s/100 iters), loss = 0.70587
I0428 19:41:50.914633 24923 solver.cpp:238]     Train net output #0: loss = 0.70587 (* 1 = 0.70587 loss)
I0428 19:41:50.914641 24923 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:50.995627 24923 solver.cpp:219] Iteration 300 (1234.86 iter/s, 0.080981s/100 iters), loss = 0.644815
I0428 19:41:50.995658 24923 solver.cpp:238]     Train net output #0: loss = 0.644815 (* 1 = 0.644815 loss)
I0428 19:41:50.995666 24923 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:51.075610 24923 solver.cpp:219] Iteration 400 (1250.95 iter/s, 0.0799395s/100 iters), loss = 0.456843
I0428 19:41:51.075641 24923 solver.cpp:238]     Train net output #0: loss = 0.456843 (* 1 = 0.456843 loss)
I0428 19:41:51.075649 24923 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:51.155750 24923 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:51.224212 24930 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:51.224687 24923 solver.cpp:398]     Test net output #0: accuracy = 0.7386
I0428 19:41:51.224711 24923 solver.cpp:398]     Test net output #1: loss = 0.682689 (* 1 = 0.682689 loss)
I0428 19:41:51.225570 24923 solver.cpp:219] Iteration 500 (667.038 iter/s, 0.149917s/100 iters), loss = 0.597258
I0428 19:41:51.225599 24923 solver.cpp:238]     Train net output #0: loss = 0.597258 (* 1 = 0.597258 loss)
I0428 19:41:51.225625 24923 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:51.307333 24923 solver.cpp:219] Iteration 600 (1223.69 iter/s, 0.0817203s/100 iters), loss = 0.841438
I0428 19:41:51.307368 24923 solver.cpp:238]     Train net output #0: loss = 0.841438 (* 1 = 0.841438 loss)
I0428 19:41:51.307376 24923 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:51.388602 24923 solver.cpp:219] Iteration 700 (1231.18 iter/s, 0.0812227s/100 iters), loss = 0.649514
I0428 19:41:51.388634 24923 solver.cpp:238]     Train net output #0: loss = 0.649514 (* 1 = 0.649514 loss)
I0428 19:41:51.388643 24923 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:51.469256 24923 solver.cpp:219] Iteration 800 (1240.61 iter/s, 0.0806052s/100 iters), loss = 0.720107
I0428 19:41:51.469288 24923 solver.cpp:238]     Train net output #0: loss = 0.720107 (* 1 = 0.720107 loss)
I0428 19:41:51.469296 24923 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:51.547406 24923 solver.cpp:219] Iteration 900 (1280.27 iter/s, 0.0781087s/100 iters), loss = 0.786249
I0428 19:41:51.547431 24923 solver.cpp:238]     Train net output #0: loss = 0.786249 (* 1 = 0.786249 loss)
I0428 19:41:51.547437 24923 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:51.571892 24929 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:51.621165 24923 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:51.621945 24923 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:51.622483 24923 solver.cpp:311] Iteration 1000, loss = 0.703044
I0428 19:41:51.622498 24923 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:51.696861 24930 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:51.697294 24923 solver.cpp:398]     Test net output #0: accuracy = 0.7561
I0428 19:41:51.697314 24923 solver.cpp:398]     Test net output #1: loss = 0.607274 (* 1 = 0.607274 loss)
I0428 19:41:51.697320 24923 solver.cpp:316] Optimization Done.
I0428 19:41:51.697322 24923 caffe.cpp:259] Optimization Done.
