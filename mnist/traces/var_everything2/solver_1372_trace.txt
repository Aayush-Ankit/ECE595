I0428 20:20:51.799345  1646 caffe.cpp:218] Using GPUs 0
I0428 20:20:51.831039  1646 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:52.304103  1646 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1372.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:52.304235  1646 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1372.prototxt
I0428 20:20:52.304530  1646 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:52.304544  1646 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:52.304630  1646 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:52.304692  1646 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:52.304772  1646 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:52.304792  1646 net.cpp:86] Creating Layer mnist
I0428 20:20:52.304798  1646 net.cpp:382] mnist -> data
I0428 20:20:52.304826  1646 net.cpp:382] mnist -> label
I0428 20:20:52.305793  1646 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:52.307973  1646 net.cpp:124] Setting up mnist
I0428 20:20:52.308018  1646 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:52.308023  1646 net.cpp:131] Top shape: 64 (64)
I0428 20:20:52.308027  1646 net.cpp:139] Memory required for data: 200960
I0428 20:20:52.308046  1646 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:52.308063  1646 net.cpp:86] Creating Layer conv0
I0428 20:20:52.308066  1646 net.cpp:408] conv0 <- data
I0428 20:20:52.308076  1646 net.cpp:382] conv0 -> conv0
I0428 20:20:52.632544  1646 net.cpp:124] Setting up conv0
I0428 20:20:52.632576  1646 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:52.632581  1646 net.cpp:139] Memory required for data: 7573760
I0428 20:20:52.632625  1646 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:52.632640  1646 net.cpp:86] Creating Layer pool0
I0428 20:20:52.632645  1646 net.cpp:408] pool0 <- conv0
I0428 20:20:52.632652  1646 net.cpp:382] pool0 -> pool0
I0428 20:20:52.632710  1646 net.cpp:124] Setting up pool0
I0428 20:20:52.632719  1646 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:52.632722  1646 net.cpp:139] Memory required for data: 9416960
I0428 20:20:52.632726  1646 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:52.632740  1646 net.cpp:86] Creating Layer conv1
I0428 20:20:52.632743  1646 net.cpp:408] conv1 <- pool0
I0428 20:20:52.632750  1646 net.cpp:382] conv1 -> conv1
I0428 20:20:52.635319  1646 net.cpp:124] Setting up conv1
I0428 20:20:52.635337  1646 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:20:52.635341  1646 net.cpp:139] Memory required for data: 10236160
I0428 20:20:52.635352  1646 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:52.635360  1646 net.cpp:86] Creating Layer pool1
I0428 20:20:52.635365  1646 net.cpp:408] pool1 <- conv1
I0428 20:20:52.635371  1646 net.cpp:382] pool1 -> pool1
I0428 20:20:52.635413  1646 net.cpp:124] Setting up pool1
I0428 20:20:52.635426  1646 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:20:52.635429  1646 net.cpp:139] Memory required for data: 10440960
I0428 20:20:52.635434  1646 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:52.635442  1646 net.cpp:86] Creating Layer ip1
I0428 20:20:52.635447  1646 net.cpp:408] ip1 <- pool1
I0428 20:20:52.635452  1646 net.cpp:382] ip1 -> ip1
I0428 20:20:52.635700  1646 net.cpp:124] Setting up ip1
I0428 20:20:52.635710  1646 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:52.635713  1646 net.cpp:139] Memory required for data: 10447360
I0428 20:20:52.635721  1646 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:52.635728  1646 net.cpp:86] Creating Layer relu1
I0428 20:20:52.635732  1646 net.cpp:408] relu1 <- ip1
I0428 20:20:52.635737  1646 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:52.635929  1646 net.cpp:124] Setting up relu1
I0428 20:20:52.635941  1646 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:52.635944  1646 net.cpp:139] Memory required for data: 10453760
I0428 20:20:52.635948  1646 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:52.635957  1646 net.cpp:86] Creating Layer ip2
I0428 20:20:52.635959  1646 net.cpp:408] ip2 <- ip1
I0428 20:20:52.635965  1646 net.cpp:382] ip2 -> ip2
I0428 20:20:52.636077  1646 net.cpp:124] Setting up ip2
I0428 20:20:52.636085  1646 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:52.636090  1646 net.cpp:139] Memory required for data: 10456320
I0428 20:20:52.636096  1646 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:52.636103  1646 net.cpp:86] Creating Layer relu2
I0428 20:20:52.636106  1646 net.cpp:408] relu2 <- ip2
I0428 20:20:52.636111  1646 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:52.636957  1646 net.cpp:124] Setting up relu2
I0428 20:20:52.636972  1646 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:52.636976  1646 net.cpp:139] Memory required for data: 10458880
I0428 20:20:52.636981  1646 layer_factory.hpp:77] Creating layer loss
I0428 20:20:52.636988  1646 net.cpp:86] Creating Layer loss
I0428 20:20:52.636992  1646 net.cpp:408] loss <- ip2
I0428 20:20:52.636998  1646 net.cpp:408] loss <- label
I0428 20:20:52.637006  1646 net.cpp:382] loss -> loss
I0428 20:20:52.637032  1646 layer_factory.hpp:77] Creating layer loss
I0428 20:20:52.637300  1646 net.cpp:124] Setting up loss
I0428 20:20:52.637311  1646 net.cpp:131] Top shape: (1)
I0428 20:20:52.637316  1646 net.cpp:134]     with loss weight 1
I0428 20:20:52.637334  1646 net.cpp:139] Memory required for data: 10458884
I0428 20:20:52.637338  1646 net.cpp:200] loss needs backward computation.
I0428 20:20:52.637343  1646 net.cpp:200] relu2 needs backward computation.
I0428 20:20:52.637346  1646 net.cpp:200] ip2 needs backward computation.
I0428 20:20:52.637351  1646 net.cpp:200] relu1 needs backward computation.
I0428 20:20:52.637353  1646 net.cpp:200] ip1 needs backward computation.
I0428 20:20:52.637369  1646 net.cpp:200] pool1 needs backward computation.
I0428 20:20:52.637373  1646 net.cpp:200] conv1 needs backward computation.
I0428 20:20:52.637377  1646 net.cpp:200] pool0 needs backward computation.
I0428 20:20:52.637382  1646 net.cpp:200] conv0 needs backward computation.
I0428 20:20:52.637385  1646 net.cpp:202] mnist does not need backward computation.
I0428 20:20:52.637388  1646 net.cpp:244] This network produces output loss
I0428 20:20:52.637399  1646 net.cpp:257] Network initialization done.
I0428 20:20:52.637749  1646 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1372.prototxt
I0428 20:20:52.637779  1646 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:52.637881  1646 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:52.637956  1646 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:52.638012  1646 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:52.638027  1646 net.cpp:86] Creating Layer mnist
I0428 20:20:52.638032  1646 net.cpp:382] mnist -> data
I0428 20:20:52.638041  1646 net.cpp:382] mnist -> label
I0428 20:20:52.638139  1646 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:52.640337  1646 net.cpp:124] Setting up mnist
I0428 20:20:52.640352  1646 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:52.640358  1646 net.cpp:131] Top shape: 100 (100)
I0428 20:20:52.640362  1646 net.cpp:139] Memory required for data: 314000
I0428 20:20:52.640367  1646 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:52.640375  1646 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:52.640379  1646 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:52.640385  1646 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:52.640393  1646 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:52.640534  1646 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:52.640543  1646 net.cpp:131] Top shape: 100 (100)
I0428 20:20:52.640548  1646 net.cpp:131] Top shape: 100 (100)
I0428 20:20:52.640552  1646 net.cpp:139] Memory required for data: 314800
I0428 20:20:52.640555  1646 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:52.640565  1646 net.cpp:86] Creating Layer conv0
I0428 20:20:52.640569  1646 net.cpp:408] conv0 <- data
I0428 20:20:52.640575  1646 net.cpp:382] conv0 -> conv0
I0428 20:20:52.642334  1646 net.cpp:124] Setting up conv0
I0428 20:20:52.642351  1646 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:52.642356  1646 net.cpp:139] Memory required for data: 11834800
I0428 20:20:52.642367  1646 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:52.642375  1646 net.cpp:86] Creating Layer pool0
I0428 20:20:52.642379  1646 net.cpp:408] pool0 <- conv0
I0428 20:20:52.642385  1646 net.cpp:382] pool0 -> pool0
I0428 20:20:52.642426  1646 net.cpp:124] Setting up pool0
I0428 20:20:52.642432  1646 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:52.642436  1646 net.cpp:139] Memory required for data: 14714800
I0428 20:20:52.642439  1646 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:52.642449  1646 net.cpp:86] Creating Layer conv1
I0428 20:20:52.642452  1646 net.cpp:408] conv1 <- pool0
I0428 20:20:52.642458  1646 net.cpp:382] conv1 -> conv1
I0428 20:20:52.644484  1646 net.cpp:124] Setting up conv1
I0428 20:20:52.644500  1646 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:20:52.644503  1646 net.cpp:139] Memory required for data: 15994800
I0428 20:20:52.644513  1646 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:52.644521  1646 net.cpp:86] Creating Layer pool1
I0428 20:20:52.644526  1646 net.cpp:408] pool1 <- conv1
I0428 20:20:52.644531  1646 net.cpp:382] pool1 -> pool1
I0428 20:20:52.644573  1646 net.cpp:124] Setting up pool1
I0428 20:20:52.644579  1646 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:20:52.644583  1646 net.cpp:139] Memory required for data: 16314800
I0428 20:20:52.644587  1646 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:52.644593  1646 net.cpp:86] Creating Layer ip1
I0428 20:20:52.644598  1646 net.cpp:408] ip1 <- pool1
I0428 20:20:52.644603  1646 net.cpp:382] ip1 -> ip1
I0428 20:20:52.644860  1646 net.cpp:124] Setting up ip1
I0428 20:20:52.644870  1646 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:52.644873  1646 net.cpp:139] Memory required for data: 16324800
I0428 20:20:52.644882  1646 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:52.644888  1646 net.cpp:86] Creating Layer relu1
I0428 20:20:52.644892  1646 net.cpp:408] relu1 <- ip1
I0428 20:20:52.644898  1646 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:52.645083  1646 net.cpp:124] Setting up relu1
I0428 20:20:52.645093  1646 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:52.645097  1646 net.cpp:139] Memory required for data: 16334800
I0428 20:20:52.645102  1646 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:52.645110  1646 net.cpp:86] Creating Layer ip2
I0428 20:20:52.645114  1646 net.cpp:408] ip2 <- ip1
I0428 20:20:52.645120  1646 net.cpp:382] ip2 -> ip2
I0428 20:20:52.645232  1646 net.cpp:124] Setting up ip2
I0428 20:20:52.645241  1646 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:52.645244  1646 net.cpp:139] Memory required for data: 16338800
I0428 20:20:52.645251  1646 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:52.645257  1646 net.cpp:86] Creating Layer relu2
I0428 20:20:52.645262  1646 net.cpp:408] relu2 <- ip2
I0428 20:20:52.645267  1646 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:52.645509  1646 net.cpp:124] Setting up relu2
I0428 20:20:52.645519  1646 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:52.645522  1646 net.cpp:139] Memory required for data: 16342800
I0428 20:20:52.645526  1646 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:20:52.645532  1646 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:20:52.645536  1646 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:20:52.645541  1646 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:20:52.645560  1646 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:20:52.645602  1646 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:20:52.645613  1646 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:52.645617  1646 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:52.645622  1646 net.cpp:139] Memory required for data: 16350800
I0428 20:20:52.645625  1646 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:52.645637  1646 net.cpp:86] Creating Layer accuracy
I0428 20:20:52.645642  1646 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:20:52.645647  1646 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:52.645651  1646 net.cpp:382] accuracy -> accuracy
I0428 20:20:52.645660  1646 net.cpp:124] Setting up accuracy
I0428 20:20:52.645665  1646 net.cpp:131] Top shape: (1)
I0428 20:20:52.645668  1646 net.cpp:139] Memory required for data: 16350804
I0428 20:20:52.645671  1646 layer_factory.hpp:77] Creating layer loss
I0428 20:20:52.645678  1646 net.cpp:86] Creating Layer loss
I0428 20:20:52.645681  1646 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:20:52.645692  1646 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:52.645699  1646 net.cpp:382] loss -> loss
I0428 20:20:52.645705  1646 layer_factory.hpp:77] Creating layer loss
I0428 20:20:52.645972  1646 net.cpp:124] Setting up loss
I0428 20:20:52.645983  1646 net.cpp:131] Top shape: (1)
I0428 20:20:52.645987  1646 net.cpp:134]     with loss weight 1
I0428 20:20:52.645995  1646 net.cpp:139] Memory required for data: 16350808
I0428 20:20:52.645999  1646 net.cpp:200] loss needs backward computation.
I0428 20:20:52.646003  1646 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:52.646008  1646 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:20:52.646013  1646 net.cpp:200] relu2 needs backward computation.
I0428 20:20:52.646016  1646 net.cpp:200] ip2 needs backward computation.
I0428 20:20:52.646019  1646 net.cpp:200] relu1 needs backward computation.
I0428 20:20:52.646023  1646 net.cpp:200] ip1 needs backward computation.
I0428 20:20:52.646028  1646 net.cpp:200] pool1 needs backward computation.
I0428 20:20:52.646031  1646 net.cpp:200] conv1 needs backward computation.
I0428 20:20:52.646035  1646 net.cpp:200] pool0 needs backward computation.
I0428 20:20:52.646039  1646 net.cpp:200] conv0 needs backward computation.
I0428 20:20:52.646044  1646 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:52.646049  1646 net.cpp:202] mnist does not need backward computation.
I0428 20:20:52.646051  1646 net.cpp:244] This network produces output accuracy
I0428 20:20:52.646055  1646 net.cpp:244] This network produces output loss
I0428 20:20:52.646067  1646 net.cpp:257] Network initialization done.
I0428 20:20:52.646111  1646 solver.cpp:56] Solver scaffolding done.
I0428 20:20:52.646422  1646 caffe.cpp:248] Starting Optimization
I0428 20:20:52.646428  1646 solver.cpp:273] Solving LeNet
I0428 20:20:52.646431  1646 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:52.646733  1646 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:52.655885  1646 blocking_queue.cpp:49] Waiting for data
I0428 20:20:52.725886  1658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:52.726958  1646 solver.cpp:398]     Test net output #0: accuracy = 0.1363
I0428 20:20:52.726981  1646 solver.cpp:398]     Test net output #1: loss = 2.32531 (* 1 = 2.32531 loss)
I0428 20:20:52.731688  1646 solver.cpp:219] Iteration 0 (-5.42765e-31 iter/s, 0.0852245s/100 iters), loss = 2.32472
I0428 20:20:52.731717  1646 solver.cpp:238]     Train net output #0: loss = 2.32472 (* 1 = 2.32472 loss)
I0428 20:20:52.731731  1646 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:52.889253  1646 solver.cpp:219] Iteration 100 (634.832 iter/s, 0.157522s/100 iters), loss = 0.677316
I0428 20:20:52.889288  1646 solver.cpp:238]     Train net output #0: loss = 0.677316 (* 1 = 0.677316 loss)
I0428 20:20:52.889297  1646 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:53.058823  1646 solver.cpp:219] Iteration 200 (589.908 iter/s, 0.169518s/100 iters), loss = 0.173147
I0428 20:20:53.058871  1646 solver.cpp:238]     Train net output #0: loss = 0.173147 (* 1 = 0.173147 loss)
I0428 20:20:53.058884  1646 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:53.234622  1646 solver.cpp:219] Iteration 300 (569.036 iter/s, 0.175736s/100 iters), loss = 0.152051
I0428 20:20:53.234669  1646 solver.cpp:238]     Train net output #0: loss = 0.152051 (* 1 = 0.152051 loss)
I0428 20:20:53.234681  1646 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:53.410426  1646 solver.cpp:219] Iteration 400 (569.016 iter/s, 0.175742s/100 iters), loss = 0.0694886
I0428 20:20:53.410476  1646 solver.cpp:238]     Train net output #0: loss = 0.0694887 (* 1 = 0.0694887 loss)
I0428 20:20:53.410488  1646 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:53.586158  1646 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:53.670192  1658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:53.671461  1646 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0428 20:20:53.671494  1646 solver.cpp:398]     Test net output #1: loss = 0.0950046 (* 1 = 0.0950046 loss)
I0428 20:20:53.673100  1646 solver.cpp:219] Iteration 500 (380.796 iter/s, 0.262608s/100 iters), loss = 0.0994477
I0428 20:20:53.673136  1646 solver.cpp:238]     Train net output #0: loss = 0.0994477 (* 1 = 0.0994477 loss)
I0428 20:20:53.673146  1646 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:53.829612  1646 solver.cpp:219] Iteration 600 (639.132 iter/s, 0.156462s/100 iters), loss = 0.100925
I0428 20:20:53.829644  1646 solver.cpp:238]     Train net output #0: loss = 0.100925 (* 1 = 0.100925 loss)
I0428 20:20:53.829653  1646 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:53.982908  1646 solver.cpp:219] Iteration 700 (652.529 iter/s, 0.15325s/100 iters), loss = 0.129218
I0428 20:20:53.982940  1646 solver.cpp:238]     Train net output #0: loss = 0.129218 (* 1 = 0.129218 loss)
I0428 20:20:53.982949  1646 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:54.136346  1646 solver.cpp:219] Iteration 800 (651.924 iter/s, 0.153392s/100 iters), loss = 0.236757
I0428 20:20:54.136380  1646 solver.cpp:238]     Train net output #0: loss = 0.236757 (* 1 = 0.236757 loss)
I0428 20:20:54.136389  1646 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:54.301604  1646 solver.cpp:219] Iteration 900 (605.298 iter/s, 0.165208s/100 iters), loss = 0.153822
I0428 20:20:54.301652  1646 solver.cpp:238]     Train net output #0: loss = 0.153822 (* 1 = 0.153822 loss)
I0428 20:20:54.301664  1646 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:54.360582  1657 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:54.477339  1646 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:54.480211  1646 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:54.482116  1646 solver.cpp:311] Iteration 1000, loss = 0.0723434
I0428 20:20:54.482148  1646 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:54.563515  1658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:54.564785  1646 solver.cpp:398]     Test net output #0: accuracy = 0.9772
I0428 20:20:54.564822  1646 solver.cpp:398]     Test net output #1: loss = 0.0697935 (* 1 = 0.0697935 loss)
I0428 20:20:54.564832  1646 solver.cpp:316] Optimization Done.
I0428 20:20:54.564836  1646 caffe.cpp:259] Optimization Done.
