I0428 19:35:15.540606 23474 caffe.cpp:218] Using GPUs 0
I0428 19:35:15.581567 23474 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:16.027699 23474 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test221.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:16.027832 23474 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test221.prototxt
I0428 19:35:16.028148 23474 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:16.028167 23474 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:16.028255 23474 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:16.028337 23474 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:16.028445 23474 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:16.028472 23474 net.cpp:86] Creating Layer mnist
I0428 19:35:16.028482 23474 net.cpp:382] mnist -> data
I0428 19:35:16.028506 23474 net.cpp:382] mnist -> label
I0428 19:35:16.029523 23474 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:16.031852 23474 net.cpp:124] Setting up mnist
I0428 19:35:16.031884 23474 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:16.031893 23474 net.cpp:131] Top shape: 64 (64)
I0428 19:35:16.031898 23474 net.cpp:139] Memory required for data: 200960
I0428 19:35:16.031906 23474 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:16.031925 23474 net.cpp:86] Creating Layer conv0
I0428 19:35:16.031934 23474 net.cpp:408] conv0 <- data
I0428 19:35:16.031949 23474 net.cpp:382] conv0 -> conv0
I0428 19:35:16.268993 23474 net.cpp:124] Setting up conv0
I0428 19:35:16.269023 23474 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:16.269028 23474 net.cpp:139] Memory required for data: 7573760
I0428 19:35:16.269063 23474 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:16.269080 23474 net.cpp:86] Creating Layer pool0
I0428 19:35:16.269106 23474 net.cpp:408] pool0 <- conv0
I0428 19:35:16.269115 23474 net.cpp:382] pool0 -> pool0
I0428 19:35:16.269184 23474 net.cpp:124] Setting up pool0
I0428 19:35:16.269193 23474 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:16.269197 23474 net.cpp:139] Memory required for data: 9416960
I0428 19:35:16.269202 23474 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:16.269213 23474 net.cpp:86] Creating Layer ip1
I0428 19:35:16.269218 23474 net.cpp:408] ip1 <- pool0
I0428 19:35:16.269227 23474 net.cpp:382] ip1 -> ip1
I0428 19:35:16.271165 23474 net.cpp:124] Setting up ip1
I0428 19:35:16.271183 23474 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:16.271188 23474 net.cpp:139] Memory required for data: 9423360
I0428 19:35:16.271200 23474 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:16.271210 23474 net.cpp:86] Creating Layer relu1
I0428 19:35:16.271216 23474 net.cpp:408] relu1 <- ip1
I0428 19:35:16.271224 23474 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:16.271415 23474 net.cpp:124] Setting up relu1
I0428 19:35:16.271426 23474 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:16.271431 23474 net.cpp:139] Memory required for data: 9429760
I0428 19:35:16.271436 23474 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:16.271461 23474 net.cpp:86] Creating Layer ip2
I0428 19:35:16.271466 23474 net.cpp:408] ip2 <- ip1
I0428 19:35:16.271476 23474 net.cpp:382] ip2 -> ip2
I0428 19:35:16.271575 23474 net.cpp:124] Setting up ip2
I0428 19:35:16.271584 23474 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:16.271587 23474 net.cpp:139] Memory required for data: 9436160
I0428 19:35:16.271600 23474 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:16.271610 23474 net.cpp:86] Creating Layer relu2
I0428 19:35:16.271620 23474 net.cpp:408] relu2 <- ip2
I0428 19:35:16.271643 23474 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:16.272424 23474 net.cpp:124] Setting up relu2
I0428 19:35:16.272454 23474 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:16.272459 23474 net.cpp:139] Memory required for data: 9442560
I0428 19:35:16.272465 23474 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:16.272475 23474 net.cpp:86] Creating Layer ip3
I0428 19:35:16.272481 23474 net.cpp:408] ip3 <- ip2
I0428 19:35:16.272492 23474 net.cpp:382] ip3 -> ip3
I0428 19:35:16.272622 23474 net.cpp:124] Setting up ip3
I0428 19:35:16.272631 23474 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:16.272636 23474 net.cpp:139] Memory required for data: 9445120
I0428 19:35:16.272646 23474 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:16.272658 23474 net.cpp:86] Creating Layer relu3
I0428 19:35:16.272665 23474 net.cpp:408] relu3 <- ip3
I0428 19:35:16.272672 23474 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:16.272912 23474 net.cpp:124] Setting up relu3
I0428 19:35:16.272922 23474 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:16.272927 23474 net.cpp:139] Memory required for data: 9447680
I0428 19:35:16.272933 23474 layer_factory.hpp:77] Creating layer loss
I0428 19:35:16.272943 23474 net.cpp:86] Creating Layer loss
I0428 19:35:16.272948 23474 net.cpp:408] loss <- ip3
I0428 19:35:16.272955 23474 net.cpp:408] loss <- label
I0428 19:35:16.272964 23474 net.cpp:382] loss -> loss
I0428 19:35:16.272987 23474 layer_factory.hpp:77] Creating layer loss
I0428 19:35:16.273300 23474 net.cpp:124] Setting up loss
I0428 19:35:16.273310 23474 net.cpp:131] Top shape: (1)
I0428 19:35:16.273315 23474 net.cpp:134]     with loss weight 1
I0428 19:35:16.273350 23474 net.cpp:139] Memory required for data: 9447684
I0428 19:35:16.273357 23474 net.cpp:200] loss needs backward computation.
I0428 19:35:16.273363 23474 net.cpp:200] relu3 needs backward computation.
I0428 19:35:16.273368 23474 net.cpp:200] ip3 needs backward computation.
I0428 19:35:16.273373 23474 net.cpp:200] relu2 needs backward computation.
I0428 19:35:16.273377 23474 net.cpp:200] ip2 needs backward computation.
I0428 19:35:16.273382 23474 net.cpp:200] relu1 needs backward computation.
I0428 19:35:16.273387 23474 net.cpp:200] ip1 needs backward computation.
I0428 19:35:16.273404 23474 net.cpp:200] pool0 needs backward computation.
I0428 19:35:16.273409 23474 net.cpp:200] conv0 needs backward computation.
I0428 19:35:16.273416 23474 net.cpp:202] mnist does not need backward computation.
I0428 19:35:16.273421 23474 net.cpp:244] This network produces output loss
I0428 19:35:16.273435 23474 net.cpp:257] Network initialization done.
I0428 19:35:16.273764 23474 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test221.prototxt
I0428 19:35:16.273795 23474 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:16.273876 23474 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:16.273972 23474 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:16.274029 23474 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:16.274044 23474 net.cpp:86] Creating Layer mnist
I0428 19:35:16.274052 23474 net.cpp:382] mnist -> data
I0428 19:35:16.274063 23474 net.cpp:382] mnist -> label
I0428 19:35:16.274173 23474 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:16.275465 23474 net.cpp:124] Setting up mnist
I0428 19:35:16.275496 23474 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:16.275517 23474 net.cpp:131] Top shape: 100 (100)
I0428 19:35:16.275522 23474 net.cpp:139] Memory required for data: 314000
I0428 19:35:16.275527 23474 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:16.275537 23474 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:16.275543 23474 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:16.275552 23474 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:16.275563 23474 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:16.275650 23474 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:16.275658 23474 net.cpp:131] Top shape: 100 (100)
I0428 19:35:16.275665 23474 net.cpp:131] Top shape: 100 (100)
I0428 19:35:16.275670 23474 net.cpp:139] Memory required for data: 314800
I0428 19:35:16.275684 23474 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:16.275715 23474 net.cpp:86] Creating Layer conv0
I0428 19:35:16.275720 23474 net.cpp:408] conv0 <- data
I0428 19:35:16.275729 23474 net.cpp:382] conv0 -> conv0
I0428 19:35:16.277395 23474 net.cpp:124] Setting up conv0
I0428 19:35:16.277410 23474 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:16.277415 23474 net.cpp:139] Memory required for data: 11834800
I0428 19:35:16.277446 23474 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:16.277456 23474 net.cpp:86] Creating Layer pool0
I0428 19:35:16.277462 23474 net.cpp:408] pool0 <- conv0
I0428 19:35:16.277472 23474 net.cpp:382] pool0 -> pool0
I0428 19:35:16.277511 23474 net.cpp:124] Setting up pool0
I0428 19:35:16.277521 23474 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:16.277526 23474 net.cpp:139] Memory required for data: 14714800
I0428 19:35:16.277531 23474 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:16.277541 23474 net.cpp:86] Creating Layer ip1
I0428 19:35:16.277547 23474 net.cpp:408] ip1 <- pool0
I0428 19:35:16.277556 23474 net.cpp:382] ip1 -> ip1
I0428 19:35:16.279665 23474 net.cpp:124] Setting up ip1
I0428 19:35:16.279681 23474 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:16.279686 23474 net.cpp:139] Memory required for data: 14724800
I0428 19:35:16.279700 23474 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:16.279708 23474 net.cpp:86] Creating Layer relu1
I0428 19:35:16.279729 23474 net.cpp:408] relu1 <- ip1
I0428 19:35:16.279736 23474 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:16.279939 23474 net.cpp:124] Setting up relu1
I0428 19:35:16.279950 23474 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:16.279956 23474 net.cpp:139] Memory required for data: 14734800
I0428 19:35:16.279961 23474 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:16.279971 23474 net.cpp:86] Creating Layer ip2
I0428 19:35:16.279976 23474 net.cpp:408] ip2 <- ip1
I0428 19:35:16.279986 23474 net.cpp:382] ip2 -> ip2
I0428 19:35:16.280097 23474 net.cpp:124] Setting up ip2
I0428 19:35:16.280107 23474 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:16.280112 23474 net.cpp:139] Memory required for data: 14744800
I0428 19:35:16.280123 23474 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:16.280131 23474 net.cpp:86] Creating Layer relu2
I0428 19:35:16.280140 23474 net.cpp:408] relu2 <- ip2
I0428 19:35:16.280148 23474 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:16.281061 23474 net.cpp:124] Setting up relu2
I0428 19:35:16.281076 23474 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:16.281082 23474 net.cpp:139] Memory required for data: 14754800
I0428 19:35:16.281088 23474 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:16.281102 23474 net.cpp:86] Creating Layer ip3
I0428 19:35:16.281108 23474 net.cpp:408] ip3 <- ip2
I0428 19:35:16.281118 23474 net.cpp:382] ip3 -> ip3
I0428 19:35:16.281328 23474 net.cpp:124] Setting up ip3
I0428 19:35:16.281339 23474 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:16.281345 23474 net.cpp:139] Memory required for data: 14758800
I0428 19:35:16.281354 23474 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:16.281363 23474 net.cpp:86] Creating Layer relu3
I0428 19:35:16.281369 23474 net.cpp:408] relu3 <- ip3
I0428 19:35:16.281376 23474 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:16.281536 23474 net.cpp:124] Setting up relu3
I0428 19:35:16.281548 23474 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:16.281553 23474 net.cpp:139] Memory required for data: 14762800
I0428 19:35:16.281558 23474 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:16.281565 23474 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:16.281570 23474 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:16.281577 23474 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:16.281586 23474 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:16.281627 23474 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:16.281635 23474 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:16.281652 23474 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:16.281658 23474 net.cpp:139] Memory required for data: 14770800
I0428 19:35:16.281662 23474 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:16.281672 23474 net.cpp:86] Creating Layer accuracy
I0428 19:35:16.281682 23474 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:16.281688 23474 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:16.281697 23474 net.cpp:382] accuracy -> accuracy
I0428 19:35:16.281720 23474 net.cpp:124] Setting up accuracy
I0428 19:35:16.281728 23474 net.cpp:131] Top shape: (1)
I0428 19:35:16.281733 23474 net.cpp:139] Memory required for data: 14770804
I0428 19:35:16.281738 23474 layer_factory.hpp:77] Creating layer loss
I0428 19:35:16.281744 23474 net.cpp:86] Creating Layer loss
I0428 19:35:16.281749 23474 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:16.281756 23474 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:16.281764 23474 net.cpp:382] loss -> loss
I0428 19:35:16.281774 23474 layer_factory.hpp:77] Creating layer loss
I0428 19:35:16.282075 23474 net.cpp:124] Setting up loss
I0428 19:35:16.282088 23474 net.cpp:131] Top shape: (1)
I0428 19:35:16.282094 23474 net.cpp:134]     with loss weight 1
I0428 19:35:16.282104 23474 net.cpp:139] Memory required for data: 14770808
I0428 19:35:16.282109 23474 net.cpp:200] loss needs backward computation.
I0428 19:35:16.282116 23474 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:16.282122 23474 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:16.282129 23474 net.cpp:200] relu3 needs backward computation.
I0428 19:35:16.282133 23474 net.cpp:200] ip3 needs backward computation.
I0428 19:35:16.282138 23474 net.cpp:200] relu2 needs backward computation.
I0428 19:35:16.282143 23474 net.cpp:200] ip2 needs backward computation.
I0428 19:35:16.282150 23474 net.cpp:200] relu1 needs backward computation.
I0428 19:35:16.282153 23474 net.cpp:200] ip1 needs backward computation.
I0428 19:35:16.282160 23474 net.cpp:200] pool0 needs backward computation.
I0428 19:35:16.282165 23474 net.cpp:200] conv0 needs backward computation.
I0428 19:35:16.282171 23474 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:16.282176 23474 net.cpp:202] mnist does not need backward computation.
I0428 19:35:16.282181 23474 net.cpp:244] This network produces output accuracy
I0428 19:35:16.282202 23474 net.cpp:244] This network produces output loss
I0428 19:35:16.282219 23474 net.cpp:257] Network initialization done.
I0428 19:35:16.282276 23474 solver.cpp:56] Solver scaffolding done.
I0428 19:35:16.282546 23474 caffe.cpp:248] Starting Optimization
I0428 19:35:16.282552 23474 solver.cpp:273] Solving LeNet
I0428 19:35:16.282557 23474 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:16.283972 23474 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:16.382022 23482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:16.384567 23474 solver.cpp:398]     Test net output #0: accuracy = 0.1008
I0428 19:35:16.384588 23474 solver.cpp:398]     Test net output #1: loss = 2.30491 (* 1 = 2.30491 loss)
I0428 19:35:16.389000 23474 solver.cpp:219] Iteration 0 (0 iter/s, 0.106413s/100 iters), loss = 2.29587
I0428 19:35:16.389027 23474 solver.cpp:238]     Train net output #0: loss = 2.29587 (* 1 = 2.29587 loss)
I0428 19:35:16.389073 23474 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:16.529310 23474 solver.cpp:219] Iteration 100 (712.913 iter/s, 0.14027s/100 iters), loss = 0.742901
I0428 19:35:16.529340 23474 solver.cpp:238]     Train net output #0: loss = 0.742901 (* 1 = 0.742901 loss)
I0428 19:35:16.529348 23474 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:16.668987 23474 solver.cpp:219] Iteration 200 (716.139 iter/s, 0.139638s/100 iters), loss = 0.555447
I0428 19:35:16.669016 23474 solver.cpp:238]     Train net output #0: loss = 0.555447 (* 1 = 0.555447 loss)
I0428 19:35:16.669041 23474 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:16.811053 23474 solver.cpp:219] Iteration 300 (704.093 iter/s, 0.142027s/100 iters), loss = 0.528361
I0428 19:35:16.811091 23474 solver.cpp:238]     Train net output #0: loss = 0.528361 (* 1 = 0.528361 loss)
I0428 19:35:16.811117 23474 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:16.955092 23474 solver.cpp:219] Iteration 400 (694.484 iter/s, 0.143992s/100 iters), loss = 0.835269
I0428 19:35:16.955134 23474 solver.cpp:238]     Train net output #0: loss = 0.835269 (* 1 = 0.835269 loss)
I0428 19:35:16.955159 23474 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:17.096114 23474 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:17.203079 23482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:17.206881 23474 solver.cpp:398]     Test net output #0: accuracy = 0.7649
I0428 19:35:17.206912 23474 solver.cpp:398]     Test net output #1: loss = 0.612015 (* 1 = 0.612015 loss)
I0428 19:35:17.208340 23474 solver.cpp:219] Iteration 500 (394.965 iter/s, 0.253187s/100 iters), loss = 0.907219
I0428 19:35:17.208380 23474 solver.cpp:238]     Train net output #0: loss = 0.907219 (* 1 = 0.907219 loss)
I0428 19:35:17.208391 23474 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:17.352725 23474 solver.cpp:219] Iteration 600 (692.858 iter/s, 0.14433s/100 iters), loss = 0.478741
I0428 19:35:17.352753 23474 solver.cpp:238]     Train net output #0: loss = 0.478741 (* 1 = 0.478741 loss)
I0428 19:35:17.352761 23474 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:17.496999 23474 solver.cpp:219] Iteration 700 (693.32 iter/s, 0.144233s/100 iters), loss = 0.591503
I0428 19:35:17.497030 23474 solver.cpp:238]     Train net output #0: loss = 0.591503 (* 1 = 0.591503 loss)
I0428 19:35:17.497037 23474 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:17.640851 23474 solver.cpp:219] Iteration 800 (695.37 iter/s, 0.143808s/100 iters), loss = 0.472496
I0428 19:35:17.640882 23474 solver.cpp:238]     Train net output #0: loss = 0.472496 (* 1 = 0.472496 loss)
I0428 19:35:17.640889 23474 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:17.784306 23474 solver.cpp:219] Iteration 900 (697.301 iter/s, 0.14341s/100 iters), loss = 0.262594
I0428 19:35:17.784335 23474 solver.cpp:238]     Train net output #0: loss = 0.262594 (* 1 = 0.262594 loss)
I0428 19:35:17.784343 23474 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:17.832224 23480 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:17.926515 23474 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:17.930778 23474 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:17.933049 23474 solver.cpp:311] Iteration 1000, loss = 0.346859
I0428 19:35:17.933066 23474 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:18.030714 23482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:18.033435 23474 solver.cpp:398]     Test net output #0: accuracy = 0.8763
I0428 19:35:18.033458 23474 solver.cpp:398]     Test net output #1: loss = 0.335271 (* 1 = 0.335271 loss)
I0428 19:35:18.033465 23474 solver.cpp:316] Optimization Done.
I0428 19:35:18.033469 23474 caffe.cpp:259] Optimization Done.
