I0428 20:03:54.385994 30287 caffe.cpp:218] Using GPUs 0
I0428 20:03:54.415273 30287 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:54.926167 30287 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test961.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:54.926311 30287 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test961.prototxt
I0428 20:03:54.926728 30287 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:54.926748 30287 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:54.926852 30287 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:54.926931 30287 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:54.927036 30287 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:54.927062 30287 net.cpp:86] Creating Layer mnist
I0428 20:03:54.927068 30287 net.cpp:382] mnist -> data
I0428 20:03:54.927093 30287 net.cpp:382] mnist -> label
I0428 20:03:54.928184 30287 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:54.930661 30287 net.cpp:124] Setting up mnist
I0428 20:03:54.930678 30287 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:54.930686 30287 net.cpp:131] Top shape: 64 (64)
I0428 20:03:54.930691 30287 net.cpp:139] Memory required for data: 200960
I0428 20:03:54.930697 30287 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:54.930712 30287 net.cpp:86] Creating Layer conv0
I0428 20:03:54.930734 30287 net.cpp:408] conv0 <- data
I0428 20:03:54.930748 30287 net.cpp:382] conv0 -> conv0
I0428 20:03:55.221664 30287 net.cpp:124] Setting up conv0
I0428 20:03:55.221696 30287 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:55.221701 30287 net.cpp:139] Memory required for data: 1675520
I0428 20:03:55.221719 30287 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:55.221735 30287 net.cpp:86] Creating Layer pool0
I0428 20:03:55.221738 30287 net.cpp:408] pool0 <- conv0
I0428 20:03:55.221745 30287 net.cpp:382] pool0 -> pool0
I0428 20:03:55.221801 30287 net.cpp:124] Setting up pool0
I0428 20:03:55.221807 30287 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:55.221810 30287 net.cpp:139] Memory required for data: 2044160
I0428 20:03:55.221814 30287 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:55.221827 30287 net.cpp:86] Creating Layer conv1
I0428 20:03:55.221830 30287 net.cpp:408] conv1 <- pool0
I0428 20:03:55.221837 30287 net.cpp:382] conv1 -> conv1
I0428 20:03:55.224131 30287 net.cpp:124] Setting up conv1
I0428 20:03:55.224148 30287 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:55.224153 30287 net.cpp:139] Memory required for data: 3682560
I0428 20:03:55.224164 30287 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:55.224172 30287 net.cpp:86] Creating Layer pool1
I0428 20:03:55.224177 30287 net.cpp:408] pool1 <- conv1
I0428 20:03:55.224184 30287 net.cpp:382] pool1 -> pool1
I0428 20:03:55.224226 30287 net.cpp:124] Setting up pool1
I0428 20:03:55.224232 30287 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:55.224236 30287 net.cpp:139] Memory required for data: 4092160
I0428 20:03:55.224239 30287 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:55.224247 30287 net.cpp:86] Creating Layer ip1
I0428 20:03:55.224251 30287 net.cpp:408] ip1 <- pool1
I0428 20:03:55.224257 30287 net.cpp:382] ip1 -> ip1
I0428 20:03:55.224649 30287 net.cpp:124] Setting up ip1
I0428 20:03:55.224658 30287 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:55.224661 30287 net.cpp:139] Memory required for data: 4098560
I0428 20:03:55.224670 30287 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:55.224676 30287 net.cpp:86] Creating Layer relu1
I0428 20:03:55.224680 30287 net.cpp:408] relu1 <- ip1
I0428 20:03:55.224685 30287 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:55.224891 30287 net.cpp:124] Setting up relu1
I0428 20:03:55.224903 30287 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:55.224907 30287 net.cpp:139] Memory required for data: 4104960
I0428 20:03:55.224911 30287 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:55.224918 30287 net.cpp:86] Creating Layer ip2
I0428 20:03:55.224922 30287 net.cpp:408] ip2 <- ip1
I0428 20:03:55.224928 30287 net.cpp:382] ip2 -> ip2
I0428 20:03:55.225045 30287 net.cpp:124] Setting up ip2
I0428 20:03:55.225054 30287 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:55.225057 30287 net.cpp:139] Memory required for data: 4111360
I0428 20:03:55.225064 30287 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:55.225070 30287 net.cpp:86] Creating Layer relu2
I0428 20:03:55.225075 30287 net.cpp:408] relu2 <- ip2
I0428 20:03:55.225080 30287 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:55.225929 30287 net.cpp:124] Setting up relu2
I0428 20:03:55.225944 30287 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:55.225947 30287 net.cpp:139] Memory required for data: 4117760
I0428 20:03:55.225951 30287 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:55.225960 30287 net.cpp:86] Creating Layer ip3
I0428 20:03:55.225963 30287 net.cpp:408] ip3 <- ip2
I0428 20:03:55.225970 30287 net.cpp:382] ip3 -> ip3
I0428 20:03:55.226086 30287 net.cpp:124] Setting up ip3
I0428 20:03:55.226094 30287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:55.226099 30287 net.cpp:139] Memory required for data: 4120320
I0428 20:03:55.226107 30287 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:55.226114 30287 net.cpp:86] Creating Layer relu3
I0428 20:03:55.226117 30287 net.cpp:408] relu3 <- ip3
I0428 20:03:55.226122 30287 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:55.226323 30287 net.cpp:124] Setting up relu3
I0428 20:03:55.226333 30287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:55.226337 30287 net.cpp:139] Memory required for data: 4122880
I0428 20:03:55.226341 30287 layer_factory.hpp:77] Creating layer loss
I0428 20:03:55.226348 30287 net.cpp:86] Creating Layer loss
I0428 20:03:55.226352 30287 net.cpp:408] loss <- ip3
I0428 20:03:55.226357 30287 net.cpp:408] loss <- label
I0428 20:03:55.226364 30287 net.cpp:382] loss -> loss
I0428 20:03:55.226387 30287 layer_factory.hpp:77] Creating layer loss
I0428 20:03:55.226662 30287 net.cpp:124] Setting up loss
I0428 20:03:55.226673 30287 net.cpp:131] Top shape: (1)
I0428 20:03:55.226677 30287 net.cpp:134]     with loss weight 1
I0428 20:03:55.226693 30287 net.cpp:139] Memory required for data: 4122884
I0428 20:03:55.226697 30287 net.cpp:200] loss needs backward computation.
I0428 20:03:55.226701 30287 net.cpp:200] relu3 needs backward computation.
I0428 20:03:55.226706 30287 net.cpp:200] ip3 needs backward computation.
I0428 20:03:55.226708 30287 net.cpp:200] relu2 needs backward computation.
I0428 20:03:55.226712 30287 net.cpp:200] ip2 needs backward computation.
I0428 20:03:55.226716 30287 net.cpp:200] relu1 needs backward computation.
I0428 20:03:55.226718 30287 net.cpp:200] ip1 needs backward computation.
I0428 20:03:55.226722 30287 net.cpp:200] pool1 needs backward computation.
I0428 20:03:55.226725 30287 net.cpp:200] conv1 needs backward computation.
I0428 20:03:55.226729 30287 net.cpp:200] pool0 needs backward computation.
I0428 20:03:55.226732 30287 net.cpp:200] conv0 needs backward computation.
I0428 20:03:55.226737 30287 net.cpp:202] mnist does not need backward computation.
I0428 20:03:55.226740 30287 net.cpp:244] This network produces output loss
I0428 20:03:55.226752 30287 net.cpp:257] Network initialization done.
I0428 20:03:55.227140 30287 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test961.prototxt
I0428 20:03:55.227171 30287 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:55.227282 30287 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:55.227375 30287 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:55.227428 30287 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:55.227443 30287 net.cpp:86] Creating Layer mnist
I0428 20:03:55.227449 30287 net.cpp:382] mnist -> data
I0428 20:03:55.227458 30287 net.cpp:382] mnist -> label
I0428 20:03:55.227558 30287 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:55.229753 30287 net.cpp:124] Setting up mnist
I0428 20:03:55.229768 30287 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:55.229774 30287 net.cpp:131] Top shape: 100 (100)
I0428 20:03:55.229779 30287 net.cpp:139] Memory required for data: 314000
I0428 20:03:55.229782 30287 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:55.229790 30287 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:55.229794 30287 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:55.229800 30287 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:55.229809 30287 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:55.229866 30287 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:55.229871 30287 net.cpp:131] Top shape: 100 (100)
I0428 20:03:55.229876 30287 net.cpp:131] Top shape: 100 (100)
I0428 20:03:55.229879 30287 net.cpp:139] Memory required for data: 314800
I0428 20:03:55.229883 30287 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:55.229892 30287 net.cpp:86] Creating Layer conv0
I0428 20:03:55.229897 30287 net.cpp:408] conv0 <- data
I0428 20:03:55.229902 30287 net.cpp:382] conv0 -> conv0
I0428 20:03:55.231812 30287 net.cpp:124] Setting up conv0
I0428 20:03:55.231829 30287 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:55.231833 30287 net.cpp:139] Memory required for data: 2618800
I0428 20:03:55.231844 30287 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:55.231851 30287 net.cpp:86] Creating Layer pool0
I0428 20:03:55.231855 30287 net.cpp:408] pool0 <- conv0
I0428 20:03:55.231861 30287 net.cpp:382] pool0 -> pool0
I0428 20:03:55.231904 30287 net.cpp:124] Setting up pool0
I0428 20:03:55.231909 30287 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:55.231914 30287 net.cpp:139] Memory required for data: 3194800
I0428 20:03:55.231916 30287 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:55.231926 30287 net.cpp:86] Creating Layer conv1
I0428 20:03:55.231930 30287 net.cpp:408] conv1 <- pool0
I0428 20:03:55.231936 30287 net.cpp:382] conv1 -> conv1
I0428 20:03:55.233978 30287 net.cpp:124] Setting up conv1
I0428 20:03:55.233994 30287 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:55.233999 30287 net.cpp:139] Memory required for data: 5754800
I0428 20:03:55.234016 30287 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:55.234026 30287 net.cpp:86] Creating Layer pool1
I0428 20:03:55.234030 30287 net.cpp:408] pool1 <- conv1
I0428 20:03:55.234036 30287 net.cpp:382] pool1 -> pool1
I0428 20:03:55.234081 30287 net.cpp:124] Setting up pool1
I0428 20:03:55.234087 30287 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:55.234091 30287 net.cpp:139] Memory required for data: 6394800
I0428 20:03:55.234096 30287 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:55.234102 30287 net.cpp:86] Creating Layer ip1
I0428 20:03:55.234105 30287 net.cpp:408] ip1 <- pool1
I0428 20:03:55.234119 30287 net.cpp:382] ip1 -> ip1
I0428 20:03:55.234513 30287 net.cpp:124] Setting up ip1
I0428 20:03:55.234524 30287 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:55.234539 30287 net.cpp:139] Memory required for data: 6404800
I0428 20:03:55.234549 30287 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:55.234555 30287 net.cpp:86] Creating Layer relu1
I0428 20:03:55.234566 30287 net.cpp:408] relu1 <- ip1
I0428 20:03:55.234575 30287 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:55.234792 30287 net.cpp:124] Setting up relu1
I0428 20:03:55.234802 30287 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:55.234805 30287 net.cpp:139] Memory required for data: 6414800
I0428 20:03:55.234809 30287 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:55.234822 30287 net.cpp:86] Creating Layer ip2
I0428 20:03:55.234825 30287 net.cpp:408] ip2 <- ip1
I0428 20:03:55.234833 30287 net.cpp:382] ip2 -> ip2
I0428 20:03:55.235026 30287 net.cpp:124] Setting up ip2
I0428 20:03:55.235035 30287 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:55.235050 30287 net.cpp:139] Memory required for data: 6424800
I0428 20:03:55.235057 30287 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:55.235065 30287 net.cpp:86] Creating Layer relu2
I0428 20:03:55.235069 30287 net.cpp:408] relu2 <- ip2
I0428 20:03:55.235074 30287 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:55.235262 30287 net.cpp:124] Setting up relu2
I0428 20:03:55.235272 30287 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:55.235285 30287 net.cpp:139] Memory required for data: 6434800
I0428 20:03:55.235288 30287 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:55.235296 30287 net.cpp:86] Creating Layer ip3
I0428 20:03:55.235299 30287 net.cpp:408] ip3 <- ip2
I0428 20:03:55.235306 30287 net.cpp:382] ip3 -> ip3
I0428 20:03:55.235430 30287 net.cpp:124] Setting up ip3
I0428 20:03:55.235440 30287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:55.235443 30287 net.cpp:139] Memory required for data: 6438800
I0428 20:03:55.235452 30287 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:55.235458 30287 net.cpp:86] Creating Layer relu3
I0428 20:03:55.235462 30287 net.cpp:408] relu3 <- ip3
I0428 20:03:55.235467 30287 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:55.236445 30287 net.cpp:124] Setting up relu3
I0428 20:03:55.236459 30287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:55.236464 30287 net.cpp:139] Memory required for data: 6442800
I0428 20:03:55.236467 30287 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:55.236474 30287 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:55.236477 30287 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:55.236484 30287 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:55.236492 30287 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:55.236536 30287 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:55.236542 30287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:55.236547 30287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:55.236551 30287 net.cpp:139] Memory required for data: 6450800
I0428 20:03:55.236553 30287 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:55.236560 30287 net.cpp:86] Creating Layer accuracy
I0428 20:03:55.236572 30287 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:55.236577 30287 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:55.236588 30287 net.cpp:382] accuracy -> accuracy
I0428 20:03:55.236596 30287 net.cpp:124] Setting up accuracy
I0428 20:03:55.236601 30287 net.cpp:131] Top shape: (1)
I0428 20:03:55.236604 30287 net.cpp:139] Memory required for data: 6450804
I0428 20:03:55.236608 30287 layer_factory.hpp:77] Creating layer loss
I0428 20:03:55.236621 30287 net.cpp:86] Creating Layer loss
I0428 20:03:55.236625 30287 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:55.236635 30287 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:55.236640 30287 net.cpp:382] loss -> loss
I0428 20:03:55.236647 30287 layer_factory.hpp:77] Creating layer loss
I0428 20:03:55.236944 30287 net.cpp:124] Setting up loss
I0428 20:03:55.236958 30287 net.cpp:131] Top shape: (1)
I0428 20:03:55.236961 30287 net.cpp:134]     with loss weight 1
I0428 20:03:55.236982 30287 net.cpp:139] Memory required for data: 6450808
I0428 20:03:55.236987 30287 net.cpp:200] loss needs backward computation.
I0428 20:03:55.236991 30287 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:55.236995 30287 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:55.236999 30287 net.cpp:200] relu3 needs backward computation.
I0428 20:03:55.237002 30287 net.cpp:200] ip3 needs backward computation.
I0428 20:03:55.237006 30287 net.cpp:200] relu2 needs backward computation.
I0428 20:03:55.237010 30287 net.cpp:200] ip2 needs backward computation.
I0428 20:03:55.237013 30287 net.cpp:200] relu1 needs backward computation.
I0428 20:03:55.237016 30287 net.cpp:200] ip1 needs backward computation.
I0428 20:03:55.237020 30287 net.cpp:200] pool1 needs backward computation.
I0428 20:03:55.237023 30287 net.cpp:200] conv1 needs backward computation.
I0428 20:03:55.237040 30287 net.cpp:200] pool0 needs backward computation.
I0428 20:03:55.237043 30287 net.cpp:200] conv0 needs backward computation.
I0428 20:03:55.237049 30287 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:55.237056 30287 net.cpp:202] mnist does not need backward computation.
I0428 20:03:55.237058 30287 net.cpp:244] This network produces output accuracy
I0428 20:03:55.237062 30287 net.cpp:244] This network produces output loss
I0428 20:03:55.237074 30287 net.cpp:257] Network initialization done.
I0428 20:03:55.237136 30287 solver.cpp:56] Solver scaffolding done.
I0428 20:03:55.237552 30287 caffe.cpp:248] Starting Optimization
I0428 20:03:55.237560 30287 solver.cpp:273] Solving LeNet
I0428 20:03:55.237565 30287 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:55.238466 30287 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:55.244192 30287 blocking_queue.cpp:49] Waiting for data
I0428 20:03:55.310703 30295 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:55.311393 30287 solver.cpp:398]     Test net output #0: accuracy = 0.0939
I0428 20:03:55.311416 30287 solver.cpp:398]     Test net output #1: loss = 2.30717 (* 1 = 2.30717 loss)
I0428 20:03:55.315590 30287 solver.cpp:219] Iteration 0 (-1.06078e-42 iter/s, 0.0779848s/100 iters), loss = 2.30017
I0428 20:03:55.315623 30287 solver.cpp:238]     Train net output #0: loss = 2.30017 (* 1 = 2.30017 loss)
I0428 20:03:55.315636 30287 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:55.484771 30287 solver.cpp:219] Iteration 100 (591.261 iter/s, 0.16913s/100 iters), loss = 0.97809
I0428 20:03:55.484803 30287 solver.cpp:238]     Train net output #0: loss = 0.97809 (* 1 = 0.97809 loss)
I0428 20:03:55.484818 30287 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:55.647480 30287 solver.cpp:219] Iteration 200 (614.763 iter/s, 0.162664s/100 iters), loss = 0.795544
I0428 20:03:55.647516 30287 solver.cpp:238]     Train net output #0: loss = 0.795544 (* 1 = 0.795544 loss)
I0428 20:03:55.647524 30287 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:55.827453 30287 solver.cpp:219] Iteration 300 (555.794 iter/s, 0.179923s/100 iters), loss = 0.550832
I0428 20:03:55.827491 30287 solver.cpp:238]     Train net output #0: loss = 0.550832 (* 1 = 0.550832 loss)
I0428 20:03:55.827502 30287 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:56.011767 30287 solver.cpp:219] Iteration 400 (542.707 iter/s, 0.184262s/100 iters), loss = 0.689093
I0428 20:03:56.011809 30287 solver.cpp:238]     Train net output #0: loss = 0.689093 (* 1 = 0.689093 loss)
I0428 20:03:56.011821 30287 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:56.194440 30287 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:56.270335 30295 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:56.271052 30287 solver.cpp:398]     Test net output #0: accuracy = 0.795
I0428 20:03:56.271083 30287 solver.cpp:398]     Test net output #1: loss = 0.643991 (* 1 = 0.643991 loss)
I0428 20:03:56.272697 30287 solver.cpp:219] Iteration 500 (383.331 iter/s, 0.260871s/100 iters), loss = 0.610883
I0428 20:03:56.272759 30287 solver.cpp:238]     Train net output #0: loss = 0.610883 (* 1 = 0.610883 loss)
I0428 20:03:56.272779 30287 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:56.433421 30287 solver.cpp:219] Iteration 600 (622.47 iter/s, 0.16065s/100 iters), loss = 0.659439
I0428 20:03:56.433454 30287 solver.cpp:238]     Train net output #0: loss = 0.659439 (* 1 = 0.659439 loss)
I0428 20:03:56.433462 30287 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:56.606595 30287 solver.cpp:219] Iteration 700 (577.616 iter/s, 0.173125s/100 iters), loss = 0.623169
I0428 20:03:56.606631 30287 solver.cpp:238]     Train net output #0: loss = 0.623169 (* 1 = 0.623169 loss)
I0428 20:03:56.606640 30287 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:56.788305 30287 solver.cpp:219] Iteration 800 (550.48 iter/s, 0.18166s/100 iters), loss = 0.618032
I0428 20:03:56.788345 30287 solver.cpp:238]     Train net output #0: loss = 0.618032 (* 1 = 0.618032 loss)
I0428 20:03:56.788355 30287 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:56.970293 30287 solver.cpp:219] Iteration 900 (549.652 iter/s, 0.181933s/100 iters), loss = 0.683839
I0428 20:03:56.970332 30287 solver.cpp:238]     Train net output #0: loss = 0.683839 (* 1 = 0.683839 loss)
I0428 20:03:56.970342 30287 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:57.032457 30294 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:57.157234 30287 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:57.160115 30287 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:57.161635 30287 solver.cpp:311] Iteration 1000, loss = 0.384371
I0428 20:03:57.161679 30287 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:57.237737 30295 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:57.238425 30287 solver.cpp:398]     Test net output #0: accuracy = 0.8597
I0428 20:03:57.238448 30287 solver.cpp:398]     Test net output #1: loss = 0.353155 (* 1 = 0.353155 loss)
I0428 20:03:57.238454 30287 solver.cpp:316] Optimization Done.
I0428 20:03:57.238458 30287 caffe.cpp:259] Optimization Done.
