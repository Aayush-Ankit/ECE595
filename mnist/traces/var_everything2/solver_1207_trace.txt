I0428 20:13:50.490427 32552 caffe.cpp:218] Using GPUs 0
I0428 20:13:50.526875 32552 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:51.036816 32552 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1207.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:51.036962 32552 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1207.prototxt
I0428 20:13:51.037384 32552 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:51.037403 32552 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:51.037509 32552 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:51.037591 32552 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:51.037690 32552 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:51.037714 32552 net.cpp:86] Creating Layer mnist
I0428 20:13:51.037722 32552 net.cpp:382] mnist -> data
I0428 20:13:51.037746 32552 net.cpp:382] mnist -> label
I0428 20:13:51.038861 32552 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:51.041322 32552 net.cpp:124] Setting up mnist
I0428 20:13:51.041352 32552 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:51.041359 32552 net.cpp:131] Top shape: 64 (64)
I0428 20:13:51.041363 32552 net.cpp:139] Memory required for data: 200960
I0428 20:13:51.041370 32552 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:51.041388 32552 net.cpp:86] Creating Layer conv0
I0428 20:13:51.041419 32552 net.cpp:408] conv0 <- data
I0428 20:13:51.041431 32552 net.cpp:382] conv0 -> conv0
I0428 20:13:51.305920 32552 net.cpp:124] Setting up conv0
I0428 20:13:51.305977 32552 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:51.305981 32552 net.cpp:139] Memory required for data: 3887360
I0428 20:13:51.305996 32552 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:51.306010 32552 net.cpp:86] Creating Layer pool0
I0428 20:13:51.306013 32552 net.cpp:408] pool0 <- conv0
I0428 20:13:51.306018 32552 net.cpp:382] pool0 -> pool0
I0428 20:13:51.306077 32552 net.cpp:124] Setting up pool0
I0428 20:13:51.306082 32552 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:51.306085 32552 net.cpp:139] Memory required for data: 4808960
I0428 20:13:51.306088 32552 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:51.306098 32552 net.cpp:86] Creating Layer conv1
I0428 20:13:51.306102 32552 net.cpp:408] conv1 <- pool0
I0428 20:13:51.306107 32552 net.cpp:382] conv1 -> conv1
I0428 20:13:51.308315 32552 net.cpp:124] Setting up conv1
I0428 20:13:51.308327 32552 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:51.308331 32552 net.cpp:139] Memory required for data: 6447360
I0428 20:13:51.308339 32552 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:51.308362 32552 net.cpp:86] Creating Layer pool1
I0428 20:13:51.308365 32552 net.cpp:408] pool1 <- conv1
I0428 20:13:51.308369 32552 net.cpp:382] pool1 -> pool1
I0428 20:13:51.308405 32552 net.cpp:124] Setting up pool1
I0428 20:13:51.308410 32552 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:51.308413 32552 net.cpp:139] Memory required for data: 6856960
I0428 20:13:51.308416 32552 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:51.308423 32552 net.cpp:86] Creating Layer ip1
I0428 20:13:51.308426 32552 net.cpp:408] ip1 <- pool1
I0428 20:13:51.308430 32552 net.cpp:382] ip1 -> ip1
I0428 20:13:51.309800 32552 net.cpp:124] Setting up ip1
I0428 20:13:51.309813 32552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:51.309833 32552 net.cpp:139] Memory required for data: 6869760
I0428 20:13:51.309840 32552 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:51.309846 32552 net.cpp:86] Creating Layer relu1
I0428 20:13:51.309849 32552 net.cpp:408] relu1 <- ip1
I0428 20:13:51.309854 32552 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:51.310005 32552 net.cpp:124] Setting up relu1
I0428 20:13:51.310015 32552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:51.310032 32552 net.cpp:139] Memory required for data: 6882560
I0428 20:13:51.310035 32552 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:51.310042 32552 net.cpp:86] Creating Layer ip2
I0428 20:13:51.310045 32552 net.cpp:408] ip2 <- ip1
I0428 20:13:51.310050 32552 net.cpp:382] ip2 -> ip2
I0428 20:13:51.311036 32552 net.cpp:124] Setting up ip2
I0428 20:13:51.311048 32552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:51.311067 32552 net.cpp:139] Memory required for data: 6895360
I0428 20:13:51.311074 32552 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:51.311080 32552 net.cpp:86] Creating Layer relu2
I0428 20:13:51.311085 32552 net.cpp:408] relu2 <- ip2
I0428 20:13:51.311090 32552 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:51.311872 32552 net.cpp:124] Setting up relu2
I0428 20:13:51.311883 32552 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:51.311887 32552 net.cpp:139] Memory required for data: 6908160
I0428 20:13:51.311890 32552 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:51.311897 32552 net.cpp:86] Creating Layer ip3
I0428 20:13:51.311902 32552 net.cpp:408] ip3 <- ip2
I0428 20:13:51.311906 32552 net.cpp:382] ip3 -> ip3
I0428 20:13:51.311996 32552 net.cpp:124] Setting up ip3
I0428 20:13:51.312003 32552 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:51.312006 32552 net.cpp:139] Memory required for data: 6910720
I0428 20:13:51.312013 32552 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:51.312018 32552 net.cpp:86] Creating Layer relu3
I0428 20:13:51.312021 32552 net.cpp:408] relu3 <- ip3
I0428 20:13:51.312024 32552 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:51.312178 32552 net.cpp:124] Setting up relu3
I0428 20:13:51.312186 32552 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:51.312191 32552 net.cpp:139] Memory required for data: 6913280
I0428 20:13:51.312193 32552 layer_factory.hpp:77] Creating layer loss
I0428 20:13:51.312199 32552 net.cpp:86] Creating Layer loss
I0428 20:13:51.312202 32552 net.cpp:408] loss <- ip3
I0428 20:13:51.312221 32552 net.cpp:408] loss <- label
I0428 20:13:51.312225 32552 net.cpp:382] loss -> loss
I0428 20:13:51.312242 32552 layer_factory.hpp:77] Creating layer loss
I0428 20:13:51.312486 32552 net.cpp:124] Setting up loss
I0428 20:13:51.312495 32552 net.cpp:131] Top shape: (1)
I0428 20:13:51.312499 32552 net.cpp:134]     with loss weight 1
I0428 20:13:51.312513 32552 net.cpp:139] Memory required for data: 6913284
I0428 20:13:51.312516 32552 net.cpp:200] loss needs backward computation.
I0428 20:13:51.312520 32552 net.cpp:200] relu3 needs backward computation.
I0428 20:13:51.312523 32552 net.cpp:200] ip3 needs backward computation.
I0428 20:13:51.312525 32552 net.cpp:200] relu2 needs backward computation.
I0428 20:13:51.312528 32552 net.cpp:200] ip2 needs backward computation.
I0428 20:13:51.312530 32552 net.cpp:200] relu1 needs backward computation.
I0428 20:13:51.312533 32552 net.cpp:200] ip1 needs backward computation.
I0428 20:13:51.312536 32552 net.cpp:200] pool1 needs backward computation.
I0428 20:13:51.312539 32552 net.cpp:200] conv1 needs backward computation.
I0428 20:13:51.312541 32552 net.cpp:200] pool0 needs backward computation.
I0428 20:13:51.312544 32552 net.cpp:200] conv0 needs backward computation.
I0428 20:13:51.312547 32552 net.cpp:202] mnist does not need backward computation.
I0428 20:13:51.312551 32552 net.cpp:244] This network produces output loss
I0428 20:13:51.312559 32552 net.cpp:257] Network initialization done.
I0428 20:13:51.312950 32552 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1207.prototxt
I0428 20:13:51.312993 32552 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:51.313084 32552 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:51.313169 32552 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:51.313241 32552 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:51.313252 32552 net.cpp:86] Creating Layer mnist
I0428 20:13:51.313257 32552 net.cpp:382] mnist -> data
I0428 20:13:51.313266 32552 net.cpp:382] mnist -> label
I0428 20:13:51.313379 32552 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:51.314648 32552 net.cpp:124] Setting up mnist
I0428 20:13:51.314677 32552 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:51.314682 32552 net.cpp:131] Top shape: 100 (100)
I0428 20:13:51.314685 32552 net.cpp:139] Memory required for data: 314000
I0428 20:13:51.314688 32552 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:51.314716 32552 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:51.314720 32552 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:51.314738 32552 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:51.314746 32552 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:51.314787 32552 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:51.314795 32552 net.cpp:131] Top shape: 100 (100)
I0428 20:13:51.314798 32552 net.cpp:131] Top shape: 100 (100)
I0428 20:13:51.314800 32552 net.cpp:139] Memory required for data: 314800
I0428 20:13:51.314803 32552 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:51.314813 32552 net.cpp:86] Creating Layer conv0
I0428 20:13:51.314816 32552 net.cpp:408] conv0 <- data
I0428 20:13:51.314821 32552 net.cpp:382] conv0 -> conv0
I0428 20:13:51.316419 32552 net.cpp:124] Setting up conv0
I0428 20:13:51.316447 32552 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:51.316464 32552 net.cpp:139] Memory required for data: 6074800
I0428 20:13:51.316474 32552 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:51.316480 32552 net.cpp:86] Creating Layer pool0
I0428 20:13:51.316483 32552 net.cpp:408] pool0 <- conv0
I0428 20:13:51.316489 32552 net.cpp:382] pool0 -> pool0
I0428 20:13:51.316539 32552 net.cpp:124] Setting up pool0
I0428 20:13:51.316543 32552 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:51.316546 32552 net.cpp:139] Memory required for data: 7514800
I0428 20:13:51.316548 32552 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:51.316557 32552 net.cpp:86] Creating Layer conv1
I0428 20:13:51.316560 32552 net.cpp:408] conv1 <- pool0
I0428 20:13:51.316566 32552 net.cpp:382] conv1 -> conv1
I0428 20:13:51.318549 32552 net.cpp:124] Setting up conv1
I0428 20:13:51.318564 32552 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:51.318568 32552 net.cpp:139] Memory required for data: 10074800
I0428 20:13:51.318578 32552 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:51.318585 32552 net.cpp:86] Creating Layer pool1
I0428 20:13:51.318589 32552 net.cpp:408] pool1 <- conv1
I0428 20:13:51.318595 32552 net.cpp:382] pool1 -> pool1
I0428 20:13:51.318632 32552 net.cpp:124] Setting up pool1
I0428 20:13:51.318639 32552 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:51.318641 32552 net.cpp:139] Memory required for data: 10714800
I0428 20:13:51.318645 32552 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:51.318652 32552 net.cpp:86] Creating Layer ip1
I0428 20:13:51.318655 32552 net.cpp:408] ip1 <- pool1
I0428 20:13:51.318661 32552 net.cpp:382] ip1 -> ip1
I0428 20:13:51.319269 32552 net.cpp:124] Setting up ip1
I0428 20:13:51.319278 32552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:51.319290 32552 net.cpp:139] Memory required for data: 10734800
I0428 20:13:51.319298 32552 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:51.319303 32552 net.cpp:86] Creating Layer relu1
I0428 20:13:51.319306 32552 net.cpp:408] relu1 <- ip1
I0428 20:13:51.319311 32552 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:51.319607 32552 net.cpp:124] Setting up relu1
I0428 20:13:51.319617 32552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:51.319620 32552 net.cpp:139] Memory required for data: 10754800
I0428 20:13:51.319623 32552 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:51.319633 32552 net.cpp:86] Creating Layer ip2
I0428 20:13:51.319638 32552 net.cpp:408] ip2 <- ip1
I0428 20:13:51.319643 32552 net.cpp:382] ip2 -> ip2
I0428 20:13:51.319766 32552 net.cpp:124] Setting up ip2
I0428 20:13:51.319774 32552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:51.319777 32552 net.cpp:139] Memory required for data: 10774800
I0428 20:13:51.319783 32552 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:51.319788 32552 net.cpp:86] Creating Layer relu2
I0428 20:13:51.319792 32552 net.cpp:408] relu2 <- ip2
I0428 20:13:51.319797 32552 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:51.319983 32552 net.cpp:124] Setting up relu2
I0428 20:13:51.319990 32552 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:51.319993 32552 net.cpp:139] Memory required for data: 10794800
I0428 20:13:51.319996 32552 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:51.320003 32552 net.cpp:86] Creating Layer ip3
I0428 20:13:51.320006 32552 net.cpp:408] ip3 <- ip2
I0428 20:13:51.320011 32552 net.cpp:382] ip3 -> ip3
I0428 20:13:51.320125 32552 net.cpp:124] Setting up ip3
I0428 20:13:51.320133 32552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:51.320137 32552 net.cpp:139] Memory required for data: 10798800
I0428 20:13:51.320143 32552 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:51.320149 32552 net.cpp:86] Creating Layer relu3
I0428 20:13:51.320158 32552 net.cpp:408] relu3 <- ip3
I0428 20:13:51.320163 32552 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:51.321048 32552 net.cpp:124] Setting up relu3
I0428 20:13:51.321076 32552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:51.321080 32552 net.cpp:139] Memory required for data: 10802800
I0428 20:13:51.321084 32552 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:51.321089 32552 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:51.321094 32552 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:51.321099 32552 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:51.321105 32552 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:51.321148 32552 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:51.321154 32552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:51.321158 32552 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:51.321161 32552 net.cpp:139] Memory required for data: 10810800
I0428 20:13:51.321164 32552 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:51.321183 32552 net.cpp:86] Creating Layer accuracy
I0428 20:13:51.321187 32552 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:51.321190 32552 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:51.321210 32552 net.cpp:382] accuracy -> accuracy
I0428 20:13:51.321216 32552 net.cpp:124] Setting up accuracy
I0428 20:13:51.321220 32552 net.cpp:131] Top shape: (1)
I0428 20:13:51.321224 32552 net.cpp:139] Memory required for data: 10810804
I0428 20:13:51.321226 32552 layer_factory.hpp:77] Creating layer loss
I0428 20:13:51.321233 32552 net.cpp:86] Creating Layer loss
I0428 20:13:51.321235 32552 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:51.321238 32552 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:51.321243 32552 net.cpp:382] loss -> loss
I0428 20:13:51.321249 32552 layer_factory.hpp:77] Creating layer loss
I0428 20:13:51.321475 32552 net.cpp:124] Setting up loss
I0428 20:13:51.321485 32552 net.cpp:131] Top shape: (1)
I0428 20:13:51.321488 32552 net.cpp:134]     with loss weight 1
I0428 20:13:51.321506 32552 net.cpp:139] Memory required for data: 10810808
I0428 20:13:51.321509 32552 net.cpp:200] loss needs backward computation.
I0428 20:13:51.321512 32552 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:51.321516 32552 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:51.321527 32552 net.cpp:200] relu3 needs backward computation.
I0428 20:13:51.321529 32552 net.cpp:200] ip3 needs backward computation.
I0428 20:13:51.321532 32552 net.cpp:200] relu2 needs backward computation.
I0428 20:13:51.321534 32552 net.cpp:200] ip2 needs backward computation.
I0428 20:13:51.321537 32552 net.cpp:200] relu1 needs backward computation.
I0428 20:13:51.321539 32552 net.cpp:200] ip1 needs backward computation.
I0428 20:13:51.321542 32552 net.cpp:200] pool1 needs backward computation.
I0428 20:13:51.321545 32552 net.cpp:200] conv1 needs backward computation.
I0428 20:13:51.321548 32552 net.cpp:200] pool0 needs backward computation.
I0428 20:13:51.321550 32552 net.cpp:200] conv0 needs backward computation.
I0428 20:13:51.321554 32552 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:51.321558 32552 net.cpp:202] mnist does not need backward computation.
I0428 20:13:51.321565 32552 net.cpp:244] This network produces output accuracy
I0428 20:13:51.321568 32552 net.cpp:244] This network produces output loss
I0428 20:13:51.321579 32552 net.cpp:257] Network initialization done.
I0428 20:13:51.321619 32552 solver.cpp:56] Solver scaffolding done.
I0428 20:13:51.321921 32552 caffe.cpp:248] Starting Optimization
I0428 20:13:51.321943 32552 solver.cpp:273] Solving LeNet
I0428 20:13:51.321948 32552 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:51.322841 32552 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:51.330143 32552 blocking_queue.cpp:49] Waiting for data
I0428 20:13:51.400184 32561 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:51.401098 32552 solver.cpp:398]     Test net output #0: accuracy = 0.0768
I0428 20:13:51.401131 32552 solver.cpp:398]     Test net output #1: loss = 2.30947 (* 1 = 2.30947 loss)
I0428 20:13:51.406071 32552 solver.cpp:219] Iteration 0 (0 iter/s, 0.0840714s/100 iters), loss = 2.31307
I0428 20:13:51.406111 32552 solver.cpp:238]     Train net output #0: loss = 2.31307 (* 1 = 2.31307 loss)
I0428 20:13:51.406121 32552 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:51.570909 32552 solver.cpp:219] Iteration 100 (606.873 iter/s, 0.164779s/100 iters), loss = 1.09046
I0428 20:13:51.570945 32552 solver.cpp:238]     Train net output #0: loss = 1.09046 (* 1 = 1.09046 loss)
I0428 20:13:51.570953 32552 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:51.730682 32552 solver.cpp:219] Iteration 200 (626.07 iter/s, 0.159727s/100 iters), loss = 0.924894
I0428 20:13:51.730723 32552 solver.cpp:238]     Train net output #0: loss = 0.924894 (* 1 = 0.924894 loss)
I0428 20:13:51.730729 32552 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:51.893779 32552 solver.cpp:219] Iteration 300 (613.276 iter/s, 0.163059s/100 iters), loss = 0.265644
I0428 20:13:51.893805 32552 solver.cpp:238]     Train net output #0: loss = 0.265644 (* 1 = 0.265644 loss)
I0428 20:13:51.893811 32552 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:52.053602 32552 solver.cpp:219] Iteration 400 (625.897 iter/s, 0.159771s/100 iters), loss = 0.141719
I0428 20:13:52.053642 32552 solver.cpp:238]     Train net output #0: loss = 0.141719 (* 1 = 0.141719 loss)
I0428 20:13:52.053648 32552 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:52.214479 32552 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:52.280877 32561 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:52.283268 32552 solver.cpp:398]     Test net output #0: accuracy = 0.9622
I0428 20:13:52.283288 32552 solver.cpp:398]     Test net output #1: loss = 0.127399 (* 1 = 0.127399 loss)
I0428 20:13:52.284762 32552 solver.cpp:219] Iteration 500 (432.676 iter/s, 0.23112s/100 iters), loss = 0.0589243
I0428 20:13:52.284845 32552 solver.cpp:238]     Train net output #0: loss = 0.0589243 (* 1 = 0.0589243 loss)
I0428 20:13:52.284853 32552 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:52.450911 32552 solver.cpp:219] Iteration 600 (602.099 iter/s, 0.166086s/100 iters), loss = 0.0822356
I0428 20:13:52.450953 32552 solver.cpp:238]     Train net output #0: loss = 0.0822356 (* 1 = 0.0822356 loss)
I0428 20:13:52.450958 32552 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:52.619503 32552 solver.cpp:219] Iteration 700 (593.284 iter/s, 0.168553s/100 iters), loss = 0.080496
I0428 20:13:52.619544 32552 solver.cpp:238]     Train net output #0: loss = 0.080496 (* 1 = 0.080496 loss)
I0428 20:13:52.619551 32552 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:52.787053 32552 solver.cpp:219] Iteration 800 (596.976 iter/s, 0.167511s/100 iters), loss = 0.286277
I0428 20:13:52.787108 32552 solver.cpp:238]     Train net output #0: loss = 0.286277 (* 1 = 0.286277 loss)
I0428 20:13:52.787116 32552 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:52.953640 32552 solver.cpp:219] Iteration 900 (600.48 iter/s, 0.166533s/100 iters), loss = 0.110367
I0428 20:13:52.953681 32552 solver.cpp:238]     Train net output #0: loss = 0.110367 (* 1 = 0.110367 loss)
I0428 20:13:52.953688 32552 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:53.010088 32560 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:53.123970 32552 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:53.127758 32552 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:53.129600 32552 solver.cpp:311] Iteration 1000, loss = 0.105472
I0428 20:13:53.129617 32552 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:53.197641 32561 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:53.200009 32552 solver.cpp:398]     Test net output #0: accuracy = 0.979
I0428 20:13:53.200029 32552 solver.cpp:398]     Test net output #1: loss = 0.067032 (* 1 = 0.067032 loss)
I0428 20:13:53.200034 32552 solver.cpp:316] Optimization Done.
I0428 20:13:53.200037 32552 caffe.cpp:259] Optimization Done.
