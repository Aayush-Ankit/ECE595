I0428 19:36:38.631201 23712 caffe.cpp:218] Using GPUs 0
I0428 19:36:38.666254 23712 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:36:39.174321 23712 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test246.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:36:39.174460 23712 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test246.prototxt
I0428 19:36:39.174820 23712 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:36:39.174836 23712 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:36:39.174921 23712 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:39.174988 23712 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:39.175091 23712 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:36:39.175117 23712 net.cpp:86] Creating Layer mnist
I0428 19:36:39.175127 23712 net.cpp:382] mnist -> data
I0428 19:36:39.175148 23712 net.cpp:382] mnist -> label
I0428 19:36:39.176236 23712 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:36:39.178903 23712 net.cpp:124] Setting up mnist
I0428 19:36:39.178923 23712 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:36:39.178930 23712 net.cpp:131] Top shape: 64 (64)
I0428 19:36:39.178933 23712 net.cpp:139] Memory required for data: 200960
I0428 19:36:39.178941 23712 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:39.178957 23712 net.cpp:86] Creating Layer conv0
I0428 19:36:39.178962 23712 net.cpp:408] conv0 <- data
I0428 19:36:39.178973 23712 net.cpp:382] conv0 -> conv0
I0428 19:36:39.438400 23712 net.cpp:124] Setting up conv0
I0428 19:36:39.438441 23712 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:36:39.438446 23712 net.cpp:139] Memory required for data: 14946560
I0428 19:36:39.438459 23712 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:39.438472 23712 net.cpp:86] Creating Layer pool0
I0428 19:36:39.438509 23712 net.cpp:408] pool0 <- conv0
I0428 19:36:39.438515 23712 net.cpp:382] pool0 -> pool0
I0428 19:36:39.438563 23712 net.cpp:124] Setting up pool0
I0428 19:36:39.438570 23712 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:36:39.438573 23712 net.cpp:139] Memory required for data: 18632960
I0428 19:36:39.438576 23712 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:39.438583 23712 net.cpp:86] Creating Layer ip1
I0428 19:36:39.438586 23712 net.cpp:408] ip1 <- pool0
I0428 19:36:39.438592 23712 net.cpp:382] ip1 -> ip1
I0428 19:36:39.440431 23712 net.cpp:124] Setting up ip1
I0428 19:36:39.440461 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.440464 23712 net.cpp:139] Memory required for data: 18635520
I0428 19:36:39.440474 23712 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:39.440481 23712 net.cpp:86] Creating Layer relu1
I0428 19:36:39.440485 23712 net.cpp:408] relu1 <- ip1
I0428 19:36:39.440491 23712 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:39.440683 23712 net.cpp:124] Setting up relu1
I0428 19:36:39.440693 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.440711 23712 net.cpp:139] Memory required for data: 18638080
I0428 19:36:39.440714 23712 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:39.440724 23712 net.cpp:86] Creating Layer ip2
I0428 19:36:39.440728 23712 net.cpp:408] ip2 <- ip1
I0428 19:36:39.440734 23712 net.cpp:382] ip2 -> ip2
I0428 19:36:39.440855 23712 net.cpp:124] Setting up ip2
I0428 19:36:39.440865 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.440867 23712 net.cpp:139] Memory required for data: 18640640
I0428 19:36:39.440876 23712 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:39.440881 23712 net.cpp:86] Creating Layer relu2
I0428 19:36:39.440884 23712 net.cpp:408] relu2 <- ip2
I0428 19:36:39.440888 23712 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:39.441660 23712 net.cpp:124] Setting up relu2
I0428 19:36:39.441686 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.441707 23712 net.cpp:139] Memory required for data: 18643200
I0428 19:36:39.441710 23712 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:39.441718 23712 net.cpp:86] Creating Layer ip3
I0428 19:36:39.441722 23712 net.cpp:408] ip3 <- ip2
I0428 19:36:39.441728 23712 net.cpp:382] ip3 -> ip3
I0428 19:36:39.441828 23712 net.cpp:124] Setting up ip3
I0428 19:36:39.441836 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.441839 23712 net.cpp:139] Memory required for data: 18645760
I0428 19:36:39.441845 23712 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:39.441853 23712 net.cpp:86] Creating Layer relu3
I0428 19:36:39.441855 23712 net.cpp:408] relu3 <- ip3
I0428 19:36:39.441859 23712 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:39.442018 23712 net.cpp:124] Setting up relu3
I0428 19:36:39.442026 23712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:39.442030 23712 net.cpp:139] Memory required for data: 18648320
I0428 19:36:39.442034 23712 layer_factory.hpp:77] Creating layer loss
I0428 19:36:39.442039 23712 net.cpp:86] Creating Layer loss
I0428 19:36:39.442041 23712 net.cpp:408] loss <- ip3
I0428 19:36:39.442045 23712 net.cpp:408] loss <- label
I0428 19:36:39.442051 23712 net.cpp:382] loss -> loss
I0428 19:36:39.442066 23712 layer_factory.hpp:77] Creating layer loss
I0428 19:36:39.442309 23712 net.cpp:124] Setting up loss
I0428 19:36:39.442319 23712 net.cpp:131] Top shape: (1)
I0428 19:36:39.442322 23712 net.cpp:134]     with loss weight 1
I0428 19:36:39.442335 23712 net.cpp:139] Memory required for data: 18648324
I0428 19:36:39.442339 23712 net.cpp:200] loss needs backward computation.
I0428 19:36:39.442342 23712 net.cpp:200] relu3 needs backward computation.
I0428 19:36:39.442347 23712 net.cpp:200] ip3 needs backward computation.
I0428 19:36:39.442349 23712 net.cpp:200] relu2 needs backward computation.
I0428 19:36:39.442353 23712 net.cpp:200] ip2 needs backward computation.
I0428 19:36:39.442355 23712 net.cpp:200] relu1 needs backward computation.
I0428 19:36:39.442358 23712 net.cpp:200] ip1 needs backward computation.
I0428 19:36:39.442385 23712 net.cpp:200] pool0 needs backward computation.
I0428 19:36:39.442389 23712 net.cpp:200] conv0 needs backward computation.
I0428 19:36:39.442392 23712 net.cpp:202] mnist does not need backward computation.
I0428 19:36:39.442394 23712 net.cpp:244] This network produces output loss
I0428 19:36:39.442404 23712 net.cpp:257] Network initialization done.
I0428 19:36:39.442762 23712 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test246.prototxt
I0428 19:36:39.442833 23712 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:36:39.442921 23712 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:39.442987 23712 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:39.443032 23712 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:36:39.443044 23712 net.cpp:86] Creating Layer mnist
I0428 19:36:39.443048 23712 net.cpp:382] mnist -> data
I0428 19:36:39.443055 23712 net.cpp:382] mnist -> label
I0428 19:36:39.443138 23712 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:36:39.444310 23712 net.cpp:124] Setting up mnist
I0428 19:36:39.444351 23712 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:36:39.444356 23712 net.cpp:131] Top shape: 100 (100)
I0428 19:36:39.444360 23712 net.cpp:139] Memory required for data: 314000
I0428 19:36:39.444363 23712 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:36:39.444384 23712 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:36:39.444388 23712 net.cpp:408] label_mnist_1_split <- label
I0428 19:36:39.444394 23712 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:36:39.444401 23712 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:36:39.444509 23712 net.cpp:124] Setting up label_mnist_1_split
I0428 19:36:39.444517 23712 net.cpp:131] Top shape: 100 (100)
I0428 19:36:39.444521 23712 net.cpp:131] Top shape: 100 (100)
I0428 19:36:39.444525 23712 net.cpp:139] Memory required for data: 314800
I0428 19:36:39.444536 23712 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:39.444546 23712 net.cpp:86] Creating Layer conv0
I0428 19:36:39.444550 23712 net.cpp:408] conv0 <- data
I0428 19:36:39.444555 23712 net.cpp:382] conv0 -> conv0
I0428 19:36:39.446370 23712 net.cpp:124] Setting up conv0
I0428 19:36:39.446399 23712 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:36:39.446403 23712 net.cpp:139] Memory required for data: 23354800
I0428 19:36:39.446413 23712 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:39.446420 23712 net.cpp:86] Creating Layer pool0
I0428 19:36:39.446424 23712 net.cpp:408] pool0 <- conv0
I0428 19:36:39.446427 23712 net.cpp:382] pool0 -> pool0
I0428 19:36:39.446480 23712 net.cpp:124] Setting up pool0
I0428 19:36:39.446485 23712 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:36:39.446490 23712 net.cpp:139] Memory required for data: 29114800
I0428 19:36:39.446491 23712 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:39.446498 23712 net.cpp:86] Creating Layer ip1
I0428 19:36:39.446501 23712 net.cpp:408] ip1 <- pool0
I0428 19:36:39.446506 23712 net.cpp:382] ip1 -> ip1
I0428 19:36:39.448453 23712 net.cpp:124] Setting up ip1
I0428 19:36:39.448465 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.448483 23712 net.cpp:139] Memory required for data: 29118800
I0428 19:36:39.448493 23712 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:39.448498 23712 net.cpp:86] Creating Layer relu1
I0428 19:36:39.448500 23712 net.cpp:408] relu1 <- ip1
I0428 19:36:39.448506 23712 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:39.448801 23712 net.cpp:124] Setting up relu1
I0428 19:36:39.448818 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.448822 23712 net.cpp:139] Memory required for data: 29122800
I0428 19:36:39.448842 23712 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:39.448848 23712 net.cpp:86] Creating Layer ip2
I0428 19:36:39.448853 23712 net.cpp:408] ip2 <- ip1
I0428 19:36:39.448858 23712 net.cpp:382] ip2 -> ip2
I0428 19:36:39.448964 23712 net.cpp:124] Setting up ip2
I0428 19:36:39.448971 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.448976 23712 net.cpp:139] Memory required for data: 29126800
I0428 19:36:39.448983 23712 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:39.448992 23712 net.cpp:86] Creating Layer relu2
I0428 19:36:39.448994 23712 net.cpp:408] relu2 <- ip2
I0428 19:36:39.448999 23712 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:39.449818 23712 net.cpp:124] Setting up relu2
I0428 19:36:39.449829 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.449848 23712 net.cpp:139] Memory required for data: 29130800
I0428 19:36:39.449851 23712 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:39.449877 23712 net.cpp:86] Creating Layer ip3
I0428 19:36:39.449882 23712 net.cpp:408] ip3 <- ip2
I0428 19:36:39.449887 23712 net.cpp:382] ip3 -> ip3
I0428 19:36:39.450053 23712 net.cpp:124] Setting up ip3
I0428 19:36:39.450062 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.450073 23712 net.cpp:139] Memory required for data: 29134800
I0428 19:36:39.450079 23712 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:39.450084 23712 net.cpp:86] Creating Layer relu3
I0428 19:36:39.450088 23712 net.cpp:408] relu3 <- ip3
I0428 19:36:39.450093 23712 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:39.450280 23712 net.cpp:124] Setting up relu3
I0428 19:36:39.450289 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.450292 23712 net.cpp:139] Memory required for data: 29138800
I0428 19:36:39.450295 23712 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:36:39.450300 23712 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:36:39.450304 23712 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:36:39.450309 23712 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:36:39.450315 23712 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:36:39.450352 23712 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:36:39.450359 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.450373 23712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:39.450376 23712 net.cpp:139] Memory required for data: 29146800
I0428 19:36:39.450379 23712 layer_factory.hpp:77] Creating layer accuracy
I0428 19:36:39.450386 23712 net.cpp:86] Creating Layer accuracy
I0428 19:36:39.450389 23712 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:36:39.450393 23712 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:36:39.450419 23712 net.cpp:382] accuracy -> accuracy
I0428 19:36:39.450428 23712 net.cpp:124] Setting up accuracy
I0428 19:36:39.450433 23712 net.cpp:131] Top shape: (1)
I0428 19:36:39.450435 23712 net.cpp:139] Memory required for data: 29146804
I0428 19:36:39.450438 23712 layer_factory.hpp:77] Creating layer loss
I0428 19:36:39.450444 23712 net.cpp:86] Creating Layer loss
I0428 19:36:39.450453 23712 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:36:39.450458 23712 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:36:39.450461 23712 net.cpp:382] loss -> loss
I0428 19:36:39.450467 23712 layer_factory.hpp:77] Creating layer loss
I0428 19:36:39.450776 23712 net.cpp:124] Setting up loss
I0428 19:36:39.450801 23712 net.cpp:131] Top shape: (1)
I0428 19:36:39.450815 23712 net.cpp:134]     with loss weight 1
I0428 19:36:39.450822 23712 net.cpp:139] Memory required for data: 29146808
I0428 19:36:39.450826 23712 net.cpp:200] loss needs backward computation.
I0428 19:36:39.450830 23712 net.cpp:202] accuracy does not need backward computation.
I0428 19:36:39.450834 23712 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:36:39.450837 23712 net.cpp:200] relu3 needs backward computation.
I0428 19:36:39.450847 23712 net.cpp:200] ip3 needs backward computation.
I0428 19:36:39.450850 23712 net.cpp:200] relu2 needs backward computation.
I0428 19:36:39.450855 23712 net.cpp:200] ip2 needs backward computation.
I0428 19:36:39.450857 23712 net.cpp:200] relu1 needs backward computation.
I0428 19:36:39.450860 23712 net.cpp:200] ip1 needs backward computation.
I0428 19:36:39.450865 23712 net.cpp:200] pool0 needs backward computation.
I0428 19:36:39.450867 23712 net.cpp:200] conv0 needs backward computation.
I0428 19:36:39.450871 23712 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:36:39.450881 23712 net.cpp:202] mnist does not need backward computation.
I0428 19:36:39.450883 23712 net.cpp:244] This network produces output accuracy
I0428 19:36:39.450887 23712 net.cpp:244] This network produces output loss
I0428 19:36:39.450898 23712 net.cpp:257] Network initialization done.
I0428 19:36:39.450937 23712 solver.cpp:56] Solver scaffolding done.
I0428 19:36:39.451333 23712 caffe.cpp:248] Starting Optimization
I0428 19:36:39.451339 23712 solver.cpp:273] Solving LeNet
I0428 19:36:39.451341 23712 solver.cpp:274] Learning Rate Policy: inv
I0428 19:36:39.452203 23712 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:36:39.614503 23719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:39.619148 23712 solver.cpp:398]     Test net output #0: accuracy = 0.0932
I0428 19:36:39.619184 23712 solver.cpp:398]     Test net output #1: loss = 2.31929 (* 1 = 2.31929 loss)
I0428 19:36:39.624171 23712 solver.cpp:219] Iteration 0 (-1.03958e-31 iter/s, 0.172757s/100 iters), loss = 2.30338
I0428 19:36:39.624208 23712 solver.cpp:238]     Train net output #0: loss = 2.30338 (* 1 = 2.30338 loss)
I0428 19:36:39.624219 23712 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:36:39.855099 23712 solver.cpp:219] Iteration 100 (433.115 iter/s, 0.230885s/100 iters), loss = 0.974508
I0428 19:36:39.855129 23712 solver.cpp:238]     Train net output #0: loss = 0.974508 (* 1 = 0.974508 loss)
I0428 19:36:39.855134 23712 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:36:40.083804 23712 solver.cpp:219] Iteration 200 (437.33 iter/s, 0.22866s/100 iters), loss = 0.81282
I0428 19:36:40.083829 23712 solver.cpp:238]     Train net output #0: loss = 0.81282 (* 1 = 0.81282 loss)
I0428 19:36:40.083835 23712 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:36:40.314124 23712 solver.cpp:219] Iteration 300 (434.259 iter/s, 0.230277s/100 iters), loss = 0.528992
I0428 19:36:40.314178 23712 solver.cpp:238]     Train net output #0: loss = 0.528992 (* 1 = 0.528992 loss)
I0428 19:36:40.314184 23712 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:36:40.545287 23712 solver.cpp:219] Iteration 400 (432.726 iter/s, 0.231093s/100 iters), loss = 0.33481
I0428 19:36:40.545327 23712 solver.cpp:238]     Train net output #0: loss = 0.33481 (* 1 = 0.33481 loss)
I0428 19:36:40.545333 23712 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:36:40.772420 23712 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:36:40.931495 23719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:40.936112 23712 solver.cpp:398]     Test net output #0: accuracy = 0.9235
I0428 19:36:40.936134 23712 solver.cpp:398]     Test net output #1: loss = 0.274931 (* 1 = 0.274931 loss)
I0428 19:36:40.938388 23712 solver.cpp:219] Iteration 500 (254.42 iter/s, 0.39305s/100 iters), loss = 0.495791
I0428 19:36:40.938413 23712 solver.cpp:238]     Train net output #0: loss = 0.495791 (* 1 = 0.495791 loss)
I0428 19:36:40.938419 23712 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:36:41.177392 23712 solver.cpp:219] Iteration 600 (418.49 iter/s, 0.238955s/100 iters), loss = 0.175323
I0428 19:36:41.177443 23712 solver.cpp:238]     Train net output #0: loss = 0.175323 (* 1 = 0.175323 loss)
I0428 19:36:41.177455 23712 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:36:41.417057 23712 solver.cpp:219] Iteration 700 (417.365 iter/s, 0.239599s/100 iters), loss = 0.289169
I0428 19:36:41.417093 23712 solver.cpp:238]     Train net output #0: loss = 0.289169 (* 1 = 0.289169 loss)
I0428 19:36:41.417101 23712 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:36:41.661770 23712 solver.cpp:219] Iteration 800 (408.735 iter/s, 0.244657s/100 iters), loss = 0.399523
I0428 19:36:41.661818 23712 solver.cpp:238]     Train net output #0: loss = 0.399522 (* 1 = 0.399522 loss)
I0428 19:36:41.661829 23712 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:36:41.899758 23712 solver.cpp:219] Iteration 900 (420.3 iter/s, 0.237925s/100 iters), loss = 0.262877
I0428 19:36:41.899796 23712 solver.cpp:238]     Train net output #0: loss = 0.262877 (* 1 = 0.262877 loss)
I0428 19:36:41.899806 23712 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:36:41.977277 23718 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:42.128844 23712 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:36:42.133767 23712 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:36:42.136880 23712 solver.cpp:311] Iteration 1000, loss = 0.158931
I0428 19:36:42.136903 23712 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:36:42.300976 23719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:42.305444 23712 solver.cpp:398]     Test net output #0: accuracy = 0.9514
I0428 19:36:42.305470 23712 solver.cpp:398]     Test net output #1: loss = 0.157856 (* 1 = 0.157856 loss)
I0428 19:36:42.305476 23712 solver.cpp:316] Optimization Done.
I0428 19:36:42.305480 23712 caffe.cpp:259] Optimization Done.
