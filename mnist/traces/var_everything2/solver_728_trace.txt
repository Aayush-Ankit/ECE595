I0428 19:55:14.506431 28146 caffe.cpp:218] Using GPUs 0
I0428 19:55:14.544701 28146 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:15.000598 28146 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test728.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:15.000749 28146 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test728.prototxt
I0428 19:55:15.001091 28146 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:15.001106 28146 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:15.001181 28146 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:15.001240 28146 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:15.001319 28146 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:15.001338 28146 net.cpp:86] Creating Layer mnist
I0428 19:55:15.001345 28146 net.cpp:382] mnist -> data
I0428 19:55:15.001363 28146 net.cpp:382] mnist -> label
I0428 19:55:15.002322 28146 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:15.004470 28146 net.cpp:124] Setting up mnist
I0428 19:55:15.004501 28146 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:15.004506 28146 net.cpp:131] Top shape: 64 (64)
I0428 19:55:15.004509 28146 net.cpp:139] Memory required for data: 200960
I0428 19:55:15.004515 28146 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:15.004528 28146 net.cpp:86] Creating Layer conv0
I0428 19:55:15.004547 28146 net.cpp:408] conv0 <- data
I0428 19:55:15.004557 28146 net.cpp:382] conv0 -> conv0
I0428 19:55:15.232218 28146 net.cpp:124] Setting up conv0
I0428 19:55:15.232260 28146 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:15.232265 28146 net.cpp:139] Memory required for data: 938240
I0428 19:55:15.232278 28146 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:15.232291 28146 net.cpp:86] Creating Layer pool0
I0428 19:55:15.232295 28146 net.cpp:408] pool0 <- conv0
I0428 19:55:15.232300 28146 net.cpp:382] pool0 -> pool0
I0428 19:55:15.232359 28146 net.cpp:124] Setting up pool0
I0428 19:55:15.232365 28146 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:15.232368 28146 net.cpp:139] Memory required for data: 1122560
I0428 19:55:15.232372 28146 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:15.232398 28146 net.cpp:86] Creating Layer conv1
I0428 19:55:15.232400 28146 net.cpp:408] conv1 <- pool0
I0428 19:55:15.232405 28146 net.cpp:382] conv1 -> conv1
I0428 19:55:15.235227 28146 net.cpp:124] Setting up conv1
I0428 19:55:15.235258 28146 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:15.235262 28146 net.cpp:139] Memory required for data: 2760960
I0428 19:55:15.235271 28146 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:15.235280 28146 net.cpp:86] Creating Layer pool1
I0428 19:55:15.235285 28146 net.cpp:408] pool1 <- conv1
I0428 19:55:15.235288 28146 net.cpp:382] pool1 -> pool1
I0428 19:55:15.235327 28146 net.cpp:124] Setting up pool1
I0428 19:55:15.235332 28146 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:15.235334 28146 net.cpp:139] Memory required for data: 3170560
I0428 19:55:15.235337 28146 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:15.235343 28146 net.cpp:86] Creating Layer ip1
I0428 19:55:15.235347 28146 net.cpp:408] ip1 <- pool1
I0428 19:55:15.235352 28146 net.cpp:382] ip1 -> ip1
I0428 19:55:15.235690 28146 net.cpp:124] Setting up ip1
I0428 19:55:15.235698 28146 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:15.235718 28146 net.cpp:139] Memory required for data: 3176960
I0428 19:55:15.235724 28146 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:15.235730 28146 net.cpp:86] Creating Layer relu1
I0428 19:55:15.235733 28146 net.cpp:408] relu1 <- ip1
I0428 19:55:15.235738 28146 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:15.235931 28146 net.cpp:124] Setting up relu1
I0428 19:55:15.235940 28146 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:15.235944 28146 net.cpp:139] Memory required for data: 3183360
I0428 19:55:15.235946 28146 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:15.235954 28146 net.cpp:86] Creating Layer ip2
I0428 19:55:15.235956 28146 net.cpp:408] ip2 <- ip1
I0428 19:55:15.235961 28146 net.cpp:382] ip2 -> ip2
I0428 19:55:15.236085 28146 net.cpp:124] Setting up ip2
I0428 19:55:15.236093 28146 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:15.236095 28146 net.cpp:139] Memory required for data: 3189760
I0428 19:55:15.236116 28146 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:15.236122 28146 net.cpp:86] Creating Layer relu2
I0428 19:55:15.236142 28146 net.cpp:408] relu2 <- ip2
I0428 19:55:15.236146 28146 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:15.236977 28146 net.cpp:124] Setting up relu2
I0428 19:55:15.236990 28146 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:15.237010 28146 net.cpp:139] Memory required for data: 3196160
I0428 19:55:15.237013 28146 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:15.237020 28146 net.cpp:86] Creating Layer ip3
I0428 19:55:15.237025 28146 net.cpp:408] ip3 <- ip2
I0428 19:55:15.237031 28146 net.cpp:382] ip3 -> ip3
I0428 19:55:15.237143 28146 net.cpp:124] Setting up ip3
I0428 19:55:15.237151 28146 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:15.237154 28146 net.cpp:139] Memory required for data: 3198720
I0428 19:55:15.237162 28146 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:15.237167 28146 net.cpp:86] Creating Layer relu3
I0428 19:55:15.237170 28146 net.cpp:408] relu3 <- ip3
I0428 19:55:15.237174 28146 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:15.237355 28146 net.cpp:124] Setting up relu3
I0428 19:55:15.237365 28146 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:15.237367 28146 net.cpp:139] Memory required for data: 3201280
I0428 19:55:15.237370 28146 layer_factory.hpp:77] Creating layer loss
I0428 19:55:15.237376 28146 net.cpp:86] Creating Layer loss
I0428 19:55:15.237380 28146 net.cpp:408] loss <- ip3
I0428 19:55:15.237385 28146 net.cpp:408] loss <- label
I0428 19:55:15.237390 28146 net.cpp:382] loss -> loss
I0428 19:55:15.237404 28146 layer_factory.hpp:77] Creating layer loss
I0428 19:55:15.237660 28146 net.cpp:124] Setting up loss
I0428 19:55:15.237670 28146 net.cpp:131] Top shape: (1)
I0428 19:55:15.237673 28146 net.cpp:134]     with loss weight 1
I0428 19:55:15.237687 28146 net.cpp:139] Memory required for data: 3201284
I0428 19:55:15.237690 28146 net.cpp:200] loss needs backward computation.
I0428 19:55:15.237694 28146 net.cpp:200] relu3 needs backward computation.
I0428 19:55:15.237697 28146 net.cpp:200] ip3 needs backward computation.
I0428 19:55:15.237700 28146 net.cpp:200] relu2 needs backward computation.
I0428 19:55:15.237704 28146 net.cpp:200] ip2 needs backward computation.
I0428 19:55:15.237706 28146 net.cpp:200] relu1 needs backward computation.
I0428 19:55:15.237709 28146 net.cpp:200] ip1 needs backward computation.
I0428 19:55:15.237711 28146 net.cpp:200] pool1 needs backward computation.
I0428 19:55:15.237715 28146 net.cpp:200] conv1 needs backward computation.
I0428 19:55:15.237717 28146 net.cpp:200] pool0 needs backward computation.
I0428 19:55:15.237721 28146 net.cpp:200] conv0 needs backward computation.
I0428 19:55:15.237725 28146 net.cpp:202] mnist does not need backward computation.
I0428 19:55:15.237727 28146 net.cpp:244] This network produces output loss
I0428 19:55:15.237736 28146 net.cpp:257] Network initialization done.
I0428 19:55:15.238116 28146 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test728.prototxt
I0428 19:55:15.238158 28146 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:15.238260 28146 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:15.238349 28146 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:15.238390 28146 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:15.238405 28146 net.cpp:86] Creating Layer mnist
I0428 19:55:15.238409 28146 net.cpp:382] mnist -> data
I0428 19:55:15.238417 28146 net.cpp:382] mnist -> label
I0428 19:55:15.238498 28146 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:15.240532 28146 net.cpp:124] Setting up mnist
I0428 19:55:15.240561 28146 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:15.240566 28146 net.cpp:131] Top shape: 100 (100)
I0428 19:55:15.240569 28146 net.cpp:139] Memory required for data: 314000
I0428 19:55:15.240573 28146 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:15.240579 28146 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:15.240583 28146 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:15.240587 28146 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:15.240594 28146 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:15.240654 28146 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:15.240660 28146 net.cpp:131] Top shape: 100 (100)
I0428 19:55:15.240664 28146 net.cpp:131] Top shape: 100 (100)
I0428 19:55:15.240666 28146 net.cpp:139] Memory required for data: 314800
I0428 19:55:15.240669 28146 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:15.240677 28146 net.cpp:86] Creating Layer conv0
I0428 19:55:15.240680 28146 net.cpp:408] conv0 <- data
I0428 19:55:15.240685 28146 net.cpp:382] conv0 -> conv0
I0428 19:55:15.242491 28146 net.cpp:124] Setting up conv0
I0428 19:55:15.242506 28146 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:15.242511 28146 net.cpp:139] Memory required for data: 1466800
I0428 19:55:15.242519 28146 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:15.242525 28146 net.cpp:86] Creating Layer pool0
I0428 19:55:15.242528 28146 net.cpp:408] pool0 <- conv0
I0428 19:55:15.242532 28146 net.cpp:382] pool0 -> pool0
I0428 19:55:15.242568 28146 net.cpp:124] Setting up pool0
I0428 19:55:15.242573 28146 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:15.242575 28146 net.cpp:139] Memory required for data: 1754800
I0428 19:55:15.242578 28146 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:15.242588 28146 net.cpp:86] Creating Layer conv1
I0428 19:55:15.242590 28146 net.cpp:408] conv1 <- pool0
I0428 19:55:15.242595 28146 net.cpp:382] conv1 -> conv1
I0428 19:55:15.244267 28146 net.cpp:124] Setting up conv1
I0428 19:55:15.244282 28146 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:15.244285 28146 net.cpp:139] Memory required for data: 4314800
I0428 19:55:15.244294 28146 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:15.244300 28146 net.cpp:86] Creating Layer pool1
I0428 19:55:15.244303 28146 net.cpp:408] pool1 <- conv1
I0428 19:55:15.244309 28146 net.cpp:382] pool1 -> pool1
I0428 19:55:15.244359 28146 net.cpp:124] Setting up pool1
I0428 19:55:15.244365 28146 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:15.244369 28146 net.cpp:139] Memory required for data: 4954800
I0428 19:55:15.244371 28146 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:15.244377 28146 net.cpp:86] Creating Layer ip1
I0428 19:55:15.244380 28146 net.cpp:408] ip1 <- pool1
I0428 19:55:15.244393 28146 net.cpp:382] ip1 -> ip1
I0428 19:55:15.244787 28146 net.cpp:124] Setting up ip1
I0428 19:55:15.244796 28146 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:15.244814 28146 net.cpp:139] Memory required for data: 4964800
I0428 19:55:15.244823 28146 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:15.244828 28146 net.cpp:86] Creating Layer relu1
I0428 19:55:15.244832 28146 net.cpp:408] relu1 <- ip1
I0428 19:55:15.244837 28146 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:15.245018 28146 net.cpp:124] Setting up relu1
I0428 19:55:15.245026 28146 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:15.245029 28146 net.cpp:139] Memory required for data: 4974800
I0428 19:55:15.245033 28146 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:15.245038 28146 net.cpp:86] Creating Layer ip2
I0428 19:55:15.245041 28146 net.cpp:408] ip2 <- ip1
I0428 19:55:15.245046 28146 net.cpp:382] ip2 -> ip2
I0428 19:55:15.245142 28146 net.cpp:124] Setting up ip2
I0428 19:55:15.245149 28146 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:15.245152 28146 net.cpp:139] Memory required for data: 4984800
I0428 19:55:15.245157 28146 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:15.245162 28146 net.cpp:86] Creating Layer relu2
I0428 19:55:15.245173 28146 net.cpp:408] relu2 <- ip2
I0428 19:55:15.245177 28146 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:15.245396 28146 net.cpp:124] Setting up relu2
I0428 19:55:15.245405 28146 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:15.245409 28146 net.cpp:139] Memory required for data: 4994800
I0428 19:55:15.245411 28146 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:15.245419 28146 net.cpp:86] Creating Layer ip3
I0428 19:55:15.245421 28146 net.cpp:408] ip3 <- ip2
I0428 19:55:15.245426 28146 net.cpp:382] ip3 -> ip3
I0428 19:55:15.245604 28146 net.cpp:124] Setting up ip3
I0428 19:55:15.245611 28146 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:15.245615 28146 net.cpp:139] Memory required for data: 4998800
I0428 19:55:15.245621 28146 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:15.245626 28146 net.cpp:86] Creating Layer relu3
I0428 19:55:15.245628 28146 net.cpp:408] relu3 <- ip3
I0428 19:55:15.245648 28146 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:15.246393 28146 net.cpp:124] Setting up relu3
I0428 19:55:15.246407 28146 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:15.246410 28146 net.cpp:139] Memory required for data: 5002800
I0428 19:55:15.246413 28146 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:15.246418 28146 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:15.246421 28146 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:15.246426 28146 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:15.246441 28146 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:15.246476 28146 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:15.246482 28146 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:15.246501 28146 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:15.246511 28146 net.cpp:139] Memory required for data: 5010800
I0428 19:55:15.246515 28146 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:15.246520 28146 net.cpp:86] Creating Layer accuracy
I0428 19:55:15.246522 28146 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:15.246526 28146 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:15.246531 28146 net.cpp:382] accuracy -> accuracy
I0428 19:55:15.246538 28146 net.cpp:124] Setting up accuracy
I0428 19:55:15.246542 28146 net.cpp:131] Top shape: (1)
I0428 19:55:15.246546 28146 net.cpp:139] Memory required for data: 5010804
I0428 19:55:15.246548 28146 layer_factory.hpp:77] Creating layer loss
I0428 19:55:15.246553 28146 net.cpp:86] Creating Layer loss
I0428 19:55:15.246556 28146 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:15.246559 28146 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:15.246563 28146 net.cpp:382] loss -> loss
I0428 19:55:15.246569 28146 layer_factory.hpp:77] Creating layer loss
I0428 19:55:15.246889 28146 net.cpp:124] Setting up loss
I0428 19:55:15.246899 28146 net.cpp:131] Top shape: (1)
I0428 19:55:15.246902 28146 net.cpp:134]     with loss weight 1
I0428 19:55:15.246918 28146 net.cpp:139] Memory required for data: 5010808
I0428 19:55:15.246922 28146 net.cpp:200] loss needs backward computation.
I0428 19:55:15.246925 28146 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:15.246929 28146 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:15.246932 28146 net.cpp:200] relu3 needs backward computation.
I0428 19:55:15.246934 28146 net.cpp:200] ip3 needs backward computation.
I0428 19:55:15.246937 28146 net.cpp:200] relu2 needs backward computation.
I0428 19:55:15.246939 28146 net.cpp:200] ip2 needs backward computation.
I0428 19:55:15.246942 28146 net.cpp:200] relu1 needs backward computation.
I0428 19:55:15.246944 28146 net.cpp:200] ip1 needs backward computation.
I0428 19:55:15.246948 28146 net.cpp:200] pool1 needs backward computation.
I0428 19:55:15.246950 28146 net.cpp:200] conv1 needs backward computation.
I0428 19:55:15.246953 28146 net.cpp:200] pool0 needs backward computation.
I0428 19:55:15.246956 28146 net.cpp:200] conv0 needs backward computation.
I0428 19:55:15.246960 28146 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:15.246963 28146 net.cpp:202] mnist does not need backward computation.
I0428 19:55:15.246966 28146 net.cpp:244] This network produces output accuracy
I0428 19:55:15.246969 28146 net.cpp:244] This network produces output loss
I0428 19:55:15.246979 28146 net.cpp:257] Network initialization done.
I0428 19:55:15.247020 28146 solver.cpp:56] Solver scaffolding done.
I0428 19:55:15.247362 28146 caffe.cpp:248] Starting Optimization
I0428 19:55:15.247369 28146 solver.cpp:273] Solving LeNet
I0428 19:55:15.247371 28146 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:15.248168 28146 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:15.253617 28146 blocking_queue.cpp:49] Waiting for data
I0428 19:55:15.323266 28153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:15.323864 28146 solver.cpp:398]     Test net output #0: accuracy = 0.0993
I0428 19:55:15.323884 28146 solver.cpp:398]     Test net output #1: loss = 2.30926 (* 1 = 2.30926 loss)
I0428 19:55:15.327644 28146 solver.cpp:219] Iteration 0 (-2.06044e-16 iter/s, 0.080247s/100 iters), loss = 2.323
I0428 19:55:15.327668 28146 solver.cpp:238]     Train net output #0: loss = 2.323 (* 1 = 2.323 loss)
I0428 19:55:15.327694 28146 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:15.482997 28146 solver.cpp:219] Iteration 100 (643.882 iter/s, 0.155308s/100 iters), loss = 0.475032
I0428 19:55:15.483044 28146 solver.cpp:238]     Train net output #0: loss = 0.475032 (* 1 = 0.475032 loss)
I0428 19:55:15.483052 28146 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:15.630830 28146 solver.cpp:219] Iteration 200 (676.716 iter/s, 0.147772s/100 iters), loss = 0.387869
I0428 19:55:15.630856 28146 solver.cpp:238]     Train net output #0: loss = 0.387869 (* 1 = 0.387869 loss)
I0428 19:55:15.630863 28146 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:15.779682 28146 solver.cpp:219] Iteration 300 (671.976 iter/s, 0.148815s/100 iters), loss = 0.242698
I0428 19:55:15.779707 28146 solver.cpp:238]     Train net output #0: loss = 0.242698 (* 1 = 0.242698 loss)
I0428 19:55:15.779713 28146 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:15.933239 28146 solver.cpp:219] Iteration 400 (651.385 iter/s, 0.153519s/100 iters), loss = 0.151033
I0428 19:55:15.933265 28146 solver.cpp:238]     Train net output #0: loss = 0.151033 (* 1 = 0.151033 loss)
I0428 19:55:15.933271 28146 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:16.082366 28146 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:16.159215 28153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:16.159862 28146 solver.cpp:398]     Test net output #0: accuracy = 0.9526
I0428 19:55:16.159883 28146 solver.cpp:398]     Test net output #1: loss = 0.153067 (* 1 = 0.153067 loss)
I0428 19:55:16.161481 28146 solver.cpp:219] Iteration 500 (438.215 iter/s, 0.228199s/100 iters), loss = 0.109406
I0428 19:55:16.161533 28146 solver.cpp:238]     Train net output #0: loss = 0.109406 (* 1 = 0.109406 loss)
I0428 19:55:16.161542 28146 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:16.315979 28146 solver.cpp:219] Iteration 600 (647.515 iter/s, 0.154437s/100 iters), loss = 0.0882614
I0428 19:55:16.316004 28146 solver.cpp:238]     Train net output #0: loss = 0.0882613 (* 1 = 0.0882613 loss)
I0428 19:55:16.316025 28146 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:16.466012 28146 solver.cpp:219] Iteration 700 (666.691 iter/s, 0.149994s/100 iters), loss = 0.128222
I0428 19:55:16.466053 28146 solver.cpp:238]     Train net output #0: loss = 0.128222 (* 1 = 0.128222 loss)
I0428 19:55:16.466060 28146 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:16.614097 28146 solver.cpp:219] Iteration 800 (675.528 iter/s, 0.148032s/100 iters), loss = 0.333206
I0428 19:55:16.614140 28146 solver.cpp:238]     Train net output #0: loss = 0.333206 (* 1 = 0.333206 loss)
I0428 19:55:16.614146 28146 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:16.761965 28146 solver.cpp:219] Iteration 900 (676.463 iter/s, 0.147828s/100 iters), loss = 0.116465
I0428 19:55:16.762006 28146 solver.cpp:238]     Train net output #0: loss = 0.116465 (* 1 = 0.116465 loss)
I0428 19:55:16.762013 28146 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:16.811731 28152 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:16.906910 28146 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:16.909044 28146 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:16.910029 28146 solver.cpp:311] Iteration 1000, loss = 0.143044
I0428 19:55:16.910044 28146 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:16.985162 28153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:16.985779 28146 solver.cpp:398]     Test net output #0: accuracy = 0.9717
I0428 19:55:16.985798 28146 solver.cpp:398]     Test net output #1: loss = 0.0861472 (* 1 = 0.0861472 loss)
I0428 19:55:16.985803 28146 solver.cpp:316] Optimization Done.
I0428 19:55:16.985806 28146 caffe.cpp:259] Optimization Done.
