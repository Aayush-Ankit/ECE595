I0428 20:18:32.671577  1161 caffe.cpp:218] Using GPUs 0
I0428 20:18:32.707931  1161 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:33.162333  1161 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1321.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:33.162492  1161 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1321.prototxt
I0428 20:18:33.162878  1161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:33.162909  1161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:33.163004  1161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:33.163069  1161 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:33.163156  1161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:33.163192  1161 net.cpp:86] Creating Layer mnist
I0428 20:18:33.163200  1161 net.cpp:382] mnist -> data
I0428 20:18:33.163236  1161 net.cpp:382] mnist -> label
I0428 20:18:33.164283  1161 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:33.166540  1161 net.cpp:124] Setting up mnist
I0428 20:18:33.166587  1161 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:33.166604  1161 net.cpp:131] Top shape: 64 (64)
I0428 20:18:33.166606  1161 net.cpp:139] Memory required for data: 200960
I0428 20:18:33.166613  1161 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:33.166627  1161 net.cpp:86] Creating Layer conv0
I0428 20:18:33.166646  1161 net.cpp:408] conv0 <- data
I0428 20:18:33.166657  1161 net.cpp:382] conv0 -> conv0
I0428 20:18:33.394603  1161 net.cpp:124] Setting up conv0
I0428 20:18:33.394628  1161 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:33.394631  1161 net.cpp:139] Memory required for data: 7573760
I0428 20:18:33.394644  1161 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:33.394672  1161 net.cpp:86] Creating Layer pool0
I0428 20:18:33.394676  1161 net.cpp:408] pool0 <- conv0
I0428 20:18:33.394681  1161 net.cpp:382] pool0 -> pool0
I0428 20:18:33.394726  1161 net.cpp:124] Setting up pool0
I0428 20:18:33.394742  1161 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:33.394745  1161 net.cpp:139] Memory required for data: 9416960
I0428 20:18:33.394747  1161 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:33.394758  1161 net.cpp:86] Creating Layer conv1
I0428 20:18:33.394762  1161 net.cpp:408] conv1 <- pool0
I0428 20:18:33.394765  1161 net.cpp:382] conv1 -> conv1
I0428 20:18:33.397732  1161 net.cpp:124] Setting up conv1
I0428 20:18:33.397761  1161 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:33.397764  1161 net.cpp:139] Memory required for data: 9580800
I0428 20:18:33.397789  1161 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:33.397796  1161 net.cpp:86] Creating Layer pool1
I0428 20:18:33.397799  1161 net.cpp:408] pool1 <- conv1
I0428 20:18:33.397804  1161 net.cpp:382] pool1 -> pool1
I0428 20:18:33.397857  1161 net.cpp:124] Setting up pool1
I0428 20:18:33.397862  1161 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:33.397866  1161 net.cpp:139] Memory required for data: 9621760
I0428 20:18:33.397868  1161 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:33.397891  1161 net.cpp:86] Creating Layer ip1
I0428 20:18:33.397893  1161 net.cpp:408] ip1 <- pool1
I0428 20:18:33.397898  1161 net.cpp:382] ip1 -> ip1
I0428 20:18:33.398044  1161 net.cpp:124] Setting up ip1
I0428 20:18:33.398051  1161 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:33.398054  1161 net.cpp:139] Memory required for data: 9634560
I0428 20:18:33.398061  1161 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:33.398067  1161 net.cpp:86] Creating Layer relu1
I0428 20:18:33.398071  1161 net.cpp:408] relu1 <- ip1
I0428 20:18:33.398074  1161 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:33.398246  1161 net.cpp:124] Setting up relu1
I0428 20:18:33.398253  1161 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:33.398257  1161 net.cpp:139] Memory required for data: 9647360
I0428 20:18:33.398259  1161 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:33.398265  1161 net.cpp:86] Creating Layer ip2
I0428 20:18:33.398268  1161 net.cpp:408] ip2 <- ip1
I0428 20:18:33.398272  1161 net.cpp:382] ip2 -> ip2
I0428 20:18:33.398373  1161 net.cpp:124] Setting up ip2
I0428 20:18:33.398380  1161 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:33.398383  1161 net.cpp:139] Memory required for data: 9653760
I0428 20:18:33.398388  1161 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:33.398393  1161 net.cpp:86] Creating Layer relu2
I0428 20:18:33.398396  1161 net.cpp:408] relu2 <- ip2
I0428 20:18:33.398401  1161 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:33.399099  1161 net.cpp:124] Setting up relu2
I0428 20:18:33.399111  1161 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:33.399129  1161 net.cpp:139] Memory required for data: 9660160
I0428 20:18:33.399132  1161 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:33.399138  1161 net.cpp:86] Creating Layer ip3
I0428 20:18:33.399142  1161 net.cpp:408] ip3 <- ip2
I0428 20:18:33.399147  1161 net.cpp:382] ip3 -> ip3
I0428 20:18:33.399253  1161 net.cpp:124] Setting up ip3
I0428 20:18:33.399260  1161 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:33.399263  1161 net.cpp:139] Memory required for data: 9662720
I0428 20:18:33.399271  1161 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:33.399276  1161 net.cpp:86] Creating Layer relu3
I0428 20:18:33.399278  1161 net.cpp:408] relu3 <- ip3
I0428 20:18:33.399281  1161 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:33.399488  1161 net.cpp:124] Setting up relu3
I0428 20:18:33.399497  1161 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:33.399500  1161 net.cpp:139] Memory required for data: 9665280
I0428 20:18:33.399503  1161 layer_factory.hpp:77] Creating layer loss
I0428 20:18:33.399509  1161 net.cpp:86] Creating Layer loss
I0428 20:18:33.399513  1161 net.cpp:408] loss <- ip3
I0428 20:18:33.399518  1161 net.cpp:408] loss <- label
I0428 20:18:33.399523  1161 net.cpp:382] loss -> loss
I0428 20:18:33.399536  1161 layer_factory.hpp:77] Creating layer loss
I0428 20:18:33.399798  1161 net.cpp:124] Setting up loss
I0428 20:18:33.399807  1161 net.cpp:131] Top shape: (1)
I0428 20:18:33.399811  1161 net.cpp:134]     with loss weight 1
I0428 20:18:33.399822  1161 net.cpp:139] Memory required for data: 9665284
I0428 20:18:33.399827  1161 net.cpp:200] loss needs backward computation.
I0428 20:18:33.399829  1161 net.cpp:200] relu3 needs backward computation.
I0428 20:18:33.399832  1161 net.cpp:200] ip3 needs backward computation.
I0428 20:18:33.399834  1161 net.cpp:200] relu2 needs backward computation.
I0428 20:18:33.399837  1161 net.cpp:200] ip2 needs backward computation.
I0428 20:18:33.399839  1161 net.cpp:200] relu1 needs backward computation.
I0428 20:18:33.399842  1161 net.cpp:200] ip1 needs backward computation.
I0428 20:18:33.399845  1161 net.cpp:200] pool1 needs backward computation.
I0428 20:18:33.399848  1161 net.cpp:200] conv1 needs backward computation.
I0428 20:18:33.399850  1161 net.cpp:200] pool0 needs backward computation.
I0428 20:18:33.399853  1161 net.cpp:200] conv0 needs backward computation.
I0428 20:18:33.399857  1161 net.cpp:202] mnist does not need backward computation.
I0428 20:18:33.399858  1161 net.cpp:244] This network produces output loss
I0428 20:18:33.399868  1161 net.cpp:257] Network initialization done.
I0428 20:18:33.400248  1161 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1321.prototxt
I0428 20:18:33.400305  1161 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:33.400398  1161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:33.400481  1161 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:33.400538  1161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:33.400555  1161 net.cpp:86] Creating Layer mnist
I0428 20:18:33.400559  1161 net.cpp:382] mnist -> data
I0428 20:18:33.400568  1161 net.cpp:382] mnist -> label
I0428 20:18:33.400653  1161 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:33.402760  1161 net.cpp:124] Setting up mnist
I0428 20:18:33.402788  1161 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:33.402808  1161 net.cpp:131] Top shape: 100 (100)
I0428 20:18:33.402812  1161 net.cpp:139] Memory required for data: 314000
I0428 20:18:33.402814  1161 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:33.402827  1161 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:33.402832  1161 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:33.402835  1161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:33.402843  1161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:33.402892  1161 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:33.402912  1161 net.cpp:131] Top shape: 100 (100)
I0428 20:18:33.402915  1161 net.cpp:131] Top shape: 100 (100)
I0428 20:18:33.402918  1161 net.cpp:139] Memory required for data: 314800
I0428 20:18:33.402921  1161 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:33.402930  1161 net.cpp:86] Creating Layer conv0
I0428 20:18:33.402933  1161 net.cpp:408] conv0 <- data
I0428 20:18:33.402940  1161 net.cpp:382] conv0 -> conv0
I0428 20:18:33.404775  1161 net.cpp:124] Setting up conv0
I0428 20:18:33.404805  1161 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:33.404829  1161 net.cpp:139] Memory required for data: 11834800
I0428 20:18:33.404853  1161 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:33.404860  1161 net.cpp:86] Creating Layer pool0
I0428 20:18:33.404863  1161 net.cpp:408] pool0 <- conv0
I0428 20:18:33.404867  1161 net.cpp:382] pool0 -> pool0
I0428 20:18:33.404938  1161 net.cpp:124] Setting up pool0
I0428 20:18:33.404952  1161 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:33.404954  1161 net.cpp:139] Memory required for data: 14714800
I0428 20:18:33.404958  1161 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:33.404968  1161 net.cpp:86] Creating Layer conv1
I0428 20:18:33.404971  1161 net.cpp:408] conv1 <- pool0
I0428 20:18:33.404976  1161 net.cpp:382] conv1 -> conv1
I0428 20:18:33.406668  1161 net.cpp:124] Setting up conv1
I0428 20:18:33.406682  1161 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:33.406702  1161 net.cpp:139] Memory required for data: 14970800
I0428 20:18:33.406710  1161 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:33.406718  1161 net.cpp:86] Creating Layer pool1
I0428 20:18:33.406721  1161 net.cpp:408] pool1 <- conv1
I0428 20:18:33.406728  1161 net.cpp:382] pool1 -> pool1
I0428 20:18:33.406782  1161 net.cpp:124] Setting up pool1
I0428 20:18:33.406788  1161 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:33.406792  1161 net.cpp:139] Memory required for data: 15034800
I0428 20:18:33.406796  1161 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:33.406817  1161 net.cpp:86] Creating Layer ip1
I0428 20:18:33.406821  1161 net.cpp:408] ip1 <- pool1
I0428 20:18:33.406827  1161 net.cpp:382] ip1 -> ip1
I0428 20:18:33.407024  1161 net.cpp:124] Setting up ip1
I0428 20:18:33.407032  1161 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:33.407045  1161 net.cpp:139] Memory required for data: 15054800
I0428 20:18:33.407055  1161 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:33.407061  1161 net.cpp:86] Creating Layer relu1
I0428 20:18:33.407064  1161 net.cpp:408] relu1 <- ip1
I0428 20:18:33.407070  1161 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:33.407291  1161 net.cpp:124] Setting up relu1
I0428 20:18:33.407300  1161 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:33.407304  1161 net.cpp:139] Memory required for data: 15074800
I0428 20:18:33.407306  1161 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:33.407315  1161 net.cpp:86] Creating Layer ip2
I0428 20:18:33.407317  1161 net.cpp:408] ip2 <- ip1
I0428 20:18:33.407322  1161 net.cpp:382] ip2 -> ip2
I0428 20:18:33.407449  1161 net.cpp:124] Setting up ip2
I0428 20:18:33.407456  1161 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:33.407459  1161 net.cpp:139] Memory required for data: 15084800
I0428 20:18:33.407464  1161 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:33.407469  1161 net.cpp:86] Creating Layer relu2
I0428 20:18:33.407472  1161 net.cpp:408] relu2 <- ip2
I0428 20:18:33.407477  1161 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:33.407719  1161 net.cpp:124] Setting up relu2
I0428 20:18:33.407728  1161 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:33.407732  1161 net.cpp:139] Memory required for data: 15094800
I0428 20:18:33.407735  1161 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:33.407742  1161 net.cpp:86] Creating Layer ip3
I0428 20:18:33.407745  1161 net.cpp:408] ip3 <- ip2
I0428 20:18:33.407750  1161 net.cpp:382] ip3 -> ip3
I0428 20:18:33.407876  1161 net.cpp:124] Setting up ip3
I0428 20:18:33.407883  1161 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:33.407887  1161 net.cpp:139] Memory required for data: 15098800
I0428 20:18:33.407896  1161 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:33.407902  1161 net.cpp:86] Creating Layer relu3
I0428 20:18:33.407904  1161 net.cpp:408] relu3 <- ip3
I0428 20:18:33.407909  1161 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:33.408767  1161 net.cpp:124] Setting up relu3
I0428 20:18:33.408792  1161 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:33.408795  1161 net.cpp:139] Memory required for data: 15102800
I0428 20:18:33.408838  1161 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:33.408860  1161 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:33.408864  1161 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:33.408869  1161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:33.408874  1161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:33.408918  1161 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:33.408923  1161 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:33.408927  1161 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:33.408931  1161 net.cpp:139] Memory required for data: 15110800
I0428 20:18:33.408933  1161 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:33.408938  1161 net.cpp:86] Creating Layer accuracy
I0428 20:18:33.408941  1161 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:33.408946  1161 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:33.408951  1161 net.cpp:382] accuracy -> accuracy
I0428 20:18:33.408957  1161 net.cpp:124] Setting up accuracy
I0428 20:18:33.408962  1161 net.cpp:131] Top shape: (1)
I0428 20:18:33.408964  1161 net.cpp:139] Memory required for data: 15110804
I0428 20:18:33.408967  1161 layer_factory.hpp:77] Creating layer loss
I0428 20:18:33.408972  1161 net.cpp:86] Creating Layer loss
I0428 20:18:33.408974  1161 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:33.408978  1161 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:33.408983  1161 net.cpp:382] loss -> loss
I0428 20:18:33.408989  1161 layer_factory.hpp:77] Creating layer loss
I0428 20:18:33.409283  1161 net.cpp:124] Setting up loss
I0428 20:18:33.409296  1161 net.cpp:131] Top shape: (1)
I0428 20:18:33.409299  1161 net.cpp:134]     with loss weight 1
I0428 20:18:33.409322  1161 net.cpp:139] Memory required for data: 15110808
I0428 20:18:33.409327  1161 net.cpp:200] loss needs backward computation.
I0428 20:18:33.409330  1161 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:33.409334  1161 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:33.409337  1161 net.cpp:200] relu3 needs backward computation.
I0428 20:18:33.409340  1161 net.cpp:200] ip3 needs backward computation.
I0428 20:18:33.409343  1161 net.cpp:200] relu2 needs backward computation.
I0428 20:18:33.409348  1161 net.cpp:200] ip2 needs backward computation.
I0428 20:18:33.409349  1161 net.cpp:200] relu1 needs backward computation.
I0428 20:18:33.409353  1161 net.cpp:200] ip1 needs backward computation.
I0428 20:18:33.409355  1161 net.cpp:200] pool1 needs backward computation.
I0428 20:18:33.409358  1161 net.cpp:200] conv1 needs backward computation.
I0428 20:18:33.409363  1161 net.cpp:200] pool0 needs backward computation.
I0428 20:18:33.409365  1161 net.cpp:200] conv0 needs backward computation.
I0428 20:18:33.409369  1161 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:33.409373  1161 net.cpp:202] mnist does not need backward computation.
I0428 20:18:33.409376  1161 net.cpp:244] This network produces output accuracy
I0428 20:18:33.409379  1161 net.cpp:244] This network produces output loss
I0428 20:18:33.409392  1161 net.cpp:257] Network initialization done.
I0428 20:18:33.409435  1161 solver.cpp:56] Solver scaffolding done.
I0428 20:18:33.409803  1161 caffe.cpp:248] Starting Optimization
I0428 20:18:33.409808  1161 solver.cpp:273] Solving LeNet
I0428 20:18:33.409811  1161 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:33.410125  1161 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:33.417016  1161 blocking_queue.cpp:49] Waiting for data
I0428 20:18:33.487720  1168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:33.488656  1161 solver.cpp:398]     Test net output #0: accuracy = 0.0881
I0428 20:18:33.488693  1161 solver.cpp:398]     Test net output #1: loss = 2.30754 (* 1 = 2.30754 loss)
I0428 20:18:33.493382  1161 solver.cpp:219] Iteration 0 (0 iter/s, 0.0835146s/100 iters), loss = 2.31795
I0428 20:18:33.493420  1161 solver.cpp:238]     Train net output #0: loss = 2.31795 (* 1 = 2.31795 loss)
I0428 20:18:33.493432  1161 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:33.616917  1161 solver.cpp:219] Iteration 100 (809.834 iter/s, 0.123482s/100 iters), loss = 0.702326
I0428 20:18:33.616961  1161 solver.cpp:238]     Train net output #0: loss = 0.702326 (* 1 = 0.702326 loss)
I0428 20:18:33.616981  1161 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:33.742278  1161 solver.cpp:219] Iteration 200 (798.041 iter/s, 0.125307s/100 iters), loss = 0.313346
I0428 20:18:33.742306  1161 solver.cpp:238]     Train net output #0: loss = 0.313346 (* 1 = 0.313346 loss)
I0428 20:18:33.742313  1161 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:33.869493  1161 solver.cpp:219] Iteration 300 (786.32 iter/s, 0.127175s/100 iters), loss = 0.571635
I0428 20:18:33.869518  1161 solver.cpp:238]     Train net output #0: loss = 0.571635 (* 1 = 0.571635 loss)
I0428 20:18:33.869524  1161 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:33.989099  1161 solver.cpp:219] Iteration 400 (836.327 iter/s, 0.119571s/100 iters), loss = 0.253325
I0428 20:18:33.989140  1161 solver.cpp:238]     Train net output #0: loss = 0.253325 (* 1 = 0.253325 loss)
I0428 20:18:33.989161  1161 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:34.109680  1161 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:34.174214  1168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:34.176287  1161 solver.cpp:398]     Test net output #0: accuracy = 0.8693
I0428 20:18:34.176321  1161 solver.cpp:398]     Test net output #1: loss = 0.34266 (* 1 = 0.34266 loss)
I0428 20:18:34.177677  1161 solver.cpp:219] Iteration 500 (530.4 iter/s, 0.188537s/100 iters), loss = 0.303752
I0428 20:18:34.177728  1161 solver.cpp:238]     Train net output #0: loss = 0.303752 (* 1 = 0.303752 loss)
I0428 20:18:34.177738  1161 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:34.304759  1161 solver.cpp:219] Iteration 600 (787.265 iter/s, 0.127022s/100 iters), loss = 0.331
I0428 20:18:34.304785  1161 solver.cpp:238]     Train net output #0: loss = 0.331 (* 1 = 0.331 loss)
I0428 20:18:34.304791  1161 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:34.427526  1161 solver.cpp:219] Iteration 700 (814.793 iter/s, 0.122731s/100 iters), loss = 0.520098
I0428 20:18:34.427568  1161 solver.cpp:238]     Train net output #0: loss = 0.520098 (* 1 = 0.520098 loss)
I0428 20:18:34.427575  1161 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:34.559964  1161 solver.cpp:219] Iteration 800 (755.282 iter/s, 0.132401s/100 iters), loss = 0.455425
I0428 20:18:34.560005  1161 solver.cpp:238]     Train net output #0: loss = 0.455425 (* 1 = 0.455425 loss)
I0428 20:18:34.560029  1161 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:34.683677  1161 solver.cpp:219] Iteration 900 (808.567 iter/s, 0.123676s/100 iters), loss = 0.368611
I0428 20:18:34.683703  1161 solver.cpp:238]     Train net output #0: loss = 0.368611 (* 1 = 0.368611 loss)
I0428 20:18:34.683712  1161 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:34.723404  1167 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:34.801669  1161 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:34.803156  1161 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:34.804172  1161 solver.cpp:311] Iteration 1000, loss = 0.330719
I0428 20:18:34.804191  1161 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:34.913702  1168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:34.914588  1161 solver.cpp:398]     Test net output #0: accuracy = 0.8739
I0428 20:18:34.914628  1161 solver.cpp:398]     Test net output #1: loss = 0.320642 (* 1 = 0.320642 loss)
I0428 20:18:34.914638  1161 solver.cpp:316] Optimization Done.
I0428 20:18:34.914644  1161 caffe.cpp:259] Optimization Done.
