I0428 19:51:12.988961 27225 caffe.cpp:218] Using GPUs 0
I0428 19:51:13.026530 27225 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:13.551126 27225 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test627.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:13.551276 27225 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test627.prototxt
I0428 19:51:13.551659 27225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:13.551677 27225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:13.551767 27225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:13.551842 27225 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:13.551941 27225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:13.551966 27225 net.cpp:86] Creating Layer mnist
I0428 19:51:13.551973 27225 net.cpp:382] mnist -> data
I0428 19:51:13.551996 27225 net.cpp:382] mnist -> label
I0428 19:51:13.553102 27225 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:13.555559 27225 net.cpp:124] Setting up mnist
I0428 19:51:13.555578 27225 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:13.555585 27225 net.cpp:131] Top shape: 64 (64)
I0428 19:51:13.555588 27225 net.cpp:139] Memory required for data: 200960
I0428 19:51:13.555596 27225 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:13.555613 27225 net.cpp:86] Creating Layer conv0
I0428 19:51:13.555619 27225 net.cpp:408] conv0 <- data
I0428 19:51:13.555630 27225 net.cpp:382] conv0 -> conv0
I0428 19:51:13.845638 27225 net.cpp:124] Setting up conv0
I0428 19:51:13.845670 27225 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:13.845675 27225 net.cpp:139] Memory required for data: 938240
I0428 19:51:13.845715 27225 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:13.845731 27225 net.cpp:86] Creating Layer pool0
I0428 19:51:13.845736 27225 net.cpp:408] pool0 <- conv0
I0428 19:51:13.845742 27225 net.cpp:382] pool0 -> pool0
I0428 19:51:13.845801 27225 net.cpp:124] Setting up pool0
I0428 19:51:13.845810 27225 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:13.845815 27225 net.cpp:139] Memory required for data: 1122560
I0428 19:51:13.845819 27225 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:13.845832 27225 net.cpp:86] Creating Layer conv1
I0428 19:51:13.845836 27225 net.cpp:408] conv1 <- pool0
I0428 19:51:13.845842 27225 net.cpp:382] conv1 -> conv1
I0428 19:51:13.848996 27225 net.cpp:124] Setting up conv1
I0428 19:51:13.849014 27225 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:13.849020 27225 net.cpp:139] Memory required for data: 1532160
I0428 19:51:13.849030 27225 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:13.849042 27225 net.cpp:86] Creating Layer pool1
I0428 19:51:13.849047 27225 net.cpp:408] pool1 <- conv1
I0428 19:51:13.849053 27225 net.cpp:382] pool1 -> pool1
I0428 19:51:13.849102 27225 net.cpp:124] Setting up pool1
I0428 19:51:13.849112 27225 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:13.849115 27225 net.cpp:139] Memory required for data: 1634560
I0428 19:51:13.849119 27225 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:13.849128 27225 net.cpp:86] Creating Layer ip1
I0428 19:51:13.849131 27225 net.cpp:408] ip1 <- pool1
I0428 19:51:13.849138 27225 net.cpp:382] ip1 -> ip1
I0428 19:51:13.849287 27225 net.cpp:124] Setting up ip1
I0428 19:51:13.849295 27225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:13.849298 27225 net.cpp:139] Memory required for data: 1637120
I0428 19:51:13.849308 27225 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:13.849314 27225 net.cpp:86] Creating Layer relu1
I0428 19:51:13.849318 27225 net.cpp:408] relu1 <- ip1
I0428 19:51:13.849325 27225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:13.849531 27225 net.cpp:124] Setting up relu1
I0428 19:51:13.849542 27225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:13.849546 27225 net.cpp:139] Memory required for data: 1639680
I0428 19:51:13.849550 27225 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:13.849558 27225 net.cpp:86] Creating Layer ip2
I0428 19:51:13.849562 27225 net.cpp:408] ip2 <- ip1
I0428 19:51:13.849568 27225 net.cpp:382] ip2 -> ip2
I0428 19:51:13.849689 27225 net.cpp:124] Setting up ip2
I0428 19:51:13.849696 27225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:13.849700 27225 net.cpp:139] Memory required for data: 1642240
I0428 19:51:13.849707 27225 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:13.849714 27225 net.cpp:86] Creating Layer relu2
I0428 19:51:13.849719 27225 net.cpp:408] relu2 <- ip2
I0428 19:51:13.849725 27225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:13.850577 27225 net.cpp:124] Setting up relu2
I0428 19:51:13.850592 27225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:13.850596 27225 net.cpp:139] Memory required for data: 1644800
I0428 19:51:13.850600 27225 layer_factory.hpp:77] Creating layer loss
I0428 19:51:13.850612 27225 net.cpp:86] Creating Layer loss
I0428 19:51:13.850616 27225 net.cpp:408] loss <- ip2
I0428 19:51:13.850621 27225 net.cpp:408] loss <- label
I0428 19:51:13.850628 27225 net.cpp:382] loss -> loss
I0428 19:51:13.850651 27225 layer_factory.hpp:77] Creating layer loss
I0428 19:51:13.850947 27225 net.cpp:124] Setting up loss
I0428 19:51:13.850961 27225 net.cpp:131] Top shape: (1)
I0428 19:51:13.850965 27225 net.cpp:134]     with loss weight 1
I0428 19:51:13.850986 27225 net.cpp:139] Memory required for data: 1644804
I0428 19:51:13.850989 27225 net.cpp:200] loss needs backward computation.
I0428 19:51:13.850993 27225 net.cpp:200] relu2 needs backward computation.
I0428 19:51:13.850997 27225 net.cpp:200] ip2 needs backward computation.
I0428 19:51:13.851001 27225 net.cpp:200] relu1 needs backward computation.
I0428 19:51:13.851004 27225 net.cpp:200] ip1 needs backward computation.
I0428 19:51:13.851021 27225 net.cpp:200] pool1 needs backward computation.
I0428 19:51:13.851024 27225 net.cpp:200] conv1 needs backward computation.
I0428 19:51:13.851028 27225 net.cpp:200] pool0 needs backward computation.
I0428 19:51:13.851032 27225 net.cpp:200] conv0 needs backward computation.
I0428 19:51:13.851037 27225 net.cpp:202] mnist does not need backward computation.
I0428 19:51:13.851040 27225 net.cpp:244] This network produces output loss
I0428 19:51:13.851050 27225 net.cpp:257] Network initialization done.
I0428 19:51:13.851398 27225 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test627.prototxt
I0428 19:51:13.851429 27225 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:13.851533 27225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:13.851613 27225 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:13.851665 27225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:13.851681 27225 net.cpp:86] Creating Layer mnist
I0428 19:51:13.851688 27225 net.cpp:382] mnist -> data
I0428 19:51:13.851697 27225 net.cpp:382] mnist -> label
I0428 19:51:13.851805 27225 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:13.854002 27225 net.cpp:124] Setting up mnist
I0428 19:51:13.854019 27225 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:13.854025 27225 net.cpp:131] Top shape: 100 (100)
I0428 19:51:13.854029 27225 net.cpp:139] Memory required for data: 314000
I0428 19:51:13.854035 27225 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:13.854054 27225 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:13.854058 27225 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:13.854066 27225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:13.854074 27225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:13.854184 27225 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:13.854207 27225 net.cpp:131] Top shape: 100 (100)
I0428 19:51:13.854212 27225 net.cpp:131] Top shape: 100 (100)
I0428 19:51:13.854215 27225 net.cpp:139] Memory required for data: 314800
I0428 19:51:13.854219 27225 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:13.854233 27225 net.cpp:86] Creating Layer conv0
I0428 19:51:13.854238 27225 net.cpp:408] conv0 <- data
I0428 19:51:13.854243 27225 net.cpp:382] conv0 -> conv0
I0428 19:51:13.856007 27225 net.cpp:124] Setting up conv0
I0428 19:51:13.856024 27225 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:13.856029 27225 net.cpp:139] Memory required for data: 1466800
I0428 19:51:13.856040 27225 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:13.856050 27225 net.cpp:86] Creating Layer pool0
I0428 19:51:13.856053 27225 net.cpp:408] pool0 <- conv0
I0428 19:51:13.856060 27225 net.cpp:382] pool0 -> pool0
I0428 19:51:13.856103 27225 net.cpp:124] Setting up pool0
I0428 19:51:13.856114 27225 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:13.856118 27225 net.cpp:139] Memory required for data: 1754800
I0428 19:51:13.856122 27225 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:13.856134 27225 net.cpp:86] Creating Layer conv1
I0428 19:51:13.856138 27225 net.cpp:408] conv1 <- pool0
I0428 19:51:13.856147 27225 net.cpp:382] conv1 -> conv1
I0428 19:51:13.858561 27225 net.cpp:124] Setting up conv1
I0428 19:51:13.858579 27225 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:13.858584 27225 net.cpp:139] Memory required for data: 2394800
I0428 19:51:13.858594 27225 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:13.858603 27225 net.cpp:86] Creating Layer pool1
I0428 19:51:13.858608 27225 net.cpp:408] pool1 <- conv1
I0428 19:51:13.858614 27225 net.cpp:382] pool1 -> pool1
I0428 19:51:13.858701 27225 net.cpp:124] Setting up pool1
I0428 19:51:13.858711 27225 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:13.858714 27225 net.cpp:139] Memory required for data: 2554800
I0428 19:51:13.858718 27225 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:13.858727 27225 net.cpp:86] Creating Layer ip1
I0428 19:51:13.858731 27225 net.cpp:408] ip1 <- pool1
I0428 19:51:13.858738 27225 net.cpp:382] ip1 -> ip1
I0428 19:51:13.858891 27225 net.cpp:124] Setting up ip1
I0428 19:51:13.858902 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.858906 27225 net.cpp:139] Memory required for data: 2558800
I0428 19:51:13.858916 27225 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:13.858922 27225 net.cpp:86] Creating Layer relu1
I0428 19:51:13.858927 27225 net.cpp:408] relu1 <- ip1
I0428 19:51:13.858932 27225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:13.859146 27225 net.cpp:124] Setting up relu1
I0428 19:51:13.859158 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.859161 27225 net.cpp:139] Memory required for data: 2562800
I0428 19:51:13.859165 27225 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:13.859174 27225 net.cpp:86] Creating Layer ip2
I0428 19:51:13.859177 27225 net.cpp:408] ip2 <- ip1
I0428 19:51:13.859185 27225 net.cpp:382] ip2 -> ip2
I0428 19:51:13.859308 27225 net.cpp:124] Setting up ip2
I0428 19:51:13.859315 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.859324 27225 net.cpp:139] Memory required for data: 2566800
I0428 19:51:13.859330 27225 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:13.859336 27225 net.cpp:86] Creating Layer relu2
I0428 19:51:13.859340 27225 net.cpp:408] relu2 <- ip2
I0428 19:51:13.859346 27225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:13.859539 27225 net.cpp:124] Setting up relu2
I0428 19:51:13.859549 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.859552 27225 net.cpp:139] Memory required for data: 2570800
I0428 19:51:13.859556 27225 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:13.859562 27225 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:13.859566 27225 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:13.859575 27225 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:13.859593 27225 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:13.859637 27225 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:13.859645 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.859652 27225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:13.859654 27225 net.cpp:139] Memory required for data: 2578800
I0428 19:51:13.859658 27225 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:13.859664 27225 net.cpp:86] Creating Layer accuracy
I0428 19:51:13.859668 27225 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:13.859673 27225 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:13.859678 27225 net.cpp:382] accuracy -> accuracy
I0428 19:51:13.859688 27225 net.cpp:124] Setting up accuracy
I0428 19:51:13.859693 27225 net.cpp:131] Top shape: (1)
I0428 19:51:13.859695 27225 net.cpp:139] Memory required for data: 2578804
I0428 19:51:13.859699 27225 layer_factory.hpp:77] Creating layer loss
I0428 19:51:13.859706 27225 net.cpp:86] Creating Layer loss
I0428 19:51:13.859710 27225 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:13.859714 27225 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:13.859719 27225 net.cpp:382] loss -> loss
I0428 19:51:13.859726 27225 layer_factory.hpp:77] Creating layer loss
I0428 19:51:13.860011 27225 net.cpp:124] Setting up loss
I0428 19:51:13.860023 27225 net.cpp:131] Top shape: (1)
I0428 19:51:13.860026 27225 net.cpp:134]     with loss weight 1
I0428 19:51:13.860033 27225 net.cpp:139] Memory required for data: 2578808
I0428 19:51:13.860038 27225 net.cpp:200] loss needs backward computation.
I0428 19:51:13.860043 27225 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:13.860047 27225 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:13.860050 27225 net.cpp:200] relu2 needs backward computation.
I0428 19:51:13.860054 27225 net.cpp:200] ip2 needs backward computation.
I0428 19:51:13.860057 27225 net.cpp:200] relu1 needs backward computation.
I0428 19:51:13.860061 27225 net.cpp:200] ip1 needs backward computation.
I0428 19:51:13.860065 27225 net.cpp:200] pool1 needs backward computation.
I0428 19:51:13.860069 27225 net.cpp:200] conv1 needs backward computation.
I0428 19:51:13.860072 27225 net.cpp:200] pool0 needs backward computation.
I0428 19:51:13.860076 27225 net.cpp:200] conv0 needs backward computation.
I0428 19:51:13.860080 27225 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:13.860085 27225 net.cpp:202] mnist does not need backward computation.
I0428 19:51:13.860088 27225 net.cpp:244] This network produces output accuracy
I0428 19:51:13.860092 27225 net.cpp:244] This network produces output loss
I0428 19:51:13.860105 27225 net.cpp:257] Network initialization done.
I0428 19:51:13.860148 27225 solver.cpp:56] Solver scaffolding done.
I0428 19:51:13.860469 27225 caffe.cpp:248] Starting Optimization
I0428 19:51:13.860476 27225 solver.cpp:273] Solving LeNet
I0428 19:51:13.860481 27225 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:13.860641 27225 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:13.867642 27225 blocking_queue.cpp:49] Waiting for data
I0428 19:51:13.916188 27234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:13.916704 27225 solver.cpp:398]     Test net output #0: accuracy = 0.0997
I0428 19:51:13.916728 27225 solver.cpp:398]     Test net output #1: loss = 2.43685 (* 1 = 2.43685 loss)
I0428 19:51:13.918639 27225 solver.cpp:219] Iteration 0 (0 iter/s, 0.0581315s/100 iters), loss = 2.45424
I0428 19:51:13.918668 27225 solver.cpp:238]     Train net output #0: loss = 2.45424 (* 1 = 2.45424 loss)
I0428 19:51:13.918682 27225 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:14.002005 27225 solver.cpp:219] Iteration 100 (1200.15 iter/s, 0.0833228s/100 iters), loss = 1.22552
I0428 19:51:14.002039 27225 solver.cpp:238]     Train net output #0: loss = 1.22552 (* 1 = 1.22552 loss)
I0428 19:51:14.002048 27225 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:14.082065 27225 solver.cpp:219] Iteration 200 (1249.78 iter/s, 0.0800143s/100 iters), loss = 0.740842
I0428 19:51:14.082106 27225 solver.cpp:238]     Train net output #0: loss = 0.740842 (* 1 = 0.740842 loss)
I0428 19:51:14.082114 27225 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:14.159965 27225 solver.cpp:219] Iteration 300 (1284.51 iter/s, 0.0778507s/100 iters), loss = 0.918187
I0428 19:51:14.160001 27225 solver.cpp:238]     Train net output #0: loss = 0.918187 (* 1 = 0.918187 loss)
I0428 19:51:14.160006 27225 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:14.236389 27225 solver.cpp:219] Iteration 400 (1309.06 iter/s, 0.0763904s/100 iters), loss = 0.810463
I0428 19:51:14.236428 27225 solver.cpp:238]     Train net output #0: loss = 0.810463 (* 1 = 0.810463 loss)
I0428 19:51:14.236434 27225 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:14.313174 27225 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:14.357604 27234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:14.358084 27225 solver.cpp:398]     Test net output #0: accuracy = 0.8573
I0428 19:51:14.358103 27225 solver.cpp:398]     Test net output #1: loss = 0.450321 (* 1 = 0.450321 loss)
I0428 19:51:14.359016 27225 solver.cpp:219] Iteration 500 (815.719 iter/s, 0.122591s/100 iters), loss = 0.694704
I0428 19:51:14.359061 27225 solver.cpp:238]     Train net output #0: loss = 0.694704 (* 1 = 0.694704 loss)
I0428 19:51:14.359068 27225 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:14.449798 27225 solver.cpp:219] Iteration 600 (1102.17 iter/s, 0.0907301s/100 iters), loss = 0.228255
I0428 19:51:14.449857 27225 solver.cpp:238]     Train net output #0: loss = 0.228255 (* 1 = 0.228255 loss)
I0428 19:51:14.449867 27225 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:14.537575 27225 solver.cpp:219] Iteration 700 (1139.91 iter/s, 0.087726s/100 iters), loss = 0.284664
I0428 19:51:14.537618 27225 solver.cpp:238]     Train net output #0: loss = 0.284664 (* 1 = 0.284664 loss)
I0428 19:51:14.537624 27225 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:14.624847 27225 solver.cpp:219] Iteration 800 (1146.31 iter/s, 0.0872365s/100 iters), loss = 0.407062
I0428 19:51:14.624904 27225 solver.cpp:238]     Train net output #0: loss = 0.407062 (* 1 = 0.407062 loss)
I0428 19:51:14.624927 27225 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:14.702736 27225 solver.cpp:219] Iteration 900 (1284.95 iter/s, 0.077824s/100 iters), loss = 0.263545
I0428 19:51:14.702776 27225 solver.cpp:238]     Train net output #0: loss = 0.263545 (* 1 = 0.263545 loss)
I0428 19:51:14.702783 27225 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:14.728617 27231 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:14.779254 27225 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:14.780100 27225 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:14.780611 27225 solver.cpp:311] Iteration 1000, loss = 0.253718
I0428 19:51:14.780625 27225 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:14.841862 27234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:14.843791 27225 solver.cpp:398]     Test net output #0: accuracy = 0.9623
I0428 19:51:14.843837 27225 solver.cpp:398]     Test net output #1: loss = 0.121132 (* 1 = 0.121132 loss)
I0428 19:51:14.843847 27225 solver.cpp:316] Optimization Done.
I0428 19:51:14.843854 27225 caffe.cpp:259] Optimization Done.
