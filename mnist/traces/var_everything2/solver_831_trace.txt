I0428 19:58:51.950193 29100 caffe.cpp:218] Using GPUs 0
I0428 19:58:51.988369 29100 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:52.501929 29100 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test831.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:52.502076 29100 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test831.prototxt
I0428 19:58:52.502511 29100 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:52.502532 29100 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:52.502635 29100 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:52.502715 29100 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:52.502817 29100 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:52.502841 29100 net.cpp:86] Creating Layer mnist
I0428 19:58:52.502851 29100 net.cpp:382] mnist -> data
I0428 19:58:52.502874 29100 net.cpp:382] mnist -> label
I0428 19:58:52.503973 29100 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:52.506456 29100 net.cpp:124] Setting up mnist
I0428 19:58:52.506475 29100 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:52.506481 29100 net.cpp:131] Top shape: 64 (64)
I0428 19:58:52.506485 29100 net.cpp:139] Memory required for data: 200960
I0428 19:58:52.506492 29100 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:52.506510 29100 net.cpp:86] Creating Layer conv0
I0428 19:58:52.506531 29100 net.cpp:408] conv0 <- data
I0428 19:58:52.506546 29100 net.cpp:382] conv0 -> conv0
I0428 19:58:52.792152 29100 net.cpp:124] Setting up conv0
I0428 19:58:52.792181 29100 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:52.792184 29100 net.cpp:139] Memory required for data: 1675520
I0428 19:58:52.792199 29100 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:52.792212 29100 net.cpp:86] Creating Layer pool0
I0428 19:58:52.792217 29100 net.cpp:408] pool0 <- conv0
I0428 19:58:52.792222 29100 net.cpp:382] pool0 -> pool0
I0428 19:58:52.792268 29100 net.cpp:124] Setting up pool0
I0428 19:58:52.792273 29100 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:52.792276 29100 net.cpp:139] Memory required for data: 2044160
I0428 19:58:52.792279 29100 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:52.792289 29100 net.cpp:86] Creating Layer conv1
I0428 19:58:52.792294 29100 net.cpp:408] conv1 <- pool0
I0428 19:58:52.792297 29100 net.cpp:382] conv1 -> conv1
I0428 19:58:52.794885 29100 net.cpp:124] Setting up conv1
I0428 19:58:52.794899 29100 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:52.794903 29100 net.cpp:139] Memory required for data: 2208000
I0428 19:58:52.794912 29100 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:52.794919 29100 net.cpp:86] Creating Layer pool1
I0428 19:58:52.794924 29100 net.cpp:408] pool1 <- conv1
I0428 19:58:52.794929 29100 net.cpp:382] pool1 -> pool1
I0428 19:58:52.794965 29100 net.cpp:124] Setting up pool1
I0428 19:58:52.794981 29100 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:52.794983 29100 net.cpp:139] Memory required for data: 2248960
I0428 19:58:52.794986 29100 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:52.794993 29100 net.cpp:86] Creating Layer ip1
I0428 19:58:52.794996 29100 net.cpp:408] ip1 <- pool1
I0428 19:58:52.795001 29100 net.cpp:382] ip1 -> ip1
I0428 19:58:52.795104 29100 net.cpp:124] Setting up ip1
I0428 19:58:52.795111 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.795114 29100 net.cpp:139] Memory required for data: 2251520
I0428 19:58:52.795121 29100 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:52.795127 29100 net.cpp:86] Creating Layer relu1
I0428 19:58:52.795130 29100 net.cpp:408] relu1 <- ip1
I0428 19:58:52.795135 29100 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:52.795294 29100 net.cpp:124] Setting up relu1
I0428 19:58:52.795301 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.795305 29100 net.cpp:139] Memory required for data: 2254080
I0428 19:58:52.795307 29100 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:52.795313 29100 net.cpp:86] Creating Layer ip2
I0428 19:58:52.795317 29100 net.cpp:408] ip2 <- ip1
I0428 19:58:52.795321 29100 net.cpp:382] ip2 -> ip2
I0428 19:58:52.795413 29100 net.cpp:124] Setting up ip2
I0428 19:58:52.795420 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.795423 29100 net.cpp:139] Memory required for data: 2256640
I0428 19:58:52.795428 29100 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:52.795434 29100 net.cpp:86] Creating Layer relu2
I0428 19:58:52.795438 29100 net.cpp:408] relu2 <- ip2
I0428 19:58:52.795441 29100 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:52.796160 29100 net.cpp:124] Setting up relu2
I0428 19:58:52.796174 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.796178 29100 net.cpp:139] Memory required for data: 2259200
I0428 19:58:52.796181 29100 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:52.796188 29100 net.cpp:86] Creating Layer ip3
I0428 19:58:52.796192 29100 net.cpp:408] ip3 <- ip2
I0428 19:58:52.796197 29100 net.cpp:382] ip3 -> ip3
I0428 19:58:52.796309 29100 net.cpp:124] Setting up ip3
I0428 19:58:52.796316 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.796319 29100 net.cpp:139] Memory required for data: 2261760
I0428 19:58:52.796327 29100 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:52.796332 29100 net.cpp:86] Creating Layer relu3
I0428 19:58:52.796335 29100 net.cpp:408] relu3 <- ip3
I0428 19:58:52.796339 29100 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:52.796502 29100 net.cpp:124] Setting up relu3
I0428 19:58:52.796510 29100 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:52.796514 29100 net.cpp:139] Memory required for data: 2264320
I0428 19:58:52.796516 29100 layer_factory.hpp:77] Creating layer loss
I0428 19:58:52.796522 29100 net.cpp:86] Creating Layer loss
I0428 19:58:52.796525 29100 net.cpp:408] loss <- ip3
I0428 19:58:52.796530 29100 net.cpp:408] loss <- label
I0428 19:58:52.796535 29100 net.cpp:382] loss -> loss
I0428 19:58:52.796552 29100 layer_factory.hpp:77] Creating layer loss
I0428 19:58:52.796768 29100 net.cpp:124] Setting up loss
I0428 19:58:52.796777 29100 net.cpp:131] Top shape: (1)
I0428 19:58:52.796780 29100 net.cpp:134]     with loss weight 1
I0428 19:58:52.796794 29100 net.cpp:139] Memory required for data: 2264324
I0428 19:58:52.796797 29100 net.cpp:200] loss needs backward computation.
I0428 19:58:52.796802 29100 net.cpp:200] relu3 needs backward computation.
I0428 19:58:52.796804 29100 net.cpp:200] ip3 needs backward computation.
I0428 19:58:52.796808 29100 net.cpp:200] relu2 needs backward computation.
I0428 19:58:52.796815 29100 net.cpp:200] ip2 needs backward computation.
I0428 19:58:52.796818 29100 net.cpp:200] relu1 needs backward computation.
I0428 19:58:52.796821 29100 net.cpp:200] ip1 needs backward computation.
I0428 19:58:52.796824 29100 net.cpp:200] pool1 needs backward computation.
I0428 19:58:52.796828 29100 net.cpp:200] conv1 needs backward computation.
I0428 19:58:52.796846 29100 net.cpp:200] pool0 needs backward computation.
I0428 19:58:52.796849 29100 net.cpp:200] conv0 needs backward computation.
I0428 19:58:52.796854 29100 net.cpp:202] mnist does not need backward computation.
I0428 19:58:52.796855 29100 net.cpp:244] This network produces output loss
I0428 19:58:52.796865 29100 net.cpp:257] Network initialization done.
I0428 19:58:52.797276 29100 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test831.prototxt
I0428 19:58:52.797317 29100 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:52.797411 29100 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:52.797505 29100 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:52.797549 29100 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:52.797560 29100 net.cpp:86] Creating Layer mnist
I0428 19:58:52.797564 29100 net.cpp:382] mnist -> data
I0428 19:58:52.797572 29100 net.cpp:382] mnist -> label
I0428 19:58:52.797657 29100 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:52.799492 29100 net.cpp:124] Setting up mnist
I0428 19:58:52.799505 29100 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:52.799510 29100 net.cpp:131] Top shape: 100 (100)
I0428 19:58:52.799512 29100 net.cpp:139] Memory required for data: 314000
I0428 19:58:52.799516 29100 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:52.799532 29100 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:52.799535 29100 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:52.799542 29100 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:52.799548 29100 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:52.799589 29100 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:52.799597 29100 net.cpp:131] Top shape: 100 (100)
I0428 19:58:52.799599 29100 net.cpp:131] Top shape: 100 (100)
I0428 19:58:52.799602 29100 net.cpp:139] Memory required for data: 314800
I0428 19:58:52.799605 29100 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:52.799618 29100 net.cpp:86] Creating Layer conv0
I0428 19:58:52.799620 29100 net.cpp:408] conv0 <- data
I0428 19:58:52.799625 29100 net.cpp:382] conv0 -> conv0
I0428 19:58:52.801267 29100 net.cpp:124] Setting up conv0
I0428 19:58:52.801281 29100 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:52.801285 29100 net.cpp:139] Memory required for data: 2618800
I0428 19:58:52.801295 29100 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:52.801301 29100 net.cpp:86] Creating Layer pool0
I0428 19:58:52.801304 29100 net.cpp:408] pool0 <- conv0
I0428 19:58:52.801309 29100 net.cpp:382] pool0 -> pool0
I0428 19:58:52.801347 29100 net.cpp:124] Setting up pool0
I0428 19:58:52.801352 29100 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:52.801355 29100 net.cpp:139] Memory required for data: 3194800
I0428 19:58:52.801358 29100 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:52.801367 29100 net.cpp:86] Creating Layer conv1
I0428 19:58:52.801370 29100 net.cpp:408] conv1 <- pool0
I0428 19:58:52.801375 29100 net.cpp:382] conv1 -> conv1
I0428 19:58:52.803514 29100 net.cpp:124] Setting up conv1
I0428 19:58:52.803527 29100 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:52.803531 29100 net.cpp:139] Memory required for data: 3450800
I0428 19:58:52.803541 29100 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:52.803550 29100 net.cpp:86] Creating Layer pool1
I0428 19:58:52.803552 29100 net.cpp:408] pool1 <- conv1
I0428 19:58:52.803557 29100 net.cpp:382] pool1 -> pool1
I0428 19:58:52.803642 29100 net.cpp:124] Setting up pool1
I0428 19:58:52.803650 29100 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:52.803653 29100 net.cpp:139] Memory required for data: 3514800
I0428 19:58:52.803674 29100 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:52.803681 29100 net.cpp:86] Creating Layer ip1
I0428 19:58:52.803684 29100 net.cpp:408] ip1 <- pool1
I0428 19:58:52.803691 29100 net.cpp:382] ip1 -> ip1
I0428 19:58:52.803808 29100 net.cpp:124] Setting up ip1
I0428 19:58:52.803817 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.803829 29100 net.cpp:139] Memory required for data: 3518800
I0428 19:58:52.803838 29100 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:52.803844 29100 net.cpp:86] Creating Layer relu1
I0428 19:58:52.803848 29100 net.cpp:408] relu1 <- ip1
I0428 19:58:52.803853 29100 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:52.804031 29100 net.cpp:124] Setting up relu1
I0428 19:58:52.804040 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.804045 29100 net.cpp:139] Memory required for data: 3522800
I0428 19:58:52.804049 29100 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:52.804055 29100 net.cpp:86] Creating Layer ip2
I0428 19:58:52.804059 29100 net.cpp:408] ip2 <- ip1
I0428 19:58:52.804064 29100 net.cpp:382] ip2 -> ip2
I0428 19:58:52.804175 29100 net.cpp:124] Setting up ip2
I0428 19:58:52.804183 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.804185 29100 net.cpp:139] Memory required for data: 3526800
I0428 19:58:52.804190 29100 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:52.804196 29100 net.cpp:86] Creating Layer relu2
I0428 19:58:52.804199 29100 net.cpp:408] relu2 <- ip2
I0428 19:58:52.804203 29100 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:52.804425 29100 net.cpp:124] Setting up relu2
I0428 19:58:52.804435 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.804437 29100 net.cpp:139] Memory required for data: 3530800
I0428 19:58:52.804440 29100 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:52.804446 29100 net.cpp:86] Creating Layer ip3
I0428 19:58:52.804450 29100 net.cpp:408] ip3 <- ip2
I0428 19:58:52.804456 29100 net.cpp:382] ip3 -> ip3
I0428 19:58:52.804553 29100 net.cpp:124] Setting up ip3
I0428 19:58:52.804559 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.804563 29100 net.cpp:139] Memory required for data: 3534800
I0428 19:58:52.804570 29100 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:52.804574 29100 net.cpp:86] Creating Layer relu3
I0428 19:58:52.804577 29100 net.cpp:408] relu3 <- ip3
I0428 19:58:52.804584 29100 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:52.805457 29100 net.cpp:124] Setting up relu3
I0428 19:58:52.805470 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.805474 29100 net.cpp:139] Memory required for data: 3538800
I0428 19:58:52.805477 29100 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:52.805482 29100 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:52.805485 29100 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:52.805491 29100 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:52.805497 29100 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:52.805533 29100 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:52.805541 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.805546 29100 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:52.805547 29100 net.cpp:139] Memory required for data: 3546800
I0428 19:58:52.805550 29100 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:52.805555 29100 net.cpp:86] Creating Layer accuracy
I0428 19:58:52.805557 29100 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:52.805562 29100 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:52.805565 29100 net.cpp:382] accuracy -> accuracy
I0428 19:58:52.805572 29100 net.cpp:124] Setting up accuracy
I0428 19:58:52.805577 29100 net.cpp:131] Top shape: (1)
I0428 19:58:52.805579 29100 net.cpp:139] Memory required for data: 3546804
I0428 19:58:52.805582 29100 layer_factory.hpp:77] Creating layer loss
I0428 19:58:52.805588 29100 net.cpp:86] Creating Layer loss
I0428 19:58:52.805590 29100 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:52.805593 29100 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:52.805598 29100 net.cpp:382] loss -> loss
I0428 19:58:52.805603 29100 layer_factory.hpp:77] Creating layer loss
I0428 19:58:52.805853 29100 net.cpp:124] Setting up loss
I0428 19:58:52.805862 29100 net.cpp:131] Top shape: (1)
I0428 19:58:52.805866 29100 net.cpp:134]     with loss weight 1
I0428 19:58:52.805872 29100 net.cpp:139] Memory required for data: 3546808
I0428 19:58:52.805902 29100 net.cpp:200] loss needs backward computation.
I0428 19:58:52.805905 29100 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:52.805909 29100 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:52.805912 29100 net.cpp:200] relu3 needs backward computation.
I0428 19:58:52.805914 29100 net.cpp:200] ip3 needs backward computation.
I0428 19:58:52.805917 29100 net.cpp:200] relu2 needs backward computation.
I0428 19:58:52.805920 29100 net.cpp:200] ip2 needs backward computation.
I0428 19:58:52.805922 29100 net.cpp:200] relu1 needs backward computation.
I0428 19:58:52.805925 29100 net.cpp:200] ip1 needs backward computation.
I0428 19:58:52.805928 29100 net.cpp:200] pool1 needs backward computation.
I0428 19:58:52.805932 29100 net.cpp:200] conv1 needs backward computation.
I0428 19:58:52.805934 29100 net.cpp:200] pool0 needs backward computation.
I0428 19:58:52.805938 29100 net.cpp:200] conv0 needs backward computation.
I0428 19:58:52.805943 29100 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:52.805945 29100 net.cpp:202] mnist does not need backward computation.
I0428 19:58:52.805948 29100 net.cpp:244] This network produces output accuracy
I0428 19:58:52.805951 29100 net.cpp:244] This network produces output loss
I0428 19:58:52.805963 29100 net.cpp:257] Network initialization done.
I0428 19:58:52.806002 29100 solver.cpp:56] Solver scaffolding done.
I0428 19:58:52.806399 29100 caffe.cpp:248] Starting Optimization
I0428 19:58:52.806406 29100 solver.cpp:273] Solving LeNet
I0428 19:58:52.806409 29100 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:52.806581 29100 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:52.813510 29100 blocking_queue.cpp:49] Waiting for data
I0428 19:58:52.861519 29108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:52.862035 29100 solver.cpp:398]     Test net output #0: accuracy = 0.1076
I0428 19:58:52.862067 29100 solver.cpp:398]     Test net output #1: loss = 2.35086 (* 1 = 2.35086 loss)
I0428 19:58:52.864531 29100 solver.cpp:219] Iteration 0 (-1.42372e-42 iter/s, 0.0580965s/100 iters), loss = 2.3082
I0428 19:58:52.864552 29100 solver.cpp:238]     Train net output #0: loss = 2.3082 (* 1 = 2.3082 loss)
I0428 19:58:52.864564 29100 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:52.941609 29100 solver.cpp:219] Iteration 100 (1297.95 iter/s, 0.0770447s/100 iters), loss = 1.72479
I0428 19:58:52.941650 29100 solver.cpp:238]     Train net output #0: loss = 1.72479 (* 1 = 1.72479 loss)
I0428 19:58:52.941656 29100 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:53.019664 29100 solver.cpp:219] Iteration 200 (1281.69 iter/s, 0.0780217s/100 iters), loss = 0.826132
I0428 19:58:53.019701 29100 solver.cpp:238]     Train net output #0: loss = 0.826132 (* 1 = 0.826132 loss)
I0428 19:58:53.019706 29100 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:53.097399 29100 solver.cpp:219] Iteration 300 (1286.91 iter/s, 0.0777052s/100 iters), loss = 0.612642
I0428 19:58:53.097437 29100 solver.cpp:238]     Train net output #0: loss = 0.612642 (* 1 = 0.612642 loss)
I0428 19:58:53.097443 29100 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:53.175094 29100 solver.cpp:219] Iteration 400 (1287.61 iter/s, 0.0776632s/100 iters), loss = 0.470023
I0428 19:58:53.175132 29100 solver.cpp:238]     Train net output #0: loss = 0.470023 (* 1 = 0.470023 loss)
I0428 19:58:53.175138 29100 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:53.250885 29100 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:53.297253 29108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:53.297806 29100 solver.cpp:398]     Test net output #0: accuracy = 0.9238
I0428 19:58:53.297823 29100 solver.cpp:398]     Test net output #1: loss = 0.249422 (* 1 = 0.249422 loss)
I0428 19:58:53.298635 29100 solver.cpp:219] Iteration 500 (809.685 iter/s, 0.123505s/100 iters), loss = 0.276539
I0428 19:58:53.298681 29100 solver.cpp:238]     Train net output #0: loss = 0.276539 (* 1 = 0.276539 loss)
I0428 19:58:53.298687 29100 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:53.387759 29100 solver.cpp:219] Iteration 600 (1122.69 iter/s, 0.0890718s/100 iters), loss = 0.203126
I0428 19:58:53.387797 29100 solver.cpp:238]     Train net output #0: loss = 0.203126 (* 1 = 0.203126 loss)
I0428 19:58:53.387804 29100 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:53.467833 29100 solver.cpp:219] Iteration 700 (1249.36 iter/s, 0.0800412s/100 iters), loss = 0.298933
I0428 19:58:53.467874 29100 solver.cpp:238]     Train net output #0: loss = 0.298933 (* 1 = 0.298933 loss)
I0428 19:58:53.467880 29100 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:53.546080 29100 solver.cpp:219] Iteration 800 (1278.56 iter/s, 0.0782131s/100 iters), loss = 0.205185
I0428 19:58:53.546120 29100 solver.cpp:238]     Train net output #0: loss = 0.205185 (* 1 = 0.205185 loss)
I0428 19:58:53.546126 29100 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:53.624200 29100 solver.cpp:219] Iteration 900 (1280.64 iter/s, 0.0780861s/100 iters), loss = 0.456724
I0428 19:58:53.624240 29100 solver.cpp:238]     Train net output #0: loss = 0.456725 (* 1 = 0.456725 loss)
I0428 19:58:53.624246 29100 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:53.650005 29107 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:53.700420 29100 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:53.701313 29100 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:53.701787 29100 solver.cpp:311] Iteration 1000, loss = 0.100785
I0428 19:58:53.701803 29100 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:53.748890 29108 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:53.749446 29100 solver.cpp:398]     Test net output #0: accuracy = 0.9493
I0428 19:58:53.749478 29100 solver.cpp:398]     Test net output #1: loss = 0.17407 (* 1 = 0.17407 loss)
I0428 19:58:53.749483 29100 solver.cpp:316] Optimization Done.
I0428 19:58:53.749486 29100 caffe.cpp:259] Optimization Done.
