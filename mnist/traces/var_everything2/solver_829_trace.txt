I0428 19:58:47.737912 29084 caffe.cpp:218] Using GPUs 0
I0428 19:58:47.775053 29084 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:48.293756 29084 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test829.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:48.293895 29084 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test829.prototxt
I0428 19:58:48.294271 29084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:48.294288 29084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:48.294379 29084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:48.294457 29084 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:48.294555 29084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:48.294579 29084 net.cpp:86] Creating Layer mnist
I0428 19:58:48.294587 29084 net.cpp:382] mnist -> data
I0428 19:58:48.294610 29084 net.cpp:382] mnist -> label
I0428 19:58:48.295703 29084 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:48.298388 29084 net.cpp:124] Setting up mnist
I0428 19:58:48.298405 29084 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:48.298413 29084 net.cpp:131] Top shape: 64 (64)
I0428 19:58:48.298416 29084 net.cpp:139] Memory required for data: 200960
I0428 19:58:48.298424 29084 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:48.298439 29084 net.cpp:86] Creating Layer conv0
I0428 19:58:48.298444 29084 net.cpp:408] conv0 <- data
I0428 19:58:48.298456 29084 net.cpp:382] conv0 -> conv0
I0428 19:58:48.585983 29084 net.cpp:124] Setting up conv0
I0428 19:58:48.586014 29084 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:48.586019 29084 net.cpp:139] Memory required for data: 1675520
I0428 19:58:48.586058 29084 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:48.586074 29084 net.cpp:86] Creating Layer pool0
I0428 19:58:48.586079 29084 net.cpp:408] pool0 <- conv0
I0428 19:58:48.586086 29084 net.cpp:382] pool0 -> pool0
I0428 19:58:48.586145 29084 net.cpp:124] Setting up pool0
I0428 19:58:48.586154 29084 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:48.586158 29084 net.cpp:139] Memory required for data: 2044160
I0428 19:58:48.586163 29084 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:48.586174 29084 net.cpp:86] Creating Layer conv1
I0428 19:58:48.586179 29084 net.cpp:408] conv1 <- pool0
I0428 19:58:48.586184 29084 net.cpp:382] conv1 -> conv1
I0428 19:58:48.589315 29084 net.cpp:124] Setting up conv1
I0428 19:58:48.589334 29084 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:48.589339 29084 net.cpp:139] Memory required for data: 2208000
I0428 19:58:48.589349 29084 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:48.589357 29084 net.cpp:86] Creating Layer pool1
I0428 19:58:48.589363 29084 net.cpp:408] pool1 <- conv1
I0428 19:58:48.589370 29084 net.cpp:382] pool1 -> pool1
I0428 19:58:48.589416 29084 net.cpp:124] Setting up pool1
I0428 19:58:48.589421 29084 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:48.589426 29084 net.cpp:139] Memory required for data: 2248960
I0428 19:58:48.589429 29084 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:48.589442 29084 net.cpp:86] Creating Layer ip1
I0428 19:58:48.589447 29084 net.cpp:408] ip1 <- pool1
I0428 19:58:48.589452 29084 net.cpp:382] ip1 -> ip1
I0428 19:58:48.590582 29084 net.cpp:124] Setting up ip1
I0428 19:58:48.590597 29084 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:48.590601 29084 net.cpp:139] Memory required for data: 2261760
I0428 19:58:48.590611 29084 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:48.590618 29084 net.cpp:86] Creating Layer relu1
I0428 19:58:48.590622 29084 net.cpp:408] relu1 <- ip1
I0428 19:58:48.590628 29084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:48.590832 29084 net.cpp:124] Setting up relu1
I0428 19:58:48.590843 29084 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:48.590847 29084 net.cpp:139] Memory required for data: 2274560
I0428 19:58:48.590852 29084 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:48.590858 29084 net.cpp:86] Creating Layer ip2
I0428 19:58:48.590862 29084 net.cpp:408] ip2 <- ip1
I0428 19:58:48.590868 29084 net.cpp:382] ip2 -> ip2
I0428 19:58:48.590986 29084 net.cpp:124] Setting up ip2
I0428 19:58:48.590996 29084 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:48.590998 29084 net.cpp:139] Memory required for data: 2277120
I0428 19:58:48.591006 29084 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:48.591012 29084 net.cpp:86] Creating Layer relu2
I0428 19:58:48.591017 29084 net.cpp:408] relu2 <- ip2
I0428 19:58:48.591022 29084 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:48.591872 29084 net.cpp:124] Setting up relu2
I0428 19:58:48.591888 29084 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:48.591892 29084 net.cpp:139] Memory required for data: 2279680
I0428 19:58:48.591897 29084 layer_factory.hpp:77] Creating layer loss
I0428 19:58:48.591904 29084 net.cpp:86] Creating Layer loss
I0428 19:58:48.591908 29084 net.cpp:408] loss <- ip2
I0428 19:58:48.591913 29084 net.cpp:408] loss <- label
I0428 19:58:48.591920 29084 net.cpp:382] loss -> loss
I0428 19:58:48.591943 29084 layer_factory.hpp:77] Creating layer loss
I0428 19:58:48.592221 29084 net.cpp:124] Setting up loss
I0428 19:58:48.592231 29084 net.cpp:131] Top shape: (1)
I0428 19:58:48.592236 29084 net.cpp:134]     with loss weight 1
I0428 19:58:48.592254 29084 net.cpp:139] Memory required for data: 2279684
I0428 19:58:48.592259 29084 net.cpp:200] loss needs backward computation.
I0428 19:58:48.592264 29084 net.cpp:200] relu2 needs backward computation.
I0428 19:58:48.592267 29084 net.cpp:200] ip2 needs backward computation.
I0428 19:58:48.592272 29084 net.cpp:200] relu1 needs backward computation.
I0428 19:58:48.592275 29084 net.cpp:200] ip1 needs backward computation.
I0428 19:58:48.592291 29084 net.cpp:200] pool1 needs backward computation.
I0428 19:58:48.592296 29084 net.cpp:200] conv1 needs backward computation.
I0428 19:58:48.592300 29084 net.cpp:200] pool0 needs backward computation.
I0428 19:58:48.592303 29084 net.cpp:200] conv0 needs backward computation.
I0428 19:58:48.592308 29084 net.cpp:202] mnist does not need backward computation.
I0428 19:58:48.592311 29084 net.cpp:244] This network produces output loss
I0428 19:58:48.592321 29084 net.cpp:257] Network initialization done.
I0428 19:58:48.592666 29084 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test829.prototxt
I0428 19:58:48.592696 29084 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:48.592806 29084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:48.592892 29084 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:48.592947 29084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:48.592962 29084 net.cpp:86] Creating Layer mnist
I0428 19:58:48.592967 29084 net.cpp:382] mnist -> data
I0428 19:58:48.592975 29084 net.cpp:382] mnist -> label
I0428 19:58:48.593078 29084 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:48.595252 29084 net.cpp:124] Setting up mnist
I0428 19:58:48.595268 29084 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:48.595273 29084 net.cpp:131] Top shape: 100 (100)
I0428 19:58:48.595276 29084 net.cpp:139] Memory required for data: 314000
I0428 19:58:48.595281 29084 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:48.595293 29084 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:48.595299 29084 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:48.595304 29084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:48.595312 29084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:48.595367 29084 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:48.595386 29084 net.cpp:131] Top shape: 100 (100)
I0428 19:58:48.595391 29084 net.cpp:131] Top shape: 100 (100)
I0428 19:58:48.595394 29084 net.cpp:139] Memory required for data: 314800
I0428 19:58:48.595398 29084 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:48.595408 29084 net.cpp:86] Creating Layer conv0
I0428 19:58:48.595412 29084 net.cpp:408] conv0 <- data
I0428 19:58:48.595418 29084 net.cpp:382] conv0 -> conv0
I0428 19:58:48.597317 29084 net.cpp:124] Setting up conv0
I0428 19:58:48.597334 29084 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:48.597338 29084 net.cpp:139] Memory required for data: 2618800
I0428 19:58:48.597349 29084 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:48.597357 29084 net.cpp:86] Creating Layer pool0
I0428 19:58:48.597362 29084 net.cpp:408] pool0 <- conv0
I0428 19:58:48.597368 29084 net.cpp:382] pool0 -> pool0
I0428 19:58:48.597410 29084 net.cpp:124] Setting up pool0
I0428 19:58:48.597416 29084 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:48.597420 29084 net.cpp:139] Memory required for data: 3194800
I0428 19:58:48.597424 29084 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:48.597434 29084 net.cpp:86] Creating Layer conv1
I0428 19:58:48.597437 29084 net.cpp:408] conv1 <- pool0
I0428 19:58:48.597443 29084 net.cpp:382] conv1 -> conv1
I0428 19:58:48.599798 29084 net.cpp:124] Setting up conv1
I0428 19:58:48.599815 29084 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:48.599820 29084 net.cpp:139] Memory required for data: 3450800
I0428 19:58:48.599830 29084 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:48.599838 29084 net.cpp:86] Creating Layer pool1
I0428 19:58:48.599843 29084 net.cpp:408] pool1 <- conv1
I0428 19:58:48.599849 29084 net.cpp:382] pool1 -> pool1
I0428 19:58:48.599903 29084 net.cpp:124] Setting up pool1
I0428 19:58:48.599910 29084 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:48.599912 29084 net.cpp:139] Memory required for data: 3514800
I0428 19:58:48.599916 29084 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:48.599925 29084 net.cpp:86] Creating Layer ip1
I0428 19:58:48.599928 29084 net.cpp:408] ip1 <- pool1
I0428 19:58:48.599934 29084 net.cpp:382] ip1 -> ip1
I0428 19:58:48.600150 29084 net.cpp:124] Setting up ip1
I0428 19:58:48.600160 29084 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:48.600165 29084 net.cpp:139] Memory required for data: 3534800
I0428 19:58:48.600174 29084 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:48.600180 29084 net.cpp:86] Creating Layer relu1
I0428 19:58:48.600184 29084 net.cpp:408] relu1 <- ip1
I0428 19:58:48.600190 29084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:48.600397 29084 net.cpp:124] Setting up relu1
I0428 19:58:48.600410 29084 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:48.600421 29084 net.cpp:139] Memory required for data: 3554800
I0428 19:58:48.600425 29084 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:48.600435 29084 net.cpp:86] Creating Layer ip2
I0428 19:58:48.600438 29084 net.cpp:408] ip2 <- ip1
I0428 19:58:48.600446 29084 net.cpp:382] ip2 -> ip2
I0428 19:58:48.600574 29084 net.cpp:124] Setting up ip2
I0428 19:58:48.600584 29084 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:48.600587 29084 net.cpp:139] Memory required for data: 3558800
I0428 19:58:48.600594 29084 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:48.600600 29084 net.cpp:86] Creating Layer relu2
I0428 19:58:48.600603 29084 net.cpp:408] relu2 <- ip2
I0428 19:58:48.600610 29084 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:48.600801 29084 net.cpp:124] Setting up relu2
I0428 19:58:48.600819 29084 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:48.600823 29084 net.cpp:139] Memory required for data: 3562800
I0428 19:58:48.600827 29084 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:48.600833 29084 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:48.600836 29084 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:48.600844 29084 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:48.600862 29084 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:48.600914 29084 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:48.600921 29084 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:48.600941 29084 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:48.600944 29084 net.cpp:139] Memory required for data: 3570800
I0428 19:58:48.600949 29084 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:48.600955 29084 net.cpp:86] Creating Layer accuracy
I0428 19:58:48.600958 29084 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:48.600962 29084 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:48.600967 29084 net.cpp:382] accuracy -> accuracy
I0428 19:58:48.600975 29084 net.cpp:124] Setting up accuracy
I0428 19:58:48.600980 29084 net.cpp:131] Top shape: (1)
I0428 19:58:48.600983 29084 net.cpp:139] Memory required for data: 3570804
I0428 19:58:48.600986 29084 layer_factory.hpp:77] Creating layer loss
I0428 19:58:48.600993 29084 net.cpp:86] Creating Layer loss
I0428 19:58:48.600998 29084 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:48.601002 29084 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:48.601008 29084 net.cpp:382] loss -> loss
I0428 19:58:48.601014 29084 layer_factory.hpp:77] Creating layer loss
I0428 19:58:48.601305 29084 net.cpp:124] Setting up loss
I0428 19:58:48.601320 29084 net.cpp:131] Top shape: (1)
I0428 19:58:48.601325 29084 net.cpp:134]     with loss weight 1
I0428 19:58:48.601331 29084 net.cpp:139] Memory required for data: 3570808
I0428 19:58:48.601336 29084 net.cpp:200] loss needs backward computation.
I0428 19:58:48.601341 29084 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:48.601346 29084 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:48.601351 29084 net.cpp:200] relu2 needs backward computation.
I0428 19:58:48.601354 29084 net.cpp:200] ip2 needs backward computation.
I0428 19:58:48.601358 29084 net.cpp:200] relu1 needs backward computation.
I0428 19:58:48.601362 29084 net.cpp:200] ip1 needs backward computation.
I0428 19:58:48.601366 29084 net.cpp:200] pool1 needs backward computation.
I0428 19:58:48.601372 29084 net.cpp:200] conv1 needs backward computation.
I0428 19:58:48.601375 29084 net.cpp:200] pool0 needs backward computation.
I0428 19:58:48.601379 29084 net.cpp:200] conv0 needs backward computation.
I0428 19:58:48.601383 29084 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:48.601387 29084 net.cpp:202] mnist does not need backward computation.
I0428 19:58:48.601392 29084 net.cpp:244] This network produces output accuracy
I0428 19:58:48.601395 29084 net.cpp:244] This network produces output loss
I0428 19:58:48.601408 29084 net.cpp:257] Network initialization done.
I0428 19:58:48.601451 29084 solver.cpp:56] Solver scaffolding done.
I0428 19:58:48.601779 29084 caffe.cpp:248] Starting Optimization
I0428 19:58:48.601786 29084 solver.cpp:273] Solving LeNet
I0428 19:58:48.601789 29084 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:48.602674 29084 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:48.606791 29084 blocking_queue.cpp:49] Waiting for data
I0428 19:58:48.668781 29091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:48.669281 29084 solver.cpp:398]     Test net output #0: accuracy = 0.0728
I0428 19:58:48.669306 29084 solver.cpp:398]     Test net output #1: loss = 2.34441 (* 1 = 2.34441 loss)
I0428 19:58:48.671865 29084 solver.cpp:219] Iteration 0 (0 iter/s, 0.0700447s/100 iters), loss = 2.364
I0428 19:58:48.671893 29084 solver.cpp:238]     Train net output #0: loss = 2.364 (* 1 = 2.364 loss)
I0428 19:58:48.671906 29084 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:48.745710 29084 solver.cpp:219] Iteration 100 (1354.93 iter/s, 0.0738048s/100 iters), loss = 0.47933
I0428 19:58:48.745741 29084 solver.cpp:238]     Train net output #0: loss = 0.47933 (* 1 = 0.47933 loss)
I0428 19:58:48.745750 29084 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:48.819540 29084 solver.cpp:219] Iteration 200 (1355.25 iter/s, 0.0737874s/100 iters), loss = 0.338169
I0428 19:58:48.819582 29084 solver.cpp:238]     Train net output #0: loss = 0.338169 (* 1 = 0.338169 loss)
I0428 19:58:48.819591 29084 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:48.891332 29084 solver.cpp:219] Iteration 300 (1393.87 iter/s, 0.0717425s/100 iters), loss = 0.425417
I0428 19:58:48.891360 29084 solver.cpp:238]     Train net output #0: loss = 0.425417 (* 1 = 0.425417 loss)
I0428 19:58:48.891366 29084 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:48.962877 29084 solver.cpp:219] Iteration 400 (1398.45 iter/s, 0.071508s/100 iters), loss = 0.492497
I0428 19:58:48.962901 29084 solver.cpp:238]     Train net output #0: loss = 0.492497 (* 1 = 0.492497 loss)
I0428 19:58:48.962908 29084 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:49.032999 29084 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:49.086279 29091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:49.086772 29084 solver.cpp:398]     Test net output #0: accuracy = 0.9365
I0428 19:58:49.086807 29084 solver.cpp:398]     Test net output #1: loss = 0.360742 (* 1 = 0.360742 loss)
I0428 19:58:49.087620 29084 solver.cpp:219] Iteration 500 (801.887 iter/s, 0.124706s/100 iters), loss = 0.360648
I0428 19:58:49.087644 29084 solver.cpp:238]     Train net output #0: loss = 0.360648 (* 1 = 0.360648 loss)
I0428 19:58:49.087652 29084 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:49.170337 29084 solver.cpp:219] Iteration 600 (1209.42 iter/s, 0.082684s/100 iters), loss = 0.318274
I0428 19:58:49.170378 29084 solver.cpp:238]     Train net output #0: loss = 0.318274 (* 1 = 0.318274 loss)
I0428 19:58:49.170387 29084 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:49.242274 29084 solver.cpp:219] Iteration 700 (1390.78 iter/s, 0.0719023s/100 iters), loss = 0.387033
I0428 19:58:49.242300 29084 solver.cpp:238]     Train net output #0: loss = 0.387033 (* 1 = 0.387033 loss)
I0428 19:58:49.242308 29084 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:49.314307 29084 solver.cpp:219] Iteration 800 (1388.94 iter/s, 0.0719974s/100 iters), loss = 0.455857
I0428 19:58:49.314348 29084 solver.cpp:238]     Train net output #0: loss = 0.455857 (* 1 = 0.455857 loss)
I0428 19:58:49.314371 29084 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:49.385532 29084 solver.cpp:219] Iteration 900 (1404.66 iter/s, 0.0711915s/100 iters), loss = 0.315821
I0428 19:58:49.385560 29084 solver.cpp:238]     Train net output #0: loss = 0.315821 (* 1 = 0.315821 loss)
I0428 19:58:49.385568 29084 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:49.409584 29090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:49.455962 29084 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:49.456744 29084 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:49.457291 29084 solver.cpp:311] Iteration 1000, loss = 0.441179
I0428 19:58:49.457307 29084 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:49.532232 29091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:49.532716 29084 solver.cpp:398]     Test net output #0: accuracy = 0.9583
I0428 19:58:49.532737 29084 solver.cpp:398]     Test net output #1: loss = 0.325643 (* 1 = 0.325643 loss)
I0428 19:58:49.532742 29084 solver.cpp:316] Optimization Done.
I0428 19:58:49.532747 29084 caffe.cpp:259] Optimization Done.
