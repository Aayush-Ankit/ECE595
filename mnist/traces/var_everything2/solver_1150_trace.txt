I0428 20:11:04.319912 31998 caffe.cpp:218] Using GPUs 0
I0428 20:11:04.360960 31998 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:04.961140 31998 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1150.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:04.961295 31998 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1150.prototxt
I0428 20:11:04.961855 31998 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:04.961880 31998 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:04.962021 31998 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:04.962122 31998 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:04.962240 31998 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:04.962270 31998 net.cpp:86] Creating Layer mnist
I0428 20:11:04.962280 31998 net.cpp:382] mnist -> data
I0428 20:11:04.962308 31998 net.cpp:382] mnist -> label
I0428 20:11:04.963642 31998 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:04.966691 31998 net.cpp:124] Setting up mnist
I0428 20:11:04.966711 31998 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:04.966720 31998 net.cpp:131] Top shape: 64 (64)
I0428 20:11:04.966725 31998 net.cpp:139] Memory required for data: 200960
I0428 20:11:04.966734 31998 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:04.966755 31998 net.cpp:86] Creating Layer conv0
I0428 20:11:04.966779 31998 net.cpp:408] conv0 <- data
I0428 20:11:04.966795 31998 net.cpp:382] conv0 -> conv0
I0428 20:11:05.263284 31998 net.cpp:124] Setting up conv0
I0428 20:11:05.263331 31998 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:05.263348 31998 net.cpp:139] Memory required for data: 3887360
I0428 20:11:05.263368 31998 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:05.263398 31998 net.cpp:86] Creating Layer pool0
I0428 20:11:05.263404 31998 net.cpp:408] pool0 <- conv0
I0428 20:11:05.263412 31998 net.cpp:382] pool0 -> pool0
I0428 20:11:05.263466 31998 net.cpp:124] Setting up pool0
I0428 20:11:05.263475 31998 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:05.263480 31998 net.cpp:139] Memory required for data: 4808960
I0428 20:11:05.263484 31998 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:05.263497 31998 net.cpp:86] Creating Layer conv1
I0428 20:11:05.263504 31998 net.cpp:408] conv1 <- pool0
I0428 20:11:05.263511 31998 net.cpp:382] conv1 -> conv1
I0428 20:11:05.266412 31998 net.cpp:124] Setting up conv1
I0428 20:11:05.266444 31998 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:05.266449 31998 net.cpp:139] Memory required for data: 5628160
I0428 20:11:05.266461 31998 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:05.266470 31998 net.cpp:86] Creating Layer pool1
I0428 20:11:05.266475 31998 net.cpp:408] pool1 <- conv1
I0428 20:11:05.266497 31998 net.cpp:382] pool1 -> pool1
I0428 20:11:05.266541 31998 net.cpp:124] Setting up pool1
I0428 20:11:05.266551 31998 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:05.266556 31998 net.cpp:139] Memory required for data: 5832960
I0428 20:11:05.266561 31998 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:05.266569 31998 net.cpp:86] Creating Layer ip1
I0428 20:11:05.266574 31998 net.cpp:408] ip1 <- pool1
I0428 20:11:05.266582 31998 net.cpp:382] ip1 -> ip1
I0428 20:11:05.267931 31998 net.cpp:124] Setting up ip1
I0428 20:11:05.267961 31998 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:05.267966 31998 net.cpp:139] Memory required for data: 5835520
I0428 20:11:05.267977 31998 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:05.267985 31998 net.cpp:86] Creating Layer relu1
I0428 20:11:05.267990 31998 net.cpp:408] relu1 <- ip1
I0428 20:11:05.267997 31998 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:05.268226 31998 net.cpp:124] Setting up relu1
I0428 20:11:05.268239 31998 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:05.268244 31998 net.cpp:139] Memory required for data: 5838080
I0428 20:11:05.268249 31998 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:05.268257 31998 net.cpp:86] Creating Layer ip2
I0428 20:11:05.268261 31998 net.cpp:408] ip2 <- ip1
I0428 20:11:05.268286 31998 net.cpp:382] ip2 -> ip2
I0428 20:11:05.268436 31998 net.cpp:124] Setting up ip2
I0428 20:11:05.268446 31998 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:05.268451 31998 net.cpp:139] Memory required for data: 5850880
I0428 20:11:05.268460 31998 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:05.268470 31998 net.cpp:86] Creating Layer relu2
I0428 20:11:05.268477 31998 net.cpp:408] relu2 <- ip2
I0428 20:11:05.268483 31998 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:05.269543 31998 net.cpp:124] Setting up relu2
I0428 20:11:05.269574 31998 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:05.269579 31998 net.cpp:139] Memory required for data: 5863680
I0428 20:11:05.269584 31998 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:05.269594 31998 net.cpp:86] Creating Layer ip3
I0428 20:11:05.269598 31998 net.cpp:408] ip3 <- ip2
I0428 20:11:05.269608 31998 net.cpp:382] ip3 -> ip3
I0428 20:11:05.269762 31998 net.cpp:124] Setting up ip3
I0428 20:11:05.269773 31998 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:05.269776 31998 net.cpp:139] Memory required for data: 5866240
I0428 20:11:05.269786 31998 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:05.269793 31998 net.cpp:86] Creating Layer relu3
I0428 20:11:05.269798 31998 net.cpp:408] relu3 <- ip3
I0428 20:11:05.269805 31998 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:05.270021 31998 net.cpp:124] Setting up relu3
I0428 20:11:05.270032 31998 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:05.270036 31998 net.cpp:139] Memory required for data: 5868800
I0428 20:11:05.270041 31998 layer_factory.hpp:77] Creating layer loss
I0428 20:11:05.270051 31998 net.cpp:86] Creating Layer loss
I0428 20:11:05.270054 31998 net.cpp:408] loss <- ip3
I0428 20:11:05.270059 31998 net.cpp:408] loss <- label
I0428 20:11:05.270067 31998 net.cpp:382] loss -> loss
I0428 20:11:05.270084 31998 layer_factory.hpp:77] Creating layer loss
I0428 20:11:05.270409 31998 net.cpp:124] Setting up loss
I0428 20:11:05.270419 31998 net.cpp:131] Top shape: (1)
I0428 20:11:05.270439 31998 net.cpp:134]     with loss weight 1
I0428 20:11:05.270455 31998 net.cpp:139] Memory required for data: 5868804
I0428 20:11:05.270475 31998 net.cpp:200] loss needs backward computation.
I0428 20:11:05.270481 31998 net.cpp:200] relu3 needs backward computation.
I0428 20:11:05.270485 31998 net.cpp:200] ip3 needs backward computation.
I0428 20:11:05.270489 31998 net.cpp:200] relu2 needs backward computation.
I0428 20:11:05.270493 31998 net.cpp:200] ip2 needs backward computation.
I0428 20:11:05.270498 31998 net.cpp:200] relu1 needs backward computation.
I0428 20:11:05.270501 31998 net.cpp:200] ip1 needs backward computation.
I0428 20:11:05.270505 31998 net.cpp:200] pool1 needs backward computation.
I0428 20:11:05.270510 31998 net.cpp:200] conv1 needs backward computation.
I0428 20:11:05.270514 31998 net.cpp:200] pool0 needs backward computation.
I0428 20:11:05.270519 31998 net.cpp:200] conv0 needs backward computation.
I0428 20:11:05.270524 31998 net.cpp:202] mnist does not need backward computation.
I0428 20:11:05.270527 31998 net.cpp:244] This network produces output loss
I0428 20:11:05.270542 31998 net.cpp:257] Network initialization done.
I0428 20:11:05.271060 31998 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1150.prototxt
I0428 20:11:05.271111 31998 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:05.271250 31998 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:05.271386 31998 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:05.271440 31998 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:05.271456 31998 net.cpp:86] Creating Layer mnist
I0428 20:11:05.271462 31998 net.cpp:382] mnist -> data
I0428 20:11:05.271473 31998 net.cpp:382] mnist -> label
I0428 20:11:05.271595 31998 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:05.274230 31998 net.cpp:124] Setting up mnist
I0428 20:11:05.274261 31998 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:05.274268 31998 net.cpp:131] Top shape: 100 (100)
I0428 20:11:05.274272 31998 net.cpp:139] Memory required for data: 314000
I0428 20:11:05.274277 31998 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:05.274302 31998 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:05.274307 31998 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:05.274313 31998 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:05.274323 31998 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:05.274426 31998 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:05.274436 31998 net.cpp:131] Top shape: 100 (100)
I0428 20:11:05.274441 31998 net.cpp:131] Top shape: 100 (100)
I0428 20:11:05.274446 31998 net.cpp:139] Memory required for data: 314800
I0428 20:11:05.274451 31998 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:05.274462 31998 net.cpp:86] Creating Layer conv0
I0428 20:11:05.274466 31998 net.cpp:408] conv0 <- data
I0428 20:11:05.274474 31998 net.cpp:382] conv0 -> conv0
I0428 20:11:05.276510 31998 net.cpp:124] Setting up conv0
I0428 20:11:05.276545 31998 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:05.276549 31998 net.cpp:139] Memory required for data: 6074800
I0428 20:11:05.276564 31998 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:05.276572 31998 net.cpp:86] Creating Layer pool0
I0428 20:11:05.276577 31998 net.cpp:408] pool0 <- conv0
I0428 20:11:05.276585 31998 net.cpp:382] pool0 -> pool0
I0428 20:11:05.276633 31998 net.cpp:124] Setting up pool0
I0428 20:11:05.276643 31998 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:05.276648 31998 net.cpp:139] Memory required for data: 7514800
I0428 20:11:05.276653 31998 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:05.276664 31998 net.cpp:86] Creating Layer conv1
I0428 20:11:05.276670 31998 net.cpp:408] conv1 <- pool0
I0428 20:11:05.276679 31998 net.cpp:382] conv1 -> conv1
I0428 20:11:05.279127 31998 net.cpp:124] Setting up conv1
I0428 20:11:05.279145 31998 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:05.279151 31998 net.cpp:139] Memory required for data: 8794800
I0428 20:11:05.279163 31998 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:05.279175 31998 net.cpp:86] Creating Layer pool1
I0428 20:11:05.279182 31998 net.cpp:408] pool1 <- conv1
I0428 20:11:05.279191 31998 net.cpp:382] pool1 -> pool1
I0428 20:11:05.279239 31998 net.cpp:124] Setting up pool1
I0428 20:11:05.279250 31998 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:05.279271 31998 net.cpp:139] Memory required for data: 9114800
I0428 20:11:05.279276 31998 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:05.279285 31998 net.cpp:86] Creating Layer ip1
I0428 20:11:05.279289 31998 net.cpp:408] ip1 <- pool1
I0428 20:11:05.279299 31998 net.cpp:382] ip1 -> ip1
I0428 20:11:05.279510 31998 net.cpp:124] Setting up ip1
I0428 20:11:05.279521 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.279539 31998 net.cpp:139] Memory required for data: 9118800
I0428 20:11:05.279556 31998 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:05.279566 31998 net.cpp:86] Creating Layer relu1
I0428 20:11:05.279572 31998 net.cpp:408] relu1 <- ip1
I0428 20:11:05.279597 31998 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:05.279863 31998 net.cpp:124] Setting up relu1
I0428 20:11:05.279875 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.279881 31998 net.cpp:139] Memory required for data: 9122800
I0428 20:11:05.279886 31998 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:05.279897 31998 net.cpp:86] Creating Layer ip2
I0428 20:11:05.279904 31998 net.cpp:408] ip2 <- ip1
I0428 20:11:05.279911 31998 net.cpp:382] ip2 -> ip2
I0428 20:11:05.280076 31998 net.cpp:124] Setting up ip2
I0428 20:11:05.280087 31998 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:05.280098 31998 net.cpp:139] Memory required for data: 9142800
I0428 20:11:05.280107 31998 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:05.280114 31998 net.cpp:86] Creating Layer relu2
I0428 20:11:05.280118 31998 net.cpp:408] relu2 <- ip2
I0428 20:11:05.280125 31998 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:05.280323 31998 net.cpp:124] Setting up relu2
I0428 20:11:05.280338 31998 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:05.280342 31998 net.cpp:139] Memory required for data: 9162800
I0428 20:11:05.280346 31998 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:05.280372 31998 net.cpp:86] Creating Layer ip3
I0428 20:11:05.280390 31998 net.cpp:408] ip3 <- ip2
I0428 20:11:05.280397 31998 net.cpp:382] ip3 -> ip3
I0428 20:11:05.280556 31998 net.cpp:124] Setting up ip3
I0428 20:11:05.280567 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.280573 31998 net.cpp:139] Memory required for data: 9166800
I0428 20:11:05.280586 31998 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:05.280596 31998 net.cpp:86] Creating Layer relu3
I0428 20:11:05.280609 31998 net.cpp:408] relu3 <- ip3
I0428 20:11:05.280616 31998 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:05.281836 31998 net.cpp:124] Setting up relu3
I0428 20:11:05.281852 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.281857 31998 net.cpp:139] Memory required for data: 9170800
I0428 20:11:05.281862 31998 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:05.281883 31998 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:05.281889 31998 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:05.281896 31998 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:05.281904 31998 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:05.281965 31998 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:05.281972 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.281978 31998 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:05.281982 31998 net.cpp:139] Memory required for data: 9178800
I0428 20:11:05.281986 31998 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:05.281993 31998 net.cpp:86] Creating Layer accuracy
I0428 20:11:05.281998 31998 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:05.282006 31998 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:05.282012 31998 net.cpp:382] accuracy -> accuracy
I0428 20:11:05.282021 31998 net.cpp:124] Setting up accuracy
I0428 20:11:05.282029 31998 net.cpp:131] Top shape: (1)
I0428 20:11:05.282033 31998 net.cpp:139] Memory required for data: 9178804
I0428 20:11:05.282037 31998 layer_factory.hpp:77] Creating layer loss
I0428 20:11:05.282043 31998 net.cpp:86] Creating Layer loss
I0428 20:11:05.282048 31998 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:05.282053 31998 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:05.282061 31998 net.cpp:382] loss -> loss
I0428 20:11:05.282069 31998 layer_factory.hpp:77] Creating layer loss
I0428 20:11:05.282388 31998 net.cpp:124] Setting up loss
I0428 20:11:05.282399 31998 net.cpp:131] Top shape: (1)
I0428 20:11:05.282404 31998 net.cpp:134]     with loss weight 1
I0428 20:11:05.282425 31998 net.cpp:139] Memory required for data: 9178808
I0428 20:11:05.282430 31998 net.cpp:200] loss needs backward computation.
I0428 20:11:05.282435 31998 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:05.282441 31998 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:05.282445 31998 net.cpp:200] relu3 needs backward computation.
I0428 20:11:05.282450 31998 net.cpp:200] ip3 needs backward computation.
I0428 20:11:05.282454 31998 net.cpp:200] relu2 needs backward computation.
I0428 20:11:05.282459 31998 net.cpp:200] ip2 needs backward computation.
I0428 20:11:05.282464 31998 net.cpp:200] relu1 needs backward computation.
I0428 20:11:05.282467 31998 net.cpp:200] ip1 needs backward computation.
I0428 20:11:05.282472 31998 net.cpp:200] pool1 needs backward computation.
I0428 20:11:05.282477 31998 net.cpp:200] conv1 needs backward computation.
I0428 20:11:05.282482 31998 net.cpp:200] pool0 needs backward computation.
I0428 20:11:05.282486 31998 net.cpp:200] conv0 needs backward computation.
I0428 20:11:05.282492 31998 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:05.282497 31998 net.cpp:202] mnist does not need backward computation.
I0428 20:11:05.282501 31998 net.cpp:244] This network produces output accuracy
I0428 20:11:05.282507 31998 net.cpp:244] This network produces output loss
I0428 20:11:05.282523 31998 net.cpp:257] Network initialization done.
I0428 20:11:05.282596 31998 solver.cpp:56] Solver scaffolding done.
I0428 20:11:05.283056 31998 caffe.cpp:248] Starting Optimization
I0428 20:11:05.283064 31998 solver.cpp:273] Solving LeNet
I0428 20:11:05.283068 31998 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:05.284121 31998 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:05.292523 31998 blocking_queue.cpp:49] Waiting for data
I0428 20:11:05.361349 32005 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:05.362059 31998 solver.cpp:398]     Test net output #0: accuracy = 0.1288
I0428 20:11:05.362095 31998 solver.cpp:398]     Test net output #1: loss = 2.29589 (* 1 = 2.29589 loss)
I0428 20:11:05.366614 31998 solver.cpp:219] Iteration 0 (0 iter/s, 0.0835185s/100 iters), loss = 2.27578
I0428 20:11:05.366643 31998 solver.cpp:238]     Train net output #0: loss = 2.27578 (* 1 = 2.27578 loss)
I0428 20:11:05.366657 31998 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:05.495288 31998 solver.cpp:219] Iteration 100 (777.444 iter/s, 0.128627s/100 iters), loss = 0.90453
I0428 20:11:05.495319 31998 solver.cpp:238]     Train net output #0: loss = 0.90453 (* 1 = 0.90453 loss)
I0428 20:11:05.495343 31998 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:05.624439 31998 solver.cpp:219] Iteration 200 (774.546 iter/s, 0.129108s/100 iters), loss = 0.789164
I0428 20:11:05.624467 31998 solver.cpp:238]     Train net output #0: loss = 0.789164 (* 1 = 0.789164 loss)
I0428 20:11:05.624490 31998 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:05.756754 31998 solver.cpp:219] Iteration 300 (756 iter/s, 0.132275s/100 iters), loss = 0.467133
I0428 20:11:05.756783 31998 solver.cpp:238]     Train net output #0: loss = 0.467133 (* 1 = 0.467133 loss)
I0428 20:11:05.756793 31998 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:05.892498 31998 solver.cpp:219] Iteration 400 (736.911 iter/s, 0.135702s/100 iters), loss = 0.79206
I0428 20:11:05.892535 31998 solver.cpp:238]     Train net output #0: loss = 0.79206 (* 1 = 0.79206 loss)
I0428 20:11:05.892544 31998 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:06.020058 31998 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:06.096087 32005 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:06.096779 31998 solver.cpp:398]     Test net output #0: accuracy = 0.8622
I0428 20:11:06.096822 31998 solver.cpp:398]     Test net output #1: loss = 0.397995 (* 1 = 0.397995 loss)
I0428 20:11:06.098284 31998 solver.cpp:219] Iteration 500 (486.043 iter/s, 0.205743s/100 iters), loss = 0.45458
I0428 20:11:06.098342 31998 solver.cpp:238]     Train net output #0: loss = 0.45458 (* 1 = 0.45458 loss)
I0428 20:11:06.098368 31998 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:06.232105 31998 solver.cpp:219] Iteration 600 (747.568 iter/s, 0.133767s/100 iters), loss = 0.184
I0428 20:11:06.232151 31998 solver.cpp:238]     Train net output #0: loss = 0.184 (* 1 = 0.184 loss)
I0428 20:11:06.232159 31998 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:06.363750 31998 solver.cpp:219] Iteration 700 (759.947 iter/s, 0.131588s/100 iters), loss = 0.357013
I0428 20:11:06.363795 31998 solver.cpp:238]     Train net output #0: loss = 0.357013 (* 1 = 0.357013 loss)
I0428 20:11:06.363803 31998 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:06.492835 31998 solver.cpp:219] Iteration 800 (774.933 iter/s, 0.129043s/100 iters), loss = 0.461661
I0428 20:11:06.492869 31998 solver.cpp:238]     Train net output #0: loss = 0.461661 (* 1 = 0.461661 loss)
I0428 20:11:06.492878 31998 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:06.622670 31998 solver.cpp:219] Iteration 900 (770.476 iter/s, 0.12979s/100 iters), loss = 0.241227
I0428 20:11:06.622715 31998 solver.cpp:238]     Train net output #0: loss = 0.241227 (* 1 = 0.241227 loss)
I0428 20:11:06.622723 31998 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:06.666163 32004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:06.750891 31998 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:06.752732 31998 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:06.753898 31998 solver.cpp:311] Iteration 1000, loss = 0.173989
I0428 20:11:06.753916 31998 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:06.830341 32005 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:06.831123 31998 solver.cpp:398]     Test net output #0: accuracy = 0.8771
I0428 20:11:06.831161 31998 solver.cpp:398]     Test net output #1: loss = 0.319687 (* 1 = 0.319687 loss)
I0428 20:11:06.831182 31998 solver.cpp:316] Optimization Done.
I0428 20:11:06.831187 31998 caffe.cpp:259] Optimization Done.
