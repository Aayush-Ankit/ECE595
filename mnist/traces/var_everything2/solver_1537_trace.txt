I0428 20:30:20.468124  3707 caffe.cpp:218] Using GPUs 0
I0428 20:30:20.505374  3707 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:21.019629  3707 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1537.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:21.019768  3707 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1537.prototxt
I0428 20:30:21.020174  3707 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:21.020191  3707 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:21.020287  3707 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:21.020360  3707 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:21.020460  3707 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:21.020485  3707 net.cpp:86] Creating Layer mnist
I0428 20:30:21.020493  3707 net.cpp:382] mnist -> data
I0428 20:30:21.020516  3707 net.cpp:382] mnist -> label
I0428 20:30:21.021613  3707 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:21.024072  3707 net.cpp:124] Setting up mnist
I0428 20:30:21.024091  3707 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:21.024096  3707 net.cpp:131] Top shape: 64 (64)
I0428 20:30:21.024101  3707 net.cpp:139] Memory required for data: 200960
I0428 20:30:21.024107  3707 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:21.024123  3707 net.cpp:86] Creating Layer conv0
I0428 20:30:21.024144  3707 net.cpp:408] conv0 <- data
I0428 20:30:21.024157  3707 net.cpp:382] conv0 -> conv0
I0428 20:30:21.306440  3707 net.cpp:124] Setting up conv0
I0428 20:30:21.306468  3707 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:21.306471  3707 net.cpp:139] Memory required for data: 14946560
I0428 20:30:21.306486  3707 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:21.306499  3707 net.cpp:86] Creating Layer pool0
I0428 20:30:21.306504  3707 net.cpp:408] pool0 <- conv0
I0428 20:30:21.306509  3707 net.cpp:382] pool0 -> pool0
I0428 20:30:21.306552  3707 net.cpp:124] Setting up pool0
I0428 20:30:21.306558  3707 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:21.306561  3707 net.cpp:139] Memory required for data: 18632960
I0428 20:30:21.306565  3707 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:21.306576  3707 net.cpp:86] Creating Layer conv1
I0428 20:30:21.306577  3707 net.cpp:408] conv1 <- pool0
I0428 20:30:21.306582  3707 net.cpp:382] conv1 -> conv1
I0428 20:30:21.308542  3707 net.cpp:124] Setting up conv1
I0428 20:30:21.308573  3707 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:21.308576  3707 net.cpp:139] Memory required for data: 18796800
I0428 20:30:21.308585  3707 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:21.308594  3707 net.cpp:86] Creating Layer pool1
I0428 20:30:21.308598  3707 net.cpp:408] pool1 <- conv1
I0428 20:30:21.308603  3707 net.cpp:382] pool1 -> pool1
I0428 20:30:21.308640  3707 net.cpp:124] Setting up pool1
I0428 20:30:21.308646  3707 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:21.308650  3707 net.cpp:139] Memory required for data: 18837760
I0428 20:30:21.308652  3707 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:21.308660  3707 net.cpp:86] Creating Layer ip1
I0428 20:30:21.308663  3707 net.cpp:408] ip1 <- pool1
I0428 20:30:21.308668  3707 net.cpp:382] ip1 -> ip1
I0428 20:30:21.308847  3707 net.cpp:124] Setting up ip1
I0428 20:30:21.308856  3707 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:21.308859  3707 net.cpp:139] Memory required for data: 18840320
I0428 20:30:21.308867  3707 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:21.308872  3707 net.cpp:86] Creating Layer relu1
I0428 20:30:21.308876  3707 net.cpp:408] relu1 <- ip1
I0428 20:30:21.308881  3707 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:21.309057  3707 net.cpp:124] Setting up relu1
I0428 20:30:21.309067  3707 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:21.309070  3707 net.cpp:139] Memory required for data: 18842880
I0428 20:30:21.309087  3707 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:21.309094  3707 net.cpp:86] Creating Layer ip2
I0428 20:30:21.309098  3707 net.cpp:408] ip2 <- ip1
I0428 20:30:21.309103  3707 net.cpp:382] ip2 -> ip2
I0428 20:30:21.309211  3707 net.cpp:124] Setting up ip2
I0428 20:30:21.309219  3707 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:21.309222  3707 net.cpp:139] Memory required for data: 18849280
I0428 20:30:21.309227  3707 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:21.309234  3707 net.cpp:86] Creating Layer relu2
I0428 20:30:21.309237  3707 net.cpp:408] relu2 <- ip2
I0428 20:30:21.309242  3707 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:21.310034  3707 net.cpp:124] Setting up relu2
I0428 20:30:21.310045  3707 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:21.310065  3707 net.cpp:139] Memory required for data: 18855680
I0428 20:30:21.310067  3707 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:21.310075  3707 net.cpp:86] Creating Layer ip3
I0428 20:30:21.310080  3707 net.cpp:408] ip3 <- ip2
I0428 20:30:21.310084  3707 net.cpp:382] ip3 -> ip3
I0428 20:30:21.310195  3707 net.cpp:124] Setting up ip3
I0428 20:30:21.310204  3707 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:21.310206  3707 net.cpp:139] Memory required for data: 18858240
I0428 20:30:21.310214  3707 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:21.310220  3707 net.cpp:86] Creating Layer relu3
I0428 20:30:21.310222  3707 net.cpp:408] relu3 <- ip3
I0428 20:30:21.310226  3707 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:21.310396  3707 net.cpp:124] Setting up relu3
I0428 20:30:21.310405  3707 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:21.310408  3707 net.cpp:139] Memory required for data: 18860800
I0428 20:30:21.310411  3707 layer_factory.hpp:77] Creating layer loss
I0428 20:30:21.310417  3707 net.cpp:86] Creating Layer loss
I0428 20:30:21.310420  3707 net.cpp:408] loss <- ip3
I0428 20:30:21.310423  3707 net.cpp:408] loss <- label
I0428 20:30:21.310428  3707 net.cpp:382] loss -> loss
I0428 20:30:21.310442  3707 layer_factory.hpp:77] Creating layer loss
I0428 20:30:21.310653  3707 net.cpp:124] Setting up loss
I0428 20:30:21.310662  3707 net.cpp:131] Top shape: (1)
I0428 20:30:21.310665  3707 net.cpp:134]     with loss weight 1
I0428 20:30:21.310679  3707 net.cpp:139] Memory required for data: 18860804
I0428 20:30:21.310683  3707 net.cpp:200] loss needs backward computation.
I0428 20:30:21.310686  3707 net.cpp:200] relu3 needs backward computation.
I0428 20:30:21.310689  3707 net.cpp:200] ip3 needs backward computation.
I0428 20:30:21.310691  3707 net.cpp:200] relu2 needs backward computation.
I0428 20:30:21.310694  3707 net.cpp:200] ip2 needs backward computation.
I0428 20:30:21.310696  3707 net.cpp:200] relu1 needs backward computation.
I0428 20:30:21.310700  3707 net.cpp:200] ip1 needs backward computation.
I0428 20:30:21.310703  3707 net.cpp:200] pool1 needs backward computation.
I0428 20:30:21.310705  3707 net.cpp:200] conv1 needs backward computation.
I0428 20:30:21.310708  3707 net.cpp:200] pool0 needs backward computation.
I0428 20:30:21.310711  3707 net.cpp:200] conv0 needs backward computation.
I0428 20:30:21.310714  3707 net.cpp:202] mnist does not need backward computation.
I0428 20:30:21.310717  3707 net.cpp:244] This network produces output loss
I0428 20:30:21.310726  3707 net.cpp:257] Network initialization done.
I0428 20:30:21.311130  3707 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1537.prototxt
I0428 20:30:21.311187  3707 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:21.311333  3707 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:21.311417  3707 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:21.311458  3707 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:21.311475  3707 net.cpp:86] Creating Layer mnist
I0428 20:30:21.311480  3707 net.cpp:382] mnist -> data
I0428 20:30:21.311488  3707 net.cpp:382] mnist -> label
I0428 20:30:21.311589  3707 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:21.313642  3707 net.cpp:124] Setting up mnist
I0428 20:30:21.313654  3707 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:21.313660  3707 net.cpp:131] Top shape: 100 (100)
I0428 20:30:21.313663  3707 net.cpp:139] Memory required for data: 314000
I0428 20:30:21.313666  3707 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:21.313673  3707 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:21.313676  3707 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:21.313681  3707 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:21.313688  3707 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:21.313743  3707 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:21.313748  3707 net.cpp:131] Top shape: 100 (100)
I0428 20:30:21.313752  3707 net.cpp:131] Top shape: 100 (100)
I0428 20:30:21.313755  3707 net.cpp:139] Memory required for data: 314800
I0428 20:30:21.313757  3707 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:21.313766  3707 net.cpp:86] Creating Layer conv0
I0428 20:30:21.313769  3707 net.cpp:408] conv0 <- data
I0428 20:30:21.313776  3707 net.cpp:382] conv0 -> conv0
I0428 20:30:21.315629  3707 net.cpp:124] Setting up conv0
I0428 20:30:21.315659  3707 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:21.315662  3707 net.cpp:139] Memory required for data: 23354800
I0428 20:30:21.315670  3707 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:21.315677  3707 net.cpp:86] Creating Layer pool0
I0428 20:30:21.315680  3707 net.cpp:408] pool0 <- conv0
I0428 20:30:21.315686  3707 net.cpp:382] pool0 -> pool0
I0428 20:30:21.315723  3707 net.cpp:124] Setting up pool0
I0428 20:30:21.315728  3707 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:21.315732  3707 net.cpp:139] Memory required for data: 29114800
I0428 20:30:21.315733  3707 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:21.315742  3707 net.cpp:86] Creating Layer conv1
I0428 20:30:21.315745  3707 net.cpp:408] conv1 <- pool0
I0428 20:30:21.315752  3707 net.cpp:382] conv1 -> conv1
I0428 20:30:21.317550  3707 net.cpp:124] Setting up conv1
I0428 20:30:21.317565  3707 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:21.317569  3707 net.cpp:139] Memory required for data: 29370800
I0428 20:30:21.317579  3707 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:21.317584  3707 net.cpp:86] Creating Layer pool1
I0428 20:30:21.317589  3707 net.cpp:408] pool1 <- conv1
I0428 20:30:21.317596  3707 net.cpp:382] pool1 -> pool1
I0428 20:30:21.317636  3707 net.cpp:124] Setting up pool1
I0428 20:30:21.317641  3707 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:21.317644  3707 net.cpp:139] Memory required for data: 29434800
I0428 20:30:21.317647  3707 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:21.317654  3707 net.cpp:86] Creating Layer ip1
I0428 20:30:21.317658  3707 net.cpp:408] ip1 <- pool1
I0428 20:30:21.317663  3707 net.cpp:382] ip1 -> ip1
I0428 20:30:21.317800  3707 net.cpp:124] Setting up ip1
I0428 20:30:21.317821  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.317823  3707 net.cpp:139] Memory required for data: 29438800
I0428 20:30:21.317831  3707 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:21.317850  3707 net.cpp:86] Creating Layer relu1
I0428 20:30:21.317854  3707 net.cpp:408] relu1 <- ip1
I0428 20:30:21.317858  3707 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:21.318040  3707 net.cpp:124] Setting up relu1
I0428 20:30:21.318049  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.318053  3707 net.cpp:139] Memory required for data: 29442800
I0428 20:30:21.318055  3707 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:21.318063  3707 net.cpp:86] Creating Layer ip2
I0428 20:30:21.318065  3707 net.cpp:408] ip2 <- ip1
I0428 20:30:21.318073  3707 net.cpp:382] ip2 -> ip2
I0428 20:30:21.318182  3707 net.cpp:124] Setting up ip2
I0428 20:30:21.318191  3707 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:21.318193  3707 net.cpp:139] Memory required for data: 29452800
I0428 20:30:21.318198  3707 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:21.318210  3707 net.cpp:86] Creating Layer relu2
I0428 20:30:21.318224  3707 net.cpp:408] relu2 <- ip2
I0428 20:30:21.318236  3707 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:21.318418  3707 net.cpp:124] Setting up relu2
I0428 20:30:21.318428  3707 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:21.318437  3707 net.cpp:139] Memory required for data: 29462800
I0428 20:30:21.318440  3707 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:21.318445  3707 net.cpp:86] Creating Layer ip3
I0428 20:30:21.318455  3707 net.cpp:408] ip3 <- ip2
I0428 20:30:21.318470  3707 net.cpp:382] ip3 -> ip3
I0428 20:30:21.318578  3707 net.cpp:124] Setting up ip3
I0428 20:30:21.318585  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.318588  3707 net.cpp:139] Memory required for data: 29466800
I0428 20:30:21.318595  3707 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:21.318599  3707 net.cpp:86] Creating Layer relu3
I0428 20:30:21.318603  3707 net.cpp:408] relu3 <- ip3
I0428 20:30:21.318608  3707 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:21.319427  3707 net.cpp:124] Setting up relu3
I0428 20:30:21.319438  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.319442  3707 net.cpp:139] Memory required for data: 29470800
I0428 20:30:21.319445  3707 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:21.319463  3707 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:21.319465  3707 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:21.319470  3707 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:21.319491  3707 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:21.319558  3707 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:21.319573  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.319577  3707 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:21.319581  3707 net.cpp:139] Memory required for data: 29478800
I0428 20:30:21.319605  3707 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:21.319610  3707 net.cpp:86] Creating Layer accuracy
I0428 20:30:21.319613  3707 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:21.319617  3707 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:21.319623  3707 net.cpp:382] accuracy -> accuracy
I0428 20:30:21.319633  3707 net.cpp:124] Setting up accuracy
I0428 20:30:21.319636  3707 net.cpp:131] Top shape: (1)
I0428 20:30:21.319639  3707 net.cpp:139] Memory required for data: 29478804
I0428 20:30:21.319643  3707 layer_factory.hpp:77] Creating layer loss
I0428 20:30:21.319648  3707 net.cpp:86] Creating Layer loss
I0428 20:30:21.319650  3707 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:21.319654  3707 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:21.319660  3707 net.cpp:382] loss -> loss
I0428 20:30:21.319666  3707 layer_factory.hpp:77] Creating layer loss
I0428 20:30:21.319988  3707 net.cpp:124] Setting up loss
I0428 20:30:21.320011  3707 net.cpp:131] Top shape: (1)
I0428 20:30:21.320024  3707 net.cpp:134]     with loss weight 1
I0428 20:30:21.320041  3707 net.cpp:139] Memory required for data: 29478808
I0428 20:30:21.320044  3707 net.cpp:200] loss needs backward computation.
I0428 20:30:21.320049  3707 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:21.320061  3707 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:21.320065  3707 net.cpp:200] relu3 needs backward computation.
I0428 20:30:21.320067  3707 net.cpp:200] ip3 needs backward computation.
I0428 20:30:21.320075  3707 net.cpp:200] relu2 needs backward computation.
I0428 20:30:21.320078  3707 net.cpp:200] ip2 needs backward computation.
I0428 20:30:21.320081  3707 net.cpp:200] relu1 needs backward computation.
I0428 20:30:21.320089  3707 net.cpp:200] ip1 needs backward computation.
I0428 20:30:21.320092  3707 net.cpp:200] pool1 needs backward computation.
I0428 20:30:21.320096  3707 net.cpp:200] conv1 needs backward computation.
I0428 20:30:21.320098  3707 net.cpp:200] pool0 needs backward computation.
I0428 20:30:21.320101  3707 net.cpp:200] conv0 needs backward computation.
I0428 20:30:21.320106  3707 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:21.320109  3707 net.cpp:202] mnist does not need backward computation.
I0428 20:30:21.320112  3707 net.cpp:244] This network produces output accuracy
I0428 20:30:21.320116  3707 net.cpp:244] This network produces output loss
I0428 20:30:21.320127  3707 net.cpp:257] Network initialization done.
I0428 20:30:21.320169  3707 solver.cpp:56] Solver scaffolding done.
I0428 20:30:21.320515  3707 caffe.cpp:248] Starting Optimization
I0428 20:30:21.320521  3707 solver.cpp:273] Solving LeNet
I0428 20:30:21.320524  3707 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:21.320708  3707 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:21.417706  3715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:21.419349  3707 solver.cpp:398]     Test net output #0: accuracy = 0.0772
I0428 20:30:21.419369  3707 solver.cpp:398]     Test net output #1: loss = 2.34231 (* 1 = 2.34231 loss)
I0428 20:30:21.425969  3707 solver.cpp:219] Iteration 0 (0 iter/s, 0.105417s/100 iters), loss = 2.35008
I0428 20:30:21.425993  3707 solver.cpp:238]     Train net output #0: loss = 2.35008 (* 1 = 2.35008 loss)
I0428 20:30:21.426004  3707 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:21.640409  3707 solver.cpp:219] Iteration 100 (466.451 iter/s, 0.214385s/100 iters), loss = 0.960353
I0428 20:30:21.640470  3707 solver.cpp:238]     Train net output #0: loss = 0.960353 (* 1 = 0.960353 loss)
I0428 20:30:21.640482  3707 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:21.865684  3707 solver.cpp:219] Iteration 200 (444.056 iter/s, 0.225197s/100 iters), loss = 0.396109
I0428 20:30:21.865739  3707 solver.cpp:238]     Train net output #0: loss = 0.396109 (* 1 = 0.396109 loss)
I0428 20:30:21.865753  3707 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:22.089680  3707 solver.cpp:219] Iteration 300 (446.576 iter/s, 0.223926s/100 iters), loss = 0.281963
I0428 20:30:22.089727  3707 solver.cpp:238]     Train net output #0: loss = 0.281963 (* 1 = 0.281963 loss)
I0428 20:30:22.089738  3707 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:22.302191  3707 solver.cpp:219] Iteration 400 (470.71 iter/s, 0.212445s/100 iters), loss = 0.25686
I0428 20:30:22.302242  3707 solver.cpp:238]     Train net output #0: loss = 0.25686 (* 1 = 0.25686 loss)
I0428 20:30:22.302254  3707 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:22.522145  3707 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:22.626150  3715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:22.629170  3707 solver.cpp:398]     Test net output #0: accuracy = 0.9462
I0428 20:30:22.629197  3707 solver.cpp:398]     Test net output #1: loss = 0.17767 (* 1 = 0.17767 loss)
I0428 20:30:22.631160  3707 solver.cpp:219] Iteration 500 (304.043 iter/s, 0.328901s/100 iters), loss = 0.123525
I0428 20:30:22.631187  3707 solver.cpp:238]     Train net output #0: loss = 0.123525 (* 1 = 0.123525 loss)
I0428 20:30:22.631216  3707 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:22.846031  3707 solver.cpp:219] Iteration 600 (465.493 iter/s, 0.214826s/100 iters), loss = 0.138022
I0428 20:30:22.846067  3707 solver.cpp:238]     Train net output #0: loss = 0.138022 (* 1 = 0.138022 loss)
I0428 20:30:22.846076  3707 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:23.054272  3707 solver.cpp:219] Iteration 700 (480.329 iter/s, 0.20819s/100 iters), loss = 0.209119
I0428 20:30:23.054306  3707 solver.cpp:238]     Train net output #0: loss = 0.209119 (* 1 = 0.209119 loss)
I0428 20:30:23.054313  3707 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:23.268263  3707 solver.cpp:219] Iteration 800 (467.416 iter/s, 0.213942s/100 iters), loss = 0.329649
I0428 20:30:23.268296  3707 solver.cpp:238]     Train net output #0: loss = 0.329649 (* 1 = 0.329649 loss)
I0428 20:30:23.268304  3707 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:23.480856  3707 solver.cpp:219] Iteration 900 (470.494 iter/s, 0.212542s/100 iters), loss = 0.22084
I0428 20:30:23.480890  3707 solver.cpp:238]     Train net output #0: loss = 0.220841 (* 1 = 0.220841 loss)
I0428 20:30:23.480898  3707 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:23.552862  3714 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:23.690166  3707 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:23.692646  3707 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:23.694221  3707 solver.cpp:311] Iteration 1000, loss = 0.183987
I0428 20:30:23.694250  3707 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:23.800340  3715 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:23.803892  3707 solver.cpp:398]     Test net output #0: accuracy = 0.9622
I0428 20:30:23.803916  3707 solver.cpp:398]     Test net output #1: loss = 0.115454 (* 1 = 0.115454 loss)
I0428 20:30:23.803922  3707 solver.cpp:316] Optimization Done.
I0428 20:30:23.803926  3707 caffe.cpp:259] Optimization Done.
