I0428 20:16:19.409615   634 caffe.cpp:218] Using GPUs 0
I0428 20:16:19.449074   634 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:16:19.970729   634 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1268.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:16:19.970870   634 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1268.prototxt
I0428 20:16:19.971287   634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:16:19.971308   634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:16:19.971413   634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:19.971494   634 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:19.971601   634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:16:19.971626   634 net.cpp:86] Creating Layer mnist
I0428 20:16:19.971634   634 net.cpp:382] mnist -> data
I0428 20:16:19.971655   634 net.cpp:382] mnist -> label
I0428 20:16:19.972748   634 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:16:19.975226   634 net.cpp:124] Setting up mnist
I0428 20:16:19.975245   634 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:16:19.975251   634 net.cpp:131] Top shape: 64 (64)
I0428 20:16:19.975255   634 net.cpp:139] Memory required for data: 200960
I0428 20:16:19.975261   634 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:19.975289   634 net.cpp:86] Creating Layer conv0
I0428 20:16:19.975311   634 net.cpp:408] conv0 <- data
I0428 20:16:19.975324   634 net.cpp:382] conv0 -> conv0
I0428 20:16:20.265192   634 net.cpp:124] Setting up conv0
I0428 20:16:20.265219   634 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:16:20.265224   634 net.cpp:139] Memory required for data: 7573760
I0428 20:16:20.265239   634 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:20.265254   634 net.cpp:86] Creating Layer pool0
I0428 20:16:20.265259   634 net.cpp:408] pool0 <- conv0
I0428 20:16:20.265265   634 net.cpp:382] pool0 -> pool0
I0428 20:16:20.265314   634 net.cpp:124] Setting up pool0
I0428 20:16:20.265321   634 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:16:20.265323   634 net.cpp:139] Memory required for data: 9416960
I0428 20:16:20.265327   634 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:20.265338   634 net.cpp:86] Creating Layer conv1
I0428 20:16:20.265342   634 net.cpp:408] conv1 <- pool0
I0428 20:16:20.265347   634 net.cpp:382] conv1 -> conv1
I0428 20:16:20.268194   634 net.cpp:124] Setting up conv1
I0428 20:16:20.268209   634 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:16:20.268213   634 net.cpp:139] Memory required for data: 9498880
I0428 20:16:20.268223   634 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:20.268231   634 net.cpp:86] Creating Layer pool1
I0428 20:16:20.268234   634 net.cpp:408] pool1 <- conv1
I0428 20:16:20.268240   634 net.cpp:382] pool1 -> pool1
I0428 20:16:20.268285   634 net.cpp:124] Setting up pool1
I0428 20:16:20.268290   634 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:16:20.268292   634 net.cpp:139] Memory required for data: 9519360
I0428 20:16:20.268296   634 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:20.268304   634 net.cpp:86] Creating Layer ip1
I0428 20:16:20.268307   634 net.cpp:408] ip1 <- pool1
I0428 20:16:20.268312   634 net.cpp:382] ip1 -> ip1
I0428 20:16:20.268426   634 net.cpp:124] Setting up ip1
I0428 20:16:20.268434   634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:20.268436   634 net.cpp:139] Memory required for data: 9521920
I0428 20:16:20.268445   634 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:20.268450   634 net.cpp:86] Creating Layer relu1
I0428 20:16:20.268453   634 net.cpp:408] relu1 <- ip1
I0428 20:16:20.268460   634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:20.268642   634 net.cpp:124] Setting up relu1
I0428 20:16:20.268652   634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:20.268656   634 net.cpp:139] Memory required for data: 9524480
I0428 20:16:20.268659   634 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:20.268666   634 net.cpp:86] Creating Layer ip2
I0428 20:16:20.268669   634 net.cpp:408] ip2 <- ip1
I0428 20:16:20.268674   634 net.cpp:382] ip2 -> ip2
I0428 20:16:20.268786   634 net.cpp:124] Setting up ip2
I0428 20:16:20.268795   634 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:20.268797   634 net.cpp:139] Memory required for data: 9537280
I0428 20:16:20.268803   634 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:20.268818   634 net.cpp:86] Creating Layer relu2
I0428 20:16:20.268822   634 net.cpp:408] relu2 <- ip2
I0428 20:16:20.268826   634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:20.269587   634 net.cpp:124] Setting up relu2
I0428 20:16:20.269599   634 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:20.269604   634 net.cpp:139] Memory required for data: 9550080
I0428 20:16:20.269608   634 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:20.269614   634 net.cpp:86] Creating Layer ip3
I0428 20:16:20.269618   634 net.cpp:408] ip3 <- ip2
I0428 20:16:20.269624   634 net.cpp:382] ip3 -> ip3
I0428 20:16:20.269736   634 net.cpp:124] Setting up ip3
I0428 20:16:20.269743   634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:20.269747   634 net.cpp:139] Memory required for data: 9552640
I0428 20:16:20.269754   634 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:20.269760   634 net.cpp:86] Creating Layer relu3
I0428 20:16:20.269762   634 net.cpp:408] relu3 <- ip3
I0428 20:16:20.269767   634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:20.269948   634 net.cpp:124] Setting up relu3
I0428 20:16:20.269958   634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:20.269961   634 net.cpp:139] Memory required for data: 9555200
I0428 20:16:20.269964   634 layer_factory.hpp:77] Creating layer loss
I0428 20:16:20.269970   634 net.cpp:86] Creating Layer loss
I0428 20:16:20.269973   634 net.cpp:408] loss <- ip3
I0428 20:16:20.269978   634 net.cpp:408] loss <- label
I0428 20:16:20.269984   634 net.cpp:382] loss -> loss
I0428 20:16:20.269997   634 layer_factory.hpp:77] Creating layer loss
I0428 20:16:20.270246   634 net.cpp:124] Setting up loss
I0428 20:16:20.270256   634 net.cpp:131] Top shape: (1)
I0428 20:16:20.270259   634 net.cpp:134]     with loss weight 1
I0428 20:16:20.270273   634 net.cpp:139] Memory required for data: 9555204
I0428 20:16:20.270277   634 net.cpp:200] loss needs backward computation.
I0428 20:16:20.270280   634 net.cpp:200] relu3 needs backward computation.
I0428 20:16:20.270283   634 net.cpp:200] ip3 needs backward computation.
I0428 20:16:20.270285   634 net.cpp:200] relu2 needs backward computation.
I0428 20:16:20.270288   634 net.cpp:200] ip2 needs backward computation.
I0428 20:16:20.270292   634 net.cpp:200] relu1 needs backward computation.
I0428 20:16:20.270294   634 net.cpp:200] ip1 needs backward computation.
I0428 20:16:20.270298   634 net.cpp:200] pool1 needs backward computation.
I0428 20:16:20.270300   634 net.cpp:200] conv1 needs backward computation.
I0428 20:16:20.270303   634 net.cpp:200] pool0 needs backward computation.
I0428 20:16:20.270306   634 net.cpp:200] conv0 needs backward computation.
I0428 20:16:20.270309   634 net.cpp:202] mnist does not need backward computation.
I0428 20:16:20.270313   634 net.cpp:244] This network produces output loss
I0428 20:16:20.270323   634 net.cpp:257] Network initialization done.
I0428 20:16:20.270651   634 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1268.prototxt
I0428 20:16:20.270679   634 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:16:20.270776   634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:20.270859   634 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:20.270905   634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:16:20.270918   634 net.cpp:86] Creating Layer mnist
I0428 20:16:20.270925   634 net.cpp:382] mnist -> data
I0428 20:16:20.270932   634 net.cpp:382] mnist -> label
I0428 20:16:20.271021   634 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:16:20.273218   634 net.cpp:124] Setting up mnist
I0428 20:16:20.273232   634 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:16:20.273237   634 net.cpp:131] Top shape: 100 (100)
I0428 20:16:20.273241   634 net.cpp:139] Memory required for data: 314000
I0428 20:16:20.273243   634 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:16:20.273252   634 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:16:20.273255   634 net.cpp:408] label_mnist_1_split <- label
I0428 20:16:20.273260   634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:16:20.273267   634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:16:20.273332   634 net.cpp:124] Setting up label_mnist_1_split
I0428 20:16:20.273339   634 net.cpp:131] Top shape: 100 (100)
I0428 20:16:20.273342   634 net.cpp:131] Top shape: 100 (100)
I0428 20:16:20.273345   634 net.cpp:139] Memory required for data: 314800
I0428 20:16:20.273349   634 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:20.273357   634 net.cpp:86] Creating Layer conv0
I0428 20:16:20.273360   634 net.cpp:408] conv0 <- data
I0428 20:16:20.273366   634 net.cpp:382] conv0 -> conv0
I0428 20:16:20.275146   634 net.cpp:124] Setting up conv0
I0428 20:16:20.275159   634 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:16:20.275163   634 net.cpp:139] Memory required for data: 11834800
I0428 20:16:20.275173   634 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:20.275180   634 net.cpp:86] Creating Layer pool0
I0428 20:16:20.275183   634 net.cpp:408] pool0 <- conv0
I0428 20:16:20.275188   634 net.cpp:382] pool0 -> pool0
I0428 20:16:20.275228   634 net.cpp:124] Setting up pool0
I0428 20:16:20.275233   634 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:16:20.275236   634 net.cpp:139] Memory required for data: 14714800
I0428 20:16:20.275238   634 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:20.275248   634 net.cpp:86] Creating Layer conv1
I0428 20:16:20.275251   634 net.cpp:408] conv1 <- pool0
I0428 20:16:20.275257   634 net.cpp:382] conv1 -> conv1
I0428 20:16:20.276852   634 net.cpp:124] Setting up conv1
I0428 20:16:20.276866   634 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:16:20.276870   634 net.cpp:139] Memory required for data: 14842800
I0428 20:16:20.276880   634 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:20.276887   634 net.cpp:86] Creating Layer pool1
I0428 20:16:20.276890   634 net.cpp:408] pool1 <- conv1
I0428 20:16:20.276896   634 net.cpp:382] pool1 -> pool1
I0428 20:16:20.276942   634 net.cpp:124] Setting up pool1
I0428 20:16:20.276947   634 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:16:20.276950   634 net.cpp:139] Memory required for data: 14874800
I0428 20:16:20.276953   634 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:20.276962   634 net.cpp:86] Creating Layer ip1
I0428 20:16:20.276965   634 net.cpp:408] ip1 <- pool1
I0428 20:16:20.276969   634 net.cpp:382] ip1 -> ip1
I0428 20:16:20.277076   634 net.cpp:124] Setting up ip1
I0428 20:16:20.277083   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.277096   634 net.cpp:139] Memory required for data: 14878800
I0428 20:16:20.277104   634 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:20.277110   634 net.cpp:86] Creating Layer relu1
I0428 20:16:20.277114   634 net.cpp:408] relu1 <- ip1
I0428 20:16:20.277135   634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:20.277319   634 net.cpp:124] Setting up relu1
I0428 20:16:20.277328   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.277331   634 net.cpp:139] Memory required for data: 14882800
I0428 20:16:20.277335   634 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:20.277343   634 net.cpp:86] Creating Layer ip2
I0428 20:16:20.277348   634 net.cpp:408] ip2 <- ip1
I0428 20:16:20.277354   634 net.cpp:382] ip2 -> ip2
I0428 20:16:20.277462   634 net.cpp:124] Setting up ip2
I0428 20:16:20.277470   634 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:20.277473   634 net.cpp:139] Memory required for data: 14902800
I0428 20:16:20.277478   634 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:20.277483   634 net.cpp:86] Creating Layer relu2
I0428 20:16:20.277487   634 net.cpp:408] relu2 <- ip2
I0428 20:16:20.277490   634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:20.277657   634 net.cpp:124] Setting up relu2
I0428 20:16:20.277665   634 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:20.277669   634 net.cpp:139] Memory required for data: 14922800
I0428 20:16:20.277673   634 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:20.277678   634 net.cpp:86] Creating Layer ip3
I0428 20:16:20.277680   634 net.cpp:408] ip3 <- ip2
I0428 20:16:20.277686   634 net.cpp:382] ip3 -> ip3
I0428 20:16:20.277792   634 net.cpp:124] Setting up ip3
I0428 20:16:20.277799   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.277802   634 net.cpp:139] Memory required for data: 14926800
I0428 20:16:20.277811   634 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:20.277815   634 net.cpp:86] Creating Layer relu3
I0428 20:16:20.277819   634 net.cpp:408] relu3 <- ip3
I0428 20:16:20.277824   634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:20.278601   634 net.cpp:124] Setting up relu3
I0428 20:16:20.278614   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.278617   634 net.cpp:139] Memory required for data: 14930800
I0428 20:16:20.278621   634 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:16:20.278626   634 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:16:20.278630   634 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:16:20.278635   634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:16:20.278641   634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:16:20.278683   634 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:16:20.278689   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.278693   634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:20.278703   634 net.cpp:139] Memory required for data: 14938800
I0428 20:16:20.278707   634 layer_factory.hpp:77] Creating layer accuracy
I0428 20:16:20.278720   634 net.cpp:86] Creating Layer accuracy
I0428 20:16:20.278723   634 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:16:20.278728   634 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:16:20.278733   634 net.cpp:382] accuracy -> accuracy
I0428 20:16:20.278740   634 net.cpp:124] Setting up accuracy
I0428 20:16:20.278744   634 net.cpp:131] Top shape: (1)
I0428 20:16:20.278748   634 net.cpp:139] Memory required for data: 14938804
I0428 20:16:20.278749   634 layer_factory.hpp:77] Creating layer loss
I0428 20:16:20.278754   634 net.cpp:86] Creating Layer loss
I0428 20:16:20.278758   634 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:16:20.278760   634 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:16:20.278764   634 net.cpp:382] loss -> loss
I0428 20:16:20.278770   634 layer_factory.hpp:77] Creating layer loss
I0428 20:16:20.279039   634 net.cpp:124] Setting up loss
I0428 20:16:20.279049   634 net.cpp:131] Top shape: (1)
I0428 20:16:20.279052   634 net.cpp:134]     with loss weight 1
I0428 20:16:20.279068   634 net.cpp:139] Memory required for data: 14938808
I0428 20:16:20.279080   634 net.cpp:200] loss needs backward computation.
I0428 20:16:20.279083   634 net.cpp:202] accuracy does not need backward computation.
I0428 20:16:20.279088   634 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:16:20.279090   634 net.cpp:200] relu3 needs backward computation.
I0428 20:16:20.279098   634 net.cpp:200] ip3 needs backward computation.
I0428 20:16:20.279101   634 net.cpp:200] relu2 needs backward computation.
I0428 20:16:20.279104   634 net.cpp:200] ip2 needs backward computation.
I0428 20:16:20.279108   634 net.cpp:200] relu1 needs backward computation.
I0428 20:16:20.279109   634 net.cpp:200] ip1 needs backward computation.
I0428 20:16:20.279112   634 net.cpp:200] pool1 needs backward computation.
I0428 20:16:20.279121   634 net.cpp:200] conv1 needs backward computation.
I0428 20:16:20.279124   634 net.cpp:200] pool0 needs backward computation.
I0428 20:16:20.279126   634 net.cpp:200] conv0 needs backward computation.
I0428 20:16:20.279141   634 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:16:20.279145   634 net.cpp:202] mnist does not need backward computation.
I0428 20:16:20.279147   634 net.cpp:244] This network produces output accuracy
I0428 20:16:20.279156   634 net.cpp:244] This network produces output loss
I0428 20:16:20.279168   634 net.cpp:257] Network initialization done.
I0428 20:16:20.279211   634 solver.cpp:56] Solver scaffolding done.
I0428 20:16:20.279553   634 caffe.cpp:248] Starting Optimization
I0428 20:16:20.279561   634 solver.cpp:273] Solving LeNet
I0428 20:16:20.279563   634 solver.cpp:274] Learning Rate Policy: inv
I0428 20:16:20.280362   634 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:16:20.286126   634 blocking_queue.cpp:49] Waiting for data
I0428 20:16:20.357143   643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:20.357933   634 solver.cpp:398]     Test net output #0: accuracy = 0.1067
I0428 20:16:20.357950   634 solver.cpp:398]     Test net output #1: loss = 2.34098 (* 1 = 2.34098 loss)
I0428 20:16:20.362442   634 solver.cpp:219] Iteration 0 (0 iter/s, 0.0828517s/100 iters), loss = 2.38263
I0428 20:16:20.362464   634 solver.cpp:238]     Train net output #0: loss = 2.38263 (* 1 = 2.38263 loss)
I0428 20:16:20.362491   634 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:16:20.477644   634 solver.cpp:219] Iteration 100 (868.311 iter/s, 0.115166s/100 iters), loss = 0.385152
I0428 20:16:20.477669   634 solver.cpp:238]     Train net output #0: loss = 0.385152 (* 1 = 0.385152 loss)
I0428 20:16:20.477674   634 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:16:20.595490   634 solver.cpp:219] Iteration 200 (848.816 iter/s, 0.117811s/100 iters), loss = 0.258078
I0428 20:16:20.595532   634 solver.cpp:238]     Train net output #0: loss = 0.258079 (* 1 = 0.258079 loss)
I0428 20:16:20.595538   634 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:16:20.714506   634 solver.cpp:219] Iteration 300 (840.625 iter/s, 0.118959s/100 iters), loss = 0.284343
I0428 20:16:20.714566   634 solver.cpp:238]     Train net output #0: loss = 0.284343 (* 1 = 0.284343 loss)
I0428 20:16:20.714579   634 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:16:20.839484   634 solver.cpp:219] Iteration 400 (800.495 iter/s, 0.124923s/100 iters), loss = 0.162951
I0428 20:16:20.839514   634 solver.cpp:238]     Train net output #0: loss = 0.162951 (* 1 = 0.162951 loss)
I0428 20:16:20.839534   634 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:16:20.958817   634 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:16:21.027845   643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:21.030151   634 solver.cpp:398]     Test net output #0: accuracy = 0.9464
I0428 20:16:21.030179   634 solver.cpp:398]     Test net output #1: loss = 0.179058 (* 1 = 0.179058 loss)
I0428 20:16:21.031311   634 solver.cpp:219] Iteration 500 (521.421 iter/s, 0.191784s/100 iters), loss = 0.160061
I0428 20:16:21.031358   634 solver.cpp:238]     Train net output #0: loss = 0.160061 (* 1 = 0.160061 loss)
I0428 20:16:21.031368   634 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:16:21.153467   634 solver.cpp:219] Iteration 600 (819.01 iter/s, 0.122099s/100 iters), loss = 0.135229
I0428 20:16:21.153501   634 solver.cpp:238]     Train net output #0: loss = 0.135229 (* 1 = 0.135229 loss)
I0428 20:16:21.153509   634 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:16:21.276902   634 solver.cpp:219] Iteration 700 (810.451 iter/s, 0.123388s/100 iters), loss = 0.224644
I0428 20:16:21.276935   634 solver.cpp:238]     Train net output #0: loss = 0.224644 (* 1 = 0.224644 loss)
I0428 20:16:21.276944   634 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:16:21.399657   634 solver.cpp:219] Iteration 800 (814.929 iter/s, 0.12271s/100 iters), loss = 0.311292
I0428 20:16:21.399691   634 solver.cpp:238]     Train net output #0: loss = 0.311292 (* 1 = 0.311292 loss)
I0428 20:16:21.399700   634 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:16:21.523133   634 solver.cpp:219] Iteration 900 (810.191 iter/s, 0.123428s/100 iters), loss = 0.318491
I0428 20:16:21.523170   634 solver.cpp:238]     Train net output #0: loss = 0.318491 (* 1 = 0.318491 loss)
I0428 20:16:21.523178   634 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:16:21.563370   642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:21.642611   634 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:16:21.643600   634 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:16:21.644292   634 solver.cpp:311] Iteration 1000, loss = 0.0778211
I0428 20:16:21.644309   634 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:16:21.709671   643 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:21.712023   634 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 20:16:21.712057   634 solver.cpp:398]     Test net output #1: loss = 0.10801 (* 1 = 0.10801 loss)
I0428 20:16:21.712062   634 solver.cpp:316] Optimization Done.
I0428 20:16:21.712065   634 caffe.cpp:259] Optimization Done.
