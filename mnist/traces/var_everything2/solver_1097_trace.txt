I0428 20:08:57.861481 31523 caffe.cpp:218] Using GPUs 0
I0428 20:08:57.903470 31523 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:58.448993 31523 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1097.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:58.449134 31523 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1097.prototxt
I0428 20:08:58.449515 31523 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:58.449532 31523 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:58.449622 31523 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:08:58.449697 31523 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:58.449797 31523 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:58.449822 31523 net.cpp:86] Creating Layer mnist
I0428 20:08:58.449831 31523 net.cpp:382] mnist -> data
I0428 20:08:58.449854 31523 net.cpp:382] mnist -> label
I0428 20:08:58.450947 31523 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:58.453639 31523 net.cpp:124] Setting up mnist
I0428 20:08:58.453658 31523 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:58.453665 31523 net.cpp:131] Top shape: 64 (64)
I0428 20:08:58.453668 31523 net.cpp:139] Memory required for data: 200960
I0428 20:08:58.453675 31523 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:58.453719 31523 net.cpp:86] Creating Layer conv0
I0428 20:08:58.453725 31523 net.cpp:408] conv0 <- data
I0428 20:08:58.453738 31523 net.cpp:382] conv0 -> conv0
I0428 20:08:58.744055 31523 net.cpp:124] Setting up conv0
I0428 20:08:58.744088 31523 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:58.744093 31523 net.cpp:139] Memory required for data: 3887360
I0428 20:08:58.744133 31523 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:58.744149 31523 net.cpp:86] Creating Layer pool0
I0428 20:08:58.744154 31523 net.cpp:408] pool0 <- conv0
I0428 20:08:58.744160 31523 net.cpp:382] pool0 -> pool0
I0428 20:08:58.744215 31523 net.cpp:124] Setting up pool0
I0428 20:08:58.744230 31523 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:58.744233 31523 net.cpp:139] Memory required for data: 4808960
I0428 20:08:58.744237 31523 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:58.744251 31523 net.cpp:86] Creating Layer conv1
I0428 20:08:58.744254 31523 net.cpp:408] conv1 <- pool0
I0428 20:08:58.744259 31523 net.cpp:382] conv1 -> conv1
I0428 20:08:58.747512 31523 net.cpp:124] Setting up conv1
I0428 20:08:58.747530 31523 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:08:58.747535 31523 net.cpp:139] Memory required for data: 5218560
I0428 20:08:58.747547 31523 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:58.747556 31523 net.cpp:86] Creating Layer pool1
I0428 20:08:58.747560 31523 net.cpp:408] pool1 <- conv1
I0428 20:08:58.747566 31523 net.cpp:382] pool1 -> pool1
I0428 20:08:58.747614 31523 net.cpp:124] Setting up pool1
I0428 20:08:58.747620 31523 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:08:58.747624 31523 net.cpp:139] Memory required for data: 5320960
I0428 20:08:58.747627 31523 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:58.747637 31523 net.cpp:86] Creating Layer ip1
I0428 20:08:58.747640 31523 net.cpp:408] ip1 <- pool1
I0428 20:08:58.747648 31523 net.cpp:382] ip1 -> ip1
I0428 20:08:58.748754 31523 net.cpp:124] Setting up ip1
I0428 20:08:58.748770 31523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:58.748775 31523 net.cpp:139] Memory required for data: 5323520
I0428 20:08:58.748785 31523 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:58.748791 31523 net.cpp:86] Creating Layer relu1
I0428 20:08:58.748795 31523 net.cpp:408] relu1 <- ip1
I0428 20:08:58.748803 31523 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:58.749025 31523 net.cpp:124] Setting up relu1
I0428 20:08:58.749037 31523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:58.749042 31523 net.cpp:139] Memory required for data: 5326080
I0428 20:08:58.749045 31523 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:58.749055 31523 net.cpp:86] Creating Layer ip2
I0428 20:08:58.749059 31523 net.cpp:408] ip2 <- ip1
I0428 20:08:58.749065 31523 net.cpp:382] ip2 -> ip2
I0428 20:08:58.749188 31523 net.cpp:124] Setting up ip2
I0428 20:08:58.749197 31523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:58.749200 31523 net.cpp:139] Memory required for data: 5328640
I0428 20:08:58.749207 31523 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:58.749217 31523 net.cpp:86] Creating Layer relu2
I0428 20:08:58.749219 31523 net.cpp:408] relu2 <- ip2
I0428 20:08:58.749225 31523 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:58.750089 31523 net.cpp:124] Setting up relu2
I0428 20:08:58.750104 31523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:58.750110 31523 net.cpp:139] Memory required for data: 5331200
I0428 20:08:58.750114 31523 layer_factory.hpp:77] Creating layer loss
I0428 20:08:58.750121 31523 net.cpp:86] Creating Layer loss
I0428 20:08:58.750125 31523 net.cpp:408] loss <- ip2
I0428 20:08:58.750130 31523 net.cpp:408] loss <- label
I0428 20:08:58.750138 31523 net.cpp:382] loss -> loss
I0428 20:08:58.750155 31523 layer_factory.hpp:77] Creating layer loss
I0428 20:08:58.750453 31523 net.cpp:124] Setting up loss
I0428 20:08:58.750465 31523 net.cpp:131] Top shape: (1)
I0428 20:08:58.750469 31523 net.cpp:134]     with loss weight 1
I0428 20:08:58.750486 31523 net.cpp:139] Memory required for data: 5331204
I0428 20:08:58.750491 31523 net.cpp:200] loss needs backward computation.
I0428 20:08:58.750495 31523 net.cpp:200] relu2 needs backward computation.
I0428 20:08:58.750499 31523 net.cpp:200] ip2 needs backward computation.
I0428 20:08:58.750502 31523 net.cpp:200] relu1 needs backward computation.
I0428 20:08:58.750506 31523 net.cpp:200] ip1 needs backward computation.
I0428 20:08:58.750522 31523 net.cpp:200] pool1 needs backward computation.
I0428 20:08:58.750526 31523 net.cpp:200] conv1 needs backward computation.
I0428 20:08:58.750530 31523 net.cpp:200] pool0 needs backward computation.
I0428 20:08:58.750533 31523 net.cpp:200] conv0 needs backward computation.
I0428 20:08:58.750537 31523 net.cpp:202] mnist does not need backward computation.
I0428 20:08:58.750541 31523 net.cpp:244] This network produces output loss
I0428 20:08:58.750552 31523 net.cpp:257] Network initialization done.
I0428 20:08:58.750898 31523 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1097.prototxt
I0428 20:08:58.750931 31523 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:58.751032 31523 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:08:58.751111 31523 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:58.751163 31523 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:58.751178 31523 net.cpp:86] Creating Layer mnist
I0428 20:08:58.751185 31523 net.cpp:382] mnist -> data
I0428 20:08:58.751194 31523 net.cpp:382] mnist -> label
I0428 20:08:58.751302 31523 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:58.753506 31523 net.cpp:124] Setting up mnist
I0428 20:08:58.753522 31523 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:58.753528 31523 net.cpp:131] Top shape: 100 (100)
I0428 20:08:58.753531 31523 net.cpp:139] Memory required for data: 314000
I0428 20:08:58.753536 31523 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:58.753545 31523 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:58.753548 31523 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:58.753585 31523 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:58.753595 31523 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:58.753664 31523 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:58.753672 31523 net.cpp:131] Top shape: 100 (100)
I0428 20:08:58.753676 31523 net.cpp:131] Top shape: 100 (100)
I0428 20:08:58.753679 31523 net.cpp:139] Memory required for data: 314800
I0428 20:08:58.753684 31523 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:58.753695 31523 net.cpp:86] Creating Layer conv0
I0428 20:08:58.753698 31523 net.cpp:408] conv0 <- data
I0428 20:08:58.753707 31523 net.cpp:382] conv0 -> conv0
I0428 20:08:58.755699 31523 net.cpp:124] Setting up conv0
I0428 20:08:58.755717 31523 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:58.755720 31523 net.cpp:139] Memory required for data: 6074800
I0428 20:08:58.755731 31523 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:58.755741 31523 net.cpp:86] Creating Layer pool0
I0428 20:08:58.755745 31523 net.cpp:408] pool0 <- conv0
I0428 20:08:58.755750 31523 net.cpp:382] pool0 -> pool0
I0428 20:08:58.755796 31523 net.cpp:124] Setting up pool0
I0428 20:08:58.755802 31523 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:58.755805 31523 net.cpp:139] Memory required for data: 7514800
I0428 20:08:58.755810 31523 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:58.755821 31523 net.cpp:86] Creating Layer conv1
I0428 20:08:58.755825 31523 net.cpp:408] conv1 <- pool0
I0428 20:08:58.755832 31523 net.cpp:382] conv1 -> conv1
I0428 20:08:58.758334 31523 net.cpp:124] Setting up conv1
I0428 20:08:58.758352 31523 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:08:58.758368 31523 net.cpp:139] Memory required for data: 8154800
I0428 20:08:58.758385 31523 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:58.758394 31523 net.cpp:86] Creating Layer pool1
I0428 20:08:58.758397 31523 net.cpp:408] pool1 <- conv1
I0428 20:08:58.758404 31523 net.cpp:382] pool1 -> pool1
I0428 20:08:58.758452 31523 net.cpp:124] Setting up pool1
I0428 20:08:58.758474 31523 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:08:58.758477 31523 net.cpp:139] Memory required for data: 8314800
I0428 20:08:58.758481 31523 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:58.758492 31523 net.cpp:86] Creating Layer ip1
I0428 20:08:58.758496 31523 net.cpp:408] ip1 <- pool1
I0428 20:08:58.758508 31523 net.cpp:382] ip1 -> ip1
I0428 20:08:58.758675 31523 net.cpp:124] Setting up ip1
I0428 20:08:58.758684 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.758688 31523 net.cpp:139] Memory required for data: 8318800
I0428 20:08:58.758697 31523 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:58.758704 31523 net.cpp:86] Creating Layer relu1
I0428 20:08:58.758708 31523 net.cpp:408] relu1 <- ip1
I0428 20:08:58.758713 31523 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:58.759017 31523 net.cpp:124] Setting up relu1
I0428 20:08:58.759027 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.759032 31523 net.cpp:139] Memory required for data: 8322800
I0428 20:08:58.759042 31523 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:58.759050 31523 net.cpp:86] Creating Layer ip2
I0428 20:08:58.759061 31523 net.cpp:408] ip2 <- ip1
I0428 20:08:58.759068 31523 net.cpp:382] ip2 -> ip2
I0428 20:08:58.759196 31523 net.cpp:124] Setting up ip2
I0428 20:08:58.759203 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.759207 31523 net.cpp:139] Memory required for data: 8326800
I0428 20:08:58.759220 31523 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:58.759227 31523 net.cpp:86] Creating Layer relu2
I0428 20:08:58.759232 31523 net.cpp:408] relu2 <- ip2
I0428 20:08:58.759237 31523 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:58.759430 31523 net.cpp:124] Setting up relu2
I0428 20:08:58.759439 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.759443 31523 net.cpp:139] Memory required for data: 8330800
I0428 20:08:58.759454 31523 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:08:58.759462 31523 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:08:58.759472 31523 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:08:58.759477 31523 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:08:58.759498 31523 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:08:58.759543 31523 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:08:58.759549 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.759554 31523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:58.759557 31523 net.cpp:139] Memory required for data: 8338800
I0428 20:08:58.759562 31523 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:58.759569 31523 net.cpp:86] Creating Layer accuracy
I0428 20:08:58.759573 31523 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:08:58.759589 31523 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:58.759594 31523 net.cpp:382] accuracy -> accuracy
I0428 20:08:58.759608 31523 net.cpp:124] Setting up accuracy
I0428 20:08:58.759613 31523 net.cpp:131] Top shape: (1)
I0428 20:08:58.759629 31523 net.cpp:139] Memory required for data: 8338804
I0428 20:08:58.759631 31523 layer_factory.hpp:77] Creating layer loss
I0428 20:08:58.759639 31523 net.cpp:86] Creating Layer loss
I0428 20:08:58.759644 31523 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:08:58.759649 31523 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:58.759652 31523 net.cpp:382] loss -> loss
I0428 20:08:58.759660 31523 layer_factory.hpp:77] Creating layer loss
I0428 20:08:58.759948 31523 net.cpp:124] Setting up loss
I0428 20:08:58.759958 31523 net.cpp:131] Top shape: (1)
I0428 20:08:58.759963 31523 net.cpp:134]     with loss weight 1
I0428 20:08:58.759969 31523 net.cpp:139] Memory required for data: 8338808
I0428 20:08:58.759974 31523 net.cpp:200] loss needs backward computation.
I0428 20:08:58.759979 31523 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:58.759984 31523 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:08:58.759999 31523 net.cpp:200] relu2 needs backward computation.
I0428 20:08:58.760002 31523 net.cpp:200] ip2 needs backward computation.
I0428 20:08:58.760006 31523 net.cpp:200] relu1 needs backward computation.
I0428 20:08:58.760010 31523 net.cpp:200] ip1 needs backward computation.
I0428 20:08:58.760015 31523 net.cpp:200] pool1 needs backward computation.
I0428 20:08:58.760017 31523 net.cpp:200] conv1 needs backward computation.
I0428 20:08:58.760021 31523 net.cpp:200] pool0 needs backward computation.
I0428 20:08:58.760036 31523 net.cpp:200] conv0 needs backward computation.
I0428 20:08:58.760040 31523 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:58.760046 31523 net.cpp:202] mnist does not need backward computation.
I0428 20:08:58.760054 31523 net.cpp:244] This network produces output accuracy
I0428 20:08:58.760057 31523 net.cpp:244] This network produces output loss
I0428 20:08:58.760071 31523 net.cpp:257] Network initialization done.
I0428 20:08:58.760116 31523 solver.cpp:56] Solver scaffolding done.
I0428 20:08:58.760480 31523 caffe.cpp:248] Starting Optimization
I0428 20:08:58.760488 31523 solver.cpp:273] Solving LeNet
I0428 20:08:58.760493 31523 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:58.761451 31523 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:58.767511 31523 blocking_queue.cpp:49] Waiting for data
I0428 20:08:58.839767 31530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:58.840409 31523 solver.cpp:398]     Test net output #0: accuracy = 0.0962
I0428 20:08:58.840432 31523 solver.cpp:398]     Test net output #1: loss = 2.42813 (* 1 = 2.42813 loss)
I0428 20:08:58.844463 31523 solver.cpp:219] Iteration 0 (2.71253 iter/s, 0.083925s/100 iters), loss = 2.47571
I0428 20:08:58.844493 31523 solver.cpp:238]     Train net output #0: loss = 2.47571 (* 1 = 2.47571 loss)
I0428 20:08:58.844507 31523 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:58.943956 31523 solver.cpp:219] Iteration 100 (1005.55 iter/s, 0.0994478s/100 iters), loss = 1.26524
I0428 20:08:58.943989 31523 solver.cpp:238]     Train net output #0: loss = 1.26524 (* 1 = 1.26524 loss)
I0428 20:08:58.943997 31523 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:59.045374 31523 solver.cpp:219] Iteration 200 (986.457 iter/s, 0.101373s/100 iters), loss = 0.692167
I0428 20:08:59.045423 31523 solver.cpp:238]     Train net output #0: loss = 0.692167 (* 1 = 0.692167 loss)
I0428 20:08:59.045431 31523 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:59.145525 31523 solver.cpp:219] Iteration 300 (999.061 iter/s, 0.100094s/100 iters), loss = 0.878561
I0428 20:08:59.145555 31523 solver.cpp:238]     Train net output #0: loss = 0.878561 (* 1 = 0.878561 loss)
I0428 20:08:59.145562 31523 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:59.244446 31523 solver.cpp:219] Iteration 400 (1011.31 iter/s, 0.0988816s/100 iters), loss = 0.818093
I0428 20:08:59.244470 31523 solver.cpp:238]     Train net output #0: loss = 0.818093 (* 1 = 0.818093 loss)
I0428 20:08:59.244494 31523 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:59.338029 31523 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:59.413856 31530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:59.414458 31523 solver.cpp:398]     Test net output #0: accuracy = 0.8416
I0428 20:08:59.414476 31523 solver.cpp:398]     Test net output #1: loss = 0.636607 (* 1 = 0.636607 loss)
I0428 20:08:59.415477 31523 solver.cpp:219] Iteration 500 (584.817 iter/s, 0.170994s/100 iters), loss = 0.608085
I0428 20:08:59.415500 31523 solver.cpp:238]     Train net output #0: loss = 0.608085 (* 1 = 0.608085 loss)
I0428 20:08:59.415506 31523 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:59.522156 31523 solver.cpp:219] Iteration 600 (937.704 iter/s, 0.106643s/100 iters), loss = 0.444845
I0428 20:08:59.522181 31523 solver.cpp:238]     Train net output #0: loss = 0.444845 (* 1 = 0.444845 loss)
I0428 20:08:59.522188 31523 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:59.616778 31523 solver.cpp:219] Iteration 700 (1057.24 iter/s, 0.094586s/100 iters), loss = 0.532984
I0428 20:08:59.616803 31523 solver.cpp:238]     Train net output #0: loss = 0.532984 (* 1 = 0.532984 loss)
I0428 20:08:59.616816 31523 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:59.710026 31523 solver.cpp:219] Iteration 800 (1072.82 iter/s, 0.0932127s/100 iters), loss = 0.749869
I0428 20:08:59.710065 31523 solver.cpp:238]     Train net output #0: loss = 0.749869 (* 1 = 0.749869 loss)
I0428 20:08:59.710088 31523 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:59.813105 31523 solver.cpp:219] Iteration 900 (970.632 iter/s, 0.103026s/100 iters), loss = 0.591145
I0428 20:08:59.813145 31523 solver.cpp:238]     Train net output #0: loss = 0.591145 (* 1 = 0.591145 loss)
I0428 20:08:59.813154 31523 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:59.846734 31529 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:59.909471 31523 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:59.910490 31523 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:59.911146 31523 solver.cpp:311] Iteration 1000, loss = 0.598191
I0428 20:08:59.911161 31523 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:59.968536 31530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:59.969146 31523 solver.cpp:398]     Test net output #0: accuracy = 0.8709
I0428 20:08:59.969182 31523 solver.cpp:398]     Test net output #1: loss = 0.55327 (* 1 = 0.55327 loss)
I0428 20:08:59.969187 31523 solver.cpp:316] Optimization Done.
I0428 20:08:59.969189 31523 caffe.cpp:259] Optimization Done.
