I0428 19:48:27.930086 26488 caffe.cpp:218] Using GPUs 0
I0428 19:48:27.964637 26488 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:28.468094 26488 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test545.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:28.468224 26488 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test545.prototxt
I0428 19:48:28.468637 26488 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:28.468657 26488 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:28.468756 26488 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:28.468840 26488 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:28.468937 26488 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:28.468961 26488 net.cpp:86] Creating Layer mnist
I0428 19:48:28.468967 26488 net.cpp:382] mnist -> data
I0428 19:48:28.468991 26488 net.cpp:382] mnist -> label
I0428 19:48:28.470041 26488 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:28.472429 26488 net.cpp:124] Setting up mnist
I0428 19:48:28.472448 26488 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:28.472455 26488 net.cpp:131] Top shape: 64 (64)
I0428 19:48:28.472460 26488 net.cpp:139] Memory required for data: 200960
I0428 19:48:28.472466 26488 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:28.472482 26488 net.cpp:86] Creating Layer conv0
I0428 19:48:28.472502 26488 net.cpp:408] conv0 <- data
I0428 19:48:28.472514 26488 net.cpp:382] conv0 -> conv0
I0428 19:48:28.736455 26488 net.cpp:124] Setting up conv0
I0428 19:48:28.736481 26488 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:28.736485 26488 net.cpp:139] Memory required for data: 938240
I0428 19:48:28.736500 26488 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:28.736511 26488 net.cpp:86] Creating Layer pool0
I0428 19:48:28.736515 26488 net.cpp:408] pool0 <- conv0
I0428 19:48:28.736521 26488 net.cpp:382] pool0 -> pool0
I0428 19:48:28.736577 26488 net.cpp:124] Setting up pool0
I0428 19:48:28.736582 26488 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:28.736585 26488 net.cpp:139] Memory required for data: 1122560
I0428 19:48:28.736588 26488 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:28.736598 26488 net.cpp:86] Creating Layer conv1
I0428 19:48:28.736601 26488 net.cpp:408] conv1 <- pool0
I0428 19:48:28.736605 26488 net.cpp:382] conv1 -> conv1
I0428 19:48:28.738597 26488 net.cpp:124] Setting up conv1
I0428 19:48:28.738628 26488 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:48:28.738632 26488 net.cpp:139] Memory required for data: 1155328
I0428 19:48:28.738641 26488 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:28.738648 26488 net.cpp:86] Creating Layer pool1
I0428 19:48:28.738652 26488 net.cpp:408] pool1 <- conv1
I0428 19:48:28.738657 26488 net.cpp:382] pool1 -> pool1
I0428 19:48:28.738693 26488 net.cpp:124] Setting up pool1
I0428 19:48:28.738699 26488 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:48:28.738703 26488 net.cpp:139] Memory required for data: 1163520
I0428 19:48:28.738705 26488 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:28.738713 26488 net.cpp:86] Creating Layer ip1
I0428 19:48:28.738715 26488 net.cpp:408] ip1 <- pool1
I0428 19:48:28.738720 26488 net.cpp:382] ip1 -> ip1
I0428 19:48:28.739711 26488 net.cpp:124] Setting up ip1
I0428 19:48:28.739737 26488 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:28.739742 26488 net.cpp:139] Memory required for data: 1176320
I0428 19:48:28.739749 26488 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:28.739755 26488 net.cpp:86] Creating Layer relu1
I0428 19:48:28.739760 26488 net.cpp:408] relu1 <- ip1
I0428 19:48:28.739764 26488 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:28.739928 26488 net.cpp:124] Setting up relu1
I0428 19:48:28.739953 26488 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:28.739958 26488 net.cpp:139] Memory required for data: 1189120
I0428 19:48:28.739960 26488 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:28.739967 26488 net.cpp:86] Creating Layer ip2
I0428 19:48:28.739970 26488 net.cpp:408] ip2 <- ip1
I0428 19:48:28.739975 26488 net.cpp:382] ip2 -> ip2
I0428 19:48:28.740082 26488 net.cpp:124] Setting up ip2
I0428 19:48:28.740089 26488 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:28.740092 26488 net.cpp:139] Memory required for data: 1201920
I0428 19:48:28.740098 26488 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:28.740105 26488 net.cpp:86] Creating Layer relu2
I0428 19:48:28.740108 26488 net.cpp:408] relu2 <- ip2
I0428 19:48:28.740113 26488 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:28.740963 26488 net.cpp:124] Setting up relu2
I0428 19:48:28.740991 26488 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:28.740994 26488 net.cpp:139] Memory required for data: 1214720
I0428 19:48:28.740998 26488 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:28.741005 26488 net.cpp:86] Creating Layer ip3
I0428 19:48:28.741010 26488 net.cpp:408] ip3 <- ip2
I0428 19:48:28.741015 26488 net.cpp:382] ip3 -> ip3
I0428 19:48:28.741134 26488 net.cpp:124] Setting up ip3
I0428 19:48:28.741158 26488 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:28.741160 26488 net.cpp:139] Memory required for data: 1217280
I0428 19:48:28.741168 26488 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:28.741173 26488 net.cpp:86] Creating Layer relu3
I0428 19:48:28.741176 26488 net.cpp:408] relu3 <- ip3
I0428 19:48:28.741180 26488 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:28.741361 26488 net.cpp:124] Setting up relu3
I0428 19:48:28.741370 26488 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:28.741374 26488 net.cpp:139] Memory required for data: 1219840
I0428 19:48:28.741376 26488 layer_factory.hpp:77] Creating layer loss
I0428 19:48:28.741381 26488 net.cpp:86] Creating Layer loss
I0428 19:48:28.741385 26488 net.cpp:408] loss <- ip3
I0428 19:48:28.741389 26488 net.cpp:408] loss <- label
I0428 19:48:28.741394 26488 net.cpp:382] loss -> loss
I0428 19:48:28.741411 26488 layer_factory.hpp:77] Creating layer loss
I0428 19:48:28.741631 26488 net.cpp:124] Setting up loss
I0428 19:48:28.741641 26488 net.cpp:131] Top shape: (1)
I0428 19:48:28.741644 26488 net.cpp:134]     with loss weight 1
I0428 19:48:28.741657 26488 net.cpp:139] Memory required for data: 1219844
I0428 19:48:28.741660 26488 net.cpp:200] loss needs backward computation.
I0428 19:48:28.741680 26488 net.cpp:200] relu3 needs backward computation.
I0428 19:48:28.741683 26488 net.cpp:200] ip3 needs backward computation.
I0428 19:48:28.741686 26488 net.cpp:200] relu2 needs backward computation.
I0428 19:48:28.741689 26488 net.cpp:200] ip2 needs backward computation.
I0428 19:48:28.741693 26488 net.cpp:200] relu1 needs backward computation.
I0428 19:48:28.741695 26488 net.cpp:200] ip1 needs backward computation.
I0428 19:48:28.741714 26488 net.cpp:200] pool1 needs backward computation.
I0428 19:48:28.741719 26488 net.cpp:200] conv1 needs backward computation.
I0428 19:48:28.741721 26488 net.cpp:200] pool0 needs backward computation.
I0428 19:48:28.741724 26488 net.cpp:200] conv0 needs backward computation.
I0428 19:48:28.741729 26488 net.cpp:202] mnist does not need backward computation.
I0428 19:48:28.741731 26488 net.cpp:244] This network produces output loss
I0428 19:48:28.741741 26488 net.cpp:257] Network initialization done.
I0428 19:48:28.742141 26488 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test545.prototxt
I0428 19:48:28.742183 26488 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:28.742272 26488 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:28.742349 26488 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:28.742394 26488 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:28.742424 26488 net.cpp:86] Creating Layer mnist
I0428 19:48:28.742427 26488 net.cpp:382] mnist -> data
I0428 19:48:28.742435 26488 net.cpp:382] mnist -> label
I0428 19:48:28.742543 26488 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:28.744473 26488 net.cpp:124] Setting up mnist
I0428 19:48:28.744515 26488 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:28.744520 26488 net.cpp:131] Top shape: 100 (100)
I0428 19:48:28.744524 26488 net.cpp:139] Memory required for data: 314000
I0428 19:48:28.744527 26488 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:28.744561 26488 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:28.744565 26488 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:28.744570 26488 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:28.744576 26488 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:28.744719 26488 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:28.744736 26488 net.cpp:131] Top shape: 100 (100)
I0428 19:48:28.744751 26488 net.cpp:131] Top shape: 100 (100)
I0428 19:48:28.744755 26488 net.cpp:139] Memory required for data: 314800
I0428 19:48:28.744757 26488 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:28.744767 26488 net.cpp:86] Creating Layer conv0
I0428 19:48:28.744771 26488 net.cpp:408] conv0 <- data
I0428 19:48:28.744776 26488 net.cpp:382] conv0 -> conv0
I0428 19:48:28.746533 26488 net.cpp:124] Setting up conv0
I0428 19:48:28.746547 26488 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:28.746551 26488 net.cpp:139] Memory required for data: 1466800
I0428 19:48:28.746559 26488 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:28.746565 26488 net.cpp:86] Creating Layer pool0
I0428 19:48:28.746569 26488 net.cpp:408] pool0 <- conv0
I0428 19:48:28.746573 26488 net.cpp:382] pool0 -> pool0
I0428 19:48:28.746606 26488 net.cpp:124] Setting up pool0
I0428 19:48:28.746613 26488 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:28.746615 26488 net.cpp:139] Memory required for data: 1754800
I0428 19:48:28.746618 26488 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:28.746625 26488 net.cpp:86] Creating Layer conv1
I0428 19:48:28.746628 26488 net.cpp:408] conv1 <- pool0
I0428 19:48:28.746634 26488 net.cpp:382] conv1 -> conv1
I0428 19:48:28.748759 26488 net.cpp:124] Setting up conv1
I0428 19:48:28.748773 26488 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:48:28.748777 26488 net.cpp:139] Memory required for data: 1806000
I0428 19:48:28.748785 26488 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:28.748838 26488 net.cpp:86] Creating Layer pool1
I0428 19:48:28.748842 26488 net.cpp:408] pool1 <- conv1
I0428 19:48:28.748847 26488 net.cpp:382] pool1 -> pool1
I0428 19:48:28.748901 26488 net.cpp:124] Setting up pool1
I0428 19:48:28.748908 26488 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:48:28.748911 26488 net.cpp:139] Memory required for data: 1818800
I0428 19:48:28.748914 26488 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:28.748920 26488 net.cpp:86] Creating Layer ip1
I0428 19:48:28.748924 26488 net.cpp:408] ip1 <- pool1
I0428 19:48:28.748929 26488 net.cpp:382] ip1 -> ip1
I0428 19:48:28.749099 26488 net.cpp:124] Setting up ip1
I0428 19:48:28.749109 26488 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:28.749121 26488 net.cpp:139] Memory required for data: 1838800
I0428 19:48:28.749130 26488 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:28.749135 26488 net.cpp:86] Creating Layer relu1
I0428 19:48:28.749152 26488 net.cpp:408] relu1 <- ip1
I0428 19:48:28.749156 26488 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:28.749397 26488 net.cpp:124] Setting up relu1
I0428 19:48:28.749405 26488 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:28.749409 26488 net.cpp:139] Memory required for data: 1858800
I0428 19:48:28.749413 26488 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:28.749419 26488 net.cpp:86] Creating Layer ip2
I0428 19:48:28.749423 26488 net.cpp:408] ip2 <- ip1
I0428 19:48:28.749426 26488 net.cpp:382] ip2 -> ip2
I0428 19:48:28.749541 26488 net.cpp:124] Setting up ip2
I0428 19:48:28.749548 26488 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:28.749552 26488 net.cpp:139] Memory required for data: 1878800
I0428 19:48:28.749557 26488 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:28.749562 26488 net.cpp:86] Creating Layer relu2
I0428 19:48:28.749564 26488 net.cpp:408] relu2 <- ip2
I0428 19:48:28.749567 26488 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:28.749701 26488 net.cpp:124] Setting up relu2
I0428 19:48:28.749707 26488 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:28.749711 26488 net.cpp:139] Memory required for data: 1898800
I0428 19:48:28.749714 26488 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:28.749719 26488 net.cpp:86] Creating Layer ip3
I0428 19:48:28.749760 26488 net.cpp:408] ip3 <- ip2
I0428 19:48:28.749765 26488 net.cpp:382] ip3 -> ip3
I0428 19:48:28.749922 26488 net.cpp:124] Setting up ip3
I0428 19:48:28.749929 26488 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:28.749933 26488 net.cpp:139] Memory required for data: 1902800
I0428 19:48:28.749943 26488 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:28.749948 26488 net.cpp:86] Creating Layer relu3
I0428 19:48:28.749950 26488 net.cpp:408] relu3 <- ip3
I0428 19:48:28.749956 26488 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:28.750782 26488 net.cpp:124] Setting up relu3
I0428 19:48:28.750797 26488 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:28.750800 26488 net.cpp:139] Memory required for data: 1906800
I0428 19:48:28.750804 26488 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:28.750809 26488 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:28.750813 26488 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:28.750818 26488 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:28.750824 26488 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:28.750937 26488 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:28.750946 26488 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:28.750949 26488 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:28.750952 26488 net.cpp:139] Memory required for data: 1914800
I0428 19:48:28.750962 26488 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:28.750973 26488 net.cpp:86] Creating Layer accuracy
I0428 19:48:28.750977 26488 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:28.750980 26488 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:28.750984 26488 net.cpp:382] accuracy -> accuracy
I0428 19:48:28.750991 26488 net.cpp:124] Setting up accuracy
I0428 19:48:28.750995 26488 net.cpp:131] Top shape: (1)
I0428 19:48:28.750998 26488 net.cpp:139] Memory required for data: 1914804
I0428 19:48:28.751001 26488 layer_factory.hpp:77] Creating layer loss
I0428 19:48:28.751005 26488 net.cpp:86] Creating Layer loss
I0428 19:48:28.751008 26488 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:28.751018 26488 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:28.751022 26488 net.cpp:382] loss -> loss
I0428 19:48:28.751027 26488 layer_factory.hpp:77] Creating layer loss
I0428 19:48:28.751294 26488 net.cpp:124] Setting up loss
I0428 19:48:28.751303 26488 net.cpp:131] Top shape: (1)
I0428 19:48:28.751307 26488 net.cpp:134]     with loss weight 1
I0428 19:48:28.751320 26488 net.cpp:139] Memory required for data: 1914808
I0428 19:48:28.751334 26488 net.cpp:200] loss needs backward computation.
I0428 19:48:28.751338 26488 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:28.751343 26488 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:28.751346 26488 net.cpp:200] relu3 needs backward computation.
I0428 19:48:28.751355 26488 net.cpp:200] ip3 needs backward computation.
I0428 19:48:28.751358 26488 net.cpp:200] relu2 needs backward computation.
I0428 19:48:28.751361 26488 net.cpp:200] ip2 needs backward computation.
I0428 19:48:28.751365 26488 net.cpp:200] relu1 needs backward computation.
I0428 19:48:28.751374 26488 net.cpp:200] ip1 needs backward computation.
I0428 19:48:28.751377 26488 net.cpp:200] pool1 needs backward computation.
I0428 19:48:28.751380 26488 net.cpp:200] conv1 needs backward computation.
I0428 19:48:28.751384 26488 net.cpp:200] pool0 needs backward computation.
I0428 19:48:28.751387 26488 net.cpp:200] conv0 needs backward computation.
I0428 19:48:28.751391 26488 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:28.751395 26488 net.cpp:202] mnist does not need backward computation.
I0428 19:48:28.751399 26488 net.cpp:244] This network produces output accuracy
I0428 19:48:28.751402 26488 net.cpp:244] This network produces output loss
I0428 19:48:28.751413 26488 net.cpp:257] Network initialization done.
I0428 19:48:28.751456 26488 solver.cpp:56] Solver scaffolding done.
I0428 19:48:28.751786 26488 caffe.cpp:248] Starting Optimization
I0428 19:48:28.751793 26488 solver.cpp:273] Solving LeNet
I0428 19:48:28.751796 26488 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:28.752620 26488 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:28.756335 26488 blocking_queue.cpp:49] Waiting for data
I0428 19:48:28.826462 26495 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:28.826973 26488 solver.cpp:398]     Test net output #0: accuracy = 0.0828
I0428 19:48:28.826992 26488 solver.cpp:398]     Test net output #1: loss = 2.31697 (* 1 = 2.31697 loss)
I0428 19:48:28.828888 26488 solver.cpp:219] Iteration 0 (0 iter/s, 0.0770673s/100 iters), loss = 2.29694
I0428 19:48:28.828925 26488 solver.cpp:238]     Train net output #0: loss = 2.29694 (* 1 = 2.29694 loss)
I0428 19:48:28.828951 26488 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:28.904770 26488 solver.cpp:219] Iteration 100 (1318.62 iter/s, 0.0758366s/100 iters), loss = 1.20174
I0428 19:48:28.904796 26488 solver.cpp:238]     Train net output #0: loss = 1.20174 (* 1 = 1.20174 loss)
I0428 19:48:28.904824 26488 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:28.972801 26488 solver.cpp:219] Iteration 200 (1470.66 iter/s, 0.0679967s/100 iters), loss = 1.11965
I0428 19:48:28.972831 26488 solver.cpp:238]     Train net output #0: loss = 1.11965 (* 1 = 1.11965 loss)
I0428 19:48:28.972836 26488 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:29.043560 26488 solver.cpp:219] Iteration 300 (1414.02 iter/s, 0.0707204s/100 iters), loss = 0.928084
I0428 19:48:29.043596 26488 solver.cpp:238]     Train net output #0: loss = 0.928084 (* 1 = 0.928084 loss)
I0428 19:48:29.043602 26488 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:29.113696 26488 solver.cpp:219] Iteration 400 (1426.41 iter/s, 0.0701061s/100 iters), loss = 0.722555
I0428 19:48:29.113719 26488 solver.cpp:238]     Train net output #0: loss = 0.722555 (* 1 = 0.722555 loss)
I0428 19:48:29.113725 26488 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:29.183302 26488 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:29.258736 26495 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:29.259232 26488 solver.cpp:398]     Test net output #0: accuracy = 0.8277
I0428 19:48:29.259253 26488 solver.cpp:398]     Test net output #1: loss = 0.481498 (* 1 = 0.481498 loss)
I0428 19:48:29.260015 26488 solver.cpp:219] Iteration 500 (683.605 iter/s, 0.146283s/100 iters), loss = 0.459172
I0428 19:48:29.260040 26488 solver.cpp:238]     Train net output #0: loss = 0.459172 (* 1 = 0.459172 loss)
I0428 19:48:29.260062 26488 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:29.338855 26488 solver.cpp:219] Iteration 600 (1268.94 iter/s, 0.0788061s/100 iters), loss = 0.570726
I0428 19:48:29.338878 26488 solver.cpp:238]     Train net output #0: loss = 0.570726 (* 1 = 0.570726 loss)
I0428 19:48:29.338888 26488 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:29.409081 26488 solver.cpp:219] Iteration 700 (1424.62 iter/s, 0.070194s/100 iters), loss = 0.518166
I0428 19:48:29.409104 26488 solver.cpp:238]     Train net output #0: loss = 0.518166 (* 1 = 0.518166 loss)
I0428 19:48:29.409126 26488 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:29.478808 26488 solver.cpp:219] Iteration 800 (1434.81 iter/s, 0.0696955s/100 iters), loss = 0.641521
I0428 19:48:29.478832 26488 solver.cpp:238]     Train net output #0: loss = 0.641521 (* 1 = 0.641521 loss)
I0428 19:48:29.478837 26488 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:29.549701 26488 solver.cpp:219] Iteration 900 (1411.2 iter/s, 0.0708619s/100 iters), loss = 0.659214
I0428 19:48:29.549739 26488 solver.cpp:238]     Train net output #0: loss = 0.659214 (* 1 = 0.659214 loss)
I0428 19:48:29.549746 26488 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:29.573741 26494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:29.624094 26488 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:29.624856 26488 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:29.625324 26488 solver.cpp:311] Iteration 1000, loss = 0.320791
I0428 19:48:29.625340 26488 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:29.699867 26495 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:29.700383 26488 solver.cpp:398]     Test net output #0: accuracy = 0.8559
I0428 19:48:29.700402 26488 solver.cpp:398]     Test net output #1: loss = 0.39973 (* 1 = 0.39973 loss)
I0428 19:48:29.700407 26488 solver.cpp:316] Optimization Done.
I0428 19:48:29.700410 26488 caffe.cpp:259] Optimization Done.
