I0428 19:31:41.485766 22644 caffe.cpp:218] Using GPUs 0
I0428 19:31:41.525511 22644 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:41.991525 22644 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test130.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:41.991675 22644 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test130.prototxt
I0428 19:31:41.991991 22644 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:41.992020 22644 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:41.992094 22644 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:41.992156 22644 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:41.992238 22644 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:41.992256 22644 net.cpp:86] Creating Layer mnist
I0428 19:31:41.992262 22644 net.cpp:382] mnist -> data
I0428 19:31:41.992281 22644 net.cpp:382] mnist -> label
I0428 19:31:41.993294 22644 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:41.995542 22644 net.cpp:124] Setting up mnist
I0428 19:31:41.995573 22644 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:41.995579 22644 net.cpp:131] Top shape: 64 (64)
I0428 19:31:41.995581 22644 net.cpp:139] Memory required for data: 200960
I0428 19:31:41.995586 22644 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:41.995602 22644 net.cpp:86] Creating Layer conv0
I0428 19:31:41.995621 22644 net.cpp:408] conv0 <- data
I0428 19:31:41.995630 22644 net.cpp:382] conv0 -> conv0
I0428 19:31:42.233688 22644 net.cpp:124] Setting up conv0
I0428 19:31:42.233731 22644 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:42.233736 22644 net.cpp:139] Memory required for data: 1675520
I0428 19:31:42.233750 22644 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:42.233778 22644 net.cpp:86] Creating Layer pool0
I0428 19:31:42.233814 22644 net.cpp:408] pool0 <- conv0
I0428 19:31:42.233819 22644 net.cpp:382] pool0 -> pool0
I0428 19:31:42.233868 22644 net.cpp:124] Setting up pool0
I0428 19:31:42.233876 22644 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:42.233880 22644 net.cpp:139] Memory required for data: 2044160
I0428 19:31:42.233883 22644 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:42.233891 22644 net.cpp:86] Creating Layer ip1
I0428 19:31:42.233894 22644 net.cpp:408] ip1 <- pool0
I0428 19:31:42.233898 22644 net.cpp:382] ip1 -> ip1
I0428 19:31:42.234987 22644 net.cpp:124] Setting up ip1
I0428 19:31:42.235002 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.235021 22644 net.cpp:139] Memory required for data: 2046720
I0428 19:31:42.235030 22644 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:42.235038 22644 net.cpp:86] Creating Layer relu1
I0428 19:31:42.235041 22644 net.cpp:408] relu1 <- ip1
I0428 19:31:42.235046 22644 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:42.235258 22644 net.cpp:124] Setting up relu1
I0428 19:31:42.235268 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.235272 22644 net.cpp:139] Memory required for data: 2049280
I0428 19:31:42.235275 22644 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:42.235282 22644 net.cpp:86] Creating Layer ip2
I0428 19:31:42.235285 22644 net.cpp:408] ip2 <- ip1
I0428 19:31:42.235291 22644 net.cpp:382] ip2 -> ip2
I0428 19:31:42.235388 22644 net.cpp:124] Setting up ip2
I0428 19:31:42.235395 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.235399 22644 net.cpp:139] Memory required for data: 2051840
I0428 19:31:42.235406 22644 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:42.235411 22644 net.cpp:86] Creating Layer relu2
I0428 19:31:42.235414 22644 net.cpp:408] relu2 <- ip2
I0428 19:31:42.235419 22644 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:42.236243 22644 net.cpp:124] Setting up relu2
I0428 19:31:42.236255 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.236275 22644 net.cpp:139] Memory required for data: 2054400
I0428 19:31:42.236279 22644 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:42.236286 22644 net.cpp:86] Creating Layer ip3
I0428 19:31:42.236291 22644 net.cpp:408] ip3 <- ip2
I0428 19:31:42.236297 22644 net.cpp:382] ip3 -> ip3
I0428 19:31:42.236421 22644 net.cpp:124] Setting up ip3
I0428 19:31:42.236429 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.236433 22644 net.cpp:139] Memory required for data: 2056960
I0428 19:31:42.236438 22644 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:42.236459 22644 net.cpp:86] Creating Layer relu3
I0428 19:31:42.236465 22644 net.cpp:408] relu3 <- ip3
I0428 19:31:42.236470 22644 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:42.236620 22644 net.cpp:124] Setting up relu3
I0428 19:31:42.236629 22644 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:42.236631 22644 net.cpp:139] Memory required for data: 2059520
I0428 19:31:42.236635 22644 layer_factory.hpp:77] Creating layer loss
I0428 19:31:42.236641 22644 net.cpp:86] Creating Layer loss
I0428 19:31:42.236644 22644 net.cpp:408] loss <- ip3
I0428 19:31:42.236649 22644 net.cpp:408] loss <- label
I0428 19:31:42.236654 22644 net.cpp:382] loss -> loss
I0428 19:31:42.236672 22644 layer_factory.hpp:77] Creating layer loss
I0428 19:31:42.236951 22644 net.cpp:124] Setting up loss
I0428 19:31:42.236963 22644 net.cpp:131] Top shape: (1)
I0428 19:31:42.236965 22644 net.cpp:134]     with loss weight 1
I0428 19:31:42.236980 22644 net.cpp:139] Memory required for data: 2059524
I0428 19:31:42.236984 22644 net.cpp:200] loss needs backward computation.
I0428 19:31:42.236989 22644 net.cpp:200] relu3 needs backward computation.
I0428 19:31:42.236991 22644 net.cpp:200] ip3 needs backward computation.
I0428 19:31:42.236994 22644 net.cpp:200] relu2 needs backward computation.
I0428 19:31:42.236997 22644 net.cpp:200] ip2 needs backward computation.
I0428 19:31:42.237000 22644 net.cpp:200] relu1 needs backward computation.
I0428 19:31:42.237004 22644 net.cpp:200] ip1 needs backward computation.
I0428 19:31:42.237018 22644 net.cpp:200] pool0 needs backward computation.
I0428 19:31:42.237021 22644 net.cpp:200] conv0 needs backward computation.
I0428 19:31:42.237025 22644 net.cpp:202] mnist does not need backward computation.
I0428 19:31:42.237028 22644 net.cpp:244] This network produces output loss
I0428 19:31:42.237037 22644 net.cpp:257] Network initialization done.
I0428 19:31:42.237366 22644 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test130.prototxt
I0428 19:31:42.237407 22644 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:42.237496 22644 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:42.237561 22644 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:42.237607 22644 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:42.237622 22644 net.cpp:86] Creating Layer mnist
I0428 19:31:42.237625 22644 net.cpp:382] mnist -> data
I0428 19:31:42.237633 22644 net.cpp:382] mnist -> label
I0428 19:31:42.237721 22644 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:42.240000 22644 net.cpp:124] Setting up mnist
I0428 19:31:42.240046 22644 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:42.240051 22644 net.cpp:131] Top shape: 100 (100)
I0428 19:31:42.240056 22644 net.cpp:139] Memory required for data: 314000
I0428 19:31:42.240059 22644 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:42.240067 22644 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:42.240070 22644 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:42.240075 22644 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:42.240083 22644 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:42.240128 22644 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:42.240146 22644 net.cpp:131] Top shape: 100 (100)
I0428 19:31:42.240150 22644 net.cpp:131] Top shape: 100 (100)
I0428 19:31:42.240154 22644 net.cpp:139] Memory required for data: 314800
I0428 19:31:42.240167 22644 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:42.240177 22644 net.cpp:86] Creating Layer conv0
I0428 19:31:42.240181 22644 net.cpp:408] conv0 <- data
I0428 19:31:42.240186 22644 net.cpp:382] conv0 -> conv0
I0428 19:31:42.241847 22644 net.cpp:124] Setting up conv0
I0428 19:31:42.241860 22644 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:42.241880 22644 net.cpp:139] Memory required for data: 2618800
I0428 19:31:42.241889 22644 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:42.241895 22644 net.cpp:86] Creating Layer pool0
I0428 19:31:42.241899 22644 net.cpp:408] pool0 <- conv0
I0428 19:31:42.241904 22644 net.cpp:382] pool0 -> pool0
I0428 19:31:42.241938 22644 net.cpp:124] Setting up pool0
I0428 19:31:42.241943 22644 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:42.241946 22644 net.cpp:139] Memory required for data: 3194800
I0428 19:31:42.241950 22644 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:42.241955 22644 net.cpp:86] Creating Layer ip1
I0428 19:31:42.241958 22644 net.cpp:408] ip1 <- pool0
I0428 19:31:42.241962 22644 net.cpp:382] ip1 -> ip1
I0428 19:31:42.242131 22644 net.cpp:124] Setting up ip1
I0428 19:31:42.242139 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.242142 22644 net.cpp:139] Memory required for data: 3198800
I0428 19:31:42.242148 22644 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:42.242153 22644 net.cpp:86] Creating Layer relu1
I0428 19:31:42.242156 22644 net.cpp:408] relu1 <- ip1
I0428 19:31:42.242161 22644 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:42.242457 22644 net.cpp:124] Setting up relu1
I0428 19:31:42.242466 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.242470 22644 net.cpp:139] Memory required for data: 3202800
I0428 19:31:42.242473 22644 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:42.242480 22644 net.cpp:86] Creating Layer ip2
I0428 19:31:42.242483 22644 net.cpp:408] ip2 <- ip1
I0428 19:31:42.242488 22644 net.cpp:382] ip2 -> ip2
I0428 19:31:42.242624 22644 net.cpp:124] Setting up ip2
I0428 19:31:42.242632 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.242635 22644 net.cpp:139] Memory required for data: 3206800
I0428 19:31:42.242643 22644 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:42.242648 22644 net.cpp:86] Creating Layer relu2
I0428 19:31:42.242652 22644 net.cpp:408] relu2 <- ip2
I0428 19:31:42.242657 22644 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:42.243557 22644 net.cpp:124] Setting up relu2
I0428 19:31:42.243587 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.243590 22644 net.cpp:139] Memory required for data: 3210800
I0428 19:31:42.243594 22644 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:42.243602 22644 net.cpp:86] Creating Layer ip3
I0428 19:31:42.243607 22644 net.cpp:408] ip3 <- ip2
I0428 19:31:42.243613 22644 net.cpp:382] ip3 -> ip3
I0428 19:31:42.243727 22644 net.cpp:124] Setting up ip3
I0428 19:31:42.243736 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.243739 22644 net.cpp:139] Memory required for data: 3214800
I0428 19:31:42.243746 22644 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:42.243752 22644 net.cpp:86] Creating Layer relu3
I0428 19:31:42.243754 22644 net.cpp:408] relu3 <- ip3
I0428 19:31:42.243760 22644 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:42.243949 22644 net.cpp:124] Setting up relu3
I0428 19:31:42.243958 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.243962 22644 net.cpp:139] Memory required for data: 3218800
I0428 19:31:42.243964 22644 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:42.243969 22644 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:42.243973 22644 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:42.243983 22644 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:42.243989 22644 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:42.244024 22644 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:42.244031 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.244035 22644 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:42.244048 22644 net.cpp:139] Memory required for data: 3226800
I0428 19:31:42.244052 22644 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:42.244062 22644 net.cpp:86] Creating Layer accuracy
I0428 19:31:42.244065 22644 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:42.244071 22644 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:42.244076 22644 net.cpp:382] accuracy -> accuracy
I0428 19:31:42.244082 22644 net.cpp:124] Setting up accuracy
I0428 19:31:42.244086 22644 net.cpp:131] Top shape: (1)
I0428 19:31:42.244089 22644 net.cpp:139] Memory required for data: 3226804
I0428 19:31:42.244093 22644 layer_factory.hpp:77] Creating layer loss
I0428 19:31:42.244097 22644 net.cpp:86] Creating Layer loss
I0428 19:31:42.244101 22644 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:42.244104 22644 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:42.244109 22644 net.cpp:382] loss -> loss
I0428 19:31:42.244115 22644 layer_factory.hpp:77] Creating layer loss
I0428 19:31:42.244367 22644 net.cpp:124] Setting up loss
I0428 19:31:42.244388 22644 net.cpp:131] Top shape: (1)
I0428 19:31:42.244392 22644 net.cpp:134]     with loss weight 1
I0428 19:31:42.244400 22644 net.cpp:139] Memory required for data: 3226808
I0428 19:31:42.244402 22644 net.cpp:200] loss needs backward computation.
I0428 19:31:42.244406 22644 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:42.244410 22644 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:42.244413 22644 net.cpp:200] relu3 needs backward computation.
I0428 19:31:42.244416 22644 net.cpp:200] ip3 needs backward computation.
I0428 19:31:42.244421 22644 net.cpp:200] relu2 needs backward computation.
I0428 19:31:42.244423 22644 net.cpp:200] ip2 needs backward computation.
I0428 19:31:42.244426 22644 net.cpp:200] relu1 needs backward computation.
I0428 19:31:42.244429 22644 net.cpp:200] ip1 needs backward computation.
I0428 19:31:42.244432 22644 net.cpp:200] pool0 needs backward computation.
I0428 19:31:42.244436 22644 net.cpp:200] conv0 needs backward computation.
I0428 19:31:42.244439 22644 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:42.244443 22644 net.cpp:202] mnist does not need backward computation.
I0428 19:31:42.244447 22644 net.cpp:244] This network produces output accuracy
I0428 19:31:42.244451 22644 net.cpp:244] This network produces output loss
I0428 19:31:42.244460 22644 net.cpp:257] Network initialization done.
I0428 19:31:42.244496 22644 solver.cpp:56] Solver scaffolding done.
I0428 19:31:42.244869 22644 caffe.cpp:248] Starting Optimization
I0428 19:31:42.244876 22644 solver.cpp:273] Solving LeNet
I0428 19:31:42.244879 22644 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:42.245056 22644 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:42.249495 22644 blocking_queue.cpp:49] Waiting for data
I0428 19:31:42.323002 22651 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:42.323547 22644 solver.cpp:398]     Test net output #0: accuracy = 0.1089
I0428 19:31:42.323583 22644 solver.cpp:398]     Test net output #1: loss = 2.2985 (* 1 = 2.2985 loss)
I0428 19:31:42.326062 22644 solver.cpp:219] Iteration 0 (2.80507 iter/s, 0.0811562s/100 iters), loss = 2.28936
I0428 19:31:42.326108 22644 solver.cpp:238]     Train net output #0: loss = 2.28936 (* 1 = 2.28936 loss)
I0428 19:31:42.326120 22644 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:42.399039 22644 solver.cpp:219] Iteration 100 (1371.31 iter/s, 0.072923s/100 iters), loss = 1.1539
I0428 19:31:42.399081 22644 solver.cpp:238]     Train net output #0: loss = 1.1539 (* 1 = 1.1539 loss)
I0428 19:31:42.399087 22644 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:42.464673 22644 solver.cpp:219] Iteration 200 (1524.78 iter/s, 0.0655831s/100 iters), loss = 1.08238
I0428 19:31:42.464710 22644 solver.cpp:238]     Train net output #0: loss = 1.08238 (* 1 = 1.08238 loss)
I0428 19:31:42.464716 22644 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:42.528373 22644 solver.cpp:219] Iteration 300 (1570.64 iter/s, 0.0636682s/100 iters), loss = 1.19191
I0428 19:31:42.528410 22644 solver.cpp:238]     Train net output #0: loss = 1.19191 (* 1 = 1.19191 loss)
I0428 19:31:42.528416 22644 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:42.591795 22644 solver.cpp:219] Iteration 400 (1577.47 iter/s, 0.0633928s/100 iters), loss = 1.0907
I0428 19:31:42.591833 22644 solver.cpp:238]     Train net output #0: loss = 1.0907 (* 1 = 1.0907 loss)
I0428 19:31:42.591838 22644 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:42.655025 22644 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:42.729357 22651 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:42.729879 22644 solver.cpp:398]     Test net output #0: accuracy = 0.6563
I0428 19:31:42.729914 22644 solver.cpp:398]     Test net output #1: loss = 1.0824 (* 1 = 1.0824 loss)
I0428 19:31:42.730649 22644 solver.cpp:219] Iteration 500 (720.36 iter/s, 0.13882s/100 iters), loss = 0.993521
I0428 19:31:42.730703 22644 solver.cpp:238]     Train net output #0: loss = 0.993521 (* 1 = 0.993521 loss)
I0428 19:31:42.730710 22644 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:42.802562 22644 solver.cpp:219] Iteration 600 (1391.49 iter/s, 0.0718654s/100 iters), loss = 1.01719
I0428 19:31:42.802600 22644 solver.cpp:238]     Train net output #0: loss = 1.01719 (* 1 = 1.01719 loss)
I0428 19:31:42.802606 22644 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:42.869076 22644 solver.cpp:219] Iteration 700 (1504.16 iter/s, 0.0664822s/100 iters), loss = 1.25171
I0428 19:31:42.869115 22644 solver.cpp:238]     Train net output #0: loss = 1.25171 (* 1 = 1.25171 loss)
I0428 19:31:42.869122 22644 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:42.932173 22644 solver.cpp:219] Iteration 800 (1585.66 iter/s, 0.0630651s/100 iters), loss = 1.11867
I0428 19:31:42.932210 22644 solver.cpp:238]     Train net output #0: loss = 1.11867 (* 1 = 1.11867 loss)
I0428 19:31:42.932216 22644 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:42.995414 22644 solver.cpp:219] Iteration 900 (1582.06 iter/s, 0.0632085s/100 iters), loss = 1.07181
I0428 19:31:42.995450 22644 solver.cpp:238]     Train net output #0: loss = 1.07181 (* 1 = 1.07181 loss)
I0428 19:31:42.995456 22644 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:43.016677 22650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:43.058253 22644 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:43.059010 22644 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:43.059545 22644 solver.cpp:311] Iteration 1000, loss = 0.950174
I0428 19:31:43.059561 22644 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:43.136181 22651 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:43.136766 22644 solver.cpp:398]     Test net output #0: accuracy = 0.6711
I0428 19:31:43.136801 22644 solver.cpp:398]     Test net output #1: loss = 0.891456 (* 1 = 0.891456 loss)
I0428 19:31:43.136806 22644 solver.cpp:316] Optimization Done.
I0428 19:31:43.136814 22644 caffe.cpp:259] Optimization Done.
