I0428 19:52:09.573351 27451 caffe.cpp:218] Using GPUs 0
I0428 19:52:09.611066 27451 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:10.067087 27451 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test654.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:10.067224 27451 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test654.prototxt
I0428 19:52:10.067553 27451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:10.067581 27451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:10.067656 27451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:10.067714 27451 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:10.067795 27451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:10.067812 27451 net.cpp:86] Creating Layer mnist
I0428 19:52:10.067818 27451 net.cpp:382] mnist -> data
I0428 19:52:10.067852 27451 net.cpp:382] mnist -> label
I0428 19:52:10.068765 27451 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:10.071036 27451 net.cpp:124] Setting up mnist
I0428 19:52:10.071066 27451 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:10.071071 27451 net.cpp:131] Top shape: 64 (64)
I0428 19:52:10.071074 27451 net.cpp:139] Memory required for data: 200960
I0428 19:52:10.071080 27451 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:10.071092 27451 net.cpp:86] Creating Layer conv0
I0428 19:52:10.071110 27451 net.cpp:408] conv0 <- data
I0428 19:52:10.071135 27451 net.cpp:382] conv0 -> conv0
I0428 19:52:10.302397 27451 net.cpp:124] Setting up conv0
I0428 19:52:10.302436 27451 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:10.302440 27451 net.cpp:139] Memory required for data: 938240
I0428 19:52:10.302455 27451 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:10.302469 27451 net.cpp:86] Creating Layer pool0
I0428 19:52:10.302471 27451 net.cpp:408] pool0 <- conv0
I0428 19:52:10.302477 27451 net.cpp:382] pool0 -> pool0
I0428 19:52:10.302538 27451 net.cpp:124] Setting up pool0
I0428 19:52:10.302544 27451 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:10.302547 27451 net.cpp:139] Memory required for data: 1122560
I0428 19:52:10.302551 27451 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:10.302561 27451 net.cpp:86] Creating Layer conv1
I0428 19:52:10.302563 27451 net.cpp:408] conv1 <- pool0
I0428 19:52:10.302568 27451 net.cpp:382] conv1 -> conv1
I0428 19:52:10.305480 27451 net.cpp:124] Setting up conv1
I0428 19:52:10.305495 27451 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:10.305498 27451 net.cpp:139] Memory required for data: 1532160
I0428 19:52:10.305507 27451 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:10.305515 27451 net.cpp:86] Creating Layer pool1
I0428 19:52:10.305517 27451 net.cpp:408] pool1 <- conv1
I0428 19:52:10.305539 27451 net.cpp:382] pool1 -> pool1
I0428 19:52:10.305578 27451 net.cpp:124] Setting up pool1
I0428 19:52:10.305583 27451 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:10.305586 27451 net.cpp:139] Memory required for data: 1634560
I0428 19:52:10.305589 27451 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:10.305598 27451 net.cpp:86] Creating Layer ip1
I0428 19:52:10.305600 27451 net.cpp:408] ip1 <- pool1
I0428 19:52:10.305608 27451 net.cpp:382] ip1 -> ip1
I0428 19:52:10.305824 27451 net.cpp:124] Setting up ip1
I0428 19:52:10.305846 27451 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:10.305850 27451 net.cpp:139] Memory required for data: 1647360
I0428 19:52:10.305856 27451 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:10.305862 27451 net.cpp:86] Creating Layer relu1
I0428 19:52:10.305866 27451 net.cpp:408] relu1 <- ip1
I0428 19:52:10.305869 27451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:10.306041 27451 net.cpp:124] Setting up relu1
I0428 19:52:10.306051 27451 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:10.306053 27451 net.cpp:139] Memory required for data: 1660160
I0428 19:52:10.306056 27451 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:10.306063 27451 net.cpp:86] Creating Layer ip2
I0428 19:52:10.306066 27451 net.cpp:408] ip2 <- ip1
I0428 19:52:10.306087 27451 net.cpp:382] ip2 -> ip2
I0428 19:52:10.306191 27451 net.cpp:124] Setting up ip2
I0428 19:52:10.306198 27451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:10.306201 27451 net.cpp:139] Memory required for data: 1662720
I0428 19:52:10.306206 27451 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:10.306212 27451 net.cpp:86] Creating Layer relu2
I0428 19:52:10.306216 27451 net.cpp:408] relu2 <- ip2
I0428 19:52:10.306219 27451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:10.307029 27451 net.cpp:124] Setting up relu2
I0428 19:52:10.307041 27451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:10.307044 27451 net.cpp:139] Memory required for data: 1665280
I0428 19:52:10.307049 27451 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:10.307054 27451 net.cpp:86] Creating Layer ip3
I0428 19:52:10.307057 27451 net.cpp:408] ip3 <- ip2
I0428 19:52:10.307063 27451 net.cpp:382] ip3 -> ip3
I0428 19:52:10.307181 27451 net.cpp:124] Setting up ip3
I0428 19:52:10.307189 27451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:10.307193 27451 net.cpp:139] Memory required for data: 1667840
I0428 19:52:10.307199 27451 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:10.307205 27451 net.cpp:86] Creating Layer relu3
I0428 19:52:10.307209 27451 net.cpp:408] relu3 <- ip3
I0428 19:52:10.307212 27451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:10.307412 27451 net.cpp:124] Setting up relu3
I0428 19:52:10.307422 27451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:10.307425 27451 net.cpp:139] Memory required for data: 1670400
I0428 19:52:10.307428 27451 layer_factory.hpp:77] Creating layer loss
I0428 19:52:10.307436 27451 net.cpp:86] Creating Layer loss
I0428 19:52:10.307440 27451 net.cpp:408] loss <- ip3
I0428 19:52:10.307443 27451 net.cpp:408] loss <- label
I0428 19:52:10.307448 27451 net.cpp:382] loss -> loss
I0428 19:52:10.307466 27451 layer_factory.hpp:77] Creating layer loss
I0428 19:52:10.307727 27451 net.cpp:124] Setting up loss
I0428 19:52:10.307736 27451 net.cpp:131] Top shape: (1)
I0428 19:52:10.307739 27451 net.cpp:134]     with loss weight 1
I0428 19:52:10.307752 27451 net.cpp:139] Memory required for data: 1670404
I0428 19:52:10.307756 27451 net.cpp:200] loss needs backward computation.
I0428 19:52:10.307760 27451 net.cpp:200] relu3 needs backward computation.
I0428 19:52:10.307762 27451 net.cpp:200] ip3 needs backward computation.
I0428 19:52:10.307765 27451 net.cpp:200] relu2 needs backward computation.
I0428 19:52:10.307767 27451 net.cpp:200] ip2 needs backward computation.
I0428 19:52:10.307770 27451 net.cpp:200] relu1 needs backward computation.
I0428 19:52:10.307773 27451 net.cpp:200] ip1 needs backward computation.
I0428 19:52:10.307776 27451 net.cpp:200] pool1 needs backward computation.
I0428 19:52:10.307780 27451 net.cpp:200] conv1 needs backward computation.
I0428 19:52:10.307782 27451 net.cpp:200] pool0 needs backward computation.
I0428 19:52:10.307785 27451 net.cpp:200] conv0 needs backward computation.
I0428 19:52:10.307788 27451 net.cpp:202] mnist does not need backward computation.
I0428 19:52:10.307790 27451 net.cpp:244] This network produces output loss
I0428 19:52:10.307816 27451 net.cpp:257] Network initialization done.
I0428 19:52:10.308181 27451 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test654.prototxt
I0428 19:52:10.308209 27451 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:10.308353 27451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:10.308437 27451 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:10.308483 27451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:10.308495 27451 net.cpp:86] Creating Layer mnist
I0428 19:52:10.308500 27451 net.cpp:382] mnist -> data
I0428 19:52:10.308508 27451 net.cpp:382] mnist -> label
I0428 19:52:10.308626 27451 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:10.310701 27451 net.cpp:124] Setting up mnist
I0428 19:52:10.310716 27451 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:10.310721 27451 net.cpp:131] Top shape: 100 (100)
I0428 19:52:10.310724 27451 net.cpp:139] Memory required for data: 314000
I0428 19:52:10.310729 27451 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:10.310735 27451 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:10.310739 27451 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:10.310744 27451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:10.310752 27451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:10.310817 27451 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:10.310837 27451 net.cpp:131] Top shape: 100 (100)
I0428 19:52:10.310842 27451 net.cpp:131] Top shape: 100 (100)
I0428 19:52:10.310844 27451 net.cpp:139] Memory required for data: 314800
I0428 19:52:10.310847 27451 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:10.310856 27451 net.cpp:86] Creating Layer conv0
I0428 19:52:10.310860 27451 net.cpp:408] conv0 <- data
I0428 19:52:10.310865 27451 net.cpp:382] conv0 -> conv0
I0428 19:52:10.312705 27451 net.cpp:124] Setting up conv0
I0428 19:52:10.312719 27451 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:10.312723 27451 net.cpp:139] Memory required for data: 1466800
I0428 19:52:10.312736 27451 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:10.312742 27451 net.cpp:86] Creating Layer pool0
I0428 19:52:10.312746 27451 net.cpp:408] pool0 <- conv0
I0428 19:52:10.312752 27451 net.cpp:382] pool0 -> pool0
I0428 19:52:10.312789 27451 net.cpp:124] Setting up pool0
I0428 19:52:10.312795 27451 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:10.312798 27451 net.cpp:139] Memory required for data: 1754800
I0428 19:52:10.312800 27451 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:10.312815 27451 net.cpp:86] Creating Layer conv1
I0428 19:52:10.312830 27451 net.cpp:408] conv1 <- pool0
I0428 19:52:10.312837 27451 net.cpp:382] conv1 -> conv1
I0428 19:52:10.315199 27451 net.cpp:124] Setting up conv1
I0428 19:52:10.315213 27451 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:10.315217 27451 net.cpp:139] Memory required for data: 2394800
I0428 19:52:10.315227 27451 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:10.315248 27451 net.cpp:86] Creating Layer pool1
I0428 19:52:10.315253 27451 net.cpp:408] pool1 <- conv1
I0428 19:52:10.315258 27451 net.cpp:382] pool1 -> pool1
I0428 19:52:10.315297 27451 net.cpp:124] Setting up pool1
I0428 19:52:10.315302 27451 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:10.315304 27451 net.cpp:139] Memory required for data: 2554800
I0428 19:52:10.315315 27451 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:10.315321 27451 net.cpp:86] Creating Layer ip1
I0428 19:52:10.315325 27451 net.cpp:408] ip1 <- pool1
I0428 19:52:10.315330 27451 net.cpp:382] ip1 -> ip1
I0428 19:52:10.315587 27451 net.cpp:124] Setting up ip1
I0428 19:52:10.315594 27451 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:10.315608 27451 net.cpp:139] Memory required for data: 2574800
I0428 19:52:10.315614 27451 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:10.315620 27451 net.cpp:86] Creating Layer relu1
I0428 19:52:10.315629 27451 net.cpp:408] relu1 <- ip1
I0428 19:52:10.315635 27451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:10.315809 27451 net.cpp:124] Setting up relu1
I0428 19:52:10.315819 27451 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:10.315821 27451 net.cpp:139] Memory required for data: 2594800
I0428 19:52:10.315825 27451 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:10.315834 27451 net.cpp:86] Creating Layer ip2
I0428 19:52:10.315836 27451 net.cpp:408] ip2 <- ip1
I0428 19:52:10.315841 27451 net.cpp:382] ip2 -> ip2
I0428 19:52:10.315970 27451 net.cpp:124] Setting up ip2
I0428 19:52:10.315978 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.315979 27451 net.cpp:139] Memory required for data: 2598800
I0428 19:52:10.315985 27451 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:10.315990 27451 net.cpp:86] Creating Layer relu2
I0428 19:52:10.316000 27451 net.cpp:408] relu2 <- ip2
I0428 19:52:10.316007 27451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:10.316179 27451 net.cpp:124] Setting up relu2
I0428 19:52:10.316187 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.316190 27451 net.cpp:139] Memory required for data: 2602800
I0428 19:52:10.316193 27451 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:10.316200 27451 net.cpp:86] Creating Layer ip3
I0428 19:52:10.316224 27451 net.cpp:408] ip3 <- ip2
I0428 19:52:10.316229 27451 net.cpp:382] ip3 -> ip3
I0428 19:52:10.316345 27451 net.cpp:124] Setting up ip3
I0428 19:52:10.316354 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.316356 27451 net.cpp:139] Memory required for data: 2606800
I0428 19:52:10.316366 27451 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:10.316370 27451 net.cpp:86] Creating Layer relu3
I0428 19:52:10.316373 27451 net.cpp:408] relu3 <- ip3
I0428 19:52:10.316377 27451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:10.317186 27451 net.cpp:124] Setting up relu3
I0428 19:52:10.317198 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.317203 27451 net.cpp:139] Memory required for data: 2610800
I0428 19:52:10.317205 27451 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:10.317211 27451 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:10.317215 27451 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:10.317220 27451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:10.317226 27451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:10.317270 27451 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:10.317275 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.317278 27451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:10.317281 27451 net.cpp:139] Memory required for data: 2618800
I0428 19:52:10.317292 27451 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:10.317298 27451 net.cpp:86] Creating Layer accuracy
I0428 19:52:10.317302 27451 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:10.317306 27451 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:10.317311 27451 net.cpp:382] accuracy -> accuracy
I0428 19:52:10.317317 27451 net.cpp:124] Setting up accuracy
I0428 19:52:10.317322 27451 net.cpp:131] Top shape: (1)
I0428 19:52:10.317323 27451 net.cpp:139] Memory required for data: 2618804
I0428 19:52:10.317327 27451 layer_factory.hpp:77] Creating layer loss
I0428 19:52:10.317332 27451 net.cpp:86] Creating Layer loss
I0428 19:52:10.317334 27451 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:10.317337 27451 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:10.317342 27451 net.cpp:382] loss -> loss
I0428 19:52:10.317348 27451 layer_factory.hpp:77] Creating layer loss
I0428 19:52:10.317652 27451 net.cpp:124] Setting up loss
I0428 19:52:10.317663 27451 net.cpp:131] Top shape: (1)
I0428 19:52:10.317667 27451 net.cpp:134]     with loss weight 1
I0428 19:52:10.317672 27451 net.cpp:139] Memory required for data: 2618808
I0428 19:52:10.317687 27451 net.cpp:200] loss needs backward computation.
I0428 19:52:10.317690 27451 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:10.317694 27451 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:10.317698 27451 net.cpp:200] relu3 needs backward computation.
I0428 19:52:10.317699 27451 net.cpp:200] ip3 needs backward computation.
I0428 19:52:10.317703 27451 net.cpp:200] relu2 needs backward computation.
I0428 19:52:10.317705 27451 net.cpp:200] ip2 needs backward computation.
I0428 19:52:10.317708 27451 net.cpp:200] relu1 needs backward computation.
I0428 19:52:10.317711 27451 net.cpp:200] ip1 needs backward computation.
I0428 19:52:10.317714 27451 net.cpp:200] pool1 needs backward computation.
I0428 19:52:10.317718 27451 net.cpp:200] conv1 needs backward computation.
I0428 19:52:10.317720 27451 net.cpp:200] pool0 needs backward computation.
I0428 19:52:10.317723 27451 net.cpp:200] conv0 needs backward computation.
I0428 19:52:10.317726 27451 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:10.317730 27451 net.cpp:202] mnist does not need backward computation.
I0428 19:52:10.317734 27451 net.cpp:244] This network produces output accuracy
I0428 19:52:10.317736 27451 net.cpp:244] This network produces output loss
I0428 19:52:10.317747 27451 net.cpp:257] Network initialization done.
I0428 19:52:10.317790 27451 solver.cpp:56] Solver scaffolding done.
I0428 19:52:10.318161 27451 caffe.cpp:248] Starting Optimization
I0428 19:52:10.318166 27451 solver.cpp:273] Solving LeNet
I0428 19:52:10.318169 27451 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:10.318982 27451 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:10.322908 27451 blocking_queue.cpp:49] Waiting for data
I0428 19:52:10.393232 27458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:10.393764 27451 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0428 19:52:10.393785 27451 solver.cpp:398]     Test net output #1: loss = 2.30325 (* 1 = 2.30325 loss)
I0428 19:52:10.396332 27451 solver.cpp:219] Iteration 0 (-1.03976e-42 iter/s, 0.0781394s/100 iters), loss = 2.29247
I0428 19:52:10.396358 27451 solver.cpp:238]     Train net output #0: loss = 2.29247 (* 1 = 2.29247 loss)
I0428 19:52:10.396384 27451 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:10.492130 27451 solver.cpp:219] Iteration 100 (1044.27 iter/s, 0.0957604s/100 iters), loss = 0.733063
I0428 19:52:10.492157 27451 solver.cpp:238]     Train net output #0: loss = 0.733063 (* 1 = 0.733063 loss)
I0428 19:52:10.492179 27451 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:10.577543 27451 solver.cpp:219] Iteration 200 (1171.29 iter/s, 0.0853759s/100 iters), loss = 0.241712
I0428 19:52:10.577567 27451 solver.cpp:238]     Train net output #0: loss = 0.241712 (* 1 = 0.241712 loss)
I0428 19:52:10.577589 27451 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:10.661840 27451 solver.cpp:219] Iteration 300 (1186.74 iter/s, 0.0842648s/100 iters), loss = 0.289223
I0428 19:52:10.661865 27451 solver.cpp:238]     Train net output #0: loss = 0.289223 (* 1 = 0.289223 loss)
I0428 19:52:10.661887 27451 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:10.746733 27451 solver.cpp:219] Iteration 400 (1178.43 iter/s, 0.0848589s/100 iters), loss = 0.168851
I0428 19:52:10.746758 27451 solver.cpp:238]     Train net output #0: loss = 0.168851 (* 1 = 0.168851 loss)
I0428 19:52:10.746780 27451 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:10.830713 27451 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:10.906069 27458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:10.906714 27451 solver.cpp:398]     Test net output #0: accuracy = 0.9578
I0428 19:52:10.906744 27451 solver.cpp:398]     Test net output #1: loss = 0.134441 (* 1 = 0.134441 loss)
I0428 19:52:10.907958 27451 solver.cpp:219] Iteration 500 (620.413 iter/s, 0.161183s/100 iters), loss = 0.157585
I0428 19:52:10.908016 27451 solver.cpp:238]     Train net output #0: loss = 0.157585 (* 1 = 0.157585 loss)
I0428 19:52:10.908027 27451 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:11.006872 27451 solver.cpp:219] Iteration 600 (1011.65 iter/s, 0.0988488s/100 iters), loss = 0.155923
I0428 19:52:11.006901 27451 solver.cpp:238]     Train net output #0: loss = 0.155923 (* 1 = 0.155923 loss)
I0428 19:52:11.006908 27451 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:11.093751 27451 solver.cpp:219] Iteration 700 (1151.53 iter/s, 0.0868413s/100 iters), loss = 0.156471
I0428 19:52:11.093776 27451 solver.cpp:238]     Train net output #0: loss = 0.156471 (* 1 = 0.156471 loss)
I0428 19:52:11.093798 27451 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:11.178441 27451 solver.cpp:219] Iteration 800 (1181.26 iter/s, 0.0846551s/100 iters), loss = 0.308922
I0428 19:52:11.178463 27451 solver.cpp:238]     Train net output #0: loss = 0.308922 (* 1 = 0.308922 loss)
I0428 19:52:11.178485 27451 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:11.263625 27451 solver.cpp:219] Iteration 900 (1174.37 iter/s, 0.0851517s/100 iters), loss = 0.173558
I0428 19:52:11.263648 27451 solver.cpp:238]     Train net output #0: loss = 0.173558 (* 1 = 0.173558 loss)
I0428 19:52:11.263670 27451 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:11.292989 27457 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:11.350282 27451 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:11.351403 27451 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:11.351986 27451 solver.cpp:311] Iteration 1000, loss = 0.100332
I0428 19:52:11.352017 27451 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:11.429558 27458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:11.430151 27451 solver.cpp:398]     Test net output #0: accuracy = 0.9717
I0428 19:52:11.430171 27451 solver.cpp:398]     Test net output #1: loss = 0.0892795 (* 1 = 0.0892795 loss)
I0428 19:52:11.430176 27451 solver.cpp:316] Optimization Done.
I0428 19:52:11.430178 27451 caffe.cpp:259] Optimization Done.
