I0428 20:27:08.401237  2942 caffe.cpp:218] Using GPUs 0
I0428 20:27:08.432741  2942 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:08.941133  2942 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1483.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:08.941279  2942 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1483.prototxt
I0428 20:27:08.941622  2942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:08.941638  2942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:08.941721  2942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:08.941792  2942 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:08.941893  2942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:08.941917  2942 net.cpp:86] Creating Layer mnist
I0428 20:27:08.941926  2942 net.cpp:382] mnist -> data
I0428 20:27:08.941948  2942 net.cpp:382] mnist -> label
I0428 20:27:08.943084  2942 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:08.945871  2942 net.cpp:124] Setting up mnist
I0428 20:27:08.945889  2942 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:08.945895  2942 net.cpp:131] Top shape: 64 (64)
I0428 20:27:08.945899  2942 net.cpp:139] Memory required for data: 200960
I0428 20:27:08.945906  2942 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:08.945955  2942 net.cpp:86] Creating Layer conv0
I0428 20:27:08.945961  2942 net.cpp:408] conv0 <- data
I0428 20:27:08.945976  2942 net.cpp:382] conv0 -> conv0
I0428 20:27:09.187500  2942 net.cpp:124] Setting up conv0
I0428 20:27:09.187525  2942 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:09.187530  2942 net.cpp:139] Memory required for data: 14946560
I0428 20:27:09.187543  2942 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:09.187554  2942 net.cpp:86] Creating Layer pool0
I0428 20:27:09.187558  2942 net.cpp:408] pool0 <- conv0
I0428 20:27:09.187564  2942 net.cpp:382] pool0 -> pool0
I0428 20:27:09.187623  2942 net.cpp:124] Setting up pool0
I0428 20:27:09.187628  2942 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:09.187647  2942 net.cpp:139] Memory required for data: 18632960
I0428 20:27:09.187651  2942 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:09.187661  2942 net.cpp:86] Creating Layer conv1
I0428 20:27:09.187664  2942 net.cpp:408] conv1 <- pool0
I0428 20:27:09.187669  2942 net.cpp:382] conv1 -> conv1
I0428 20:27:09.190476  2942 net.cpp:124] Setting up conv1
I0428 20:27:09.190502  2942 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:09.190505  2942 net.cpp:139] Memory required for data: 18714880
I0428 20:27:09.190515  2942 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:09.190522  2942 net.cpp:86] Creating Layer pool1
I0428 20:27:09.190541  2942 net.cpp:408] pool1 <- conv1
I0428 20:27:09.190546  2942 net.cpp:382] pool1 -> pool1
I0428 20:27:09.190595  2942 net.cpp:124] Setting up pool1
I0428 20:27:09.190603  2942 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:09.190605  2942 net.cpp:139] Memory required for data: 18735360
I0428 20:27:09.190608  2942 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:09.190615  2942 net.cpp:86] Creating Layer ip1
I0428 20:27:09.190618  2942 net.cpp:408] ip1 <- pool1
I0428 20:27:09.190623  2942 net.cpp:382] ip1 -> ip1
I0428 20:27:09.190719  2942 net.cpp:124] Setting up ip1
I0428 20:27:09.190727  2942 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:09.190729  2942 net.cpp:139] Memory required for data: 18737920
I0428 20:27:09.190737  2942 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:09.190742  2942 net.cpp:86] Creating Layer relu1
I0428 20:27:09.190744  2942 net.cpp:408] relu1 <- ip1
I0428 20:27:09.190748  2942 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:09.190901  2942 net.cpp:124] Setting up relu1
I0428 20:27:09.190908  2942 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:09.190912  2942 net.cpp:139] Memory required for data: 18740480
I0428 20:27:09.190914  2942 layer_factory.hpp:77] Creating layer loss
I0428 20:27:09.190919  2942 net.cpp:86] Creating Layer loss
I0428 20:27:09.190922  2942 net.cpp:408] loss <- ip1
I0428 20:27:09.190927  2942 net.cpp:408] loss <- label
I0428 20:27:09.190932  2942 net.cpp:382] loss -> loss
I0428 20:27:09.190949  2942 layer_factory.hpp:77] Creating layer loss
I0428 20:27:09.191737  2942 net.cpp:124] Setting up loss
I0428 20:27:09.191750  2942 net.cpp:131] Top shape: (1)
I0428 20:27:09.191768  2942 net.cpp:134]     with loss weight 1
I0428 20:27:09.191782  2942 net.cpp:139] Memory required for data: 18740484
I0428 20:27:09.191786  2942 net.cpp:200] loss needs backward computation.
I0428 20:27:09.191788  2942 net.cpp:200] relu1 needs backward computation.
I0428 20:27:09.191792  2942 net.cpp:200] ip1 needs backward computation.
I0428 20:27:09.191794  2942 net.cpp:200] pool1 needs backward computation.
I0428 20:27:09.191797  2942 net.cpp:200] conv1 needs backward computation.
I0428 20:27:09.191799  2942 net.cpp:200] pool0 needs backward computation.
I0428 20:27:09.191802  2942 net.cpp:200] conv0 needs backward computation.
I0428 20:27:09.191805  2942 net.cpp:202] mnist does not need backward computation.
I0428 20:27:09.191807  2942 net.cpp:244] This network produces output loss
I0428 20:27:09.191815  2942 net.cpp:257] Network initialization done.
I0428 20:27:09.192065  2942 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1483.prototxt
I0428 20:27:09.192090  2942 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:09.192167  2942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:09.192239  2942 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:09.192281  2942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:09.192296  2942 net.cpp:86] Creating Layer mnist
I0428 20:27:09.192299  2942 net.cpp:382] mnist -> data
I0428 20:27:09.192308  2942 net.cpp:382] mnist -> label
I0428 20:27:09.192399  2942 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:09.194463  2942 net.cpp:124] Setting up mnist
I0428 20:27:09.194507  2942 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:09.194512  2942 net.cpp:131] Top shape: 100 (100)
I0428 20:27:09.194515  2942 net.cpp:139] Memory required for data: 314000
I0428 20:27:09.194519  2942 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:09.194537  2942 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:09.194542  2942 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:09.194548  2942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:09.194555  2942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:09.194599  2942 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:09.194604  2942 net.cpp:131] Top shape: 100 (100)
I0428 20:27:09.194608  2942 net.cpp:131] Top shape: 100 (100)
I0428 20:27:09.194612  2942 net.cpp:139] Memory required for data: 314800
I0428 20:27:09.194614  2942 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:09.194623  2942 net.cpp:86] Creating Layer conv0
I0428 20:27:09.194628  2942 net.cpp:408] conv0 <- data
I0428 20:27:09.194633  2942 net.cpp:382] conv0 -> conv0
I0428 20:27:09.195608  2942 net.cpp:124] Setting up conv0
I0428 20:27:09.195621  2942 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:09.195639  2942 net.cpp:139] Memory required for data: 23354800
I0428 20:27:09.195648  2942 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:09.195654  2942 net.cpp:86] Creating Layer pool0
I0428 20:27:09.195657  2942 net.cpp:408] pool0 <- conv0
I0428 20:27:09.195662  2942 net.cpp:382] pool0 -> pool0
I0428 20:27:09.195710  2942 net.cpp:124] Setting up pool0
I0428 20:27:09.195715  2942 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:09.195719  2942 net.cpp:139] Memory required for data: 29114800
I0428 20:27:09.195720  2942 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:09.195729  2942 net.cpp:86] Creating Layer conv1
I0428 20:27:09.195734  2942 net.cpp:408] conv1 <- pool0
I0428 20:27:09.195737  2942 net.cpp:382] conv1 -> conv1
I0428 20:27:09.197409  2942 net.cpp:124] Setting up conv1
I0428 20:27:09.197438  2942 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:09.197458  2942 net.cpp:139] Memory required for data: 29242800
I0428 20:27:09.197465  2942 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:09.197473  2942 net.cpp:86] Creating Layer pool1
I0428 20:27:09.197487  2942 net.cpp:408] pool1 <- conv1
I0428 20:27:09.197494  2942 net.cpp:382] pool1 -> pool1
I0428 20:27:09.197536  2942 net.cpp:124] Setting up pool1
I0428 20:27:09.197543  2942 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:09.197546  2942 net.cpp:139] Memory required for data: 29274800
I0428 20:27:09.197549  2942 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:09.197556  2942 net.cpp:86] Creating Layer ip1
I0428 20:27:09.197559  2942 net.cpp:408] ip1 <- pool1
I0428 20:27:09.197564  2942 net.cpp:382] ip1 -> ip1
I0428 20:27:09.197705  2942 net.cpp:124] Setting up ip1
I0428 20:27:09.197715  2942 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:09.197718  2942 net.cpp:139] Memory required for data: 29278800
I0428 20:27:09.197726  2942 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:09.197731  2942 net.cpp:86] Creating Layer relu1
I0428 20:27:09.197734  2942 net.cpp:408] relu1 <- ip1
I0428 20:27:09.197739  2942 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:09.198537  2942 net.cpp:124] Setting up relu1
I0428 20:27:09.198568  2942 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:09.198572  2942 net.cpp:139] Memory required for data: 29282800
I0428 20:27:09.198575  2942 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:27:09.198582  2942 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:27:09.198586  2942 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:27:09.198592  2942 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:27:09.198598  2942 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:27:09.198658  2942 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:27:09.198671  2942 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:09.198675  2942 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:09.198678  2942 net.cpp:139] Memory required for data: 29290800
I0428 20:27:09.198681  2942 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:09.198689  2942 net.cpp:86] Creating Layer accuracy
I0428 20:27:09.198693  2942 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:27:09.198698  2942 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:09.198701  2942 net.cpp:382] accuracy -> accuracy
I0428 20:27:09.198707  2942 net.cpp:124] Setting up accuracy
I0428 20:27:09.198716  2942 net.cpp:131] Top shape: (1)
I0428 20:27:09.198719  2942 net.cpp:139] Memory required for data: 29290804
I0428 20:27:09.198726  2942 layer_factory.hpp:77] Creating layer loss
I0428 20:27:09.198732  2942 net.cpp:86] Creating Layer loss
I0428 20:27:09.198735  2942 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:27:09.198738  2942 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:09.198747  2942 net.cpp:382] loss -> loss
I0428 20:27:09.198752  2942 layer_factory.hpp:77] Creating layer loss
I0428 20:27:09.199045  2942 net.cpp:124] Setting up loss
I0428 20:27:09.199070  2942 net.cpp:131] Top shape: (1)
I0428 20:27:09.199074  2942 net.cpp:134]     with loss weight 1
I0428 20:27:09.199095  2942 net.cpp:139] Memory required for data: 29290808
I0428 20:27:09.199098  2942 net.cpp:200] loss needs backward computation.
I0428 20:27:09.199102  2942 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:09.199105  2942 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:27:09.199108  2942 net.cpp:200] relu1 needs backward computation.
I0428 20:27:09.199111  2942 net.cpp:200] ip1 needs backward computation.
I0428 20:27:09.199115  2942 net.cpp:200] pool1 needs backward computation.
I0428 20:27:09.199117  2942 net.cpp:200] conv1 needs backward computation.
I0428 20:27:09.199121  2942 net.cpp:200] pool0 needs backward computation.
I0428 20:27:09.199125  2942 net.cpp:200] conv0 needs backward computation.
I0428 20:27:09.199129  2942 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:09.199133  2942 net.cpp:202] mnist does not need backward computation.
I0428 20:27:09.199136  2942 net.cpp:244] This network produces output accuracy
I0428 20:27:09.199141  2942 net.cpp:244] This network produces output loss
I0428 20:27:09.199162  2942 net.cpp:257] Network initialization done.
I0428 20:27:09.199195  2942 solver.cpp:56] Solver scaffolding done.
I0428 20:27:09.199410  2942 caffe.cpp:248] Starting Optimization
I0428 20:27:09.199417  2942 solver.cpp:273] Solving LeNet
I0428 20:27:09.199420  2942 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:09.200281  2942 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:09.208041  2942 blocking_queue.cpp:49] Waiting for data
I0428 20:27:09.292373  2995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:09.293758  2942 solver.cpp:398]     Test net output #0: accuracy = 0.0974
I0428 20:27:09.293793  2942 solver.cpp:398]     Test net output #1: loss = 2.49298 (* 1 = 2.49298 loss)
I0428 20:27:09.298415  2942 solver.cpp:219] Iteration 0 (-5.67978e-31 iter/s, 0.0989676s/100 iters), loss = 2.41676
I0428 20:27:09.298454  2942 solver.cpp:238]     Train net output #0: loss = 2.41676 (* 1 = 2.41676 loss)
I0428 20:27:09.298465  2942 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:09.482239  2942 solver.cpp:219] Iteration 100 (544.167 iter/s, 0.183767s/100 iters), loss = 0.280826
I0428 20:27:09.482265  2942 solver.cpp:238]     Train net output #0: loss = 0.280826 (* 1 = 0.280826 loss)
I0428 20:27:09.482271  2942 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:09.675894  2942 solver.cpp:219] Iteration 200 (516.503 iter/s, 0.19361s/100 iters), loss = 0.18347
I0428 20:27:09.675941  2942 solver.cpp:238]     Train net output #0: loss = 0.18347 (* 1 = 0.18347 loss)
I0428 20:27:09.675948  2942 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:09.869551  2942 solver.cpp:219] Iteration 300 (516.544 iter/s, 0.193594s/100 iters), loss = 0.17981
I0428 20:27:09.869592  2942 solver.cpp:238]     Train net output #0: loss = 0.17981 (* 1 = 0.17981 loss)
I0428 20:27:09.869598  2942 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:10.053581  2942 solver.cpp:219] Iteration 400 (543.555 iter/s, 0.183974s/100 iters), loss = 0.136199
I0428 20:27:10.053622  2942 solver.cpp:238]     Train net output #0: loss = 0.136199 (* 1 = 0.136199 loss)
I0428 20:27:10.053629  2942 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:10.236390  2942 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:10.326146  2995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:10.327567  2942 solver.cpp:398]     Test net output #0: accuracy = 0.9532
I0428 20:27:10.327605  2942 solver.cpp:398]     Test net output #1: loss = 0.157128 (* 1 = 0.157128 loss)
I0428 20:27:10.329505  2942 solver.cpp:219] Iteration 500 (362.497 iter/s, 0.275864s/100 iters), loss = 0.163514
I0428 20:27:10.329550  2942 solver.cpp:238]     Train net output #0: loss = 0.163514 (* 1 = 0.163514 loss)
I0428 20:27:10.329558  2942 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:10.514086  2942 solver.cpp:219] Iteration 600 (541.93 iter/s, 0.184526s/100 iters), loss = 0.102249
I0428 20:27:10.514129  2942 solver.cpp:238]     Train net output #0: loss = 0.102249 (* 1 = 0.102249 loss)
I0428 20:27:10.514137  2942 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:10.696223  2942 solver.cpp:219] Iteration 700 (549.204 iter/s, 0.182082s/100 iters), loss = 0.280057
I0428 20:27:10.696250  2942 solver.cpp:238]     Train net output #0: loss = 0.280057 (* 1 = 0.280057 loss)
I0428 20:27:10.696257  2942 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:10.878278  2942 solver.cpp:219] Iteration 800 (549.411 iter/s, 0.182013s/100 iters), loss = 0.302269
I0428 20:27:10.878319  2942 solver.cpp:238]     Train net output #0: loss = 0.302269 (* 1 = 0.302269 loss)
I0428 20:27:10.878326  2942 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:11.062108  2942 solver.cpp:219] Iteration 900 (544.098 iter/s, 0.18379s/100 iters), loss = 0.224606
I0428 20:27:11.062150  2942 solver.cpp:238]     Train net output #0: loss = 0.224606 (* 1 = 0.224606 loss)
I0428 20:27:11.062156  2942 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:11.123461  2994 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:11.243466  2942 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:11.245051  2942 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:11.246035  2942 solver.cpp:311] Iteration 1000, loss = 0.157411
I0428 20:27:11.246052  2942 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:11.337404  2995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:11.338807  2942 solver.cpp:398]     Test net output #0: accuracy = 0.9682
I0428 20:27:11.338834  2942 solver.cpp:398]     Test net output #1: loss = 0.0961115 (* 1 = 0.0961115 loss)
I0428 20:27:11.338857  2942 solver.cpp:316] Optimization Done.
I0428 20:27:11.338862  2942 caffe.cpp:259] Optimization Done.
