I0428 19:50:50.314977 27135 caffe.cpp:218] Using GPUs 0
I0428 19:50:50.347035 27135 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:50.844521 27135 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test616.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:50.844682 27135 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test616.prototxt
I0428 19:50:50.845063 27135 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:50.845080 27135 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:50.845171 27135 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:50.845235 27135 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:50.845314 27135 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:50.845332 27135 net.cpp:86] Creating Layer mnist
I0428 19:50:50.845340 27135 net.cpp:382] mnist -> data
I0428 19:50:50.845357 27135 net.cpp:382] mnist -> label
I0428 19:50:50.846285 27135 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:50.848351 27135 net.cpp:124] Setting up mnist
I0428 19:50:50.848381 27135 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:50.848386 27135 net.cpp:131] Top shape: 64 (64)
I0428 19:50:50.848388 27135 net.cpp:139] Memory required for data: 200960
I0428 19:50:50.848394 27135 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:50.848415 27135 net.cpp:86] Creating Layer conv0
I0428 19:50:50.848433 27135 net.cpp:408] conv0 <- data
I0428 19:50:50.848443 27135 net.cpp:382] conv0 -> conv0
I0428 19:50:51.082401 27135 net.cpp:124] Setting up conv0
I0428 19:50:51.082440 27135 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:51.082444 27135 net.cpp:139] Memory required for data: 938240
I0428 19:50:51.082459 27135 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:51.082471 27135 net.cpp:86] Creating Layer pool0
I0428 19:50:51.082475 27135 net.cpp:408] pool0 <- conv0
I0428 19:50:51.082480 27135 net.cpp:382] pool0 -> pool0
I0428 19:50:51.082540 27135 net.cpp:124] Setting up pool0
I0428 19:50:51.082559 27135 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:51.082562 27135 net.cpp:139] Memory required for data: 1122560
I0428 19:50:51.082566 27135 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:51.082576 27135 net.cpp:86] Creating Layer conv1
I0428 19:50:51.082579 27135 net.cpp:408] conv1 <- pool0
I0428 19:50:51.082584 27135 net.cpp:382] conv1 -> conv1
I0428 19:50:51.085216 27135 net.cpp:124] Setting up conv1
I0428 19:50:51.085244 27135 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:51.085248 27135 net.cpp:139] Memory required for data: 1286400
I0428 19:50:51.085258 27135 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:51.085264 27135 net.cpp:86] Creating Layer pool1
I0428 19:50:51.085268 27135 net.cpp:408] pool1 <- conv1
I0428 19:50:51.085273 27135 net.cpp:382] pool1 -> pool1
I0428 19:50:51.085337 27135 net.cpp:124] Setting up pool1
I0428 19:50:51.085342 27135 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:51.085345 27135 net.cpp:139] Memory required for data: 1327360
I0428 19:50:51.085364 27135 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:51.085371 27135 net.cpp:86] Creating Layer ip1
I0428 19:50:51.085373 27135 net.cpp:408] ip1 <- pool1
I0428 19:50:51.085378 27135 net.cpp:382] ip1 -> ip1
I0428 19:50:51.086344 27135 net.cpp:124] Setting up ip1
I0428 19:50:51.086355 27135 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:51.086374 27135 net.cpp:139] Memory required for data: 1340160
I0428 19:50:51.086381 27135 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:51.086387 27135 net.cpp:86] Creating Layer relu1
I0428 19:50:51.086391 27135 net.cpp:408] relu1 <- ip1
I0428 19:50:51.086395 27135 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:51.086575 27135 net.cpp:124] Setting up relu1
I0428 19:50:51.086582 27135 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:51.086585 27135 net.cpp:139] Memory required for data: 1352960
I0428 19:50:51.086589 27135 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:51.086596 27135 net.cpp:86] Creating Layer ip2
I0428 19:50:51.086598 27135 net.cpp:408] ip2 <- ip1
I0428 19:50:51.086603 27135 net.cpp:382] ip2 -> ip2
I0428 19:50:51.086709 27135 net.cpp:124] Setting up ip2
I0428 19:50:51.086715 27135 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:51.086719 27135 net.cpp:139] Memory required for data: 1355520
I0428 19:50:51.086724 27135 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:51.086730 27135 net.cpp:86] Creating Layer relu2
I0428 19:50:51.086732 27135 net.cpp:408] relu2 <- ip2
I0428 19:50:51.086736 27135 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:51.087451 27135 net.cpp:124] Setting up relu2
I0428 19:50:51.087463 27135 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:51.087482 27135 net.cpp:139] Memory required for data: 1358080
I0428 19:50:51.087486 27135 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:51.087492 27135 net.cpp:86] Creating Layer ip3
I0428 19:50:51.087496 27135 net.cpp:408] ip3 <- ip2
I0428 19:50:51.087502 27135 net.cpp:382] ip3 -> ip3
I0428 19:50:51.087610 27135 net.cpp:124] Setting up ip3
I0428 19:50:51.087617 27135 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:51.087620 27135 net.cpp:139] Memory required for data: 1360640
I0428 19:50:51.087628 27135 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:51.087633 27135 net.cpp:86] Creating Layer relu3
I0428 19:50:51.087636 27135 net.cpp:408] relu3 <- ip3
I0428 19:50:51.087641 27135 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:51.087811 27135 net.cpp:124] Setting up relu3
I0428 19:50:51.087819 27135 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:51.087822 27135 net.cpp:139] Memory required for data: 1363200
I0428 19:50:51.087826 27135 layer_factory.hpp:77] Creating layer loss
I0428 19:50:51.087832 27135 net.cpp:86] Creating Layer loss
I0428 19:50:51.087836 27135 net.cpp:408] loss <- ip3
I0428 19:50:51.087838 27135 net.cpp:408] loss <- label
I0428 19:50:51.087843 27135 net.cpp:382] loss -> loss
I0428 19:50:51.087874 27135 layer_factory.hpp:77] Creating layer loss
I0428 19:50:51.088099 27135 net.cpp:124] Setting up loss
I0428 19:50:51.088106 27135 net.cpp:131] Top shape: (1)
I0428 19:50:51.088109 27135 net.cpp:134]     with loss weight 1
I0428 19:50:51.088124 27135 net.cpp:139] Memory required for data: 1363204
I0428 19:50:51.088126 27135 net.cpp:200] loss needs backward computation.
I0428 19:50:51.088130 27135 net.cpp:200] relu3 needs backward computation.
I0428 19:50:51.088134 27135 net.cpp:200] ip3 needs backward computation.
I0428 19:50:51.088136 27135 net.cpp:200] relu2 needs backward computation.
I0428 19:50:51.088138 27135 net.cpp:200] ip2 needs backward computation.
I0428 19:50:51.088141 27135 net.cpp:200] relu1 needs backward computation.
I0428 19:50:51.088145 27135 net.cpp:200] ip1 needs backward computation.
I0428 19:50:51.088147 27135 net.cpp:200] pool1 needs backward computation.
I0428 19:50:51.088150 27135 net.cpp:200] conv1 needs backward computation.
I0428 19:50:51.088153 27135 net.cpp:200] pool0 needs backward computation.
I0428 19:50:51.088156 27135 net.cpp:200] conv0 needs backward computation.
I0428 19:50:51.088160 27135 net.cpp:202] mnist does not need backward computation.
I0428 19:50:51.088162 27135 net.cpp:244] This network produces output loss
I0428 19:50:51.088171 27135 net.cpp:257] Network initialization done.
I0428 19:50:51.088477 27135 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test616.prototxt
I0428 19:50:51.088518 27135 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:51.088601 27135 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:51.088691 27135 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:51.088734 27135 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:51.088747 27135 net.cpp:86] Creating Layer mnist
I0428 19:50:51.088750 27135 net.cpp:382] mnist -> data
I0428 19:50:51.088757 27135 net.cpp:382] mnist -> label
I0428 19:50:51.088877 27135 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:51.091056 27135 net.cpp:124] Setting up mnist
I0428 19:50:51.091084 27135 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:51.091104 27135 net.cpp:131] Top shape: 100 (100)
I0428 19:50:51.091107 27135 net.cpp:139] Memory required for data: 314000
I0428 19:50:51.091111 27135 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:51.091156 27135 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:51.091176 27135 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:51.091179 27135 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:51.091187 27135 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:51.091240 27135 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:51.091245 27135 net.cpp:131] Top shape: 100 (100)
I0428 19:50:51.091249 27135 net.cpp:131] Top shape: 100 (100)
I0428 19:50:51.091253 27135 net.cpp:139] Memory required for data: 314800
I0428 19:50:51.091254 27135 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:51.091262 27135 net.cpp:86] Creating Layer conv0
I0428 19:50:51.091281 27135 net.cpp:408] conv0 <- data
I0428 19:50:51.091286 27135 net.cpp:382] conv0 -> conv0
I0428 19:50:51.092878 27135 net.cpp:124] Setting up conv0
I0428 19:50:51.092892 27135 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:51.092896 27135 net.cpp:139] Memory required for data: 1466800
I0428 19:50:51.092905 27135 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:51.092911 27135 net.cpp:86] Creating Layer pool0
I0428 19:50:51.092914 27135 net.cpp:408] pool0 <- conv0
I0428 19:50:51.092919 27135 net.cpp:382] pool0 -> pool0
I0428 19:50:51.092955 27135 net.cpp:124] Setting up pool0
I0428 19:50:51.092960 27135 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:51.092963 27135 net.cpp:139] Memory required for data: 1754800
I0428 19:50:51.092967 27135 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:51.092974 27135 net.cpp:86] Creating Layer conv1
I0428 19:50:51.092978 27135 net.cpp:408] conv1 <- pool0
I0428 19:50:51.092983 27135 net.cpp:382] conv1 -> conv1
I0428 19:50:51.095077 27135 net.cpp:124] Setting up conv1
I0428 19:50:51.095089 27135 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:51.095093 27135 net.cpp:139] Memory required for data: 2010800
I0428 19:50:51.095103 27135 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:51.095120 27135 net.cpp:86] Creating Layer pool1
I0428 19:50:51.095124 27135 net.cpp:408] pool1 <- conv1
I0428 19:50:51.095144 27135 net.cpp:382] pool1 -> pool1
I0428 19:50:51.095180 27135 net.cpp:124] Setting up pool1
I0428 19:50:51.095185 27135 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:51.095187 27135 net.cpp:139] Memory required for data: 2074800
I0428 19:50:51.095191 27135 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:51.095196 27135 net.cpp:86] Creating Layer ip1
I0428 19:50:51.095199 27135 net.cpp:408] ip1 <- pool1
I0428 19:50:51.095203 27135 net.cpp:382] ip1 -> ip1
I0428 19:50:51.095363 27135 net.cpp:124] Setting up ip1
I0428 19:50:51.095371 27135 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:51.095384 27135 net.cpp:139] Memory required for data: 2094800
I0428 19:50:51.095393 27135 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:51.095398 27135 net.cpp:86] Creating Layer relu1
I0428 19:50:51.095402 27135 net.cpp:408] relu1 <- ip1
I0428 19:50:51.095407 27135 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:51.095587 27135 net.cpp:124] Setting up relu1
I0428 19:50:51.095597 27135 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:51.095600 27135 net.cpp:139] Memory required for data: 2114800
I0428 19:50:51.095610 27135 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:51.095616 27135 net.cpp:86] Creating Layer ip2
I0428 19:50:51.095625 27135 net.cpp:408] ip2 <- ip1
I0428 19:50:51.095631 27135 net.cpp:382] ip2 -> ip2
I0428 19:50:51.095738 27135 net.cpp:124] Setting up ip2
I0428 19:50:51.095746 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.095748 27135 net.cpp:139] Memory required for data: 2118800
I0428 19:50:51.095753 27135 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:51.095758 27135 net.cpp:86] Creating Layer relu2
I0428 19:50:51.095762 27135 net.cpp:408] relu2 <- ip2
I0428 19:50:51.095772 27135 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:51.095921 27135 net.cpp:124] Setting up relu2
I0428 19:50:51.095928 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.095932 27135 net.cpp:139] Memory required for data: 2122800
I0428 19:50:51.095934 27135 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:51.095940 27135 net.cpp:86] Creating Layer ip3
I0428 19:50:51.095950 27135 net.cpp:408] ip3 <- ip2
I0428 19:50:51.095957 27135 net.cpp:382] ip3 -> ip3
I0428 19:50:51.096060 27135 net.cpp:124] Setting up ip3
I0428 19:50:51.096066 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.096070 27135 net.cpp:139] Memory required for data: 2126800
I0428 19:50:51.096076 27135 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:51.096081 27135 net.cpp:86] Creating Layer relu3
I0428 19:50:51.096084 27135 net.cpp:408] relu3 <- ip3
I0428 19:50:51.096088 27135 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:51.096969 27135 net.cpp:124] Setting up relu3
I0428 19:50:51.096982 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.096987 27135 net.cpp:139] Memory required for data: 2130800
I0428 19:50:51.096990 27135 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:51.096995 27135 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:51.096999 27135 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:51.097005 27135 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:51.097012 27135 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:51.097056 27135 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:51.097061 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.097064 27135 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:51.097067 27135 net.cpp:139] Memory required for data: 2138800
I0428 19:50:51.097070 27135 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:51.097075 27135 net.cpp:86] Creating Layer accuracy
I0428 19:50:51.097079 27135 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:51.097082 27135 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:51.097086 27135 net.cpp:382] accuracy -> accuracy
I0428 19:50:51.097093 27135 net.cpp:124] Setting up accuracy
I0428 19:50:51.097096 27135 net.cpp:131] Top shape: (1)
I0428 19:50:51.097100 27135 net.cpp:139] Memory required for data: 2138804
I0428 19:50:51.097102 27135 layer_factory.hpp:77] Creating layer loss
I0428 19:50:51.097107 27135 net.cpp:86] Creating Layer loss
I0428 19:50:51.097111 27135 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:51.097115 27135 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:51.097118 27135 net.cpp:382] loss -> loss
I0428 19:50:51.097124 27135 layer_factory.hpp:77] Creating layer loss
I0428 19:50:51.097409 27135 net.cpp:124] Setting up loss
I0428 19:50:51.097417 27135 net.cpp:131] Top shape: (1)
I0428 19:50:51.097437 27135 net.cpp:134]     with loss weight 1
I0428 19:50:51.097445 27135 net.cpp:139] Memory required for data: 2138808
I0428 19:50:51.097462 27135 net.cpp:200] loss needs backward computation.
I0428 19:50:51.097471 27135 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:51.097476 27135 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:51.097478 27135 net.cpp:200] relu3 needs backward computation.
I0428 19:50:51.097481 27135 net.cpp:200] ip3 needs backward computation.
I0428 19:50:51.097484 27135 net.cpp:200] relu2 needs backward computation.
I0428 19:50:51.097486 27135 net.cpp:200] ip2 needs backward computation.
I0428 19:50:51.097489 27135 net.cpp:200] relu1 needs backward computation.
I0428 19:50:51.097491 27135 net.cpp:200] ip1 needs backward computation.
I0428 19:50:51.097496 27135 net.cpp:200] pool1 needs backward computation.
I0428 19:50:51.097504 27135 net.cpp:200] conv1 needs backward computation.
I0428 19:50:51.097507 27135 net.cpp:200] pool0 needs backward computation.
I0428 19:50:51.097510 27135 net.cpp:200] conv0 needs backward computation.
I0428 19:50:51.097519 27135 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:51.097522 27135 net.cpp:202] mnist does not need backward computation.
I0428 19:50:51.097525 27135 net.cpp:244] This network produces output accuracy
I0428 19:50:51.097528 27135 net.cpp:244] This network produces output loss
I0428 19:50:51.097539 27135 net.cpp:257] Network initialization done.
I0428 19:50:51.097579 27135 solver.cpp:56] Solver scaffolding done.
I0428 19:50:51.097930 27135 caffe.cpp:248] Starting Optimization
I0428 19:50:51.097937 27135 solver.cpp:273] Solving LeNet
I0428 19:50:51.097940 27135 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:51.098696 27135 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:51.100965 27135 blocking_queue.cpp:49] Waiting for data
I0428 19:50:51.173311 27142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:51.173804 27135 solver.cpp:398]     Test net output #0: accuracy = 0.1016
I0428 19:50:51.173825 27135 solver.cpp:398]     Test net output #1: loss = 2.30964 (* 1 = 2.30964 loss)
I0428 19:50:51.175683 27135 solver.cpp:219] Iteration 0 (-1.49771e-31 iter/s, 0.0777187s/100 iters), loss = 2.3027
I0428 19:50:51.175709 27135 solver.cpp:238]     Train net output #0: loss = 2.3027 (* 1 = 2.3027 loss)
I0428 19:50:51.175719 27135 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:51.264088 27135 solver.cpp:219] Iteration 100 (1131.64 iter/s, 0.0883671s/100 iters), loss = 0.505004
I0428 19:50:51.264113 27135 solver.cpp:238]     Train net output #0: loss = 0.505004 (* 1 = 0.505004 loss)
I0428 19:50:51.264120 27135 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:51.343303 27135 solver.cpp:219] Iteration 200 (1262.93 iter/s, 0.0791808s/100 iters), loss = 0.280923
I0428 19:50:51.343328 27135 solver.cpp:238]     Train net output #0: loss = 0.280923 (* 1 = 0.280923 loss)
I0428 19:50:51.343348 27135 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:51.418640 27135 solver.cpp:219] Iteration 300 (1327.95 iter/s, 0.0753039s/100 iters), loss = 0.287312
I0428 19:50:51.418679 27135 solver.cpp:238]     Train net output #0: loss = 0.287312 (* 1 = 0.287312 loss)
I0428 19:50:51.418685 27135 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:51.492549 27135 solver.cpp:219] Iteration 400 (1353.61 iter/s, 0.0738765s/100 iters), loss = 0.164285
I0428 19:50:51.492602 27135 solver.cpp:238]     Train net output #0: loss = 0.164285 (* 1 = 0.164285 loss)
I0428 19:50:51.492609 27135 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:51.566741 27135 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:51.635082 27142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:51.635579 27135 solver.cpp:398]     Test net output #0: accuracy = 0.9518
I0428 19:50:51.635596 27135 solver.cpp:398]     Test net output #1: loss = 0.152508 (* 1 = 0.152508 loss)
I0428 19:50:51.636416 27135 solver.cpp:219] Iteration 500 (695.325 iter/s, 0.143818s/100 iters), loss = 0.181708
I0428 19:50:51.636454 27135 solver.cpp:238]     Train net output #0: loss = 0.181708 (* 1 = 0.181708 loss)
I0428 19:50:51.636468 27135 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:51.721295 27135 solver.cpp:219] Iteration 600 (1178.81 iter/s, 0.0848312s/100 iters), loss = 0.113526
I0428 19:50:51.721335 27135 solver.cpp:238]     Train net output #0: loss = 0.113526 (* 1 = 0.113526 loss)
I0428 19:50:51.721341 27135 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:51.799515 27135 solver.cpp:219] Iteration 700 (1278.99 iter/s, 0.0781865s/100 iters), loss = 0.269066
I0428 19:50:51.799553 27135 solver.cpp:238]     Train net output #0: loss = 0.269066 (* 1 = 0.269066 loss)
I0428 19:50:51.799559 27135 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:51.878083 27135 solver.cpp:219] Iteration 800 (1273.54 iter/s, 0.0785213s/100 iters), loss = 0.376783
I0428 19:50:51.878123 27135 solver.cpp:238]     Train net output #0: loss = 0.376783 (* 1 = 0.376783 loss)
I0428 19:50:51.878129 27135 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:51.954293 27135 solver.cpp:219] Iteration 900 (1312.74 iter/s, 0.0761764s/100 iters), loss = 0.16115
I0428 19:50:51.954331 27135 solver.cpp:238]     Train net output #0: loss = 0.16115 (* 1 = 0.16115 loss)
I0428 19:50:51.954337 27135 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:51.979779 27141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:52.029055 27135 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:52.029923 27135 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:52.030454 27135 solver.cpp:311] Iteration 1000, loss = 0.109257
I0428 19:50:52.030469 27135 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:52.102288 27142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:52.102819 27135 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0428 19:50:52.102839 27135 solver.cpp:398]     Test net output #1: loss = 0.100252 (* 1 = 0.100252 loss)
I0428 19:50:52.102844 27135 solver.cpp:316] Optimization Done.
I0428 19:50:52.102847 27135 caffe.cpp:259] Optimization Done.
