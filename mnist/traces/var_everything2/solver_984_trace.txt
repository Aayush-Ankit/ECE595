I0428 20:04:52.836570 30483 caffe.cpp:218] Using GPUs 0
I0428 20:04:52.867494 30483 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:53.316002 30483 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test984.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:53.316139 30483 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test984.prototxt
I0428 20:04:53.316473 30483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:53.316488 30483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:53.316563 30483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:53.316648 30483 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:53.316781 30483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:53.316802 30483 net.cpp:86] Creating Layer mnist
I0428 20:04:53.316807 30483 net.cpp:382] mnist -> data
I0428 20:04:53.316845 30483 net.cpp:382] mnist -> label
I0428 20:04:53.317844 30483 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:53.320003 30483 net.cpp:124] Setting up mnist
I0428 20:04:53.320046 30483 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:53.320078 30483 net.cpp:131] Top shape: 64 (64)
I0428 20:04:53.320082 30483 net.cpp:139] Memory required for data: 200960
I0428 20:04:53.320088 30483 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:53.320101 30483 net.cpp:86] Creating Layer conv0
I0428 20:04:53.320106 30483 net.cpp:408] conv0 <- data
I0428 20:04:53.320116 30483 net.cpp:382] conv0 -> conv0
I0428 20:04:53.552942 30483 net.cpp:124] Setting up conv0
I0428 20:04:53.552985 30483 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:53.552989 30483 net.cpp:139] Memory required for data: 3887360
I0428 20:04:53.553022 30483 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:53.553050 30483 net.cpp:86] Creating Layer pool0
I0428 20:04:53.553055 30483 net.cpp:408] pool0 <- conv0
I0428 20:04:53.553061 30483 net.cpp:382] pool0 -> pool0
I0428 20:04:53.553103 30483 net.cpp:124] Setting up pool0
I0428 20:04:53.553117 30483 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:53.553120 30483 net.cpp:139] Memory required for data: 4808960
I0428 20:04:53.553123 30483 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:53.553133 30483 net.cpp:86] Creating Layer conv1
I0428 20:04:53.553136 30483 net.cpp:408] conv1 <- pool0
I0428 20:04:53.553141 30483 net.cpp:382] conv1 -> conv1
I0428 20:04:53.555901 30483 net.cpp:124] Setting up conv1
I0428 20:04:53.555930 30483 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:53.555934 30483 net.cpp:139] Memory required for data: 4841728
I0428 20:04:53.555943 30483 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:53.555949 30483 net.cpp:86] Creating Layer pool1
I0428 20:04:53.555953 30483 net.cpp:408] pool1 <- conv1
I0428 20:04:53.555958 30483 net.cpp:382] pool1 -> pool1
I0428 20:04:53.555992 30483 net.cpp:124] Setting up pool1
I0428 20:04:53.555997 30483 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:53.555999 30483 net.cpp:139] Memory required for data: 4849920
I0428 20:04:53.556002 30483 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:53.556010 30483 net.cpp:86] Creating Layer ip1
I0428 20:04:53.556012 30483 net.cpp:408] ip1 <- pool1
I0428 20:04:53.556016 30483 net.cpp:382] ip1 -> ip1
I0428 20:04:53.556118 30483 net.cpp:124] Setting up ip1
I0428 20:04:53.556124 30483 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:53.556128 30483 net.cpp:139] Memory required for data: 4862720
I0428 20:04:53.556134 30483 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:53.556139 30483 net.cpp:86] Creating Layer relu1
I0428 20:04:53.556143 30483 net.cpp:408] relu1 <- ip1
I0428 20:04:53.556146 30483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:53.556300 30483 net.cpp:124] Setting up relu1
I0428 20:04:53.556308 30483 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:53.556311 30483 net.cpp:139] Memory required for data: 4875520
I0428 20:04:53.556314 30483 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:53.556320 30483 net.cpp:86] Creating Layer ip2
I0428 20:04:53.556324 30483 net.cpp:408] ip2 <- ip1
I0428 20:04:53.556327 30483 net.cpp:382] ip2 -> ip2
I0428 20:04:53.556419 30483 net.cpp:124] Setting up ip2
I0428 20:04:53.556427 30483 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:53.556429 30483 net.cpp:139] Memory required for data: 4878080
I0428 20:04:53.556434 30483 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:53.556440 30483 net.cpp:86] Creating Layer relu2
I0428 20:04:53.556442 30483 net.cpp:408] relu2 <- ip2
I0428 20:04:53.556447 30483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:53.557137 30483 net.cpp:124] Setting up relu2
I0428 20:04:53.557148 30483 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:53.557168 30483 net.cpp:139] Memory required for data: 4880640
I0428 20:04:53.557170 30483 layer_factory.hpp:77] Creating layer loss
I0428 20:04:53.557183 30483 net.cpp:86] Creating Layer loss
I0428 20:04:53.557185 30483 net.cpp:408] loss <- ip2
I0428 20:04:53.557190 30483 net.cpp:408] loss <- label
I0428 20:04:53.557195 30483 net.cpp:382] loss -> loss
I0428 20:04:53.557210 30483 layer_factory.hpp:77] Creating layer loss
I0428 20:04:53.557426 30483 net.cpp:124] Setting up loss
I0428 20:04:53.557435 30483 net.cpp:131] Top shape: (1)
I0428 20:04:53.557438 30483 net.cpp:134]     with loss weight 1
I0428 20:04:53.557452 30483 net.cpp:139] Memory required for data: 4880644
I0428 20:04:53.557456 30483 net.cpp:200] loss needs backward computation.
I0428 20:04:53.557459 30483 net.cpp:200] relu2 needs backward computation.
I0428 20:04:53.557462 30483 net.cpp:200] ip2 needs backward computation.
I0428 20:04:53.557466 30483 net.cpp:200] relu1 needs backward computation.
I0428 20:04:53.557468 30483 net.cpp:200] ip1 needs backward computation.
I0428 20:04:53.557482 30483 net.cpp:200] pool1 needs backward computation.
I0428 20:04:53.557484 30483 net.cpp:200] conv1 needs backward computation.
I0428 20:04:53.557487 30483 net.cpp:200] pool0 needs backward computation.
I0428 20:04:53.557490 30483 net.cpp:200] conv0 needs backward computation.
I0428 20:04:53.557494 30483 net.cpp:202] mnist does not need backward computation.
I0428 20:04:53.557497 30483 net.cpp:244] This network produces output loss
I0428 20:04:53.557505 30483 net.cpp:257] Network initialization done.
I0428 20:04:53.557831 30483 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test984.prototxt
I0428 20:04:53.557871 30483 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:53.557960 30483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:53.558027 30483 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:53.558073 30483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:53.558084 30483 net.cpp:86] Creating Layer mnist
I0428 20:04:53.558089 30483 net.cpp:382] mnist -> data
I0428 20:04:53.558097 30483 net.cpp:382] mnist -> label
I0428 20:04:53.558212 30483 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:53.560148 30483 net.cpp:124] Setting up mnist
I0428 20:04:53.560176 30483 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:53.560183 30483 net.cpp:131] Top shape: 100 (100)
I0428 20:04:53.560185 30483 net.cpp:139] Memory required for data: 314000
I0428 20:04:53.560189 30483 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:53.560195 30483 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:53.560199 30483 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:53.560204 30483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:53.560210 30483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:53.560314 30483 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:53.560331 30483 net.cpp:131] Top shape: 100 (100)
I0428 20:04:53.560335 30483 net.cpp:131] Top shape: 100 (100)
I0428 20:04:53.560338 30483 net.cpp:139] Memory required for data: 314800
I0428 20:04:53.560341 30483 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:53.560349 30483 net.cpp:86] Creating Layer conv0
I0428 20:04:53.560353 30483 net.cpp:408] conv0 <- data
I0428 20:04:53.560358 30483 net.cpp:382] conv0 -> conv0
I0428 20:04:53.561877 30483 net.cpp:124] Setting up conv0
I0428 20:04:53.561906 30483 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:53.561910 30483 net.cpp:139] Memory required for data: 6074800
I0428 20:04:53.561918 30483 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:53.561924 30483 net.cpp:86] Creating Layer pool0
I0428 20:04:53.561928 30483 net.cpp:408] pool0 <- conv0
I0428 20:04:53.561933 30483 net.cpp:382] pool0 -> pool0
I0428 20:04:53.561965 30483 net.cpp:124] Setting up pool0
I0428 20:04:53.561970 30483 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:53.561974 30483 net.cpp:139] Memory required for data: 7514800
I0428 20:04:53.561976 30483 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:53.561983 30483 net.cpp:86] Creating Layer conv1
I0428 20:04:53.561986 30483 net.cpp:408] conv1 <- pool0
I0428 20:04:53.561991 30483 net.cpp:382] conv1 -> conv1
I0428 20:04:53.564121 30483 net.cpp:124] Setting up conv1
I0428 20:04:53.564148 30483 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:53.564152 30483 net.cpp:139] Memory required for data: 7566000
I0428 20:04:53.564174 30483 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:53.564180 30483 net.cpp:86] Creating Layer pool1
I0428 20:04:53.564183 30483 net.cpp:408] pool1 <- conv1
I0428 20:04:53.564188 30483 net.cpp:382] pool1 -> pool1
I0428 20:04:53.564240 30483 net.cpp:124] Setting up pool1
I0428 20:04:53.564245 30483 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:53.564249 30483 net.cpp:139] Memory required for data: 7578800
I0428 20:04:53.564251 30483 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:53.564256 30483 net.cpp:86] Creating Layer ip1
I0428 20:04:53.564260 30483 net.cpp:408] ip1 <- pool1
I0428 20:04:53.564265 30483 net.cpp:382] ip1 -> ip1
I0428 20:04:53.564365 30483 net.cpp:124] Setting up ip1
I0428 20:04:53.564373 30483 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:53.564376 30483 net.cpp:139] Memory required for data: 7598800
I0428 20:04:53.564383 30483 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:53.564388 30483 net.cpp:86] Creating Layer relu1
I0428 20:04:53.564391 30483 net.cpp:408] relu1 <- ip1
I0428 20:04:53.564396 30483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:53.564569 30483 net.cpp:124] Setting up relu1
I0428 20:04:53.564589 30483 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:53.564591 30483 net.cpp:139] Memory required for data: 7618800
I0428 20:04:53.564594 30483 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:53.564600 30483 net.cpp:86] Creating Layer ip2
I0428 20:04:53.564604 30483 net.cpp:408] ip2 <- ip1
I0428 20:04:53.564609 30483 net.cpp:382] ip2 -> ip2
I0428 20:04:53.564707 30483 net.cpp:124] Setting up ip2
I0428 20:04:53.564713 30483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:53.564715 30483 net.cpp:139] Memory required for data: 7622800
I0428 20:04:53.564721 30483 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:53.564726 30483 net.cpp:86] Creating Layer relu2
I0428 20:04:53.564729 30483 net.cpp:408] relu2 <- ip2
I0428 20:04:53.564733 30483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:53.564927 30483 net.cpp:124] Setting up relu2
I0428 20:04:53.564937 30483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:53.564940 30483 net.cpp:139] Memory required for data: 7626800
I0428 20:04:53.564944 30483 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:04:53.564947 30483 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:04:53.564951 30483 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:04:53.564956 30483 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:04:53.564972 30483 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:04:53.565028 30483 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:04:53.565035 30483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:53.565039 30483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:53.565042 30483 net.cpp:139] Memory required for data: 7634800
I0428 20:04:53.565044 30483 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:53.565050 30483 net.cpp:86] Creating Layer accuracy
I0428 20:04:53.565053 30483 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:04:53.565057 30483 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:53.565062 30483 net.cpp:382] accuracy -> accuracy
I0428 20:04:53.565068 30483 net.cpp:124] Setting up accuracy
I0428 20:04:53.565071 30483 net.cpp:131] Top shape: (1)
I0428 20:04:53.565074 30483 net.cpp:139] Memory required for data: 7634804
I0428 20:04:53.565078 30483 layer_factory.hpp:77] Creating layer loss
I0428 20:04:53.565081 30483 net.cpp:86] Creating Layer loss
I0428 20:04:53.565084 30483 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:04:53.565088 30483 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:53.565093 30483 net.cpp:382] loss -> loss
I0428 20:04:53.565111 30483 layer_factory.hpp:77] Creating layer loss
I0428 20:04:53.565403 30483 net.cpp:124] Setting up loss
I0428 20:04:53.565413 30483 net.cpp:131] Top shape: (1)
I0428 20:04:53.565417 30483 net.cpp:134]     with loss weight 1
I0428 20:04:53.565423 30483 net.cpp:139] Memory required for data: 7634808
I0428 20:04:53.565428 30483 net.cpp:200] loss needs backward computation.
I0428 20:04:53.565431 30483 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:53.565435 30483 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:04:53.565438 30483 net.cpp:200] relu2 needs backward computation.
I0428 20:04:53.565443 30483 net.cpp:200] ip2 needs backward computation.
I0428 20:04:53.565445 30483 net.cpp:200] relu1 needs backward computation.
I0428 20:04:53.565464 30483 net.cpp:200] ip1 needs backward computation.
I0428 20:04:53.565467 30483 net.cpp:200] pool1 needs backward computation.
I0428 20:04:53.565471 30483 net.cpp:200] conv1 needs backward computation.
I0428 20:04:53.565481 30483 net.cpp:200] pool0 needs backward computation.
I0428 20:04:53.565485 30483 net.cpp:200] conv0 needs backward computation.
I0428 20:04:53.565488 30483 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:53.565492 30483 net.cpp:202] mnist does not need backward computation.
I0428 20:04:53.565495 30483 net.cpp:244] This network produces output accuracy
I0428 20:04:53.565500 30483 net.cpp:244] This network produces output loss
I0428 20:04:53.565510 30483 net.cpp:257] Network initialization done.
I0428 20:04:53.565548 30483 solver.cpp:56] Solver scaffolding done.
I0428 20:04:53.565872 30483 caffe.cpp:248] Starting Optimization
I0428 20:04:53.565878 30483 solver.cpp:273] Solving LeNet
I0428 20:04:53.565881 30483 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:53.566675 30483 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:53.571983 30483 blocking_queue.cpp:49] Waiting for data
I0428 20:04:53.632128 30490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:53.632715 30483 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 20:04:53.632750 30483 solver.cpp:398]     Test net output #1: loss = 2.31256 (* 1 = 2.31256 loss)
I0428 20:04:53.635941 30483 solver.cpp:219] Iteration 0 (-5.69486e-31 iter/s, 0.0700221s/100 iters), loss = 2.30747
I0428 20:04:53.635978 30483 solver.cpp:238]     Train net output #0: loss = 2.30747 (* 1 = 2.30747 loss)
I0428 20:04:53.635989 30483 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:53.718395 30483 solver.cpp:219] Iteration 100 (1213.26 iter/s, 0.0824228s/100 iters), loss = 1.02598
I0428 20:04:53.718435 30483 solver.cpp:238]     Train net output #0: loss = 1.02598 (* 1 = 1.02598 loss)
I0428 20:04:53.718441 30483 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:53.799676 30483 solver.cpp:219] Iteration 200 (1230.78 iter/s, 0.0812492s/100 iters), loss = 0.802418
I0428 20:04:53.799728 30483 solver.cpp:238]     Train net output #0: loss = 0.802418 (* 1 = 0.802418 loss)
I0428 20:04:53.799736 30483 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:53.879494 30483 solver.cpp:219] Iteration 300 (1253.55 iter/s, 0.0797737s/100 iters), loss = 0.523898
I0428 20:04:53.879534 30483 solver.cpp:238]     Train net output #0: loss = 0.523898 (* 1 = 0.523898 loss)
I0428 20:04:53.879554 30483 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:53.971722 30483 solver.cpp:219] Iteration 400 (1084.67 iter/s, 0.0921938s/100 iters), loss = 0.480406
I0428 20:04:53.971746 30483 solver.cpp:238]     Train net output #0: loss = 0.480406 (* 1 = 0.480406 loss)
I0428 20:04:53.971752 30483 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:54.051985 30483 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:54.105339 30490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:54.105907 30483 solver.cpp:398]     Test net output #0: accuracy = 0.8472
I0428 20:04:54.105942 30483 solver.cpp:398]     Test net output #1: loss = 0.425607 (* 1 = 0.425607 loss)
I0428 20:04:54.106819 30483 solver.cpp:219] Iteration 500 (740.409 iter/s, 0.13506s/100 iters), loss = 0.42123
I0428 20:04:54.106856 30483 solver.cpp:238]     Train net output #0: loss = 0.42123 (* 1 = 0.42123 loss)
I0428 20:04:54.106863 30483 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:54.190723 30483 solver.cpp:219] Iteration 600 (1192.33 iter/s, 0.0838697s/100 iters), loss = 0.498201
I0428 20:04:54.190762 30483 solver.cpp:238]     Train net output #0: loss = 0.498201 (* 1 = 0.498201 loss)
I0428 20:04:54.190771 30483 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:54.276363 30483 solver.cpp:219] Iteration 700 (1168.3 iter/s, 0.0855941s/100 iters), loss = 0.40497
I0428 20:04:54.276392 30483 solver.cpp:238]     Train net output #0: loss = 0.40497 (* 1 = 0.40497 loss)
I0428 20:04:54.276399 30483 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:54.356429 30483 solver.cpp:219] Iteration 800 (1249.54 iter/s, 0.0800297s/100 iters), loss = 0.466673
I0428 20:04:54.356453 30483 solver.cpp:238]     Train net output #0: loss = 0.466673 (* 1 = 0.466673 loss)
I0428 20:04:54.356461 30483 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:54.441769 30483 solver.cpp:219] Iteration 900 (1172.27 iter/s, 0.0853043s/100 iters), loss = 0.366575
I0428 20:04:54.441817 30483 solver.cpp:238]     Train net output #0: loss = 0.366575 (* 1 = 0.366575 loss)
I0428 20:04:54.441823 30483 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:54.468238 30489 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:54.524444 30483 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:54.525198 30483 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:54.525765 30483 solver.cpp:311] Iteration 1000, loss = 0.329574
I0428 20:04:54.525789 30483 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:54.579715 30490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:54.580287 30483 solver.cpp:398]     Test net output #0: accuracy = 0.8684
I0428 20:04:54.580308 30483 solver.cpp:398]     Test net output #1: loss = 0.349113 (* 1 = 0.349113 loss)
I0428 20:04:54.580313 30483 solver.cpp:316] Optimization Done.
I0428 20:04:54.580317 30483 caffe.cpp:259] Optimization Done.
