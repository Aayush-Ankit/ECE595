I0428 20:33:46.860553  4371 caffe.cpp:218] Using GPUs 0
I0428 20:33:46.894027  4371 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:47.377113  4371 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1594.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:47.377245  4371 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1594.prototxt
I0428 20:33:47.377614  4371 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:47.377660  4371 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:47.377738  4371 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:47.377801  4371 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:47.377881  4371 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:47.377898  4371 net.cpp:86] Creating Layer mnist
I0428 20:33:47.377907  4371 net.cpp:382] mnist -> data
I0428 20:33:47.377923  4371 net.cpp:382] mnist -> label
I0428 20:33:47.378979  4371 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:47.381196  4371 net.cpp:124] Setting up mnist
I0428 20:33:47.381225  4371 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:47.381230  4371 net.cpp:131] Top shape: 64 (64)
I0428 20:33:47.381233  4371 net.cpp:139] Memory required for data: 200960
I0428 20:33:47.381238  4371 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:47.381252  4371 net.cpp:86] Creating Layer conv0
I0428 20:33:47.381268  4371 net.cpp:408] conv0 <- data
I0428 20:33:47.381279  4371 net.cpp:382] conv0 -> conv0
I0428 20:33:47.614105  4371 net.cpp:124] Setting up conv0
I0428 20:33:47.614146  4371 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:47.614151  4371 net.cpp:139] Memory required for data: 14946560
I0428 20:33:47.614164  4371 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:47.614176  4371 net.cpp:86] Creating Layer pool0
I0428 20:33:47.614181  4371 net.cpp:408] pool0 <- conv0
I0428 20:33:47.614186  4371 net.cpp:382] pool0 -> pool0
I0428 20:33:47.614245  4371 net.cpp:124] Setting up pool0
I0428 20:33:47.614251  4371 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:47.614254  4371 net.cpp:139] Memory required for data: 18632960
I0428 20:33:47.614258  4371 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:47.614267  4371 net.cpp:86] Creating Layer conv1
I0428 20:33:47.614270  4371 net.cpp:408] conv1 <- pool0
I0428 20:33:47.614275  4371 net.cpp:382] conv1 -> conv1
I0428 20:33:47.616453  4371 net.cpp:124] Setting up conv1
I0428 20:33:47.616483  4371 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:47.616487  4371 net.cpp:139] Memory required for data: 19042560
I0428 20:33:47.616495  4371 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:47.616503  4371 net.cpp:86] Creating Layer pool1
I0428 20:33:47.616521  4371 net.cpp:408] pool1 <- conv1
I0428 20:33:47.616526  4371 net.cpp:382] pool1 -> pool1
I0428 20:33:47.616561  4371 net.cpp:124] Setting up pool1
I0428 20:33:47.616569  4371 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:47.616571  4371 net.cpp:139] Memory required for data: 19144960
I0428 20:33:47.616574  4371 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:47.616580  4371 net.cpp:86] Creating Layer ip1
I0428 20:33:47.616583  4371 net.cpp:408] ip1 <- pool1
I0428 20:33:47.616588  4371 net.cpp:382] ip1 -> ip1
I0428 20:33:47.616792  4371 net.cpp:124] Setting up ip1
I0428 20:33:47.616801  4371 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:47.616803  4371 net.cpp:139] Memory required for data: 19157760
I0428 20:33:47.616832  4371 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:47.616838  4371 net.cpp:86] Creating Layer relu1
I0428 20:33:47.616858  4371 net.cpp:408] relu1 <- ip1
I0428 20:33:47.616863  4371 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:47.617055  4371 net.cpp:124] Setting up relu1
I0428 20:33:47.617065  4371 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:47.617069  4371 net.cpp:139] Memory required for data: 19170560
I0428 20:33:47.617071  4371 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:47.617079  4371 net.cpp:86] Creating Layer ip2
I0428 20:33:47.617081  4371 net.cpp:408] ip2 <- ip1
I0428 20:33:47.617086  4371 net.cpp:382] ip2 -> ip2
I0428 20:33:47.617228  4371 net.cpp:124] Setting up ip2
I0428 20:33:47.617234  4371 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:47.617251  4371 net.cpp:139] Memory required for data: 19176960
I0428 20:33:47.617257  4371 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:47.617262  4371 net.cpp:86] Creating Layer relu2
I0428 20:33:47.617265  4371 net.cpp:408] relu2 <- ip2
I0428 20:33:47.617269  4371 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:47.617998  4371 net.cpp:124] Setting up relu2
I0428 20:33:47.618010  4371 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:47.618029  4371 net.cpp:139] Memory required for data: 19183360
I0428 20:33:47.618033  4371 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:47.618039  4371 net.cpp:86] Creating Layer ip3
I0428 20:33:47.618043  4371 net.cpp:408] ip3 <- ip2
I0428 20:33:47.618048  4371 net.cpp:382] ip3 -> ip3
I0428 20:33:47.618162  4371 net.cpp:124] Setting up ip3
I0428 20:33:47.618170  4371 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:47.618173  4371 net.cpp:139] Memory required for data: 19185920
I0428 20:33:47.618180  4371 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:47.618185  4371 net.cpp:86] Creating Layer relu3
I0428 20:33:47.618188  4371 net.cpp:408] relu3 <- ip3
I0428 20:33:47.618207  4371 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:47.618357  4371 net.cpp:124] Setting up relu3
I0428 20:33:47.618366  4371 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:47.618369  4371 net.cpp:139] Memory required for data: 19188480
I0428 20:33:47.618373  4371 layer_factory.hpp:77] Creating layer loss
I0428 20:33:47.618379  4371 net.cpp:86] Creating Layer loss
I0428 20:33:47.618382  4371 net.cpp:408] loss <- ip3
I0428 20:33:47.618386  4371 net.cpp:408] loss <- label
I0428 20:33:47.618391  4371 net.cpp:382] loss -> loss
I0428 20:33:47.618405  4371 layer_factory.hpp:77] Creating layer loss
I0428 20:33:47.618643  4371 net.cpp:124] Setting up loss
I0428 20:33:47.618652  4371 net.cpp:131] Top shape: (1)
I0428 20:33:47.618655  4371 net.cpp:134]     with loss weight 1
I0428 20:33:47.618669  4371 net.cpp:139] Memory required for data: 19188484
I0428 20:33:47.618672  4371 net.cpp:200] loss needs backward computation.
I0428 20:33:47.618676  4371 net.cpp:200] relu3 needs backward computation.
I0428 20:33:47.618680  4371 net.cpp:200] ip3 needs backward computation.
I0428 20:33:47.618681  4371 net.cpp:200] relu2 needs backward computation.
I0428 20:33:47.618685  4371 net.cpp:200] ip2 needs backward computation.
I0428 20:33:47.618686  4371 net.cpp:200] relu1 needs backward computation.
I0428 20:33:47.618690  4371 net.cpp:200] ip1 needs backward computation.
I0428 20:33:47.618692  4371 net.cpp:200] pool1 needs backward computation.
I0428 20:33:47.618695  4371 net.cpp:200] conv1 needs backward computation.
I0428 20:33:47.618698  4371 net.cpp:200] pool0 needs backward computation.
I0428 20:33:47.618701  4371 net.cpp:200] conv0 needs backward computation.
I0428 20:33:47.618705  4371 net.cpp:202] mnist does not need backward computation.
I0428 20:33:47.618707  4371 net.cpp:244] This network produces output loss
I0428 20:33:47.618716  4371 net.cpp:257] Network initialization done.
I0428 20:33:47.619040  4371 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1594.prototxt
I0428 20:33:47.619096  4371 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:47.619184  4371 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:47.619292  4371 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:47.619334  4371 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:47.619345  4371 net.cpp:86] Creating Layer mnist
I0428 20:33:47.619350  4371 net.cpp:382] mnist -> data
I0428 20:33:47.619357  4371 net.cpp:382] mnist -> label
I0428 20:33:47.619438  4371 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:47.621536  4371 net.cpp:124] Setting up mnist
I0428 20:33:47.621564  4371 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:47.621569  4371 net.cpp:131] Top shape: 100 (100)
I0428 20:33:47.621573  4371 net.cpp:139] Memory required for data: 314000
I0428 20:33:47.621577  4371 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:47.621583  4371 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:47.621587  4371 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:47.621592  4371 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:47.621598  4371 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:47.621635  4371 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:47.621641  4371 net.cpp:131] Top shape: 100 (100)
I0428 20:33:47.621645  4371 net.cpp:131] Top shape: 100 (100)
I0428 20:33:47.621662  4371 net.cpp:139] Memory required for data: 314800
I0428 20:33:47.621665  4371 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:47.621672  4371 net.cpp:86] Creating Layer conv0
I0428 20:33:47.621675  4371 net.cpp:408] conv0 <- data
I0428 20:33:47.621680  4371 net.cpp:382] conv0 -> conv0
I0428 20:33:47.623438  4371 net.cpp:124] Setting up conv0
I0428 20:33:47.623451  4371 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:47.623455  4371 net.cpp:139] Memory required for data: 23354800
I0428 20:33:47.623463  4371 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:47.623484  4371 net.cpp:86] Creating Layer pool0
I0428 20:33:47.623487  4371 net.cpp:408] pool0 <- conv0
I0428 20:33:47.623492  4371 net.cpp:382] pool0 -> pool0
I0428 20:33:47.623524  4371 net.cpp:124] Setting up pool0
I0428 20:33:47.623529  4371 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:47.623533  4371 net.cpp:139] Memory required for data: 29114800
I0428 20:33:47.623549  4371 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:47.623558  4371 net.cpp:86] Creating Layer conv1
I0428 20:33:47.623560  4371 net.cpp:408] conv1 <- pool0
I0428 20:33:47.623565  4371 net.cpp:382] conv1 -> conv1
I0428 20:33:47.625567  4371 net.cpp:124] Setting up conv1
I0428 20:33:47.625581  4371 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:47.625586  4371 net.cpp:139] Memory required for data: 29754800
I0428 20:33:47.625594  4371 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:47.625602  4371 net.cpp:86] Creating Layer pool1
I0428 20:33:47.625604  4371 net.cpp:408] pool1 <- conv1
I0428 20:33:47.625617  4371 net.cpp:382] pool1 -> pool1
I0428 20:33:47.625653  4371 net.cpp:124] Setting up pool1
I0428 20:33:47.625659  4371 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:47.625669  4371 net.cpp:139] Memory required for data: 29914800
I0428 20:33:47.625671  4371 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:47.625677  4371 net.cpp:86] Creating Layer ip1
I0428 20:33:47.625689  4371 net.cpp:408] ip1 <- pool1
I0428 20:33:47.625694  4371 net.cpp:382] ip1 -> ip1
I0428 20:33:47.625948  4371 net.cpp:124] Setting up ip1
I0428 20:33:47.625967  4371 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:47.625972  4371 net.cpp:139] Memory required for data: 29934800
I0428 20:33:47.625978  4371 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:47.625983  4371 net.cpp:86] Creating Layer relu1
I0428 20:33:47.625986  4371 net.cpp:408] relu1 <- ip1
I0428 20:33:47.625991  4371 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:47.626155  4371 net.cpp:124] Setting up relu1
I0428 20:33:47.626164  4371 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:47.626168  4371 net.cpp:139] Memory required for data: 29954800
I0428 20:33:47.626176  4371 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:47.626183  4371 net.cpp:86] Creating Layer ip2
I0428 20:33:47.626197  4371 net.cpp:408] ip2 <- ip1
I0428 20:33:47.626207  4371 net.cpp:382] ip2 -> ip2
I0428 20:33:47.626320  4371 net.cpp:124] Setting up ip2
I0428 20:33:47.626327  4371 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:47.626330  4371 net.cpp:139] Memory required for data: 29964800
I0428 20:33:47.626335  4371 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:47.626344  4371 net.cpp:86] Creating Layer relu2
I0428 20:33:47.626348  4371 net.cpp:408] relu2 <- ip2
I0428 20:33:47.626351  4371 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:47.626524  4371 net.cpp:124] Setting up relu2
I0428 20:33:47.626533  4371 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:47.626536  4371 net.cpp:139] Memory required for data: 29974800
I0428 20:33:47.626540  4371 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:47.626545  4371 net.cpp:86] Creating Layer ip3
I0428 20:33:47.626549  4371 net.cpp:408] ip3 <- ip2
I0428 20:33:47.626554  4371 net.cpp:382] ip3 -> ip3
I0428 20:33:47.626690  4371 net.cpp:124] Setting up ip3
I0428 20:33:47.626698  4371 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:47.626701  4371 net.cpp:139] Memory required for data: 29978800
I0428 20:33:47.626709  4371 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:47.626713  4371 net.cpp:86] Creating Layer relu3
I0428 20:33:47.626716  4371 net.cpp:408] relu3 <- ip3
I0428 20:33:47.626721  4371 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:47.627607  4371 net.cpp:124] Setting up relu3
I0428 20:33:47.627619  4371 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:47.627622  4371 net.cpp:139] Memory required for data: 29982800
I0428 20:33:47.627636  4371 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:47.627641  4371 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:47.627645  4371 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:47.627656  4371 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:47.627676  4371 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:47.627712  4371 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:47.627717  4371 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:47.627720  4371 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:47.627723  4371 net.cpp:139] Memory required for data: 29990800
I0428 20:33:47.627727  4371 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:47.627730  4371 net.cpp:86] Creating Layer accuracy
I0428 20:33:47.627733  4371 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:47.627737  4371 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:47.627748  4371 net.cpp:382] accuracy -> accuracy
I0428 20:33:47.627754  4371 net.cpp:124] Setting up accuracy
I0428 20:33:47.627758  4371 net.cpp:131] Top shape: (1)
I0428 20:33:47.627761  4371 net.cpp:139] Memory required for data: 29990804
I0428 20:33:47.627763  4371 layer_factory.hpp:77] Creating layer loss
I0428 20:33:47.627768  4371 net.cpp:86] Creating Layer loss
I0428 20:33:47.627775  4371 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:47.627779  4371 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:47.627784  4371 net.cpp:382] loss -> loss
I0428 20:33:47.627789  4371 layer_factory.hpp:77] Creating layer loss
I0428 20:33:47.628031  4371 net.cpp:124] Setting up loss
I0428 20:33:47.628041  4371 net.cpp:131] Top shape: (1)
I0428 20:33:47.628049  4371 net.cpp:134]     with loss weight 1
I0428 20:33:47.628064  4371 net.cpp:139] Memory required for data: 29990808
I0428 20:33:47.628068  4371 net.cpp:200] loss needs backward computation.
I0428 20:33:47.628072  4371 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:47.628080  4371 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:47.628083  4371 net.cpp:200] relu3 needs backward computation.
I0428 20:33:47.628087  4371 net.cpp:200] ip3 needs backward computation.
I0428 20:33:47.628089  4371 net.cpp:200] relu2 needs backward computation.
I0428 20:33:47.628092  4371 net.cpp:200] ip2 needs backward computation.
I0428 20:33:47.628094  4371 net.cpp:200] relu1 needs backward computation.
I0428 20:33:47.628098  4371 net.cpp:200] ip1 needs backward computation.
I0428 20:33:47.628100  4371 net.cpp:200] pool1 needs backward computation.
I0428 20:33:47.628103  4371 net.cpp:200] conv1 needs backward computation.
I0428 20:33:47.628105  4371 net.cpp:200] pool0 needs backward computation.
I0428 20:33:47.628114  4371 net.cpp:200] conv0 needs backward computation.
I0428 20:33:47.628118  4371 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:47.628121  4371 net.cpp:202] mnist does not need backward computation.
I0428 20:33:47.628123  4371 net.cpp:244] This network produces output accuracy
I0428 20:33:47.628127  4371 net.cpp:244] This network produces output loss
I0428 20:33:47.628137  4371 net.cpp:257] Network initialization done.
I0428 20:33:47.628176  4371 solver.cpp:56] Solver scaffolding done.
I0428 20:33:47.628500  4371 caffe.cpp:248] Starting Optimization
I0428 20:33:47.628506  4371 solver.cpp:273] Solving LeNet
I0428 20:33:47.628509  4371 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:47.628682  4371 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:47.727372  4378 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:47.729877  4371 solver.cpp:398]     Test net output #0: accuracy = 0.0513
I0428 20:33:47.729895  4371 solver.cpp:398]     Test net output #1: loss = 2.34232 (* 1 = 2.34232 loss)
I0428 20:33:47.734336  4371 solver.cpp:219] Iteration 0 (0 iter/s, 0.105804s/100 iters), loss = 2.34222
I0428 20:33:47.734359  4371 solver.cpp:238]     Train net output #0: loss = 2.34222 (* 1 = 2.34222 loss)
I0428 20:33:47.734385  4371 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:47.949122  4371 solver.cpp:219] Iteration 100 (465.668 iter/s, 0.214745s/100 iters), loss = 0.284854
I0428 20:33:47.949156  4371 solver.cpp:238]     Train net output #0: loss = 0.284854 (* 1 = 0.284854 loss)
I0428 20:33:47.949163  4371 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:48.163189  4371 solver.cpp:219] Iteration 200 (467.248 iter/s, 0.214019s/100 iters), loss = 0.184476
I0428 20:33:48.163221  4371 solver.cpp:238]     Train net output #0: loss = 0.184476 (* 1 = 0.184476 loss)
I0428 20:33:48.163230  4371 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:48.376054  4371 solver.cpp:219] Iteration 300 (469.892 iter/s, 0.212815s/100 iters), loss = 0.234662
I0428 20:33:48.376092  4371 solver.cpp:238]     Train net output #0: loss = 0.234662 (* 1 = 0.234662 loss)
I0428 20:33:48.376102  4371 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:48.588630  4371 solver.cpp:219] Iteration 400 (470.537 iter/s, 0.212523s/100 iters), loss = 0.099148
I0428 20:33:48.588665  4371 solver.cpp:238]     Train net output #0: loss = 0.0991481 (* 1 = 0.0991481 loss)
I0428 20:33:48.588672  4371 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:48.801542  4371 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:48.901818  4378 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:48.905299  4371 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 20:33:48.905328  4371 solver.cpp:398]     Test net output #1: loss = 0.110715 (* 1 = 0.110715 loss)
I0428 20:33:48.907341  4371 solver.cpp:219] Iteration 500 (313.819 iter/s, 0.318655s/100 iters), loss = 0.071021
I0428 20:33:48.907369  4371 solver.cpp:238]     Train net output #0: loss = 0.0710211 (* 1 = 0.0710211 loss)
I0428 20:33:48.907395  4371 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:49.123622  4371 solver.cpp:219] Iteration 600 (462.455 iter/s, 0.216237s/100 iters), loss = 0.051878
I0428 20:33:49.123657  4371 solver.cpp:238]     Train net output #0: loss = 0.051878 (* 1 = 0.051878 loss)
I0428 20:33:49.123666  4371 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:49.339992  4371 solver.cpp:219] Iteration 700 (462.28 iter/s, 0.216319s/100 iters), loss = 0.136156
I0428 20:33:49.340023  4371 solver.cpp:238]     Train net output #0: loss = 0.136156 (* 1 = 0.136156 loss)
I0428 20:33:49.340044  4371 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:49.556823  4371 solver.cpp:219] Iteration 800 (461.306 iter/s, 0.216776s/100 iters), loss = 0.213206
I0428 20:33:49.556851  4371 solver.cpp:238]     Train net output #0: loss = 0.213206 (* 1 = 0.213206 loss)
I0428 20:33:49.556859  4371 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:49.771682  4371 solver.cpp:219] Iteration 900 (465.517 iter/s, 0.214815s/100 iters), loss = 0.143131
I0428 20:33:49.771708  4371 solver.cpp:238]     Train net output #0: loss = 0.143131 (* 1 = 0.143131 loss)
I0428 20:33:49.771715  4371 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:49.844138  4377 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:49.987104  4371 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:49.989677  4371 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:49.991149  4371 solver.cpp:311] Iteration 1000, loss = 0.123989
I0428 20:33:49.991164  4371 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:50.087800  4378 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:50.091390  4371 solver.cpp:398]     Test net output #0: accuracy = 0.9768
I0428 20:33:50.091408  4371 solver.cpp:398]     Test net output #1: loss = 0.0742017 (* 1 = 0.0742017 loss)
I0428 20:33:50.091413  4371 solver.cpp:316] Optimization Done.
I0428 20:33:50.091415  4371 caffe.cpp:259] Optimization Done.
