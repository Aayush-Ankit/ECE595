I0428 20:16:11.815361   607 caffe.cpp:218] Using GPUs 0
I0428 20:16:11.844290   607 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:16:12.381592   607 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1265.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:16:12.381810   607 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1265.prototxt
I0428 20:16:12.382392   607 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:16:12.382427   607 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:16:12.382583   607 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:12.382731   607 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:12.382920   607 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:16:12.382962   607 net.cpp:86] Creating Layer mnist
I0428 20:16:12.382980   607 net.cpp:382] mnist -> data
I0428 20:16:12.383021   607 net.cpp:382] mnist -> label
I0428 20:16:12.384776   607 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:16:12.388129   607 net.cpp:124] Setting up mnist
I0428 20:16:12.388159   607 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:16:12.388175   607 net.cpp:131] Top shape: 64 (64)
I0428 20:16:12.388185   607 net.cpp:139] Memory required for data: 200960
I0428 20:16:12.388200   607 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:12.388231   607 net.cpp:86] Creating Layer conv0
I0428 20:16:12.388267   607 net.cpp:408] conv0 <- data
I0428 20:16:12.388291   607 net.cpp:382] conv0 -> conv0
I0428 20:16:12.690261   607 net.cpp:124] Setting up conv0
I0428 20:16:12.690296   607 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:16:12.690304   607 net.cpp:139] Memory required for data: 7573760
I0428 20:16:12.690327   607 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:12.690349   607 net.cpp:86] Creating Layer pool0
I0428 20:16:12.690357   607 net.cpp:408] pool0 <- conv0
I0428 20:16:12.690368   607 net.cpp:382] pool0 -> pool0
I0428 20:16:12.690443   607 net.cpp:124] Setting up pool0
I0428 20:16:12.690455   607 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:16:12.690461   607 net.cpp:139] Memory required for data: 9416960
I0428 20:16:12.690467   607 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:12.690487   607 net.cpp:86] Creating Layer conv1
I0428 20:16:12.690495   607 net.cpp:408] conv1 <- pool0
I0428 20:16:12.690506   607 net.cpp:382] conv1 -> conv1
I0428 20:16:12.693684   607 net.cpp:124] Setting up conv1
I0428 20:16:12.693704   607 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:16:12.693712   607 net.cpp:139] Memory required for data: 9498880
I0428 20:16:12.693728   607 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:12.693742   607 net.cpp:86] Creating Layer pool1
I0428 20:16:12.693750   607 net.cpp:408] pool1 <- conv1
I0428 20:16:12.693760   607 net.cpp:382] pool1 -> pool1
I0428 20:16:12.693814   607 net.cpp:124] Setting up pool1
I0428 20:16:12.693825   607 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:16:12.693831   607 net.cpp:139] Memory required for data: 9519360
I0428 20:16:12.693837   607 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:12.693850   607 net.cpp:86] Creating Layer ip1
I0428 20:16:12.693857   607 net.cpp:408] ip1 <- pool1
I0428 20:16:12.693867   607 net.cpp:382] ip1 -> ip1
I0428 20:16:12.693997   607 net.cpp:124] Setting up ip1
I0428 20:16:12.694008   607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:12.694015   607 net.cpp:139] Memory required for data: 9521920
I0428 20:16:12.694030   607 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:12.694044   607 net.cpp:86] Creating Layer relu1
I0428 20:16:12.694056   607 net.cpp:408] relu1 <- ip1
I0428 20:16:12.694064   607 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:12.694267   607 net.cpp:124] Setting up relu1
I0428 20:16:12.694278   607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:12.694285   607 net.cpp:139] Memory required for data: 9524480
I0428 20:16:12.694291   607 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:12.694303   607 net.cpp:86] Creating Layer ip2
I0428 20:16:12.694309   607 net.cpp:408] ip2 <- ip1
I0428 20:16:12.694319   607 net.cpp:382] ip2 -> ip2
I0428 20:16:12.694442   607 net.cpp:124] Setting up ip2
I0428 20:16:12.694454   607 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:12.694460   607 net.cpp:139] Memory required for data: 9530880
I0428 20:16:12.694471   607 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:12.694483   607 net.cpp:86] Creating Layer relu2
I0428 20:16:12.694489   607 net.cpp:408] relu2 <- ip2
I0428 20:16:12.694499   607 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:12.695350   607 net.cpp:124] Setting up relu2
I0428 20:16:12.695368   607 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:12.695374   607 net.cpp:139] Memory required for data: 9537280
I0428 20:16:12.695381   607 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:12.695394   607 net.cpp:86] Creating Layer ip3
I0428 20:16:12.695400   607 net.cpp:408] ip3 <- ip2
I0428 20:16:12.695411   607 net.cpp:382] ip3 -> ip3
I0428 20:16:12.695540   607 net.cpp:124] Setting up ip3
I0428 20:16:12.695552   607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:12.695559   607 net.cpp:139] Memory required for data: 9539840
I0428 20:16:12.695575   607 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:12.695586   607 net.cpp:86] Creating Layer relu3
I0428 20:16:12.695595   607 net.cpp:408] relu3 <- ip3
I0428 20:16:12.695603   607 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:12.695807   607 net.cpp:124] Setting up relu3
I0428 20:16:12.695819   607 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:12.695825   607 net.cpp:139] Memory required for data: 9542400
I0428 20:16:12.695832   607 layer_factory.hpp:77] Creating layer loss
I0428 20:16:12.695843   607 net.cpp:86] Creating Layer loss
I0428 20:16:12.695849   607 net.cpp:408] loss <- ip3
I0428 20:16:12.695858   607 net.cpp:408] loss <- label
I0428 20:16:12.695868   607 net.cpp:382] loss -> loss
I0428 20:16:12.695896   607 layer_factory.hpp:77] Creating layer loss
I0428 20:16:12.696171   607 net.cpp:124] Setting up loss
I0428 20:16:12.696184   607 net.cpp:131] Top shape: (1)
I0428 20:16:12.696190   607 net.cpp:134]     with loss weight 1
I0428 20:16:12.696214   607 net.cpp:139] Memory required for data: 9542404
I0428 20:16:12.696221   607 net.cpp:200] loss needs backward computation.
I0428 20:16:12.696229   607 net.cpp:200] relu3 needs backward computation.
I0428 20:16:12.696235   607 net.cpp:200] ip3 needs backward computation.
I0428 20:16:12.696243   607 net.cpp:200] relu2 needs backward computation.
I0428 20:16:12.696249   607 net.cpp:200] ip2 needs backward computation.
I0428 20:16:12.696255   607 net.cpp:200] relu1 needs backward computation.
I0428 20:16:12.696261   607 net.cpp:200] ip1 needs backward computation.
I0428 20:16:12.696267   607 net.cpp:200] pool1 needs backward computation.
I0428 20:16:12.696274   607 net.cpp:200] conv1 needs backward computation.
I0428 20:16:12.696281   607 net.cpp:200] pool0 needs backward computation.
I0428 20:16:12.696287   607 net.cpp:200] conv0 needs backward computation.
I0428 20:16:12.696295   607 net.cpp:202] mnist does not need backward computation.
I0428 20:16:12.696301   607 net.cpp:244] This network produces output loss
I0428 20:16:12.696318   607 net.cpp:257] Network initialization done.
I0428 20:16:12.696713   607 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1265.prototxt
I0428 20:16:12.696755   607 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:16:12.696887   607 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:12.697026   607 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:12.697101   607 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:16:12.697123   607 net.cpp:86] Creating Layer mnist
I0428 20:16:12.697131   607 net.cpp:382] mnist -> data
I0428 20:16:12.697145   607 net.cpp:382] mnist -> label
I0428 20:16:12.697298   607 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:16:12.699687   607 net.cpp:124] Setting up mnist
I0428 20:16:12.699707   607 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:16:12.699717   607 net.cpp:131] Top shape: 100 (100)
I0428 20:16:12.699723   607 net.cpp:139] Memory required for data: 314000
I0428 20:16:12.699730   607 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:16:12.699764   607 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:16:12.699771   607 net.cpp:408] label_mnist_1_split <- label
I0428 20:16:12.699781   607 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:16:12.699795   607 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:16:12.699923   607 net.cpp:124] Setting up label_mnist_1_split
I0428 20:16:12.699935   607 net.cpp:131] Top shape: 100 (100)
I0428 20:16:12.699944   607 net.cpp:131] Top shape: 100 (100)
I0428 20:16:12.699949   607 net.cpp:139] Memory required for data: 314800
I0428 20:16:12.699956   607 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:12.699972   607 net.cpp:86] Creating Layer conv0
I0428 20:16:12.699981   607 net.cpp:408] conv0 <- data
I0428 20:16:12.699992   607 net.cpp:382] conv0 -> conv0
I0428 20:16:12.701670   607 net.cpp:124] Setting up conv0
I0428 20:16:12.701690   607 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:16:12.701697   607 net.cpp:139] Memory required for data: 11834800
I0428 20:16:12.701714   607 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:12.701726   607 net.cpp:86] Creating Layer pool0
I0428 20:16:12.701735   607 net.cpp:408] pool0 <- conv0
I0428 20:16:12.701743   607 net.cpp:382] pool0 -> pool0
I0428 20:16:12.701795   607 net.cpp:124] Setting up pool0
I0428 20:16:12.701807   607 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:16:12.701813   607 net.cpp:139] Memory required for data: 14714800
I0428 20:16:12.701819   607 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:12.701835   607 net.cpp:86] Creating Layer conv1
I0428 20:16:12.701843   607 net.cpp:408] conv1 <- pool0
I0428 20:16:12.701854   607 net.cpp:382] conv1 -> conv1
I0428 20:16:12.703685   607 net.cpp:124] Setting up conv1
I0428 20:16:12.703703   607 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:16:12.703711   607 net.cpp:139] Memory required for data: 14842800
I0428 20:16:12.703727   607 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:12.703740   607 net.cpp:86] Creating Layer pool1
I0428 20:16:12.703747   607 net.cpp:408] pool1 <- conv1
I0428 20:16:12.703758   607 net.cpp:382] pool1 -> pool1
I0428 20:16:12.703810   607 net.cpp:124] Setting up pool1
I0428 20:16:12.703820   607 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:16:12.703827   607 net.cpp:139] Memory required for data: 14874800
I0428 20:16:12.703833   607 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:12.703845   607 net.cpp:86] Creating Layer ip1
I0428 20:16:12.703851   607 net.cpp:408] ip1 <- pool1
I0428 20:16:12.703861   607 net.cpp:382] ip1 -> ip1
I0428 20:16:12.703990   607 net.cpp:124] Setting up ip1
I0428 20:16:12.704001   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.704022   607 net.cpp:139] Memory required for data: 14878800
I0428 20:16:12.704037   607 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:12.704048   607 net.cpp:86] Creating Layer relu1
I0428 20:16:12.704056   607 net.cpp:408] relu1 <- ip1
I0428 20:16:12.704064   607 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:12.704258   607 net.cpp:124] Setting up relu1
I0428 20:16:12.704270   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.704277   607 net.cpp:139] Memory required for data: 14882800
I0428 20:16:12.704283   607 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:12.704298   607 net.cpp:86] Creating Layer ip2
I0428 20:16:12.704305   607 net.cpp:408] ip2 <- ip1
I0428 20:16:12.704315   607 net.cpp:382] ip2 -> ip2
I0428 20:16:12.704453   607 net.cpp:124] Setting up ip2
I0428 20:16:12.704464   607 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:12.704470   607 net.cpp:139] Memory required for data: 14892800
I0428 20:16:12.704481   607 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:12.704490   607 net.cpp:86] Creating Layer relu2
I0428 20:16:12.704497   607 net.cpp:408] relu2 <- ip2
I0428 20:16:12.704505   607 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:12.704777   607 net.cpp:124] Setting up relu2
I0428 20:16:12.704789   607 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:12.704797   607 net.cpp:139] Memory required for data: 14902800
I0428 20:16:12.704803   607 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:12.704821   607 net.cpp:86] Creating Layer ip3
I0428 20:16:12.704838   607 net.cpp:408] ip3 <- ip2
I0428 20:16:12.704851   607 net.cpp:382] ip3 -> ip3
I0428 20:16:12.704991   607 net.cpp:124] Setting up ip3
I0428 20:16:12.705003   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.705008   607 net.cpp:139] Memory required for data: 14906800
I0428 20:16:12.705024   607 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:12.705037   607 net.cpp:86] Creating Layer relu3
I0428 20:16:12.705044   607 net.cpp:408] relu3 <- ip3
I0428 20:16:12.705062   607 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:12.705978   607 net.cpp:124] Setting up relu3
I0428 20:16:12.705994   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.706002   607 net.cpp:139] Memory required for data: 14910800
I0428 20:16:12.706008   607 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:16:12.706018   607 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:16:12.706024   607 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:16:12.706037   607 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:16:12.706048   607 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:16:12.706104   607 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:16:12.706120   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.706127   607 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:12.706135   607 net.cpp:139] Memory required for data: 14918800
I0428 20:16:12.706140   607 layer_factory.hpp:77] Creating layer accuracy
I0428 20:16:12.706151   607 net.cpp:86] Creating Layer accuracy
I0428 20:16:12.706157   607 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:16:12.706166   607 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:16:12.706177   607 net.cpp:382] accuracy -> accuracy
I0428 20:16:12.706192   607 net.cpp:124] Setting up accuracy
I0428 20:16:12.706200   607 net.cpp:131] Top shape: (1)
I0428 20:16:12.706207   607 net.cpp:139] Memory required for data: 14918804
I0428 20:16:12.706213   607 layer_factory.hpp:77] Creating layer loss
I0428 20:16:12.706223   607 net.cpp:86] Creating Layer loss
I0428 20:16:12.706228   607 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:16:12.706236   607 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:16:12.706244   607 net.cpp:382] loss -> loss
I0428 20:16:12.706259   607 layer_factory.hpp:77] Creating layer loss
I0428 20:16:12.706557   607 net.cpp:124] Setting up loss
I0428 20:16:12.706570   607 net.cpp:131] Top shape: (1)
I0428 20:16:12.706576   607 net.cpp:134]     with loss weight 1
I0428 20:16:12.706603   607 net.cpp:139] Memory required for data: 14918808
I0428 20:16:12.706610   607 net.cpp:200] loss needs backward computation.
I0428 20:16:12.706617   607 net.cpp:202] accuracy does not need backward computation.
I0428 20:16:12.706624   607 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:16:12.706631   607 net.cpp:200] relu3 needs backward computation.
I0428 20:16:12.706637   607 net.cpp:200] ip3 needs backward computation.
I0428 20:16:12.706643   607 net.cpp:200] relu2 needs backward computation.
I0428 20:16:12.706655   607 net.cpp:200] ip2 needs backward computation.
I0428 20:16:12.706660   607 net.cpp:200] relu1 needs backward computation.
I0428 20:16:12.706666   607 net.cpp:200] ip1 needs backward computation.
I0428 20:16:12.706674   607 net.cpp:200] pool1 needs backward computation.
I0428 20:16:12.706681   607 net.cpp:200] conv1 needs backward computation.
I0428 20:16:12.706687   607 net.cpp:200] pool0 needs backward computation.
I0428 20:16:12.706694   607 net.cpp:200] conv0 needs backward computation.
I0428 20:16:12.706701   607 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:16:12.706708   607 net.cpp:202] mnist does not need backward computation.
I0428 20:16:12.706714   607 net.cpp:244] This network produces output accuracy
I0428 20:16:12.706722   607 net.cpp:244] This network produces output loss
I0428 20:16:12.706743   607 net.cpp:257] Network initialization done.
I0428 20:16:12.706801   607 solver.cpp:56] Solver scaffolding done.
I0428 20:16:12.707209   607 caffe.cpp:248] Starting Optimization
I0428 20:16:12.707218   607 solver.cpp:273] Solving LeNet
I0428 20:16:12.707223   607 solver.cpp:274] Learning Rate Policy: inv
I0428 20:16:12.708107   607 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:16:12.715616   607 blocking_queue.cpp:49] Waiting for data
I0428 20:16:12.783365   614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:12.784360   607 solver.cpp:398]     Test net output #0: accuracy = 0.0851
I0428 20:16:12.784389   607 solver.cpp:398]     Test net output #1: loss = 2.3162 (* 1 = 2.3162 loss)
I0428 20:16:12.789172   607 solver.cpp:219] Iteration 0 (-1.58326e-30 iter/s, 0.0819118s/100 iters), loss = 2.31394
I0428 20:16:12.789211   607 solver.cpp:238]     Train net output #0: loss = 2.31394 (* 1 = 2.31394 loss)
I0428 20:16:12.789232   607 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:16:12.917090   607 solver.cpp:219] Iteration 100 (782.07 iter/s, 0.127866s/100 iters), loss = 0.491834
I0428 20:16:12.917135   607 solver.cpp:238]     Train net output #0: loss = 0.491834 (* 1 = 0.491834 loss)
I0428 20:16:12.917145   607 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:16:13.039008   607 solver.cpp:219] Iteration 200 (820.586 iter/s, 0.121864s/100 iters), loss = 0.424671
I0428 20:16:13.039039   607 solver.cpp:238]     Train net output #0: loss = 0.424671 (* 1 = 0.424671 loss)
I0428 20:16:13.039047   607 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:16:13.160159   607 solver.cpp:219] Iteration 300 (825.713 iter/s, 0.121107s/100 iters), loss = 0.4987
I0428 20:16:13.160192   607 solver.cpp:238]     Train net output #0: loss = 0.4987 (* 1 = 0.4987 loss)
I0428 20:16:13.160200   607 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:16:13.290314   607 solver.cpp:219] Iteration 400 (768.584 iter/s, 0.130109s/100 iters), loss = 0.473548
I0428 20:16:13.290352   607 solver.cpp:238]     Train net output #0: loss = 0.473548 (* 1 = 0.473548 loss)
I0428 20:16:13.290362   607 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:16:13.409337   607 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:16:13.478013   614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:13.480340   607 solver.cpp:398]     Test net output #0: accuracy = 0.9104
I0428 20:16:13.480363   607 solver.cpp:398]     Test net output #1: loss = 0.422638 (* 1 = 0.422638 loss)
I0428 20:16:13.481488   607 solver.cpp:219] Iteration 500 (523.225 iter/s, 0.191123s/100 iters), loss = 0.376195
I0428 20:16:13.481535   607 solver.cpp:238]     Train net output #0: loss = 0.376195 (* 1 = 0.376195 loss)
I0428 20:16:13.481544   607 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:16:13.600497   607 solver.cpp:219] Iteration 600 (840.69 iter/s, 0.11895s/100 iters), loss = 0.329854
I0428 20:16:13.600528   607 solver.cpp:238]     Train net output #0: loss = 0.329854 (* 1 = 0.329854 loss)
I0428 20:16:13.600536   607 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:16:13.720351   607 solver.cpp:219] Iteration 700 (834.634 iter/s, 0.119813s/100 iters), loss = 0.461574
I0428 20:16:13.720384   607 solver.cpp:238]     Train net output #0: loss = 0.461574 (* 1 = 0.461574 loss)
I0428 20:16:13.720392   607 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:16:13.840234   607 solver.cpp:219] Iteration 800 (834.462 iter/s, 0.119838s/100 iters), loss = 0.433781
I0428 20:16:13.840265   607 solver.cpp:238]     Train net output #0: loss = 0.43378 (* 1 = 0.43378 loss)
I0428 20:16:13.840272   607 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:16:13.958086   607 solver.cpp:219] Iteration 900 (848.816 iter/s, 0.117811s/100 iters), loss = 0.466734
I0428 20:16:13.958113   607 solver.cpp:238]     Train net output #0: loss = 0.466734 (* 1 = 0.466734 loss)
I0428 20:16:13.958120   607 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:16:13.996317   613 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:14.071692   607 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:16:14.072681   607 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:16:14.073446   607 solver.cpp:311] Iteration 1000, loss = 0.459977
I0428 20:16:14.073462   607 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:16:14.137975   614 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:14.139775   607 solver.cpp:398]     Test net output #0: accuracy = 0.954
I0428 20:16:14.139808   607 solver.cpp:398]     Test net output #1: loss = 0.366044 (* 1 = 0.366044 loss)
I0428 20:16:14.139816   607 solver.cpp:316] Optimization Done.
I0428 20:16:14.139818   607 caffe.cpp:259] Optimization Done.
