I0428 19:43:14.444977 25299 caffe.cpp:218] Using GPUs 0
I0428 19:43:14.485546 25299 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:15.029681 25299 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test416.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:15.029824 25299 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test416.prototxt
I0428 19:43:15.030247 25299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:15.030267 25299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:15.030372 25299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:15.030453 25299 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:15.030551 25299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:15.030575 25299 net.cpp:86] Creating Layer mnist
I0428 19:43:15.030585 25299 net.cpp:382] mnist -> data
I0428 19:43:15.030607 25299 net.cpp:382] mnist -> label
I0428 19:43:15.031703 25299 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:15.034373 25299 net.cpp:124] Setting up mnist
I0428 19:43:15.034392 25299 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:15.034399 25299 net.cpp:131] Top shape: 64 (64)
I0428 19:43:15.034401 25299 net.cpp:139] Memory required for data: 200960
I0428 19:43:15.034409 25299 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:15.034440 25299 net.cpp:86] Creating Layer conv0
I0428 19:43:15.034461 25299 net.cpp:408] conv0 <- data
I0428 19:43:15.034477 25299 net.cpp:382] conv0 -> conv0
I0428 19:43:15.324698 25299 net.cpp:124] Setting up conv0
I0428 19:43:15.324730 25299 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:15.324735 25299 net.cpp:139] Memory required for data: 495872
I0428 19:43:15.324753 25299 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:15.324769 25299 net.cpp:86] Creating Layer pool0
I0428 19:43:15.324774 25299 net.cpp:408] pool0 <- conv0
I0428 19:43:15.324780 25299 net.cpp:382] pool0 -> pool0
I0428 19:43:15.324844 25299 net.cpp:124] Setting up pool0
I0428 19:43:15.324854 25299 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:15.324858 25299 net.cpp:139] Memory required for data: 569600
I0428 19:43:15.324862 25299 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:15.324874 25299 net.cpp:86] Creating Layer conv1
I0428 19:43:15.324880 25299 net.cpp:408] conv1 <- pool0
I0428 19:43:15.324887 25299 net.cpp:382] conv1 -> conv1
I0428 19:43:15.327980 25299 net.cpp:124] Setting up conv1
I0428 19:43:15.327996 25299 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:15.328001 25299 net.cpp:139] Memory required for data: 979200
I0428 19:43:15.328012 25299 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:15.328022 25299 net.cpp:86] Creating Layer pool1
I0428 19:43:15.328025 25299 net.cpp:408] pool1 <- conv1
I0428 19:43:15.328032 25299 net.cpp:382] pool1 -> pool1
I0428 19:43:15.328078 25299 net.cpp:124] Setting up pool1
I0428 19:43:15.328084 25299 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:15.328088 25299 net.cpp:139] Memory required for data: 1081600
I0428 19:43:15.328091 25299 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:15.328099 25299 net.cpp:86] Creating Layer ip1
I0428 19:43:15.328104 25299 net.cpp:408] ip1 <- pool1
I0428 19:43:15.328109 25299 net.cpp:382] ip1 -> ip1
I0428 19:43:15.329274 25299 net.cpp:124] Setting up ip1
I0428 19:43:15.329289 25299 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:15.329293 25299 net.cpp:139] Memory required for data: 1088000
I0428 19:43:15.329303 25299 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:15.329311 25299 net.cpp:86] Creating Layer relu1
I0428 19:43:15.329315 25299 net.cpp:408] relu1 <- ip1
I0428 19:43:15.329322 25299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:15.329540 25299 net.cpp:124] Setting up relu1
I0428 19:43:15.329551 25299 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:15.329555 25299 net.cpp:139] Memory required for data: 1094400
I0428 19:43:15.329558 25299 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:15.329566 25299 net.cpp:86] Creating Layer ip2
I0428 19:43:15.329571 25299 net.cpp:408] ip2 <- ip1
I0428 19:43:15.329577 25299 net.cpp:382] ip2 -> ip2
I0428 19:43:15.329700 25299 net.cpp:124] Setting up ip2
I0428 19:43:15.329710 25299 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:15.329712 25299 net.cpp:139] Memory required for data: 1100800
I0428 19:43:15.329720 25299 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:15.329726 25299 net.cpp:86] Creating Layer relu2
I0428 19:43:15.329730 25299 net.cpp:408] relu2 <- ip2
I0428 19:43:15.329736 25299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:15.330597 25299 net.cpp:124] Setting up relu2
I0428 19:43:15.330612 25299 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:15.330616 25299 net.cpp:139] Memory required for data: 1107200
I0428 19:43:15.330621 25299 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:15.330628 25299 net.cpp:86] Creating Layer ip3
I0428 19:43:15.330632 25299 net.cpp:408] ip3 <- ip2
I0428 19:43:15.330641 25299 net.cpp:382] ip3 -> ip3
I0428 19:43:15.330763 25299 net.cpp:124] Setting up ip3
I0428 19:43:15.330772 25299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:15.330776 25299 net.cpp:139] Memory required for data: 1109760
I0428 19:43:15.330786 25299 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:15.330793 25299 net.cpp:86] Creating Layer relu3
I0428 19:43:15.330796 25299 net.cpp:408] relu3 <- ip3
I0428 19:43:15.330801 25299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:15.331007 25299 net.cpp:124] Setting up relu3
I0428 19:43:15.331019 25299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:15.331022 25299 net.cpp:139] Memory required for data: 1112320
I0428 19:43:15.331027 25299 layer_factory.hpp:77] Creating layer loss
I0428 19:43:15.331034 25299 net.cpp:86] Creating Layer loss
I0428 19:43:15.331037 25299 net.cpp:408] loss <- ip3
I0428 19:43:15.331043 25299 net.cpp:408] loss <- label
I0428 19:43:15.331048 25299 net.cpp:382] loss -> loss
I0428 19:43:15.331069 25299 layer_factory.hpp:77] Creating layer loss
I0428 19:43:15.331359 25299 net.cpp:124] Setting up loss
I0428 19:43:15.331370 25299 net.cpp:131] Top shape: (1)
I0428 19:43:15.331374 25299 net.cpp:134]     with loss weight 1
I0428 19:43:15.331390 25299 net.cpp:139] Memory required for data: 1112324
I0428 19:43:15.331394 25299 net.cpp:200] loss needs backward computation.
I0428 19:43:15.331398 25299 net.cpp:200] relu3 needs backward computation.
I0428 19:43:15.331403 25299 net.cpp:200] ip3 needs backward computation.
I0428 19:43:15.331405 25299 net.cpp:200] relu2 needs backward computation.
I0428 19:43:15.331409 25299 net.cpp:200] ip2 needs backward computation.
I0428 19:43:15.331413 25299 net.cpp:200] relu1 needs backward computation.
I0428 19:43:15.331415 25299 net.cpp:200] ip1 needs backward computation.
I0428 19:43:15.331419 25299 net.cpp:200] pool1 needs backward computation.
I0428 19:43:15.331423 25299 net.cpp:200] conv1 needs backward computation.
I0428 19:43:15.331426 25299 net.cpp:200] pool0 needs backward computation.
I0428 19:43:15.331429 25299 net.cpp:200] conv0 needs backward computation.
I0428 19:43:15.331434 25299 net.cpp:202] mnist does not need backward computation.
I0428 19:43:15.331436 25299 net.cpp:244] This network produces output loss
I0428 19:43:15.331447 25299 net.cpp:257] Network initialization done.
I0428 19:43:15.331832 25299 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test416.prototxt
I0428 19:43:15.331864 25299 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:15.331975 25299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:15.332075 25299 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:15.332132 25299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:15.332146 25299 net.cpp:86] Creating Layer mnist
I0428 19:43:15.332154 25299 net.cpp:382] mnist -> data
I0428 19:43:15.332162 25299 net.cpp:382] mnist -> label
I0428 19:43:15.332268 25299 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:15.334463 25299 net.cpp:124] Setting up mnist
I0428 19:43:15.334481 25299 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:15.334486 25299 net.cpp:131] Top shape: 100 (100)
I0428 19:43:15.334489 25299 net.cpp:139] Memory required for data: 314000
I0428 19:43:15.334493 25299 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:15.334501 25299 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:15.334506 25299 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:15.334513 25299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:15.334522 25299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:15.334575 25299 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:15.334583 25299 net.cpp:131] Top shape: 100 (100)
I0428 19:43:15.334589 25299 net.cpp:131] Top shape: 100 (100)
I0428 19:43:15.334591 25299 net.cpp:139] Memory required for data: 314800
I0428 19:43:15.334594 25299 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:15.334605 25299 net.cpp:86] Creating Layer conv0
I0428 19:43:15.334609 25299 net.cpp:408] conv0 <- data
I0428 19:43:15.334615 25299 net.cpp:382] conv0 -> conv0
I0428 19:43:15.336424 25299 net.cpp:124] Setting up conv0
I0428 19:43:15.336442 25299 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:15.336448 25299 net.cpp:139] Memory required for data: 775600
I0428 19:43:15.336459 25299 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:15.336467 25299 net.cpp:86] Creating Layer pool0
I0428 19:43:15.336472 25299 net.cpp:408] pool0 <- conv0
I0428 19:43:15.336479 25299 net.cpp:382] pool0 -> pool0
I0428 19:43:15.336525 25299 net.cpp:124] Setting up pool0
I0428 19:43:15.336534 25299 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:15.336537 25299 net.cpp:139] Memory required for data: 890800
I0428 19:43:15.336541 25299 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:15.336554 25299 net.cpp:86] Creating Layer conv1
I0428 19:43:15.336557 25299 net.cpp:408] conv1 <- pool0
I0428 19:43:15.336563 25299 net.cpp:382] conv1 -> conv1
I0428 19:43:15.338275 25299 net.cpp:124] Setting up conv1
I0428 19:43:15.338294 25299 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:15.338299 25299 net.cpp:139] Memory required for data: 1530800
I0428 19:43:15.338309 25299 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:15.338317 25299 net.cpp:86] Creating Layer pool1
I0428 19:43:15.338323 25299 net.cpp:408] pool1 <- conv1
I0428 19:43:15.338330 25299 net.cpp:382] pool1 -> pool1
I0428 19:43:15.338376 25299 net.cpp:124] Setting up pool1
I0428 19:43:15.338382 25299 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:15.338387 25299 net.cpp:139] Memory required for data: 1690800
I0428 19:43:15.338389 25299 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:15.338397 25299 net.cpp:86] Creating Layer ip1
I0428 19:43:15.338400 25299 net.cpp:408] ip1 <- pool1
I0428 19:43:15.338407 25299 net.cpp:382] ip1 -> ip1
I0428 19:43:15.338603 25299 net.cpp:124] Setting up ip1
I0428 19:43:15.338613 25299 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:15.338629 25299 net.cpp:139] Memory required for data: 1700800
I0428 19:43:15.338640 25299 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:15.338646 25299 net.cpp:86] Creating Layer relu1
I0428 19:43:15.338651 25299 net.cpp:408] relu1 <- ip1
I0428 19:43:15.338656 25299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:15.338856 25299 net.cpp:124] Setting up relu1
I0428 19:43:15.338868 25299 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:15.338872 25299 net.cpp:139] Memory required for data: 1710800
I0428 19:43:15.338876 25299 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:15.338884 25299 net.cpp:86] Creating Layer ip2
I0428 19:43:15.338887 25299 net.cpp:408] ip2 <- ip1
I0428 19:43:15.338894 25299 net.cpp:382] ip2 -> ip2
I0428 19:43:15.339047 25299 net.cpp:124] Setting up ip2
I0428 19:43:15.339061 25299 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:15.339066 25299 net.cpp:139] Memory required for data: 1720800
I0428 19:43:15.339072 25299 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:15.339079 25299 net.cpp:86] Creating Layer relu2
I0428 19:43:15.339083 25299 net.cpp:408] relu2 <- ip2
I0428 19:43:15.339087 25299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:15.339287 25299 net.cpp:124] Setting up relu2
I0428 19:43:15.339296 25299 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:15.339301 25299 net.cpp:139] Memory required for data: 1730800
I0428 19:43:15.339304 25299 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:15.339313 25299 net.cpp:86] Creating Layer ip3
I0428 19:43:15.339316 25299 net.cpp:408] ip3 <- ip2
I0428 19:43:15.339323 25299 net.cpp:382] ip3 -> ip3
I0428 19:43:15.339445 25299 net.cpp:124] Setting up ip3
I0428 19:43:15.339454 25299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:15.339457 25299 net.cpp:139] Memory required for data: 1734800
I0428 19:43:15.339468 25299 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:15.339473 25299 net.cpp:86] Creating Layer relu3
I0428 19:43:15.339476 25299 net.cpp:408] relu3 <- ip3
I0428 19:43:15.339483 25299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:15.340389 25299 net.cpp:124] Setting up relu3
I0428 19:43:15.340402 25299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:15.340406 25299 net.cpp:139] Memory required for data: 1738800
I0428 19:43:15.340410 25299 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:15.340417 25299 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:15.340421 25299 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:15.340428 25299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:15.340436 25299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:15.340481 25299 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:15.340488 25299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:15.340492 25299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:15.340497 25299 net.cpp:139] Memory required for data: 1746800
I0428 19:43:15.340500 25299 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:15.340510 25299 net.cpp:86] Creating Layer accuracy
I0428 19:43:15.340514 25299 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:15.340520 25299 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:15.340525 25299 net.cpp:382] accuracy -> accuracy
I0428 19:43:15.340533 25299 net.cpp:124] Setting up accuracy
I0428 19:43:15.340538 25299 net.cpp:131] Top shape: (1)
I0428 19:43:15.340543 25299 net.cpp:139] Memory required for data: 1746804
I0428 19:43:15.340545 25299 layer_factory.hpp:77] Creating layer loss
I0428 19:43:15.340553 25299 net.cpp:86] Creating Layer loss
I0428 19:43:15.340555 25299 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:15.340560 25299 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:15.340564 25299 net.cpp:382] loss -> loss
I0428 19:43:15.340571 25299 layer_factory.hpp:77] Creating layer loss
I0428 19:43:15.340867 25299 net.cpp:124] Setting up loss
I0428 19:43:15.340879 25299 net.cpp:131] Top shape: (1)
I0428 19:43:15.340883 25299 net.cpp:134]     with loss weight 1
I0428 19:43:15.340890 25299 net.cpp:139] Memory required for data: 1746808
I0428 19:43:15.340905 25299 net.cpp:200] loss needs backward computation.
I0428 19:43:15.340909 25299 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:15.340914 25299 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:15.340917 25299 net.cpp:200] relu3 needs backward computation.
I0428 19:43:15.340920 25299 net.cpp:200] ip3 needs backward computation.
I0428 19:43:15.340924 25299 net.cpp:200] relu2 needs backward computation.
I0428 19:43:15.340927 25299 net.cpp:200] ip2 needs backward computation.
I0428 19:43:15.340930 25299 net.cpp:200] relu1 needs backward computation.
I0428 19:43:15.340934 25299 net.cpp:200] ip1 needs backward computation.
I0428 19:43:15.340937 25299 net.cpp:200] pool1 needs backward computation.
I0428 19:43:15.340940 25299 net.cpp:200] conv1 needs backward computation.
I0428 19:43:15.340946 25299 net.cpp:200] pool0 needs backward computation.
I0428 19:43:15.340950 25299 net.cpp:200] conv0 needs backward computation.
I0428 19:43:15.340953 25299 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:15.340958 25299 net.cpp:202] mnist does not need backward computation.
I0428 19:43:15.340961 25299 net.cpp:244] This network produces output accuracy
I0428 19:43:15.340965 25299 net.cpp:244] This network produces output loss
I0428 19:43:15.340978 25299 net.cpp:257] Network initialization done.
I0428 19:43:15.341027 25299 solver.cpp:56] Solver scaffolding done.
I0428 19:43:15.341426 25299 caffe.cpp:248] Starting Optimization
I0428 19:43:15.341434 25299 solver.cpp:273] Solving LeNet
I0428 19:43:15.341437 25299 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:15.342309 25299 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:15.347103 25299 blocking_queue.cpp:49] Waiting for data
I0428 19:43:15.396569 25306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:15.397033 25299 solver.cpp:398]     Test net output #0: accuracy = 0.0988
I0428 19:43:15.397055 25299 solver.cpp:398]     Test net output #1: loss = 2.31009 (* 1 = 2.31009 loss)
I0428 19:43:15.398444 25299 solver.cpp:219] Iteration 0 (0 iter/s, 0.0569754s/100 iters), loss = 2.3046
I0428 19:43:15.398471 25299 solver.cpp:238]     Train net output #0: loss = 2.3046 (* 1 = 2.3046 loss)
I0428 19:43:15.398484 25299 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:15.487435 25299 solver.cpp:219] Iteration 100 (1124.27 iter/s, 0.0889467s/100 iters), loss = 1.30816
I0428 19:43:15.487468 25299 solver.cpp:238]     Train net output #0: loss = 1.30816 (* 1 = 1.30816 loss)
I0428 19:43:15.487475 25299 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:15.576162 25299 solver.cpp:219] Iteration 200 (1127.58 iter/s, 0.0886854s/100 iters), loss = 0.59881
I0428 19:43:15.576194 25299 solver.cpp:238]     Train net output #0: loss = 0.59881 (* 1 = 0.59881 loss)
I0428 19:43:15.576201 25299 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:15.664551 25299 solver.cpp:219] Iteration 300 (1131.89 iter/s, 0.0883477s/100 iters), loss = 0.641677
I0428 19:43:15.664580 25299 solver.cpp:238]     Train net output #0: loss = 0.641677 (* 1 = 0.641677 loss)
I0428 19:43:15.664588 25299 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:15.759274 25299 solver.cpp:219] Iteration 400 (1056.19 iter/s, 0.0946801s/100 iters), loss = 0.432516
I0428 19:43:15.759315 25299 solver.cpp:238]     Train net output #0: loss = 0.432516 (* 1 = 0.432516 loss)
I0428 19:43:15.759325 25299 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:15.849278 25299 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:15.894137 25306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:15.894600 25299 solver.cpp:398]     Test net output #0: accuracy = 0.7779
I0428 19:43:15.894635 25299 solver.cpp:398]     Test net output #1: loss = 0.572746 (* 1 = 0.572746 loss)
I0428 19:43:15.895547 25299 solver.cpp:219] Iteration 500 (734.092 iter/s, 0.136223s/100 iters), loss = 0.515647
I0428 19:43:15.895608 25299 solver.cpp:238]     Train net output #0: loss = 0.515647 (* 1 = 0.515647 loss)
I0428 19:43:15.895632 25299 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:15.985819 25299 solver.cpp:219] Iteration 600 (1108.63 iter/s, 0.0902011s/100 iters), loss = 0.580887
I0428 19:43:15.985849 25299 solver.cpp:238]     Train net output #0: loss = 0.580887 (* 1 = 0.580887 loss)
I0428 19:43:15.985857 25299 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:16.073590 25299 solver.cpp:219] Iteration 700 (1139.89 iter/s, 0.087728s/100 iters), loss = 0.858424
I0428 19:43:16.073618 25299 solver.cpp:238]     Train net output #0: loss = 0.858424 (* 1 = 0.858424 loss)
I0428 19:43:16.073626 25299 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:16.160333 25299 solver.cpp:219] Iteration 800 (1153.58 iter/s, 0.0866867s/100 iters), loss = 0.620085
I0428 19:43:16.160362 25299 solver.cpp:238]     Train net output #0: loss = 0.620085 (* 1 = 0.620085 loss)
I0428 19:43:16.160370 25299 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:16.247800 25299 solver.cpp:219] Iteration 900 (1143.84 iter/s, 0.087425s/100 iters), loss = 0.525069
I0428 19:43:16.247838 25299 solver.cpp:238]     Train net output #0: loss = 0.525069 (* 1 = 0.525069 loss)
I0428 19:43:16.247846 25299 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:16.277089 25305 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:16.334558 25299 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:16.335521 25299 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:16.336076 25299 solver.cpp:311] Iteration 1000, loss = 0.517971
I0428 19:43:16.336092 25299 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:16.410274 25306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:16.410743 25299 solver.cpp:398]     Test net output #0: accuracy = 0.879
I0428 19:43:16.410766 25299 solver.cpp:398]     Test net output #1: loss = 0.334387 (* 1 = 0.334387 loss)
I0428 19:43:16.410773 25299 solver.cpp:316] Optimization Done.
I0428 19:43:16.410776 25299 caffe.cpp:259] Optimization Done.
