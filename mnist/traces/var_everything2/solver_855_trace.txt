I0428 19:59:41.778764 29303 caffe.cpp:218] Using GPUs 0
I0428 19:59:41.808610 29303 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:42.259729 29303 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test855.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:42.259873 29303 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test855.prototxt
I0428 19:59:42.260195 29303 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:42.260208 29303 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:42.260285 29303 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:42.260344 29303 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:42.260426 29303 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:42.260444 29303 net.cpp:86] Creating Layer mnist
I0428 19:59:42.260450 29303 net.cpp:382] mnist -> data
I0428 19:59:42.260468 29303 net.cpp:382] mnist -> label
I0428 19:59:42.261428 29303 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:42.263907 29303 net.cpp:124] Setting up mnist
I0428 19:59:42.263923 29303 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:42.263929 29303 net.cpp:131] Top shape: 64 (64)
I0428 19:59:42.263933 29303 net.cpp:139] Memory required for data: 200960
I0428 19:59:42.263939 29303 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:42.263954 29303 net.cpp:86] Creating Layer conv0
I0428 19:59:42.263973 29303 net.cpp:408] conv0 <- data
I0428 19:59:42.263984 29303 net.cpp:382] conv0 -> conv0
I0428 19:59:42.499598 29303 net.cpp:124] Setting up conv0
I0428 19:59:42.499624 29303 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:42.499629 29303 net.cpp:139] Memory required for data: 1675520
I0428 19:59:42.499658 29303 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:42.499670 29303 net.cpp:86] Creating Layer pool0
I0428 19:59:42.499675 29303 net.cpp:408] pool0 <- conv0
I0428 19:59:42.499680 29303 net.cpp:382] pool0 -> pool0
I0428 19:59:42.499723 29303 net.cpp:124] Setting up pool0
I0428 19:59:42.499730 29303 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:42.499733 29303 net.cpp:139] Memory required for data: 2044160
I0428 19:59:42.499737 29303 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:42.499747 29303 net.cpp:86] Creating Layer conv1
I0428 19:59:42.499749 29303 net.cpp:408] conv1 <- pool0
I0428 19:59:42.499753 29303 net.cpp:382] conv1 -> conv1
I0428 19:59:42.502568 29303 net.cpp:124] Setting up conv1
I0428 19:59:42.502583 29303 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:42.502586 29303 net.cpp:139] Memory required for data: 2208000
I0428 19:59:42.502614 29303 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:42.502624 29303 net.cpp:86] Creating Layer pool1
I0428 19:59:42.502627 29303 net.cpp:408] pool1 <- conv1
I0428 19:59:42.502632 29303 net.cpp:382] pool1 -> pool1
I0428 19:59:42.502668 29303 net.cpp:124] Setting up pool1
I0428 19:59:42.502676 29303 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:42.502677 29303 net.cpp:139] Memory required for data: 2248960
I0428 19:59:42.502681 29303 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:42.502687 29303 net.cpp:86] Creating Layer ip1
I0428 19:59:42.502691 29303 net.cpp:408] ip1 <- pool1
I0428 19:59:42.502694 29303 net.cpp:382] ip1 -> ip1
I0428 19:59:42.503723 29303 net.cpp:124] Setting up ip1
I0428 19:59:42.503736 29303 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:42.503756 29303 net.cpp:139] Memory required for data: 2261760
I0428 19:59:42.503764 29303 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:42.503775 29303 net.cpp:86] Creating Layer relu1
I0428 19:59:42.503779 29303 net.cpp:408] relu1 <- ip1
I0428 19:59:42.503784 29303 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:42.503999 29303 net.cpp:124] Setting up relu1
I0428 19:59:42.504007 29303 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:42.504010 29303 net.cpp:139] Memory required for data: 2274560
I0428 19:59:42.504014 29303 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:42.504020 29303 net.cpp:86] Creating Layer ip2
I0428 19:59:42.504022 29303 net.cpp:408] ip2 <- ip1
I0428 19:59:42.504027 29303 net.cpp:382] ip2 -> ip2
I0428 19:59:42.504137 29303 net.cpp:124] Setting up ip2
I0428 19:59:42.504142 29303 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:42.504145 29303 net.cpp:139] Memory required for data: 2287360
I0428 19:59:42.504151 29303 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:42.504156 29303 net.cpp:86] Creating Layer relu2
I0428 19:59:42.504160 29303 net.cpp:408] relu2 <- ip2
I0428 19:59:42.504163 29303 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:42.504992 29303 net.cpp:124] Setting up relu2
I0428 19:59:42.505018 29303 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:42.505022 29303 net.cpp:139] Memory required for data: 2300160
I0428 19:59:42.505025 29303 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:42.505031 29303 net.cpp:86] Creating Layer ip3
I0428 19:59:42.505034 29303 net.cpp:408] ip3 <- ip2
I0428 19:59:42.505039 29303 net.cpp:382] ip3 -> ip3
I0428 19:59:42.505132 29303 net.cpp:124] Setting up ip3
I0428 19:59:42.505139 29303 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:42.505142 29303 net.cpp:139] Memory required for data: 2302720
I0428 19:59:42.505151 29303 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:42.505154 29303 net.cpp:86] Creating Layer relu3
I0428 19:59:42.505157 29303 net.cpp:408] relu3 <- ip3
I0428 19:59:42.505162 29303 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:42.505339 29303 net.cpp:124] Setting up relu3
I0428 19:59:42.505348 29303 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:42.505352 29303 net.cpp:139] Memory required for data: 2305280
I0428 19:59:42.505354 29303 layer_factory.hpp:77] Creating layer loss
I0428 19:59:42.505359 29303 net.cpp:86] Creating Layer loss
I0428 19:59:42.505362 29303 net.cpp:408] loss <- ip3
I0428 19:59:42.505367 29303 net.cpp:408] loss <- label
I0428 19:59:42.505372 29303 net.cpp:382] loss -> loss
I0428 19:59:42.505385 29303 layer_factory.hpp:77] Creating layer loss
I0428 19:59:42.505612 29303 net.cpp:124] Setting up loss
I0428 19:59:42.505621 29303 net.cpp:131] Top shape: (1)
I0428 19:59:42.505625 29303 net.cpp:134]     with loss weight 1
I0428 19:59:42.505640 29303 net.cpp:139] Memory required for data: 2305284
I0428 19:59:42.505642 29303 net.cpp:200] loss needs backward computation.
I0428 19:59:42.505645 29303 net.cpp:200] relu3 needs backward computation.
I0428 19:59:42.505648 29303 net.cpp:200] ip3 needs backward computation.
I0428 19:59:42.505651 29303 net.cpp:200] relu2 needs backward computation.
I0428 19:59:42.505655 29303 net.cpp:200] ip2 needs backward computation.
I0428 19:59:42.505657 29303 net.cpp:200] relu1 needs backward computation.
I0428 19:59:42.505659 29303 net.cpp:200] ip1 needs backward computation.
I0428 19:59:42.505662 29303 net.cpp:200] pool1 needs backward computation.
I0428 19:59:42.505666 29303 net.cpp:200] conv1 needs backward computation.
I0428 19:59:42.505668 29303 net.cpp:200] pool0 needs backward computation.
I0428 19:59:42.505671 29303 net.cpp:200] conv0 needs backward computation.
I0428 19:59:42.505676 29303 net.cpp:202] mnist does not need backward computation.
I0428 19:59:42.505677 29303 net.cpp:244] This network produces output loss
I0428 19:59:42.505686 29303 net.cpp:257] Network initialization done.
I0428 19:59:42.506037 29303 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test855.prototxt
I0428 19:59:42.506078 29303 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:42.506176 29303 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:42.506248 29303 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:42.506291 29303 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:42.506302 29303 net.cpp:86] Creating Layer mnist
I0428 19:59:42.506306 29303 net.cpp:382] mnist -> data
I0428 19:59:42.506314 29303 net.cpp:382] mnist -> label
I0428 19:59:42.506392 29303 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:42.508517 29303 net.cpp:124] Setting up mnist
I0428 19:59:42.508528 29303 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:42.508549 29303 net.cpp:131] Top shape: 100 (100)
I0428 19:59:42.508553 29303 net.cpp:139] Memory required for data: 314000
I0428 19:59:42.508570 29303 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:42.508576 29303 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:42.508579 29303 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:42.508584 29303 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:42.508591 29303 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:42.508633 29303 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:42.508640 29303 net.cpp:131] Top shape: 100 (100)
I0428 19:59:42.508643 29303 net.cpp:131] Top shape: 100 (100)
I0428 19:59:42.508646 29303 net.cpp:139] Memory required for data: 314800
I0428 19:59:42.508649 29303 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:42.508656 29303 net.cpp:86] Creating Layer conv0
I0428 19:59:42.508661 29303 net.cpp:408] conv0 <- data
I0428 19:59:42.508664 29303 net.cpp:382] conv0 -> conv0
I0428 19:59:42.510537 29303 net.cpp:124] Setting up conv0
I0428 19:59:42.510566 29303 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:42.510571 29303 net.cpp:139] Memory required for data: 2618800
I0428 19:59:42.510579 29303 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:42.510586 29303 net.cpp:86] Creating Layer pool0
I0428 19:59:42.510589 29303 net.cpp:408] pool0 <- conv0
I0428 19:59:42.510594 29303 net.cpp:382] pool0 -> pool0
I0428 19:59:42.510630 29303 net.cpp:124] Setting up pool0
I0428 19:59:42.510637 29303 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:42.510640 29303 net.cpp:139] Memory required for data: 3194800
I0428 19:59:42.510644 29303 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:42.510653 29303 net.cpp:86] Creating Layer conv1
I0428 19:59:42.510656 29303 net.cpp:408] conv1 <- pool0
I0428 19:59:42.510660 29303 net.cpp:382] conv1 -> conv1
I0428 19:59:42.512854 29303 net.cpp:124] Setting up conv1
I0428 19:59:42.512868 29303 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:42.512873 29303 net.cpp:139] Memory required for data: 3450800
I0428 19:59:42.512898 29303 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:42.512907 29303 net.cpp:86] Creating Layer pool1
I0428 19:59:42.512910 29303 net.cpp:408] pool1 <- conv1
I0428 19:59:42.512925 29303 net.cpp:382] pool1 -> pool1
I0428 19:59:42.512969 29303 net.cpp:124] Setting up pool1
I0428 19:59:42.512975 29303 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:42.512979 29303 net.cpp:139] Memory required for data: 3514800
I0428 19:59:42.512982 29303 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:42.512989 29303 net.cpp:86] Creating Layer ip1
I0428 19:59:42.512992 29303 net.cpp:408] ip1 <- pool1
I0428 19:59:42.513010 29303 net.cpp:382] ip1 -> ip1
I0428 19:59:42.513177 29303 net.cpp:124] Setting up ip1
I0428 19:59:42.513185 29303 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:42.513201 29303 net.cpp:139] Memory required for data: 3534800
I0428 19:59:42.513209 29303 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:42.513216 29303 net.cpp:86] Creating Layer relu1
I0428 19:59:42.513218 29303 net.cpp:408] relu1 <- ip1
I0428 19:59:42.513223 29303 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:42.513447 29303 net.cpp:124] Setting up relu1
I0428 19:59:42.513455 29303 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:42.513460 29303 net.cpp:139] Memory required for data: 3554800
I0428 19:59:42.513463 29303 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:42.513471 29303 net.cpp:86] Creating Layer ip2
I0428 19:59:42.513475 29303 net.cpp:408] ip2 <- ip1
I0428 19:59:42.513481 29303 net.cpp:382] ip2 -> ip2
I0428 19:59:42.513600 29303 net.cpp:124] Setting up ip2
I0428 19:59:42.513608 29303 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:42.513612 29303 net.cpp:139] Memory required for data: 3574800
I0428 19:59:42.513617 29303 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:42.513622 29303 net.cpp:86] Creating Layer relu2
I0428 19:59:42.513625 29303 net.cpp:408] relu2 <- ip2
I0428 19:59:42.513630 29303 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:42.513799 29303 net.cpp:124] Setting up relu2
I0428 19:59:42.513808 29303 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:42.513811 29303 net.cpp:139] Memory required for data: 3594800
I0428 19:59:42.513815 29303 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:42.513820 29303 net.cpp:86] Creating Layer ip3
I0428 19:59:42.513823 29303 net.cpp:408] ip3 <- ip2
I0428 19:59:42.513828 29303 net.cpp:382] ip3 -> ip3
I0428 19:59:42.513927 29303 net.cpp:124] Setting up ip3
I0428 19:59:42.513934 29303 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:42.513937 29303 net.cpp:139] Memory required for data: 3598800
I0428 19:59:42.513945 29303 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:42.513950 29303 net.cpp:86] Creating Layer relu3
I0428 19:59:42.513953 29303 net.cpp:408] relu3 <- ip3
I0428 19:59:42.513957 29303 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:42.514760 29303 net.cpp:124] Setting up relu3
I0428 19:59:42.514772 29303 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:42.514791 29303 net.cpp:139] Memory required for data: 3602800
I0428 19:59:42.514796 29303 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:42.514819 29303 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:42.514823 29303 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:42.514828 29303 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:42.514835 29303 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:42.514904 29303 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:42.514910 29303 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:42.514914 29303 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:42.514917 29303 net.cpp:139] Memory required for data: 3610800
I0428 19:59:42.514921 29303 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:42.514926 29303 net.cpp:86] Creating Layer accuracy
I0428 19:59:42.514930 29303 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:42.514935 29303 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:42.514940 29303 net.cpp:382] accuracy -> accuracy
I0428 19:59:42.514946 29303 net.cpp:124] Setting up accuracy
I0428 19:59:42.514950 29303 net.cpp:131] Top shape: (1)
I0428 19:59:42.514953 29303 net.cpp:139] Memory required for data: 3610804
I0428 19:59:42.514957 29303 layer_factory.hpp:77] Creating layer loss
I0428 19:59:42.514961 29303 net.cpp:86] Creating Layer loss
I0428 19:59:42.514964 29303 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:42.514968 29303 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:42.514973 29303 net.cpp:382] loss -> loss
I0428 19:59:42.514979 29303 layer_factory.hpp:77] Creating layer loss
I0428 19:59:42.515218 29303 net.cpp:124] Setting up loss
I0428 19:59:42.515231 29303 net.cpp:131] Top shape: (1)
I0428 19:59:42.515235 29303 net.cpp:134]     with loss weight 1
I0428 19:59:42.515259 29303 net.cpp:139] Memory required for data: 3610808
I0428 19:59:42.515264 29303 net.cpp:200] loss needs backward computation.
I0428 19:59:42.515269 29303 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:42.515272 29303 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:42.515275 29303 net.cpp:200] relu3 needs backward computation.
I0428 19:59:42.515278 29303 net.cpp:200] ip3 needs backward computation.
I0428 19:59:42.515282 29303 net.cpp:200] relu2 needs backward computation.
I0428 19:59:42.515285 29303 net.cpp:200] ip2 needs backward computation.
I0428 19:59:42.515290 29303 net.cpp:200] relu1 needs backward computation.
I0428 19:59:42.515292 29303 net.cpp:200] ip1 needs backward computation.
I0428 19:59:42.515296 29303 net.cpp:200] pool1 needs backward computation.
I0428 19:59:42.515300 29303 net.cpp:200] conv1 needs backward computation.
I0428 19:59:42.515302 29303 net.cpp:200] pool0 needs backward computation.
I0428 19:59:42.515306 29303 net.cpp:200] conv0 needs backward computation.
I0428 19:59:42.515311 29303 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:42.515316 29303 net.cpp:202] mnist does not need backward computation.
I0428 19:59:42.515317 29303 net.cpp:244] This network produces output accuracy
I0428 19:59:42.515332 29303 net.cpp:244] This network produces output loss
I0428 19:59:42.515343 29303 net.cpp:257] Network initialization done.
I0428 19:59:42.515384 29303 solver.cpp:56] Solver scaffolding done.
I0428 19:59:42.515774 29303 caffe.cpp:248] Starting Optimization
I0428 19:59:42.515780 29303 solver.cpp:273] Solving LeNet
I0428 19:59:42.515784 29303 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:42.516751 29303 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:42.520501 29303 blocking_queue.cpp:49] Waiting for data
I0428 19:59:42.592641 29310 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:42.593161 29303 solver.cpp:398]     Test net output #0: accuracy = 0.0785
I0428 19:59:42.593199 29303 solver.cpp:398]     Test net output #1: loss = 2.30259 (* 1 = 2.30259 loss)
I0428 19:59:42.595736 29303 solver.cpp:219] Iteration 0 (2.84875 iter/s, 0.0799119s/100 iters), loss = 2.30494
I0428 19:59:42.595773 29303 solver.cpp:238]     Train net output #0: loss = 2.30494 (* 1 = 2.30494 loss)
I0428 19:59:42.595785 29303 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:42.675899 29303 solver.cpp:219] Iteration 100 (1247.94 iter/s, 0.0801321s/100 iters), loss = 0.318457
I0428 19:59:42.675937 29303 solver.cpp:238]     Train net output #0: loss = 0.318457 (* 1 = 0.318457 loss)
I0428 19:59:42.675943 29303 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:42.755264 29303 solver.cpp:219] Iteration 200 (1260.52 iter/s, 0.0793324s/100 iters), loss = 0.27184
I0428 19:59:42.755301 29303 solver.cpp:238]     Train net output #0: loss = 0.27184 (* 1 = 0.27184 loss)
I0428 19:59:42.755307 29303 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:42.834841 29303 solver.cpp:219] Iteration 300 (1257.14 iter/s, 0.0795453s/100 iters), loss = 0.364202
I0428 19:59:42.834879 29303 solver.cpp:238]     Train net output #0: loss = 0.364202 (* 1 = 0.364202 loss)
I0428 19:59:42.834885 29303 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:42.914052 29303 solver.cpp:219] Iteration 400 (1262.95 iter/s, 0.0791798s/100 iters), loss = 0.178994
I0428 19:59:42.914090 29303 solver.cpp:238]     Train net output #0: loss = 0.178994 (* 1 = 0.178994 loss)
I0428 19:59:42.914096 29303 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:42.992857 29303 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:43.046257 29310 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:43.046782 29303 solver.cpp:398]     Test net output #0: accuracy = 0.9515
I0428 19:59:43.046815 29303 solver.cpp:398]     Test net output #1: loss = 0.15737 (* 1 = 0.15737 loss)
I0428 19:59:43.047646 29303 solver.cpp:219] Iteration 500 (748.737 iter/s, 0.133558s/100 iters), loss = 0.156684
I0428 19:59:43.047726 29303 solver.cpp:238]     Train net output #0: loss = 0.156684 (* 1 = 0.156684 loss)
I0428 19:59:43.047736 29303 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:43.135470 29303 solver.cpp:219] Iteration 600 (1139.78 iter/s, 0.0877363s/100 iters), loss = 0.118747
I0428 19:59:43.135509 29303 solver.cpp:238]     Train net output #0: loss = 0.118748 (* 1 = 0.118748 loss)
I0428 19:59:43.135515 29303 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:43.220808 29303 solver.cpp:219] Iteration 700 (1172.26 iter/s, 0.0853054s/100 iters), loss = 0.218615
I0428 19:59:43.220852 29303 solver.cpp:238]     Train net output #0: loss = 0.218615 (* 1 = 0.218615 loss)
I0428 19:59:43.220859 29303 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:43.307739 29303 solver.cpp:219] Iteration 800 (1150.83 iter/s, 0.0868936s/100 iters), loss = 0.281092
I0428 19:59:43.307780 29303 solver.cpp:238]     Train net output #0: loss = 0.281092 (* 1 = 0.281092 loss)
I0428 19:59:43.307786 29303 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:43.390528 29303 solver.cpp:219] Iteration 900 (1208.61 iter/s, 0.0827394s/100 iters), loss = 0.242171
I0428 19:59:43.390568 29303 solver.cpp:238]     Train net output #0: loss = 0.242171 (* 1 = 0.242171 loss)
I0428 19:59:43.390574 29303 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:43.418503 29309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:43.471918 29303 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:43.472844 29303 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:43.473372 29303 solver.cpp:311] Iteration 1000, loss = 0.142767
I0428 19:59:43.473388 29303 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:43.549157 29310 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:43.549708 29303 solver.cpp:398]     Test net output #0: accuracy = 0.9711
I0428 19:59:43.549744 29303 solver.cpp:398]     Test net output #1: loss = 0.0913685 (* 1 = 0.0913685 loss)
I0428 19:59:43.549751 29303 solver.cpp:316] Optimization Done.
I0428 19:59:43.549753 29303 caffe.cpp:259] Optimization Done.
