I0428 19:47:36.293339 26238 caffe.cpp:218] Using GPUs 0
I0428 19:47:36.336261 26238 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:36.851096 26238 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test520.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:36.851228 26238 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test520.prototxt
I0428 19:47:36.851646 26238 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:36.851666 26238 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:36.851768 26238 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:36.851848 26238 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:36.851949 26238 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:36.851974 26238 net.cpp:86] Creating Layer mnist
I0428 19:47:36.851984 26238 net.cpp:382] mnist -> data
I0428 19:47:36.852007 26238 net.cpp:382] mnist -> label
I0428 19:47:36.853107 26238 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:36.855556 26238 net.cpp:124] Setting up mnist
I0428 19:47:36.855573 26238 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:36.855581 26238 net.cpp:131] Top shape: 64 (64)
I0428 19:47:36.855583 26238 net.cpp:139] Memory required for data: 200960
I0428 19:47:36.855592 26238 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:36.855609 26238 net.cpp:86] Creating Layer conv0
I0428 19:47:36.855630 26238 net.cpp:408] conv0 <- data
I0428 19:47:36.855644 26238 net.cpp:382] conv0 -> conv0
I0428 19:47:37.131520 26238 net.cpp:124] Setting up conv0
I0428 19:47:37.131561 26238 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:37.131564 26238 net.cpp:139] Memory required for data: 938240
I0428 19:47:37.131577 26238 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:37.131592 26238 net.cpp:86] Creating Layer pool0
I0428 19:47:37.131595 26238 net.cpp:408] pool0 <- conv0
I0428 19:47:37.131600 26238 net.cpp:382] pool0 -> pool0
I0428 19:47:37.131678 26238 net.cpp:124] Setting up pool0
I0428 19:47:37.131692 26238 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:37.131695 26238 net.cpp:139] Memory required for data: 1122560
I0428 19:47:37.131697 26238 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:37.131709 26238 net.cpp:86] Creating Layer conv1
I0428 19:47:37.131712 26238 net.cpp:408] conv1 <- pool0
I0428 19:47:37.131717 26238 net.cpp:382] conv1 -> conv1
I0428 19:47:37.133755 26238 net.cpp:124] Setting up conv1
I0428 19:47:37.133785 26238 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:37.133788 26238 net.cpp:139] Memory required for data: 1155328
I0428 19:47:37.133797 26238 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:37.133805 26238 net.cpp:86] Creating Layer pool1
I0428 19:47:37.133807 26238 net.cpp:408] pool1 <- conv1
I0428 19:47:37.133812 26238 net.cpp:382] pool1 -> pool1
I0428 19:47:37.133878 26238 net.cpp:124] Setting up pool1
I0428 19:47:37.133884 26238 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:37.133888 26238 net.cpp:139] Memory required for data: 1163520
I0428 19:47:37.133889 26238 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:37.133896 26238 net.cpp:86] Creating Layer ip1
I0428 19:47:37.133899 26238 net.cpp:408] ip1 <- pool1
I0428 19:47:37.133904 26238 net.cpp:382] ip1 -> ip1
I0428 19:47:37.134016 26238 net.cpp:124] Setting up ip1
I0428 19:47:37.134023 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.134027 26238 net.cpp:139] Memory required for data: 1166080
I0428 19:47:37.134033 26238 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:37.134038 26238 net.cpp:86] Creating Layer relu1
I0428 19:47:37.134042 26238 net.cpp:408] relu1 <- ip1
I0428 19:47:37.134047 26238 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:37.134202 26238 net.cpp:124] Setting up relu1
I0428 19:47:37.134210 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.134213 26238 net.cpp:139] Memory required for data: 1168640
I0428 19:47:37.134217 26238 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:37.134222 26238 net.cpp:86] Creating Layer ip2
I0428 19:47:37.134227 26238 net.cpp:408] ip2 <- ip1
I0428 19:47:37.134230 26238 net.cpp:382] ip2 -> ip2
I0428 19:47:37.134330 26238 net.cpp:124] Setting up ip2
I0428 19:47:37.134337 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.134340 26238 net.cpp:139] Memory required for data: 1171200
I0428 19:47:37.134344 26238 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:37.134366 26238 net.cpp:86] Creating Layer relu2
I0428 19:47:37.134368 26238 net.cpp:408] relu2 <- ip2
I0428 19:47:37.134372 26238 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:37.135177 26238 net.cpp:124] Setting up relu2
I0428 19:47:37.135190 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.135208 26238 net.cpp:139] Memory required for data: 1173760
I0428 19:47:37.135212 26238 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:37.135220 26238 net.cpp:86] Creating Layer ip3
I0428 19:47:37.135222 26238 net.cpp:408] ip3 <- ip2
I0428 19:47:37.135227 26238 net.cpp:382] ip3 -> ip3
I0428 19:47:37.135323 26238 net.cpp:124] Setting up ip3
I0428 19:47:37.135330 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.135334 26238 net.cpp:139] Memory required for data: 1176320
I0428 19:47:37.135340 26238 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:37.135345 26238 net.cpp:86] Creating Layer relu3
I0428 19:47:37.135349 26238 net.cpp:408] relu3 <- ip3
I0428 19:47:37.135352 26238 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:37.135512 26238 net.cpp:124] Setting up relu3
I0428 19:47:37.135521 26238 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:37.135524 26238 net.cpp:139] Memory required for data: 1178880
I0428 19:47:37.135527 26238 layer_factory.hpp:77] Creating layer loss
I0428 19:47:37.135534 26238 net.cpp:86] Creating Layer loss
I0428 19:47:37.135536 26238 net.cpp:408] loss <- ip3
I0428 19:47:37.135540 26238 net.cpp:408] loss <- label
I0428 19:47:37.135545 26238 net.cpp:382] loss -> loss
I0428 19:47:37.135560 26238 layer_factory.hpp:77] Creating layer loss
I0428 19:47:37.135817 26238 net.cpp:124] Setting up loss
I0428 19:47:37.135826 26238 net.cpp:131] Top shape: (1)
I0428 19:47:37.135829 26238 net.cpp:134]     with loss weight 1
I0428 19:47:37.135844 26238 net.cpp:139] Memory required for data: 1178884
I0428 19:47:37.135848 26238 net.cpp:200] loss needs backward computation.
I0428 19:47:37.135852 26238 net.cpp:200] relu3 needs backward computation.
I0428 19:47:37.135855 26238 net.cpp:200] ip3 needs backward computation.
I0428 19:47:37.135859 26238 net.cpp:200] relu2 needs backward computation.
I0428 19:47:37.135861 26238 net.cpp:200] ip2 needs backward computation.
I0428 19:47:37.135880 26238 net.cpp:200] relu1 needs backward computation.
I0428 19:47:37.135884 26238 net.cpp:200] ip1 needs backward computation.
I0428 19:47:37.135886 26238 net.cpp:200] pool1 needs backward computation.
I0428 19:47:37.135890 26238 net.cpp:200] conv1 needs backward computation.
I0428 19:47:37.135893 26238 net.cpp:200] pool0 needs backward computation.
I0428 19:47:37.135896 26238 net.cpp:200] conv0 needs backward computation.
I0428 19:47:37.135900 26238 net.cpp:202] mnist does not need backward computation.
I0428 19:47:37.135903 26238 net.cpp:244] This network produces output loss
I0428 19:47:37.135913 26238 net.cpp:257] Network initialization done.
I0428 19:47:37.136312 26238 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test520.prototxt
I0428 19:47:37.136353 26238 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:37.136456 26238 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:37.136533 26238 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:37.136579 26238 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:37.136590 26238 net.cpp:86] Creating Layer mnist
I0428 19:47:37.136595 26238 net.cpp:382] mnist -> data
I0428 19:47:37.136602 26238 net.cpp:382] mnist -> label
I0428 19:47:37.136684 26238 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:37.138998 26238 net.cpp:124] Setting up mnist
I0428 19:47:37.139044 26238 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:37.139048 26238 net.cpp:131] Top shape: 100 (100)
I0428 19:47:37.139067 26238 net.cpp:139] Memory required for data: 314000
I0428 19:47:37.139071 26238 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:37.139078 26238 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:37.139083 26238 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:37.139088 26238 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:37.139096 26238 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:37.139143 26238 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:37.139149 26238 net.cpp:131] Top shape: 100 (100)
I0428 19:47:37.139153 26238 net.cpp:131] Top shape: 100 (100)
I0428 19:47:37.139155 26238 net.cpp:139] Memory required for data: 314800
I0428 19:47:37.139158 26238 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:37.139168 26238 net.cpp:86] Creating Layer conv0
I0428 19:47:37.139170 26238 net.cpp:408] conv0 <- data
I0428 19:47:37.139175 26238 net.cpp:382] conv0 -> conv0
I0428 19:47:37.140760 26238 net.cpp:124] Setting up conv0
I0428 19:47:37.140789 26238 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:37.140791 26238 net.cpp:139] Memory required for data: 1466800
I0428 19:47:37.140800 26238 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:37.140806 26238 net.cpp:86] Creating Layer pool0
I0428 19:47:37.140831 26238 net.cpp:408] pool0 <- conv0
I0428 19:47:37.140837 26238 net.cpp:382] pool0 -> pool0
I0428 19:47:37.140905 26238 net.cpp:124] Setting up pool0
I0428 19:47:37.140911 26238 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:37.140914 26238 net.cpp:139] Memory required for data: 1754800
I0428 19:47:37.140918 26238 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:37.140926 26238 net.cpp:86] Creating Layer conv1
I0428 19:47:37.140929 26238 net.cpp:408] conv1 <- pool0
I0428 19:47:37.140950 26238 net.cpp:382] conv1 -> conv1
I0428 19:47:37.143132 26238 net.cpp:124] Setting up conv1
I0428 19:47:37.143146 26238 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:37.143167 26238 net.cpp:139] Memory required for data: 1806000
I0428 19:47:37.143174 26238 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:37.143180 26238 net.cpp:86] Creating Layer pool1
I0428 19:47:37.143184 26238 net.cpp:408] pool1 <- conv1
I0428 19:47:37.143190 26238 net.cpp:382] pool1 -> pool1
I0428 19:47:37.143244 26238 net.cpp:124] Setting up pool1
I0428 19:47:37.143251 26238 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:37.143254 26238 net.cpp:139] Memory required for data: 1818800
I0428 19:47:37.143257 26238 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:37.143263 26238 net.cpp:86] Creating Layer ip1
I0428 19:47:37.143273 26238 net.cpp:408] ip1 <- pool1
I0428 19:47:37.143285 26238 net.cpp:382] ip1 -> ip1
I0428 19:47:37.143458 26238 net.cpp:124] Setting up ip1
I0428 19:47:37.143466 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.143481 26238 net.cpp:139] Memory required for data: 1822800
I0428 19:47:37.143488 26238 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:37.143493 26238 net.cpp:86] Creating Layer relu1
I0428 19:47:37.143496 26238 net.cpp:408] relu1 <- ip1
I0428 19:47:37.143501 26238 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:37.143707 26238 net.cpp:124] Setting up relu1
I0428 19:47:37.143718 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.143735 26238 net.cpp:139] Memory required for data: 1826800
I0428 19:47:37.143738 26238 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:37.143745 26238 net.cpp:86] Creating Layer ip2
I0428 19:47:37.143749 26238 net.cpp:408] ip2 <- ip1
I0428 19:47:37.143754 26238 net.cpp:382] ip2 -> ip2
I0428 19:47:37.143877 26238 net.cpp:124] Setting up ip2
I0428 19:47:37.143885 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.143888 26238 net.cpp:139] Memory required for data: 1830800
I0428 19:47:37.143895 26238 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:37.143899 26238 net.cpp:86] Creating Layer relu2
I0428 19:47:37.143903 26238 net.cpp:408] relu2 <- ip2
I0428 19:47:37.143908 26238 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:37.144062 26238 net.cpp:124] Setting up relu2
I0428 19:47:37.144069 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.144073 26238 net.cpp:139] Memory required for data: 1834800
I0428 19:47:37.144076 26238 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:37.144083 26238 net.cpp:86] Creating Layer ip3
I0428 19:47:37.144085 26238 net.cpp:408] ip3 <- ip2
I0428 19:47:37.144105 26238 net.cpp:382] ip3 -> ip3
I0428 19:47:37.144208 26238 net.cpp:124] Setting up ip3
I0428 19:47:37.144214 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.144224 26238 net.cpp:139] Memory required for data: 1838800
I0428 19:47:37.144232 26238 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:37.144237 26238 net.cpp:86] Creating Layer relu3
I0428 19:47:37.144240 26238 net.cpp:408] relu3 <- ip3
I0428 19:47:37.144244 26238 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:37.145207 26238 net.cpp:124] Setting up relu3
I0428 19:47:37.145234 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.145238 26238 net.cpp:139] Memory required for data: 1842800
I0428 19:47:37.145242 26238 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:37.145247 26238 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:37.145251 26238 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:37.145256 26238 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:37.145263 26238 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:37.145305 26238 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:37.145311 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.145315 26238 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:37.145323 26238 net.cpp:139] Memory required for data: 1850800
I0428 19:47:37.145325 26238 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:37.145329 26238 net.cpp:86] Creating Layer accuracy
I0428 19:47:37.145334 26238 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:37.145337 26238 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:37.145342 26238 net.cpp:382] accuracy -> accuracy
I0428 19:47:37.145349 26238 net.cpp:124] Setting up accuracy
I0428 19:47:37.145354 26238 net.cpp:131] Top shape: (1)
I0428 19:47:37.145355 26238 net.cpp:139] Memory required for data: 1850804
I0428 19:47:37.145359 26238 layer_factory.hpp:77] Creating layer loss
I0428 19:47:37.145364 26238 net.cpp:86] Creating Layer loss
I0428 19:47:37.145366 26238 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:37.145370 26238 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:37.145375 26238 net.cpp:382] loss -> loss
I0428 19:47:37.145381 26238 layer_factory.hpp:77] Creating layer loss
I0428 19:47:37.145643 26238 net.cpp:124] Setting up loss
I0428 19:47:37.145653 26238 net.cpp:131] Top shape: (1)
I0428 19:47:37.145658 26238 net.cpp:134]     with loss weight 1
I0428 19:47:37.145664 26238 net.cpp:139] Memory required for data: 1850808
I0428 19:47:37.145678 26238 net.cpp:200] loss needs backward computation.
I0428 19:47:37.145683 26238 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:37.145686 26238 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:37.145690 26238 net.cpp:200] relu3 needs backward computation.
I0428 19:47:37.145694 26238 net.cpp:200] ip3 needs backward computation.
I0428 19:47:37.145696 26238 net.cpp:200] relu2 needs backward computation.
I0428 19:47:37.145699 26238 net.cpp:200] ip2 needs backward computation.
I0428 19:47:37.145702 26238 net.cpp:200] relu1 needs backward computation.
I0428 19:47:37.145705 26238 net.cpp:200] ip1 needs backward computation.
I0428 19:47:37.145709 26238 net.cpp:200] pool1 needs backward computation.
I0428 19:47:37.145711 26238 net.cpp:200] conv1 needs backward computation.
I0428 19:47:37.145715 26238 net.cpp:200] pool0 needs backward computation.
I0428 19:47:37.145719 26238 net.cpp:200] conv0 needs backward computation.
I0428 19:47:37.145721 26238 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:37.145725 26238 net.cpp:202] mnist does not need backward computation.
I0428 19:47:37.145728 26238 net.cpp:244] This network produces output accuracy
I0428 19:47:37.145731 26238 net.cpp:244] This network produces output loss
I0428 19:47:37.145742 26238 net.cpp:257] Network initialization done.
I0428 19:47:37.145784 26238 solver.cpp:56] Solver scaffolding done.
I0428 19:47:37.146170 26238 caffe.cpp:248] Starting Optimization
I0428 19:47:37.146178 26238 solver.cpp:273] Solving LeNet
I0428 19:47:37.146180 26238 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:37.147079 26238 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:37.150943 26238 blocking_queue.cpp:49] Waiting for data
I0428 19:47:37.207166 26245 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:37.207675 26238 solver.cpp:398]     Test net output #0: accuracy = 0.092
I0428 19:47:37.207710 26238 solver.cpp:398]     Test net output #1: loss = 2.31747 (* 1 = 2.31747 loss)
I0428 19:47:37.209655 26238 solver.cpp:219] Iteration 0 (0 iter/s, 0.0634347s/100 iters), loss = 2.31825
I0428 19:47:37.209693 26238 solver.cpp:238]     Train net output #0: loss = 2.31825 (* 1 = 2.31825 loss)
I0428 19:47:37.209719 26238 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:37.282943 26238 solver.cpp:219] Iteration 100 (1365.36 iter/s, 0.0732406s/100 iters), loss = 1.81433
I0428 19:47:37.282982 26238 solver.cpp:238]     Train net output #0: loss = 1.81433 (* 1 = 1.81433 loss)
I0428 19:47:37.282989 26238 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:37.355746 26238 solver.cpp:219] Iteration 200 (1374.18 iter/s, 0.0727706s/100 iters), loss = 1.31079
I0428 19:47:37.355798 26238 solver.cpp:238]     Train net output #0: loss = 1.31079 (* 1 = 1.31079 loss)
I0428 19:47:37.355804 26238 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:37.428793 26238 solver.cpp:219] Iteration 300 (1369.84 iter/s, 0.073001s/100 iters), loss = 1.4471
I0428 19:47:37.428836 26238 solver.cpp:238]     Train net output #0: loss = 1.4471 (* 1 = 1.4471 loss)
I0428 19:47:37.428859 26238 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:37.501184 26238 solver.cpp:219] Iteration 400 (1382.35 iter/s, 0.0723405s/100 iters), loss = 0.726955
I0428 19:47:37.501207 26238 solver.cpp:238]     Train net output #0: loss = 0.726955 (* 1 = 0.726955 loss)
I0428 19:47:37.501214 26238 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:37.571406 26238 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:37.618398 26245 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:37.618921 26238 solver.cpp:398]     Test net output #0: accuracy = 0.6381
I0428 19:47:37.618942 26238 solver.cpp:398]     Test net output #1: loss = 1.00828 (* 1 = 1.00828 loss)
I0428 19:47:37.619701 26238 solver.cpp:219] Iteration 500 (844.018 iter/s, 0.118481s/100 iters), loss = 1.02311
I0428 19:47:37.619758 26238 solver.cpp:238]     Train net output #0: loss = 1.02311 (* 1 = 1.02311 loss)
I0428 19:47:37.619784 26238 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:37.695130 26238 solver.cpp:219] Iteration 600 (1326.84 iter/s, 0.0753669s/100 iters), loss = 0.944295
I0428 19:47:37.695155 26238 solver.cpp:238]     Train net output #0: loss = 0.944295 (* 1 = 0.944295 loss)
I0428 19:47:37.695163 26238 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:37.766293 26238 solver.cpp:219] Iteration 700 (1405.89 iter/s, 0.0711291s/100 iters), loss = 1.33127
I0428 19:47:37.766316 26238 solver.cpp:238]     Train net output #0: loss = 1.33127 (* 1 = 1.33127 loss)
I0428 19:47:37.766340 26238 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:37.837448 26238 solver.cpp:219] Iteration 800 (1406 iter/s, 0.0711237s/100 iters), loss = 0.942863
I0428 19:47:37.837474 26238 solver.cpp:238]     Train net output #0: loss = 0.942863 (* 1 = 0.942863 loss)
I0428 19:47:37.837496 26238 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:37.909513 26238 solver.cpp:219] Iteration 900 (1388.29 iter/s, 0.0720312s/100 iters), loss = 1.00058
I0428 19:47:37.909538 26238 solver.cpp:238]     Train net output #0: loss = 1.00058 (* 1 = 1.00058 loss)
I0428 19:47:37.909559 26238 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:37.933691 26244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:37.980279 26238 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:37.980957 26238 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:37.981366 26238 solver.cpp:311] Iteration 1000, loss = 1.19357
I0428 19:47:37.981381 26238 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:38.034073 26245 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:38.034560 26238 solver.cpp:398]     Test net output #0: accuracy = 0.6622
I0428 19:47:38.034581 26238 solver.cpp:398]     Test net output #1: loss = 0.902875 (* 1 = 0.902875 loss)
I0428 19:47:38.034586 26238 solver.cpp:316] Optimization Done.
I0428 19:47:38.034590 26238 caffe.cpp:259] Optimization Done.
