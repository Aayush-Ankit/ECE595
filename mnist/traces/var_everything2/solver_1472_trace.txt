I0428 20:26:29.872444  2800 caffe.cpp:218] Using GPUs 0
I0428 20:26:29.904757  2800 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:30.403044  2800 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1472.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:30.403162  2800 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1472.prototxt
I0428 20:26:30.403479  2800 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:30.403494  2800 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:30.403573  2800 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:30.403635  2800 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:30.403714  2800 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:30.403733  2800 net.cpp:86] Creating Layer mnist
I0428 20:26:30.403740  2800 net.cpp:382] mnist -> data
I0428 20:26:30.403772  2800 net.cpp:382] mnist -> label
I0428 20:26:30.404742  2800 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:30.406955  2800 net.cpp:124] Setting up mnist
I0428 20:26:30.406985  2800 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:30.406990  2800 net.cpp:131] Top shape: 64 (64)
I0428 20:26:30.406992  2800 net.cpp:139] Memory required for data: 200960
I0428 20:26:30.406998  2800 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:30.407012  2800 net.cpp:86] Creating Layer conv0
I0428 20:26:30.407028  2800 net.cpp:408] conv0 <- data
I0428 20:26:30.407042  2800 net.cpp:382] conv0 -> conv0
I0428 20:26:30.639719  2800 net.cpp:124] Setting up conv0
I0428 20:26:30.639761  2800 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:30.639780  2800 net.cpp:139] Memory required for data: 14946560
I0428 20:26:30.639796  2800 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:30.639807  2800 net.cpp:86] Creating Layer pool0
I0428 20:26:30.639811  2800 net.cpp:408] pool0 <- conv0
I0428 20:26:30.639832  2800 net.cpp:382] pool0 -> pool0
I0428 20:26:30.639879  2800 net.cpp:124] Setting up pool0
I0428 20:26:30.639885  2800 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:30.639888  2800 net.cpp:139] Memory required for data: 18632960
I0428 20:26:30.639890  2800 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:30.639901  2800 net.cpp:86] Creating Layer conv1
I0428 20:26:30.639904  2800 net.cpp:408] conv1 <- pool0
I0428 20:26:30.639909  2800 net.cpp:382] conv1 -> conv1
I0428 20:26:30.642577  2800 net.cpp:124] Setting up conv1
I0428 20:26:30.642606  2800 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:30.642609  2800 net.cpp:139] Memory required for data: 18665728
I0428 20:26:30.642617  2800 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:30.642626  2800 net.cpp:86] Creating Layer pool1
I0428 20:26:30.642628  2800 net.cpp:408] pool1 <- conv1
I0428 20:26:30.642633  2800 net.cpp:382] pool1 -> pool1
I0428 20:26:30.642684  2800 net.cpp:124] Setting up pool1
I0428 20:26:30.642689  2800 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:30.642693  2800 net.cpp:139] Memory required for data: 18673920
I0428 20:26:30.642695  2800 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:30.642706  2800 net.cpp:86] Creating Layer ip1
I0428 20:26:30.642709  2800 net.cpp:408] ip1 <- pool1
I0428 20:26:30.642714  2800 net.cpp:382] ip1 -> ip1
I0428 20:26:30.642807  2800 net.cpp:124] Setting up ip1
I0428 20:26:30.642814  2800 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:30.642817  2800 net.cpp:139] Memory required for data: 18680320
I0428 20:26:30.642824  2800 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:30.642829  2800 net.cpp:86] Creating Layer relu1
I0428 20:26:30.642832  2800 net.cpp:408] relu1 <- ip1
I0428 20:26:30.642837  2800 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:30.643004  2800 net.cpp:124] Setting up relu1
I0428 20:26:30.643013  2800 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:30.643016  2800 net.cpp:139] Memory required for data: 18686720
I0428 20:26:30.643020  2800 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:30.643026  2800 net.cpp:86] Creating Layer ip2
I0428 20:26:30.643029  2800 net.cpp:408] ip2 <- ip1
I0428 20:26:30.643033  2800 net.cpp:382] ip2 -> ip2
I0428 20:26:30.643141  2800 net.cpp:124] Setting up ip2
I0428 20:26:30.643147  2800 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:30.643151  2800 net.cpp:139] Memory required for data: 18699520
I0428 20:26:30.643157  2800 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:30.643162  2800 net.cpp:86] Creating Layer relu2
I0428 20:26:30.643165  2800 net.cpp:408] relu2 <- ip2
I0428 20:26:30.643169  2800 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:30.643937  2800 net.cpp:124] Setting up relu2
I0428 20:26:30.643950  2800 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:30.643970  2800 net.cpp:139] Memory required for data: 18712320
I0428 20:26:30.643973  2800 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:30.643980  2800 net.cpp:86] Creating Layer ip3
I0428 20:26:30.643985  2800 net.cpp:408] ip3 <- ip2
I0428 20:26:30.644004  2800 net.cpp:382] ip3 -> ip3
I0428 20:26:30.644106  2800 net.cpp:124] Setting up ip3
I0428 20:26:30.644115  2800 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:30.644119  2800 net.cpp:139] Memory required for data: 18714880
I0428 20:26:30.644140  2800 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:30.644145  2800 net.cpp:86] Creating Layer relu3
I0428 20:26:30.644148  2800 net.cpp:408] relu3 <- ip3
I0428 20:26:30.644153  2800 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:30.644340  2800 net.cpp:124] Setting up relu3
I0428 20:26:30.644348  2800 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:30.644351  2800 net.cpp:139] Memory required for data: 18717440
I0428 20:26:30.644354  2800 layer_factory.hpp:77] Creating layer loss
I0428 20:26:30.644361  2800 net.cpp:86] Creating Layer loss
I0428 20:26:30.644363  2800 net.cpp:408] loss <- ip3
I0428 20:26:30.644367  2800 net.cpp:408] loss <- label
I0428 20:26:30.644372  2800 net.cpp:382] loss -> loss
I0428 20:26:30.644389  2800 layer_factory.hpp:77] Creating layer loss
I0428 20:26:30.644603  2800 net.cpp:124] Setting up loss
I0428 20:26:30.644611  2800 net.cpp:131] Top shape: (1)
I0428 20:26:30.644614  2800 net.cpp:134]     with loss weight 1
I0428 20:26:30.644629  2800 net.cpp:139] Memory required for data: 18717444
I0428 20:26:30.644632  2800 net.cpp:200] loss needs backward computation.
I0428 20:26:30.644636  2800 net.cpp:200] relu3 needs backward computation.
I0428 20:26:30.644639  2800 net.cpp:200] ip3 needs backward computation.
I0428 20:26:30.644642  2800 net.cpp:200] relu2 needs backward computation.
I0428 20:26:30.644645  2800 net.cpp:200] ip2 needs backward computation.
I0428 20:26:30.644647  2800 net.cpp:200] relu1 needs backward computation.
I0428 20:26:30.644650  2800 net.cpp:200] ip1 needs backward computation.
I0428 20:26:30.644654  2800 net.cpp:200] pool1 needs backward computation.
I0428 20:26:30.644656  2800 net.cpp:200] conv1 needs backward computation.
I0428 20:26:30.644659  2800 net.cpp:200] pool0 needs backward computation.
I0428 20:26:30.644662  2800 net.cpp:200] conv0 needs backward computation.
I0428 20:26:30.644666  2800 net.cpp:202] mnist does not need backward computation.
I0428 20:26:30.644670  2800 net.cpp:244] This network produces output loss
I0428 20:26:30.644677  2800 net.cpp:257] Network initialization done.
I0428 20:26:30.645050  2800 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1472.prototxt
I0428 20:26:30.645078  2800 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:30.645200  2800 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:30.645280  2800 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:30.645325  2800 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:30.645337  2800 net.cpp:86] Creating Layer mnist
I0428 20:26:30.645341  2800 net.cpp:382] mnist -> data
I0428 20:26:30.645364  2800 net.cpp:382] mnist -> label
I0428 20:26:30.645445  2800 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:30.647626  2800 net.cpp:124] Setting up mnist
I0428 20:26:30.647655  2800 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:30.647660  2800 net.cpp:131] Top shape: 100 (100)
I0428 20:26:30.647663  2800 net.cpp:139] Memory required for data: 314000
I0428 20:26:30.647666  2800 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:30.647702  2800 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:30.647706  2800 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:30.647711  2800 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:30.647717  2800 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:30.647763  2800 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:30.647768  2800 net.cpp:131] Top shape: 100 (100)
I0428 20:26:30.647773  2800 net.cpp:131] Top shape: 100 (100)
I0428 20:26:30.647774  2800 net.cpp:139] Memory required for data: 314800
I0428 20:26:30.647778  2800 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:30.647785  2800 net.cpp:86] Creating Layer conv0
I0428 20:26:30.647789  2800 net.cpp:408] conv0 <- data
I0428 20:26:30.647792  2800 net.cpp:382] conv0 -> conv0
I0428 20:26:30.649566  2800 net.cpp:124] Setting up conv0
I0428 20:26:30.649580  2800 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:30.649583  2800 net.cpp:139] Memory required for data: 23354800
I0428 20:26:30.649591  2800 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:30.649597  2800 net.cpp:86] Creating Layer pool0
I0428 20:26:30.649616  2800 net.cpp:408] pool0 <- conv0
I0428 20:26:30.649621  2800 net.cpp:382] pool0 -> pool0
I0428 20:26:30.649654  2800 net.cpp:124] Setting up pool0
I0428 20:26:30.649660  2800 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:30.649662  2800 net.cpp:139] Memory required for data: 29114800
I0428 20:26:30.649665  2800 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:30.649673  2800 net.cpp:86] Creating Layer conv1
I0428 20:26:30.649677  2800 net.cpp:408] conv1 <- pool0
I0428 20:26:30.649682  2800 net.cpp:382] conv1 -> conv1
I0428 20:26:30.651155  2800 net.cpp:124] Setting up conv1
I0428 20:26:30.651168  2800 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:30.651171  2800 net.cpp:139] Memory required for data: 29166000
I0428 20:26:30.651180  2800 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:30.651185  2800 net.cpp:86] Creating Layer pool1
I0428 20:26:30.651190  2800 net.cpp:408] pool1 <- conv1
I0428 20:26:30.651193  2800 net.cpp:382] pool1 -> pool1
I0428 20:26:30.651228  2800 net.cpp:124] Setting up pool1
I0428 20:26:30.651234  2800 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:30.651237  2800 net.cpp:139] Memory required for data: 29178800
I0428 20:26:30.651239  2800 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:30.651245  2800 net.cpp:86] Creating Layer ip1
I0428 20:26:30.651248  2800 net.cpp:408] ip1 <- pool1
I0428 20:26:30.651254  2800 net.cpp:382] ip1 -> ip1
I0428 20:26:30.651350  2800 net.cpp:124] Setting up ip1
I0428 20:26:30.651358  2800 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:30.651386  2800 net.cpp:139] Memory required for data: 29188800
I0428 20:26:30.651392  2800 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:30.651398  2800 net.cpp:86] Creating Layer relu1
I0428 20:26:30.651402  2800 net.cpp:408] relu1 <- ip1
I0428 20:26:30.651407  2800 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:30.651593  2800 net.cpp:124] Setting up relu1
I0428 20:26:30.651602  2800 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:30.651605  2800 net.cpp:139] Memory required for data: 29198800
I0428 20:26:30.651608  2800 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:30.651618  2800 net.cpp:86] Creating Layer ip2
I0428 20:26:30.651621  2800 net.cpp:408] ip2 <- ip1
I0428 20:26:30.651628  2800 net.cpp:382] ip2 -> ip2
I0428 20:26:30.651756  2800 net.cpp:124] Setting up ip2
I0428 20:26:30.651762  2800 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:30.651765  2800 net.cpp:139] Memory required for data: 29218800
I0428 20:26:30.651772  2800 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:30.651777  2800 net.cpp:86] Creating Layer relu2
I0428 20:26:30.651782  2800 net.cpp:408] relu2 <- ip2
I0428 20:26:30.651785  2800 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:30.651980  2800 net.cpp:124] Setting up relu2
I0428 20:26:30.651988  2800 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:30.651993  2800 net.cpp:139] Memory required for data: 29238800
I0428 20:26:30.651995  2800 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:30.652004  2800 net.cpp:86] Creating Layer ip3
I0428 20:26:30.652006  2800 net.cpp:408] ip3 <- ip2
I0428 20:26:30.652012  2800 net.cpp:382] ip3 -> ip3
I0428 20:26:30.652120  2800 net.cpp:124] Setting up ip3
I0428 20:26:30.652128  2800 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:30.652137  2800 net.cpp:139] Memory required for data: 29242800
I0428 20:26:30.652144  2800 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:30.652149  2800 net.cpp:86] Creating Layer relu3
I0428 20:26:30.652166  2800 net.cpp:408] relu3 <- ip3
I0428 20:26:30.652176  2800 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:30.653090  2800 net.cpp:124] Setting up relu3
I0428 20:26:30.653102  2800 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:30.653106  2800 net.cpp:139] Memory required for data: 29246800
I0428 20:26:30.653110  2800 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:30.653122  2800 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:30.653132  2800 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:30.653139  2800 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:30.653146  2800 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:30.653272  2800 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:30.653280  2800 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:30.653285  2800 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:30.653286  2800 net.cpp:139] Memory required for data: 29254800
I0428 20:26:30.653290  2800 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:30.653300  2800 net.cpp:86] Creating Layer accuracy
I0428 20:26:30.653302  2800 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:30.653306  2800 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:30.653311  2800 net.cpp:382] accuracy -> accuracy
I0428 20:26:30.653317  2800 net.cpp:124] Setting up accuracy
I0428 20:26:30.653321  2800 net.cpp:131] Top shape: (1)
I0428 20:26:30.653323  2800 net.cpp:139] Memory required for data: 29254804
I0428 20:26:30.653331  2800 layer_factory.hpp:77] Creating layer loss
I0428 20:26:30.653337  2800 net.cpp:86] Creating Layer loss
I0428 20:26:30.653339  2800 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:30.653343  2800 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:30.653353  2800 net.cpp:382] loss -> loss
I0428 20:26:30.653358  2800 layer_factory.hpp:77] Creating layer loss
I0428 20:26:30.653594  2800 net.cpp:124] Setting up loss
I0428 20:26:30.653604  2800 net.cpp:131] Top shape: (1)
I0428 20:26:30.653612  2800 net.cpp:134]     with loss weight 1
I0428 20:26:30.653640  2800 net.cpp:139] Memory required for data: 29254808
I0428 20:26:30.653650  2800 net.cpp:200] loss needs backward computation.
I0428 20:26:30.653653  2800 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:30.653657  2800 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:30.653661  2800 net.cpp:200] relu3 needs backward computation.
I0428 20:26:30.653663  2800 net.cpp:200] ip3 needs backward computation.
I0428 20:26:30.653671  2800 net.cpp:200] relu2 needs backward computation.
I0428 20:26:30.653674  2800 net.cpp:200] ip2 needs backward computation.
I0428 20:26:30.653677  2800 net.cpp:200] relu1 needs backward computation.
I0428 20:26:30.653681  2800 net.cpp:200] ip1 needs backward computation.
I0428 20:26:30.653688  2800 net.cpp:200] pool1 needs backward computation.
I0428 20:26:30.653692  2800 net.cpp:200] conv1 needs backward computation.
I0428 20:26:30.653694  2800 net.cpp:200] pool0 needs backward computation.
I0428 20:26:30.653702  2800 net.cpp:200] conv0 needs backward computation.
I0428 20:26:30.653707  2800 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:30.653712  2800 net.cpp:202] mnist does not need backward computation.
I0428 20:26:30.653714  2800 net.cpp:244] This network produces output accuracy
I0428 20:26:30.653728  2800 net.cpp:244] This network produces output loss
I0428 20:26:30.653739  2800 net.cpp:257] Network initialization done.
I0428 20:26:30.653782  2800 solver.cpp:56] Solver scaffolding done.
I0428 20:26:30.654140  2800 caffe.cpp:248] Starting Optimization
I0428 20:26:30.654148  2800 solver.cpp:273] Solving LeNet
I0428 20:26:30.654151  2800 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:30.654988  2800 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:30.751303  2829 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:30.752799  2800 solver.cpp:398]     Test net output #0: accuracy = 0.0815
I0428 20:26:30.752826  2800 solver.cpp:398]     Test net output #1: loss = 2.30799 (* 1 = 2.30799 loss)
I0428 20:26:30.757391  2800 solver.cpp:219] Iteration 0 (0 iter/s, 0.103203s/100 iters), loss = 2.30701
I0428 20:26:30.757429  2800 solver.cpp:238]     Train net output #0: loss = 2.30701 (* 1 = 2.30701 loss)
I0428 20:26:30.757441  2800 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:30.957339  2800 solver.cpp:219] Iteration 100 (500.273 iter/s, 0.199891s/100 iters), loss = 0.878196
I0428 20:26:30.957363  2800 solver.cpp:238]     Train net output #0: loss = 0.878196 (* 1 = 0.878196 loss)
I0428 20:26:30.957370  2800 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:31.158396  2800 solver.cpp:219] Iteration 200 (497.472 iter/s, 0.201016s/100 iters), loss = 0.638965
I0428 20:26:31.158428  2800 solver.cpp:238]     Train net output #0: loss = 0.638965 (* 1 = 0.638965 loss)
I0428 20:26:31.158437  2800 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:31.357794  2800 solver.cpp:219] Iteration 300 (501.627 iter/s, 0.199351s/100 iters), loss = 0.6707
I0428 20:26:31.357820  2800 solver.cpp:238]     Train net output #0: loss = 0.6707 (* 1 = 0.6707 loss)
I0428 20:26:31.357827  2800 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:31.557549  2800 solver.cpp:219] Iteration 400 (500.755 iter/s, 0.199698s/100 iters), loss = 1.03048
I0428 20:26:31.557574  2800 solver.cpp:238]     Train net output #0: loss = 1.03048 (* 1 = 1.03048 loss)
I0428 20:26:31.557580  2800 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:31.755203  2800 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:31.847705  2829 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:31.850208  2800 solver.cpp:398]     Test net output #0: accuracy = 0.8433
I0428 20:26:31.850242  2800 solver.cpp:398]     Test net output #1: loss = 0.635642 (* 1 = 0.635642 loss)
I0428 20:26:31.852095  2800 solver.cpp:219] Iteration 500 (339.557 iter/s, 0.294501s/100 iters), loss = 0.666969
I0428 20:26:31.852133  2800 solver.cpp:238]     Train net output #0: loss = 0.666969 (* 1 = 0.666969 loss)
I0428 20:26:31.852154  2800 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:32.063855  2800 solver.cpp:219] Iteration 600 (472.317 iter/s, 0.211722s/100 iters), loss = 0.453584
I0428 20:26:32.063895  2800 solver.cpp:238]     Train net output #0: loss = 0.453584 (* 1 = 0.453584 loss)
I0428 20:26:32.063901  2800 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:32.266453  2800 solver.cpp:219] Iteration 700 (493.732 iter/s, 0.202539s/100 iters), loss = 0.56631
I0428 20:26:32.266497  2800 solver.cpp:238]     Train net output #0: loss = 0.56631 (* 1 = 0.56631 loss)
I0428 20:26:32.266508  2800 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:32.471904  2800 solver.cpp:219] Iteration 800 (486.867 iter/s, 0.205395s/100 iters), loss = 0.56739
I0428 20:26:32.471931  2800 solver.cpp:238]     Train net output #0: loss = 0.56739 (* 1 = 0.56739 loss)
I0428 20:26:32.471937  2800 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:32.672885  2800 solver.cpp:219] Iteration 900 (497.7 iter/s, 0.200924s/100 iters), loss = 0.448252
I0428 20:26:32.672930  2800 solver.cpp:238]     Train net output #0: loss = 0.448252 (* 1 = 0.448252 loss)
I0428 20:26:32.672942  2800 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:32.745262  2807 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:32.880702  2800 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:32.882761  2800 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:32.883986  2800 solver.cpp:311] Iteration 1000, loss = 0.512332
I0428 20:26:32.884016  2800 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:32.899046  2800 blocking_queue.cpp:49] Waiting for data
I0428 20:26:32.984340  2829 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:32.986029  2800 solver.cpp:398]     Test net output #0: accuracy = 0.8647
I0428 20:26:32.986053  2800 solver.cpp:398]     Test net output #1: loss = 0.570103 (* 1 = 0.570103 loss)
I0428 20:26:32.986059  2800 solver.cpp:316] Optimization Done.
I0428 20:26:32.986063  2800 caffe.cpp:259] Optimization Done.
