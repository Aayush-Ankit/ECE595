I0428 19:35:24.035490 23502 caffe.cpp:218] Using GPUs 0
I0428 19:35:24.077642 23502 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:24.601843 23502 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test224.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:24.602018 23502 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test224.prototxt
I0428 19:35:24.602393 23502 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:24.602416 23502 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:24.602519 23502 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:24.602627 23502 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:24.602761 23502 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:24.602794 23502 net.cpp:86] Creating Layer mnist
I0428 19:35:24.602808 23502 net.cpp:382] mnist -> data
I0428 19:35:24.602839 23502 net.cpp:382] mnist -> label
I0428 19:35:24.604077 23502 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:24.606560 23502 net.cpp:124] Setting up mnist
I0428 19:35:24.606581 23502 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:24.606591 23502 net.cpp:131] Top shape: 64 (64)
I0428 19:35:24.606597 23502 net.cpp:139] Memory required for data: 200960
I0428 19:35:24.606608 23502 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:24.606633 23502 net.cpp:86] Creating Layer conv0
I0428 19:35:24.606644 23502 net.cpp:408] conv0 <- data
I0428 19:35:24.606665 23502 net.cpp:382] conv0 -> conv0
I0428 19:35:24.871932 23502 net.cpp:124] Setting up conv0
I0428 19:35:24.871959 23502 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:24.871964 23502 net.cpp:139] Memory required for data: 7573760
I0428 19:35:24.871984 23502 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:24.872000 23502 net.cpp:86] Creating Layer pool0
I0428 19:35:24.872026 23502 net.cpp:408] pool0 <- conv0
I0428 19:35:24.872035 23502 net.cpp:382] pool0 -> pool0
I0428 19:35:24.872089 23502 net.cpp:124] Setting up pool0
I0428 19:35:24.872097 23502 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:24.872102 23502 net.cpp:139] Memory required for data: 9416960
I0428 19:35:24.872107 23502 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:24.872117 23502 net.cpp:86] Creating Layer ip1
I0428 19:35:24.872123 23502 net.cpp:408] ip1 <- pool0
I0428 19:35:24.872130 23502 net.cpp:382] ip1 -> ip1
I0428 19:35:24.874150 23502 net.cpp:124] Setting up ip1
I0428 19:35:24.874166 23502 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:24.874171 23502 net.cpp:139] Memory required for data: 9423360
I0428 19:35:24.874181 23502 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:24.874192 23502 net.cpp:86] Creating Layer relu1
I0428 19:35:24.874197 23502 net.cpp:408] relu1 <- ip1
I0428 19:35:24.874204 23502 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:24.874395 23502 net.cpp:124] Setting up relu1
I0428 19:35:24.874404 23502 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:24.874409 23502 net.cpp:139] Memory required for data: 9429760
I0428 19:35:24.874414 23502 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:24.874423 23502 net.cpp:86] Creating Layer ip2
I0428 19:35:24.874428 23502 net.cpp:408] ip2 <- ip1
I0428 19:35:24.874436 23502 net.cpp:382] ip2 -> ip2
I0428 19:35:24.874557 23502 net.cpp:124] Setting up ip2
I0428 19:35:24.874565 23502 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:24.874570 23502 net.cpp:139] Memory required for data: 9442560
I0428 19:35:24.874581 23502 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:24.874589 23502 net.cpp:86] Creating Layer relu2
I0428 19:35:24.874599 23502 net.cpp:408] relu2 <- ip2
I0428 19:35:24.874606 23502 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:24.875370 23502 net.cpp:124] Setting up relu2
I0428 19:35:24.875385 23502 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:24.875391 23502 net.cpp:139] Memory required for data: 9455360
I0428 19:35:24.875396 23502 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:24.875406 23502 net.cpp:86] Creating Layer ip3
I0428 19:35:24.875411 23502 net.cpp:408] ip3 <- ip2
I0428 19:35:24.875421 23502 net.cpp:382] ip3 -> ip3
I0428 19:35:24.875521 23502 net.cpp:124] Setting up ip3
I0428 19:35:24.875531 23502 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:24.875536 23502 net.cpp:139] Memory required for data: 9457920
I0428 19:35:24.875545 23502 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:24.875555 23502 net.cpp:86] Creating Layer relu3
I0428 19:35:24.875560 23502 net.cpp:408] relu3 <- ip3
I0428 19:35:24.875581 23502 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:24.875747 23502 net.cpp:124] Setting up relu3
I0428 19:35:24.875757 23502 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:24.875762 23502 net.cpp:139] Memory required for data: 9460480
I0428 19:35:24.875767 23502 layer_factory.hpp:77] Creating layer loss
I0428 19:35:24.875790 23502 net.cpp:86] Creating Layer loss
I0428 19:35:24.875797 23502 net.cpp:408] loss <- ip3
I0428 19:35:24.875802 23502 net.cpp:408] loss <- label
I0428 19:35:24.875810 23502 net.cpp:382] loss -> loss
I0428 19:35:24.875834 23502 layer_factory.hpp:77] Creating layer loss
I0428 19:35:24.876085 23502 net.cpp:124] Setting up loss
I0428 19:35:24.876094 23502 net.cpp:131] Top shape: (1)
I0428 19:35:24.876099 23502 net.cpp:134]     with loss weight 1
I0428 19:35:24.876118 23502 net.cpp:139] Memory required for data: 9460484
I0428 19:35:24.876123 23502 net.cpp:200] loss needs backward computation.
I0428 19:35:24.876129 23502 net.cpp:200] relu3 needs backward computation.
I0428 19:35:24.876134 23502 net.cpp:200] ip3 needs backward computation.
I0428 19:35:24.876139 23502 net.cpp:200] relu2 needs backward computation.
I0428 19:35:24.876144 23502 net.cpp:200] ip2 needs backward computation.
I0428 19:35:24.876149 23502 net.cpp:200] relu1 needs backward computation.
I0428 19:35:24.876153 23502 net.cpp:200] ip1 needs backward computation.
I0428 19:35:24.876169 23502 net.cpp:200] pool0 needs backward computation.
I0428 19:35:24.876174 23502 net.cpp:200] conv0 needs backward computation.
I0428 19:35:24.876180 23502 net.cpp:202] mnist does not need backward computation.
I0428 19:35:24.876185 23502 net.cpp:244] This network produces output loss
I0428 19:35:24.876196 23502 net.cpp:257] Network initialization done.
I0428 19:35:24.876487 23502 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test224.prototxt
I0428 19:35:24.876516 23502 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:24.876632 23502 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:24.876771 23502 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:24.876854 23502 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:24.876873 23502 net.cpp:86] Creating Layer mnist
I0428 19:35:24.876881 23502 net.cpp:382] mnist -> data
I0428 19:35:24.876909 23502 net.cpp:382] mnist -> label
I0428 19:35:24.877041 23502 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:24.878497 23502 net.cpp:124] Setting up mnist
I0428 19:35:24.878527 23502 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:24.878536 23502 net.cpp:131] Top shape: 100 (100)
I0428 19:35:24.878540 23502 net.cpp:139] Memory required for data: 314000
I0428 19:35:24.878546 23502 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:24.878556 23502 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:24.878561 23502 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:24.878569 23502 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:24.878579 23502 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:24.878682 23502 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:24.878690 23502 net.cpp:131] Top shape: 100 (100)
I0428 19:35:24.878696 23502 net.cpp:131] Top shape: 100 (100)
I0428 19:35:24.878701 23502 net.cpp:139] Memory required for data: 314800
I0428 19:35:24.878717 23502 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:24.878731 23502 net.cpp:86] Creating Layer conv0
I0428 19:35:24.878737 23502 net.cpp:408] conv0 <- data
I0428 19:35:24.878746 23502 net.cpp:382] conv0 -> conv0
I0428 19:35:24.880388 23502 net.cpp:124] Setting up conv0
I0428 19:35:24.880403 23502 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:24.880419 23502 net.cpp:139] Memory required for data: 11834800
I0428 19:35:24.880431 23502 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:24.880442 23502 net.cpp:86] Creating Layer pool0
I0428 19:35:24.880448 23502 net.cpp:408] pool0 <- conv0
I0428 19:35:24.880456 23502 net.cpp:382] pool0 -> pool0
I0428 19:35:24.880497 23502 net.cpp:124] Setting up pool0
I0428 19:35:24.880506 23502 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:24.880511 23502 net.cpp:139] Memory required for data: 14714800
I0428 19:35:24.880514 23502 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:24.880528 23502 net.cpp:86] Creating Layer ip1
I0428 19:35:24.880534 23502 net.cpp:408] ip1 <- pool0
I0428 19:35:24.880542 23502 net.cpp:382] ip1 -> ip1
I0428 19:35:24.882721 23502 net.cpp:124] Setting up ip1
I0428 19:35:24.882737 23502 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:24.882742 23502 net.cpp:139] Memory required for data: 14724800
I0428 19:35:24.882756 23502 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:24.882778 23502 net.cpp:86] Creating Layer relu1
I0428 19:35:24.882792 23502 net.cpp:408] relu1 <- ip1
I0428 19:35:24.882800 23502 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:24.883002 23502 net.cpp:124] Setting up relu1
I0428 19:35:24.883016 23502 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:24.883023 23502 net.cpp:139] Memory required for data: 14734800
I0428 19:35:24.883028 23502 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:24.883038 23502 net.cpp:86] Creating Layer ip2
I0428 19:35:24.883044 23502 net.cpp:408] ip2 <- ip1
I0428 19:35:24.883054 23502 net.cpp:382] ip2 -> ip2
I0428 19:35:24.883203 23502 net.cpp:124] Setting up ip2
I0428 19:35:24.883211 23502 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:24.883216 23502 net.cpp:139] Memory required for data: 14754800
I0428 19:35:24.883229 23502 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:24.883242 23502 net.cpp:86] Creating Layer relu2
I0428 19:35:24.883249 23502 net.cpp:408] relu2 <- ip2
I0428 19:35:24.883270 23502 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:24.884114 23502 net.cpp:124] Setting up relu2
I0428 19:35:24.884127 23502 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:24.884132 23502 net.cpp:139] Memory required for data: 14774800
I0428 19:35:24.884138 23502 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:24.884150 23502 net.cpp:86] Creating Layer ip3
I0428 19:35:24.884155 23502 net.cpp:408] ip3 <- ip2
I0428 19:35:24.884166 23502 net.cpp:382] ip3 -> ip3
I0428 19:35:24.884330 23502 net.cpp:124] Setting up ip3
I0428 19:35:24.884366 23502 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:24.884372 23502 net.cpp:139] Memory required for data: 14778800
I0428 19:35:24.884397 23502 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:24.884404 23502 net.cpp:86] Creating Layer relu3
I0428 19:35:24.884409 23502 net.cpp:408] relu3 <- ip3
I0428 19:35:24.884418 23502 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:24.884587 23502 net.cpp:124] Setting up relu3
I0428 19:35:24.884598 23502 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:24.884606 23502 net.cpp:139] Memory required for data: 14782800
I0428 19:35:24.884613 23502 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:24.884630 23502 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:24.884636 23502 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:24.884644 23502 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:24.884663 23502 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:24.884721 23502 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:24.884728 23502 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:24.884747 23502 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:24.884754 23502 net.cpp:139] Memory required for data: 14790800
I0428 19:35:24.884759 23502 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:24.884773 23502 net.cpp:86] Creating Layer accuracy
I0428 19:35:24.884785 23502 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:24.884793 23502 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:24.884801 23502 net.cpp:382] accuracy -> accuracy
I0428 19:35:24.884865 23502 net.cpp:124] Setting up accuracy
I0428 19:35:24.884876 23502 net.cpp:131] Top shape: (1)
I0428 19:35:24.884882 23502 net.cpp:139] Memory required for data: 14790804
I0428 19:35:24.884887 23502 layer_factory.hpp:77] Creating layer loss
I0428 19:35:24.884913 23502 net.cpp:86] Creating Layer loss
I0428 19:35:24.884920 23502 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:24.884928 23502 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:24.884935 23502 net.cpp:382] loss -> loss
I0428 19:35:24.884946 23502 layer_factory.hpp:77] Creating layer loss
I0428 19:35:24.885258 23502 net.cpp:124] Setting up loss
I0428 19:35:24.885269 23502 net.cpp:131] Top shape: (1)
I0428 19:35:24.885274 23502 net.cpp:134]     with loss weight 1
I0428 19:35:24.885283 23502 net.cpp:139] Memory required for data: 14790808
I0428 19:35:24.885289 23502 net.cpp:200] loss needs backward computation.
I0428 19:35:24.885295 23502 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:24.885301 23502 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:24.885306 23502 net.cpp:200] relu3 needs backward computation.
I0428 19:35:24.885310 23502 net.cpp:200] ip3 needs backward computation.
I0428 19:35:24.885318 23502 net.cpp:200] relu2 needs backward computation.
I0428 19:35:24.885325 23502 net.cpp:200] ip2 needs backward computation.
I0428 19:35:24.885330 23502 net.cpp:200] relu1 needs backward computation.
I0428 19:35:24.885335 23502 net.cpp:200] ip1 needs backward computation.
I0428 19:35:24.885339 23502 net.cpp:200] pool0 needs backward computation.
I0428 19:35:24.885344 23502 net.cpp:200] conv0 needs backward computation.
I0428 19:35:24.885350 23502 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:24.885356 23502 net.cpp:202] mnist does not need backward computation.
I0428 19:35:24.885360 23502 net.cpp:244] This network produces output accuracy
I0428 19:35:24.885366 23502 net.cpp:244] This network produces output loss
I0428 19:35:24.885381 23502 net.cpp:257] Network initialization done.
I0428 19:35:24.885422 23502 solver.cpp:56] Solver scaffolding done.
I0428 19:35:24.885732 23502 caffe.cpp:248] Starting Optimization
I0428 19:35:24.885740 23502 solver.cpp:273] Solving LeNet
I0428 19:35:24.885746 23502 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:24.887218 23502 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:24.985991 23509 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:24.988670 23502 solver.cpp:398]     Test net output #0: accuracy = 0.0841
I0428 19:35:24.988690 23502 solver.cpp:398]     Test net output #1: loss = 2.31856 (* 1 = 2.31856 loss)
I0428 19:35:24.993158 23502 solver.cpp:219] Iteration 0 (0 iter/s, 0.107379s/100 iters), loss = 2.32613
I0428 19:35:24.993188 23502 solver.cpp:238]     Train net output #0: loss = 2.32613 (* 1 = 2.32613 loss)
I0428 19:35:24.993204 23502 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:25.139591 23502 solver.cpp:219] Iteration 100 (683.098 iter/s, 0.146392s/100 iters), loss = 0.687363
I0428 19:35:25.139621 23502 solver.cpp:238]     Train net output #0: loss = 0.687363 (* 1 = 0.687363 loss)
I0428 19:35:25.139631 23502 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:25.280369 23502 solver.cpp:219] Iteration 200 (710.542 iter/s, 0.140738s/100 iters), loss = 0.661513
I0428 19:35:25.280396 23502 solver.cpp:238]     Train net output #0: loss = 0.661513 (* 1 = 0.661513 loss)
I0428 19:35:25.280405 23502 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:25.424559 23502 solver.cpp:219] Iteration 300 (693.705 iter/s, 0.144154s/100 iters), loss = 0.681843
I0428 19:35:25.424600 23502 solver.cpp:238]     Train net output #0: loss = 0.681843 (* 1 = 0.681843 loss)
I0428 19:35:25.424612 23502 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:25.567904 23502 solver.cpp:219] Iteration 400 (697.859 iter/s, 0.143295s/100 iters), loss = 0.739798
I0428 19:35:25.567934 23502 solver.cpp:238]     Train net output #0: loss = 0.739798 (* 1 = 0.739798 loss)
I0428 19:35:25.567942 23502 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:25.710461 23502 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:25.808130 23509 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:25.810418 23502 solver.cpp:398]     Test net output #0: accuracy = 0.7631
I0428 19:35:25.810442 23502 solver.cpp:398]     Test net output #1: loss = 0.616281 (* 1 = 0.616281 loss)
I0428 19:35:25.811791 23502 solver.cpp:219] Iteration 500 (410.1 iter/s, 0.243843s/100 iters), loss = 0.738206
I0428 19:35:25.811818 23502 solver.cpp:238]     Train net output #0: loss = 0.738206 (* 1 = 0.738206 loss)
I0428 19:35:25.811830 23502 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:25.957747 23502 solver.cpp:219] Iteration 600 (685.312 iter/s, 0.145919s/100 iters), loss = 0.352824
I0428 19:35:25.957777 23502 solver.cpp:238]     Train net output #0: loss = 0.352824 (* 1 = 0.352824 loss)
I0428 19:35:25.957787 23502 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:26.100134 23502 solver.cpp:219] Iteration 700 (702.507 iter/s, 0.142347s/100 iters), loss = 0.781872
I0428 19:35:26.100162 23502 solver.cpp:238]     Train net output #0: loss = 0.781872 (* 1 = 0.781872 loss)
I0428 19:35:26.100172 23502 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:26.242820 23502 solver.cpp:219] Iteration 800 (701.035 iter/s, 0.142646s/100 iters), loss = 0.571675
I0428 19:35:26.242847 23502 solver.cpp:238]     Train net output #0: loss = 0.571675 (* 1 = 0.571675 loss)
I0428 19:35:26.242856 23502 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:26.382473 23502 solver.cpp:219] Iteration 900 (716.249 iter/s, 0.139616s/100 iters), loss = 0.498454
I0428 19:35:26.382500 23502 solver.cpp:238]     Train net output #0: loss = 0.498454 (* 1 = 0.498454 loss)
I0428 19:35:26.382510 23502 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:26.430001 23508 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:26.523900 23502 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:26.527992 23502 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:26.530174 23502 solver.cpp:311] Iteration 1000, loss = 0.521213
I0428 19:35:26.530205 23502 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:26.627082 23509 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:26.629715 23502 solver.cpp:398]     Test net output #0: accuracy = 0.7772
I0428 19:35:26.629737 23502 solver.cpp:398]     Test net output #1: loss = 0.567759 (* 1 = 0.567759 loss)
I0428 19:35:26.629745 23502 solver.cpp:316] Optimization Done.
I0428 19:35:26.629750 23502 caffe.cpp:259] Optimization Done.
