I0428 20:03:45.519757 30263 caffe.cpp:218] Using GPUs 0
I0428 20:03:45.557760 30263 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:46.013438 30263 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test958.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:46.013592 30263 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test958.prototxt
I0428 20:03:46.013958 30263 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:46.013989 30263 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:46.014070 30263 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:46.014133 30263 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:46.014214 30263 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:46.014235 30263 net.cpp:86] Creating Layer mnist
I0428 20:03:46.014241 30263 net.cpp:382] mnist -> data
I0428 20:03:46.014261 30263 net.cpp:382] mnist -> label
I0428 20:03:46.015195 30263 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:46.017385 30263 net.cpp:124] Setting up mnist
I0428 20:03:46.017400 30263 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:46.017405 30263 net.cpp:131] Top shape: 64 (64)
I0428 20:03:46.017408 30263 net.cpp:139] Memory required for data: 200960
I0428 20:03:46.017413 30263 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:46.017426 30263 net.cpp:86] Creating Layer conv0
I0428 20:03:46.017443 30263 net.cpp:408] conv0 <- data
I0428 20:03:46.017454 30263 net.cpp:382] conv0 -> conv0
I0428 20:03:46.247210 30263 net.cpp:124] Setting up conv0
I0428 20:03:46.247236 30263 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:46.247239 30263 net.cpp:139] Memory required for data: 1675520
I0428 20:03:46.247268 30263 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:46.247282 30263 net.cpp:86] Creating Layer pool0
I0428 20:03:46.247287 30263 net.cpp:408] pool0 <- conv0
I0428 20:03:46.247292 30263 net.cpp:382] pool0 -> pool0
I0428 20:03:46.247354 30263 net.cpp:124] Setting up pool0
I0428 20:03:46.247360 30263 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:46.247364 30263 net.cpp:139] Memory required for data: 2044160
I0428 20:03:46.247366 30263 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:46.247377 30263 net.cpp:86] Creating Layer conv1
I0428 20:03:46.247380 30263 net.cpp:408] conv1 <- pool0
I0428 20:03:46.247385 30263 net.cpp:382] conv1 -> conv1
I0428 20:03:46.249438 30263 net.cpp:124] Setting up conv1
I0428 20:03:46.249466 30263 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:46.249485 30263 net.cpp:139] Memory required for data: 3682560
I0428 20:03:46.249495 30263 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:46.249501 30263 net.cpp:86] Creating Layer pool1
I0428 20:03:46.249505 30263 net.cpp:408] pool1 <- conv1
I0428 20:03:46.249527 30263 net.cpp:382] pool1 -> pool1
I0428 20:03:46.249567 30263 net.cpp:124] Setting up pool1
I0428 20:03:46.249573 30263 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:46.249577 30263 net.cpp:139] Memory required for data: 4092160
I0428 20:03:46.249579 30263 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:46.249588 30263 net.cpp:86] Creating Layer ip1
I0428 20:03:46.249593 30263 net.cpp:408] ip1 <- pool1
I0428 20:03:46.249596 30263 net.cpp:382] ip1 -> ip1
I0428 20:03:46.249966 30263 net.cpp:124] Setting up ip1
I0428 20:03:46.249974 30263 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:46.249992 30263 net.cpp:139] Memory required for data: 4098560
I0428 20:03:46.250000 30263 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:46.250007 30263 net.cpp:86] Creating Layer relu1
I0428 20:03:46.250010 30263 net.cpp:408] relu1 <- ip1
I0428 20:03:46.250013 30263 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:46.250185 30263 net.cpp:124] Setting up relu1
I0428 20:03:46.250193 30263 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:46.250196 30263 net.cpp:139] Memory required for data: 4104960
I0428 20:03:46.250200 30263 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:46.250206 30263 net.cpp:86] Creating Layer ip2
I0428 20:03:46.250210 30263 net.cpp:408] ip2 <- ip1
I0428 20:03:46.250216 30263 net.cpp:382] ip2 -> ip2
I0428 20:03:46.250305 30263 net.cpp:124] Setting up ip2
I0428 20:03:46.250313 30263 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:46.250316 30263 net.cpp:139] Memory required for data: 4107520
I0428 20:03:46.250322 30263 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:46.250327 30263 net.cpp:86] Creating Layer relu2
I0428 20:03:46.250330 30263 net.cpp:408] relu2 <- ip2
I0428 20:03:46.250334 30263 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:46.251080 30263 net.cpp:124] Setting up relu2
I0428 20:03:46.251091 30263 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:46.251111 30263 net.cpp:139] Memory required for data: 4110080
I0428 20:03:46.251113 30263 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:46.251121 30263 net.cpp:86] Creating Layer ip3
I0428 20:03:46.251124 30263 net.cpp:408] ip3 <- ip2
I0428 20:03:46.251130 30263 net.cpp:382] ip3 -> ip3
I0428 20:03:46.251262 30263 net.cpp:124] Setting up ip3
I0428 20:03:46.251271 30263 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:46.251273 30263 net.cpp:139] Memory required for data: 4112640
I0428 20:03:46.251281 30263 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:46.251287 30263 net.cpp:86] Creating Layer relu3
I0428 20:03:46.251291 30263 net.cpp:408] relu3 <- ip3
I0428 20:03:46.251296 30263 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:46.251485 30263 net.cpp:124] Setting up relu3
I0428 20:03:46.251494 30263 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:46.251497 30263 net.cpp:139] Memory required for data: 4115200
I0428 20:03:46.251502 30263 layer_factory.hpp:77] Creating layer loss
I0428 20:03:46.251507 30263 net.cpp:86] Creating Layer loss
I0428 20:03:46.251510 30263 net.cpp:408] loss <- ip3
I0428 20:03:46.251514 30263 net.cpp:408] loss <- label
I0428 20:03:46.251519 30263 net.cpp:382] loss -> loss
I0428 20:03:46.251533 30263 layer_factory.hpp:77] Creating layer loss
I0428 20:03:46.251785 30263 net.cpp:124] Setting up loss
I0428 20:03:46.251793 30263 net.cpp:131] Top shape: (1)
I0428 20:03:46.251796 30263 net.cpp:134]     with loss weight 1
I0428 20:03:46.251811 30263 net.cpp:139] Memory required for data: 4115204
I0428 20:03:46.251816 30263 net.cpp:200] loss needs backward computation.
I0428 20:03:46.251818 30263 net.cpp:200] relu3 needs backward computation.
I0428 20:03:46.251821 30263 net.cpp:200] ip3 needs backward computation.
I0428 20:03:46.251824 30263 net.cpp:200] relu2 needs backward computation.
I0428 20:03:46.251827 30263 net.cpp:200] ip2 needs backward computation.
I0428 20:03:46.251830 30263 net.cpp:200] relu1 needs backward computation.
I0428 20:03:46.251833 30263 net.cpp:200] ip1 needs backward computation.
I0428 20:03:46.251837 30263 net.cpp:200] pool1 needs backward computation.
I0428 20:03:46.251839 30263 net.cpp:200] conv1 needs backward computation.
I0428 20:03:46.251842 30263 net.cpp:200] pool0 needs backward computation.
I0428 20:03:46.251844 30263 net.cpp:200] conv0 needs backward computation.
I0428 20:03:46.251848 30263 net.cpp:202] mnist does not need backward computation.
I0428 20:03:46.251850 30263 net.cpp:244] This network produces output loss
I0428 20:03:46.251859 30263 net.cpp:257] Network initialization done.
I0428 20:03:46.252228 30263 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test958.prototxt
I0428 20:03:46.252269 30263 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:46.252367 30263 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:46.252462 30263 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:46.252507 30263 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:46.252521 30263 net.cpp:86] Creating Layer mnist
I0428 20:03:46.252526 30263 net.cpp:382] mnist -> data
I0428 20:03:46.252534 30263 net.cpp:382] mnist -> label
I0428 20:03:46.252620 30263 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:46.254546 30263 net.cpp:124] Setting up mnist
I0428 20:03:46.254575 30263 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:46.254580 30263 net.cpp:131] Top shape: 100 (100)
I0428 20:03:46.254583 30263 net.cpp:139] Memory required for data: 314000
I0428 20:03:46.254587 30263 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:46.254593 30263 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:46.254596 30263 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:46.254601 30263 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:46.254606 30263 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:46.254640 30263 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:46.254645 30263 net.cpp:131] Top shape: 100 (100)
I0428 20:03:46.254648 30263 net.cpp:131] Top shape: 100 (100)
I0428 20:03:46.254652 30263 net.cpp:139] Memory required for data: 314800
I0428 20:03:46.254654 30263 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:46.254662 30263 net.cpp:86] Creating Layer conv0
I0428 20:03:46.254663 30263 net.cpp:408] conv0 <- data
I0428 20:03:46.254668 30263 net.cpp:382] conv0 -> conv0
I0428 20:03:46.256434 30263 net.cpp:124] Setting up conv0
I0428 20:03:46.256448 30263 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:46.256450 30263 net.cpp:139] Memory required for data: 2618800
I0428 20:03:46.256458 30263 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:46.256464 30263 net.cpp:86] Creating Layer pool0
I0428 20:03:46.256484 30263 net.cpp:408] pool0 <- conv0
I0428 20:03:46.256489 30263 net.cpp:382] pool0 -> pool0
I0428 20:03:46.256521 30263 net.cpp:124] Setting up pool0
I0428 20:03:46.256526 30263 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:46.256530 30263 net.cpp:139] Memory required for data: 3194800
I0428 20:03:46.256532 30263 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:46.256541 30263 net.cpp:86] Creating Layer conv1
I0428 20:03:46.256543 30263 net.cpp:408] conv1 <- pool0
I0428 20:03:46.256548 30263 net.cpp:382] conv1 -> conv1
I0428 20:03:46.258316 30263 net.cpp:124] Setting up conv1
I0428 20:03:46.258328 30263 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:46.258338 30263 net.cpp:139] Memory required for data: 5754800
I0428 20:03:46.258347 30263 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:46.258353 30263 net.cpp:86] Creating Layer pool1
I0428 20:03:46.258358 30263 net.cpp:408] pool1 <- conv1
I0428 20:03:46.258363 30263 net.cpp:382] pool1 -> pool1
I0428 20:03:46.258396 30263 net.cpp:124] Setting up pool1
I0428 20:03:46.258417 30263 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:46.258420 30263 net.cpp:139] Memory required for data: 6394800
I0428 20:03:46.258424 30263 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:46.258429 30263 net.cpp:86] Creating Layer ip1
I0428 20:03:46.258431 30263 net.cpp:408] ip1 <- pool1
I0428 20:03:46.258436 30263 net.cpp:382] ip1 -> ip1
I0428 20:03:46.258780 30263 net.cpp:124] Setting up ip1
I0428 20:03:46.258788 30263 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:46.258801 30263 net.cpp:139] Memory required for data: 6404800
I0428 20:03:46.258810 30263 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:46.258813 30263 net.cpp:86] Creating Layer relu1
I0428 20:03:46.258817 30263 net.cpp:408] relu1 <- ip1
I0428 20:03:46.258821 30263 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:46.258993 30263 net.cpp:124] Setting up relu1
I0428 20:03:46.259002 30263 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:46.259006 30263 net.cpp:139] Memory required for data: 6414800
I0428 20:03:46.259009 30263 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:46.259016 30263 net.cpp:86] Creating Layer ip2
I0428 20:03:46.259019 30263 net.cpp:408] ip2 <- ip1
I0428 20:03:46.259032 30263 net.cpp:382] ip2 -> ip2
I0428 20:03:46.259130 30263 net.cpp:124] Setting up ip2
I0428 20:03:46.259138 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.259141 30263 net.cpp:139] Memory required for data: 6418800
I0428 20:03:46.259162 30263 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:46.259167 30263 net.cpp:86] Creating Layer relu2
I0428 20:03:46.259171 30263 net.cpp:408] relu2 <- ip2
I0428 20:03:46.259176 30263 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:46.259400 30263 net.cpp:124] Setting up relu2
I0428 20:03:46.259409 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.259413 30263 net.cpp:139] Memory required for data: 6422800
I0428 20:03:46.259415 30263 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:46.259421 30263 net.cpp:86] Creating Layer ip3
I0428 20:03:46.259424 30263 net.cpp:408] ip3 <- ip2
I0428 20:03:46.259436 30263 net.cpp:382] ip3 -> ip3
I0428 20:03:46.259560 30263 net.cpp:124] Setting up ip3
I0428 20:03:46.259567 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.259570 30263 net.cpp:139] Memory required for data: 6426800
I0428 20:03:46.259578 30263 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:46.259598 30263 net.cpp:86] Creating Layer relu3
I0428 20:03:46.259600 30263 net.cpp:408] relu3 <- ip3
I0428 20:03:46.259604 30263 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:46.260383 30263 net.cpp:124] Setting up relu3
I0428 20:03:46.260396 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.260399 30263 net.cpp:139] Memory required for data: 6430800
I0428 20:03:46.260402 30263 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:46.260407 30263 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:46.260411 30263 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:46.260416 30263 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:46.260422 30263 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:46.260457 30263 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:46.260462 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.260466 30263 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:46.260469 30263 net.cpp:139] Memory required for data: 6438800
I0428 20:03:46.260473 30263 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:46.260478 30263 net.cpp:86] Creating Layer accuracy
I0428 20:03:46.260480 30263 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:46.260484 30263 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:46.260489 30263 net.cpp:382] accuracy -> accuracy
I0428 20:03:46.260495 30263 net.cpp:124] Setting up accuracy
I0428 20:03:46.260499 30263 net.cpp:131] Top shape: (1)
I0428 20:03:46.260502 30263 net.cpp:139] Memory required for data: 6438804
I0428 20:03:46.260512 30263 layer_factory.hpp:77] Creating layer loss
I0428 20:03:46.260516 30263 net.cpp:86] Creating Layer loss
I0428 20:03:46.260525 30263 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:46.260529 30263 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:46.260534 30263 net.cpp:382] loss -> loss
I0428 20:03:46.260540 30263 layer_factory.hpp:77] Creating layer loss
I0428 20:03:46.260804 30263 net.cpp:124] Setting up loss
I0428 20:03:46.260835 30263 net.cpp:131] Top shape: (1)
I0428 20:03:46.260839 30263 net.cpp:134]     with loss weight 1
I0428 20:03:46.260857 30263 net.cpp:139] Memory required for data: 6438808
I0428 20:03:46.260869 30263 net.cpp:200] loss needs backward computation.
I0428 20:03:46.260874 30263 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:46.260877 30263 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:46.260887 30263 net.cpp:200] relu3 needs backward computation.
I0428 20:03:46.260890 30263 net.cpp:200] ip3 needs backward computation.
I0428 20:03:46.260893 30263 net.cpp:200] relu2 needs backward computation.
I0428 20:03:46.260896 30263 net.cpp:200] ip2 needs backward computation.
I0428 20:03:46.260900 30263 net.cpp:200] relu1 needs backward computation.
I0428 20:03:46.260903 30263 net.cpp:200] ip1 needs backward computation.
I0428 20:03:46.260906 30263 net.cpp:200] pool1 needs backward computation.
I0428 20:03:46.260915 30263 net.cpp:200] conv1 needs backward computation.
I0428 20:03:46.260918 30263 net.cpp:200] pool0 needs backward computation.
I0428 20:03:46.260921 30263 net.cpp:200] conv0 needs backward computation.
I0428 20:03:46.260926 30263 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:46.260931 30263 net.cpp:202] mnist does not need backward computation.
I0428 20:03:46.260933 30263 net.cpp:244] This network produces output accuracy
I0428 20:03:46.260952 30263 net.cpp:244] This network produces output loss
I0428 20:03:46.260973 30263 net.cpp:257] Network initialization done.
I0428 20:03:46.261016 30263 solver.cpp:56] Solver scaffolding done.
I0428 20:03:46.261371 30263 caffe.cpp:248] Starting Optimization
I0428 20:03:46.261379 30263 solver.cpp:273] Solving LeNet
I0428 20:03:46.261382 30263 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:46.261628 30263 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:46.267851 30263 blocking_queue.cpp:49] Waiting for data
I0428 20:03:46.337704 30270 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:46.338346 30263 solver.cpp:398]     Test net output #0: accuracy = 0.0937
I0428 20:03:46.338364 30263 solver.cpp:398]     Test net output #1: loss = 2.30549 (* 1 = 2.30549 loss)
I0428 20:03:46.342170 30263 solver.cpp:219] Iteration 0 (0 iter/s, 0.0807648s/100 iters), loss = 2.30686
I0428 20:03:46.342193 30263 solver.cpp:238]     Train net output #0: loss = 2.30686 (* 1 = 2.30686 loss)
I0428 20:03:46.342218 30263 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:46.506186 30263 solver.cpp:219] Iteration 100 (609.841 iter/s, 0.163977s/100 iters), loss = 1.14107
I0428 20:03:46.506220 30263 solver.cpp:238]     Train net output #0: loss = 1.14107 (* 1 = 1.14107 loss)
I0428 20:03:46.506229 30263 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:46.684072 30263 solver.cpp:219] Iteration 200 (562.316 iter/s, 0.177836s/100 iters), loss = 1.20201
I0428 20:03:46.684111 30263 solver.cpp:238]     Train net output #0: loss = 1.20201 (* 1 = 1.20201 loss)
I0428 20:03:46.684123 30263 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:46.862695 30263 solver.cpp:219] Iteration 300 (560.01 iter/s, 0.178568s/100 iters), loss = 0.882473
I0428 20:03:46.862735 30263 solver.cpp:238]     Train net output #0: loss = 0.882473 (* 1 = 0.882473 loss)
I0428 20:03:46.862746 30263 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:47.042047 30263 solver.cpp:219] Iteration 400 (557.73 iter/s, 0.179298s/100 iters), loss = 0.832077
I0428 20:03:47.042088 30263 solver.cpp:238]     Train net output #0: loss = 0.832077 (* 1 = 0.832077 loss)
I0428 20:03:47.042098 30263 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:47.219796 30263 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:47.281105 30270 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:47.283044 30263 solver.cpp:398]     Test net output #0: accuracy = 0.7636
I0428 20:03:47.283071 30263 solver.cpp:398]     Test net output #1: loss = 0.639354 (* 1 = 0.639354 loss)
I0428 20:03:47.284608 30263 solver.cpp:219] Iteration 500 (412.361 iter/s, 0.242506s/100 iters), loss = 0.675544
I0428 20:03:47.284654 30263 solver.cpp:238]     Train net output #0: loss = 0.675544 (* 1 = 0.675544 loss)
I0428 20:03:47.284664 30263 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:47.463574 30263 solver.cpp:219] Iteration 600 (558.955 iter/s, 0.178905s/100 iters), loss = 0.471844
I0428 20:03:47.463614 30263 solver.cpp:238]     Train net output #0: loss = 0.471844 (* 1 = 0.471844 loss)
I0428 20:03:47.463624 30263 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:47.646893 30263 solver.cpp:219] Iteration 700 (545.663 iter/s, 0.183263s/100 iters), loss = 0.635913
I0428 20:03:47.646935 30263 solver.cpp:238]     Train net output #0: loss = 0.635913 (* 1 = 0.635913 loss)
I0428 20:03:47.646945 30263 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:47.829797 30263 solver.cpp:219] Iteration 800 (546.907 iter/s, 0.182846s/100 iters), loss = 0.77759
I0428 20:03:47.829843 30263 solver.cpp:238]     Train net output #0: loss = 0.77759 (* 1 = 0.77759 loss)
I0428 20:03:47.829854 30263 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:48.011674 30263 solver.cpp:219] Iteration 900 (550.003 iter/s, 0.181817s/100 iters), loss = 0.488234
I0428 20:03:48.011718 30263 solver.cpp:238]     Train net output #0: loss = 0.488234 (* 1 = 0.488234 loss)
I0428 20:03:48.011729 30263 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:48.073071 30269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:48.195515 30263 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:48.198191 30263 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:48.199645 30263 solver.cpp:311] Iteration 1000, loss = 0.592343
I0428 20:03:48.199669 30263 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:48.276520 30270 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:48.277199 30263 solver.cpp:398]     Test net output #0: accuracy = 0.7885
I0428 20:03:48.277225 30263 solver.cpp:398]     Test net output #1: loss = 0.531706 (* 1 = 0.531706 loss)
I0428 20:03:48.277231 30263 solver.cpp:316] Optimization Done.
I0428 20:03:48.277243 30263 caffe.cpp:259] Optimization Done.
