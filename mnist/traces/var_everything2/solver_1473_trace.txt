I0428 20:26:33.273182  2834 caffe.cpp:218] Using GPUs 0
I0428 20:26:33.310045  2834 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:33.816763  2834 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1473.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:33.816912  2834 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1473.prototxt
I0428 20:26:33.817332  2834 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:33.817351  2834 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:33.817453  2834 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:33.817533  2834 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:33.817634  2834 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:33.817657  2834 net.cpp:86] Creating Layer mnist
I0428 20:26:33.817669  2834 net.cpp:382] mnist -> data
I0428 20:26:33.817692  2834 net.cpp:382] mnist -> label
I0428 20:26:33.818786  2834 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:33.821240  2834 net.cpp:124] Setting up mnist
I0428 20:26:33.821259  2834 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:33.821265  2834 net.cpp:131] Top shape: 64 (64)
I0428 20:26:33.821269  2834 net.cpp:139] Memory required for data: 200960
I0428 20:26:33.821275  2834 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:33.821292  2834 net.cpp:86] Creating Layer conv0
I0428 20:26:33.821312  2834 net.cpp:408] conv0 <- data
I0428 20:26:33.821326  2834 net.cpp:382] conv0 -> conv0
I0428 20:26:34.100888  2834 net.cpp:124] Setting up conv0
I0428 20:26:34.100914  2834 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:34.100917  2834 net.cpp:139] Memory required for data: 14946560
I0428 20:26:34.100932  2834 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:34.100961  2834 net.cpp:86] Creating Layer pool0
I0428 20:26:34.100965  2834 net.cpp:408] pool0 <- conv0
I0428 20:26:34.100970  2834 net.cpp:382] pool0 -> pool0
I0428 20:26:34.101018  2834 net.cpp:124] Setting up pool0
I0428 20:26:34.101027  2834 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:34.101029  2834 net.cpp:139] Memory required for data: 18632960
I0428 20:26:34.101032  2834 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:34.101043  2834 net.cpp:86] Creating Layer conv1
I0428 20:26:34.101047  2834 net.cpp:408] conv1 <- pool0
I0428 20:26:34.101052  2834 net.cpp:382] conv1 -> conv1
I0428 20:26:34.103929  2834 net.cpp:124] Setting up conv1
I0428 20:26:34.103943  2834 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:34.103947  2834 net.cpp:139] Memory required for data: 18665728
I0428 20:26:34.103955  2834 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:34.103963  2834 net.cpp:86] Creating Layer pool1
I0428 20:26:34.103966  2834 net.cpp:408] pool1 <- conv1
I0428 20:26:34.103971  2834 net.cpp:382] pool1 -> pool1
I0428 20:26:34.104005  2834 net.cpp:124] Setting up pool1
I0428 20:26:34.104012  2834 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:34.104014  2834 net.cpp:139] Memory required for data: 18673920
I0428 20:26:34.104017  2834 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:34.104023  2834 net.cpp:86] Creating Layer ip1
I0428 20:26:34.104027  2834 net.cpp:408] ip1 <- pool1
I0428 20:26:34.104032  2834 net.cpp:382] ip1 -> ip1
I0428 20:26:34.104133  2834 net.cpp:124] Setting up ip1
I0428 20:26:34.104140  2834 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:34.104143  2834 net.cpp:139] Memory required for data: 18686720
I0428 20:26:34.104151  2834 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:34.104156  2834 net.cpp:86] Creating Layer relu1
I0428 20:26:34.104158  2834 net.cpp:408] relu1 <- ip1
I0428 20:26:34.104162  2834 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:34.104315  2834 net.cpp:124] Setting up relu1
I0428 20:26:34.104324  2834 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:34.104327  2834 net.cpp:139] Memory required for data: 18699520
I0428 20:26:34.104331  2834 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:34.104336  2834 net.cpp:86] Creating Layer ip2
I0428 20:26:34.104341  2834 net.cpp:408] ip2 <- ip1
I0428 20:26:34.104344  2834 net.cpp:382] ip2 -> ip2
I0428 20:26:34.104434  2834 net.cpp:124] Setting up ip2
I0428 20:26:34.104441  2834 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:34.104444  2834 net.cpp:139] Memory required for data: 18702080
I0428 20:26:34.104449  2834 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:34.104454  2834 net.cpp:86] Creating Layer relu2
I0428 20:26:34.104457  2834 net.cpp:408] relu2 <- ip2
I0428 20:26:34.104461  2834 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:34.105229  2834 net.cpp:124] Setting up relu2
I0428 20:26:34.105242  2834 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:34.105262  2834 net.cpp:139] Memory required for data: 18704640
I0428 20:26:34.105265  2834 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:34.105273  2834 net.cpp:86] Creating Layer ip3
I0428 20:26:34.105275  2834 net.cpp:408] ip3 <- ip2
I0428 20:26:34.105281  2834 net.cpp:382] ip3 -> ip3
I0428 20:26:34.105378  2834 net.cpp:124] Setting up ip3
I0428 20:26:34.105386  2834 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:34.105389  2834 net.cpp:139] Memory required for data: 18707200
I0428 20:26:34.105396  2834 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:34.105401  2834 net.cpp:86] Creating Layer relu3
I0428 20:26:34.105404  2834 net.cpp:408] relu3 <- ip3
I0428 20:26:34.105409  2834 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:34.105585  2834 net.cpp:124] Setting up relu3
I0428 20:26:34.105594  2834 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:34.105597  2834 net.cpp:139] Memory required for data: 18709760
I0428 20:26:34.105602  2834 layer_factory.hpp:77] Creating layer loss
I0428 20:26:34.105607  2834 net.cpp:86] Creating Layer loss
I0428 20:26:34.105609  2834 net.cpp:408] loss <- ip3
I0428 20:26:34.105613  2834 net.cpp:408] loss <- label
I0428 20:26:34.105618  2834 net.cpp:382] loss -> loss
I0428 20:26:34.105636  2834 layer_factory.hpp:77] Creating layer loss
I0428 20:26:34.105888  2834 net.cpp:124] Setting up loss
I0428 20:26:34.105897  2834 net.cpp:131] Top shape: (1)
I0428 20:26:34.105901  2834 net.cpp:134]     with loss weight 1
I0428 20:26:34.105914  2834 net.cpp:139] Memory required for data: 18709764
I0428 20:26:34.105918  2834 net.cpp:200] loss needs backward computation.
I0428 20:26:34.105922  2834 net.cpp:200] relu3 needs backward computation.
I0428 20:26:34.105924  2834 net.cpp:200] ip3 needs backward computation.
I0428 20:26:34.105927  2834 net.cpp:200] relu2 needs backward computation.
I0428 20:26:34.105931  2834 net.cpp:200] ip2 needs backward computation.
I0428 20:26:34.105933  2834 net.cpp:200] relu1 needs backward computation.
I0428 20:26:34.105937  2834 net.cpp:200] ip1 needs backward computation.
I0428 20:26:34.105939  2834 net.cpp:200] pool1 needs backward computation.
I0428 20:26:34.105942  2834 net.cpp:200] conv1 needs backward computation.
I0428 20:26:34.105945  2834 net.cpp:200] pool0 needs backward computation.
I0428 20:26:34.105948  2834 net.cpp:200] conv0 needs backward computation.
I0428 20:26:34.105952  2834 net.cpp:202] mnist does not need backward computation.
I0428 20:26:34.105954  2834 net.cpp:244] This network produces output loss
I0428 20:26:34.105963  2834 net.cpp:257] Network initialization done.
I0428 20:26:34.106283  2834 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1473.prototxt
I0428 20:26:34.106309  2834 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:34.106411  2834 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:34.106488  2834 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:34.106531  2834 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:34.106544  2834 net.cpp:86] Creating Layer mnist
I0428 20:26:34.106547  2834 net.cpp:382] mnist -> data
I0428 20:26:34.106555  2834 net.cpp:382] mnist -> label
I0428 20:26:34.106637  2834 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:34.108671  2834 net.cpp:124] Setting up mnist
I0428 20:26:34.108716  2834 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:34.108721  2834 net.cpp:131] Top shape: 100 (100)
I0428 20:26:34.108724  2834 net.cpp:139] Memory required for data: 314000
I0428 20:26:34.108728  2834 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:34.108734  2834 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:34.108738  2834 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:34.108743  2834 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:34.108764  2834 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:34.108808  2834 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:34.108819  2834 net.cpp:131] Top shape: 100 (100)
I0428 20:26:34.108824  2834 net.cpp:131] Top shape: 100 (100)
I0428 20:26:34.108826  2834 net.cpp:139] Memory required for data: 314800
I0428 20:26:34.108829  2834 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:34.108853  2834 net.cpp:86] Creating Layer conv0
I0428 20:26:34.108856  2834 net.cpp:408] conv0 <- data
I0428 20:26:34.108861  2834 net.cpp:382] conv0 -> conv0
I0428 20:26:34.110520  2834 net.cpp:124] Setting up conv0
I0428 20:26:34.110534  2834 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:34.110538  2834 net.cpp:139] Memory required for data: 23354800
I0428 20:26:34.110546  2834 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:34.110553  2834 net.cpp:86] Creating Layer pool0
I0428 20:26:34.110555  2834 net.cpp:408] pool0 <- conv0
I0428 20:26:34.110560  2834 net.cpp:382] pool0 -> pool0
I0428 20:26:34.110616  2834 net.cpp:124] Setting up pool0
I0428 20:26:34.110621  2834 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:34.110625  2834 net.cpp:139] Memory required for data: 29114800
I0428 20:26:34.110627  2834 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:34.110636  2834 net.cpp:86] Creating Layer conv1
I0428 20:26:34.110640  2834 net.cpp:408] conv1 <- pool0
I0428 20:26:34.110644  2834 net.cpp:382] conv1 -> conv1
I0428 20:26:34.112179  2834 net.cpp:124] Setting up conv1
I0428 20:26:34.112191  2834 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:34.112212  2834 net.cpp:139] Memory required for data: 29166000
I0428 20:26:34.112221  2834 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:34.112227  2834 net.cpp:86] Creating Layer pool1
I0428 20:26:34.112231  2834 net.cpp:408] pool1 <- conv1
I0428 20:26:34.112239  2834 net.cpp:382] pool1 -> pool1
I0428 20:26:34.112292  2834 net.cpp:124] Setting up pool1
I0428 20:26:34.112298  2834 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:34.112300  2834 net.cpp:139] Memory required for data: 29178800
I0428 20:26:34.112303  2834 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:34.112321  2834 net.cpp:86] Creating Layer ip1
I0428 20:26:34.112324  2834 net.cpp:408] ip1 <- pool1
I0428 20:26:34.112330  2834 net.cpp:382] ip1 -> ip1
I0428 20:26:34.112457  2834 net.cpp:124] Setting up ip1
I0428 20:26:34.112463  2834 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:34.112476  2834 net.cpp:139] Memory required for data: 29198800
I0428 20:26:34.112484  2834 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:34.112489  2834 net.cpp:86] Creating Layer relu1
I0428 20:26:34.112493  2834 net.cpp:408] relu1 <- ip1
I0428 20:26:34.112498  2834 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:34.112676  2834 net.cpp:124] Setting up relu1
I0428 20:26:34.112685  2834 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:34.112689  2834 net.cpp:139] Memory required for data: 29218800
I0428 20:26:34.112692  2834 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:34.112699  2834 net.cpp:86] Creating Layer ip2
I0428 20:26:34.112702  2834 net.cpp:408] ip2 <- ip1
I0428 20:26:34.112709  2834 net.cpp:382] ip2 -> ip2
I0428 20:26:34.112851  2834 net.cpp:124] Setting up ip2
I0428 20:26:34.112860  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.112864  2834 net.cpp:139] Memory required for data: 29222800
I0428 20:26:34.112869  2834 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:34.112874  2834 net.cpp:86] Creating Layer relu2
I0428 20:26:34.112877  2834 net.cpp:408] relu2 <- ip2
I0428 20:26:34.112884  2834 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:34.113123  2834 net.cpp:124] Setting up relu2
I0428 20:26:34.113132  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.113137  2834 net.cpp:139] Memory required for data: 29226800
I0428 20:26:34.113145  2834 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:34.113163  2834 net.cpp:86] Creating Layer ip3
I0428 20:26:34.113168  2834 net.cpp:408] ip3 <- ip2
I0428 20:26:34.113173  2834 net.cpp:382] ip3 -> ip3
I0428 20:26:34.113306  2834 net.cpp:124] Setting up ip3
I0428 20:26:34.113313  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.113317  2834 net.cpp:139] Memory required for data: 29230800
I0428 20:26:34.113324  2834 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:34.113329  2834 net.cpp:86] Creating Layer relu3
I0428 20:26:34.113332  2834 net.cpp:408] relu3 <- ip3
I0428 20:26:34.113337  2834 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:34.114212  2834 net.cpp:124] Setting up relu3
I0428 20:26:34.114241  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.114245  2834 net.cpp:139] Memory required for data: 29234800
I0428 20:26:34.114248  2834 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:34.114254  2834 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:34.114259  2834 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:34.114264  2834 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:34.114269  2834 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:34.114349  2834 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:34.114370  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.114374  2834 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:34.114377  2834 net.cpp:139] Memory required for data: 29242800
I0428 20:26:34.114379  2834 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:34.114384  2834 net.cpp:86] Creating Layer accuracy
I0428 20:26:34.114387  2834 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:34.114392  2834 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:34.114397  2834 net.cpp:382] accuracy -> accuracy
I0428 20:26:34.114404  2834 net.cpp:124] Setting up accuracy
I0428 20:26:34.114408  2834 net.cpp:131] Top shape: (1)
I0428 20:26:34.114410  2834 net.cpp:139] Memory required for data: 29242804
I0428 20:26:34.114413  2834 layer_factory.hpp:77] Creating layer loss
I0428 20:26:34.114418  2834 net.cpp:86] Creating Layer loss
I0428 20:26:34.114420  2834 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:34.114425  2834 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:34.114429  2834 net.cpp:382] loss -> loss
I0428 20:26:34.114435  2834 layer_factory.hpp:77] Creating layer loss
I0428 20:26:34.114697  2834 net.cpp:124] Setting up loss
I0428 20:26:34.114706  2834 net.cpp:131] Top shape: (1)
I0428 20:26:34.114709  2834 net.cpp:134]     with loss weight 1
I0428 20:26:34.114725  2834 net.cpp:139] Memory required for data: 29242808
I0428 20:26:34.114728  2834 net.cpp:200] loss needs backward computation.
I0428 20:26:34.114732  2834 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:34.114735  2834 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:34.114739  2834 net.cpp:200] relu3 needs backward computation.
I0428 20:26:34.114742  2834 net.cpp:200] ip3 needs backward computation.
I0428 20:26:34.114744  2834 net.cpp:200] relu2 needs backward computation.
I0428 20:26:34.114748  2834 net.cpp:200] ip2 needs backward computation.
I0428 20:26:34.114750  2834 net.cpp:200] relu1 needs backward computation.
I0428 20:26:34.114753  2834 net.cpp:200] ip1 needs backward computation.
I0428 20:26:34.114755  2834 net.cpp:200] pool1 needs backward computation.
I0428 20:26:34.114758  2834 net.cpp:200] conv1 needs backward computation.
I0428 20:26:34.114763  2834 net.cpp:200] pool0 needs backward computation.
I0428 20:26:34.114766  2834 net.cpp:200] conv0 needs backward computation.
I0428 20:26:34.114778  2834 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:34.114780  2834 net.cpp:202] mnist does not need backward computation.
I0428 20:26:34.114799  2834 net.cpp:244] This network produces output accuracy
I0428 20:26:34.114802  2834 net.cpp:244] This network produces output loss
I0428 20:26:34.114814  2834 net.cpp:257] Network initialization done.
I0428 20:26:34.114855  2834 solver.cpp:56] Solver scaffolding done.
I0428 20:26:34.115190  2834 caffe.cpp:248] Starting Optimization
I0428 20:26:34.115196  2834 solver.cpp:273] Solving LeNet
I0428 20:26:34.115200  2834 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:34.116019  2834 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:34.213651  2850 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:34.215179  2834 solver.cpp:398]     Test net output #0: accuracy = 0.1034
I0428 20:26:34.215200  2834 solver.cpp:398]     Test net output #1: loss = 2.30236 (* 1 = 2.30236 loss)
I0428 20:26:34.220944  2834 solver.cpp:219] Iteration 0 (-6.62799e-31 iter/s, 0.105688s/100 iters), loss = 2.32272
I0428 20:26:34.220969  2834 solver.cpp:238]     Train net output #0: loss = 2.32272 (* 1 = 2.32272 loss)
I0428 20:26:34.220998  2834 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:34.431622  2834 solver.cpp:219] Iteration 100 (474.769 iter/s, 0.210629s/100 iters), loss = 0.471365
I0428 20:26:34.431659  2834 solver.cpp:238]     Train net output #0: loss = 0.471365 (* 1 = 0.471365 loss)
I0428 20:26:34.431669  2834 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:34.642638  2834 solver.cpp:219] Iteration 200 (474.02 iter/s, 0.210961s/100 iters), loss = 0.307127
I0428 20:26:34.642686  2834 solver.cpp:238]     Train net output #0: loss = 0.307127 (* 1 = 0.307127 loss)
I0428 20:26:34.642706  2834 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:34.855918  2834 solver.cpp:219] Iteration 300 (469.01 iter/s, 0.213215s/100 iters), loss = 0.349871
I0428 20:26:34.855973  2834 solver.cpp:238]     Train net output #0: loss = 0.349871 (* 1 = 0.349871 loss)
I0428 20:26:34.855995  2834 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:35.077309  2834 solver.cpp:219] Iteration 400 (451.832 iter/s, 0.221321s/100 iters), loss = 0.174593
I0428 20:26:35.077350  2834 solver.cpp:238]     Train net output #0: loss = 0.174593 (* 1 = 0.174593 loss)
I0428 20:26:35.077361  2834 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:35.285346  2834 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:35.385022  2850 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:35.387802  2834 solver.cpp:398]     Test net output #0: accuracy = 0.9323
I0428 20:26:35.387830  2834 solver.cpp:398]     Test net output #1: loss = 0.221953 (* 1 = 0.221953 loss)
I0428 20:26:35.389780  2834 solver.cpp:219] Iteration 500 (320.092 iter/s, 0.31241s/100 iters), loss = 0.275233
I0428 20:26:35.389806  2834 solver.cpp:238]     Train net output #0: loss = 0.275233 (* 1 = 0.275233 loss)
I0428 20:26:35.389833  2834 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:35.601464  2834 solver.cpp:219] Iteration 600 (472.515 iter/s, 0.211633s/100 iters), loss = 0.128107
I0428 20:26:35.601518  2834 solver.cpp:238]     Train net output #0: loss = 0.128107 (* 1 = 0.128107 loss)
I0428 20:26:35.601531  2834 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:35.824204  2834 solver.cpp:219] Iteration 700 (449.093 iter/s, 0.222671s/100 iters), loss = 0.171766
I0428 20:26:35.824254  2834 solver.cpp:238]     Train net output #0: loss = 0.171766 (* 1 = 0.171766 loss)
I0428 20:26:35.824265  2834 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:36.038370  2834 solver.cpp:219] Iteration 800 (467.078 iter/s, 0.214097s/100 iters), loss = 0.327135
I0428 20:26:36.038422  2834 solver.cpp:238]     Train net output #0: loss = 0.327135 (* 1 = 0.327135 loss)
I0428 20:26:36.038436  2834 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:36.258610  2834 solver.cpp:219] Iteration 900 (454.19 iter/s, 0.220172s/100 iters), loss = 0.282979
I0428 20:26:36.258653  2834 solver.cpp:238]     Train net output #0: loss = 0.282979 (* 1 = 0.282979 loss)
I0428 20:26:36.258664  2834 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:36.330190  2849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:36.468343  2834 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:36.470208  2834 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:36.471426  2834 solver.cpp:311] Iteration 1000, loss = 0.309517
I0428 20:26:36.471457  2834 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:36.576926  2850 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:36.579723  2834 solver.cpp:398]     Test net output #0: accuracy = 0.9573
I0428 20:26:36.579753  2834 solver.cpp:398]     Test net output #1: loss = 0.135048 (* 1 = 0.135048 loss)
I0428 20:26:36.579761  2834 solver.cpp:316] Optimization Done.
I0428 20:26:36.579764  2834 caffe.cpp:259] Optimization Done.
