I0428 19:59:47.754930 29327 caffe.cpp:218] Using GPUs 0
I0428 19:59:47.790858 29327 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:48.248342 29327 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test858.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:48.248472 29327 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test858.prototxt
I0428 19:59:48.248764 29327 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:48.248792 29327 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:48.248863 29327 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:48.248924 29327 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:48.249007 29327 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:48.249028 29327 net.cpp:86] Creating Layer mnist
I0428 19:59:48.249037 29327 net.cpp:382] mnist -> data
I0428 19:59:48.249058 29327 net.cpp:382] mnist -> label
I0428 19:59:48.250038 29327 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:48.252226 29327 net.cpp:124] Setting up mnist
I0428 19:59:48.252240 29327 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:48.252248 29327 net.cpp:131] Top shape: 64 (64)
I0428 19:59:48.252250 29327 net.cpp:139] Memory required for data: 200960
I0428 19:59:48.252256 29327 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:48.252270 29327 net.cpp:86] Creating Layer conv0
I0428 19:59:48.252274 29327 net.cpp:408] conv0 <- data
I0428 19:59:48.252287 29327 net.cpp:382] conv0 -> conv0
I0428 19:59:48.482973 29327 net.cpp:124] Setting up conv0
I0428 19:59:48.483016 29327 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:48.483019 29327 net.cpp:139] Memory required for data: 1675520
I0428 19:59:48.483049 29327 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:48.483062 29327 net.cpp:86] Creating Layer pool0
I0428 19:59:48.483067 29327 net.cpp:408] pool0 <- conv0
I0428 19:59:48.483072 29327 net.cpp:382] pool0 -> pool0
I0428 19:59:48.483134 29327 net.cpp:124] Setting up pool0
I0428 19:59:48.483142 29327 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:48.483161 29327 net.cpp:139] Memory required for data: 2044160
I0428 19:59:48.483165 29327 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:48.483176 29327 net.cpp:86] Creating Layer conv1
I0428 19:59:48.483181 29327 net.cpp:408] conv1 <- pool0
I0428 19:59:48.483187 29327 net.cpp:382] conv1 -> conv1
I0428 19:59:48.486078 29327 net.cpp:124] Setting up conv1
I0428 19:59:48.486093 29327 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:59:48.486098 29327 net.cpp:139] Memory required for data: 2453760
I0428 19:59:48.486105 29327 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:48.486114 29327 net.cpp:86] Creating Layer pool1
I0428 19:59:48.486116 29327 net.cpp:408] pool1 <- conv1
I0428 19:59:48.486121 29327 net.cpp:382] pool1 -> pool1
I0428 19:59:48.486187 29327 net.cpp:124] Setting up pool1
I0428 19:59:48.486196 29327 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:59:48.486198 29327 net.cpp:139] Memory required for data: 2556160
I0428 19:59:48.486202 29327 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:48.486208 29327 net.cpp:86] Creating Layer ip1
I0428 19:59:48.486212 29327 net.cpp:408] ip1 <- pool1
I0428 19:59:48.486217 29327 net.cpp:382] ip1 -> ip1
I0428 19:59:48.487226 29327 net.cpp:124] Setting up ip1
I0428 19:59:48.487241 29327 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:48.487244 29327 net.cpp:139] Memory required for data: 2558720
I0428 19:59:48.487253 29327 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:48.487260 29327 net.cpp:86] Creating Layer relu1
I0428 19:59:48.487279 29327 net.cpp:408] relu1 <- ip1
I0428 19:59:48.487284 29327 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:48.487480 29327 net.cpp:124] Setting up relu1
I0428 19:59:48.487509 29327 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:48.487512 29327 net.cpp:139] Memory required for data: 2561280
I0428 19:59:48.487515 29327 layer_factory.hpp:77] Creating layer loss
I0428 19:59:48.487521 29327 net.cpp:86] Creating Layer loss
I0428 19:59:48.487525 29327 net.cpp:408] loss <- ip1
I0428 19:59:48.487530 29327 net.cpp:408] loss <- label
I0428 19:59:48.487535 29327 net.cpp:382] loss -> loss
I0428 19:59:48.487555 29327 layer_factory.hpp:77] Creating layer loss
I0428 19:59:48.488471 29327 net.cpp:124] Setting up loss
I0428 19:59:48.488483 29327 net.cpp:131] Top shape: (1)
I0428 19:59:48.488502 29327 net.cpp:134]     with loss weight 1
I0428 19:59:48.488517 29327 net.cpp:139] Memory required for data: 2561284
I0428 19:59:48.488535 29327 net.cpp:200] loss needs backward computation.
I0428 19:59:48.488539 29327 net.cpp:200] relu1 needs backward computation.
I0428 19:59:48.488559 29327 net.cpp:200] ip1 needs backward computation.
I0428 19:59:48.488561 29327 net.cpp:200] pool1 needs backward computation.
I0428 19:59:48.488564 29327 net.cpp:200] conv1 needs backward computation.
I0428 19:59:48.488569 29327 net.cpp:200] pool0 needs backward computation.
I0428 19:59:48.488571 29327 net.cpp:200] conv0 needs backward computation.
I0428 19:59:48.488575 29327 net.cpp:202] mnist does not need backward computation.
I0428 19:59:48.488579 29327 net.cpp:244] This network produces output loss
I0428 19:59:48.488587 29327 net.cpp:257] Network initialization done.
I0428 19:59:48.488889 29327 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test858.prototxt
I0428 19:59:48.488915 29327 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:48.488991 29327 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:48.489064 29327 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:48.489109 29327 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:48.489121 29327 net.cpp:86] Creating Layer mnist
I0428 19:59:48.489126 29327 net.cpp:382] mnist -> data
I0428 19:59:48.489135 29327 net.cpp:382] mnist -> label
I0428 19:59:48.489233 29327 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:48.491503 29327 net.cpp:124] Setting up mnist
I0428 19:59:48.491531 29327 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:48.491538 29327 net.cpp:131] Top shape: 100 (100)
I0428 19:59:48.491540 29327 net.cpp:139] Memory required for data: 314000
I0428 19:59:48.491544 29327 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:48.491554 29327 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:48.491575 29327 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:48.491580 29327 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:48.491586 29327 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:48.491683 29327 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:48.491690 29327 net.cpp:131] Top shape: 100 (100)
I0428 19:59:48.491694 29327 net.cpp:131] Top shape: 100 (100)
I0428 19:59:48.491698 29327 net.cpp:139] Memory required for data: 314800
I0428 19:59:48.491701 29327 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:48.491710 29327 net.cpp:86] Creating Layer conv0
I0428 19:59:48.491714 29327 net.cpp:408] conv0 <- data
I0428 19:59:48.491719 29327 net.cpp:382] conv0 -> conv0
I0428 19:59:48.492590 29327 net.cpp:124] Setting up conv0
I0428 19:59:48.492619 29327 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:48.492637 29327 net.cpp:139] Memory required for data: 2618800
I0428 19:59:48.492647 29327 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:48.492655 29327 net.cpp:86] Creating Layer pool0
I0428 19:59:48.492658 29327 net.cpp:408] pool0 <- conv0
I0428 19:59:48.492663 29327 net.cpp:382] pool0 -> pool0
I0428 19:59:48.492699 29327 net.cpp:124] Setting up pool0
I0428 19:59:48.492707 29327 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:48.492710 29327 net.cpp:139] Memory required for data: 3194800
I0428 19:59:48.492714 29327 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:48.492723 29327 net.cpp:86] Creating Layer conv1
I0428 19:59:48.492727 29327 net.cpp:408] conv1 <- pool0
I0428 19:59:48.492733 29327 net.cpp:382] conv1 -> conv1
I0428 19:59:48.494932 29327 net.cpp:124] Setting up conv1
I0428 19:59:48.494962 29327 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:59:48.494966 29327 net.cpp:139] Memory required for data: 3834800
I0428 19:59:48.494976 29327 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:48.494983 29327 net.cpp:86] Creating Layer pool1
I0428 19:59:48.495013 29327 net.cpp:408] pool1 <- conv1
I0428 19:59:48.495019 29327 net.cpp:382] pool1 -> pool1
I0428 19:59:48.495079 29327 net.cpp:124] Setting up pool1
I0428 19:59:48.495086 29327 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:59:48.495090 29327 net.cpp:139] Memory required for data: 3994800
I0428 19:59:48.495093 29327 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:48.495100 29327 net.cpp:86] Creating Layer ip1
I0428 19:59:48.495103 29327 net.cpp:408] ip1 <- pool1
I0428 19:59:48.495108 29327 net.cpp:382] ip1 -> ip1
I0428 19:59:48.495293 29327 net.cpp:124] Setting up ip1
I0428 19:59:48.495302 29327 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:48.495306 29327 net.cpp:139] Memory required for data: 3998800
I0428 19:59:48.495314 29327 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:48.495332 29327 net.cpp:86] Creating Layer relu1
I0428 19:59:48.495338 29327 net.cpp:408] relu1 <- ip1
I0428 19:59:48.495343 29327 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:48.496114 29327 net.cpp:124] Setting up relu1
I0428 19:59:48.496141 29327 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:48.496145 29327 net.cpp:139] Memory required for data: 4002800
I0428 19:59:48.496150 29327 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:59:48.496157 29327 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:59:48.496161 29327 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:59:48.496167 29327 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:59:48.496173 29327 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:59:48.496217 29327 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:59:48.496224 29327 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:48.496228 29327 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:48.496232 29327 net.cpp:139] Memory required for data: 4010800
I0428 19:59:48.496235 29327 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:48.496240 29327 net.cpp:86] Creating Layer accuracy
I0428 19:59:48.496244 29327 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:59:48.496249 29327 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:48.496253 29327 net.cpp:382] accuracy -> accuracy
I0428 19:59:48.496261 29327 net.cpp:124] Setting up accuracy
I0428 19:59:48.496265 29327 net.cpp:131] Top shape: (1)
I0428 19:59:48.496268 29327 net.cpp:139] Memory required for data: 4010804
I0428 19:59:48.496271 29327 layer_factory.hpp:77] Creating layer loss
I0428 19:59:48.496276 29327 net.cpp:86] Creating Layer loss
I0428 19:59:48.496280 29327 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:59:48.496284 29327 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:48.496289 29327 net.cpp:382] loss -> loss
I0428 19:59:48.496295 29327 layer_factory.hpp:77] Creating layer loss
I0428 19:59:48.496549 29327 net.cpp:124] Setting up loss
I0428 19:59:48.496559 29327 net.cpp:131] Top shape: (1)
I0428 19:59:48.496562 29327 net.cpp:134]     with loss weight 1
I0428 19:59:48.496569 29327 net.cpp:139] Memory required for data: 4010808
I0428 19:59:48.496573 29327 net.cpp:200] loss needs backward computation.
I0428 19:59:48.496577 29327 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:48.496582 29327 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:59:48.496587 29327 net.cpp:200] relu1 needs backward computation.
I0428 19:59:48.496589 29327 net.cpp:200] ip1 needs backward computation.
I0428 19:59:48.496593 29327 net.cpp:200] pool1 needs backward computation.
I0428 19:59:48.496597 29327 net.cpp:200] conv1 needs backward computation.
I0428 19:59:48.496600 29327 net.cpp:200] pool0 needs backward computation.
I0428 19:59:48.496603 29327 net.cpp:200] conv0 needs backward computation.
I0428 19:59:48.496608 29327 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:48.496611 29327 net.cpp:202] mnist does not need backward computation.
I0428 19:59:48.496614 29327 net.cpp:244] This network produces output accuracy
I0428 19:59:48.496618 29327 net.cpp:244] This network produces output loss
I0428 19:59:48.496636 29327 net.cpp:257] Network initialization done.
I0428 19:59:48.496670 29327 solver.cpp:56] Solver scaffolding done.
I0428 19:59:48.496897 29327 caffe.cpp:248] Starting Optimization
I0428 19:59:48.496904 29327 solver.cpp:273] Solving LeNet
I0428 19:59:48.496908 29327 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:48.497015 29327 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:48.500913 29327 blocking_queue.cpp:49] Waiting for data
I0428 19:59:48.568869 29334 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:48.569373 29327 solver.cpp:398]     Test net output #0: accuracy = 0.0812
I0428 19:59:48.569414 29327 solver.cpp:398]     Test net output #1: loss = 2.33778 (* 1 = 2.33778 loss)
I0428 19:59:48.571573 29327 solver.cpp:219] Iteration 0 (0 iter/s, 0.0746394s/100 iters), loss = 2.32148
I0428 19:59:48.571616 29327 solver.cpp:238]     Train net output #0: loss = 2.32148 (* 1 = 2.32148 loss)
I0428 19:59:48.571629 29327 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:48.646482 29327 solver.cpp:219] Iteration 100 (1335.91 iter/s, 0.0748555s/100 iters), loss = 0.634251
I0428 19:59:48.646507 29327 solver.cpp:238]     Train net output #0: loss = 0.634251 (* 1 = 0.634251 loss)
I0428 19:59:48.646529 29327 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:48.720973 29327 solver.cpp:219] Iteration 200 (1343.07 iter/s, 0.0744561s/100 iters), loss = 0.557676
I0428 19:59:48.720995 29327 solver.cpp:238]     Train net output #0: loss = 0.557676 (* 1 = 0.557676 loss)
I0428 19:59:48.721017 29327 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:48.795107 29327 solver.cpp:219] Iteration 300 (1349.5 iter/s, 0.0741018s/100 iters), loss = 0.204699
I0428 19:59:48.795135 29327 solver.cpp:238]     Train net output #0: loss = 0.204699 (* 1 = 0.204699 loss)
I0428 19:59:48.795142 29327 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:48.868996 29327 solver.cpp:219] Iteration 400 (1354.02 iter/s, 0.0738539s/100 iters), loss = 0.108903
I0428 19:59:48.869021 29327 solver.cpp:238]     Train net output #0: loss = 0.108903 (* 1 = 0.108903 loss)
I0428 19:59:48.869029 29327 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:48.941273 29327 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:49.011797 29334 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:49.012279 29327 solver.cpp:398]     Test net output #0: accuracy = 0.9637
I0428 19:59:49.012302 29327 solver.cpp:398]     Test net output #1: loss = 0.126365 (* 1 = 0.126365 loss)
I0428 19:59:49.013113 29327 solver.cpp:219] Iteration 500 (694.069 iter/s, 0.144078s/100 iters), loss = 0.222592
I0428 19:59:49.013154 29327 solver.cpp:238]     Train net output #0: loss = 0.222592 (* 1 = 0.222592 loss)
I0428 19:59:49.013180 29327 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:49.099470 29327 solver.cpp:219] Iteration 600 (1158.62 iter/s, 0.0863099s/100 iters), loss = 0.11632
I0428 19:59:49.099511 29327 solver.cpp:238]     Train net output #0: loss = 0.11632 (* 1 = 0.11632 loss)
I0428 19:59:49.099519 29327 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:49.173252 29327 solver.cpp:219] Iteration 700 (1355.96 iter/s, 0.0737486s/100 iters), loss = 0.16388
I0428 19:59:49.173295 29327 solver.cpp:238]     Train net output #0: loss = 0.16388 (* 1 = 0.16388 loss)
I0428 19:59:49.173301 29327 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:49.246495 29327 solver.cpp:219] Iteration 800 (1365.97 iter/s, 0.0732078s/100 iters), loss = 0.186312
I0428 19:59:49.246536 29327 solver.cpp:238]     Train net output #0: loss = 0.186312 (* 1 = 0.186312 loss)
I0428 19:59:49.246542 29327 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:49.319676 29327 solver.cpp:219] Iteration 900 (1367.1 iter/s, 0.0731475s/100 iters), loss = 0.2379
I0428 19:59:49.319718 29327 solver.cpp:238]     Train net output #0: loss = 0.2379 (* 1 = 0.2379 loss)
I0428 19:59:49.319725 29327 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:49.344209 29333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:49.391350 29327 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:49.392139 29327 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:49.392650 29327 solver.cpp:311] Iteration 1000, loss = 0.121777
I0428 19:59:49.392673 29327 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:49.488968 29334 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:49.489667 29327 solver.cpp:398]     Test net output #0: accuracy = 0.9737
I0428 19:59:49.489709 29327 solver.cpp:398]     Test net output #1: loss = 0.0845131 (* 1 = 0.0845131 loss)
I0428 19:59:49.489722 29327 solver.cpp:316] Optimization Done.
I0428 19:59:49.489728 29327 caffe.cpp:259] Optimization Done.
