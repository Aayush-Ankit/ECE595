I0428 20:03:17.396203 30154 caffe.cpp:218] Using GPUs 0
I0428 20:03:17.433323 30154 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:17.939333 30154 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test948.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:17.939481 30154 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test948.prototxt
I0428 20:03:17.939903 30154 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:17.939924 30154 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:17.940026 30154 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:17.940104 30154 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:17.940199 30154 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:17.940222 30154 net.cpp:86] Creating Layer mnist
I0428 20:03:17.940232 30154 net.cpp:382] mnist -> data
I0428 20:03:17.940253 30154 net.cpp:382] mnist -> label
I0428 20:03:17.941370 30154 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:17.943830 30154 net.cpp:124] Setting up mnist
I0428 20:03:17.943847 30154 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:17.943855 30154 net.cpp:131] Top shape: 64 (64)
I0428 20:03:17.943857 30154 net.cpp:139] Memory required for data: 200960
I0428 20:03:17.943866 30154 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:17.943904 30154 net.cpp:86] Creating Layer conv0
I0428 20:03:17.943925 30154 net.cpp:408] conv0 <- data
I0428 20:03:17.943939 30154 net.cpp:382] conv0 -> conv0
I0428 20:03:18.198338 30154 net.cpp:124] Setting up conv0
I0428 20:03:18.198365 30154 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:18.198369 30154 net.cpp:139] Memory required for data: 1675520
I0428 20:03:18.198385 30154 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:18.198397 30154 net.cpp:86] Creating Layer pool0
I0428 20:03:18.198402 30154 net.cpp:408] pool0 <- conv0
I0428 20:03:18.198407 30154 net.cpp:382] pool0 -> pool0
I0428 20:03:18.198452 30154 net.cpp:124] Setting up pool0
I0428 20:03:18.198459 30154 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:18.198462 30154 net.cpp:139] Memory required for data: 2044160
I0428 20:03:18.198465 30154 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:18.198475 30154 net.cpp:86] Creating Layer conv1
I0428 20:03:18.198478 30154 net.cpp:408] conv1 <- pool0
I0428 20:03:18.198483 30154 net.cpp:382] conv1 -> conv1
I0428 20:03:18.200539 30154 net.cpp:124] Setting up conv1
I0428 20:03:18.200554 30154 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:18.200558 30154 net.cpp:139] Memory required for data: 3682560
I0428 20:03:18.200582 30154 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:18.200589 30154 net.cpp:86] Creating Layer pool1
I0428 20:03:18.200594 30154 net.cpp:408] pool1 <- conv1
I0428 20:03:18.200599 30154 net.cpp:382] pool1 -> pool1
I0428 20:03:18.200636 30154 net.cpp:124] Setting up pool1
I0428 20:03:18.200644 30154 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:18.200646 30154 net.cpp:139] Memory required for data: 4092160
I0428 20:03:18.200649 30154 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:18.200656 30154 net.cpp:86] Creating Layer ip1
I0428 20:03:18.200660 30154 net.cpp:408] ip1 <- pool1
I0428 20:03:18.200664 30154 net.cpp:382] ip1 -> ip1
I0428 20:03:18.201817 30154 net.cpp:124] Setting up ip1
I0428 20:03:18.201831 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.201835 30154 net.cpp:139] Memory required for data: 4094720
I0428 20:03:18.201844 30154 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:18.201850 30154 net.cpp:86] Creating Layer relu1
I0428 20:03:18.201854 30154 net.cpp:408] relu1 <- ip1
I0428 20:03:18.201859 30154 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:18.202059 30154 net.cpp:124] Setting up relu1
I0428 20:03:18.202067 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.202070 30154 net.cpp:139] Memory required for data: 4097280
I0428 20:03:18.202074 30154 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:18.202080 30154 net.cpp:86] Creating Layer ip2
I0428 20:03:18.202083 30154 net.cpp:408] ip2 <- ip1
I0428 20:03:18.202088 30154 net.cpp:382] ip2 -> ip2
I0428 20:03:18.202206 30154 net.cpp:124] Setting up ip2
I0428 20:03:18.202213 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.202215 30154 net.cpp:139] Memory required for data: 4099840
I0428 20:03:18.202220 30154 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:18.202226 30154 net.cpp:86] Creating Layer relu2
I0428 20:03:18.202229 30154 net.cpp:408] relu2 <- ip2
I0428 20:03:18.202234 30154 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:18.203009 30154 net.cpp:124] Setting up relu2
I0428 20:03:18.203022 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.203027 30154 net.cpp:139] Memory required for data: 4102400
I0428 20:03:18.203029 30154 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:18.203037 30154 net.cpp:86] Creating Layer ip3
I0428 20:03:18.203040 30154 net.cpp:408] ip3 <- ip2
I0428 20:03:18.203045 30154 net.cpp:382] ip3 -> ip3
I0428 20:03:18.203140 30154 net.cpp:124] Setting up ip3
I0428 20:03:18.203148 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.203151 30154 net.cpp:139] Memory required for data: 4104960
I0428 20:03:18.203160 30154 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:18.203164 30154 net.cpp:86] Creating Layer relu3
I0428 20:03:18.203167 30154 net.cpp:408] relu3 <- ip3
I0428 20:03:18.203186 30154 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:18.203361 30154 net.cpp:124] Setting up relu3
I0428 20:03:18.203369 30154 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:18.203372 30154 net.cpp:139] Memory required for data: 4107520
I0428 20:03:18.203375 30154 layer_factory.hpp:77] Creating layer loss
I0428 20:03:18.203382 30154 net.cpp:86] Creating Layer loss
I0428 20:03:18.203384 30154 net.cpp:408] loss <- ip3
I0428 20:03:18.203388 30154 net.cpp:408] loss <- label
I0428 20:03:18.203393 30154 net.cpp:382] loss -> loss
I0428 20:03:18.203410 30154 layer_factory.hpp:77] Creating layer loss
I0428 20:03:18.203662 30154 net.cpp:124] Setting up loss
I0428 20:03:18.203672 30154 net.cpp:131] Top shape: (1)
I0428 20:03:18.203675 30154 net.cpp:134]     with loss weight 1
I0428 20:03:18.203691 30154 net.cpp:139] Memory required for data: 4107524
I0428 20:03:18.203696 30154 net.cpp:200] loss needs backward computation.
I0428 20:03:18.203702 30154 net.cpp:200] relu3 needs backward computation.
I0428 20:03:18.203706 30154 net.cpp:200] ip3 needs backward computation.
I0428 20:03:18.203707 30154 net.cpp:200] relu2 needs backward computation.
I0428 20:03:18.203711 30154 net.cpp:200] ip2 needs backward computation.
I0428 20:03:18.203713 30154 net.cpp:200] relu1 needs backward computation.
I0428 20:03:18.203716 30154 net.cpp:200] ip1 needs backward computation.
I0428 20:03:18.203718 30154 net.cpp:200] pool1 needs backward computation.
I0428 20:03:18.203722 30154 net.cpp:200] conv1 needs backward computation.
I0428 20:03:18.203724 30154 net.cpp:200] pool0 needs backward computation.
I0428 20:03:18.203727 30154 net.cpp:200] conv0 needs backward computation.
I0428 20:03:18.203745 30154 net.cpp:202] mnist does not need backward computation.
I0428 20:03:18.203748 30154 net.cpp:244] This network produces output loss
I0428 20:03:18.203758 30154 net.cpp:257] Network initialization done.
I0428 20:03:18.204113 30154 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test948.prototxt
I0428 20:03:18.204140 30154 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:18.204234 30154 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:18.204329 30154 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:18.204375 30154 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:18.204386 30154 net.cpp:86] Creating Layer mnist
I0428 20:03:18.204392 30154 net.cpp:382] mnist -> data
I0428 20:03:18.204399 30154 net.cpp:382] mnist -> label
I0428 20:03:18.204481 30154 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:18.206651 30154 net.cpp:124] Setting up mnist
I0428 20:03:18.206707 30154 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:18.206713 30154 net.cpp:131] Top shape: 100 (100)
I0428 20:03:18.206717 30154 net.cpp:139] Memory required for data: 314000
I0428 20:03:18.206719 30154 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:18.206729 30154 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:18.206732 30154 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:18.206738 30154 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:18.206745 30154 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:18.206827 30154 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:18.206851 30154 net.cpp:131] Top shape: 100 (100)
I0428 20:03:18.206854 30154 net.cpp:131] Top shape: 100 (100)
I0428 20:03:18.206857 30154 net.cpp:139] Memory required for data: 314800
I0428 20:03:18.206861 30154 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:18.206871 30154 net.cpp:86] Creating Layer conv0
I0428 20:03:18.206876 30154 net.cpp:408] conv0 <- data
I0428 20:03:18.206882 30154 net.cpp:382] conv0 -> conv0
I0428 20:03:18.208469 30154 net.cpp:124] Setting up conv0
I0428 20:03:18.208500 30154 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:18.208503 30154 net.cpp:139] Memory required for data: 2618800
I0428 20:03:18.208513 30154 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:18.208518 30154 net.cpp:86] Creating Layer pool0
I0428 20:03:18.208521 30154 net.cpp:408] pool0 <- conv0
I0428 20:03:18.208528 30154 net.cpp:382] pool0 -> pool0
I0428 20:03:18.208560 30154 net.cpp:124] Setting up pool0
I0428 20:03:18.208566 30154 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:18.208570 30154 net.cpp:139] Memory required for data: 3194800
I0428 20:03:18.208572 30154 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:18.208582 30154 net.cpp:86] Creating Layer conv1
I0428 20:03:18.208586 30154 net.cpp:408] conv1 <- pool0
I0428 20:03:18.208590 30154 net.cpp:382] conv1 -> conv1
I0428 20:03:18.210439 30154 net.cpp:124] Setting up conv1
I0428 20:03:18.210453 30154 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:18.210474 30154 net.cpp:139] Memory required for data: 5754800
I0428 20:03:18.210482 30154 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:18.210490 30154 net.cpp:86] Creating Layer pool1
I0428 20:03:18.210494 30154 net.cpp:408] pool1 <- conv1
I0428 20:03:18.210515 30154 net.cpp:382] pool1 -> pool1
I0428 20:03:18.210551 30154 net.cpp:124] Setting up pool1
I0428 20:03:18.210558 30154 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:18.210561 30154 net.cpp:139] Memory required for data: 6394800
I0428 20:03:18.210564 30154 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:18.210571 30154 net.cpp:86] Creating Layer ip1
I0428 20:03:18.210573 30154 net.cpp:408] ip1 <- pool1
I0428 20:03:18.210580 30154 net.cpp:382] ip1 -> ip1
I0428 20:03:18.210803 30154 net.cpp:124] Setting up ip1
I0428 20:03:18.210810 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.210824 30154 net.cpp:139] Memory required for data: 6398800
I0428 20:03:18.210834 30154 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:18.210839 30154 net.cpp:86] Creating Layer relu1
I0428 20:03:18.210844 30154 net.cpp:408] relu1 <- ip1
I0428 20:03:18.210850 30154 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:18.211012 30154 net.cpp:124] Setting up relu1
I0428 20:03:18.211020 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.211024 30154 net.cpp:139] Memory required for data: 6402800
I0428 20:03:18.211027 30154 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:18.211035 30154 net.cpp:86] Creating Layer ip2
I0428 20:03:18.211038 30154 net.cpp:408] ip2 <- ip1
I0428 20:03:18.211046 30154 net.cpp:382] ip2 -> ip2
I0428 20:03:18.211153 30154 net.cpp:124] Setting up ip2
I0428 20:03:18.211160 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.211163 30154 net.cpp:139] Memory required for data: 6406800
I0428 20:03:18.211169 30154 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:18.211174 30154 net.cpp:86] Creating Layer relu2
I0428 20:03:18.211176 30154 net.cpp:408] relu2 <- ip2
I0428 20:03:18.211180 30154 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:18.211360 30154 net.cpp:124] Setting up relu2
I0428 20:03:18.211369 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.211371 30154 net.cpp:139] Memory required for data: 6410800
I0428 20:03:18.211374 30154 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:18.211380 30154 net.cpp:86] Creating Layer ip3
I0428 20:03:18.211382 30154 net.cpp:408] ip3 <- ip2
I0428 20:03:18.211388 30154 net.cpp:382] ip3 -> ip3
I0428 20:03:18.211529 30154 net.cpp:124] Setting up ip3
I0428 20:03:18.211535 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.211539 30154 net.cpp:139] Memory required for data: 6414800
I0428 20:03:18.211546 30154 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:18.211552 30154 net.cpp:86] Creating Layer relu3
I0428 20:03:18.211555 30154 net.cpp:408] relu3 <- ip3
I0428 20:03:18.211560 30154 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:18.212359 30154 net.cpp:124] Setting up relu3
I0428 20:03:18.212371 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.212391 30154 net.cpp:139] Memory required for data: 6418800
I0428 20:03:18.212394 30154 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:18.212400 30154 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:18.212404 30154 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:18.212425 30154 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:18.212431 30154 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:18.212512 30154 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:18.212518 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.212522 30154 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:18.212541 30154 net.cpp:139] Memory required for data: 6426800
I0428 20:03:18.212544 30154 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:18.212549 30154 net.cpp:86] Creating Layer accuracy
I0428 20:03:18.212553 30154 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:18.212558 30154 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:18.212563 30154 net.cpp:382] accuracy -> accuracy
I0428 20:03:18.212582 30154 net.cpp:124] Setting up accuracy
I0428 20:03:18.212586 30154 net.cpp:131] Top shape: (1)
I0428 20:03:18.212589 30154 net.cpp:139] Memory required for data: 6426804
I0428 20:03:18.212592 30154 layer_factory.hpp:77] Creating layer loss
I0428 20:03:18.212597 30154 net.cpp:86] Creating Layer loss
I0428 20:03:18.212600 30154 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:18.212604 30154 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:18.212608 30154 net.cpp:382] loss -> loss
I0428 20:03:18.212615 30154 layer_factory.hpp:77] Creating layer loss
I0428 20:03:18.212935 30154 net.cpp:124] Setting up loss
I0428 20:03:18.212945 30154 net.cpp:131] Top shape: (1)
I0428 20:03:18.212960 30154 net.cpp:134]     with loss weight 1
I0428 20:03:18.212977 30154 net.cpp:139] Memory required for data: 6426808
I0428 20:03:18.212981 30154 net.cpp:200] loss needs backward computation.
I0428 20:03:18.212986 30154 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:18.212990 30154 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:18.212993 30154 net.cpp:200] relu3 needs backward computation.
I0428 20:03:18.213002 30154 net.cpp:200] ip3 needs backward computation.
I0428 20:03:18.213011 30154 net.cpp:200] relu2 needs backward computation.
I0428 20:03:18.213013 30154 net.cpp:200] ip2 needs backward computation.
I0428 20:03:18.213016 30154 net.cpp:200] relu1 needs backward computation.
I0428 20:03:18.213019 30154 net.cpp:200] ip1 needs backward computation.
I0428 20:03:18.213023 30154 net.cpp:200] pool1 needs backward computation.
I0428 20:03:18.213027 30154 net.cpp:200] conv1 needs backward computation.
I0428 20:03:18.213030 30154 net.cpp:200] pool0 needs backward computation.
I0428 20:03:18.213033 30154 net.cpp:200] conv0 needs backward computation.
I0428 20:03:18.213037 30154 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:18.213042 30154 net.cpp:202] mnist does not need backward computation.
I0428 20:03:18.213044 30154 net.cpp:244] This network produces output accuracy
I0428 20:03:18.213048 30154 net.cpp:244] This network produces output loss
I0428 20:03:18.213062 30154 net.cpp:257] Network initialization done.
I0428 20:03:18.213104 30154 solver.cpp:56] Solver scaffolding done.
I0428 20:03:18.213513 30154 caffe.cpp:248] Starting Optimization
I0428 20:03:18.213520 30154 solver.cpp:273] Solving LeNet
I0428 20:03:18.213521 30154 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:18.213765 30154 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:18.219749 30154 blocking_queue.cpp:49] Waiting for data
I0428 20:03:18.290165 30162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:18.290808 30154 solver.cpp:398]     Test net output #0: accuracy = 0.1373
I0428 20:03:18.290843 30154 solver.cpp:398]     Test net output #1: loss = 2.31539 (* 1 = 2.31539 loss)
I0428 20:03:18.294519 30154 solver.cpp:219] Iteration 0 (-1.00473e-42 iter/s, 0.0809411s/100 iters), loss = 2.32422
I0428 20:03:18.294560 30154 solver.cpp:238]     Train net output #0: loss = 2.32422 (* 1 = 2.32422 loss)
I0428 20:03:18.294571 30154 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:18.442339 30154 solver.cpp:219] Iteration 100 (676.763 iter/s, 0.147762s/100 iters), loss = 0.531622
I0428 20:03:18.442365 30154 solver.cpp:238]     Train net output #0: loss = 0.531622 (* 1 = 0.531622 loss)
I0428 20:03:18.442371 30154 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:18.592546 30154 solver.cpp:219] Iteration 200 (665.932 iter/s, 0.150165s/100 iters), loss = 0.345975
I0428 20:03:18.592586 30154 solver.cpp:238]     Train net output #0: loss = 0.345975 (* 1 = 0.345975 loss)
I0428 20:03:18.592591 30154 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:18.743129 30154 solver.cpp:219] Iteration 300 (664.242 iter/s, 0.150547s/100 iters), loss = 0.260427
I0428 20:03:18.743170 30154 solver.cpp:238]     Train net output #0: loss = 0.260427 (* 1 = 0.260427 loss)
I0428 20:03:18.743175 30154 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:18.889976 30154 solver.cpp:219] Iteration 400 (681.224 iter/s, 0.146794s/100 iters), loss = 0.201192
I0428 20:03:18.890014 30154 solver.cpp:238]     Train net output #0: loss = 0.201192 (* 1 = 0.201192 loss)
I0428 20:03:18.890020 30154 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:19.035038 30154 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:19.090243 30162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:19.092088 30154 solver.cpp:398]     Test net output #0: accuracy = 0.9507
I0428 20:03:19.092109 30154 solver.cpp:398]     Test net output #1: loss = 0.172578 (* 1 = 0.172578 loss)
I0428 20:03:19.093560 30154 solver.cpp:219] Iteration 500 (491.29 iter/s, 0.203546s/100 iters), loss = 0.138229
I0428 20:03:19.093628 30154 solver.cpp:238]     Train net output #0: loss = 0.138229 (* 1 = 0.138229 loss)
I0428 20:03:19.093636 30154 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:19.241549 30154 solver.cpp:219] Iteration 600 (676.023 iter/s, 0.147924s/100 iters), loss = 0.223265
I0428 20:03:19.241582 30154 solver.cpp:238]     Train net output #0: loss = 0.223264 (* 1 = 0.223264 loss)
I0428 20:03:19.241590 30154 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:19.388800 30154 solver.cpp:219] Iteration 700 (679.347 iter/s, 0.1472s/100 iters), loss = 0.190443
I0428 20:03:19.388846 30154 solver.cpp:238]     Train net output #0: loss = 0.190443 (* 1 = 0.190443 loss)
I0428 20:03:19.388854 30154 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:19.533524 30154 solver.cpp:219] Iteration 800 (691.171 iter/s, 0.144682s/100 iters), loss = 0.236883
I0428 20:03:19.533563 30154 solver.cpp:238]     Train net output #0: loss = 0.236882 (* 1 = 0.236882 loss)
I0428 20:03:19.533570 30154 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:19.679338 30154 solver.cpp:219] Iteration 900 (685.971 iter/s, 0.145779s/100 iters), loss = 0.150941
I0428 20:03:19.679375 30154 solver.cpp:238]     Train net output #0: loss = 0.15094 (* 1 = 0.15094 loss)
I0428 20:03:19.679381 30154 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:19.729909 30161 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:19.828009 30154 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:19.829779 30154 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:19.830700 30154 solver.cpp:311] Iteration 1000, loss = 0.162161
I0428 20:03:19.830715 30154 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:19.885009 30162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:19.886909 30154 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 20:03:19.886942 30154 solver.cpp:398]     Test net output #1: loss = 0.102495 (* 1 = 0.102495 loss)
I0428 20:03:19.886947 30154 solver.cpp:316] Optimization Done.
I0428 20:03:19.886950 30154 caffe.cpp:259] Optimization Done.
