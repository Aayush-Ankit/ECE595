I0428 19:33:53.064384 23225 caffe.cpp:218] Using GPUs 0
I0428 19:33:53.099051 23225 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:53.643285 23225 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test191.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:53.643434 23225 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test191.prototxt
I0428 19:33:53.643800 23225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:53.643816 23225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:53.643903 23225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:53.643975 23225 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:53.644071 23225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:53.644095 23225 net.cpp:86] Creating Layer mnist
I0428 19:33:53.644103 23225 net.cpp:382] mnist -> data
I0428 19:33:53.644125 23225 net.cpp:382] mnist -> label
I0428 19:33:53.645258 23225 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:53.647716 23225 net.cpp:124] Setting up mnist
I0428 19:33:53.647735 23225 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:53.647742 23225 net.cpp:131] Top shape: 64 (64)
I0428 19:33:53.647745 23225 net.cpp:139] Memory required for data: 200960
I0428 19:33:53.647752 23225 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:53.647800 23225 net.cpp:86] Creating Layer conv0
I0428 19:33:53.647806 23225 net.cpp:408] conv0 <- data
I0428 19:33:53.647819 23225 net.cpp:382] conv0 -> conv0
I0428 19:33:53.937999 23225 net.cpp:124] Setting up conv0
I0428 19:33:53.938027 23225 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:53.938032 23225 net.cpp:139] Memory required for data: 3887360
I0428 19:33:53.938050 23225 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:53.938064 23225 net.cpp:86] Creating Layer pool0
I0428 19:33:53.938092 23225 net.cpp:408] pool0 <- conv0
I0428 19:33:53.938099 23225 net.cpp:382] pool0 -> pool0
I0428 19:33:53.938156 23225 net.cpp:124] Setting up pool0
I0428 19:33:53.938163 23225 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:53.938168 23225 net.cpp:139] Memory required for data: 4808960
I0428 19:33:53.938171 23225 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:53.938184 23225 net.cpp:86] Creating Layer ip1
I0428 19:33:53.938187 23225 net.cpp:408] ip1 <- pool0
I0428 19:33:53.938194 23225 net.cpp:382] ip1 -> ip1
I0428 19:33:53.940505 23225 net.cpp:124] Setting up ip1
I0428 19:33:53.940521 23225 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:53.940524 23225 net.cpp:139] Memory required for data: 4821760
I0428 19:33:53.940534 23225 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:53.940542 23225 net.cpp:86] Creating Layer relu1
I0428 19:33:53.940546 23225 net.cpp:408] relu1 <- ip1
I0428 19:33:53.940552 23225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:53.940744 23225 net.cpp:124] Setting up relu1
I0428 19:33:53.940755 23225 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:53.940758 23225 net.cpp:139] Memory required for data: 4834560
I0428 19:33:53.940762 23225 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:53.940770 23225 net.cpp:86] Creating Layer ip2
I0428 19:33:53.940773 23225 net.cpp:408] ip2 <- ip1
I0428 19:33:53.940779 23225 net.cpp:382] ip2 -> ip2
I0428 19:33:53.941884 23225 net.cpp:124] Setting up ip2
I0428 19:33:53.941898 23225 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:53.941903 23225 net.cpp:139] Memory required for data: 4840960
I0428 19:33:53.941913 23225 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:53.941920 23225 net.cpp:86] Creating Layer relu2
I0428 19:33:53.941923 23225 net.cpp:408] relu2 <- ip2
I0428 19:33:53.941929 23225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:53.942781 23225 net.cpp:124] Setting up relu2
I0428 19:33:53.942795 23225 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:53.942800 23225 net.cpp:139] Memory required for data: 4847360
I0428 19:33:53.942804 23225 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:53.942812 23225 net.cpp:86] Creating Layer ip3
I0428 19:33:53.942816 23225 net.cpp:408] ip3 <- ip2
I0428 19:33:53.942822 23225 net.cpp:382] ip3 -> ip3
I0428 19:33:53.942932 23225 net.cpp:124] Setting up ip3
I0428 19:33:53.942941 23225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:53.942945 23225 net.cpp:139] Memory required for data: 4849920
I0428 19:33:53.942952 23225 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:53.942960 23225 net.cpp:86] Creating Layer relu3
I0428 19:33:53.942963 23225 net.cpp:408] relu3 <- ip3
I0428 19:33:53.942968 23225 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:53.943138 23225 net.cpp:124] Setting up relu3
I0428 19:33:53.943148 23225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:53.943152 23225 net.cpp:139] Memory required for data: 4852480
I0428 19:33:53.943156 23225 layer_factory.hpp:77] Creating layer loss
I0428 19:33:53.943163 23225 net.cpp:86] Creating Layer loss
I0428 19:33:53.943166 23225 net.cpp:408] loss <- ip3
I0428 19:33:53.943171 23225 net.cpp:408] loss <- label
I0428 19:33:53.943177 23225 net.cpp:382] loss -> loss
I0428 19:33:53.943198 23225 layer_factory.hpp:77] Creating layer loss
I0428 19:33:53.943464 23225 net.cpp:124] Setting up loss
I0428 19:33:53.943475 23225 net.cpp:131] Top shape: (1)
I0428 19:33:53.943478 23225 net.cpp:134]     with loss weight 1
I0428 19:33:53.943493 23225 net.cpp:139] Memory required for data: 4852484
I0428 19:33:53.943497 23225 net.cpp:200] loss needs backward computation.
I0428 19:33:53.943501 23225 net.cpp:200] relu3 needs backward computation.
I0428 19:33:53.943506 23225 net.cpp:200] ip3 needs backward computation.
I0428 19:33:53.943509 23225 net.cpp:200] relu2 needs backward computation.
I0428 19:33:53.943512 23225 net.cpp:200] ip2 needs backward computation.
I0428 19:33:53.943516 23225 net.cpp:200] relu1 needs backward computation.
I0428 19:33:53.943519 23225 net.cpp:200] ip1 needs backward computation.
I0428 19:33:53.943536 23225 net.cpp:200] pool0 needs backward computation.
I0428 19:33:53.943541 23225 net.cpp:200] conv0 needs backward computation.
I0428 19:33:53.943544 23225 net.cpp:202] mnist does not need backward computation.
I0428 19:33:53.943547 23225 net.cpp:244] This network produces output loss
I0428 19:33:53.943557 23225 net.cpp:257] Network initialization done.
I0428 19:33:53.943892 23225 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test191.prototxt
I0428 19:33:53.943922 23225 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:53.944013 23225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:53.944084 23225 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:53.944134 23225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:53.944147 23225 net.cpp:86] Creating Layer mnist
I0428 19:33:53.944154 23225 net.cpp:382] mnist -> data
I0428 19:33:53.944162 23225 net.cpp:382] mnist -> label
I0428 19:33:53.944259 23225 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:53.945698 23225 net.cpp:124] Setting up mnist
I0428 19:33:53.945713 23225 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:53.945719 23225 net.cpp:131] Top shape: 100 (100)
I0428 19:33:53.945724 23225 net.cpp:139] Memory required for data: 314000
I0428 19:33:53.945727 23225 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:53.945739 23225 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:53.945744 23225 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:53.945749 23225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:53.945757 23225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:53.945814 23225 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:53.945822 23225 net.cpp:131] Top shape: 100 (100)
I0428 19:33:53.945825 23225 net.cpp:131] Top shape: 100 (100)
I0428 19:33:53.945829 23225 net.cpp:139] Memory required for data: 314800
I0428 19:33:53.945843 23225 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:53.945854 23225 net.cpp:86] Creating Layer conv0
I0428 19:33:53.945858 23225 net.cpp:408] conv0 <- data
I0428 19:33:53.945864 23225 net.cpp:382] conv0 -> conv0
I0428 19:33:53.947710 23225 net.cpp:124] Setting up conv0
I0428 19:33:53.947727 23225 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:53.947731 23225 net.cpp:139] Memory required for data: 6074800
I0428 19:33:53.947742 23225 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:53.947751 23225 net.cpp:86] Creating Layer pool0
I0428 19:33:53.947754 23225 net.cpp:408] pool0 <- conv0
I0428 19:33:53.947762 23225 net.cpp:382] pool0 -> pool0
I0428 19:33:53.947801 23225 net.cpp:124] Setting up pool0
I0428 19:33:53.947808 23225 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:53.947810 23225 net.cpp:139] Memory required for data: 7514800
I0428 19:33:53.947814 23225 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:53.947823 23225 net.cpp:86] Creating Layer ip1
I0428 19:33:53.947825 23225 net.cpp:408] ip1 <- pool0
I0428 19:33:53.947831 23225 net.cpp:382] ip1 -> ip1
I0428 19:33:53.950109 23225 net.cpp:124] Setting up ip1
I0428 19:33:53.950125 23225 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:53.950129 23225 net.cpp:139] Memory required for data: 7534800
I0428 19:33:53.950148 23225 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:53.950155 23225 net.cpp:86] Creating Layer relu1
I0428 19:33:53.950160 23225 net.cpp:408] relu1 <- ip1
I0428 19:33:53.950165 23225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:53.950356 23225 net.cpp:124] Setting up relu1
I0428 19:33:53.950366 23225 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:53.950371 23225 net.cpp:139] Memory required for data: 7554800
I0428 19:33:53.950374 23225 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:53.950381 23225 net.cpp:86] Creating Layer ip2
I0428 19:33:53.950384 23225 net.cpp:408] ip2 <- ip1
I0428 19:33:53.950403 23225 net.cpp:382] ip2 -> ip2
I0428 19:33:53.950528 23225 net.cpp:124] Setting up ip2
I0428 19:33:53.950538 23225 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:53.950541 23225 net.cpp:139] Memory required for data: 7564800
I0428 19:33:53.950551 23225 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:53.950563 23225 net.cpp:86] Creating Layer relu2
I0428 19:33:53.950569 23225 net.cpp:408] relu2 <- ip2
I0428 19:33:53.950578 23225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:53.951493 23225 net.cpp:124] Setting up relu2
I0428 19:33:53.951508 23225 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:53.951511 23225 net.cpp:139] Memory required for data: 7574800
I0428 19:33:53.951515 23225 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:53.951524 23225 net.cpp:86] Creating Layer ip3
I0428 19:33:53.951529 23225 net.cpp:408] ip3 <- ip2
I0428 19:33:53.951535 23225 net.cpp:382] ip3 -> ip3
I0428 19:33:53.951664 23225 net.cpp:124] Setting up ip3
I0428 19:33:53.951673 23225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:53.951678 23225 net.cpp:139] Memory required for data: 7578800
I0428 19:33:53.951684 23225 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:53.951689 23225 net.cpp:86] Creating Layer relu3
I0428 19:33:53.951694 23225 net.cpp:408] relu3 <- ip3
I0428 19:33:53.951699 23225 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:53.951874 23225 net.cpp:124] Setting up relu3
I0428 19:33:53.951882 23225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:53.951886 23225 net.cpp:139] Memory required for data: 7582800
I0428 19:33:53.951890 23225 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:53.951903 23225 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:53.951906 23225 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:53.951918 23225 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:53.951925 23225 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:53.951963 23225 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:53.951969 23225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:53.951974 23225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:53.951990 23225 net.cpp:139] Memory required for data: 7590800
I0428 19:33:53.951995 23225 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:53.952002 23225 net.cpp:86] Creating Layer accuracy
I0428 19:33:53.952008 23225 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:53.952016 23225 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:53.952023 23225 net.cpp:382] accuracy -> accuracy
I0428 19:33:53.952031 23225 net.cpp:124] Setting up accuracy
I0428 19:33:53.952036 23225 net.cpp:131] Top shape: (1)
I0428 19:33:53.952040 23225 net.cpp:139] Memory required for data: 7590804
I0428 19:33:53.952044 23225 layer_factory.hpp:77] Creating layer loss
I0428 19:33:53.952049 23225 net.cpp:86] Creating Layer loss
I0428 19:33:53.952054 23225 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:53.952059 23225 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:53.952064 23225 net.cpp:382] loss -> loss
I0428 19:33:53.952070 23225 layer_factory.hpp:77] Creating layer loss
I0428 19:33:53.952330 23225 net.cpp:124] Setting up loss
I0428 19:33:53.952342 23225 net.cpp:131] Top shape: (1)
I0428 19:33:53.952345 23225 net.cpp:134]     with loss weight 1
I0428 19:33:53.952353 23225 net.cpp:139] Memory required for data: 7590808
I0428 19:33:53.952356 23225 net.cpp:200] loss needs backward computation.
I0428 19:33:53.952363 23225 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:53.952368 23225 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:53.952371 23225 net.cpp:200] relu3 needs backward computation.
I0428 19:33:53.952374 23225 net.cpp:200] ip3 needs backward computation.
I0428 19:33:53.952378 23225 net.cpp:200] relu2 needs backward computation.
I0428 19:33:53.952381 23225 net.cpp:200] ip2 needs backward computation.
I0428 19:33:53.952385 23225 net.cpp:200] relu1 needs backward computation.
I0428 19:33:53.952389 23225 net.cpp:200] ip1 needs backward computation.
I0428 19:33:53.952392 23225 net.cpp:200] pool0 needs backward computation.
I0428 19:33:53.952396 23225 net.cpp:200] conv0 needs backward computation.
I0428 19:33:53.952401 23225 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:53.952405 23225 net.cpp:202] mnist does not need backward computation.
I0428 19:33:53.952409 23225 net.cpp:244] This network produces output accuracy
I0428 19:33:53.952412 23225 net.cpp:244] This network produces output loss
I0428 19:33:53.952424 23225 net.cpp:257] Network initialization done.
I0428 19:33:53.952466 23225 solver.cpp:56] Solver scaffolding done.
I0428 19:33:53.952775 23225 caffe.cpp:248] Starting Optimization
I0428 19:33:53.952783 23225 solver.cpp:273] Solving LeNet
I0428 19:33:53.952788 23225 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:53.954413 23225 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:53.962400 23225 blocking_queue.cpp:49] Waiting for data
I0428 19:33:54.032001 23234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:54.032927 23225 solver.cpp:398]     Test net output #0: accuracy = 0.1283
I0428 19:33:54.032949 23225 solver.cpp:398]     Test net output #1: loss = 2.3016 (* 1 = 2.3016 loss)
I0428 19:33:54.036183 23225 solver.cpp:219] Iteration 0 (0 iter/s, 0.0833649s/100 iters), loss = 2.31678
I0428 19:33:54.036211 23225 solver.cpp:238]     Train net output #0: loss = 2.31678 (* 1 = 2.31678 loss)
I0428 19:33:54.036224 23225 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:54.142391 23225 solver.cpp:219] Iteration 100 (941.891 iter/s, 0.106169s/100 iters), loss = 0.642018
I0428 19:33:54.142423 23225 solver.cpp:238]     Train net output #0: loss = 0.642018 (* 1 = 0.642018 loss)
I0428 19:33:54.142431 23225 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:54.248229 23225 solver.cpp:219] Iteration 200 (945.256 iter/s, 0.105791s/100 iters), loss = 0.477803
I0428 19:33:54.248282 23225 solver.cpp:238]     Train net output #0: loss = 0.477803 (* 1 = 0.477803 loss)
I0428 19:33:54.248301 23225 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:54.358904 23225 solver.cpp:219] Iteration 300 (904.032 iter/s, 0.110616s/100 iters), loss = 0.633096
I0428 19:33:54.358954 23225 solver.cpp:238]     Train net output #0: loss = 0.633096 (* 1 = 0.633096 loss)
I0428 19:33:54.358964 23225 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:54.462345 23225 solver.cpp:219] Iteration 400 (967.229 iter/s, 0.103388s/100 iters), loss = 0.356086
I0428 19:33:54.462376 23225 solver.cpp:238]     Train net output #0: loss = 0.356086 (* 1 = 0.356086 loss)
I0428 19:33:54.462383 23225 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:54.565837 23225 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:54.643157 23234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:54.644085 23225 solver.cpp:398]     Test net output #0: accuracy = 0.8586
I0428 19:33:54.644107 23225 solver.cpp:398]     Test net output #1: loss = 0.396581 (* 1 = 0.396581 loss)
I0428 19:33:54.645171 23225 solver.cpp:219] Iteration 500 (547.125 iter/s, 0.182774s/100 iters), loss = 0.391113
I0428 19:33:54.645200 23225 solver.cpp:238]     Train net output #0: loss = 0.391113 (* 1 = 0.391113 loss)
I0428 19:33:54.645207 23225 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:54.751108 23225 solver.cpp:219] Iteration 600 (944.304 iter/s, 0.105898s/100 iters), loss = 0.227753
I0428 19:33:54.751140 23225 solver.cpp:238]     Train net output #0: loss = 0.227753 (* 1 = 0.227753 loss)
I0428 19:33:54.751148 23225 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:54.859686 23225 solver.cpp:219] Iteration 700 (921.374 iter/s, 0.108534s/100 iters), loss = 0.27327
I0428 19:33:54.859719 23225 solver.cpp:238]     Train net output #0: loss = 0.27327 (* 1 = 0.27327 loss)
I0428 19:33:54.859726 23225 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:54.963516 23225 solver.cpp:219] Iteration 800 (963.516 iter/s, 0.103786s/100 iters), loss = 0.594801
I0428 19:33:54.963548 23225 solver.cpp:238]     Train net output #0: loss = 0.594801 (* 1 = 0.594801 loss)
I0428 19:33:54.963557 23225 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:55.068282 23225 solver.cpp:219] Iteration 900 (954.896 iter/s, 0.104723s/100 iters), loss = 0.518841
I0428 19:33:55.068317 23225 solver.cpp:238]     Train net output #0: loss = 0.518841 (* 1 = 0.518841 loss)
I0428 19:33:55.068325 23225 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:55.102223 23233 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:55.172097 23225 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:55.176054 23225 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:55.178021 23225 solver.cpp:311] Iteration 1000, loss = 0.307925
I0428 19:33:55.178037 23225 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:55.244180 23234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:55.245088 23225 solver.cpp:398]     Test net output #0: accuracy = 0.871
I0428 19:33:55.245108 23225 solver.cpp:398]     Test net output #1: loss = 0.341339 (* 1 = 0.341339 loss)
I0428 19:33:55.245113 23225 solver.cpp:316] Optimization Done.
I0428 19:33:55.245131 23225 caffe.cpp:259] Optimization Done.
