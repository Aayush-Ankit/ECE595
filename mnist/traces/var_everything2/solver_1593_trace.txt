I0428 20:33:43.276160  4338 caffe.cpp:218] Using GPUs 0
I0428 20:33:43.308143  4338 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:43.805802  4338 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1593.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:43.805940  4338 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1593.prototxt
I0428 20:33:43.806295  4338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:43.806310  4338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:43.806392  4338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:43.806488  4338 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:43.806576  4338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:43.806596  4338 net.cpp:86] Creating Layer mnist
I0428 20:33:43.806604  4338 net.cpp:382] mnist -> data
I0428 20:33:43.806623  4338 net.cpp:382] mnist -> label
I0428 20:33:43.807667  4338 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:43.809862  4338 net.cpp:124] Setting up mnist
I0428 20:33:43.809876  4338 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:43.809882  4338 net.cpp:131] Top shape: 64 (64)
I0428 20:33:43.809885  4338 net.cpp:139] Memory required for data: 200960
I0428 20:33:43.809890  4338 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:43.809904  4338 net.cpp:86] Creating Layer conv0
I0428 20:33:43.809921  4338 net.cpp:408] conv0 <- data
I0428 20:33:43.809932  4338 net.cpp:382] conv0 -> conv0
I0428 20:33:44.038455  4338 net.cpp:124] Setting up conv0
I0428 20:33:44.038480  4338 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:44.038485  4338 net.cpp:139] Memory required for data: 14946560
I0428 20:33:44.038498  4338 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:44.038511  4338 net.cpp:86] Creating Layer pool0
I0428 20:33:44.038514  4338 net.cpp:408] pool0 <- conv0
I0428 20:33:44.038519  4338 net.cpp:382] pool0 -> pool0
I0428 20:33:44.038579  4338 net.cpp:124] Setting up pool0
I0428 20:33:44.038585  4338 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:44.038588  4338 net.cpp:139] Memory required for data: 18632960
I0428 20:33:44.038590  4338 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:44.038600  4338 net.cpp:86] Creating Layer conv1
I0428 20:33:44.038604  4338 net.cpp:408] conv1 <- pool0
I0428 20:33:44.038609  4338 net.cpp:382] conv1 -> conv1
I0428 20:33:44.040874  4338 net.cpp:124] Setting up conv1
I0428 20:33:44.040902  4338 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:44.040906  4338 net.cpp:139] Memory required for data: 19042560
I0428 20:33:44.040915  4338 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:44.040922  4338 net.cpp:86] Creating Layer pool1
I0428 20:33:44.040926  4338 net.cpp:408] pool1 <- conv1
I0428 20:33:44.040930  4338 net.cpp:382] pool1 -> pool1
I0428 20:33:44.040966  4338 net.cpp:124] Setting up pool1
I0428 20:33:44.040972  4338 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:44.040976  4338 net.cpp:139] Memory required for data: 19144960
I0428 20:33:44.040978  4338 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:44.040984  4338 net.cpp:86] Creating Layer ip1
I0428 20:33:44.040987  4338 net.cpp:408] ip1 <- pool1
I0428 20:33:44.040992  4338 net.cpp:382] ip1 -> ip1
I0428 20:33:44.041215  4338 net.cpp:124] Setting up ip1
I0428 20:33:44.041224  4338 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:44.041227  4338 net.cpp:139] Memory required for data: 19157760
I0428 20:33:44.041234  4338 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:44.041240  4338 net.cpp:86] Creating Layer relu1
I0428 20:33:44.041244  4338 net.cpp:408] relu1 <- ip1
I0428 20:33:44.041249  4338 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:44.041445  4338 net.cpp:124] Setting up relu1
I0428 20:33:44.041452  4338 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:44.041455  4338 net.cpp:139] Memory required for data: 19170560
I0428 20:33:44.041458  4338 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:44.041465  4338 net.cpp:86] Creating Layer ip2
I0428 20:33:44.041468  4338 net.cpp:408] ip2 <- ip1
I0428 20:33:44.041472  4338 net.cpp:382] ip2 -> ip2
I0428 20:33:44.041571  4338 net.cpp:124] Setting up ip2
I0428 20:33:44.041579  4338 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:44.041581  4338 net.cpp:139] Memory required for data: 19176960
I0428 20:33:44.041586  4338 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:44.041592  4338 net.cpp:86] Creating Layer relu2
I0428 20:33:44.041595  4338 net.cpp:408] relu2 <- ip2
I0428 20:33:44.041599  4338 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:44.042343  4338 net.cpp:124] Setting up relu2
I0428 20:33:44.042356  4338 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:44.042374  4338 net.cpp:139] Memory required for data: 19183360
I0428 20:33:44.042378  4338 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:44.042385  4338 net.cpp:86] Creating Layer ip3
I0428 20:33:44.042388  4338 net.cpp:408] ip3 <- ip2
I0428 20:33:44.042393  4338 net.cpp:382] ip3 -> ip3
I0428 20:33:44.042517  4338 net.cpp:124] Setting up ip3
I0428 20:33:44.042526  4338 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:44.042528  4338 net.cpp:139] Memory required for data: 19185920
I0428 20:33:44.042536  4338 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:44.042542  4338 net.cpp:86] Creating Layer relu3
I0428 20:33:44.042546  4338 net.cpp:408] relu3 <- ip3
I0428 20:33:44.042564  4338 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:44.042709  4338 net.cpp:124] Setting up relu3
I0428 20:33:44.042717  4338 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:44.042721  4338 net.cpp:139] Memory required for data: 19188480
I0428 20:33:44.042723  4338 layer_factory.hpp:77] Creating layer loss
I0428 20:33:44.042729  4338 net.cpp:86] Creating Layer loss
I0428 20:33:44.042732  4338 net.cpp:408] loss <- ip3
I0428 20:33:44.042737  4338 net.cpp:408] loss <- label
I0428 20:33:44.042742  4338 net.cpp:382] loss -> loss
I0428 20:33:44.042755  4338 layer_factory.hpp:77] Creating layer loss
I0428 20:33:44.042971  4338 net.cpp:124] Setting up loss
I0428 20:33:44.042979  4338 net.cpp:131] Top shape: (1)
I0428 20:33:44.042984  4338 net.cpp:134]     with loss weight 1
I0428 20:33:44.042997  4338 net.cpp:139] Memory required for data: 19188484
I0428 20:33:44.043000  4338 net.cpp:200] loss needs backward computation.
I0428 20:33:44.043004  4338 net.cpp:200] relu3 needs backward computation.
I0428 20:33:44.043007  4338 net.cpp:200] ip3 needs backward computation.
I0428 20:33:44.043010  4338 net.cpp:200] relu2 needs backward computation.
I0428 20:33:44.043014  4338 net.cpp:200] ip2 needs backward computation.
I0428 20:33:44.043016  4338 net.cpp:200] relu1 needs backward computation.
I0428 20:33:44.043020  4338 net.cpp:200] ip1 needs backward computation.
I0428 20:33:44.043022  4338 net.cpp:200] pool1 needs backward computation.
I0428 20:33:44.043025  4338 net.cpp:200] conv1 needs backward computation.
I0428 20:33:44.043028  4338 net.cpp:200] pool0 needs backward computation.
I0428 20:33:44.043031  4338 net.cpp:200] conv0 needs backward computation.
I0428 20:33:44.043035  4338 net.cpp:202] mnist does not need backward computation.
I0428 20:33:44.043037  4338 net.cpp:244] This network produces output loss
I0428 20:33:44.043045  4338 net.cpp:257] Network initialization done.
I0428 20:33:44.043442  4338 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1593.prototxt
I0428 20:33:44.043498  4338 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:44.043599  4338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:44.043673  4338 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:44.043717  4338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:44.043730  4338 net.cpp:86] Creating Layer mnist
I0428 20:33:44.043735  4338 net.cpp:382] mnist -> data
I0428 20:33:44.043741  4338 net.cpp:382] mnist -> label
I0428 20:33:44.043835  4338 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:44.045941  4338 net.cpp:124] Setting up mnist
I0428 20:33:44.045955  4338 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:44.045960  4338 net.cpp:131] Top shape: 100 (100)
I0428 20:33:44.045964  4338 net.cpp:139] Memory required for data: 314000
I0428 20:33:44.045967  4338 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:44.045974  4338 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:44.045977  4338 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:44.045982  4338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:44.045989  4338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:44.046053  4338 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:44.046058  4338 net.cpp:131] Top shape: 100 (100)
I0428 20:33:44.046062  4338 net.cpp:131] Top shape: 100 (100)
I0428 20:33:44.046064  4338 net.cpp:139] Memory required for data: 314800
I0428 20:33:44.046067  4338 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:44.046075  4338 net.cpp:86] Creating Layer conv0
I0428 20:33:44.046078  4338 net.cpp:408] conv0 <- data
I0428 20:33:44.046083  4338 net.cpp:382] conv0 -> conv0
I0428 20:33:44.047863  4338 net.cpp:124] Setting up conv0
I0428 20:33:44.047878  4338 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:44.047880  4338 net.cpp:139] Memory required for data: 23354800
I0428 20:33:44.047889  4338 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:44.047910  4338 net.cpp:86] Creating Layer pool0
I0428 20:33:44.047914  4338 net.cpp:408] pool0 <- conv0
I0428 20:33:44.047919  4338 net.cpp:382] pool0 -> pool0
I0428 20:33:44.047950  4338 net.cpp:124] Setting up pool0
I0428 20:33:44.047955  4338 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:44.047958  4338 net.cpp:139] Memory required for data: 29114800
I0428 20:33:44.047960  4338 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:44.047968  4338 net.cpp:86] Creating Layer conv1
I0428 20:33:44.047971  4338 net.cpp:408] conv1 <- pool0
I0428 20:33:44.047976  4338 net.cpp:382] conv1 -> conv1
I0428 20:33:44.050015  4338 net.cpp:124] Setting up conv1
I0428 20:33:44.050046  4338 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:44.050050  4338 net.cpp:139] Memory required for data: 29754800
I0428 20:33:44.050060  4338 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:44.050081  4338 net.cpp:86] Creating Layer pool1
I0428 20:33:44.050083  4338 net.cpp:408] pool1 <- conv1
I0428 20:33:44.050088  4338 net.cpp:382] pool1 -> pool1
I0428 20:33:44.050154  4338 net.cpp:124] Setting up pool1
I0428 20:33:44.050160  4338 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:44.050163  4338 net.cpp:139] Memory required for data: 29914800
I0428 20:33:44.050166  4338 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:44.050173  4338 net.cpp:86] Creating Layer ip1
I0428 20:33:44.050175  4338 net.cpp:408] ip1 <- pool1
I0428 20:33:44.050180  4338 net.cpp:382] ip1 -> ip1
I0428 20:33:44.050384  4338 net.cpp:124] Setting up ip1
I0428 20:33:44.050420  4338 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:44.050431  4338 net.cpp:139] Memory required for data: 29934800
I0428 20:33:44.050439  4338 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:44.050444  4338 net.cpp:86] Creating Layer relu1
I0428 20:33:44.050447  4338 net.cpp:408] relu1 <- ip1
I0428 20:33:44.050452  4338 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:44.050619  4338 net.cpp:124] Setting up relu1
I0428 20:33:44.050628  4338 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:44.050632  4338 net.cpp:139] Memory required for data: 29954800
I0428 20:33:44.050642  4338 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:44.050649  4338 net.cpp:86] Creating Layer ip2
I0428 20:33:44.050653  4338 net.cpp:408] ip2 <- ip1
I0428 20:33:44.050657  4338 net.cpp:382] ip2 -> ip2
I0428 20:33:44.050760  4338 net.cpp:124] Setting up ip2
I0428 20:33:44.050767  4338 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:44.050771  4338 net.cpp:139] Memory required for data: 29964800
I0428 20:33:44.050776  4338 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:44.050781  4338 net.cpp:86] Creating Layer relu2
I0428 20:33:44.050804  4338 net.cpp:408] relu2 <- ip2
I0428 20:33:44.050814  4338 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:44.051049  4338 net.cpp:124] Setting up relu2
I0428 20:33:44.051074  4338 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:44.051077  4338 net.cpp:139] Memory required for data: 29974800
I0428 20:33:44.051080  4338 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:44.051085  4338 net.cpp:86] Creating Layer ip3
I0428 20:33:44.051090  4338 net.cpp:408] ip3 <- ip2
I0428 20:33:44.051093  4338 net.cpp:382] ip3 -> ip3
I0428 20:33:44.051249  4338 net.cpp:124] Setting up ip3
I0428 20:33:44.051256  4338 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:44.051260  4338 net.cpp:139] Memory required for data: 29978800
I0428 20:33:44.051267  4338 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:44.051273  4338 net.cpp:86] Creating Layer relu3
I0428 20:33:44.051276  4338 net.cpp:408] relu3 <- ip3
I0428 20:33:44.051280  4338 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:44.052040  4338 net.cpp:124] Setting up relu3
I0428 20:33:44.052052  4338 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:44.052057  4338 net.cpp:139] Memory required for data: 29982800
I0428 20:33:44.052059  4338 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:44.052065  4338 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:44.052068  4338 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:44.052073  4338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:44.052080  4338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:44.052119  4338 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:44.052125  4338 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:44.052129  4338 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:44.052131  4338 net.cpp:139] Memory required for data: 29990800
I0428 20:33:44.052144  4338 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:44.052155  4338 net.cpp:86] Creating Layer accuracy
I0428 20:33:44.052157  4338 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:44.052161  4338 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:44.052165  4338 net.cpp:382] accuracy -> accuracy
I0428 20:33:44.052172  4338 net.cpp:124] Setting up accuracy
I0428 20:33:44.052177  4338 net.cpp:131] Top shape: (1)
I0428 20:33:44.052179  4338 net.cpp:139] Memory required for data: 29990804
I0428 20:33:44.052182  4338 layer_factory.hpp:77] Creating layer loss
I0428 20:33:44.052186  4338 net.cpp:86] Creating Layer loss
I0428 20:33:44.052189  4338 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:44.052193  4338 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:44.052197  4338 net.cpp:382] loss -> loss
I0428 20:33:44.052202  4338 layer_factory.hpp:77] Creating layer loss
I0428 20:33:44.052450  4338 net.cpp:124] Setting up loss
I0428 20:33:44.052459  4338 net.cpp:131] Top shape: (1)
I0428 20:33:44.052464  4338 net.cpp:134]     with loss weight 1
I0428 20:33:44.052477  4338 net.cpp:139] Memory required for data: 29990808
I0428 20:33:44.052482  4338 net.cpp:200] loss needs backward computation.
I0428 20:33:44.052486  4338 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:44.052489  4338 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:44.052492  4338 net.cpp:200] relu3 needs backward computation.
I0428 20:33:44.052501  4338 net.cpp:200] ip3 needs backward computation.
I0428 20:33:44.052505  4338 net.cpp:200] relu2 needs backward computation.
I0428 20:33:44.052507  4338 net.cpp:200] ip2 needs backward computation.
I0428 20:33:44.052510  4338 net.cpp:200] relu1 needs backward computation.
I0428 20:33:44.052531  4338 net.cpp:200] ip1 needs backward computation.
I0428 20:33:44.052533  4338 net.cpp:200] pool1 needs backward computation.
I0428 20:33:44.052536  4338 net.cpp:200] conv1 needs backward computation.
I0428 20:33:44.052539  4338 net.cpp:200] pool0 needs backward computation.
I0428 20:33:44.052542  4338 net.cpp:200] conv0 needs backward computation.
I0428 20:33:44.052546  4338 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:44.052566  4338 net.cpp:202] mnist does not need backward computation.
I0428 20:33:44.052567  4338 net.cpp:244] This network produces output accuracy
I0428 20:33:44.052570  4338 net.cpp:244] This network produces output loss
I0428 20:33:44.052582  4338 net.cpp:257] Network initialization done.
I0428 20:33:44.052621  4338 solver.cpp:56] Solver scaffolding done.
I0428 20:33:44.052971  4338 caffe.cpp:248] Starting Optimization
I0428 20:33:44.052979  4338 solver.cpp:273] Solving LeNet
I0428 20:33:44.052983  4338 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:44.053185  4338 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:44.152004  4345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:44.154500  4338 solver.cpp:398]     Test net output #0: accuracy = 0.0811
I0428 20:33:44.154518  4338 solver.cpp:398]     Test net output #1: loss = 2.31208 (* 1 = 2.31208 loss)
I0428 20:33:44.158840  4338 solver.cpp:219] Iteration 0 (-1.38008e-31 iter/s, 0.105832s/100 iters), loss = 2.31643
I0428 20:33:44.158864  4338 solver.cpp:238]     Train net output #0: loss = 2.31643 (* 1 = 2.31643 loss)
I0428 20:33:44.158875  4338 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:44.372790  4338 solver.cpp:219] Iteration 100 (467.486 iter/s, 0.21391s/100 iters), loss = 0.909075
I0428 20:33:44.372823  4338 solver.cpp:238]     Train net output #0: loss = 0.909075 (* 1 = 0.909075 loss)
I0428 20:33:44.372830  4338 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:44.590816  4338 solver.cpp:219] Iteration 200 (458.782 iter/s, 0.217969s/100 iters), loss = 0.712536
I0428 20:33:44.590873  4338 solver.cpp:238]     Train net output #0: loss = 0.712536 (* 1 = 0.712536 loss)
I0428 20:33:44.590885  4338 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:44.821142  4338 solver.cpp:219] Iteration 300 (434.313 iter/s, 0.230248s/100 iters), loss = 0.716999
I0428 20:33:44.821203  4338 solver.cpp:238]     Train net output #0: loss = 0.716999 (* 1 = 0.716999 loss)
I0428 20:33:44.821218  4338 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:45.053575  4338 solver.cpp:219] Iteration 400 (430.378 iter/s, 0.232354s/100 iters), loss = 0.457328
I0428 20:33:45.053630  4338 solver.cpp:238]     Train net output #0: loss = 0.457328 (* 1 = 0.457328 loss)
I0428 20:33:45.053643  4338 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:45.285918  4338 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:45.393690  4345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:45.396723  4338 solver.cpp:398]     Test net output #0: accuracy = 0.8761
I0428 20:33:45.396754  4338 solver.cpp:398]     Test net output #1: loss = 0.331233 (* 1 = 0.331233 loss)
I0428 20:33:45.398908  4338 solver.cpp:219] Iteration 500 (289.637 iter/s, 0.34526s/100 iters), loss = 0.345499
I0428 20:33:45.398938  4338 solver.cpp:238]     Train net output #0: loss = 0.345499 (* 1 = 0.345499 loss)
I0428 20:33:45.398967  4338 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:45.618898  4338 solver.cpp:219] Iteration 600 (454.666 iter/s, 0.219942s/100 iters), loss = 0.28879
I0428 20:33:45.618937  4338 solver.cpp:238]     Train net output #0: loss = 0.28879 (* 1 = 0.28879 loss)
I0428 20:33:45.618947  4338 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:45.837321  4338 solver.cpp:219] Iteration 700 (457.951 iter/s, 0.218364s/100 iters), loss = 0.217093
I0428 20:33:45.837359  4338 solver.cpp:238]     Train net output #0: loss = 0.217093 (* 1 = 0.217093 loss)
I0428 20:33:45.837369  4338 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:46.058727  4338 solver.cpp:219] Iteration 800 (451.767 iter/s, 0.221353s/100 iters), loss = 0.504742
I0428 20:33:46.058761  4338 solver.cpp:238]     Train net output #0: loss = 0.504742 (* 1 = 0.504742 loss)
I0428 20:33:46.058770  4338 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:46.273226  4338 solver.cpp:219] Iteration 900 (466.315 iter/s, 0.214447s/100 iters), loss = 0.353176
I0428 20:33:46.273257  4338 solver.cpp:238]     Train net output #0: loss = 0.353176 (* 1 = 0.353176 loss)
I0428 20:33:46.273265  4338 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:46.346685  4344 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:46.494030  4338 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:46.497117  4338 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:46.498972  4338 solver.cpp:311] Iteration 1000, loss = 0.307835
I0428 20:33:46.498996  4338 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:46.599268  4345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:46.602043  4338 solver.cpp:398]     Test net output #0: accuracy = 0.8818
I0428 20:33:46.602068  4338 solver.cpp:398]     Test net output #1: loss = 0.300375 (* 1 = 0.300375 loss)
I0428 20:33:46.602074  4338 solver.cpp:316] Optimization Done.
I0428 20:33:46.602078  4338 caffe.cpp:259] Optimization Done.
