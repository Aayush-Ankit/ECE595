I0428 19:42:27.172154 25071 caffe.cpp:218] Using GPUs 0
I0428 19:42:27.211644 25071 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:27.731776 25071 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test394.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:27.731912 25071 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test394.prototxt
I0428 19:42:27.732278 25071 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:27.732295 25071 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:27.732385 25071 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:27.732453 25071 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:27.732558 25071 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:27.732583 25071 net.cpp:86] Creating Layer mnist
I0428 19:42:27.732590 25071 net.cpp:382] mnist -> data
I0428 19:42:27.732612 25071 net.cpp:382] mnist -> label
I0428 19:42:27.733711 25071 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:27.736156 25071 net.cpp:124] Setting up mnist
I0428 19:42:27.736174 25071 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:27.736181 25071 net.cpp:131] Top shape: 64 (64)
I0428 19:42:27.736184 25071 net.cpp:139] Memory required for data: 200960
I0428 19:42:27.736192 25071 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:27.736209 25071 net.cpp:86] Creating Layer conv0
I0428 19:42:27.736214 25071 net.cpp:408] conv0 <- data
I0428 19:42:27.736227 25071 net.cpp:382] conv0 -> conv0
I0428 19:42:27.981012 25071 net.cpp:124] Setting up conv0
I0428 19:42:27.981055 25071 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:27.981058 25071 net.cpp:139] Memory required for data: 495872
I0428 19:42:27.981091 25071 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:27.981118 25071 net.cpp:86] Creating Layer pool0
I0428 19:42:27.981122 25071 net.cpp:408] pool0 <- conv0
I0428 19:42:27.981127 25071 net.cpp:382] pool0 -> pool0
I0428 19:42:27.981187 25071 net.cpp:124] Setting up pool0
I0428 19:42:27.981199 25071 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:27.981201 25071 net.cpp:139] Memory required for data: 569600
I0428 19:42:27.981204 25071 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:27.981215 25071 net.cpp:86] Creating Layer conv1
I0428 19:42:27.981217 25071 net.cpp:408] conv1 <- pool0
I0428 19:42:27.981221 25071 net.cpp:382] conv1 -> conv1
I0428 19:42:27.983886 25071 net.cpp:124] Setting up conv1
I0428 19:42:27.983899 25071 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:27.983903 25071 net.cpp:139] Memory required for data: 979200
I0428 19:42:27.983911 25071 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:27.983932 25071 net.cpp:86] Creating Layer pool1
I0428 19:42:27.983952 25071 net.cpp:408] pool1 <- conv1
I0428 19:42:27.983956 25071 net.cpp:382] pool1 -> pool1
I0428 19:42:27.983991 25071 net.cpp:124] Setting up pool1
I0428 19:42:27.984004 25071 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:27.984006 25071 net.cpp:139] Memory required for data: 1081600
I0428 19:42:27.984009 25071 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:27.984015 25071 net.cpp:86] Creating Layer ip1
I0428 19:42:27.984019 25071 net.cpp:408] ip1 <- pool1
I0428 19:42:27.984022 25071 net.cpp:382] ip1 -> ip1
I0428 19:42:27.984156 25071 net.cpp:124] Setting up ip1
I0428 19:42:27.984163 25071 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:27.984166 25071 net.cpp:139] Memory required for data: 1084160
I0428 19:42:27.984174 25071 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:27.984179 25071 net.cpp:86] Creating Layer relu1
I0428 19:42:27.984181 25071 net.cpp:408] relu1 <- ip1
I0428 19:42:27.984185 25071 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:27.984347 25071 net.cpp:124] Setting up relu1
I0428 19:42:27.984356 25071 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:27.984359 25071 net.cpp:139] Memory required for data: 1086720
I0428 19:42:27.984362 25071 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:27.984369 25071 net.cpp:86] Creating Layer ip2
I0428 19:42:27.984371 25071 net.cpp:408] ip2 <- ip1
I0428 19:42:27.984376 25071 net.cpp:382] ip2 -> ip2
I0428 19:42:27.984468 25071 net.cpp:124] Setting up ip2
I0428 19:42:27.984489 25071 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:27.984493 25071 net.cpp:139] Memory required for data: 1089280
I0428 19:42:27.984498 25071 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:27.984503 25071 net.cpp:86] Creating Layer relu2
I0428 19:42:27.984506 25071 net.cpp:408] relu2 <- ip2
I0428 19:42:27.984509 25071 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:27.985344 25071 net.cpp:124] Setting up relu2
I0428 19:42:27.985357 25071 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:27.985376 25071 net.cpp:139] Memory required for data: 1091840
I0428 19:42:27.985379 25071 layer_factory.hpp:77] Creating layer loss
I0428 19:42:27.985399 25071 net.cpp:86] Creating Layer loss
I0428 19:42:27.985404 25071 net.cpp:408] loss <- ip2
I0428 19:42:27.985407 25071 net.cpp:408] loss <- label
I0428 19:42:27.985412 25071 net.cpp:382] loss -> loss
I0428 19:42:27.985426 25071 layer_factory.hpp:77] Creating layer loss
I0428 19:42:27.985638 25071 net.cpp:124] Setting up loss
I0428 19:42:27.985647 25071 net.cpp:131] Top shape: (1)
I0428 19:42:27.985651 25071 net.cpp:134]     with loss weight 1
I0428 19:42:27.985664 25071 net.cpp:139] Memory required for data: 1091844
I0428 19:42:27.985667 25071 net.cpp:200] loss needs backward computation.
I0428 19:42:27.985671 25071 net.cpp:200] relu2 needs backward computation.
I0428 19:42:27.985673 25071 net.cpp:200] ip2 needs backward computation.
I0428 19:42:27.985677 25071 net.cpp:200] relu1 needs backward computation.
I0428 19:42:27.985678 25071 net.cpp:200] ip1 needs backward computation.
I0428 19:42:27.985682 25071 net.cpp:200] pool1 needs backward computation.
I0428 19:42:27.985694 25071 net.cpp:200] conv1 needs backward computation.
I0428 19:42:27.985697 25071 net.cpp:200] pool0 needs backward computation.
I0428 19:42:27.985700 25071 net.cpp:200] conv0 needs backward computation.
I0428 19:42:27.985703 25071 net.cpp:202] mnist does not need backward computation.
I0428 19:42:27.985705 25071 net.cpp:244] This network produces output loss
I0428 19:42:27.985713 25071 net.cpp:257] Network initialization done.
I0428 19:42:27.985998 25071 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test394.prototxt
I0428 19:42:27.986023 25071 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:27.986105 25071 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:27.986166 25071 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:27.986205 25071 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:27.986220 25071 net.cpp:86] Creating Layer mnist
I0428 19:42:27.986224 25071 net.cpp:382] mnist -> data
I0428 19:42:27.986232 25071 net.cpp:382] mnist -> label
I0428 19:42:27.986312 25071 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:27.988276 25071 net.cpp:124] Setting up mnist
I0428 19:42:27.988303 25071 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:27.988323 25071 net.cpp:131] Top shape: 100 (100)
I0428 19:42:27.988327 25071 net.cpp:139] Memory required for data: 314000
I0428 19:42:27.988332 25071 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:27.988337 25071 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:27.988340 25071 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:27.988345 25071 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:27.988351 25071 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:27.988435 25071 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:27.988452 25071 net.cpp:131] Top shape: 100 (100)
I0428 19:42:27.988456 25071 net.cpp:131] Top shape: 100 (100)
I0428 19:42:27.988458 25071 net.cpp:139] Memory required for data: 314800
I0428 19:42:27.988461 25071 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:27.988469 25071 net.cpp:86] Creating Layer conv0
I0428 19:42:27.988473 25071 net.cpp:408] conv0 <- data
I0428 19:42:27.988477 25071 net.cpp:382] conv0 -> conv0
I0428 19:42:27.990464 25071 net.cpp:124] Setting up conv0
I0428 19:42:27.990494 25071 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:27.990496 25071 net.cpp:139] Memory required for data: 775600
I0428 19:42:27.990504 25071 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:27.990527 25071 net.cpp:86] Creating Layer pool0
I0428 19:42:27.990531 25071 net.cpp:408] pool0 <- conv0
I0428 19:42:27.990535 25071 net.cpp:382] pool0 -> pool0
I0428 19:42:27.990571 25071 net.cpp:124] Setting up pool0
I0428 19:42:27.990576 25071 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:27.990578 25071 net.cpp:139] Memory required for data: 890800
I0428 19:42:27.990581 25071 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:27.990591 25071 net.cpp:86] Creating Layer conv1
I0428 19:42:27.990593 25071 net.cpp:408] conv1 <- pool0
I0428 19:42:27.990599 25071 net.cpp:382] conv1 -> conv1
I0428 19:42:27.992138 25071 net.cpp:124] Setting up conv1
I0428 19:42:27.992152 25071 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:27.992156 25071 net.cpp:139] Memory required for data: 1530800
I0428 19:42:27.992164 25071 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:27.992171 25071 net.cpp:86] Creating Layer pool1
I0428 19:42:27.992173 25071 net.cpp:408] pool1 <- conv1
I0428 19:42:27.992178 25071 net.cpp:382] pool1 -> pool1
I0428 19:42:27.992214 25071 net.cpp:124] Setting up pool1
I0428 19:42:27.992219 25071 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:27.992223 25071 net.cpp:139] Memory required for data: 1690800
I0428 19:42:27.992224 25071 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:27.992231 25071 net.cpp:86] Creating Layer ip1
I0428 19:42:27.992234 25071 net.cpp:408] ip1 <- pool1
I0428 19:42:27.992254 25071 net.cpp:382] ip1 -> ip1
I0428 19:42:27.992388 25071 net.cpp:124] Setting up ip1
I0428 19:42:27.992396 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.992421 25071 net.cpp:139] Memory required for data: 1694800
I0428 19:42:27.992429 25071 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:27.992435 25071 net.cpp:86] Creating Layer relu1
I0428 19:42:27.992439 25071 net.cpp:408] relu1 <- ip1
I0428 19:42:27.992442 25071 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:27.992609 25071 net.cpp:124] Setting up relu1
I0428 19:42:27.992619 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.992629 25071 net.cpp:139] Memory required for data: 1698800
I0428 19:42:27.992631 25071 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:27.992638 25071 net.cpp:86] Creating Layer ip2
I0428 19:42:27.992641 25071 net.cpp:408] ip2 <- ip1
I0428 19:42:27.992658 25071 net.cpp:382] ip2 -> ip2
I0428 19:42:27.992771 25071 net.cpp:124] Setting up ip2
I0428 19:42:27.992779 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.992780 25071 net.cpp:139] Memory required for data: 1702800
I0428 19:42:27.992785 25071 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:27.992791 25071 net.cpp:86] Creating Layer relu2
I0428 19:42:27.992794 25071 net.cpp:408] relu2 <- ip2
I0428 19:42:27.992799 25071 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:27.992990 25071 net.cpp:124] Setting up relu2
I0428 19:42:27.992998 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.993001 25071 net.cpp:139] Memory required for data: 1706800
I0428 19:42:27.993005 25071 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:27.993011 25071 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:27.993015 25071 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:27.993018 25071 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:27.993036 25071 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:27.993080 25071 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:27.993085 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.993089 25071 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:27.993093 25071 net.cpp:139] Memory required for data: 1714800
I0428 19:42:27.993100 25071 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:27.993106 25071 net.cpp:86] Creating Layer accuracy
I0428 19:42:27.993110 25071 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:27.993114 25071 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:27.993119 25071 net.cpp:382] accuracy -> accuracy
I0428 19:42:27.993137 25071 net.cpp:124] Setting up accuracy
I0428 19:42:27.993140 25071 net.cpp:131] Top shape: (1)
I0428 19:42:27.993144 25071 net.cpp:139] Memory required for data: 1714804
I0428 19:42:27.993146 25071 layer_factory.hpp:77] Creating layer loss
I0428 19:42:27.993152 25071 net.cpp:86] Creating Layer loss
I0428 19:42:27.993155 25071 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:27.993158 25071 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:27.993162 25071 net.cpp:382] loss -> loss
I0428 19:42:27.993167 25071 layer_factory.hpp:77] Creating layer loss
I0428 19:42:27.993469 25071 net.cpp:124] Setting up loss
I0428 19:42:27.993482 25071 net.cpp:131] Top shape: (1)
I0428 19:42:27.993485 25071 net.cpp:134]     with loss weight 1
I0428 19:42:27.993490 25071 net.cpp:139] Memory required for data: 1714808
I0428 19:42:27.993494 25071 net.cpp:200] loss needs backward computation.
I0428 19:42:27.993505 25071 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:27.993508 25071 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:27.993511 25071 net.cpp:200] relu2 needs backward computation.
I0428 19:42:27.993513 25071 net.cpp:200] ip2 needs backward computation.
I0428 19:42:27.993516 25071 net.cpp:200] relu1 needs backward computation.
I0428 19:42:27.993518 25071 net.cpp:200] ip1 needs backward computation.
I0428 19:42:27.993521 25071 net.cpp:200] pool1 needs backward computation.
I0428 19:42:27.993525 25071 net.cpp:200] conv1 needs backward computation.
I0428 19:42:27.993527 25071 net.cpp:200] pool0 needs backward computation.
I0428 19:42:27.993530 25071 net.cpp:200] conv0 needs backward computation.
I0428 19:42:27.993532 25071 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:27.993536 25071 net.cpp:202] mnist does not need backward computation.
I0428 19:42:27.993538 25071 net.cpp:244] This network produces output accuracy
I0428 19:42:27.993541 25071 net.cpp:244] This network produces output loss
I0428 19:42:27.993551 25071 net.cpp:257] Network initialization done.
I0428 19:42:27.993589 25071 solver.cpp:56] Solver scaffolding done.
I0428 19:42:27.993875 25071 caffe.cpp:248] Starting Optimization
I0428 19:42:27.993881 25071 solver.cpp:273] Solving LeNet
I0428 19:42:27.993883 25071 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:27.994007 25071 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:27.996677 25071 blocking_queue.cpp:49] Waiting for data
I0428 19:42:28.071339 25078 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:28.071764 25071 solver.cpp:398]     Test net output #0: accuracy = 0.1245
I0428 19:42:28.071784 25071 solver.cpp:398]     Test net output #1: loss = 2.29686 (* 1 = 2.29686 loss)
I0428 19:42:28.072893 25071 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789828s/100 iters), loss = 2.30191
I0428 19:42:28.072928 25071 solver.cpp:238]     Train net output #0: loss = 2.30191 (* 1 = 2.30191 loss)
I0428 19:42:28.072943 25071 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:28.161891 25071 solver.cpp:219] Iteration 100 (1124.26 iter/s, 0.0889471s/100 iters), loss = 1.0954
I0428 19:42:28.161917 25071 solver.cpp:238]     Train net output #0: loss = 1.0954 (* 1 = 1.0954 loss)
I0428 19:42:28.161923 25071 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:28.251117 25071 solver.cpp:219] Iteration 200 (1121.24 iter/s, 0.0891873s/100 iters), loss = 1.01247
I0428 19:42:28.251155 25071 solver.cpp:238]     Train net output #0: loss = 1.01247 (* 1 = 1.01247 loss)
I0428 19:42:28.251166 25071 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:28.337050 25071 solver.cpp:219] Iteration 300 (1164.58 iter/s, 0.0858675s/100 iters), loss = 1.25924
I0428 19:42:28.337079 25071 solver.cpp:238]     Train net output #0: loss = 1.25924 (* 1 = 1.25924 loss)
I0428 19:42:28.337102 25071 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:28.413733 25071 solver.cpp:219] Iteration 400 (1304.76 iter/s, 0.0766425s/100 iters), loss = 0.690017
I0428 19:42:28.413775 25071 solver.cpp:238]     Train net output #0: loss = 0.690017 (* 1 = 0.690017 loss)
I0428 19:42:28.413800 25071 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:28.489224 25071 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:28.563073 25078 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:28.563532 25071 solver.cpp:398]     Test net output #0: accuracy = 0.7617
I0428 19:42:28.563554 25071 solver.cpp:398]     Test net output #1: loss = 0.631758 (* 1 = 0.631758 loss)
I0428 19:42:28.564427 25071 solver.cpp:219] Iteration 500 (663.836 iter/s, 0.15064s/100 iters), loss = 0.624882
I0428 19:42:28.564450 25071 solver.cpp:238]     Train net output #0: loss = 0.624882 (* 1 = 0.624882 loss)
I0428 19:42:28.564457 25071 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:28.652451 25071 solver.cpp:219] Iteration 600 (1136.53 iter/s, 0.0879873s/100 iters), loss = 0.62187
I0428 19:42:28.652475 25071 solver.cpp:238]     Train net output #0: loss = 0.62187 (* 1 = 0.62187 loss)
I0428 19:42:28.652496 25071 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:28.739179 25071 solver.cpp:219] Iteration 700 (1153.57 iter/s, 0.0866877s/100 iters), loss = 0.484975
I0428 19:42:28.739219 25071 solver.cpp:238]     Train net output #0: loss = 0.484975 (* 1 = 0.484975 loss)
I0428 19:42:28.739230 25071 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:28.822860 25071 solver.cpp:219] Iteration 800 (1195.73 iter/s, 0.0836311s/100 iters), loss = 0.92504
I0428 19:42:28.822888 25071 solver.cpp:238]     Train net output #0: loss = 0.92504 (* 1 = 0.92504 loss)
I0428 19:42:28.822896 25071 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:28.907999 25071 solver.cpp:219] Iteration 900 (1175.09 iter/s, 0.0850995s/100 iters), loss = 0.686257
I0428 19:42:28.908026 25071 solver.cpp:238]     Train net output #0: loss = 0.686257 (* 1 = 0.686257 loss)
I0428 19:42:28.908049 25071 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:28.934373 25077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:28.983737 25071 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:28.984483 25071 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:28.984933 25071 solver.cpp:311] Iteration 1000, loss = 0.598041
I0428 19:42:28.984951 25071 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:29.058926 25078 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:29.059360 25071 solver.cpp:398]     Test net output #0: accuracy = 0.7777
I0428 19:42:29.059377 25071 solver.cpp:398]     Test net output #1: loss = 0.561279 (* 1 = 0.561279 loss)
I0428 19:42:29.059382 25071 solver.cpp:316] Optimization Done.
I0428 19:42:29.059392 25071 caffe.cpp:259] Optimization Done.
