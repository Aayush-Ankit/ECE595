I0428 19:47:42.399945 26262 caffe.cpp:218] Using GPUs 0
I0428 19:47:42.437635 26262 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:42.890861 26262 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test523.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:42.890986 26262 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test523.prototxt
I0428 19:47:42.891302 26262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:42.891316 26262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:42.891391 26262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:42.891449 26262 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:42.891535 26262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:42.891553 26262 net.cpp:86] Creating Layer mnist
I0428 19:47:42.891559 26262 net.cpp:382] mnist -> data
I0428 19:47:42.891577 26262 net.cpp:382] mnist -> label
I0428 19:47:42.892617 26262 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:42.894811 26262 net.cpp:124] Setting up mnist
I0428 19:47:42.894825 26262 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:42.894846 26262 net.cpp:131] Top shape: 64 (64)
I0428 19:47:42.894850 26262 net.cpp:139] Memory required for data: 200960
I0428 19:47:42.894855 26262 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:42.894867 26262 net.cpp:86] Creating Layer conv0
I0428 19:47:42.894901 26262 net.cpp:408] conv0 <- data
I0428 19:47:42.894912 26262 net.cpp:382] conv0 -> conv0
I0428 19:47:43.125880 26262 net.cpp:124] Setting up conv0
I0428 19:47:43.125905 26262 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:43.125908 26262 net.cpp:139] Memory required for data: 938240
I0428 19:47:43.125922 26262 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:43.125936 26262 net.cpp:86] Creating Layer pool0
I0428 19:47:43.125938 26262 net.cpp:408] pool0 <- conv0
I0428 19:47:43.125959 26262 net.cpp:382] pool0 -> pool0
I0428 19:47:43.126003 26262 net.cpp:124] Setting up pool0
I0428 19:47:43.126010 26262 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:43.126013 26262 net.cpp:139] Memory required for data: 1122560
I0428 19:47:43.126016 26262 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:43.126026 26262 net.cpp:86] Creating Layer conv1
I0428 19:47:43.126030 26262 net.cpp:408] conv1 <- pool0
I0428 19:47:43.126034 26262 net.cpp:382] conv1 -> conv1
I0428 19:47:43.127804 26262 net.cpp:124] Setting up conv1
I0428 19:47:43.127832 26262 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:43.127836 26262 net.cpp:139] Memory required for data: 1155328
I0428 19:47:43.127859 26262 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:43.127866 26262 net.cpp:86] Creating Layer pool1
I0428 19:47:43.127871 26262 net.cpp:408] pool1 <- conv1
I0428 19:47:43.127876 26262 net.cpp:382] pool1 -> pool1
I0428 19:47:43.127912 26262 net.cpp:124] Setting up pool1
I0428 19:47:43.127918 26262 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:43.127921 26262 net.cpp:139] Memory required for data: 1163520
I0428 19:47:43.127923 26262 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:43.127930 26262 net.cpp:86] Creating Layer ip1
I0428 19:47:43.127933 26262 net.cpp:408] ip1 <- pool1
I0428 19:47:43.127938 26262 net.cpp:382] ip1 -> ip1
I0428 19:47:43.128031 26262 net.cpp:124] Setting up ip1
I0428 19:47:43.128038 26262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:43.128041 26262 net.cpp:139] Memory required for data: 1166080
I0428 19:47:43.128048 26262 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:43.128053 26262 net.cpp:86] Creating Layer relu1
I0428 19:47:43.128057 26262 net.cpp:408] relu1 <- ip1
I0428 19:47:43.128060 26262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:43.128219 26262 net.cpp:124] Setting up relu1
I0428 19:47:43.128228 26262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:43.128232 26262 net.cpp:139] Memory required for data: 1168640
I0428 19:47:43.128234 26262 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:43.128240 26262 net.cpp:86] Creating Layer ip2
I0428 19:47:43.128243 26262 net.cpp:408] ip2 <- ip1
I0428 19:47:43.128248 26262 net.cpp:382] ip2 -> ip2
I0428 19:47:43.128350 26262 net.cpp:124] Setting up ip2
I0428 19:47:43.128356 26262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:43.128360 26262 net.cpp:139] Memory required for data: 1175040
I0428 19:47:43.128365 26262 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:43.128371 26262 net.cpp:86] Creating Layer relu2
I0428 19:47:43.128373 26262 net.cpp:408] relu2 <- ip2
I0428 19:47:43.128377 26262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:43.129165 26262 net.cpp:124] Setting up relu2
I0428 19:47:43.129179 26262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:43.129199 26262 net.cpp:139] Memory required for data: 1181440
I0428 19:47:43.129201 26262 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:43.129209 26262 net.cpp:86] Creating Layer ip3
I0428 19:47:43.129227 26262 net.cpp:408] ip3 <- ip2
I0428 19:47:43.129232 26262 net.cpp:382] ip3 -> ip3
I0428 19:47:43.129324 26262 net.cpp:124] Setting up ip3
I0428 19:47:43.129333 26262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:43.129334 26262 net.cpp:139] Memory required for data: 1184000
I0428 19:47:43.129343 26262 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:43.129348 26262 net.cpp:86] Creating Layer relu3
I0428 19:47:43.129350 26262 net.cpp:408] relu3 <- ip3
I0428 19:47:43.129354 26262 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:43.129524 26262 net.cpp:124] Setting up relu3
I0428 19:47:43.129534 26262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:43.129536 26262 net.cpp:139] Memory required for data: 1186560
I0428 19:47:43.129539 26262 layer_factory.hpp:77] Creating layer loss
I0428 19:47:43.129545 26262 net.cpp:86] Creating Layer loss
I0428 19:47:43.129549 26262 net.cpp:408] loss <- ip3
I0428 19:47:43.129552 26262 net.cpp:408] loss <- label
I0428 19:47:43.129557 26262 net.cpp:382] loss -> loss
I0428 19:47:43.129575 26262 layer_factory.hpp:77] Creating layer loss
I0428 19:47:43.129803 26262 net.cpp:124] Setting up loss
I0428 19:47:43.129812 26262 net.cpp:131] Top shape: (1)
I0428 19:47:43.129815 26262 net.cpp:134]     with loss weight 1
I0428 19:47:43.129828 26262 net.cpp:139] Memory required for data: 1186564
I0428 19:47:43.129832 26262 net.cpp:200] loss needs backward computation.
I0428 19:47:43.129835 26262 net.cpp:200] relu3 needs backward computation.
I0428 19:47:43.129838 26262 net.cpp:200] ip3 needs backward computation.
I0428 19:47:43.129842 26262 net.cpp:200] relu2 needs backward computation.
I0428 19:47:43.129844 26262 net.cpp:200] ip2 needs backward computation.
I0428 19:47:43.129848 26262 net.cpp:200] relu1 needs backward computation.
I0428 19:47:43.129850 26262 net.cpp:200] ip1 needs backward computation.
I0428 19:47:43.129853 26262 net.cpp:200] pool1 needs backward computation.
I0428 19:47:43.129856 26262 net.cpp:200] conv1 needs backward computation.
I0428 19:47:43.129859 26262 net.cpp:200] pool0 needs backward computation.
I0428 19:47:43.129861 26262 net.cpp:200] conv0 needs backward computation.
I0428 19:47:43.129865 26262 net.cpp:202] mnist does not need backward computation.
I0428 19:47:43.129868 26262 net.cpp:244] This network produces output loss
I0428 19:47:43.129875 26262 net.cpp:257] Network initialization done.
I0428 19:47:43.130223 26262 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test523.prototxt
I0428 19:47:43.130264 26262 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:43.130367 26262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:43.130442 26262 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:43.130486 26262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:43.130499 26262 net.cpp:86] Creating Layer mnist
I0428 19:47:43.130503 26262 net.cpp:382] mnist -> data
I0428 19:47:43.130511 26262 net.cpp:382] mnist -> label
I0428 19:47:43.130620 26262 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:43.132537 26262 net.cpp:124] Setting up mnist
I0428 19:47:43.132565 26262 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:43.132586 26262 net.cpp:131] Top shape: 100 (100)
I0428 19:47:43.132589 26262 net.cpp:139] Memory required for data: 314000
I0428 19:47:43.132592 26262 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:43.132599 26262 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:43.132602 26262 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:43.132607 26262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:43.132613 26262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:43.132655 26262 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:43.132663 26262 net.cpp:131] Top shape: 100 (100)
I0428 19:47:43.132665 26262 net.cpp:131] Top shape: 100 (100)
I0428 19:47:43.132668 26262 net.cpp:139] Memory required for data: 314800
I0428 19:47:43.132671 26262 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:43.132690 26262 net.cpp:86] Creating Layer conv0
I0428 19:47:43.132701 26262 net.cpp:408] conv0 <- data
I0428 19:47:43.132706 26262 net.cpp:382] conv0 -> conv0
I0428 19:47:43.134413 26262 net.cpp:124] Setting up conv0
I0428 19:47:43.134441 26262 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:43.134445 26262 net.cpp:139] Memory required for data: 1466800
I0428 19:47:43.134454 26262 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:43.134460 26262 net.cpp:86] Creating Layer pool0
I0428 19:47:43.134464 26262 net.cpp:408] pool0 <- conv0
I0428 19:47:43.134479 26262 net.cpp:382] pool0 -> pool0
I0428 19:47:43.134541 26262 net.cpp:124] Setting up pool0
I0428 19:47:43.134548 26262 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:43.134552 26262 net.cpp:139] Memory required for data: 1754800
I0428 19:47:43.134554 26262 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:43.134562 26262 net.cpp:86] Creating Layer conv1
I0428 19:47:43.134565 26262 net.cpp:408] conv1 <- pool0
I0428 19:47:43.134570 26262 net.cpp:382] conv1 -> conv1
I0428 19:47:43.136577 26262 net.cpp:124] Setting up conv1
I0428 19:47:43.136606 26262 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:43.136610 26262 net.cpp:139] Memory required for data: 1806000
I0428 19:47:43.136620 26262 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:43.136626 26262 net.cpp:86] Creating Layer pool1
I0428 19:47:43.136641 26262 net.cpp:408] pool1 <- conv1
I0428 19:47:43.136646 26262 net.cpp:382] pool1 -> pool1
I0428 19:47:43.136699 26262 net.cpp:124] Setting up pool1
I0428 19:47:43.136708 26262 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:43.136710 26262 net.cpp:139] Memory required for data: 1818800
I0428 19:47:43.136713 26262 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:43.136719 26262 net.cpp:86] Creating Layer ip1
I0428 19:47:43.136723 26262 net.cpp:408] ip1 <- pool1
I0428 19:47:43.136728 26262 net.cpp:382] ip1 -> ip1
I0428 19:47:43.136884 26262 net.cpp:124] Setting up ip1
I0428 19:47:43.136893 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.136909 26262 net.cpp:139] Memory required for data: 1822800
I0428 19:47:43.136917 26262 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:43.136922 26262 net.cpp:86] Creating Layer relu1
I0428 19:47:43.136926 26262 net.cpp:408] relu1 <- ip1
I0428 19:47:43.136931 26262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:43.137105 26262 net.cpp:124] Setting up relu1
I0428 19:47:43.137115 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.137118 26262 net.cpp:139] Memory required for data: 1826800
I0428 19:47:43.137122 26262 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:43.137130 26262 net.cpp:86] Creating Layer ip2
I0428 19:47:43.137147 26262 net.cpp:408] ip2 <- ip1
I0428 19:47:43.137152 26262 net.cpp:382] ip2 -> ip2
I0428 19:47:43.137253 26262 net.cpp:124] Setting up ip2
I0428 19:47:43.137260 26262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:43.137264 26262 net.cpp:139] Memory required for data: 1836800
I0428 19:47:43.137269 26262 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:43.137274 26262 net.cpp:86] Creating Layer relu2
I0428 19:47:43.137291 26262 net.cpp:408] relu2 <- ip2
I0428 19:47:43.137295 26262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:43.137445 26262 net.cpp:124] Setting up relu2
I0428 19:47:43.137455 26262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:43.137459 26262 net.cpp:139] Memory required for data: 1846800
I0428 19:47:43.137461 26262 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:43.137476 26262 net.cpp:86] Creating Layer ip3
I0428 19:47:43.137480 26262 net.cpp:408] ip3 <- ip2
I0428 19:47:43.137485 26262 net.cpp:382] ip3 -> ip3
I0428 19:47:43.137589 26262 net.cpp:124] Setting up ip3
I0428 19:47:43.137596 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.137599 26262 net.cpp:139] Memory required for data: 1850800
I0428 19:47:43.137609 26262 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:43.137612 26262 net.cpp:86] Creating Layer relu3
I0428 19:47:43.137615 26262 net.cpp:408] relu3 <- ip3
I0428 19:47:43.137619 26262 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:43.138433 26262 net.cpp:124] Setting up relu3
I0428 19:47:43.138444 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.138464 26262 net.cpp:139] Memory required for data: 1854800
I0428 19:47:43.138468 26262 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:43.138474 26262 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:43.138478 26262 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:43.138484 26262 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:43.138490 26262 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:43.138541 26262 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:43.138550 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.138553 26262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:43.138556 26262 net.cpp:139] Memory required for data: 1862800
I0428 19:47:43.138559 26262 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:43.138566 26262 net.cpp:86] Creating Layer accuracy
I0428 19:47:43.138569 26262 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:43.138574 26262 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:43.138579 26262 net.cpp:382] accuracy -> accuracy
I0428 19:47:43.138586 26262 net.cpp:124] Setting up accuracy
I0428 19:47:43.138591 26262 net.cpp:131] Top shape: (1)
I0428 19:47:43.138594 26262 net.cpp:139] Memory required for data: 1862804
I0428 19:47:43.138597 26262 layer_factory.hpp:77] Creating layer loss
I0428 19:47:43.138602 26262 net.cpp:86] Creating Layer loss
I0428 19:47:43.138604 26262 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:43.138608 26262 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:43.138612 26262 net.cpp:382] loss -> loss
I0428 19:47:43.138618 26262 layer_factory.hpp:77] Creating layer loss
I0428 19:47:43.138885 26262 net.cpp:124] Setting up loss
I0428 19:47:43.138911 26262 net.cpp:131] Top shape: (1)
I0428 19:47:43.138913 26262 net.cpp:134]     with loss weight 1
I0428 19:47:43.138936 26262 net.cpp:139] Memory required for data: 1862808
I0428 19:47:43.138948 26262 net.cpp:200] loss needs backward computation.
I0428 19:47:43.138952 26262 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:43.138957 26262 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:43.138959 26262 net.cpp:200] relu3 needs backward computation.
I0428 19:47:43.138962 26262 net.cpp:200] ip3 needs backward computation.
I0428 19:47:43.138965 26262 net.cpp:200] relu2 needs backward computation.
I0428 19:47:43.138968 26262 net.cpp:200] ip2 needs backward computation.
I0428 19:47:43.138972 26262 net.cpp:200] relu1 needs backward computation.
I0428 19:47:43.138974 26262 net.cpp:200] ip1 needs backward computation.
I0428 19:47:43.138978 26262 net.cpp:200] pool1 needs backward computation.
I0428 19:47:43.138980 26262 net.cpp:200] conv1 needs backward computation.
I0428 19:47:43.138984 26262 net.cpp:200] pool0 needs backward computation.
I0428 19:47:43.138988 26262 net.cpp:200] conv0 needs backward computation.
I0428 19:47:43.138991 26262 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:43.139014 26262 net.cpp:202] mnist does not need backward computation.
I0428 19:47:43.139015 26262 net.cpp:244] This network produces output accuracy
I0428 19:47:43.139019 26262 net.cpp:244] This network produces output loss
I0428 19:47:43.139030 26262 net.cpp:257] Network initialization done.
I0428 19:47:43.139082 26262 solver.cpp:56] Solver scaffolding done.
I0428 19:47:43.139468 26262 caffe.cpp:248] Starting Optimization
I0428 19:47:43.139474 26262 solver.cpp:273] Solving LeNet
I0428 19:47:43.139477 26262 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:43.140316 26262 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:43.143887 26262 blocking_queue.cpp:49] Waiting for data
I0428 19:47:43.207056 26269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:43.207556 26262 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 19:47:43.207574 26262 solver.cpp:398]     Test net output #1: loss = 2.33574 (* 1 = 2.33574 loss)
I0428 19:47:43.209542 26262 solver.cpp:219] Iteration 0 (0 iter/s, 0.0700211s/100 iters), loss = 2.33332
I0428 19:47:43.209580 26262 solver.cpp:238]     Train net output #0: loss = 2.33332 (* 1 = 2.33332 loss)
I0428 19:47:43.209591 26262 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:43.280339 26262 solver.cpp:219] Iteration 100 (1413.48 iter/s, 0.0707471s/100 iters), loss = 2.03745
I0428 19:47:43.280378 26262 solver.cpp:238]     Train net output #0: loss = 2.03745 (* 1 = 2.03745 loss)
I0428 19:47:43.280385 26262 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:43.349053 26262 solver.cpp:219] Iteration 200 (1455.99 iter/s, 0.0686817s/100 iters), loss = 1.52602
I0428 19:47:43.349093 26262 solver.cpp:238]     Train net output #0: loss = 1.52602 (* 1 = 1.52602 loss)
I0428 19:47:43.349099 26262 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:43.417039 26262 solver.cpp:219] Iteration 300 (1471.59 iter/s, 0.0679537s/100 iters), loss = 1.48212
I0428 19:47:43.417078 26262 solver.cpp:238]     Train net output #0: loss = 1.48212 (* 1 = 1.48212 loss)
I0428 19:47:43.417084 26262 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:43.485086 26262 solver.cpp:219] Iteration 400 (1470.26 iter/s, 0.0680151s/100 iters), loss = 1.21332
I0428 19:47:43.485126 26262 solver.cpp:238]     Train net output #0: loss = 1.21332 (* 1 = 1.21332 loss)
I0428 19:47:43.485147 26262 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:43.553145 26262 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:43.603143 26269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:43.603655 26262 solver.cpp:398]     Test net output #0: accuracy = 0.4862
I0428 19:47:43.603689 26262 solver.cpp:398]     Test net output #1: loss = 1.29874 (* 1 = 1.29874 loss)
I0428 19:47:43.604504 26262 solver.cpp:219] Iteration 500 (837.762 iter/s, 0.119366s/100 iters), loss = 1.3082
I0428 19:47:43.604578 26262 solver.cpp:238]     Train net output #0: loss = 1.3082 (* 1 = 1.3082 loss)
I0428 19:47:43.604600 26262 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:43.676841 26262 solver.cpp:219] Iteration 600 (1383.97 iter/s, 0.0722558s/100 iters), loss = 1.36856
I0428 19:47:43.676880 26262 solver.cpp:238]     Train net output #0: loss = 1.36856 (* 1 = 1.36856 loss)
I0428 19:47:43.676887 26262 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:43.747092 26262 solver.cpp:219] Iteration 700 (1424.1 iter/s, 0.0702197s/100 iters), loss = 1.28523
I0428 19:47:43.747114 26262 solver.cpp:238]     Train net output #0: loss = 1.28523 (* 1 = 1.28523 loss)
I0428 19:47:43.747120 26262 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:43.818972 26262 solver.cpp:219] Iteration 800 (1391.79 iter/s, 0.0718499s/100 iters), loss = 1.50353
I0428 19:47:43.819010 26262 solver.cpp:238]     Train net output #0: loss = 1.50353 (* 1 = 1.50353 loss)
I0428 19:47:43.819016 26262 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:43.889873 26262 solver.cpp:219] Iteration 900 (1411.07 iter/s, 0.070868s/100 iters), loss = 1.53753
I0428 19:47:43.889914 26262 solver.cpp:238]     Train net output #0: loss = 1.53753 (* 1 = 1.53753 loss)
I0428 19:47:43.889919 26262 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:43.913789 26268 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:43.960155 26262 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:43.960822 26262 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:43.961261 26262 solver.cpp:311] Iteration 1000, loss = 1.30058
I0428 19:47:43.961290 26262 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:44.037194 26269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:44.037703 26262 solver.cpp:398]     Test net output #0: accuracy = 0.4901
I0428 19:47:44.037726 26262 solver.cpp:398]     Test net output #1: loss = 1.25433 (* 1 = 1.25433 loss)
I0428 19:47:44.037731 26262 solver.cpp:316] Optimization Done.
I0428 19:47:44.037734 26262 caffe.cpp:259] Optimization Done.
