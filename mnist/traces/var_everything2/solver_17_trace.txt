I0428 19:28:11.432272 21558 caffe.cpp:218] Using GPUs 0
I0428 19:28:11.470438 21558 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:11.979898 21558 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test17.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:11.980039 21558 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test17.prototxt
I0428 19:28:11.980351 21558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:11.980365 21558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:11.980437 21558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:11.980505 21558 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:11.980607 21558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:11.980629 21558 net.cpp:86] Creating Layer mnist
I0428 19:28:11.980639 21558 net.cpp:382] mnist -> data
I0428 19:28:11.980662 21558 net.cpp:382] mnist -> label
I0428 19:28:11.981775 21558 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:11.984251 21558 net.cpp:124] Setting up mnist
I0428 19:28:11.984269 21558 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:11.984277 21558 net.cpp:131] Top shape: 64 (64)
I0428 19:28:11.984280 21558 net.cpp:139] Memory required for data: 200960
I0428 19:28:11.984287 21558 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:11.984297 21558 net.cpp:86] Creating Layer ip1
I0428 19:28:11.984304 21558 net.cpp:408] ip1 <- data
I0428 19:28:11.984314 21558 net.cpp:382] ip1 -> ip1
I0428 19:28:11.985553 21558 net.cpp:124] Setting up ip1
I0428 19:28:11.985569 21558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:11.985572 21558 net.cpp:139] Memory required for data: 203520
I0428 19:28:11.985585 21558 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:11.985595 21558 net.cpp:86] Creating Layer relu1
I0428 19:28:11.985600 21558 net.cpp:408] relu1 <- ip1
I0428 19:28:11.985605 21558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:12.275188 21558 net.cpp:124] Setting up relu1
I0428 19:28:12.275220 21558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:12.275225 21558 net.cpp:139] Memory required for data: 206080
I0428 19:28:12.275233 21558 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:12.275246 21558 net.cpp:86] Creating Layer ip2
I0428 19:28:12.275272 21558 net.cpp:408] ip2 <- ip1
I0428 19:28:12.275282 21558 net.cpp:382] ip2 -> ip2
I0428 19:28:12.275427 21558 net.cpp:124] Setting up ip2
I0428 19:28:12.275437 21558 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:12.275441 21558 net.cpp:139] Memory required for data: 212480
I0428 19:28:12.275452 21558 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:12.275462 21558 net.cpp:86] Creating Layer relu2
I0428 19:28:12.275467 21558 net.cpp:408] relu2 <- ip2
I0428 19:28:12.275471 21558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:12.276389 21558 net.cpp:124] Setting up relu2
I0428 19:28:12.276412 21558 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:12.276417 21558 net.cpp:139] Memory required for data: 218880
I0428 19:28:12.276420 21558 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:12.276430 21558 net.cpp:86] Creating Layer ip3
I0428 19:28:12.276434 21558 net.cpp:408] ip3 <- ip2
I0428 19:28:12.276440 21558 net.cpp:382] ip3 -> ip3
I0428 19:28:12.276563 21558 net.cpp:124] Setting up ip3
I0428 19:28:12.276572 21558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:12.276576 21558 net.cpp:139] Memory required for data: 221440
I0428 19:28:12.276587 21558 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:12.276593 21558 net.cpp:86] Creating Layer relu3
I0428 19:28:12.276597 21558 net.cpp:408] relu3 <- ip3
I0428 19:28:12.276602 21558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:12.276787 21558 net.cpp:124] Setting up relu3
I0428 19:28:12.276798 21558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:12.276801 21558 net.cpp:139] Memory required for data: 224000
I0428 19:28:12.276804 21558 layer_factory.hpp:77] Creating layer loss
I0428 19:28:12.276818 21558 net.cpp:86] Creating Layer loss
I0428 19:28:12.276823 21558 net.cpp:408] loss <- ip3
I0428 19:28:12.276826 21558 net.cpp:408] loss <- label
I0428 19:28:12.276834 21558 net.cpp:382] loss -> loss
I0428 19:28:12.276855 21558 layer_factory.hpp:77] Creating layer loss
I0428 19:28:12.278141 21558 net.cpp:124] Setting up loss
I0428 19:28:12.278156 21558 net.cpp:131] Top shape: (1)
I0428 19:28:12.278159 21558 net.cpp:134]     with loss weight 1
I0428 19:28:12.278177 21558 net.cpp:139] Memory required for data: 224004
I0428 19:28:12.278180 21558 net.cpp:200] loss needs backward computation.
I0428 19:28:12.278185 21558 net.cpp:200] relu3 needs backward computation.
I0428 19:28:12.278189 21558 net.cpp:200] ip3 needs backward computation.
I0428 19:28:12.278192 21558 net.cpp:200] relu2 needs backward computation.
I0428 19:28:12.278195 21558 net.cpp:200] ip2 needs backward computation.
I0428 19:28:12.278200 21558 net.cpp:200] relu1 needs backward computation.
I0428 19:28:12.278203 21558 net.cpp:200] ip1 needs backward computation.
I0428 19:28:12.278208 21558 net.cpp:202] mnist does not need backward computation.
I0428 19:28:12.278210 21558 net.cpp:244] This network produces output loss
I0428 19:28:12.278220 21558 net.cpp:257] Network initialization done.
I0428 19:28:12.278497 21558 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test17.prototxt
I0428 19:28:12.278524 21558 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:12.278604 21558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:12.278684 21558 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:12.278735 21558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:12.278754 21558 net.cpp:86] Creating Layer mnist
I0428 19:28:12.278760 21558 net.cpp:382] mnist -> data
I0428 19:28:12.278770 21558 net.cpp:382] mnist -> label
I0428 19:28:12.278872 21558 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:12.281071 21558 net.cpp:124] Setting up mnist
I0428 19:28:12.281088 21558 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:12.281095 21558 net.cpp:131] Top shape: 100 (100)
I0428 19:28:12.281098 21558 net.cpp:139] Memory required for data: 314000
I0428 19:28:12.281103 21558 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:12.281116 21558 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:12.281119 21558 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:12.281126 21558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:12.281133 21558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:12.281224 21558 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:12.281232 21558 net.cpp:131] Top shape: 100 (100)
I0428 19:28:12.281237 21558 net.cpp:131] Top shape: 100 (100)
I0428 19:28:12.281241 21558 net.cpp:139] Memory required for data: 314800
I0428 19:28:12.281244 21558 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:12.281253 21558 net.cpp:86] Creating Layer ip1
I0428 19:28:12.281256 21558 net.cpp:408] ip1 <- data
I0428 19:28:12.281262 21558 net.cpp:382] ip1 -> ip1
I0428 19:28:12.281426 21558 net.cpp:124] Setting up ip1
I0428 19:28:12.281442 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.281446 21558 net.cpp:139] Memory required for data: 318800
I0428 19:28:12.281456 21558 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:12.281462 21558 net.cpp:86] Creating Layer relu1
I0428 19:28:12.281466 21558 net.cpp:408] relu1 <- ip1
I0428 19:28:12.281471 21558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:12.282445 21558 net.cpp:124] Setting up relu1
I0428 19:28:12.282460 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.282464 21558 net.cpp:139] Memory required for data: 322800
I0428 19:28:12.282469 21558 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:12.282479 21558 net.cpp:86] Creating Layer ip2
I0428 19:28:12.282482 21558 net.cpp:408] ip2 <- ip1
I0428 19:28:12.282488 21558 net.cpp:382] ip2 -> ip2
I0428 19:28:12.282604 21558 net.cpp:124] Setting up ip2
I0428 19:28:12.282613 21558 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:12.282616 21558 net.cpp:139] Memory required for data: 332800
I0428 19:28:12.282625 21558 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:12.282631 21558 net.cpp:86] Creating Layer relu2
I0428 19:28:12.282634 21558 net.cpp:408] relu2 <- ip2
I0428 19:28:12.282640 21558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:12.282876 21558 net.cpp:124] Setting up relu2
I0428 19:28:12.282886 21558 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:12.282891 21558 net.cpp:139] Memory required for data: 342800
I0428 19:28:12.282894 21558 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:12.282901 21558 net.cpp:86] Creating Layer ip3
I0428 19:28:12.282904 21558 net.cpp:408] ip3 <- ip2
I0428 19:28:12.282910 21558 net.cpp:382] ip3 -> ip3
I0428 19:28:12.283046 21558 net.cpp:124] Setting up ip3
I0428 19:28:12.283056 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.283061 21558 net.cpp:139] Memory required for data: 346800
I0428 19:28:12.283071 21558 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:12.283076 21558 net.cpp:86] Creating Layer relu3
I0428 19:28:12.283079 21558 net.cpp:408] relu3 <- ip3
I0428 19:28:12.283085 21558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:12.283270 21558 net.cpp:124] Setting up relu3
I0428 19:28:12.283279 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.283283 21558 net.cpp:139] Memory required for data: 350800
I0428 19:28:12.283288 21558 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:12.283293 21558 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:12.283298 21558 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:12.283303 21558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:12.283310 21558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:12.283350 21558 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:12.283357 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.283363 21558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:12.283366 21558 net.cpp:139] Memory required for data: 358800
I0428 19:28:12.283370 21558 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:12.283377 21558 net.cpp:86] Creating Layer accuracy
I0428 19:28:12.283380 21558 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:12.283387 21558 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:12.283392 21558 net.cpp:382] accuracy -> accuracy
I0428 19:28:12.283406 21558 net.cpp:124] Setting up accuracy
I0428 19:28:12.283409 21558 net.cpp:131] Top shape: (1)
I0428 19:28:12.283413 21558 net.cpp:139] Memory required for data: 358804
I0428 19:28:12.283416 21558 layer_factory.hpp:77] Creating layer loss
I0428 19:28:12.283421 21558 net.cpp:86] Creating Layer loss
I0428 19:28:12.283426 21558 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:12.283429 21558 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:12.283434 21558 net.cpp:382] loss -> loss
I0428 19:28:12.283442 21558 layer_factory.hpp:77] Creating layer loss
I0428 19:28:12.283761 21558 net.cpp:124] Setting up loss
I0428 19:28:12.283772 21558 net.cpp:131] Top shape: (1)
I0428 19:28:12.283777 21558 net.cpp:134]     with loss weight 1
I0428 19:28:12.283784 21558 net.cpp:139] Memory required for data: 358808
I0428 19:28:12.283788 21558 net.cpp:200] loss needs backward computation.
I0428 19:28:12.283792 21558 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:12.283797 21558 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:12.283803 21558 net.cpp:200] relu3 needs backward computation.
I0428 19:28:12.283807 21558 net.cpp:200] ip3 needs backward computation.
I0428 19:28:12.283818 21558 net.cpp:200] relu2 needs backward computation.
I0428 19:28:12.283821 21558 net.cpp:200] ip2 needs backward computation.
I0428 19:28:12.283825 21558 net.cpp:200] relu1 needs backward computation.
I0428 19:28:12.283828 21558 net.cpp:200] ip1 needs backward computation.
I0428 19:28:12.283833 21558 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:12.283838 21558 net.cpp:202] mnist does not need backward computation.
I0428 19:28:12.283846 21558 net.cpp:244] This network produces output accuracy
I0428 19:28:12.283851 21558 net.cpp:244] This network produces output loss
I0428 19:28:12.283861 21558 net.cpp:257] Network initialization done.
I0428 19:28:12.283898 21558 solver.cpp:56] Solver scaffolding done.
I0428 19:28:12.284145 21558 caffe.cpp:248] Starting Optimization
I0428 19:28:12.284152 21558 solver.cpp:273] Solving LeNet
I0428 19:28:12.284155 21558 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:12.284303 21558 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:12.288367 21558 blocking_queue.cpp:49] Waiting for data
I0428 19:28:12.334105 21565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:12.334532 21558 solver.cpp:398]     Test net output #0: accuracy = 0.1303
I0428 19:28:12.334550 21558 solver.cpp:398]     Test net output #1: loss = 2.30627 (* 1 = 2.30627 loss)
I0428 19:28:12.335214 21558 solver.cpp:219] Iteration 0 (-2.44726e-31 iter/s, 0.051031s/100 iters), loss = 2.30118
I0428 19:28:12.335235 21558 solver.cpp:238]     Train net output #0: loss = 2.30118 (* 1 = 2.30118 loss)
I0428 19:28:12.335258 21558 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:12.377607 21558 solver.cpp:219] Iteration 100 (2360.44 iter/s, 0.0423649s/100 iters), loss = 0.993071
I0428 19:28:12.377656 21558 solver.cpp:238]     Train net output #0: loss = 0.993071 (* 1 = 0.993071 loss)
I0428 19:28:12.377663 21558 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:12.419559 21558 solver.cpp:219] Iteration 200 (2387.1 iter/s, 0.0418919s/100 iters), loss = 0.470606
I0428 19:28:12.419605 21558 solver.cpp:238]     Train net output #0: loss = 0.470606 (* 1 = 0.470606 loss)
I0428 19:28:12.419612 21558 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:12.461856 21558 solver.cpp:219] Iteration 300 (2367.37 iter/s, 0.042241s/100 iters), loss = 0.343435
I0428 19:28:12.461896 21558 solver.cpp:238]     Train net output #0: loss = 0.343435 (* 1 = 0.343435 loss)
I0428 19:28:12.461901 21558 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:12.511556 21558 solver.cpp:219] Iteration 400 (2014.2 iter/s, 0.0496476s/100 iters), loss = 0.330712
I0428 19:28:12.511615 21558 solver.cpp:238]     Train net output #0: loss = 0.330712 (* 1 = 0.330712 loss)
I0428 19:28:12.511627 21558 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:12.568970 21558 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:12.615348 21565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:12.615777 21558 solver.cpp:398]     Test net output #0: accuracy = 0.8954
I0428 19:28:12.615811 21558 solver.cpp:398]     Test net output #1: loss = 0.35393 (* 1 = 0.35393 loss)
I0428 19:28:12.616303 21558 solver.cpp:219] Iteration 500 (955.27 iter/s, 0.104682s/100 iters), loss = 0.386357
I0428 19:28:12.616339 21558 solver.cpp:238]     Train net output #0: loss = 0.386357 (* 1 = 0.386357 loss)
I0428 19:28:12.616346 21558 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:12.661857 21558 solver.cpp:219] Iteration 600 (2196.69 iter/s, 0.0455229s/100 iters), loss = 0.272818
I0428 19:28:12.661895 21558 solver.cpp:238]     Train net output #0: loss = 0.272818 (* 1 = 0.272818 loss)
I0428 19:28:12.661901 21558 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:12.706761 21558 solver.cpp:219] Iteration 700 (2228.63 iter/s, 0.0448707s/100 iters), loss = 0.416717
I0428 19:28:12.706789 21558 solver.cpp:238]     Train net output #0: loss = 0.416717 (* 1 = 0.416717 loss)
I0428 19:28:12.706802 21558 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:12.765321 21558 solver.cpp:219] Iteration 800 (1708.68 iter/s, 0.0585247s/100 iters), loss = 0.483998
I0428 19:28:12.765362 21558 solver.cpp:238]     Train net output #0: loss = 0.483998 (* 1 = 0.483998 loss)
I0428 19:28:12.765368 21558 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:12.814328 21558 solver.cpp:219] Iteration 900 (2041.99 iter/s, 0.0489718s/100 iters), loss = 0.354233
I0428 19:28:12.814366 21558 solver.cpp:238]     Train net output #0: loss = 0.354233 (* 1 = 0.354233 loss)
I0428 19:28:12.814373 21558 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:12.832064 21564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:12.863239 21558 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:12.863931 21558 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:12.864403 21558 solver.cpp:311] Iteration 1000, loss = 0.246218
I0428 19:28:12.864419 21558 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:12.911520 21565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:12.911949 21558 solver.cpp:398]     Test net output #0: accuracy = 0.9111
I0428 19:28:12.911970 21558 solver.cpp:398]     Test net output #1: loss = 0.296554 (* 1 = 0.296554 loss)
I0428 19:28:12.911994 21558 solver.cpp:316] Optimization Done.
I0428 19:28:12.911998 21558 caffe.cpp:259] Optimization Done.
