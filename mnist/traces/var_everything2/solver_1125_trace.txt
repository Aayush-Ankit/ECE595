I0428 20:10:03.718183 31760 caffe.cpp:218] Using GPUs 0
I0428 20:10:03.754820 31760 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:04.266149 31760 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1125.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:04.266294 31760 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1125.prototxt
I0428 20:10:04.266716 31760 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:04.266736 31760 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:04.266839 31760 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:04.266918 31760 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:04.267017 31760 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:04.267040 31760 net.cpp:86] Creating Layer mnist
I0428 20:10:04.267050 31760 net.cpp:382] mnist -> data
I0428 20:10:04.267072 31760 net.cpp:382] mnist -> label
I0428 20:10:04.268167 31760 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:04.270627 31760 net.cpp:124] Setting up mnist
I0428 20:10:04.270644 31760 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:04.270650 31760 net.cpp:131] Top shape: 64 (64)
I0428 20:10:04.270653 31760 net.cpp:139] Memory required for data: 200960
I0428 20:10:04.270661 31760 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:04.270678 31760 net.cpp:86] Creating Layer conv0
I0428 20:10:04.270699 31760 net.cpp:408] conv0 <- data
I0428 20:10:04.270711 31760 net.cpp:382] conv0 -> conv0
I0428 20:10:04.562371 31760 net.cpp:124] Setting up conv0
I0428 20:10:04.562402 31760 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:04.562408 31760 net.cpp:139] Memory required for data: 3887360
I0428 20:10:04.562427 31760 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:04.562441 31760 net.cpp:86] Creating Layer pool0
I0428 20:10:04.562446 31760 net.cpp:408] pool0 <- conv0
I0428 20:10:04.562453 31760 net.cpp:382] pool0 -> pool0
I0428 20:10:04.562505 31760 net.cpp:124] Setting up pool0
I0428 20:10:04.562511 31760 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:04.562515 31760 net.cpp:139] Memory required for data: 4808960
I0428 20:10:04.562520 31760 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:04.562532 31760 net.cpp:86] Creating Layer conv1
I0428 20:10:04.562536 31760 net.cpp:408] conv1 <- pool0
I0428 20:10:04.562542 31760 net.cpp:382] conv1 -> conv1
I0428 20:10:04.565793 31760 net.cpp:124] Setting up conv1
I0428 20:10:04.565810 31760 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:10:04.565815 31760 net.cpp:139] Memory required for data: 5218560
I0428 20:10:04.565825 31760 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:04.565834 31760 net.cpp:86] Creating Layer pool1
I0428 20:10:04.565840 31760 net.cpp:408] pool1 <- conv1
I0428 20:10:04.565845 31760 net.cpp:382] pool1 -> pool1
I0428 20:10:04.565891 31760 net.cpp:124] Setting up pool1
I0428 20:10:04.565897 31760 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:10:04.565901 31760 net.cpp:139] Memory required for data: 5320960
I0428 20:10:04.565904 31760 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:04.565912 31760 net.cpp:86] Creating Layer ip1
I0428 20:10:04.565917 31760 net.cpp:408] ip1 <- pool1
I0428 20:10:04.565922 31760 net.cpp:382] ip1 -> ip1
I0428 20:10:04.566170 31760 net.cpp:124] Setting up ip1
I0428 20:10:04.566179 31760 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:04.566184 31760 net.cpp:139] Memory required for data: 5333760
I0428 20:10:04.566191 31760 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:04.566200 31760 net.cpp:86] Creating Layer relu1
I0428 20:10:04.566205 31760 net.cpp:408] relu1 <- ip1
I0428 20:10:04.566210 31760 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:04.566417 31760 net.cpp:124] Setting up relu1
I0428 20:10:04.566431 31760 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:04.566434 31760 net.cpp:139] Memory required for data: 5346560
I0428 20:10:04.566438 31760 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:04.566445 31760 net.cpp:86] Creating Layer ip2
I0428 20:10:04.566449 31760 net.cpp:408] ip2 <- ip1
I0428 20:10:04.566457 31760 net.cpp:382] ip2 -> ip2
I0428 20:10:04.567566 31760 net.cpp:124] Setting up ip2
I0428 20:10:04.567582 31760 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:04.567586 31760 net.cpp:139] Memory required for data: 5352960
I0428 20:10:04.567594 31760 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:04.567601 31760 net.cpp:86] Creating Layer relu2
I0428 20:10:04.567605 31760 net.cpp:408] relu2 <- ip2
I0428 20:10:04.567611 31760 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:04.568470 31760 net.cpp:124] Setting up relu2
I0428 20:10:04.568485 31760 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:10:04.568490 31760 net.cpp:139] Memory required for data: 5359360
I0428 20:10:04.568495 31760 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:04.568503 31760 net.cpp:86] Creating Layer ip3
I0428 20:10:04.568507 31760 net.cpp:408] ip3 <- ip2
I0428 20:10:04.568516 31760 net.cpp:382] ip3 -> ip3
I0428 20:10:04.568639 31760 net.cpp:124] Setting up ip3
I0428 20:10:04.568655 31760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:04.568658 31760 net.cpp:139] Memory required for data: 5361920
I0428 20:10:04.568667 31760 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:04.568673 31760 net.cpp:86] Creating Layer relu3
I0428 20:10:04.568677 31760 net.cpp:408] relu3 <- ip3
I0428 20:10:04.568683 31760 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:04.568903 31760 net.cpp:124] Setting up relu3
I0428 20:10:04.568914 31760 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:04.568918 31760 net.cpp:139] Memory required for data: 5364480
I0428 20:10:04.568922 31760 layer_factory.hpp:77] Creating layer loss
I0428 20:10:04.568929 31760 net.cpp:86] Creating Layer loss
I0428 20:10:04.568933 31760 net.cpp:408] loss <- ip3
I0428 20:10:04.568939 31760 net.cpp:408] loss <- label
I0428 20:10:04.568945 31760 net.cpp:382] loss -> loss
I0428 20:10:04.568966 31760 layer_factory.hpp:77] Creating layer loss
I0428 20:10:04.569257 31760 net.cpp:124] Setting up loss
I0428 20:10:04.569268 31760 net.cpp:131] Top shape: (1)
I0428 20:10:04.569272 31760 net.cpp:134]     with loss weight 1
I0428 20:10:04.569288 31760 net.cpp:139] Memory required for data: 5364484
I0428 20:10:04.569293 31760 net.cpp:200] loss needs backward computation.
I0428 20:10:04.569296 31760 net.cpp:200] relu3 needs backward computation.
I0428 20:10:04.569301 31760 net.cpp:200] ip3 needs backward computation.
I0428 20:10:04.569304 31760 net.cpp:200] relu2 needs backward computation.
I0428 20:10:04.569308 31760 net.cpp:200] ip2 needs backward computation.
I0428 20:10:04.569311 31760 net.cpp:200] relu1 needs backward computation.
I0428 20:10:04.569314 31760 net.cpp:200] ip1 needs backward computation.
I0428 20:10:04.569319 31760 net.cpp:200] pool1 needs backward computation.
I0428 20:10:04.569322 31760 net.cpp:200] conv1 needs backward computation.
I0428 20:10:04.569325 31760 net.cpp:200] pool0 needs backward computation.
I0428 20:10:04.569329 31760 net.cpp:200] conv0 needs backward computation.
I0428 20:10:04.569334 31760 net.cpp:202] mnist does not need backward computation.
I0428 20:10:04.569336 31760 net.cpp:244] This network produces output loss
I0428 20:10:04.569349 31760 net.cpp:257] Network initialization done.
I0428 20:10:04.569735 31760 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1125.prototxt
I0428 20:10:04.569766 31760 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:04.569875 31760 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:04.569975 31760 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:04.570029 31760 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:04.570044 31760 net.cpp:86] Creating Layer mnist
I0428 20:10:04.570050 31760 net.cpp:382] mnist -> data
I0428 20:10:04.570058 31760 net.cpp:382] mnist -> label
I0428 20:10:04.570163 31760 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:04.572579 31760 net.cpp:124] Setting up mnist
I0428 20:10:04.572597 31760 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:04.572602 31760 net.cpp:131] Top shape: 100 (100)
I0428 20:10:04.572607 31760 net.cpp:139] Memory required for data: 314000
I0428 20:10:04.572610 31760 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:04.572623 31760 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:04.572626 31760 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:04.572633 31760 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:04.572640 31760 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:04.572702 31760 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:04.572713 31760 net.cpp:131] Top shape: 100 (100)
I0428 20:10:04.572718 31760 net.cpp:131] Top shape: 100 (100)
I0428 20:10:04.572721 31760 net.cpp:139] Memory required for data: 314800
I0428 20:10:04.572726 31760 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:04.572737 31760 net.cpp:86] Creating Layer conv0
I0428 20:10:04.572742 31760 net.cpp:408] conv0 <- data
I0428 20:10:04.572748 31760 net.cpp:382] conv0 -> conv0
I0428 20:10:04.574738 31760 net.cpp:124] Setting up conv0
I0428 20:10:04.574754 31760 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:04.574759 31760 net.cpp:139] Memory required for data: 6074800
I0428 20:10:04.574770 31760 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:04.574779 31760 net.cpp:86] Creating Layer pool0
I0428 20:10:04.574784 31760 net.cpp:408] pool0 <- conv0
I0428 20:10:04.574790 31760 net.cpp:382] pool0 -> pool0
I0428 20:10:04.574834 31760 net.cpp:124] Setting up pool0
I0428 20:10:04.574841 31760 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:04.574844 31760 net.cpp:139] Memory required for data: 7514800
I0428 20:10:04.574848 31760 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:04.574859 31760 net.cpp:86] Creating Layer conv1
I0428 20:10:04.574863 31760 net.cpp:408] conv1 <- pool0
I0428 20:10:04.574870 31760 net.cpp:382] conv1 -> conv1
I0428 20:10:04.577435 31760 net.cpp:124] Setting up conv1
I0428 20:10:04.577451 31760 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:10:04.577455 31760 net.cpp:139] Memory required for data: 8154800
I0428 20:10:04.577466 31760 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:04.577482 31760 net.cpp:86] Creating Layer pool1
I0428 20:10:04.577487 31760 net.cpp:408] pool1 <- conv1
I0428 20:10:04.577493 31760 net.cpp:382] pool1 -> pool1
I0428 20:10:04.577591 31760 net.cpp:124] Setting up pool1
I0428 20:10:04.577600 31760 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:10:04.577605 31760 net.cpp:139] Memory required for data: 8314800
I0428 20:10:04.577608 31760 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:04.577616 31760 net.cpp:86] Creating Layer ip1
I0428 20:10:04.577620 31760 net.cpp:408] ip1 <- pool1
I0428 20:10:04.577626 31760 net.cpp:382] ip1 -> ip1
I0428 20:10:04.577889 31760 net.cpp:124] Setting up ip1
I0428 20:10:04.577899 31760 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:04.577914 31760 net.cpp:139] Memory required for data: 8334800
I0428 20:10:04.577924 31760 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:04.577931 31760 net.cpp:86] Creating Layer relu1
I0428 20:10:04.577936 31760 net.cpp:408] relu1 <- ip1
I0428 20:10:04.577941 31760 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:04.578150 31760 net.cpp:124] Setting up relu1
I0428 20:10:04.578161 31760 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:04.578163 31760 net.cpp:139] Memory required for data: 8354800
I0428 20:10:04.578168 31760 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:04.578177 31760 net.cpp:86] Creating Layer ip2
I0428 20:10:04.578181 31760 net.cpp:408] ip2 <- ip1
I0428 20:10:04.578187 31760 net.cpp:382] ip2 -> ip2
I0428 20:10:04.578348 31760 net.cpp:124] Setting up ip2
I0428 20:10:04.578358 31760 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:04.578361 31760 net.cpp:139] Memory required for data: 8364800
I0428 20:10:04.578368 31760 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:04.578374 31760 net.cpp:86] Creating Layer relu2
I0428 20:10:04.578377 31760 net.cpp:408] relu2 <- ip2
I0428 20:10:04.578384 31760 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:04.578649 31760 net.cpp:124] Setting up relu2
I0428 20:10:04.578658 31760 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:10:04.578662 31760 net.cpp:139] Memory required for data: 8374800
I0428 20:10:04.578665 31760 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:04.578673 31760 net.cpp:86] Creating Layer ip3
I0428 20:10:04.578677 31760 net.cpp:408] ip3 <- ip2
I0428 20:10:04.578685 31760 net.cpp:382] ip3 -> ip3
I0428 20:10:04.578805 31760 net.cpp:124] Setting up ip3
I0428 20:10:04.578815 31760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:04.578819 31760 net.cpp:139] Memory required for data: 8378800
I0428 20:10:04.578829 31760 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:04.578835 31760 net.cpp:86] Creating Layer relu3
I0428 20:10:04.578838 31760 net.cpp:408] relu3 <- ip3
I0428 20:10:04.578843 31760 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:04.579756 31760 net.cpp:124] Setting up relu3
I0428 20:10:04.579771 31760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:04.579774 31760 net.cpp:139] Memory required for data: 8382800
I0428 20:10:04.579778 31760 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:04.579785 31760 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:04.579789 31760 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:04.579797 31760 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:04.579804 31760 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:04.579849 31760 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:04.579854 31760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:04.579859 31760 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:04.579864 31760 net.cpp:139] Memory required for data: 8390800
I0428 20:10:04.579866 31760 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:04.579874 31760 net.cpp:86] Creating Layer accuracy
I0428 20:10:04.579877 31760 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:04.579881 31760 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:04.579886 31760 net.cpp:382] accuracy -> accuracy
I0428 20:10:04.579895 31760 net.cpp:124] Setting up accuracy
I0428 20:10:04.579900 31760 net.cpp:131] Top shape: (1)
I0428 20:10:04.579902 31760 net.cpp:139] Memory required for data: 8390804
I0428 20:10:04.579905 31760 layer_factory.hpp:77] Creating layer loss
I0428 20:10:04.579912 31760 net.cpp:86] Creating Layer loss
I0428 20:10:04.579916 31760 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:04.579921 31760 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:04.579926 31760 net.cpp:382] loss -> loss
I0428 20:10:04.579932 31760 layer_factory.hpp:77] Creating layer loss
I0428 20:10:04.580215 31760 net.cpp:124] Setting up loss
I0428 20:10:04.580225 31760 net.cpp:131] Top shape: (1)
I0428 20:10:04.580229 31760 net.cpp:134]     with loss weight 1
I0428 20:10:04.580248 31760 net.cpp:139] Memory required for data: 8390808
I0428 20:10:04.580252 31760 net.cpp:200] loss needs backward computation.
I0428 20:10:04.580257 31760 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:04.580262 31760 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:04.580265 31760 net.cpp:200] relu3 needs backward computation.
I0428 20:10:04.580268 31760 net.cpp:200] ip3 needs backward computation.
I0428 20:10:04.580272 31760 net.cpp:200] relu2 needs backward computation.
I0428 20:10:04.580276 31760 net.cpp:200] ip2 needs backward computation.
I0428 20:10:04.580279 31760 net.cpp:200] relu1 needs backward computation.
I0428 20:10:04.580282 31760 net.cpp:200] ip1 needs backward computation.
I0428 20:10:04.580286 31760 net.cpp:200] pool1 needs backward computation.
I0428 20:10:04.580289 31760 net.cpp:200] conv1 needs backward computation.
I0428 20:10:04.580293 31760 net.cpp:200] pool0 needs backward computation.
I0428 20:10:04.580296 31760 net.cpp:200] conv0 needs backward computation.
I0428 20:10:04.580302 31760 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:04.580305 31760 net.cpp:202] mnist does not need backward computation.
I0428 20:10:04.580308 31760 net.cpp:244] This network produces output accuracy
I0428 20:10:04.580313 31760 net.cpp:244] This network produces output loss
I0428 20:10:04.580327 31760 net.cpp:257] Network initialization done.
I0428 20:10:04.580376 31760 solver.cpp:56] Solver scaffolding done.
I0428 20:10:04.580760 31760 caffe.cpp:248] Starting Optimization
I0428 20:10:04.580767 31760 solver.cpp:273] Solving LeNet
I0428 20:10:04.580771 31760 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:04.581660 31760 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:04.588476 31760 blocking_queue.cpp:49] Waiting for data
I0428 20:10:04.648998 31767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:04.649657 31760 solver.cpp:398]     Test net output #0: accuracy = 0.0637
I0428 20:10:04.649680 31760 solver.cpp:398]     Test net output #1: loss = 2.33201 (* 1 = 2.33201 loss)
I0428 20:10:04.653723 31760 solver.cpp:219] Iteration 0 (-1.4783e-31 iter/s, 0.0729202s/100 iters), loss = 2.30324
I0428 20:10:04.653753 31760 solver.cpp:238]     Train net output #0: loss = 2.30324 (* 1 = 2.30324 loss)
I0428 20:10:04.653767 31760 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:04.762106 31760 solver.cpp:219] Iteration 100 (923.036 iter/s, 0.108338s/100 iters), loss = 0.587564
I0428 20:10:04.762140 31760 solver.cpp:238]     Train net output #0: loss = 0.587564 (* 1 = 0.587564 loss)
I0428 20:10:04.762147 31760 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:04.870012 31760 solver.cpp:219] Iteration 200 (927.119 iter/s, 0.107861s/100 iters), loss = 0.214927
I0428 20:10:04.870044 31760 solver.cpp:238]     Train net output #0: loss = 0.214927 (* 1 = 0.214927 loss)
I0428 20:10:04.870051 31760 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:04.976117 31760 solver.cpp:219] Iteration 300 (942.837 iter/s, 0.106063s/100 iters), loss = 0.27741
I0428 20:10:04.976146 31760 solver.cpp:238]     Train net output #0: loss = 0.27741 (* 1 = 0.27741 loss)
I0428 20:10:04.976168 31760 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:05.079809 31760 solver.cpp:219] Iteration 400 (964.906 iter/s, 0.103637s/100 iters), loss = 0.114981
I0428 20:10:05.079834 31760 solver.cpp:238]     Train net output #0: loss = 0.114981 (* 1 = 0.114981 loss)
I0428 20:10:05.079845 31760 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:05.182842 31760 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:05.240027 31767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:05.240818 31760 solver.cpp:398]     Test net output #0: accuracy = 0.957
I0428 20:10:05.240854 31760 solver.cpp:398]     Test net output #1: loss = 0.13201 (* 1 = 0.13201 loss)
I0428 20:10:05.241979 31760 solver.cpp:219] Iteration 500 (616.785 iter/s, 0.162131s/100 iters), loss = 0.160193
I0428 20:10:05.242049 31760 solver.cpp:238]     Train net output #0: loss = 0.160193 (* 1 = 0.160193 loss)
I0428 20:10:05.242058 31760 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:05.351773 31760 solver.cpp:219] Iteration 600 (911.346 iter/s, 0.109728s/100 iters), loss = 0.0873189
I0428 20:10:05.351812 31760 solver.cpp:238]     Train net output #0: loss = 0.087319 (* 1 = 0.087319 loss)
I0428 20:10:05.351819 31760 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:05.455026 31760 solver.cpp:219] Iteration 700 (968.811 iter/s, 0.103219s/100 iters), loss = 0.142942
I0428 20:10:05.455066 31760 solver.cpp:238]     Train net output #0: loss = 0.142942 (* 1 = 0.142942 loss)
I0428 20:10:05.455072 31760 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:05.562839 31760 solver.cpp:219] Iteration 800 (927.983 iter/s, 0.107761s/100 iters), loss = 0.201223
I0428 20:10:05.562880 31760 solver.cpp:238]     Train net output #0: loss = 0.201223 (* 1 = 0.201223 loss)
I0428 20:10:05.562886 31760 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:05.668370 31760 solver.cpp:219] Iteration 900 (947.908 iter/s, 0.105495s/100 iters), loss = 0.154436
I0428 20:10:05.668411 31760 solver.cpp:238]     Train net output #0: loss = 0.154436 (* 1 = 0.154436 loss)
I0428 20:10:05.668416 31760 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:05.703622 31766 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:05.769487 31760 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:05.770825 31760 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:05.771658 31760 solver.cpp:311] Iteration 1000, loss = 0.139157
I0428 20:10:05.771673 31760 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:05.827575 31767 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:05.828251 31760 solver.cpp:398]     Test net output #0: accuracy = 0.9765
I0428 20:10:05.828271 31760 solver.cpp:398]     Test net output #1: loss = 0.0720099 (* 1 = 0.0720099 loss)
I0428 20:10:05.828277 31760 solver.cpp:316] Optimization Done.
I0428 20:10:05.828280 31760 caffe.cpp:259] Optimization Done.
