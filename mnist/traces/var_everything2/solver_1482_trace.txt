I0428 20:27:05.121405  2927 caffe.cpp:218] Using GPUs 0
I0428 20:27:05.158146  2927 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:05.668161  2927 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1482.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:05.668298  2927 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1482.prototxt
I0428 20:27:05.668647  2927 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:05.668663  2927 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:05.668743  2927 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:05.668822  2927 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:05.668917  2927 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:05.668941  2927 net.cpp:86] Creating Layer mnist
I0428 20:27:05.668951  2927 net.cpp:382] mnist -> data
I0428 20:27:05.668972  2927 net.cpp:382] mnist -> label
I0428 20:27:05.670083  2927 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:05.672616  2927 net.cpp:124] Setting up mnist
I0428 20:27:05.672634  2927 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:05.672642  2927 net.cpp:131] Top shape: 64 (64)
I0428 20:27:05.672646  2927 net.cpp:139] Memory required for data: 200960
I0428 20:27:05.672653  2927 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:05.672669  2927 net.cpp:86] Creating Layer conv0
I0428 20:27:05.672674  2927 net.cpp:408] conv0 <- data
I0428 20:27:05.672688  2927 net.cpp:382] conv0 -> conv0
I0428 20:27:05.964696  2927 net.cpp:124] Setting up conv0
I0428 20:27:05.964726  2927 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:05.964731  2927 net.cpp:139] Memory required for data: 14946560
I0428 20:27:05.964748  2927 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:05.964762  2927 net.cpp:86] Creating Layer pool0
I0428 20:27:05.964766  2927 net.cpp:408] pool0 <- conv0
I0428 20:27:05.964772  2927 net.cpp:382] pool0 -> pool0
I0428 20:27:05.964848  2927 net.cpp:124] Setting up pool0
I0428 20:27:05.964859  2927 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:05.965242  2927 net.cpp:139] Memory required for data: 18632960
I0428 20:27:05.965250  2927 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:05.965267  2927 net.cpp:86] Creating Layer conv1
I0428 20:27:05.965271  2927 net.cpp:408] conv1 <- pool0
I0428 20:27:05.965277  2927 net.cpp:382] conv1 -> conv1
I0428 20:27:05.968446  2927 net.cpp:124] Setting up conv1
I0428 20:27:05.968463  2927 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:05.968468  2927 net.cpp:139] Memory required for data: 18714880
I0428 20:27:05.968478  2927 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:05.968487  2927 net.cpp:86] Creating Layer pool1
I0428 20:27:05.968492  2927 net.cpp:408] pool1 <- conv1
I0428 20:27:05.968497  2927 net.cpp:382] pool1 -> pool1
I0428 20:27:05.968539  2927 net.cpp:124] Setting up pool1
I0428 20:27:05.968547  2927 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:05.968551  2927 net.cpp:139] Memory required for data: 18735360
I0428 20:27:05.968555  2927 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:05.968564  2927 net.cpp:86] Creating Layer ip1
I0428 20:27:05.968566  2927 net.cpp:408] ip1 <- pool1
I0428 20:27:05.968572  2927 net.cpp:382] ip1 -> ip1
I0428 20:27:05.968686  2927 net.cpp:124] Setting up ip1
I0428 20:27:05.968694  2927 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:05.968698  2927 net.cpp:139] Memory required for data: 18737920
I0428 20:27:05.968705  2927 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:05.968714  2927 net.cpp:86] Creating Layer relu1
I0428 20:27:05.968719  2927 net.cpp:408] relu1 <- ip1
I0428 20:27:05.968722  2927 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:05.968919  2927 net.cpp:124] Setting up relu1
I0428 20:27:05.968945  2927 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:05.968950  2927 net.cpp:139] Memory required for data: 18740480
I0428 20:27:05.968952  2927 layer_factory.hpp:77] Creating layer loss
I0428 20:27:05.968960  2927 net.cpp:86] Creating Layer loss
I0428 20:27:05.968962  2927 net.cpp:408] loss <- ip1
I0428 20:27:05.968967  2927 net.cpp:408] loss <- label
I0428 20:27:05.968972  2927 net.cpp:382] loss -> loss
I0428 20:27:05.968991  2927 layer_factory.hpp:77] Creating layer loss
I0428 20:27:05.969892  2927 net.cpp:124] Setting up loss
I0428 20:27:05.969907  2927 net.cpp:131] Top shape: (1)
I0428 20:27:05.969911  2927 net.cpp:134]     with loss weight 1
I0428 20:27:05.969926  2927 net.cpp:139] Memory required for data: 18740484
I0428 20:27:05.969931  2927 net.cpp:200] loss needs backward computation.
I0428 20:27:05.969936  2927 net.cpp:200] relu1 needs backward computation.
I0428 20:27:05.969939  2927 net.cpp:200] ip1 needs backward computation.
I0428 20:27:05.969943  2927 net.cpp:200] pool1 needs backward computation.
I0428 20:27:05.969946  2927 net.cpp:200] conv1 needs backward computation.
I0428 20:27:05.969949  2927 net.cpp:200] pool0 needs backward computation.
I0428 20:27:05.969952  2927 net.cpp:200] conv0 needs backward computation.
I0428 20:27:05.969956  2927 net.cpp:202] mnist does not need backward computation.
I0428 20:27:05.969959  2927 net.cpp:244] This network produces output loss
I0428 20:27:05.969969  2927 net.cpp:257] Network initialization done.
I0428 20:27:05.970268  2927 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1482.prototxt
I0428 20:27:05.970295  2927 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:05.970376  2927 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:05.970461  2927 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:05.970512  2927 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:05.970526  2927 net.cpp:86] Creating Layer mnist
I0428 20:27:05.970532  2927 net.cpp:382] mnist -> data
I0428 20:27:05.970541  2927 net.cpp:382] mnist -> label
I0428 20:27:05.970648  2927 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:05.972990  2927 net.cpp:124] Setting up mnist
I0428 20:27:05.973006  2927 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:05.973011  2927 net.cpp:131] Top shape: 100 (100)
I0428 20:27:05.973016  2927 net.cpp:139] Memory required for data: 314000
I0428 20:27:05.973021  2927 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:05.973040  2927 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:05.973044  2927 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:05.973049  2927 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:05.973057  2927 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:05.973107  2927 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:05.973115  2927 net.cpp:131] Top shape: 100 (100)
I0428 20:27:05.973120  2927 net.cpp:131] Top shape: 100 (100)
I0428 20:27:05.973124  2927 net.cpp:139] Memory required for data: 314800
I0428 20:27:05.973126  2927 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:05.973135  2927 net.cpp:86] Creating Layer conv0
I0428 20:27:05.973140  2927 net.cpp:408] conv0 <- data
I0428 20:27:05.973145  2927 net.cpp:382] conv0 -> conv0
I0428 20:27:05.974045  2927 net.cpp:124] Setting up conv0
I0428 20:27:05.974058  2927 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:05.974062  2927 net.cpp:139] Memory required for data: 23354800
I0428 20:27:05.974072  2927 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:05.974079  2927 net.cpp:86] Creating Layer pool0
I0428 20:27:05.974082  2927 net.cpp:408] pool0 <- conv0
I0428 20:27:05.974087  2927 net.cpp:382] pool0 -> pool0
I0428 20:27:05.974125  2927 net.cpp:124] Setting up pool0
I0428 20:27:05.974133  2927 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:05.974136  2927 net.cpp:139] Memory required for data: 29114800
I0428 20:27:05.974139  2927 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:05.974148  2927 net.cpp:86] Creating Layer conv1
I0428 20:27:05.974153  2927 net.cpp:408] conv1 <- pool0
I0428 20:27:05.974158  2927 net.cpp:382] conv1 -> conv1
I0428 20:27:05.975873  2927 net.cpp:124] Setting up conv1
I0428 20:27:05.975888  2927 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:05.975893  2927 net.cpp:139] Memory required for data: 29242800
I0428 20:27:05.975903  2927 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:05.975910  2927 net.cpp:86] Creating Layer pool1
I0428 20:27:05.975926  2927 net.cpp:408] pool1 <- conv1
I0428 20:27:05.975932  2927 net.cpp:382] pool1 -> pool1
I0428 20:27:05.975983  2927 net.cpp:124] Setting up pool1
I0428 20:27:05.975992  2927 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:05.975996  2927 net.cpp:139] Memory required for data: 29274800
I0428 20:27:05.975999  2927 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:05.976011  2927 net.cpp:86] Creating Layer ip1
I0428 20:27:05.976016  2927 net.cpp:408] ip1 <- pool1
I0428 20:27:05.976027  2927 net.cpp:382] ip1 -> ip1
I0428 20:27:05.976138  2927 net.cpp:124] Setting up ip1
I0428 20:27:05.976150  2927 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:05.976155  2927 net.cpp:139] Memory required for data: 29278800
I0428 20:27:05.976162  2927 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:05.976167  2927 net.cpp:86] Creating Layer relu1
I0428 20:27:05.976171  2927 net.cpp:408] relu1 <- ip1
I0428 20:27:05.976176  2927 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:05.977066  2927 net.cpp:124] Setting up relu1
I0428 20:27:05.977082  2927 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:05.977085  2927 net.cpp:139] Memory required for data: 29282800
I0428 20:27:05.977089  2927 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:27:05.977097  2927 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:27:05.977102  2927 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:27:05.977107  2927 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:27:05.977113  2927 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:27:05.977154  2927 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:27:05.977162  2927 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:05.977166  2927 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:05.977169  2927 net.cpp:139] Memory required for data: 29290800
I0428 20:27:05.977174  2927 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:05.977180  2927 net.cpp:86] Creating Layer accuracy
I0428 20:27:05.977183  2927 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:27:05.977187  2927 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:05.977192  2927 net.cpp:382] accuracy -> accuracy
I0428 20:27:05.977200  2927 net.cpp:124] Setting up accuracy
I0428 20:27:05.977205  2927 net.cpp:131] Top shape: (1)
I0428 20:27:05.977207  2927 net.cpp:139] Memory required for data: 29290804
I0428 20:27:05.977211  2927 layer_factory.hpp:77] Creating layer loss
I0428 20:27:05.977216  2927 net.cpp:86] Creating Layer loss
I0428 20:27:05.977219  2927 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:27:05.977223  2927 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:05.977227  2927 net.cpp:382] loss -> loss
I0428 20:27:05.977234  2927 layer_factory.hpp:77] Creating layer loss
I0428 20:27:05.977500  2927 net.cpp:124] Setting up loss
I0428 20:27:05.977511  2927 net.cpp:131] Top shape: (1)
I0428 20:27:05.977515  2927 net.cpp:134]     with loss weight 1
I0428 20:27:05.977522  2927 net.cpp:139] Memory required for data: 29290808
I0428 20:27:05.977526  2927 net.cpp:200] loss needs backward computation.
I0428 20:27:05.977530  2927 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:05.977535  2927 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:27:05.977538  2927 net.cpp:200] relu1 needs backward computation.
I0428 20:27:05.977542  2927 net.cpp:200] ip1 needs backward computation.
I0428 20:27:05.977555  2927 net.cpp:200] pool1 needs backward computation.
I0428 20:27:05.977562  2927 net.cpp:200] conv1 needs backward computation.
I0428 20:27:05.977571  2927 net.cpp:200] pool0 needs backward computation.
I0428 20:27:05.977579  2927 net.cpp:200] conv0 needs backward computation.
I0428 20:27:05.977583  2927 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:05.977588  2927 net.cpp:202] mnist does not need backward computation.
I0428 20:27:05.977591  2927 net.cpp:244] This network produces output accuracy
I0428 20:27:05.977596  2927 net.cpp:244] This network produces output loss
I0428 20:27:05.977617  2927 net.cpp:257] Network initialization done.
I0428 20:27:05.977654  2927 solver.cpp:56] Solver scaffolding done.
I0428 20:27:05.977962  2927 caffe.cpp:248] Starting Optimization
I0428 20:27:05.977972  2927 solver.cpp:273] Solving LeNet
I0428 20:27:05.977975  2927 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:05.978768  2927 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:05.994597  2927 blocking_queue.cpp:49] Waiting for data
I0428 20:27:06.069784  2940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:06.071125  2927 solver.cpp:398]     Test net output #0: accuracy = 0.1051
I0428 20:27:06.071146  2927 solver.cpp:398]     Test net output #1: loss = 2.3116 (* 1 = 2.3116 loss)
I0428 20:27:06.075477  2927 solver.cpp:219] Iteration 0 (0 iter/s, 0.0974563s/100 iters), loss = 2.3518
I0428 20:27:06.075515  2927 solver.cpp:238]     Train net output #0: loss = 2.3518 (* 1 = 2.3518 loss)
I0428 20:27:06.075526  2927 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:06.258607  2927 solver.cpp:219] Iteration 100 (546.17 iter/s, 0.183093s/100 iters), loss = 0.274571
I0428 20:27:06.258642  2927 solver.cpp:238]     Train net output #0: loss = 0.274571 (* 1 = 0.274571 loss)
I0428 20:27:06.258648  2927 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:06.441269  2927 solver.cpp:219] Iteration 200 (547.575 iter/s, 0.182623s/100 iters), loss = 0.18422
I0428 20:27:06.441293  2927 solver.cpp:238]     Train net output #0: loss = 0.18422 (* 1 = 0.18422 loss)
I0428 20:27:06.441299  2927 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:06.624321  2927 solver.cpp:219] Iteration 300 (546.408 iter/s, 0.183013s/100 iters), loss = 0.149706
I0428 20:27:06.624347  2927 solver.cpp:238]     Train net output #0: loss = 0.149706 (* 1 = 0.149706 loss)
I0428 20:27:06.624353  2927 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:06.807572  2927 solver.cpp:219] Iteration 400 (545.825 iter/s, 0.183209s/100 iters), loss = 0.125057
I0428 20:27:06.807598  2927 solver.cpp:238]     Train net output #0: loss = 0.125057 (* 1 = 0.125057 loss)
I0428 20:27:06.807603  2927 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:06.987968  2927 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:07.073652  2940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:07.076051  2927 solver.cpp:398]     Test net output #0: accuracy = 0.9592
I0428 20:27:07.076072  2927 solver.cpp:398]     Test net output #1: loss = 0.138245 (* 1 = 0.138245 loss)
I0428 20:27:07.077946  2927 solver.cpp:219] Iteration 500 (369.918 iter/s, 0.27033s/100 iters), loss = 0.153163
I0428 20:27:07.077970  2927 solver.cpp:238]     Train net output #0: loss = 0.153163 (* 1 = 0.153163 loss)
I0428 20:27:07.077993  2927 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:07.270293  2927 solver.cpp:219] Iteration 600 (520.001 iter/s, 0.192307s/100 iters), loss = 0.0787302
I0428 20:27:07.270326  2927 solver.cpp:238]     Train net output #0: loss = 0.0787301 (* 1 = 0.0787301 loss)
I0428 20:27:07.270335  2927 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:07.457146  2927 solver.cpp:219] Iteration 700 (535.314 iter/s, 0.186806s/100 iters), loss = 0.228135
I0428 20:27:07.457173  2927 solver.cpp:238]     Train net output #0: loss = 0.228135 (* 1 = 0.228135 loss)
I0428 20:27:07.457198  2927 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:07.643834  2927 solver.cpp:219] Iteration 800 (535.775 iter/s, 0.186646s/100 iters), loss = 0.329834
I0428 20:27:07.643863  2927 solver.cpp:238]     Train net output #0: loss = 0.329834 (* 1 = 0.329834 loss)
I0428 20:27:07.643884  2927 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:07.830075  2927 solver.cpp:219] Iteration 900 (537.065 iter/s, 0.186197s/100 iters), loss = 0.257006
I0428 20:27:07.830101  2927 solver.cpp:238]     Train net output #0: loss = 0.257006 (* 1 = 0.257006 loss)
I0428 20:27:07.830119  2927 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:07.896752  2939 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:08.025141  2927 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:08.026835  2927 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:08.028019  2927 solver.cpp:311] Iteration 1000, loss = 0.0934915
I0428 20:27:08.028050  2927 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:08.120213  2940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:08.123438  2927 solver.cpp:398]     Test net output #0: accuracy = 0.9705
I0428 20:27:08.123463  2927 solver.cpp:398]     Test net output #1: loss = 0.0910986 (* 1 = 0.0910986 loss)
I0428 20:27:08.123469  2927 solver.cpp:316] Optimization Done.
I0428 20:27:08.123473  2927 caffe.cpp:259] Optimization Done.
