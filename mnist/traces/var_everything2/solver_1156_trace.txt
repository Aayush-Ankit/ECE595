I0428 20:11:20.234912 32049 caffe.cpp:218] Using GPUs 0
I0428 20:11:20.264997 32049 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:20.722661 32049 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1156.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:20.722826 32049 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1156.prototxt
I0428 20:11:20.723176 32049 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:20.723206 32049 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:20.723289 32049 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:20.723354 32049 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:20.723435 32049 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:20.723469 32049 net.cpp:86] Creating Layer mnist
I0428 20:11:20.723477 32049 net.cpp:382] mnist -> data
I0428 20:11:20.723495 32049 net.cpp:382] mnist -> label
I0428 20:11:20.724424 32049 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:20.726763 32049 net.cpp:124] Setting up mnist
I0428 20:11:20.726794 32049 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:20.726816 32049 net.cpp:131] Top shape: 64 (64)
I0428 20:11:20.726819 32049 net.cpp:139] Memory required for data: 200960
I0428 20:11:20.726825 32049 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:20.726840 32049 net.cpp:86] Creating Layer conv0
I0428 20:11:20.726860 32049 net.cpp:408] conv0 <- data
I0428 20:11:20.726871 32049 net.cpp:382] conv0 -> conv0
I0428 20:11:20.955219 32049 net.cpp:124] Setting up conv0
I0428 20:11:20.955245 32049 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:20.955250 32049 net.cpp:139] Memory required for data: 3887360
I0428 20:11:20.955263 32049 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:20.955276 32049 net.cpp:86] Creating Layer pool0
I0428 20:11:20.955279 32049 net.cpp:408] pool0 <- conv0
I0428 20:11:20.955284 32049 net.cpp:382] pool0 -> pool0
I0428 20:11:20.955343 32049 net.cpp:124] Setting up pool0
I0428 20:11:20.955348 32049 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:20.955349 32049 net.cpp:139] Memory required for data: 4808960
I0428 20:11:20.955353 32049 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:20.955363 32049 net.cpp:86] Creating Layer conv1
I0428 20:11:20.955364 32049 net.cpp:408] conv1 <- pool0
I0428 20:11:20.955369 32049 net.cpp:382] conv1 -> conv1
I0428 20:11:20.957459 32049 net.cpp:124] Setting up conv1
I0428 20:11:20.957489 32049 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:20.957492 32049 net.cpp:139] Memory required for data: 5628160
I0428 20:11:20.957501 32049 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:20.957510 32049 net.cpp:86] Creating Layer pool1
I0428 20:11:20.957515 32049 net.cpp:408] pool1 <- conv1
I0428 20:11:20.957520 32049 net.cpp:382] pool1 -> pool1
I0428 20:11:20.957556 32049 net.cpp:124] Setting up pool1
I0428 20:11:20.957562 32049 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:20.957566 32049 net.cpp:139] Memory required for data: 5832960
I0428 20:11:20.957568 32049 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:20.957574 32049 net.cpp:86] Creating Layer ip1
I0428 20:11:20.957577 32049 net.cpp:408] ip1 <- pool1
I0428 20:11:20.957582 32049 net.cpp:382] ip1 -> ip1
I0428 20:11:20.957835 32049 net.cpp:124] Setting up ip1
I0428 20:11:20.957842 32049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:20.957845 32049 net.cpp:139] Memory required for data: 5839360
I0428 20:11:20.957852 32049 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:20.957859 32049 net.cpp:86] Creating Layer relu1
I0428 20:11:20.957862 32049 net.cpp:408] relu1 <- ip1
I0428 20:11:20.957866 32049 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:20.958056 32049 net.cpp:124] Setting up relu1
I0428 20:11:20.958065 32049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:20.958068 32049 net.cpp:139] Memory required for data: 5845760
I0428 20:11:20.958071 32049 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:20.958077 32049 net.cpp:86] Creating Layer ip2
I0428 20:11:20.958081 32049 net.cpp:408] ip2 <- ip1
I0428 20:11:20.958084 32049 net.cpp:382] ip2 -> ip2
I0428 20:11:20.958178 32049 net.cpp:124] Setting up ip2
I0428 20:11:20.958184 32049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:20.958187 32049 net.cpp:139] Memory required for data: 5852160
I0428 20:11:20.958194 32049 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:20.958199 32049 net.cpp:86] Creating Layer relu2
I0428 20:11:20.958201 32049 net.cpp:408] relu2 <- ip2
I0428 20:11:20.958205 32049 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:20.959033 32049 net.cpp:124] Setting up relu2
I0428 20:11:20.959044 32049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:20.959064 32049 net.cpp:139] Memory required for data: 5858560
I0428 20:11:20.959066 32049 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:20.959074 32049 net.cpp:86] Creating Layer ip3
I0428 20:11:20.959076 32049 net.cpp:408] ip3 <- ip2
I0428 20:11:20.959081 32049 net.cpp:382] ip3 -> ip3
I0428 20:11:20.959172 32049 net.cpp:124] Setting up ip3
I0428 20:11:20.959180 32049 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:20.959182 32049 net.cpp:139] Memory required for data: 5861120
I0428 20:11:20.959190 32049 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:20.959195 32049 net.cpp:86] Creating Layer relu3
I0428 20:11:20.959213 32049 net.cpp:408] relu3 <- ip3
I0428 20:11:20.959218 32049 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:20.959378 32049 net.cpp:124] Setting up relu3
I0428 20:11:20.959388 32049 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:20.959390 32049 net.cpp:139] Memory required for data: 5863680
I0428 20:11:20.959393 32049 layer_factory.hpp:77] Creating layer loss
I0428 20:11:20.959399 32049 net.cpp:86] Creating Layer loss
I0428 20:11:20.959403 32049 net.cpp:408] loss <- ip3
I0428 20:11:20.959406 32049 net.cpp:408] loss <- label
I0428 20:11:20.959411 32049 net.cpp:382] loss -> loss
I0428 20:11:20.959429 32049 layer_factory.hpp:77] Creating layer loss
I0428 20:11:20.959656 32049 net.cpp:124] Setting up loss
I0428 20:11:20.959664 32049 net.cpp:131] Top shape: (1)
I0428 20:11:20.959668 32049 net.cpp:134]     with loss weight 1
I0428 20:11:20.959683 32049 net.cpp:139] Memory required for data: 5863684
I0428 20:11:20.959686 32049 net.cpp:200] loss needs backward computation.
I0428 20:11:20.959691 32049 net.cpp:200] relu3 needs backward computation.
I0428 20:11:20.959693 32049 net.cpp:200] ip3 needs backward computation.
I0428 20:11:20.959697 32049 net.cpp:200] relu2 needs backward computation.
I0428 20:11:20.959698 32049 net.cpp:200] ip2 needs backward computation.
I0428 20:11:20.959702 32049 net.cpp:200] relu1 needs backward computation.
I0428 20:11:20.959703 32049 net.cpp:200] ip1 needs backward computation.
I0428 20:11:20.959707 32049 net.cpp:200] pool1 needs backward computation.
I0428 20:11:20.959709 32049 net.cpp:200] conv1 needs backward computation.
I0428 20:11:20.959727 32049 net.cpp:200] pool0 needs backward computation.
I0428 20:11:20.959729 32049 net.cpp:200] conv0 needs backward computation.
I0428 20:11:20.959748 32049 net.cpp:202] mnist does not need backward computation.
I0428 20:11:20.959750 32049 net.cpp:244] This network produces output loss
I0428 20:11:20.959759 32049 net.cpp:257] Network initialization done.
I0428 20:11:20.960147 32049 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1156.prototxt
I0428 20:11:20.960203 32049 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:20.960291 32049 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:20.960371 32049 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:20.960410 32049 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:20.960424 32049 net.cpp:86] Creating Layer mnist
I0428 20:11:20.960430 32049 net.cpp:382] mnist -> data
I0428 20:11:20.960438 32049 net.cpp:382] mnist -> label
I0428 20:11:20.960539 32049 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:20.962616 32049 net.cpp:124] Setting up mnist
I0428 20:11:20.962643 32049 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:20.962663 32049 net.cpp:131] Top shape: 100 (100)
I0428 20:11:20.962666 32049 net.cpp:139] Memory required for data: 314000
I0428 20:11:20.962669 32049 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:20.962702 32049 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:20.962707 32049 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:20.962712 32049 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:20.962718 32049 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:20.962776 32049 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:20.962781 32049 net.cpp:131] Top shape: 100 (100)
I0428 20:11:20.962785 32049 net.cpp:131] Top shape: 100 (100)
I0428 20:11:20.962788 32049 net.cpp:139] Memory required for data: 314800
I0428 20:11:20.962791 32049 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:20.962801 32049 net.cpp:86] Creating Layer conv0
I0428 20:11:20.962805 32049 net.cpp:408] conv0 <- data
I0428 20:11:20.962810 32049 net.cpp:382] conv0 -> conv0
I0428 20:11:20.964577 32049 net.cpp:124] Setting up conv0
I0428 20:11:20.964606 32049 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:20.964608 32049 net.cpp:139] Memory required for data: 6074800
I0428 20:11:20.964617 32049 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:20.964624 32049 net.cpp:86] Creating Layer pool0
I0428 20:11:20.964627 32049 net.cpp:408] pool0 <- conv0
I0428 20:11:20.964632 32049 net.cpp:382] pool0 -> pool0
I0428 20:11:20.964666 32049 net.cpp:124] Setting up pool0
I0428 20:11:20.964671 32049 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:20.964674 32049 net.cpp:139] Memory required for data: 7514800
I0428 20:11:20.964676 32049 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:20.964685 32049 net.cpp:86] Creating Layer conv1
I0428 20:11:20.964689 32049 net.cpp:408] conv1 <- pool0
I0428 20:11:20.964694 32049 net.cpp:382] conv1 -> conv1
I0428 20:11:20.966514 32049 net.cpp:124] Setting up conv1
I0428 20:11:20.966542 32049 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:20.966547 32049 net.cpp:139] Memory required for data: 8794800
I0428 20:11:20.966555 32049 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:20.966574 32049 net.cpp:86] Creating Layer pool1
I0428 20:11:20.966578 32049 net.cpp:408] pool1 <- conv1
I0428 20:11:20.966583 32049 net.cpp:382] pool1 -> pool1
I0428 20:11:20.966650 32049 net.cpp:124] Setting up pool1
I0428 20:11:20.966655 32049 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:20.966657 32049 net.cpp:139] Memory required for data: 9114800
I0428 20:11:20.966660 32049 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:20.966666 32049 net.cpp:86] Creating Layer ip1
I0428 20:11:20.966670 32049 net.cpp:408] ip1 <- pool1
I0428 20:11:20.966675 32049 net.cpp:382] ip1 -> ip1
I0428 20:11:20.966884 32049 net.cpp:124] Setting up ip1
I0428 20:11:20.966892 32049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:20.966917 32049 net.cpp:139] Memory required for data: 9124800
I0428 20:11:20.966927 32049 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:20.966931 32049 net.cpp:86] Creating Layer relu1
I0428 20:11:20.966934 32049 net.cpp:408] relu1 <- ip1
I0428 20:11:20.966941 32049 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:20.967161 32049 net.cpp:124] Setting up relu1
I0428 20:11:20.967175 32049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:20.967177 32049 net.cpp:139] Memory required for data: 9134800
I0428 20:11:20.967180 32049 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:20.967203 32049 net.cpp:86] Creating Layer ip2
I0428 20:11:20.967221 32049 net.cpp:408] ip2 <- ip1
I0428 20:11:20.967228 32049 net.cpp:382] ip2 -> ip2
I0428 20:11:20.967361 32049 net.cpp:124] Setting up ip2
I0428 20:11:20.967370 32049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:20.967372 32049 net.cpp:139] Memory required for data: 9144800
I0428 20:11:20.967377 32049 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:20.967382 32049 net.cpp:86] Creating Layer relu2
I0428 20:11:20.967386 32049 net.cpp:408] relu2 <- ip2
I0428 20:11:20.967389 32049 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:20.967541 32049 net.cpp:124] Setting up relu2
I0428 20:11:20.967550 32049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:20.967553 32049 net.cpp:139] Memory required for data: 9154800
I0428 20:11:20.967556 32049 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:20.967561 32049 net.cpp:86] Creating Layer ip3
I0428 20:11:20.967564 32049 net.cpp:408] ip3 <- ip2
I0428 20:11:20.967571 32049 net.cpp:382] ip3 -> ip3
I0428 20:11:20.967696 32049 net.cpp:124] Setting up ip3
I0428 20:11:20.967710 32049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:20.967712 32049 net.cpp:139] Memory required for data: 9158800
I0428 20:11:20.967721 32049 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:20.967727 32049 net.cpp:86] Creating Layer relu3
I0428 20:11:20.967731 32049 net.cpp:408] relu3 <- ip3
I0428 20:11:20.967736 32049 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:20.968564 32049 net.cpp:124] Setting up relu3
I0428 20:11:20.968591 32049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:20.968595 32049 net.cpp:139] Memory required for data: 9162800
I0428 20:11:20.968598 32049 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:20.968603 32049 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:20.968606 32049 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:20.968612 32049 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:20.968619 32049 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:20.968669 32049 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:20.968674 32049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:20.968678 32049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:20.968682 32049 net.cpp:139] Memory required for data: 9170800
I0428 20:11:20.968684 32049 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:20.968693 32049 net.cpp:86] Creating Layer accuracy
I0428 20:11:20.968696 32049 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:20.968701 32049 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:20.968706 32049 net.cpp:382] accuracy -> accuracy
I0428 20:11:20.968713 32049 net.cpp:124] Setting up accuracy
I0428 20:11:20.968717 32049 net.cpp:131] Top shape: (1)
I0428 20:11:20.968731 32049 net.cpp:139] Memory required for data: 9170804
I0428 20:11:20.968734 32049 layer_factory.hpp:77] Creating layer loss
I0428 20:11:20.968744 32049 net.cpp:86] Creating Layer loss
I0428 20:11:20.968752 32049 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:20.968756 32049 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:20.968760 32049 net.cpp:382] loss -> loss
I0428 20:11:20.968766 32049 layer_factory.hpp:77] Creating layer loss
I0428 20:11:20.969018 32049 net.cpp:124] Setting up loss
I0428 20:11:20.969027 32049 net.cpp:131] Top shape: (1)
I0428 20:11:20.969035 32049 net.cpp:134]     with loss weight 1
I0428 20:11:20.969050 32049 net.cpp:139] Memory required for data: 9170808
I0428 20:11:20.969055 32049 net.cpp:200] loss needs backward computation.
I0428 20:11:20.969059 32049 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:20.969063 32049 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:20.969065 32049 net.cpp:200] relu3 needs backward computation.
I0428 20:11:20.969069 32049 net.cpp:200] ip3 needs backward computation.
I0428 20:11:20.969075 32049 net.cpp:200] relu2 needs backward computation.
I0428 20:11:20.969079 32049 net.cpp:200] ip2 needs backward computation.
I0428 20:11:20.969085 32049 net.cpp:200] relu1 needs backward computation.
I0428 20:11:20.969087 32049 net.cpp:200] ip1 needs backward computation.
I0428 20:11:20.969090 32049 net.cpp:200] pool1 needs backward computation.
I0428 20:11:20.969108 32049 net.cpp:200] conv1 needs backward computation.
I0428 20:11:20.969112 32049 net.cpp:200] pool0 needs backward computation.
I0428 20:11:20.969115 32049 net.cpp:200] conv0 needs backward computation.
I0428 20:11:20.969118 32049 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:20.969123 32049 net.cpp:202] mnist does not need backward computation.
I0428 20:11:20.969126 32049 net.cpp:244] This network produces output accuracy
I0428 20:11:20.969130 32049 net.cpp:244] This network produces output loss
I0428 20:11:20.969139 32049 net.cpp:257] Network initialization done.
I0428 20:11:20.969192 32049 solver.cpp:56] Solver scaffolding done.
I0428 20:11:20.969569 32049 caffe.cpp:248] Starting Optimization
I0428 20:11:20.969574 32049 solver.cpp:273] Solving LeNet
I0428 20:11:20.969578 32049 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:20.970482 32049 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:20.976729 32049 blocking_queue.cpp:49] Waiting for data
I0428 20:11:21.042807 32056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:21.043442 32049 solver.cpp:398]     Test net output #0: accuracy = 0.1376
I0428 20:11:21.043474 32049 solver.cpp:398]     Test net output #1: loss = 2.31282 (* 1 = 2.31282 loss)
I0428 20:11:21.047078 32049 solver.cpp:219] Iteration 0 (0 iter/s, 0.0774564s/100 iters), loss = 2.31647
I0428 20:11:21.047118 32049 solver.cpp:238]     Train net output #0: loss = 2.31647 (* 1 = 2.31647 loss)
I0428 20:11:21.047132 32049 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:21.168040 32049 solver.cpp:219] Iteration 100 (827.056 iter/s, 0.120911s/100 iters), loss = 0.574168
I0428 20:11:21.168081 32049 solver.cpp:238]     Train net output #0: loss = 0.574168 (* 1 = 0.574168 loss)
I0428 20:11:21.168087 32049 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:21.287926 32049 solver.cpp:219] Iteration 200 (834.489 iter/s, 0.119834s/100 iters), loss = 0.51489
I0428 20:11:21.287951 32049 solver.cpp:238]     Train net output #0: loss = 0.51489 (* 1 = 0.51489 loss)
I0428 20:11:21.287958 32049 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:21.407776 32049 solver.cpp:219] Iteration 300 (834.619 iter/s, 0.119815s/100 iters), loss = 0.216691
I0428 20:11:21.407801 32049 solver.cpp:238]     Train net output #0: loss = 0.216691 (* 1 = 0.216691 loss)
I0428 20:11:21.407824 32049 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:21.542642 32049 solver.cpp:219] Iteration 400 (741.708 iter/s, 0.134824s/100 iters), loss = 0.345988
I0428 20:11:21.542690 32049 solver.cpp:238]     Train net output #0: loss = 0.345988 (* 1 = 0.345988 loss)
I0428 20:11:21.542701 32049 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:21.675694 32049 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:21.737511 32056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:21.738525 32049 solver.cpp:398]     Test net output #0: accuracy = 0.878
I0428 20:11:21.738553 32049 solver.cpp:398]     Test net output #1: loss = 0.332558 (* 1 = 0.332558 loss)
I0428 20:11:21.739811 32049 solver.cpp:219] Iteration 500 (507.334 iter/s, 0.197109s/100 iters), loss = 0.384962
I0428 20:11:21.739861 32049 solver.cpp:238]     Train net output #0: loss = 0.384962 (* 1 = 0.384962 loss)
I0428 20:11:21.739869 32049 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:21.878199 32049 solver.cpp:219] Iteration 600 (722.935 iter/s, 0.138325s/100 iters), loss = 0.229466
I0428 20:11:21.878244 32049 solver.cpp:238]     Train net output #0: loss = 0.229466 (* 1 = 0.229466 loss)
I0428 20:11:21.878257 32049 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:22.016851 32049 solver.cpp:219] Iteration 700 (721.535 iter/s, 0.138593s/100 iters), loss = 0.531008
I0428 20:11:22.016891 32049 solver.cpp:238]     Train net output #0: loss = 0.531009 (* 1 = 0.531009 loss)
I0428 20:11:22.016902 32049 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:22.156734 32049 solver.cpp:219] Iteration 800 (715.159 iter/s, 0.139829s/100 iters), loss = 0.480321
I0428 20:11:22.156786 32049 solver.cpp:238]     Train net output #0: loss = 0.480321 (* 1 = 0.480321 loss)
I0428 20:11:22.156801 32049 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:22.293130 32049 solver.cpp:219] Iteration 900 (733.491 iter/s, 0.136334s/100 iters), loss = 0.302096
I0428 20:11:22.293167 32049 solver.cpp:238]     Train net output #0: loss = 0.302096 (* 1 = 0.302096 loss)
I0428 20:11:22.293177 32049 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:22.338382 32055 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:22.435665 32049 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:22.437841 32049 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:22.439090 32049 solver.cpp:311] Iteration 1000, loss = 0.395081
I0428 20:11:22.439119 32049 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:22.514967 32056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:22.515635 32049 solver.cpp:398]     Test net output #0: accuracy = 0.8844
I0428 20:11:22.515658 32049 solver.cpp:398]     Test net output #1: loss = 0.294426 (* 1 = 0.294426 loss)
I0428 20:11:22.515666 32049 solver.cpp:316] Optimization Done.
I0428 20:11:22.515669 32049 caffe.cpp:259] Optimization Done.
